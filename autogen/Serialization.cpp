
#include <ThreadStruct.hpp>
#include <nlohmann/json.hpp>

// for convenience
using json = nlohmann::json;

#include <Serialization.hpp>
#include <Server.hpp>
#include <Synchronization.hpp>


    json serialize_VkBaseOutStructure(VkBaseOutStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XNrEbEv=json({});
    
        if (name.pNext==NULL){
            return_XNrEbEv["null"]=true;
            return return_XNrEbEv;
        }
        return_XNrEbEv=[&]() {
    json return_UGhiFRn=json({});
    return serialize_VkBaseOutStructure(*name.pNext);}();
return return_XNrEbEv;}();
return result;}

    VkBaseOutStructure deserialize_VkBaseOutStructure(json name){
        auto result=VkBaseOutStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    [&]() {
*(result.pNext)=deserialize_VkBaseOutStructure(name["members"]["pNext"]);}();
}();
return result;}

    json serialize_VkBaseInStructure(VkBaseInStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QUfwCjC=json({});
    
        if (name.pNext==NULL){
            return_QUfwCjC["null"]=true;
            return return_QUfwCjC;
        }
        return_QUfwCjC=[&]() {
    json return_MZXBSnY=json({});
    return serialize_VkBaseInStructure(*name.pNext);}();
return return_QUfwCjC;}();
return result;}

    VkBaseInStructure deserialize_VkBaseInStructure(json name){
        auto result=VkBaseInStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
VkBaseInStructure* temp_tUiydgg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tUiydgg=NULL;
        }
    [&]() {
*(temp_tUiydgg)=deserialize_VkBaseInStructure(name["members"]["pNext"]);}();
}();result.pNext=temp_tUiydgg;}();
return result;}

    json serialize_VkOffset2D(VkOffset2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_uKkQOsJ=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_TSGXZoX=json({});
    return serialize_int32_t(name.y);}();
return result;}

    VkOffset2D deserialize_VkOffset2D(json name){
        auto result=VkOffset2D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
return result;}

    json serialize_VkOffset3D(VkOffset3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_uKkQOsJ=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_TSGXZoX=json({});
    return serialize_int32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_VVkElEv=json({});
    return serialize_int32_t(name.z);}();
return result;}

    VkOffset3D deserialize_VkOffset3D(json name){
        auto result=VkOffset3D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_int32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkExtent2D(VkExtent2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
return result;}

    VkExtent2D deserialize_VkExtent2D(json name){
        auto result=VkExtent2D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
return result;}

    json serialize_VkExtent3D(VkExtent3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_hKmcNDm=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkExtent3D deserialize_VkExtent3D(json name){
        auto result=VkExtent3D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkViewport(VkViewport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ftpUCfE=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_AMPASAz=json({});
    return serialize_float(name.y);}();
result["members"]["width"]=[&]() {
    json return_JAbzBDx=json({});
    return serialize_float(name.width);}();
result["members"]["height"]=[&]() {
    json return_NrSyEie=json({});
    return serialize_float(name.height);}();
result["members"]["minDepth"]=[&]() {
    json return_mCOqyNi=json({});
    return serialize_float(name.minDepth);}();
result["members"]["maxDepth"]=[&]() {
    json return_TXnzMfE=json({});
    return serialize_float(name.maxDepth);}();
return result;}

    VkViewport deserialize_VkViewport(json name){
        auto result=VkViewport();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
[&]() {
result.width=deserialize_float(name["members"]["width"]);}();
[&]() {
result.height=deserialize_float(name["members"]["height"]);}();
[&]() {
result.minDepth=deserialize_float(name["members"]["minDepth"]);}();
[&]() {
result.maxDepth=deserialize_float(name["members"]["maxDepth"]);}();
return result;}

    json serialize_VkRect2D(VkRect2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_tkEhuuX=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_xiSBWpQ=json({});
    return serialize_VkExtent2D(name.extent);}();
return result;}

    VkRect2D deserialize_VkRect2D(json name){
        auto result=VkRect2D();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
return result;}

    json serialize_VkClearRect(VkClearRect name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rect"]=[&]() {
    json return_TLNVYMZ=json({});
    return serialize_VkRect2D(name.rect);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_ZZfGoEh=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_NOQkDfJ=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkClearRect deserialize_VkClearRect(json name){
        auto result=VkClearRect();
    
[&]() {
result.rect=deserialize_VkRect2D(name["members"]["rect"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkComponentMapping(VkComponentMapping name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["r"]=[&]() {
    json return_KuPMtHR=json({});
    return serialize_VkComponentSwizzle(name.r);}();
result["members"]["g"]=[&]() {
    json return_UHVgnzR=json({});
    return serialize_VkComponentSwizzle(name.g);}();
result["members"]["b"]=[&]() {
    json return_ZMOIzZc=json({});
    return serialize_VkComponentSwizzle(name.b);}();
result["members"]["a"]=[&]() {
    json return_rNWocDq=json({});
    return serialize_VkComponentSwizzle(name.a);}();
return result;}

    VkComponentMapping deserialize_VkComponentMapping(json name){
        auto result=VkComponentMapping();
    
[&]() {
result.r=deserialize_VkComponentSwizzle(name["members"]["r"]);}();
[&]() {
result.g=deserialize_VkComponentSwizzle(name["members"]["g"]);}();
[&]() {
result.b=deserialize_VkComponentSwizzle(name["members"]["b"]);}();
[&]() {
result.a=deserialize_VkComponentSwizzle(name["members"]["a"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties(VkPhysicalDeviceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["apiVersion"]=[&]() {
    json return_BPpCOEn=json({});
    return serialize_uint32_t(name.apiVersion);}();
result["members"]["driverVersion"]=[&]() {
    json return_AtwUTJR=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_buNXFan=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_MQsAsRj=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["deviceType"]=[&]() {
    json return_ouZitux=json({});
    return serialize_VkPhysicalDeviceType(name.deviceType);}();
result["members"]["deviceName"]=[&]() {
    json return_iZkSbCG=json({});
    
        return_iZkSbCG["members"]={};
        for(int iZkSbCG=0; iZkSbCG < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; iZkSbCG++){
            json temp;
            temp=[&]() {
    json return_WVohPxk=json({});
    return serialize_char(name.deviceName[iZkSbCG]);}();
            return_iZkSbCG["members"][std::to_string(iZkSbCG)].push_back(temp);
        }
        return return_iZkSbCG;
        }();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_VrGSmxY=json({});
    
        return_VrGSmxY["members"]={};
        for(int VrGSmxY=0; VrGSmxY < VK_UUID_SIZE; VrGSmxY++){
            json temp;
            temp=[&]() {
    json return_JfHjXIm=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[VrGSmxY]);}();
            return_VrGSmxY["members"][std::to_string(VrGSmxY)].push_back(temp);
        }
        return return_VrGSmxY;
        }();
result["members"]["limits"]=[&]() {
    json return_uuzFdbC=json({});
    return serialize_VkPhysicalDeviceLimits(name.limits);}();
result["members"]["sparseProperties"]=[&]() {
    json return_XhhAKhc=json({});
    return serialize_VkPhysicalDeviceSparseProperties(name.sparseProperties);}();
return result;}

    VkPhysicalDeviceProperties deserialize_VkPhysicalDeviceProperties(json name){
        auto result=VkPhysicalDeviceProperties();
    
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.deviceType=deserialize_VkPhysicalDeviceType(name["members"]["deviceType"]);}();
[&]() {

        for (int oeqOAzm=0; oeqOAzm < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; oeqOAzm++){
            [&]() {
result.deviceName[oeqOAzm]=deserialize_char(name["members"]["deviceName"]["members"][oeqOAzm]);}();;
        }
        }();
[&]() {

        for (int KuCUrkQ=0; KuCUrkQ < VK_UUID_SIZE; KuCUrkQ++){
            [&]() {
result.pipelineCacheUUID[KuCUrkQ]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][KuCUrkQ]);}();;
        }
        }();
[&]() {
result.limits=deserialize_VkPhysicalDeviceLimits(name["members"]["limits"]);}();
[&]() {
result.sparseProperties=deserialize_VkPhysicalDeviceSparseProperties(name["members"]["sparseProperties"]);}();
return result;}

    json serialize_VkExtensionProperties(VkExtensionProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["extensionName"]=[&]() {
    json return_DnpwOXw=json({});
    
        return_DnpwOXw["members"]={};
        for(int DnpwOXw=0; DnpwOXw < VK_MAX_EXTENSION_NAME_SIZE; DnpwOXw++){
            json temp;
            temp=[&]() {
    json return_kjQUGLs=json({});
    return serialize_char(name.extensionName[DnpwOXw]);}();
            return_DnpwOXw["members"][std::to_string(DnpwOXw)].push_back(temp);
        }
        return return_DnpwOXw;
        }();
result["members"]["specVersion"]=[&]() {
    json return_GWtBEpX=json({});
    return serialize_uint32_t(name.specVersion);}();
return result;}

    VkExtensionProperties deserialize_VkExtensionProperties(json name){
        auto result=VkExtensionProperties();
    
[&]() {

        for (int iAuFQJq=0; iAuFQJq < VK_MAX_EXTENSION_NAME_SIZE; iAuFQJq++){
            [&]() {
result.extensionName[iAuFQJq]=deserialize_char(name["members"]["extensionName"]["members"][iAuFQJq]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
return result;}

    json serialize_VkLayerProperties(VkLayerProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["layerName"]=[&]() {
    json return_HNDGtHU=json({});
    
        return_HNDGtHU["members"]={};
        for(int HNDGtHU=0; HNDGtHU < VK_MAX_EXTENSION_NAME_SIZE; HNDGtHU++){
            json temp;
            temp=[&]() {
    json return_XSZgDes=json({});
    return serialize_char(name.layerName[HNDGtHU]);}();
            return_HNDGtHU["members"][std::to_string(HNDGtHU)].push_back(temp);
        }
        return return_HNDGtHU;
        }();
result["members"]["specVersion"]=[&]() {
    json return_GWtBEpX=json({});
    return serialize_uint32_t(name.specVersion);}();
result["members"]["implementationVersion"]=[&]() {
    json return_cLpdSFX=json({});
    return serialize_uint32_t(name.implementationVersion);}();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
return result;}

    VkLayerProperties deserialize_VkLayerProperties(json name){
        auto result=VkLayerProperties();
    
[&]() {

        for (int qoeMuQj=0; qoeMuQj < VK_MAX_EXTENSION_NAME_SIZE; qoeMuQj++){
            [&]() {
result.layerName[qoeMuQj]=deserialize_char(name["members"]["layerName"]["members"][qoeMuQj]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
[&]() {
result.implementationVersion=deserialize_uint32_t(name["members"]["implementationVersion"]);}();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
return result;}

    json serialize_VkApplicationInfo(VkApplicationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pApplicationName"]=[&]() {
    json return_UJkxGLA=json({});
    
        if (name.pApplicationName==NULL){
            return_UJkxGLA["null"]=true;
            return return_UJkxGLA;
        }
        return serialize_char_p(name.pApplicationName);
}();
result["members"]["applicationVersion"]=[&]() {
    json return_zIyymPm=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["pEngineName"]=[&]() {
    json return_ehZpgMH=json({});
    
        if (name.pEngineName==NULL){
            return_ehZpgMH["null"]=true;
            return return_ehZpgMH;
        }
        return serialize_char_p(name.pEngineName);
}();
result["members"]["engineVersion"]=[&]() {
    json return_xoEodnq=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_BPpCOEn=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkApplicationInfo deserialize_VkApplicationInfo(json name){
        auto result=VkApplicationInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
char* temp_eUXkbUS;[&]() {

        if (name["members"]["pApplicationName"].contains("null")){
        temp_eUXkbUS=NULL;
        }
    temp_eUXkbUS=deserialize_char_p(name["members"]["pApplicationName"]);
}();result.pApplicationName=temp_eUXkbUS;}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
char* temp_WSxGkvk;[&]() {

        if (name["members"]["pEngineName"].contains("null")){
        temp_WSxGkvk=NULL;
        }
    temp_WSxGkvk=deserialize_char_p(name["members"]["pEngineName"]);
}();result.pEngineName=temp_WSxGkvk;}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkAllocationCallbacks(VkAllocationCallbacks name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pUserData"]=[&]() {
    json return_NIpboad=json({});
    
        if (name.pUserData==NULL){
            return_NIpboad["null"]=true;
            return return_NIpboad;
        }
        return serialize_void_p(name.pUserData);
}();
result["members"]["pfnAllocation"]=[&]() {
    json return_nXqkUuY=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkAllocationFunction(name.pfnAllocation);
        #endif
        }();
result["members"]["pfnReallocation"]=[&]() {
    json return_jodbkJA=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkReallocationFunction(name.pfnReallocation);
        #endif
        }();
result["members"]["pfnFree"]=[&]() {
    json return_bjINTrb=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkFreeFunction(name.pfnFree);
        #endif
        }();
result["members"]["pfnInternalAllocation"]=[&]() {
    json return_ORoxeqh=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalAllocationNotification(name.pfnInternalAllocation);
        #endif
        }();
result["members"]["pfnInternalFree"]=[&]() {
    json return_GJfXlmJ=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalFreeNotification(name.pfnInternalFree);
        #endif
        }();
return result;}
typedef struct {
void* pUserData;
uintptr_t PFN_vkAllocationFunction_id;
uintptr_t PFN_vkReallocationFunction_id;
uintptr_t PFN_vkFreeFunction_id;
uintptr_t PFN_vkInternalAllocationNotification_id;
uintptr_t PFN_vkInternalFreeNotification_id;
} VkAllocationCallbacks_struct;

    VkAllocationCallbacks deserialize_VkAllocationCallbacks(json name){
        auto result=VkAllocationCallbacks();
    
auto _struct = new VkAllocationCallbacks_struct;
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
[&]() {

        #ifndef CLIENT
        result.pfnAllocation=deserialize_PFN_vkAllocationFunction(name["members"]["pfnAllocation"]);
        #endif
        }();
_struct->PFN_vkAllocationFunction_id=name["members"]["pfnAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnReallocation=deserialize_PFN_vkReallocationFunction(name["members"]["pfnReallocation"]);
        #endif
        }();
_struct->PFN_vkReallocationFunction_id=name["members"]["pfnReallocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnFree=deserialize_PFN_vkFreeFunction(name["members"]["pfnFree"]);
        #endif
        }();
_struct->PFN_vkFreeFunction_id=name["members"]["pfnFree"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalAllocation=deserialize_PFN_vkInternalAllocationNotification(name["members"]["pfnInternalAllocation"]);
        #endif
        }();
_struct->PFN_vkInternalAllocationNotification_id=name["members"]["pfnInternalAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalFree=deserialize_PFN_vkInternalFreeNotification(name["members"]["pfnInternalFree"]);
        #endif
        }();
_struct->PFN_vkInternalFreeNotification_id=name["members"]["pfnInternalFree"]["id"];
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceQueueCreateInfo(VkDeviceQueueCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cItAUvx=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_cQXidFT=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueCount"]=[&]() {
    json return_ikAkYxI=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["pQueuePriorities"]=[&]() {
    json return_LXnnDMb=json({});
    
        if (name.pQueuePriorities==NULL){
            return_LXnnDMb["null"]=true;
            return return_LXnnDMb;
        }
        
        return_LXnnDMb["members"]={};
        for(int LXnnDMb=0; LXnnDMb < name.queueCount; LXnnDMb++){
            json temp;
            temp=[&]() {
    json return_JXtboDd=json({});
    return serialize_float(name.pQueuePriorities[LXnnDMb]);}();
            return_LXnnDMb["members"][std::to_string(LXnnDMb)].push_back(temp);
        }
        return return_LXnnDMb;
        }();
return result;}

    VkDeviceQueueCreateInfo deserialize_VkDeviceQueueCreateInfo(json name){
        auto result=VkDeviceQueueCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
float* temp_qtVUpuF;[&]() {

        if (name["members"]["pQueuePriorities"].contains("null")){
        temp_qtVUpuF=NULL;
        }
    temp_qtVUpuF=(float*)malloc(result.queueCount*sizeof(float));
        for (int tNGFEma=0; tNGFEma < result.queueCount; tNGFEma++){
            [&]() {
temp_qtVUpuF[tNGFEma]=deserialize_float(name["members"]["pQueuePriorities"]["members"][tNGFEma]);}();;
        }
        }();result.pQueuePriorities=temp_qtVUpuF;}();
return result;}

    json serialize_VkDeviceCreateInfo(VkDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vbOIAKc=json({});
    return serialize_VkDeviceCreateFlags(name.flags);}();
result["members"]["queueCreateInfoCount"]=[&]() {
    json return_LGcAYti=json({});
    return serialize_uint32_t(name.queueCreateInfoCount);}();
result["members"]["pQueueCreateInfos"]=[&]() {
    json return_psXhtaG=json({});
    
        if (name.pQueueCreateInfos==NULL){
            return_psXhtaG["null"]=true;
            return return_psXhtaG;
        }
        
        return_psXhtaG["members"]={};
        for(int psXhtaG=0; psXhtaG < name.queueCreateInfoCount; psXhtaG++){
            json temp;
            temp=[&]() {
    json return_DLfAGAw=json({});
    return serialize_VkDeviceQueueCreateInfo(name.pQueueCreateInfos[psXhtaG]);}();
            return_psXhtaG["members"][std::to_string(psXhtaG)].push_back(temp);
        }
        return return_psXhtaG;
        }();
result["members"]["enabledLayerCount"]=[&]() {
    json return_ICNeTct=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_eEaxNMa=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_eEaxNMa["null"]=true;
            return return_eEaxNMa;
        }
        
        return_eEaxNMa["members"]={};
        for(int eEaxNMa=0; eEaxNMa < name.enabledLayerCount; eEaxNMa++){
            json temp;
            temp=[&]() {
    json return_TxXLWYQ=json({});
    
        if (name.ppEnabledLayerNames[eEaxNMa]==NULL){
            return_TxXLWYQ["null"]=true;
            return return_TxXLWYQ;
        }
        return serialize_char_p(name.ppEnabledLayerNames[eEaxNMa]);
}();
            return_eEaxNMa["members"][std::to_string(eEaxNMa)].push_back(temp);
        }
        return return_eEaxNMa;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_evnhuwc=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_RlySFQw=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_RlySFQw["null"]=true;
            return return_RlySFQw;
        }
        
        return_RlySFQw["members"]={};
        for(int RlySFQw=0; RlySFQw < name.enabledExtensionCount; RlySFQw++){
            json temp;
            temp=[&]() {
    json return_QTZhrcX=json({});
    
        if (name.ppEnabledExtensionNames[RlySFQw]==NULL){
            return_QTZhrcX["null"]=true;
            return return_QTZhrcX;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[RlySFQw]);
}();
            return_RlySFQw["members"][std::to_string(RlySFQw)].push_back(temp);
        }
        return return_RlySFQw;
        }();
result["members"]["pEnabledFeatures"]=[&]() {
    json return_jZRMnFL=json({});
    
        if (name.pEnabledFeatures==NULL){
            return_jZRMnFL["null"]=true;
            return return_jZRMnFL;
        }
        return_jZRMnFL=[&]() {
    json return_gHOGgMt=json({});
    return serialize_VkPhysicalDeviceFeatures(*name.pEnabledFeatures);}();
return return_jZRMnFL;}();
return result;}

    VkDeviceCreateInfo deserialize_VkDeviceCreateInfo(json name){
        auto result=VkDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDeviceCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueCreateInfoCount=deserialize_uint32_t(name["members"]["queueCreateInfoCount"]);}();
[&]() {
VkDeviceQueueCreateInfo* temp_UrWAEoB;[&]() {

        if (name["members"]["pQueueCreateInfos"].contains("null")){
        temp_UrWAEoB=NULL;
        }
    temp_UrWAEoB=(VkDeviceQueueCreateInfo*)malloc(result.queueCreateInfoCount*sizeof(VkDeviceQueueCreateInfo));
        for (int pdTtsoN=0; pdTtsoN < result.queueCreateInfoCount; pdTtsoN++){
            [&]() {
temp_UrWAEoB[pdTtsoN]=deserialize_VkDeviceQueueCreateInfo(name["members"]["pQueueCreateInfos"]["members"][pdTtsoN]);}();;
        }
        }();result.pQueueCreateInfos=temp_UrWAEoB;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_XGUPqhP;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_XGUPqhP=NULL;
        }
    temp_XGUPqhP=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int jHLOrKQ=0; jHLOrKQ < result.enabledLayerCount; jHLOrKQ++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][jHLOrKQ].contains("null")){
        temp_XGUPqhP[jHLOrKQ]=NULL;
        }
    temp_XGUPqhP[jHLOrKQ]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][jHLOrKQ]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_XGUPqhP;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_uRPfOHC;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_uRPfOHC=NULL;
        }
    temp_uRPfOHC=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int EKNescd=0; EKNescd < result.enabledExtensionCount; EKNescd++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][EKNescd].contains("null")){
        temp_uRPfOHC[EKNescd]=NULL;
        }
    temp_uRPfOHC[EKNescd]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][EKNescd]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_uRPfOHC;}();
[&]() {
VkPhysicalDeviceFeatures* temp_OzJJsfe;[&]() {

        if (name["members"]["pEnabledFeatures"].contains("null")){
        temp_OzJJsfe=NULL;
        }
    [&]() {
*(temp_OzJJsfe)=deserialize_VkPhysicalDeviceFeatures(name["members"]["pEnabledFeatures"]);}();
}();result.pEnabledFeatures=temp_OzJJsfe;}();
return result;}

    json serialize_VkInstanceCreateInfo(VkInstanceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hUANzqZ=json({});
    return serialize_VkInstanceCreateFlags(name.flags);}();
result["members"]["pApplicationInfo"]=[&]() {
    json return_DHKvaWt=json({});
    
        if (name.pApplicationInfo==NULL){
            return_DHKvaWt["null"]=true;
            return return_DHKvaWt;
        }
        return_DHKvaWt=[&]() {
    json return_pqmTxYu=json({});
    return serialize_VkApplicationInfo(*name.pApplicationInfo);}();
return return_DHKvaWt;}();
result["members"]["enabledLayerCount"]=[&]() {
    json return_ICNeTct=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_eEaxNMa=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_eEaxNMa["null"]=true;
            return return_eEaxNMa;
        }
        
        return_eEaxNMa["members"]={};
        for(int eEaxNMa=0; eEaxNMa < name.enabledLayerCount; eEaxNMa++){
            json temp;
            temp=[&]() {
    json return_TxXLWYQ=json({});
    
        if (name.ppEnabledLayerNames[eEaxNMa]==NULL){
            return_TxXLWYQ["null"]=true;
            return return_TxXLWYQ;
        }
        return serialize_char_p(name.ppEnabledLayerNames[eEaxNMa]);
}();
            return_eEaxNMa["members"][std::to_string(eEaxNMa)].push_back(temp);
        }
        return return_eEaxNMa;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_evnhuwc=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_RlySFQw=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_RlySFQw["null"]=true;
            return return_RlySFQw;
        }
        
        return_RlySFQw["members"]={};
        for(int RlySFQw=0; RlySFQw < name.enabledExtensionCount; RlySFQw++){
            json temp;
            temp=[&]() {
    json return_QTZhrcX=json({});
    
        if (name.ppEnabledExtensionNames[RlySFQw]==NULL){
            return_QTZhrcX["null"]=true;
            return return_QTZhrcX;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[RlySFQw]);
}();
            return_RlySFQw["members"][std::to_string(RlySFQw)].push_back(temp);
        }
        return return_RlySFQw;
        }();
return result;}

    VkInstanceCreateInfo deserialize_VkInstanceCreateInfo(json name){
        auto result=VkInstanceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkInstanceCreateFlags(name["members"]["flags"]);}();
[&]() {
VkApplicationInfo* temp_wXdhdhz;[&]() {

        if (name["members"]["pApplicationInfo"].contains("null")){
        temp_wXdhdhz=NULL;
        }
    [&]() {
*(temp_wXdhdhz)=deserialize_VkApplicationInfo(name["members"]["pApplicationInfo"]);}();
}();result.pApplicationInfo=temp_wXdhdhz;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_XGUPqhP;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_XGUPqhP=NULL;
        }
    temp_XGUPqhP=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int jHLOrKQ=0; jHLOrKQ < result.enabledLayerCount; jHLOrKQ++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][jHLOrKQ].contains("null")){
        temp_XGUPqhP[jHLOrKQ]=NULL;
        }
    temp_XGUPqhP[jHLOrKQ]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][jHLOrKQ]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_XGUPqhP;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_uRPfOHC;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_uRPfOHC=NULL;
        }
    temp_uRPfOHC=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int EKNescd=0; EKNescd < result.enabledExtensionCount; EKNescd++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][EKNescd].contains("null")){
        temp_uRPfOHC[EKNescd]=NULL;
        }
    temp_uRPfOHC[EKNescd]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][EKNescd]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_uRPfOHC;}();
return result;}

    json serialize_VkQueueFamilyProperties(VkQueueFamilyProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["queueFlags"]=[&]() {
    json return_wVPfPlL=json({});
    return serialize_VkQueueFlags(name.queueFlags);}();
result["members"]["queueCount"]=[&]() {
    json return_ikAkYxI=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["timestampValidBits"]=[&]() {
    json return_hIPxLji=json({});
    return serialize_uint32_t(name.timestampValidBits);}();
result["members"]["minImageTransferGranularity"]=[&]() {
    json return_DGDpJxw=json({});
    return serialize_VkExtent3D(name.minImageTransferGranularity);}();
return result;}

    VkQueueFamilyProperties deserialize_VkQueueFamilyProperties(json name){
        auto result=VkQueueFamilyProperties();
    
[&]() {
result.queueFlags=deserialize_VkQueueFlags(name["members"]["queueFlags"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
result.timestampValidBits=deserialize_uint32_t(name["members"]["timestampValidBits"]);}();
[&]() {
result.minImageTransferGranularity=deserialize_VkExtent3D(name["members"]["minImageTransferGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties(VkPhysicalDeviceMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["memoryTypeCount"]=[&]() {
    json return_eAQBQyQ=json({});
    return serialize_uint32_t(name.memoryTypeCount);}();
result["members"]["memoryTypes"]=[&]() {
    json return_pQetvdf=json({});
    
        return_pQetvdf["members"]={};
        for(int pQetvdf=0; pQetvdf < VK_MAX_MEMORY_TYPES; pQetvdf++){
            json temp;
            temp=[&]() {
    json return_RIyQHdS=json({});
    return serialize_VkMemoryType(name.memoryTypes[pQetvdf]);}();
            return_pQetvdf["members"][std::to_string(pQetvdf)].push_back(temp);
        }
        return return_pQetvdf;
        }();
result["members"]["memoryHeapCount"]=[&]() {
    json return_STHBRdE=json({});
    return serialize_uint32_t(name.memoryHeapCount);}();
result["members"]["memoryHeaps"]=[&]() {
    json return_UZoeHvA=json({});
    
        return_UZoeHvA["members"]={};
        for(int UZoeHvA=0; UZoeHvA < VK_MAX_MEMORY_HEAPS; UZoeHvA++){
            json temp;
            temp=[&]() {
    json return_LzDEEpE=json({});
    return serialize_VkMemoryHeap(name.memoryHeaps[UZoeHvA]);}();
            return_UZoeHvA["members"][std::to_string(UZoeHvA)].push_back(temp);
        }
        return return_UZoeHvA;
        }();
return result;}

    VkPhysicalDeviceMemoryProperties deserialize_VkPhysicalDeviceMemoryProperties(json name){
        auto result=VkPhysicalDeviceMemoryProperties();
    
[&]() {
result.memoryTypeCount=deserialize_uint32_t(name["members"]["memoryTypeCount"]);}();
[&]() {

        for (int SgjMRvj=0; SgjMRvj < VK_MAX_MEMORY_TYPES; SgjMRvj++){
            [&]() {
result.memoryTypes[SgjMRvj]=deserialize_VkMemoryType(name["members"]["memoryTypes"]["members"][SgjMRvj]);}();;
        }
        }();
[&]() {
result.memoryHeapCount=deserialize_uint32_t(name["members"]["memoryHeapCount"]);}();
[&]() {

        for (int sDudJTp=0; sDudJTp < VK_MAX_MEMORY_HEAPS; sDudJTp++){
            [&]() {
result.memoryHeaps[sDudJTp]=deserialize_VkMemoryHeap(name["members"]["memoryHeaps"]["members"][sDudJTp]);}();;
        }
        }();
return result;}

    json serialize_VkMemoryAllocateInfo(VkMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allocationSize"]=[&]() {
    json return_pHuKuAr=json({});
    return_pHuKuAr=[&]() {
    json return_wEtQibM=json({});
    return serialize_uint64_t(name.allocationSize);}();return return_pHuKuAr;}();
result["members"]["memoryTypeIndex"]=[&]() {
    json return_oFfFUvY=json({});
    return serialize_uint32_t(name.memoryTypeIndex);}();
return result;}

    VkMemoryAllocateInfo deserialize_VkMemoryAllocateInfo(json name){
        auto result=VkMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.allocationSize=deserialize_uint64_t(name["members"]["allocationSize"]);}();}();
[&]() {
result.memoryTypeIndex=deserialize_uint32_t(name["members"]["memoryTypeIndex"]);}();
return result;}

    json serialize_VkMemoryRequirements(VkMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["alignment"]=[&]() {
    json return_ZjOckOp=json({});
    return_ZjOckOp=[&]() {
    json return_DrjhAUC=json({});
    return serialize_uint64_t(name.alignment);}();return return_ZjOckOp;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_ySvCeAY=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryRequirements deserialize_VkMemoryRequirements(json name){
        auto result=VkMemoryRequirements();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.alignment=deserialize_uint64_t(name["members"]["alignment"]);}();}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties(VkSparseImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["imageGranularity"]=[&]() {
    json return_WRiKhWL=json({});
    return serialize_VkExtent3D(name.imageGranularity);}();
result["members"]["flags"]=[&]() {
    json return_bvuxXxc=json({});
    return serialize_VkSparseImageFormatFlags(name.flags);}();
return result;}

    VkSparseImageFormatProperties deserialize_VkSparseImageFormatProperties(json name){
        auto result=VkSparseImageFormatProperties();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.imageGranularity=deserialize_VkExtent3D(name["members"]["imageGranularity"]);}();
[&]() {
result.flags=deserialize_VkSparseImageFormatFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements(VkSparseImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["formatProperties"]=[&]() {
    json return_gwohLKV=json({});
    return serialize_VkSparseImageFormatProperties(name.formatProperties);}();
result["members"]["imageMipTailFirstLod"]=[&]() {
    json return_AvCJVyz=json({});
    return serialize_uint32_t(name.imageMipTailFirstLod);}();
result["members"]["imageMipTailSize"]=[&]() {
    json return_dKCNCTg=json({});
    return_dKCNCTg=[&]() {
    json return_DdPfRkz=json({});
    return serialize_uint64_t(name.imageMipTailSize);}();return return_dKCNCTg;}();
result["members"]["imageMipTailOffset"]=[&]() {
    json return_zWxvcDw=json({});
    return_zWxvcDw=[&]() {
    json return_uOIvxSF=json({});
    return serialize_uint64_t(name.imageMipTailOffset);}();return return_zWxvcDw;}();
result["members"]["imageMipTailStride"]=[&]() {
    json return_fyEUZtW=json({});
    return_fyEUZtW=[&]() {
    json return_rOjQcAn=json({});
    return serialize_uint64_t(name.imageMipTailStride);}();return return_fyEUZtW;}();
return result;}

    VkSparseImageMemoryRequirements deserialize_VkSparseImageMemoryRequirements(json name){
        auto result=VkSparseImageMemoryRequirements();
    
[&]() {
result.formatProperties=deserialize_VkSparseImageFormatProperties(name["members"]["formatProperties"]);}();
[&]() {
result.imageMipTailFirstLod=deserialize_uint32_t(name["members"]["imageMipTailFirstLod"]);}();
[&]() {
[&]() {
result.imageMipTailSize=deserialize_uint64_t(name["members"]["imageMipTailSize"]);}();}();
[&]() {
[&]() {
result.imageMipTailOffset=deserialize_uint64_t(name["members"]["imageMipTailOffset"]);}();}();
[&]() {
[&]() {
result.imageMipTailStride=deserialize_uint64_t(name["members"]["imageMipTailStride"]);}();}();
return result;}

    json serialize_VkMemoryType(VkMemoryType name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["propertyFlags"]=[&]() {
    json return_CYBJWNr=json({});
    return serialize_VkMemoryPropertyFlags(name.propertyFlags);}();
result["members"]["heapIndex"]=[&]() {
    json return_TUPITxP=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkMemoryType deserialize_VkMemoryType(json name){
        auto result=VkMemoryType();
    
[&]() {
result.propertyFlags=deserialize_VkMemoryPropertyFlags(name["members"]["propertyFlags"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkMemoryHeap(VkMemoryHeap name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["flags"]=[&]() {
    json return_wlCGryE=json({});
    return serialize_VkMemoryHeapFlags(name.flags);}();
return result;}

    VkMemoryHeap deserialize_VkMemoryHeap(json name){
        auto result=VkMemoryHeap();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.flags=deserialize_VkMemoryHeapFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkMappedMemoryRange(VkMappedMemoryRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkMappedMemoryRange deserialize_VkMappedMemoryRange(json name){
        auto result=VkMappedMemoryRange();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkFormatProperties(VkFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["linearTilingFeatures"]=[&]() {
    json return_iQOimWb=json({});
    return serialize_VkFormatFeatureFlags(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_KWRvWhC=json({});
    return serialize_VkFormatFeatureFlags(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_XBhkKDx=json({});
    return serialize_VkFormatFeatureFlags(name.bufferFeatures);}();
return result;}

    VkFormatProperties deserialize_VkFormatProperties(json name){
        auto result=VkFormatProperties();
    
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkImageFormatProperties(VkImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxExtent"]=[&]() {
    json return_QISleuC=json({});
    return serialize_VkExtent3D(name.maxExtent);}();
result["members"]["maxMipLevels"]=[&]() {
    json return_ufblZTW=json({});
    return serialize_uint32_t(name.maxMipLevels);}();
result["members"]["maxArrayLayers"]=[&]() {
    json return_ZmsxXsa=json({});
    return serialize_uint32_t(name.maxArrayLayers);}();
result["members"]["sampleCounts"]=[&]() {
    json return_FkdNcNx=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["maxResourceSize"]=[&]() {
    json return_aOrqFeA=json({});
    return_aOrqFeA=[&]() {
    json return_rAEnrIj=json({});
    return serialize_uint64_t(name.maxResourceSize);}();return return_aOrqFeA;}();
return result;}

    VkImageFormatProperties deserialize_VkImageFormatProperties(json name){
        auto result=VkImageFormatProperties();
    
[&]() {
result.maxExtent=deserialize_VkExtent3D(name["members"]["maxExtent"]);}();
[&]() {
result.maxMipLevels=deserialize_uint32_t(name["members"]["maxMipLevels"]);}();
[&]() {
result.maxArrayLayers=deserialize_uint32_t(name["members"]["maxArrayLayers"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
[&]() {
result.maxResourceSize=deserialize_uint64_t(name["members"]["maxResourceSize"]);}();}();
return result;}

    json serialize_VkDescriptorBufferInfo(VkDescriptorBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["range"]=[&]() {
    json return_MgrzvYV=json({});
    return_MgrzvYV=[&]() {
    json return_QywazbL=json({});
    return serialize_uint64_t(name.range);}();return return_MgrzvYV;}();
return result;}

    VkDescriptorBufferInfo deserialize_VkDescriptorBufferInfo(json name){
        auto result=VkDescriptorBufferInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkDescriptorImageInfo(VkDescriptorImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sampler"]=[&]() {
    json return_qujTsSt=json({});
    return serialize_VkSampler(name.sampler);}();
result["members"]["imageView"]=[&]() {
    json return_qadnqHU=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_UcyZFMG=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkDescriptorImageInfo deserialize_VkDescriptorImageInfo(json name){
        auto result=VkDescriptorImageInfo();
    
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkWriteDescriptorSet(VkWriteDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dstSet"]=[&]() {
    json return_BnNyhbD=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_aOOcCVc=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_ZRUrPYV=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_djhXFXg=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_lEOhxWs=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["pImageInfo"]=[&]() {
    json return_jFztFXY=json({});
    
        if (name.pImageInfo==NULL){
            return_jFztFXY["null"]=true;
            return return_jFztFXY;
        }
        
        return_jFztFXY["members"]={};
        for(int jFztFXY=0; jFztFXY < name.descriptorCount; jFztFXY++){
            json temp;
            temp=[&]() {
    json return_yqqRUVB=json({});
    return serialize_VkDescriptorImageInfo(name.pImageInfo[jFztFXY]);}();
            return_jFztFXY["members"][std::to_string(jFztFXY)].push_back(temp);
        }
        return return_jFztFXY;
        }();
result["members"]["pBufferInfo"]=[&]() {
    json return_CQxHSCv=json({});
    
        if (name.pBufferInfo==NULL){
            return_CQxHSCv["null"]=true;
            return return_CQxHSCv;
        }
        
        return_CQxHSCv["members"]={};
        for(int CQxHSCv=0; CQxHSCv < name.descriptorCount; CQxHSCv++){
            json temp;
            temp=[&]() {
    json return_PQqISUU=json({});
    return serialize_VkDescriptorBufferInfo(name.pBufferInfo[CQxHSCv]);}();
            return_CQxHSCv["members"][std::to_string(CQxHSCv)].push_back(temp);
        }
        return return_CQxHSCv;
        }();
result["members"]["pTexelBufferView"]=[&]() {
    json return_jNuXusA=json({});
    
        if (name.pTexelBufferView==NULL){
            return_jNuXusA["null"]=true;
            return return_jNuXusA;
        }
        
        return_jNuXusA["members"]={};
        for(int jNuXusA=0; jNuXusA < name.descriptorCount; jNuXusA++){
            json temp;
            temp=[&]() {
    json return_FBBRdoC=json({});
    return serialize_VkBufferView(name.pTexelBufferView[jNuXusA]);}();
            return_jNuXusA["members"][std::to_string(jNuXusA)].push_back(temp);
        }
        return return_jNuXusA;
        }();
return result;}

    VkWriteDescriptorSet deserialize_VkWriteDescriptorSet(json name){
        auto result=VkWriteDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
VkDescriptorImageInfo* temp_Pmscytu;[&]() {

        if (name["members"]["pImageInfo"].contains("null")){
        temp_Pmscytu=NULL;
        }
    temp_Pmscytu=(VkDescriptorImageInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorImageInfo));
        for (int httgsFv=0; httgsFv < result.descriptorCount; httgsFv++){
            [&]() {
temp_Pmscytu[httgsFv]=deserialize_VkDescriptorImageInfo(name["members"]["pImageInfo"]["members"][httgsFv]);}();;
        }
        }();result.pImageInfo=temp_Pmscytu;}();
[&]() {
VkDescriptorBufferInfo* temp_CjslNDn;[&]() {

        if (name["members"]["pBufferInfo"].contains("null")){
        temp_CjslNDn=NULL;
        }
    temp_CjslNDn=(VkDescriptorBufferInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorBufferInfo));
        for (int odtWGCp=0; odtWGCp < result.descriptorCount; odtWGCp++){
            [&]() {
temp_CjslNDn[odtWGCp]=deserialize_VkDescriptorBufferInfo(name["members"]["pBufferInfo"]["members"][odtWGCp]);}();;
        }
        }();result.pBufferInfo=temp_CjslNDn;}();
[&]() {
VkBufferView* temp_hdcYWDD;[&]() {

        if (name["members"]["pTexelBufferView"].contains("null")){
        temp_hdcYWDD=NULL;
        }
    temp_hdcYWDD=(VkBufferView*)malloc(result.descriptorCount*sizeof(VkBufferView));
        for (int ybBIjAg=0; ybBIjAg < result.descriptorCount; ybBIjAg++){
            [&]() {
temp_hdcYWDD[ybBIjAg]=deserialize_VkBufferView(name["members"]["pTexelBufferView"]["members"][ybBIjAg]);}();;
        }
        }();result.pTexelBufferView=temp_hdcYWDD;}();
return result;}

    json serialize_VkCopyDescriptorSet(VkCopyDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSet"]=[&]() {
    json return_hjOblmk=json({});
    return serialize_VkDescriptorSet(name.srcSet);}();
result["members"]["srcBinding"]=[&]() {
    json return_cyeCWpb=json({});
    return serialize_uint32_t(name.srcBinding);}();
result["members"]["srcArrayElement"]=[&]() {
    json return_DLRthXY=json({});
    return serialize_uint32_t(name.srcArrayElement);}();
result["members"]["dstSet"]=[&]() {
    json return_BnNyhbD=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_aOOcCVc=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_ZRUrPYV=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_djhXFXg=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkCopyDescriptorSet deserialize_VkCopyDescriptorSet(json name){
        auto result=VkCopyDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSet=deserialize_VkDescriptorSet(name["members"]["srcSet"]);}();
[&]() {
result.srcBinding=deserialize_uint32_t(name["members"]["srcBinding"]);}();
[&]() {
result.srcArrayElement=deserialize_uint32_t(name["members"]["srcArrayElement"]);}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkBufferUsageFlags2CreateInfoKHR(VkBufferUsageFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_aItwuXP=json({});
    return serialize_VkBufferUsageFlags2KHR(name.usage);}();
return result;}

    VkBufferUsageFlags2CreateInfoKHR deserialize_VkBufferUsageFlags2CreateInfoKHR(json name){
        auto result=VkBufferUsageFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags2KHR(name["members"]["usage"]);}();
return result;}

    json serialize_VkBufferCreateInfo(VkBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EoqOIVe=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["usage"]=[&]() {
    json return_ehpSOyF=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_yUyTEYB=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_WmcLOAF=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_dvhWemM=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_dvhWemM["null"]=true;
            return return_dvhWemM;
        }
        
        return_dvhWemM["members"]={};
        for(int dvhWemM=0; dvhWemM < name.queueFamilyIndexCount; dvhWemM++){
            json temp;
            temp=[&]() {
    json return_CJJYDwr=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[dvhWemM]);}();
            return_dvhWemM["members"][std::to_string(dvhWemM)].push_back(temp);
        }
        return return_dvhWemM;
        }();
return result;}

    VkBufferCreateInfo deserialize_VkBufferCreateInfo(json name){
        auto result=VkBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_MhmszBU;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_MhmszBU=NULL;
        }
    temp_MhmszBU=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int gkCgTDc=0; gkCgTDc < result.queueFamilyIndexCount; gkCgTDc++){
            [&]() {
temp_MhmszBU[gkCgTDc]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][gkCgTDc]);}();;
        }
        }();result.pQueueFamilyIndices=temp_MhmszBU;}();
return result;}

    json serialize_VkBufferViewCreateInfo(VkBufferViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_kXhZxTg=json({});
    return serialize_VkBufferViewCreateFlags(name.flags);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["range"]=[&]() {
    json return_MgrzvYV=json({});
    return_MgrzvYV=[&]() {
    json return_QywazbL=json({});
    return serialize_uint64_t(name.range);}();return return_MgrzvYV;}();
return result;}

    VkBufferViewCreateInfo deserialize_VkBufferViewCreateInfo(json name){
        auto result=VkBufferViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkBufferViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkImageSubresource(VkImageSubresource name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_Hjqbkve=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["arrayLayer"]=[&]() {
    json return_BwYQRbu=json({});
    return serialize_uint32_t(name.arrayLayer);}();
return result;}

    VkImageSubresource deserialize_VkImageSubresource(json name){
        auto result=VkImageSubresource();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.arrayLayer=deserialize_uint32_t(name["members"]["arrayLayer"]);}();
return result;}

    json serialize_VkImageSubresourceLayers(VkImageSubresourceLayers name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_Hjqbkve=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_ZZfGoEh=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_NOQkDfJ=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceLayers deserialize_VkImageSubresourceLayers(json name){
        auto result=VkImageSubresourceLayers();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkImageSubresourceRange(VkImageSubresourceRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["baseMipLevel"]=[&]() {
    json return_JXLWEDS=json({});
    return serialize_uint32_t(name.baseMipLevel);}();
result["members"]["levelCount"]=[&]() {
    json return_SREvHfQ=json({});
    return serialize_uint32_t(name.levelCount);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_ZZfGoEh=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_NOQkDfJ=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceRange deserialize_VkImageSubresourceRange(json name){
        auto result=VkImageSubresourceRange();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.baseMipLevel=deserialize_uint32_t(name["members"]["baseMipLevel"]);}();
[&]() {
result.levelCount=deserialize_uint32_t(name["members"]["levelCount"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkMemoryBarrier(VkMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_hGxYObz=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_znJgWCn=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier deserialize_VkMemoryBarrier(json name){
        auto result=VkMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier(VkBufferMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_hGxYObz=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_znJgWCn=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_KRlEorD=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_egsutkp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkBufferMemoryBarrier deserialize_VkBufferMemoryBarrier(json name){
        auto result=VkBufferMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageMemoryBarrier(VkImageMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_hGxYObz=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_znJgWCn=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_rCwsJVl=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_zLfnkid=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_KRlEorD=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_egsutkp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_bsHqPsS=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier deserialize_VkImageMemoryBarrier(json name){
        auto result=VkImageMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageCreateInfo(VkImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BsnDdAZ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["imageType"]=[&]() {
    json return_ONBhMkL=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["mipLevels"]=[&]() {
    json return_GuLugAI=json({});
    return serialize_uint32_t(name.mipLevels);}();
result["members"]["arrayLayers"]=[&]() {
    json return_uGHYoCd=json({});
    return serialize_uint32_t(name.arrayLayers);}();
result["members"]["samples"]=[&]() {
    json return_eHqYtWr=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["tiling"]=[&]() {
    json return_KpmOsXz=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_yUyTEYB=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_WmcLOAF=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_dvhWemM=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_dvhWemM["null"]=true;
            return return_dvhWemM;
        }
        
        return_dvhWemM["members"]={};
        for(int dvhWemM=0; dvhWemM < name.queueFamilyIndexCount; dvhWemM++){
            json temp;
            temp=[&]() {
    json return_CJJYDwr=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[dvhWemM]);}();
            return_dvhWemM["members"][std::to_string(dvhWemM)].push_back(temp);
        }
        return return_dvhWemM;
        }();
result["members"]["initialLayout"]=[&]() {
    json return_NqCzzcs=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
return result;}

    VkImageCreateInfo deserialize_VkImageCreateInfo(json name){
        auto result=VkImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.mipLevels=deserialize_uint32_t(name["members"]["mipLevels"]);}();
[&]() {
result.arrayLayers=deserialize_uint32_t(name["members"]["arrayLayers"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_MhmszBU;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_MhmszBU=NULL;
        }
    temp_MhmszBU=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int gkCgTDc=0; gkCgTDc < result.queueFamilyIndexCount; gkCgTDc++){
            [&]() {
temp_MhmszBU[gkCgTDc]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][gkCgTDc]);}();;
        }
        }();result.pQueueFamilyIndices=temp_MhmszBU;}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout(VkSubresourceLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["rowPitch"]=[&]() {
    json return_ElslyCA=json({});
    return_ElslyCA=[&]() {
    json return_RyvVUys=json({});
    return serialize_uint64_t(name.rowPitch);}();return return_ElslyCA;}();
result["members"]["arrayPitch"]=[&]() {
    json return_gtMiudd=json({});
    return_gtMiudd=[&]() {
    json return_zqbipiV=json({});
    return serialize_uint64_t(name.arrayPitch);}();return return_gtMiudd;}();
result["members"]["depthPitch"]=[&]() {
    json return_GGnbwtB=json({});
    return_GGnbwtB=[&]() {
    json return_sOFBsEL=json({});
    return serialize_uint64_t(name.depthPitch);}();return return_GGnbwtB;}();
return result;}

    VkSubresourceLayout deserialize_VkSubresourceLayout(json name){
        auto result=VkSubresourceLayout();
    
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.rowPitch=deserialize_uint64_t(name["members"]["rowPitch"]);}();}();
[&]() {
[&]() {
result.arrayPitch=deserialize_uint64_t(name["members"]["arrayPitch"]);}();}();
[&]() {
[&]() {
result.depthPitch=deserialize_uint64_t(name["members"]["depthPitch"]);}();}();
return result;}

    json serialize_VkImageViewCreateInfo(VkImageViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JiRdncs=json({});
    return serialize_VkImageViewCreateFlags(name.flags);}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["viewType"]=[&]() {
    json return_ppcImnX=json({});
    return serialize_VkImageViewType(name.viewType);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["components"]=[&]() {
    json return_kUWBeRM=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["subresourceRange"]=[&]() {
    json return_bsHqPsS=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageViewCreateInfo deserialize_VkImageViewCreateInfo(json name){
        auto result=VkImageViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkImageViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.viewType=deserialize_VkImageViewType(name["members"]["viewType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferCopy(VkBufferCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcOffset"]=[&]() {
    json return_ceNoGnZ=json({});
    return_ceNoGnZ=[&]() {
    json return_fLeQKKS=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_ceNoGnZ;}();
result["members"]["dstOffset"]=[&]() {
    json return_QyOyycH=json({});
    return_QyOyycH=[&]() {
    json return_oAGIrKv=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_QyOyycH;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkBufferCopy deserialize_VkBufferCopy(json name){
        auto result=VkBufferCopy();
    
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkSparseMemoryBind(VkSparseMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["resourceOffset"]=[&]() {
    json return_whVrHKn=json({});
    return_whVrHKn=[&]() {
    json return_fdzMlQE=json({});
    return serialize_uint64_t(name.resourceOffset);}();return return_whVrHKn;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
result["members"]["flags"]=[&]() {
    json return_dMuuAvi=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseMemoryBind deserialize_VkSparseMemoryBind(json name){
        auto result=VkSparseMemoryBind();
    
[&]() {
[&]() {
result.resourceOffset=deserialize_uint64_t(name["members"]["resourceOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryBind(VkSparseImageMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subresource"]=[&]() {
    json return_AGpXbJP=json({});
    return serialize_VkImageSubresource(name.subresource);}();
result["members"]["offset"]=[&]() {
    json return_iAduqsT=json({});
    return serialize_VkOffset3D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
result["members"]["flags"]=[&]() {
    json return_dMuuAvi=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseImageMemoryBind deserialize_VkSparseImageMemoryBind(json name){
        auto result=VkSparseImageMemoryBind();
    
[&]() {
result.subresource=deserialize_VkImageSubresource(name["members"]["subresource"]);}();
[&]() {
result.offset=deserialize_VkOffset3D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseBufferMemoryBindInfo(VkSparseBufferMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["bindCount"]=[&]() {
    json return_sJVbTEO=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_SSMwXsB=json({});
    
        if (name.pBinds==NULL){
            return_SSMwXsB["null"]=true;
            return return_SSMwXsB;
        }
        
        return_SSMwXsB["members"]={};
        for(int SSMwXsB=0; SSMwXsB < name.bindCount; SSMwXsB++){
            json temp;
            temp=[&]() {
    json return_hdQArjr=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[SSMwXsB]);}();
            return_SSMwXsB["members"][std::to_string(SSMwXsB)].push_back(temp);
        }
        return return_SSMwXsB;
        }();
return result;}

    VkSparseBufferMemoryBindInfo deserialize_VkSparseBufferMemoryBindInfo(json name){
        auto result=VkSparseBufferMemoryBindInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_gEugtar;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_gEugtar=NULL;
        }
    temp_gEugtar=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int auBTdjP=0; auBTdjP < result.bindCount; auBTdjP++){
            [&]() {
temp_gEugtar[auBTdjP]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][auBTdjP]);}();;
        }
        }();result.pBinds=temp_gEugtar;}();
return result;}

    json serialize_VkSparseImageOpaqueMemoryBindInfo(VkSparseImageOpaqueMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_sJVbTEO=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_SSMwXsB=json({});
    
        if (name.pBinds==NULL){
            return_SSMwXsB["null"]=true;
            return return_SSMwXsB;
        }
        
        return_SSMwXsB["members"]={};
        for(int SSMwXsB=0; SSMwXsB < name.bindCount; SSMwXsB++){
            json temp;
            temp=[&]() {
    json return_hdQArjr=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[SSMwXsB]);}();
            return_SSMwXsB["members"][std::to_string(SSMwXsB)].push_back(temp);
        }
        return return_SSMwXsB;
        }();
return result;}

    VkSparseImageOpaqueMemoryBindInfo deserialize_VkSparseImageOpaqueMemoryBindInfo(json name){
        auto result=VkSparseImageOpaqueMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_gEugtar;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_gEugtar=NULL;
        }
    temp_gEugtar=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int auBTdjP=0; auBTdjP < result.bindCount; auBTdjP++){
            [&]() {
temp_gEugtar[auBTdjP]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][auBTdjP]);}();;
        }
        }();result.pBinds=temp_gEugtar;}();
return result;}

    json serialize_VkSparseImageMemoryBindInfo(VkSparseImageMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_sJVbTEO=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_ZkMGbfF=json({});
    
        if (name.pBinds==NULL){
            return_ZkMGbfF["null"]=true;
            return return_ZkMGbfF;
        }
        
        return_ZkMGbfF["members"]={};
        for(int ZkMGbfF=0; ZkMGbfF < name.bindCount; ZkMGbfF++){
            json temp;
            temp=[&]() {
    json return_bwxQQAT=json({});
    return serialize_VkSparseImageMemoryBind(name.pBinds[ZkMGbfF]);}();
            return_ZkMGbfF["members"][std::to_string(ZkMGbfF)].push_back(temp);
        }
        return return_ZkMGbfF;
        }();
return result;}

    VkSparseImageMemoryBindInfo deserialize_VkSparseImageMemoryBindInfo(json name){
        auto result=VkSparseImageMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseImageMemoryBind* temp_BsbEleJ;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_BsbEleJ=NULL;
        }
    temp_BsbEleJ=(VkSparseImageMemoryBind*)malloc(result.bindCount*sizeof(VkSparseImageMemoryBind));
        for (int eRJaCnz=0; eRJaCnz < result.bindCount; eRJaCnz++){
            [&]() {
temp_BsbEleJ[eRJaCnz]=deserialize_VkSparseImageMemoryBind(name["members"]["pBinds"]["members"][eRJaCnz]);}();;
        }
        }();result.pBinds=temp_BsbEleJ;}();
return result;}

    json serialize_VkBindSparseInfo(VkBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_YnAXKTD=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_dsNTTiF=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_dsNTTiF["null"]=true;
            return return_dsNTTiF;
        }
        
        return_dsNTTiF["members"]={};
        for(int dsNTTiF=0; dsNTTiF < name.waitSemaphoreCount; dsNTTiF++){
            json temp;
            temp=[&]() {
    json return_kNqCqIJ=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[dsNTTiF]);}();
            return_dsNTTiF["members"][std::to_string(dsNTTiF)].push_back(temp);
        }
        return return_dsNTTiF;
        }();
result["members"]["bufferBindCount"]=[&]() {
    json return_uFXFdpL=json({});
    return serialize_uint32_t(name.bufferBindCount);}();
result["members"]["pBufferBinds"]=[&]() {
    json return_xykCvvr=json({});
    
        if (name.pBufferBinds==NULL){
            return_xykCvvr["null"]=true;
            return return_xykCvvr;
        }
        
        return_xykCvvr["members"]={};
        for(int xykCvvr=0; xykCvvr < name.bufferBindCount; xykCvvr++){
            json temp;
            temp=[&]() {
    json return_cZCoAqI=json({});
    return serialize_VkSparseBufferMemoryBindInfo(name.pBufferBinds[xykCvvr]);}();
            return_xykCvvr["members"][std::to_string(xykCvvr)].push_back(temp);
        }
        return return_xykCvvr;
        }();
result["members"]["imageOpaqueBindCount"]=[&]() {
    json return_QlubDeT=json({});
    return serialize_uint32_t(name.imageOpaqueBindCount);}();
result["members"]["pImageOpaqueBinds"]=[&]() {
    json return_fSfhkNj=json({});
    
        if (name.pImageOpaqueBinds==NULL){
            return_fSfhkNj["null"]=true;
            return return_fSfhkNj;
        }
        
        return_fSfhkNj["members"]={};
        for(int fSfhkNj=0; fSfhkNj < name.imageOpaqueBindCount; fSfhkNj++){
            json temp;
            temp=[&]() {
    json return_mBuwNSg=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(name.pImageOpaqueBinds[fSfhkNj]);}();
            return_fSfhkNj["members"][std::to_string(fSfhkNj)].push_back(temp);
        }
        return return_fSfhkNj;
        }();
result["members"]["imageBindCount"]=[&]() {
    json return_hpvRnCp=json({});
    return serialize_uint32_t(name.imageBindCount);}();
result["members"]["pImageBinds"]=[&]() {
    json return_myjMWym=json({});
    
        if (name.pImageBinds==NULL){
            return_myjMWym["null"]=true;
            return return_myjMWym;
        }
        
        return_myjMWym["members"]={};
        for(int myjMWym=0; myjMWym < name.imageBindCount; myjMWym++){
            json temp;
            temp=[&]() {
    json return_CJswJqp=json({});
    return serialize_VkSparseImageMemoryBindInfo(name.pImageBinds[myjMWym]);}();
            return_myjMWym["members"][std::to_string(myjMWym)].push_back(temp);
        }
        return return_myjMWym;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_erRBknT=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_yNcjFGk=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_yNcjFGk["null"]=true;
            return return_yNcjFGk;
        }
        
        return_yNcjFGk["members"]={};
        for(int yNcjFGk=0; yNcjFGk < name.signalSemaphoreCount; yNcjFGk++){
            json temp;
            temp=[&]() {
    json return_NUNQfgO=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[yNcjFGk]);}();
            return_yNcjFGk["members"][std::to_string(yNcjFGk)].push_back(temp);
        }
        return return_yNcjFGk;
        }();
return result;}

    VkBindSparseInfo deserialize_VkBindSparseInfo(json name){
        auto result=VkBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_hfboaZU;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_hfboaZU=NULL;
        }
    temp_hfboaZU=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int asCGXsZ=0; asCGXsZ < result.waitSemaphoreCount; asCGXsZ++){
            [&]() {
temp_hfboaZU[asCGXsZ]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][asCGXsZ]);}();;
        }
        }();result.pWaitSemaphores=temp_hfboaZU;}();
[&]() {
result.bufferBindCount=deserialize_uint32_t(name["members"]["bufferBindCount"]);}();
[&]() {
VkSparseBufferMemoryBindInfo* temp_zLVkJvf;[&]() {

        if (name["members"]["pBufferBinds"].contains("null")){
        temp_zLVkJvf=NULL;
        }
    temp_zLVkJvf=(VkSparseBufferMemoryBindInfo*)malloc(result.bufferBindCount*sizeof(VkSparseBufferMemoryBindInfo));
        for (int yqCwQhg=0; yqCwQhg < result.bufferBindCount; yqCwQhg++){
            [&]() {
temp_zLVkJvf[yqCwQhg]=deserialize_VkSparseBufferMemoryBindInfo(name["members"]["pBufferBinds"]["members"][yqCwQhg]);}();;
        }
        }();result.pBufferBinds=temp_zLVkJvf;}();
[&]() {
result.imageOpaqueBindCount=deserialize_uint32_t(name["members"]["imageOpaqueBindCount"]);}();
[&]() {
VkSparseImageOpaqueMemoryBindInfo* temp_OIbMlyA;[&]() {

        if (name["members"]["pImageOpaqueBinds"].contains("null")){
        temp_OIbMlyA=NULL;
        }
    temp_OIbMlyA=(VkSparseImageOpaqueMemoryBindInfo*)malloc(result.imageOpaqueBindCount*sizeof(VkSparseImageOpaqueMemoryBindInfo));
        for (int UlKzAOR=0; UlKzAOR < result.imageOpaqueBindCount; UlKzAOR++){
            [&]() {
temp_OIbMlyA[UlKzAOR]=deserialize_VkSparseImageOpaqueMemoryBindInfo(name["members"]["pImageOpaqueBinds"]["members"][UlKzAOR]);}();;
        }
        }();result.pImageOpaqueBinds=temp_OIbMlyA;}();
[&]() {
result.imageBindCount=deserialize_uint32_t(name["members"]["imageBindCount"]);}();
[&]() {
VkSparseImageMemoryBindInfo* temp_FkQZxKE;[&]() {

        if (name["members"]["pImageBinds"].contains("null")){
        temp_FkQZxKE=NULL;
        }
    temp_FkQZxKE=(VkSparseImageMemoryBindInfo*)malloc(result.imageBindCount*sizeof(VkSparseImageMemoryBindInfo));
        for (int qrzqfSp=0; qrzqfSp < result.imageBindCount; qrzqfSp++){
            [&]() {
temp_FkQZxKE[qrzqfSp]=deserialize_VkSparseImageMemoryBindInfo(name["members"]["pImageBinds"]["members"][qrzqfSp]);}();;
        }
        }();result.pImageBinds=temp_FkQZxKE;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_kAvuKqF;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_kAvuKqF=NULL;
        }
    temp_kAvuKqF=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int wFOWqbt=0; wFOWqbt < result.signalSemaphoreCount; wFOWqbt++){
            [&]() {
temp_kAvuKqF[wFOWqbt]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][wFOWqbt]);}();;
        }
        }();result.pSignalSemaphores=temp_kAvuKqF;}();
return result;}

    json serialize_VkImageCopy(VkImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_neTwZQL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_YsFjbpi=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy deserialize_VkImageCopy(json name){
        auto result=VkImageCopy();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit(VkImageBlit name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_lnMNFYk=json({});
    
        return_lnMNFYk["members"]={};
        for(int lnMNFYk=0; lnMNFYk < 2; lnMNFYk++){
            json temp;
            temp=[&]() {
    json return_sEflJEU=json({});
    return serialize_VkOffset3D(name.srcOffsets[lnMNFYk]);}();
            return_lnMNFYk["members"][std::to_string(lnMNFYk)].push_back(temp);
        }
        return return_lnMNFYk;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_cDydwTX=json({});
    
        return_cDydwTX["members"]={};
        for(int cDydwTX=0; cDydwTX < 2; cDydwTX++){
            json temp;
            temp=[&]() {
    json return_GhxsNbj=json({});
    return serialize_VkOffset3D(name.dstOffsets[cDydwTX]);}();
            return_cDydwTX["members"][std::to_string(cDydwTX)].push_back(temp);
        }
        return return_cDydwTX;
        }();
return result;}

    VkImageBlit deserialize_VkImageBlit(json name){
        auto result=VkImageBlit();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int vqLwYtU=0; vqLwYtU < 2; vqLwYtU++){
            [&]() {
result.srcOffsets[vqLwYtU]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][vqLwYtU]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int kiiKvyU=0; kiiKvyU < 2; kiiKvyU++){
            [&]() {
result.dstOffsets[kiiKvyU]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][kiiKvyU]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy(VkBufferImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferOffset"]=[&]() {
    json return_MZlGkCk=json({});
    return_MZlGkCk=[&]() {
    json return_QPXercI=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_MZlGkCk;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_IKCIkyk=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_litXJQl=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_OusFfMz=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_MUCANiu=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WESMOjr=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy deserialize_VkBufferImageCopy(json name){
        auto result=VkBufferImageCopy();
    
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryIndirectCommandNV(VkCopyMemoryIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_VyVTNdq=json({});
    return_VyVTNdq=[&]() {
    json return_nzCkBvt=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_VyVTNdq;}();
result["members"]["dstAddress"]=[&]() {
    json return_rXOxCoj=json({});
    return_rXOxCoj=[&]() {
    json return_BEXAKEx=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_rXOxCoj;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkCopyMemoryIndirectCommandNV deserialize_VkCopyMemoryIndirectCommandNV(json name){
        auto result=VkCopyMemoryIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkCopyMemoryToImageIndirectCommandNV(VkCopyMemoryToImageIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_VyVTNdq=json({});
    return_VyVTNdq=[&]() {
    json return_nzCkBvt=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_VyVTNdq;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_IKCIkyk=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_litXJQl=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_OusFfMz=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_MUCANiu=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WESMOjr=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkCopyMemoryToImageIndirectCommandNV deserialize_VkCopyMemoryToImageIndirectCommandNV(json name){
        auto result=VkCopyMemoryToImageIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve(VkImageResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_neTwZQL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_YsFjbpi=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve deserialize_VkImageResolve(json name){
        auto result=VkImageResolve();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkShaderModuleCreateInfo(VkShaderModuleCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jSXRUMr=json({});
    return serialize_VkShaderModuleCreateFlags(name.flags);}();
result["members"]["codeSize"]=[&]() {
    json return_QjmrVYD=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_sPzdpmk=json({});
    
        if (name.pCode==NULL){
            return_sPzdpmk["null"]=true;
            return return_sPzdpmk;
        }
        
        return_sPzdpmk["members"]={};
        for(int sPzdpmk=0; sPzdpmk < name.codeSize / 4; sPzdpmk++){
            json temp;
            temp=[&]() {
    json return_vWmQZYm=json({});
    return serialize_uint32_t(name.pCode[sPzdpmk]);}();
            return_sPzdpmk["members"][std::to_string(sPzdpmk)].push_back(temp);
        }
        return return_sPzdpmk;
        }();
return result;}

    VkShaderModuleCreateInfo deserialize_VkShaderModuleCreateInfo(json name){
        auto result=VkShaderModuleCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkShaderModuleCreateFlags(name["members"]["flags"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
uint32_t* temp_zvVOSMQ;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_zvVOSMQ=NULL;
        }
    temp_zvVOSMQ=(uint32_t*)malloc(result.codeSize / 4*sizeof(uint32_t));
        for (int xQUEtmP=0; xQUEtmP < result.codeSize / 4; xQUEtmP++){
            [&]() {
temp_zvVOSMQ[xQUEtmP]=deserialize_uint32_t(name["members"]["pCode"]["members"][xQUEtmP]);}();;
        }
        }();result.pCode=temp_zvVOSMQ;}();
return result;}

    json serialize_VkDescriptorSetLayoutBinding(VkDescriptorSetLayoutBinding name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_BpBrDUS=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["descriptorType"]=[&]() {
    json return_lEOhxWs=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["descriptorCount"]=[&]() {
    json return_djhXFXg=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["stageFlags"]=[&]() {
    json return_ePaEqrh=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["pImmutableSamplers"]=[&]() {
    json return_uSmDvDs=json({});
    
        if (name.pImmutableSamplers==NULL){
            return_uSmDvDs["null"]=true;
            return return_uSmDvDs;
        }
        
        return_uSmDvDs["members"]={};
        for(int uSmDvDs=0; uSmDvDs < name.descriptorCount; uSmDvDs++){
            json temp;
            temp=[&]() {
    json return_JctCiHf=json({});
    return serialize_VkSampler(name.pImmutableSamplers[uSmDvDs]);}();
            return_uSmDvDs["members"][std::to_string(uSmDvDs)].push_back(temp);
        }
        return return_uSmDvDs;
        }();
return result;}

    VkDescriptorSetLayoutBinding deserialize_VkDescriptorSetLayoutBinding(json name){
        auto result=VkDescriptorSetLayoutBinding();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
VkSampler* temp_DqVAYmM;[&]() {

        if (name["members"]["pImmutableSamplers"].contains("null")){
        temp_DqVAYmM=NULL;
        }
    temp_DqVAYmM=(VkSampler*)malloc(result.descriptorCount*sizeof(VkSampler));
        for (int nTtRdhA=0; nTtRdhA < result.descriptorCount; nTtRdhA++){
            [&]() {
temp_DqVAYmM[nTtRdhA]=deserialize_VkSampler(name["members"]["pImmutableSamplers"]["members"][nTtRdhA]);}();;
        }
        }();result.pImmutableSamplers=temp_DqVAYmM;}();
return result;}

    json serialize_VkDescriptorSetLayoutCreateInfo(VkDescriptorSetLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EVeiCSE=json({});
    return serialize_VkDescriptorSetLayoutCreateFlags(name.flags);}();
result["members"]["bindingCount"]=[&]() {
    json return_IYUIEJz=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindings"]=[&]() {
    json return_GRjTafu=json({});
    
        if (name.pBindings==NULL){
            return_GRjTafu["null"]=true;
            return return_GRjTafu;
        }
        
        return_GRjTafu["members"]={};
        for(int GRjTafu=0; GRjTafu < name.bindingCount; GRjTafu++){
            json temp;
            temp=[&]() {
    json return_RIbSJQm=json({});
    return serialize_VkDescriptorSetLayoutBinding(name.pBindings[GRjTafu]);}();
            return_GRjTafu["members"][std::to_string(GRjTafu)].push_back(temp);
        }
        return return_GRjTafu;
        }();
return result;}

    VkDescriptorSetLayoutCreateInfo deserialize_VkDescriptorSetLayoutCreateInfo(json name){
        auto result=VkDescriptorSetLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDescriptorSetLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorSetLayoutBinding* temp_WEXhlTY;[&]() {

        if (name["members"]["pBindings"].contains("null")){
        temp_WEXhlTY=NULL;
        }
    temp_WEXhlTY=(VkDescriptorSetLayoutBinding*)malloc(result.bindingCount*sizeof(VkDescriptorSetLayoutBinding));
        for (int QjxZFOH=0; QjxZFOH < result.bindingCount; QjxZFOH++){
            [&]() {
temp_WEXhlTY[QjxZFOH]=deserialize_VkDescriptorSetLayoutBinding(name["members"]["pBindings"]["members"][QjxZFOH]);}();;
        }
        }();result.pBindings=temp_WEXhlTY;}();
return result;}

    json serialize_VkDescriptorPoolSize(VkDescriptorPoolSize name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_nUqbsfK=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["descriptorCount"]=[&]() {
    json return_djhXFXg=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkDescriptorPoolSize deserialize_VkDescriptorPoolSize(json name){
        auto result=VkDescriptorPoolSize();
    
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkDescriptorPoolCreateInfo(VkDescriptorPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_SLinnAh=json({});
    return serialize_VkDescriptorPoolCreateFlags(name.flags);}();
result["members"]["maxSets"]=[&]() {
    json return_WgOWmEl=json({});
    return serialize_uint32_t(name.maxSets);}();
result["members"]["poolSizeCount"]=[&]() {
    json return_fLBzhUZ=json({});
    return serialize_uint32_t(name.poolSizeCount);}();
result["members"]["pPoolSizes"]=[&]() {
    json return_LdZPrJw=json({});
    
        if (name.pPoolSizes==NULL){
            return_LdZPrJw["null"]=true;
            return return_LdZPrJw;
        }
        
        return_LdZPrJw["members"]={};
        for(int LdZPrJw=0; LdZPrJw < name.poolSizeCount; LdZPrJw++){
            json temp;
            temp=[&]() {
    json return_PooiOsp=json({});
    return serialize_VkDescriptorPoolSize(name.pPoolSizes[LdZPrJw]);}();
            return_LdZPrJw["members"][std::to_string(LdZPrJw)].push_back(temp);
        }
        return return_LdZPrJw;
        }();
return result;}

    VkDescriptorPoolCreateInfo deserialize_VkDescriptorPoolCreateInfo(json name){
        auto result=VkDescriptorPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDescriptorPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.maxSets=deserialize_uint32_t(name["members"]["maxSets"]);}();
[&]() {
result.poolSizeCount=deserialize_uint32_t(name["members"]["poolSizeCount"]);}();
[&]() {
VkDescriptorPoolSize* temp_KBtUqhx;[&]() {

        if (name["members"]["pPoolSizes"].contains("null")){
        temp_KBtUqhx=NULL;
        }
    temp_KBtUqhx=(VkDescriptorPoolSize*)malloc(result.poolSizeCount*sizeof(VkDescriptorPoolSize));
        for (int MkRYgDx=0; MkRYgDx < result.poolSizeCount; MkRYgDx++){
            [&]() {
temp_KBtUqhx[MkRYgDx]=deserialize_VkDescriptorPoolSize(name["members"]["pPoolSizes"]["members"][MkRYgDx]);}();;
        }
        }();result.pPoolSizes=temp_KBtUqhx;}();
return result;}

    json serialize_VkDescriptorSetAllocateInfo(VkDescriptorSetAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPool"]=[&]() {
    json return_loSDDol=json({});
    return serialize_VkDescriptorPool(name.descriptorPool);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_jILqZMd=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_gbkZJVC=json({});
    
        if (name.pSetLayouts==NULL){
            return_gbkZJVC["null"]=true;
            return return_gbkZJVC;
        }
        
        return_gbkZJVC["members"]={};
        for(int gbkZJVC=0; gbkZJVC < name.descriptorSetCount; gbkZJVC++){
            json temp;
            temp=[&]() {
    json return_ocxikNd=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[gbkZJVC]);}();
            return_gbkZJVC["members"][std::to_string(gbkZJVC)].push_back(temp);
        }
        return return_gbkZJVC;
        }();
return result;}

    VkDescriptorSetAllocateInfo deserialize_VkDescriptorSetAllocateInfo(json name){
        auto result=VkDescriptorSetAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.descriptorPool=deserialize_VkDescriptorPool(name["members"]["descriptorPool"]);}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_sDURxfS;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_sDURxfS=NULL;
        }
    temp_sDURxfS=(VkDescriptorSetLayout*)malloc(result.descriptorSetCount*sizeof(VkDescriptorSetLayout));
        for (int EoLdRZc=0; EoLdRZc < result.descriptorSetCount; EoLdRZc++){
            [&]() {
temp_sDURxfS[EoLdRZc]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][EoLdRZc]);}();;
        }
        }();result.pSetLayouts=temp_sDURxfS;}();
return result;}

    json serialize_VkSpecializationMapEntry(VkSpecializationMapEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["constantID"]=[&]() {
    json return_eBYjtCa=json({});
    return serialize_uint32_t(name.constantID);}();
result["members"]["offset"]=[&]() {
    json return_QevQWLB=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_CcpJLAz=json({});
    return serialize_size_t(name.size);}();
return result;}

    VkSpecializationMapEntry deserialize_VkSpecializationMapEntry(json name){
        auto result=VkSpecializationMapEntry();
    
[&]() {
result.constantID=deserialize_uint32_t(name["members"]["constantID"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_size_t(name["members"]["size"]);}();
return result;}

    json serialize_VkSpecializationInfo(VkSpecializationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["mapEntryCount"]=[&]() {
    json return_qGfzqSX=json({});
    return serialize_uint32_t(name.mapEntryCount);}();
result["members"]["pMapEntries"]=[&]() {
    json return_sRDlMhV=json({});
    
        if (name.pMapEntries==NULL){
            return_sRDlMhV["null"]=true;
            return return_sRDlMhV;
        }
        
        return_sRDlMhV["members"]={};
        for(int sRDlMhV=0; sRDlMhV < name.mapEntryCount; sRDlMhV++){
            json temp;
            temp=[&]() {
    json return_GaFKxPP=json({});
    return serialize_VkSpecializationMapEntry(name.pMapEntries[sRDlMhV]);}();
            return_sRDlMhV["members"][std::to_string(sRDlMhV)].push_back(temp);
        }
        return return_sRDlMhV;
        }();
result["members"]["dataSize"]=[&]() {
    json return_VwVTWUs=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_dhyZsyp=json({});
    
        if (name.pData==NULL){
            return_dhyZsyp["null"]=true;
            return return_dhyZsyp;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkSpecializationInfo deserialize_VkSpecializationInfo(json name){
        auto result=VkSpecializationInfo();
    
[&]() {
result.mapEntryCount=deserialize_uint32_t(name["members"]["mapEntryCount"]);}();
[&]() {
VkSpecializationMapEntry* temp_HODPPbN;[&]() {

        if (name["members"]["pMapEntries"].contains("null")){
        temp_HODPPbN=NULL;
        }
    temp_HODPPbN=(VkSpecializationMapEntry*)malloc(result.mapEntryCount*sizeof(VkSpecializationMapEntry));
        for (int HggEGKB=0; HggEGKB < result.mapEntryCount; HggEGKB++){
            [&]() {
temp_HODPPbN[HggEGKB]=deserialize_VkSpecializationMapEntry(name["members"]["pMapEntries"]["members"][HggEGKB]);}();;
        }
        }();result.pMapEntries=temp_HODPPbN;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_wkWXdZT;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_wkWXdZT=NULL;
        }
    temp_wkWXdZT=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_wkWXdZT;}();
return result;}

    json serialize_VkPipelineShaderStageCreateInfo(VkPipelineShaderStageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gxfCCtd=json({});
    return serialize_VkPipelineShaderStageCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_FQCAGvf=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["module"]=[&]() {
    json return_yjpMyrf=json({});
    return serialize_VkShaderModule(name.module);}();
result["members"]["pName"]=[&]() {
    json return_fydPvmv=json({});
    
        if (name.pName==NULL){
            return_fydPvmv["null"]=true;
            return return_fydPvmv;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pName"]=[&]() {
    json return_fydPvmv=json({});
    
        if (name.pName==NULL){
            return_fydPvmv["null"]=true;
            return return_fydPvmv;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_aeuPZoZ=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_aeuPZoZ["null"]=true;
            return return_aeuPZoZ;
        }
        return_aeuPZoZ=[&]() {
    json return_fnqaudl=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_aeuPZoZ;}();
return result;}

    VkPipelineShaderStageCreateInfo deserialize_VkPipelineShaderStageCreateInfo(json name){
        auto result=VkPipelineShaderStageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineShaderStageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.module=deserialize_VkShaderModule(name["members"]["module"]);}();
[&]() {
char* temp_uaicPga;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_uaicPga=NULL;
        }
    temp_uaicPga=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_uaicPga;}();
[&]() {
char* temp_uaicPga;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_uaicPga=NULL;
        }
    temp_uaicPga=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_uaicPga;}();
[&]() {
VkSpecializationInfo* temp_qhoLDqw;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_qhoLDqw=NULL;
        }
    [&]() {
*(temp_qhoLDqw)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_qhoLDqw;}();
return result;}

    json serialize_VkComputePipelineCreateInfo(VkComputePipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tXrevDQ=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_FsuinaU=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.stage);}();
result["members"]["layout"]=[&]() {
    json return_qjbIgUM=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_HeYHLTv=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_Mkeuads=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkComputePipelineCreateInfo deserialize_VkComputePipelineCreateInfo(json name){
        auto result=VkComputePipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["stage"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkComputePipelineIndirectBufferInfoNV(VkComputePipelineIndirectBufferInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["pipelineDeviceAddressCaptureReplay"]=[&]() {
    json return_VjycLAT=json({});
    return_VjycLAT=[&]() {
    json return_nNCUIJL=json({});
    return serialize_uint64_t(name.pipelineDeviceAddressCaptureReplay);}();return return_VjycLAT;}();
return result;}

    VkComputePipelineIndirectBufferInfoNV deserialize_VkComputePipelineIndirectBufferInfoNV(json name){
        auto result=VkComputePipelineIndirectBufferInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.pipelineDeviceAddressCaptureReplay=deserialize_uint64_t(name["members"]["pipelineDeviceAddressCaptureReplay"]);}();}();
return result;}

    json serialize_VkPipelineCreateFlags2CreateInfoKHR(VkPipelineCreateFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ytyswKM=json({});
    return serialize_VkPipelineCreateFlags2KHR(name.flags);}();
return result;}

    VkPipelineCreateFlags2CreateInfoKHR deserialize_VkPipelineCreateFlags2CreateInfoKHR(json name){
        auto result=VkPipelineCreateFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags2KHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVertexInputBindingDescription(VkVertexInputBindingDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_BpBrDUS=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_lWJEvlL=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_exAjkCF=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
return result;}

    VkVertexInputBindingDescription deserialize_VkVertexInputBindingDescription(json name){
        auto result=VkVertexInputBindingDescription();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription(VkVertexInputAttributeDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["location"]=[&]() {
    json return_XAwCZun=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_BpBrDUS=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_QevQWLB=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription deserialize_VkVertexInputAttributeDescription(json name){
        auto result=VkVertexInputAttributeDescription();
    
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPipelineVertexInputStateCreateInfo(VkPipelineVertexInputStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OClJTcu=json({});
    return serialize_VkPipelineVertexInputStateCreateFlags(name.flags);}();
result["members"]["vertexBindingDescriptionCount"]=[&]() {
    json return_VhTvVoO=json({});
    return serialize_uint32_t(name.vertexBindingDescriptionCount);}();
result["members"]["pVertexBindingDescriptions"]=[&]() {
    json return_NkQNYiz=json({});
    
        if (name.pVertexBindingDescriptions==NULL){
            return_NkQNYiz["null"]=true;
            return return_NkQNYiz;
        }
        
        return_NkQNYiz["members"]={};
        for(int NkQNYiz=0; NkQNYiz < name.vertexBindingDescriptionCount; NkQNYiz++){
            json temp;
            temp=[&]() {
    json return_ZQGYOsL=json({});
    return serialize_VkVertexInputBindingDescription(name.pVertexBindingDescriptions[NkQNYiz]);}();
            return_NkQNYiz["members"][std::to_string(NkQNYiz)].push_back(temp);
        }
        return return_NkQNYiz;
        }();
result["members"]["vertexAttributeDescriptionCount"]=[&]() {
    json return_AcPxAqB=json({});
    return serialize_uint32_t(name.vertexAttributeDescriptionCount);}();
result["members"]["pVertexAttributeDescriptions"]=[&]() {
    json return_BnPYVHF=json({});
    
        if (name.pVertexAttributeDescriptions==NULL){
            return_BnPYVHF["null"]=true;
            return return_BnPYVHF;
        }
        
        return_BnPYVHF["members"]={};
        for(int BnPYVHF=0; BnPYVHF < name.vertexAttributeDescriptionCount; BnPYVHF++){
            json temp;
            temp=[&]() {
    json return_jWuXOaZ=json({});
    return serialize_VkVertexInputAttributeDescription(name.pVertexAttributeDescriptions[BnPYVHF]);}();
            return_BnPYVHF["members"][std::to_string(BnPYVHF)].push_back(temp);
        }
        return return_BnPYVHF;
        }();
return result;}

    VkPipelineVertexInputStateCreateInfo deserialize_VkPipelineVertexInputStateCreateInfo(json name){
        auto result=VkPipelineVertexInputStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineVertexInputStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.vertexBindingDescriptionCount=deserialize_uint32_t(name["members"]["vertexBindingDescriptionCount"]);}();
[&]() {
VkVertexInputBindingDescription* temp_ldXYppF;[&]() {

        if (name["members"]["pVertexBindingDescriptions"].contains("null")){
        temp_ldXYppF=NULL;
        }
    temp_ldXYppF=(VkVertexInputBindingDescription*)malloc(result.vertexBindingDescriptionCount*sizeof(VkVertexInputBindingDescription));
        for (int FTkgkrH=0; FTkgkrH < result.vertexBindingDescriptionCount; FTkgkrH++){
            [&]() {
temp_ldXYppF[FTkgkrH]=deserialize_VkVertexInputBindingDescription(name["members"]["pVertexBindingDescriptions"]["members"][FTkgkrH]);}();;
        }
        }();result.pVertexBindingDescriptions=temp_ldXYppF;}();
[&]() {
result.vertexAttributeDescriptionCount=deserialize_uint32_t(name["members"]["vertexAttributeDescriptionCount"]);}();
[&]() {
VkVertexInputAttributeDescription* temp_CvYERFw;[&]() {

        if (name["members"]["pVertexAttributeDescriptions"].contains("null")){
        temp_CvYERFw=NULL;
        }
    temp_CvYERFw=(VkVertexInputAttributeDescription*)malloc(result.vertexAttributeDescriptionCount*sizeof(VkVertexInputAttributeDescription));
        for (int GOQwEOE=0; GOQwEOE < result.vertexAttributeDescriptionCount; GOQwEOE++){
            [&]() {
temp_CvYERFw[GOQwEOE]=deserialize_VkVertexInputAttributeDescription(name["members"]["pVertexAttributeDescriptions"]["members"][GOQwEOE]);}();;
        }
        }();result.pVertexAttributeDescriptions=temp_CvYERFw;}();
return result;}

    json serialize_VkPipelineInputAssemblyStateCreateInfo(VkPipelineInputAssemblyStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dqrlvgG=json({});
    return serialize_VkPipelineInputAssemblyStateCreateFlags(name.flags);}();
result["members"]["topology"]=[&]() {
    json return_ffKYozU=json({});
    return serialize_VkPrimitiveTopology(name.topology);}();
result["members"]["primitiveRestartEnable"]=[&]() {
    json return_LHwHZjn=json({});
    return_LHwHZjn=[&]() {
    json return_ZaZNvNm=json({});
    return serialize_uint32_t(name.primitiveRestartEnable);}();return return_LHwHZjn;}();
return result;}

    VkPipelineInputAssemblyStateCreateInfo deserialize_VkPipelineInputAssemblyStateCreateInfo(json name){
        auto result=VkPipelineInputAssemblyStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineInputAssemblyStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.topology=deserialize_VkPrimitiveTopology(name["members"]["topology"]);}();
[&]() {
[&]() {
result.primitiveRestartEnable=deserialize_uint32_t(name["members"]["primitiveRestartEnable"]);}();}();
return result;}

    json serialize_VkPipelineTessellationStateCreateInfo(VkPipelineTessellationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tSmonkj=json({});
    return serialize_VkPipelineTessellationStateCreateFlags(name.flags);}();
result["members"]["patchControlPoints"]=[&]() {
    json return_sxIeyRX=json({});
    return serialize_uint32_t(name.patchControlPoints);}();
return result;}

    VkPipelineTessellationStateCreateInfo deserialize_VkPipelineTessellationStateCreateInfo(json name){
        auto result=VkPipelineTessellationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineTessellationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.patchControlPoints=deserialize_uint32_t(name["members"]["patchControlPoints"]);}();
return result;}

    json serialize_VkPipelineViewportStateCreateInfo(VkPipelineViewportStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BYWmqAM=json({});
    return serialize_VkPipelineViewportStateCreateFlags(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_ngXLoMy=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewports"]=[&]() {
    json return_BuegWcg=json({});
    
        if (name.pViewports==NULL){
            return_BuegWcg["null"]=true;
            return return_BuegWcg;
        }
        
        return_BuegWcg["members"]={};
        for(int BuegWcg=0; BuegWcg < name.viewportCount; BuegWcg++){
            json temp;
            temp=[&]() {
    json return_lEjYMzK=json({});
    return serialize_VkViewport(name.pViewports[BuegWcg]);}();
            return_BuegWcg["members"][std::to_string(BuegWcg)].push_back(temp);
        }
        return return_BuegWcg;
        }();
result["members"]["scissorCount"]=[&]() {
    json return_safkfUp=json({});
    return serialize_uint32_t(name.scissorCount);}();
result["members"]["pScissors"]=[&]() {
    json return_XCtDsZM=json({});
    
        if (name.pScissors==NULL){
            return_XCtDsZM["null"]=true;
            return return_XCtDsZM;
        }
        
        return_XCtDsZM["members"]={};
        for(int XCtDsZM=0; XCtDsZM < name.scissorCount; XCtDsZM++){
            json temp;
            temp=[&]() {
    json return_lkAiAQA=json({});
    return serialize_VkRect2D(name.pScissors[XCtDsZM]);}();
            return_XCtDsZM["members"][std::to_string(XCtDsZM)].push_back(temp);
        }
        return return_XCtDsZM;
        }();
return result;}

    VkPipelineViewportStateCreateInfo deserialize_VkPipelineViewportStateCreateInfo(json name){
        auto result=VkPipelineViewportStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineViewportStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewport* temp_yBYnqVK;[&]() {

        if (name["members"]["pViewports"].contains("null")){
        temp_yBYnqVK=NULL;
        }
    temp_yBYnqVK=(VkViewport*)malloc(result.viewportCount*sizeof(VkViewport));
        for (int LqfdDdC=0; LqfdDdC < result.viewportCount; LqfdDdC++){
            [&]() {
temp_yBYnqVK[LqfdDdC]=deserialize_VkViewport(name["members"]["pViewports"]["members"][LqfdDdC]);}();;
        }
        }();result.pViewports=temp_yBYnqVK;}();
[&]() {
result.scissorCount=deserialize_uint32_t(name["members"]["scissorCount"]);}();
[&]() {
VkRect2D* temp_jFITUqy;[&]() {

        if (name["members"]["pScissors"].contains("null")){
        temp_jFITUqy=NULL;
        }
    temp_jFITUqy=(VkRect2D*)malloc(result.scissorCount*sizeof(VkRect2D));
        for (int aYAyHVh=0; aYAyHVh < result.scissorCount; aYAyHVh++){
            [&]() {
temp_jFITUqy[aYAyHVh]=deserialize_VkRect2D(name["members"]["pScissors"]["members"][aYAyHVh]);}();;
        }
        }();result.pScissors=temp_jFITUqy;}();
return result;}

    json serialize_VkPipelineRasterizationStateCreateInfo(VkPipelineRasterizationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gazkQsJ=json({});
    return serialize_VkPipelineRasterizationStateCreateFlags(name.flags);}();
result["members"]["depthClampEnable"]=[&]() {
    json return_BqkBjNO=json({});
    return_BqkBjNO=[&]() {
    json return_VefNJvq=json({});
    return serialize_uint32_t(name.depthClampEnable);}();return return_BqkBjNO;}();
result["members"]["rasterizerDiscardEnable"]=[&]() {
    json return_VsvrYxt=json({});
    return_VsvrYxt=[&]() {
    json return_jyJFsfY=json({});
    return serialize_uint32_t(name.rasterizerDiscardEnable);}();return return_VsvrYxt;}();
result["members"]["polygonMode"]=[&]() {
    json return_TjKCbcE=json({});
    return serialize_VkPolygonMode(name.polygonMode);}();
result["members"]["cullMode"]=[&]() {
    json return_mGYoAia=json({});
    return serialize_VkCullModeFlags(name.cullMode);}();
result["members"]["frontFace"]=[&]() {
    json return_rKCUsac=json({});
    return serialize_VkFrontFace(name.frontFace);}();
result["members"]["depthBiasEnable"]=[&]() {
    json return_GkQujay=json({});
    return_GkQujay=[&]() {
    json return_dYQLKyg=json({});
    return serialize_uint32_t(name.depthBiasEnable);}();return return_GkQujay;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_HYhiYxz=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_VfNOlUW=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_SobABbg=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
result["members"]["lineWidth"]=[&]() {
    json return_DBgiSAN=json({});
    return serialize_float(name.lineWidth);}();
return result;}

    VkPipelineRasterizationStateCreateInfo deserialize_VkPipelineRasterizationStateCreateInfo(json name){
        auto result=VkPipelineRasterizationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClampEnable=deserialize_uint32_t(name["members"]["depthClampEnable"]);}();}();
[&]() {
[&]() {
result.rasterizerDiscardEnable=deserialize_uint32_t(name["members"]["rasterizerDiscardEnable"]);}();}();
[&]() {
result.polygonMode=deserialize_VkPolygonMode(name["members"]["polygonMode"]);}();
[&]() {
result.cullMode=deserialize_VkCullModeFlags(name["members"]["cullMode"]);}();
[&]() {
result.frontFace=deserialize_VkFrontFace(name["members"]["frontFace"]);}();
[&]() {
[&]() {
result.depthBiasEnable=deserialize_uint32_t(name["members"]["depthBiasEnable"]);}();}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
[&]() {
result.lineWidth=deserialize_float(name["members"]["lineWidth"]);}();
return result;}

    json serialize_VkPipelineMultisampleStateCreateInfo(VkPipelineMultisampleStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uMECwnz=json({});
    return serialize_VkPipelineMultisampleStateCreateFlags(name.flags);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_solYlXE=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["sampleShadingEnable"]=[&]() {
    json return_RfVQJSa=json({});
    return_RfVQJSa=[&]() {
    json return_UwwzLHw=json({});
    return serialize_uint32_t(name.sampleShadingEnable);}();return return_RfVQJSa;}();
result["members"]["minSampleShading"]=[&]() {
    json return_KKfgqVl=json({});
    return serialize_float(name.minSampleShading);}();
result["members"]["pSampleMask"]=[&]() {
    json return_klVeMve=json({});
    
        if (name.pSampleMask==NULL){
            return_klVeMve["null"]=true;
            return return_klVeMve;
        }
        
        return_klVeMve["members"]={};
        for(int klVeMve=0; klVeMve < (name.rasterizationSamples + 31) / 32; klVeMve++){
            json temp;
            temp=[&]() {
    json return_tQyzFIO=json({});
    return_tQyzFIO=[&]() {
    json return_CVixNjl=json({});
    return serialize_uint32_t(name.pSampleMask[klVeMve]);}();return return_tQyzFIO;}();
            return_klVeMve["members"][std::to_string(klVeMve)].push_back(temp);
        }
        return return_klVeMve;
        }();
result["members"]["alphaToCoverageEnable"]=[&]() {
    json return_ujsmBTI=json({});
    return_ujsmBTI=[&]() {
    json return_YiOzFaP=json({});
    return serialize_uint32_t(name.alphaToCoverageEnable);}();return return_ujsmBTI;}();
result["members"]["alphaToOneEnable"]=[&]() {
    json return_UtsTgcn=json({});
    return_UtsTgcn=[&]() {
    json return_jkSvKSz=json({});
    return serialize_uint32_t(name.alphaToOneEnable);}();return return_UtsTgcn;}();
return result;}

    VkPipelineMultisampleStateCreateInfo deserialize_VkPipelineMultisampleStateCreateInfo(json name){
        auto result=VkPipelineMultisampleStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineMultisampleStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
[&]() {
result.sampleShadingEnable=deserialize_uint32_t(name["members"]["sampleShadingEnable"]);}();}();
[&]() {
result.minSampleShading=deserialize_float(name["members"]["minSampleShading"]);}();
[&]() {
VkSampleMask* temp_bdTdcaP;[&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_bdTdcaP=NULL;
        }
    temp_bdTdcaP=(VkSampleMask*)malloc((result.rasterizationSamples + 31) / 32*sizeof(VkSampleMask));
        for (int WlHztXv=0; WlHztXv < (result.rasterizationSamples + 31) / 32; WlHztXv++){
            [&]() {
[&]() {
temp_bdTdcaP[WlHztXv]=deserialize_uint32_t(name["members"]["pSampleMask"]["members"][WlHztXv]);}();}();;
        }
        }();result.pSampleMask=temp_bdTdcaP;}();
[&]() {
[&]() {
result.alphaToCoverageEnable=deserialize_uint32_t(name["members"]["alphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.alphaToOneEnable=deserialize_uint32_t(name["members"]["alphaToOneEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAttachmentState(VkPipelineColorBlendAttachmentState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["blendEnable"]=[&]() {
    json return_CacxKmx=json({});
    return_CacxKmx=[&]() {
    json return_ocOKyTw=json({});
    return serialize_uint32_t(name.blendEnable);}();return return_CacxKmx;}();
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_KnUlHmO=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_pEVmILP=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_YaZmRgq=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_xLwFYwx=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_SfBfPls=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_NQHVtMu=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
result["members"]["colorWriteMask"]=[&]() {
    json return_corOkuE=json({});
    return serialize_VkColorComponentFlags(name.colorWriteMask);}();
return result;}

    VkPipelineColorBlendAttachmentState deserialize_VkPipelineColorBlendAttachmentState(json name){
        auto result=VkPipelineColorBlendAttachmentState();
    
[&]() {
[&]() {
result.blendEnable=deserialize_uint32_t(name["members"]["blendEnable"]);}();}();
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
[&]() {
result.colorWriteMask=deserialize_VkColorComponentFlags(name["members"]["colorWriteMask"]);}();
return result;}

    json serialize_VkPipelineColorBlendStateCreateInfo(VkPipelineColorBlendStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MSomHUY=json({});
    return serialize_VkPipelineColorBlendStateCreateFlags(name.flags);}();
result["members"]["logicOpEnable"]=[&]() {
    json return_BlOuYAB=json({});
    return_BlOuYAB=[&]() {
    json return_GbhjCfB=json({});
    return serialize_uint32_t(name.logicOpEnable);}();return return_BlOuYAB;}();
result["members"]["logicOp"]=[&]() {
    json return_BtvMdWa=json({});
    return serialize_VkLogicOp(name.logicOp);}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_MdFhQHm=json({});
    
        if (name.pAttachments==NULL){
            return_MdFhQHm["null"]=true;
            return return_MdFhQHm;
        }
        
        return_MdFhQHm["members"]={};
        for(int MdFhQHm=0; MdFhQHm < name.attachmentCount; MdFhQHm++){
            json temp;
            temp=[&]() {
    json return_YpRfEGh=json({});
    return serialize_VkPipelineColorBlendAttachmentState(name.pAttachments[MdFhQHm]);}();
            return_MdFhQHm["members"][std::to_string(MdFhQHm)].push_back(temp);
        }
        return return_MdFhQHm;
        }();
result["members"]["blendConstants"]=[&]() {
    json return_FxRDYnA=json({});
    
        return_FxRDYnA["members"]={};
        for(int FxRDYnA=0; FxRDYnA < 4; FxRDYnA++){
            json temp;
            temp=[&]() {
    json return_ouZylAr=json({});
    return serialize_float(name.blendConstants[FxRDYnA]);}();
            return_FxRDYnA["members"][std::to_string(FxRDYnA)].push_back(temp);
        }
        return return_FxRDYnA;
        }();
return result;}

    VkPipelineColorBlendStateCreateInfo deserialize_VkPipelineColorBlendStateCreateInfo(json name){
        auto result=VkPipelineColorBlendStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineColorBlendStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.logicOpEnable=deserialize_uint32_t(name["members"]["logicOpEnable"]);}();}();
[&]() {
result.logicOp=deserialize_VkLogicOp(name["members"]["logicOp"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkPipelineColorBlendAttachmentState* temp_sBBSSAN;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_sBBSSAN=NULL;
        }
    temp_sBBSSAN=(VkPipelineColorBlendAttachmentState*)malloc(result.attachmentCount*sizeof(VkPipelineColorBlendAttachmentState));
        for (int oDwYsjd=0; oDwYsjd < result.attachmentCount; oDwYsjd++){
            [&]() {
temp_sBBSSAN[oDwYsjd]=deserialize_VkPipelineColorBlendAttachmentState(name["members"]["pAttachments"]["members"][oDwYsjd]);}();;
        }
        }();result.pAttachments=temp_sBBSSAN;}();
[&]() {

        for (int GZPaRds=0; GZPaRds < 4; GZPaRds++){
            [&]() {
result.blendConstants[GZPaRds]=deserialize_float(name["members"]["blendConstants"]["members"][GZPaRds]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineDynamicStateCreateInfo(VkPipelineDynamicStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MgCJWwl=json({});
    return serialize_VkPipelineDynamicStateCreateFlags(name.flags);}();
result["members"]["dynamicStateCount"]=[&]() {
    json return_XCBYdgk=json({});
    return serialize_uint32_t(name.dynamicStateCount);}();
result["members"]["pDynamicStates"]=[&]() {
    json return_hzDUltj=json({});
    
        if (name.pDynamicStates==NULL){
            return_hzDUltj["null"]=true;
            return return_hzDUltj;
        }
        
        return_hzDUltj["members"]={};
        for(int hzDUltj=0; hzDUltj < name.dynamicStateCount; hzDUltj++){
            json temp;
            temp=[&]() {
    json return_kxizdXf=json({});
    return serialize_VkDynamicState(name.pDynamicStates[hzDUltj]);}();
            return_hzDUltj["members"][std::to_string(hzDUltj)].push_back(temp);
        }
        return return_hzDUltj;
        }();
return result;}

    VkPipelineDynamicStateCreateInfo deserialize_VkPipelineDynamicStateCreateInfo(json name){
        auto result=VkPipelineDynamicStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineDynamicStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.dynamicStateCount=deserialize_uint32_t(name["members"]["dynamicStateCount"]);}();
[&]() {
VkDynamicState* temp_RPDiOge;[&]() {

        if (name["members"]["pDynamicStates"].contains("null")){
        temp_RPDiOge=NULL;
        }
    temp_RPDiOge=(VkDynamicState*)malloc(result.dynamicStateCount*sizeof(VkDynamicState));
        for (int iYIVmTn=0; iYIVmTn < result.dynamicStateCount; iYIVmTn++){
            [&]() {
temp_RPDiOge[iYIVmTn]=deserialize_VkDynamicState(name["members"]["pDynamicStates"]["members"][iYIVmTn]);}();;
        }
        }();result.pDynamicStates=temp_RPDiOge;}();
return result;}

    json serialize_VkStencilOpState(VkStencilOpState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["failOp"]=[&]() {
    json return_MXutaVI=json({});
    return serialize_VkStencilOp(name.failOp);}();
result["members"]["passOp"]=[&]() {
    json return_voBdZjY=json({});
    return serialize_VkStencilOp(name.passOp);}();
result["members"]["depthFailOp"]=[&]() {
    json return_znqOprq=json({});
    return serialize_VkStencilOp(name.depthFailOp);}();
result["members"]["compareOp"]=[&]() {
    json return_FleRHNb=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["compareMask"]=[&]() {
    json return_BkiqAeI=json({});
    return serialize_uint32_t(name.compareMask);}();
result["members"]["writeMask"]=[&]() {
    json return_irjmxfQ=json({});
    return serialize_uint32_t(name.writeMask);}();
result["members"]["reference"]=[&]() {
    json return_ATXGSlf=json({});
    return serialize_uint32_t(name.reference);}();
return result;}

    VkStencilOpState deserialize_VkStencilOpState(json name){
        auto result=VkStencilOpState();
    
[&]() {
result.failOp=deserialize_VkStencilOp(name["members"]["failOp"]);}();
[&]() {
result.passOp=deserialize_VkStencilOp(name["members"]["passOp"]);}();
[&]() {
result.depthFailOp=deserialize_VkStencilOp(name["members"]["depthFailOp"]);}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.compareMask=deserialize_uint32_t(name["members"]["compareMask"]);}();
[&]() {
result.writeMask=deserialize_uint32_t(name["members"]["writeMask"]);}();
[&]() {
result.reference=deserialize_uint32_t(name["members"]["reference"]);}();
return result;}

    json serialize_VkPipelineDepthStencilStateCreateInfo(VkPipelineDepthStencilStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FVJNIkX=json({});
    return serialize_VkPipelineDepthStencilStateCreateFlags(name.flags);}();
result["members"]["depthTestEnable"]=[&]() {
    json return_okdGzoF=json({});
    return_okdGzoF=[&]() {
    json return_oananuo=json({});
    return serialize_uint32_t(name.depthTestEnable);}();return return_okdGzoF;}();
result["members"]["depthWriteEnable"]=[&]() {
    json return_tjqOvUA=json({});
    return_tjqOvUA=[&]() {
    json return_WbLjzht=json({});
    return serialize_uint32_t(name.depthWriteEnable);}();return return_tjqOvUA;}();
result["members"]["depthCompareOp"]=[&]() {
    json return_BVTfXIr=json({});
    return serialize_VkCompareOp(name.depthCompareOp);}();
result["members"]["depthBoundsTestEnable"]=[&]() {
    json return_goaMhSU=json({});
    return_goaMhSU=[&]() {
    json return_sstDyPV=json({});
    return serialize_uint32_t(name.depthBoundsTestEnable);}();return return_goaMhSU;}();
result["members"]["stencilTestEnable"]=[&]() {
    json return_XoeQgKT=json({});
    return_XoeQgKT=[&]() {
    json return_xWulsau=json({});
    return serialize_uint32_t(name.stencilTestEnable);}();return return_XoeQgKT;}();
result["members"]["front"]=[&]() {
    json return_NnocIAi=json({});
    return serialize_VkStencilOpState(name.front);}();
result["members"]["back"]=[&]() {
    json return_ZeZGfDo=json({});
    return serialize_VkStencilOpState(name.back);}();
result["members"]["minDepthBounds"]=[&]() {
    json return_iqGoocx=json({});
    return serialize_float(name.minDepthBounds);}();
result["members"]["maxDepthBounds"]=[&]() {
    json return_QdsATqg=json({});
    return serialize_float(name.maxDepthBounds);}();
return result;}

    VkPipelineDepthStencilStateCreateInfo deserialize_VkPipelineDepthStencilStateCreateInfo(json name){
        auto result=VkPipelineDepthStencilStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineDepthStencilStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthTestEnable=deserialize_uint32_t(name["members"]["depthTestEnable"]);}();}();
[&]() {
[&]() {
result.depthWriteEnable=deserialize_uint32_t(name["members"]["depthWriteEnable"]);}();}();
[&]() {
result.depthCompareOp=deserialize_VkCompareOp(name["members"]["depthCompareOp"]);}();
[&]() {
[&]() {
result.depthBoundsTestEnable=deserialize_uint32_t(name["members"]["depthBoundsTestEnable"]);}();}();
[&]() {
[&]() {
result.stencilTestEnable=deserialize_uint32_t(name["members"]["stencilTestEnable"]);}();}();
[&]() {
result.front=deserialize_VkStencilOpState(name["members"]["front"]);}();
[&]() {
result.back=deserialize_VkStencilOpState(name["members"]["back"]);}();
[&]() {
result.minDepthBounds=deserialize_float(name["members"]["minDepthBounds"]);}();
[&]() {
result.maxDepthBounds=deserialize_float(name["members"]["maxDepthBounds"]);}();
return result;}

    json serialize_VkGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tXrevDQ=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_HUoWBmB=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_JogxCwb=json({});
    
        if (name.pStages==NULL){
            return_JogxCwb["null"]=true;
            return return_JogxCwb;
        }
        
        return_JogxCwb["members"]={};
        for(int JogxCwb=0; JogxCwb < name.stageCount; JogxCwb++){
            json temp;
            temp=[&]() {
    json return_VVAWtpC=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[JogxCwb]);}();
            return_JogxCwb["members"][std::to_string(JogxCwb)].push_back(temp);
        }
        return return_JogxCwb;
        }();
result["members"]["pStages"]=[&]() {
    json return_JogxCwb=json({});
    
        if (name.pStages==NULL){
            return_JogxCwb["null"]=true;
            return return_JogxCwb;
        }
        
        return_JogxCwb["members"]={};
        for(int JogxCwb=0; JogxCwb < name.stageCount; JogxCwb++){
            json temp;
            temp=[&]() {
    json return_VVAWtpC=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[JogxCwb]);}();
            return_JogxCwb["members"][std::to_string(JogxCwb)].push_back(temp);
        }
        return return_JogxCwb;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_dqCgcbD=json({});
    
        if (name.pVertexInputState==NULL){
            return_dqCgcbD["null"]=true;
            return return_dqCgcbD;
        }
        return_dqCgcbD=[&]() {
    json return_yluWGLQ=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_dqCgcbD;}();
result["members"]["pInputAssemblyState"]=[&]() {
    json return_SdBhVRu=json({});
    
        if (name.pInputAssemblyState==NULL){
            return_SdBhVRu["null"]=true;
            return return_SdBhVRu;
        }
        return_SdBhVRu=[&]() {
    json return_asHimNj=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*name.pInputAssemblyState);}();
return return_SdBhVRu;}();
result["members"]["pTessellationState"]=[&]() {
    json return_SqnOQMm=json({});
    
        if (name.pTessellationState==NULL){
            return_SqnOQMm["null"]=true;
            return return_SqnOQMm;
        }
        return_SqnOQMm=[&]() {
    json return_CLlvdaI=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_SqnOQMm;}();
result["members"]["pViewportState"]=[&]() {
    json return_bXhQTuA=json({});
    
        if (name.pViewportState==NULL){
            return_bXhQTuA["null"]=true;
            return return_bXhQTuA;
        }
        return_bXhQTuA=[&]() {
    json return_HOXjIic=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*name.pViewportState);}();
return return_bXhQTuA;}();
result["members"]["pRasterizationState"]=[&]() {
    json return_TwkDwsl=json({});
    
        if (name.pRasterizationState==NULL){
            return_TwkDwsl["null"]=true;
            return return_TwkDwsl;
        }
        return_TwkDwsl=[&]() {
    json return_WEKPyvL=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*name.pRasterizationState);}();
return return_TwkDwsl;}();
result["members"]["pMultisampleState"]=[&]() {
    json return_cIvmeZM=json({});
    
        if (name.pMultisampleState==NULL){
            return_cIvmeZM["null"]=true;
            return return_cIvmeZM;
        }
        return_cIvmeZM=[&]() {
    json return_DuJzThP=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*name.pMultisampleState);}();
return return_cIvmeZM;}();
result["members"]["pDepthStencilState"]=[&]() {
    json return_hUqmYSy=json({});
    
        if (name.pDepthStencilState==NULL){
            return_hUqmYSy["null"]=true;
            return return_hUqmYSy;
        }
        return_hUqmYSy=[&]() {
    json return_BTkrLCk=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*name.pDepthStencilState);}();
return return_hUqmYSy;}();
result["members"]["pColorBlendState"]=[&]() {
    json return_QOvkHNN=json({});
    
        if (name.pColorBlendState==NULL){
            return_QOvkHNN["null"]=true;
            return return_QOvkHNN;
        }
        return_QOvkHNN=[&]() {
    json return_rbJEDEj=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*name.pColorBlendState);}();
return return_QOvkHNN;}();
result["members"]["pDynamicState"]=[&]() {
    json return_TyQhKod=json({});
    
        if (name.pDynamicState==NULL){
            return_TyQhKod["null"]=true;
            return return_TyQhKod;
        }
        return_TyQhKod=[&]() {
    json return_yYPOXeJ=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_TyQhKod;}();
result["members"]["layout"]=[&]() {
    json return_qjbIgUM=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["renderPass"]=[&]() {
    json return_eCcfmNF=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_XDZzjUX=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_HeYHLTv=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_Mkeuads=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkGraphicsPipelineCreateInfo deserialize_VkGraphicsPipelineCreateInfo(json name){
        auto result=VkGraphicsPipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_wmeakbU;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_wmeakbU=NULL;
        }
    temp_wmeakbU=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int EIxdjSJ=0; EIxdjSJ < result.stageCount; EIxdjSJ++){
            [&]() {
temp_wmeakbU[EIxdjSJ]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][EIxdjSJ]);}();;
        }
        }();result.pStages=temp_wmeakbU;}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_wmeakbU;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_wmeakbU=NULL;
        }
    temp_wmeakbU=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int EIxdjSJ=0; EIxdjSJ < result.stageCount; EIxdjSJ++){
            [&]() {
temp_wmeakbU[EIxdjSJ]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][EIxdjSJ]);}();;
        }
        }();result.pStages=temp_wmeakbU;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_yPPvfWd;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_yPPvfWd=NULL;
        }
    [&]() {
*(temp_yPPvfWd)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_yPPvfWd;}();
[&]() {
VkPipelineInputAssemblyStateCreateInfo* temp_lyFxApt;[&]() {

        if (name["members"]["pInputAssemblyState"].contains("null")){
        temp_lyFxApt=NULL;
        }
    [&]() {
*(temp_lyFxApt)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name["members"]["pInputAssemblyState"]);}();
}();result.pInputAssemblyState=temp_lyFxApt;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_vhRTGMt;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_vhRTGMt=NULL;
        }
    [&]() {
*(temp_vhRTGMt)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_vhRTGMt;}();
[&]() {
VkPipelineViewportStateCreateInfo* temp_guexrmr;[&]() {

        if (name["members"]["pViewportState"].contains("null")){
        temp_guexrmr=NULL;
        }
    [&]() {
*(temp_guexrmr)=deserialize_VkPipelineViewportStateCreateInfo(name["members"]["pViewportState"]);}();
}();result.pViewportState=temp_guexrmr;}();
[&]() {
VkPipelineRasterizationStateCreateInfo* temp_hecgTld;[&]() {

        if (name["members"]["pRasterizationState"].contains("null")){
        temp_hecgTld=NULL;
        }
    [&]() {
*(temp_hecgTld)=deserialize_VkPipelineRasterizationStateCreateInfo(name["members"]["pRasterizationState"]);}();
}();result.pRasterizationState=temp_hecgTld;}();
[&]() {
VkPipelineMultisampleStateCreateInfo* temp_XlPDnMu;[&]() {

        if (name["members"]["pMultisampleState"].contains("null")){
        temp_XlPDnMu=NULL;
        }
    [&]() {
*(temp_XlPDnMu)=deserialize_VkPipelineMultisampleStateCreateInfo(name["members"]["pMultisampleState"]);}();
}();result.pMultisampleState=temp_XlPDnMu;}();
[&]() {
VkPipelineDepthStencilStateCreateInfo* temp_NvIcfoc;[&]() {

        if (name["members"]["pDepthStencilState"].contains("null")){
        temp_NvIcfoc=NULL;
        }
    [&]() {
*(temp_NvIcfoc)=deserialize_VkPipelineDepthStencilStateCreateInfo(name["members"]["pDepthStencilState"]);}();
}();result.pDepthStencilState=temp_NvIcfoc;}();
[&]() {
VkPipelineColorBlendStateCreateInfo* temp_peMmDxh;[&]() {

        if (name["members"]["pColorBlendState"].contains("null")){
        temp_peMmDxh=NULL;
        }
    [&]() {
*(temp_peMmDxh)=deserialize_VkPipelineColorBlendStateCreateInfo(name["members"]["pColorBlendState"]);}();
}();result.pColorBlendState=temp_peMmDxh;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_ebagFXm;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_ebagFXm=NULL;
        }
    [&]() {
*(temp_ebagFXm)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_ebagFXm;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkPipelineCacheCreateInfo(VkPipelineCacheCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uLtInDl=json({});
    return serialize_VkPipelineCacheCreateFlags(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_PGjdlnH=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["initialDataSize"]=[&]() {
    json return_PGjdlnH=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_mbtiLJl=json({});
    
        if (name.pInitialData==NULL){
            return_mbtiLJl["null"]=true;
            return return_mbtiLJl;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkPipelineCacheCreateInfo deserialize_VkPipelineCacheCreateInfo(json name){
        auto result=VkPipelineCacheCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCacheCreateFlags(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_UURIezS;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_UURIezS=NULL;
        }
    temp_UURIezS=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_UURIezS;}();
return result;}

    json serialize_VkPipelineCacheHeaderVersionOne(VkPipelineCacheHeaderVersionOne name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_FtATKYA=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_GEcVXQc=json({});
    return serialize_VkPipelineCacheHeaderVersion(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_buNXFan=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_MQsAsRj=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_VrGSmxY=json({});
    
        return_VrGSmxY["members"]={};
        for(int VrGSmxY=0; VrGSmxY < VK_UUID_SIZE; VrGSmxY++){
            json temp;
            temp=[&]() {
    json return_JfHjXIm=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[VrGSmxY]);}();
            return_VrGSmxY["members"][std::to_string(VrGSmxY)].push_back(temp);
        }
        return return_VrGSmxY;
        }();
return result;}

    VkPipelineCacheHeaderVersionOne deserialize_VkPipelineCacheHeaderVersionOne(json name){
        auto result=VkPipelineCacheHeaderVersionOne();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkPipelineCacheHeaderVersion(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {

        for (int KuCUrkQ=0; KuCUrkQ < VK_UUID_SIZE; KuCUrkQ++){
            [&]() {
result.pipelineCacheUUID[KuCUrkQ]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][KuCUrkQ]);}();;
        }
        }();
return result;}

    json serialize_VkPushConstantRange(VkPushConstantRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["stageFlags"]=[&]() {
    json return_ePaEqrh=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["offset"]=[&]() {
    json return_QevQWLB=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_jmzVtiR=json({});
    return serialize_uint32_t(name.size);}();
return result;}

    VkPushConstantRange deserialize_VkPushConstantRange(json name){
        auto result=VkPushConstantRange();
    
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
return result;}

    json serialize_VkPipelineLayoutCreateInfo(VkPipelineLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YjJEWgd=json({});
    return serialize_VkPipelineLayoutCreateFlags(name.flags);}();
result["members"]["setLayoutCount"]=[&]() {
    json return_YRrdYtD=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_ZsgayCy=json({});
    
        if (name.pSetLayouts==NULL){
            return_ZsgayCy["null"]=true;
            return return_ZsgayCy;
        }
        
        return_ZsgayCy["members"]={};
        for(int ZsgayCy=0; ZsgayCy < name.setLayoutCount; ZsgayCy++){
            json temp;
            temp=[&]() {
    json return_BmyPkLF=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[ZsgayCy]);}();
            return_ZsgayCy["members"][std::to_string(ZsgayCy)].push_back(temp);
        }
        return return_ZsgayCy;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_NJcDMQa=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_fbtPAWc=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_fbtPAWc["null"]=true;
            return return_fbtPAWc;
        }
        
        return_fbtPAWc["members"]={};
        for(int fbtPAWc=0; fbtPAWc < name.pushConstantRangeCount; fbtPAWc++){
            json temp;
            temp=[&]() {
    json return_ijJiYJG=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[fbtPAWc]);}();
            return_fbtPAWc["members"][std::to_string(fbtPAWc)].push_back(temp);
        }
        return return_fbtPAWc;
        }();
return result;}

    VkPipelineLayoutCreateInfo deserialize_VkPipelineLayoutCreateInfo(json name){
        auto result=VkPipelineLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_mZYzMaz;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_mZYzMaz=NULL;
        }
    temp_mZYzMaz=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int UWvCHBq=0; UWvCHBq < result.setLayoutCount; UWvCHBq++){
            [&]() {
temp_mZYzMaz[UWvCHBq]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][UWvCHBq]);}();;
        }
        }();result.pSetLayouts=temp_mZYzMaz;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_xozEiSl;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_xozEiSl=NULL;
        }
    temp_xozEiSl=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int CzPpuGM=0; CzPpuGM < result.pushConstantRangeCount; CzPpuGM++){
            [&]() {
temp_xozEiSl[CzPpuGM]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][CzPpuGM]);}();;
        }
        }();result.pPushConstantRanges=temp_xozEiSl;}();
return result;}

    json serialize_VkSamplerCreateInfo(VkSamplerCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_thwjLbM=json({});
    return serialize_VkSamplerCreateFlags(name.flags);}();
result["members"]["magFilter"]=[&]() {
    json return_grQNbpI=json({});
    return serialize_VkFilter(name.magFilter);}();
result["members"]["minFilter"]=[&]() {
    json return_EdOCgxb=json({});
    return serialize_VkFilter(name.minFilter);}();
result["members"]["mipmapMode"]=[&]() {
    json return_BheBgWK=json({});
    return serialize_VkSamplerMipmapMode(name.mipmapMode);}();
result["members"]["addressModeU"]=[&]() {
    json return_DRWSzUY=json({});
    return serialize_VkSamplerAddressMode(name.addressModeU);}();
result["members"]["addressModeV"]=[&]() {
    json return_iLECace=json({});
    return serialize_VkSamplerAddressMode(name.addressModeV);}();
result["members"]["addressModeW"]=[&]() {
    json return_tsGyiPi=json({});
    return serialize_VkSamplerAddressMode(name.addressModeW);}();
result["members"]["mipLodBias"]=[&]() {
    json return_RMfsfnB=json({});
    return serialize_float(name.mipLodBias);}();
result["members"]["anisotropyEnable"]=[&]() {
    json return_zhOXeta=json({});
    return_zhOXeta=[&]() {
    json return_MBFYbdu=json({});
    return serialize_uint32_t(name.anisotropyEnable);}();return return_zhOXeta;}();
result["members"]["maxAnisotropy"]=[&]() {
    json return_eNNrElg=json({});
    return serialize_float(name.maxAnisotropy);}();
result["members"]["compareEnable"]=[&]() {
    json return_TSwRukr=json({});
    return_TSwRukr=[&]() {
    json return_xAtborn=json({});
    return serialize_uint32_t(name.compareEnable);}();return return_TSwRukr;}();
result["members"]["compareOp"]=[&]() {
    json return_FleRHNb=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["minLod"]=[&]() {
    json return_jnBgYmL=json({});
    return serialize_float(name.minLod);}();
result["members"]["maxLod"]=[&]() {
    json return_SLrKQuQ=json({});
    return serialize_float(name.maxLod);}();
result["members"]["borderColor"]=[&]() {
    json return_zHWPggp=json({});
    return serialize_VkBorderColor(name.borderColor);}();
result["members"]["unnormalizedCoordinates"]=[&]() {
    json return_pNZhviQ=json({});
    return_pNZhviQ=[&]() {
    json return_eFgIEJx=json({});
    return serialize_uint32_t(name.unnormalizedCoordinates);}();return return_pNZhviQ;}();
return result;}

    VkSamplerCreateInfo deserialize_VkSamplerCreateInfo(json name){
        auto result=VkSamplerCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSamplerCreateFlags(name["members"]["flags"]);}();
[&]() {
result.magFilter=deserialize_VkFilter(name["members"]["magFilter"]);}();
[&]() {
result.minFilter=deserialize_VkFilter(name["members"]["minFilter"]);}();
[&]() {
result.mipmapMode=deserialize_VkSamplerMipmapMode(name["members"]["mipmapMode"]);}();
[&]() {
result.addressModeU=deserialize_VkSamplerAddressMode(name["members"]["addressModeU"]);}();
[&]() {
result.addressModeV=deserialize_VkSamplerAddressMode(name["members"]["addressModeV"]);}();
[&]() {
result.addressModeW=deserialize_VkSamplerAddressMode(name["members"]["addressModeW"]);}();
[&]() {
result.mipLodBias=deserialize_float(name["members"]["mipLodBias"]);}();
[&]() {
[&]() {
result.anisotropyEnable=deserialize_uint32_t(name["members"]["anisotropyEnable"]);}();}();
[&]() {
result.maxAnisotropy=deserialize_float(name["members"]["maxAnisotropy"]);}();
[&]() {
[&]() {
result.compareEnable=deserialize_uint32_t(name["members"]["compareEnable"]);}();}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
[&]() {
result.maxLod=deserialize_float(name["members"]["maxLod"]);}();
[&]() {
result.borderColor=deserialize_VkBorderColor(name["members"]["borderColor"]);}();
[&]() {
[&]() {
result.unnormalizedCoordinates=deserialize_uint32_t(name["members"]["unnormalizedCoordinates"]);}();}();
return result;}

    json serialize_VkCommandPoolCreateInfo(VkCommandPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LWqKtTS=json({});
    return serialize_VkCommandPoolCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_cQXidFT=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
return result;}

    VkCommandPoolCreateInfo deserialize_VkCommandPoolCreateInfo(json name){
        auto result=VkCommandPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkCommandPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
return result;}

    json serialize_VkCommandBufferAllocateInfo(VkCommandBufferAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandPool"]=[&]() {
    json return_OSmUnlx=json({});
    return serialize_VkCommandPool(name.commandPool);}();
result["members"]["level"]=[&]() {
    json return_inhTAZY=json({});
    return serialize_VkCommandBufferLevel(name.level);}();
result["members"]["commandBufferCount"]=[&]() {
    json return_AaHHUKx=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
return result;}

    VkCommandBufferAllocateInfo deserialize_VkCommandBufferAllocateInfo(json name){
        auto result=VkCommandBufferAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.commandPool=deserialize_VkCommandPool(name["members"]["commandPool"]);}();
[&]() {
result.level=deserialize_VkCommandBufferLevel(name["members"]["level"]);}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceInfo(VkCommandBufferInheritanceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_eCcfmNF=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_XDZzjUX=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["framebuffer"]=[&]() {
    json return_mpGugPx=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["occlusionQueryEnable"]=[&]() {
    json return_SKQernB=json({});
    return_SKQernB=[&]() {
    json return_hIBWjZb=json({});
    return serialize_uint32_t(name.occlusionQueryEnable);}();return return_SKQernB;}();
result["members"]["queryFlags"]=[&]() {
    json return_VHvOaEO=json({});
    return serialize_VkQueryControlFlags(name.queryFlags);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_SdnLOyJ=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkCommandBufferInheritanceInfo deserialize_VkCommandBufferInheritanceInfo(json name){
        auto result=VkCommandBufferInheritanceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
[&]() {
result.occlusionQueryEnable=deserialize_uint32_t(name["members"]["occlusionQueryEnable"]);}();}();
[&]() {
result.queryFlags=deserialize_VkQueryControlFlags(name["members"]["queryFlags"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkCommandBufferBeginInfo(VkCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lezfBEi=json({});
    return serialize_VkCommandBufferUsageFlags(name.flags);}();
result["members"]["pInheritanceInfo"]=[&]() {
    json return_EQkyirX=json({});
    
        if (name.pInheritanceInfo==NULL){
            return_EQkyirX["null"]=true;
            return return_EQkyirX;
        }
        return_EQkyirX=[&]() {
    json return_zLqlsln=json({});
    return serialize_VkCommandBufferInheritanceInfo(*name.pInheritanceInfo);}();
return return_EQkyirX;}();
return result;}

    VkCommandBufferBeginInfo deserialize_VkCommandBufferBeginInfo(json name){
        auto result=VkCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkCommandBufferUsageFlags(name["members"]["flags"]);}();
[&]() {
VkCommandBufferInheritanceInfo* temp_uVnviPf;[&]() {

        if (name["members"]["pInheritanceInfo"].contains("null")){
        temp_uVnviPf=NULL;
        }
    [&]() {
*(temp_uVnviPf)=deserialize_VkCommandBufferInheritanceInfo(name["members"]["pInheritanceInfo"]);}();
}();result.pInheritanceInfo=temp_uVnviPf;}();
return result;}

    json serialize_VkRenderPassBeginInfo(VkRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_eCcfmNF=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["framebuffer"]=[&]() {
    json return_mpGugPx=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["renderArea"]=[&]() {
    json return_WGwTgag=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["clearValueCount"]=[&]() {
    json return_tkgOhHS=json({});
    return serialize_uint32_t(name.clearValueCount);}();
result["members"]["pClearValues"]=[&]() {
    json return_AtBrRkG=json({});
    
        if (name.pClearValues==NULL){
            return_AtBrRkG["null"]=true;
            return return_AtBrRkG;
        }
        
        return_AtBrRkG["members"]={};
        for(int AtBrRkG=0; AtBrRkG < name.clearValueCount; AtBrRkG++){
            json temp;
            temp=[&]() {
    json return_wjNcAbD=json({});
    return serialize_VkClearValue(name.pClearValues[AtBrRkG]);}();
            return_AtBrRkG["members"][std::to_string(AtBrRkG)].push_back(temp);
        }
        return return_AtBrRkG;
        }();
return result;}

    VkRenderPassBeginInfo deserialize_VkRenderPassBeginInfo(json name){
        auto result=VkRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.clearValueCount=deserialize_uint32_t(name["members"]["clearValueCount"]);}();
[&]() {
VkClearValue* temp_GoFqqWy;[&]() {

        if (name["members"]["pClearValues"].contains("null")){
        temp_GoFqqWy=NULL;
        }
    temp_GoFqqWy=(VkClearValue*)malloc(result.clearValueCount*sizeof(VkClearValue));
        for (int RMrFqxY=0; RMrFqxY < result.clearValueCount; RMrFqxY++){
            [&]() {
temp_GoFqqWy[RMrFqxY]=deserialize_VkClearValue(name["members"]["pClearValues"]["members"][RMrFqxY]);}();;
        }
        }();result.pClearValues=temp_GoFqqWy;}();
return result;}

    json serialize_VkClearColorValue(VkClearColorValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["float32"]=[&]() {
    json return_LzdZoIv=json({});
    
        return_LzdZoIv["members"]={};
        for(int LzdZoIv=0; LzdZoIv < 4; LzdZoIv++){
            json temp;
            temp=[&]() {
    json return_rruqXMe=json({});
    return serialize_float(name.float32[LzdZoIv]);}();
            return_LzdZoIv["members"][std::to_string(LzdZoIv)].push_back(temp);
        }
        return return_LzdZoIv;
        }();
result["members"]["int32"]=[&]() {
    json return_XGfXJWs=json({});
    
        return_XGfXJWs["members"]={};
        for(int XGfXJWs=0; XGfXJWs < 4; XGfXJWs++){
            json temp;
            temp=[&]() {
    json return_SCfbgZO=json({});
    return serialize_int32_t(name.int32[XGfXJWs]);}();
            return_XGfXJWs["members"][std::to_string(XGfXJWs)].push_back(temp);
        }
        return return_XGfXJWs;
        }();
result["members"]["uint32"]=[&]() {
    json return_MobJnHh=json({});
    
        return_MobJnHh["members"]={};
        for(int MobJnHh=0; MobJnHh < 4; MobJnHh++){
            json temp;
            temp=[&]() {
    json return_JBntjBP=json({});
    return serialize_uint32_t(name.uint32[MobJnHh]);}();
            return_MobJnHh["members"][std::to_string(MobJnHh)].push_back(temp);
        }
        return return_MobJnHh;
        }();
return result;}

    VkClearColorValue deserialize_VkClearColorValue(json name){
        auto result=VkClearColorValue();
    
[&]() {

        for (int VtzdsjX=0; VtzdsjX < 4; VtzdsjX++){
            [&]() {
result.float32[VtzdsjX]=deserialize_float(name["members"]["float32"]["members"][VtzdsjX]);}();;
        }
        }();
[&]() {

        for (int kBhwIZB=0; kBhwIZB < 4; kBhwIZB++){
            [&]() {
result.int32[kBhwIZB]=deserialize_int32_t(name["members"]["int32"]["members"][kBhwIZB]);}();;
        }
        }();
[&]() {

        for (int jRCZGJk=0; jRCZGJk < 4; jRCZGJk++){
            [&]() {
result.uint32[jRCZGJk]=deserialize_uint32_t(name["members"]["uint32"]["members"][jRCZGJk]);}();;
        }
        }();
return result;}

    json serialize_VkClearDepthStencilValue(VkClearDepthStencilValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["depth"]=[&]() {
    json return_uclLPUj=json({});
    return serialize_float(name.depth);}();
result["members"]["stencil"]=[&]() {
    json return_ukFpdOA=json({});
    return serialize_uint32_t(name.stencil);}();
return result;}

    VkClearDepthStencilValue deserialize_VkClearDepthStencilValue(json name){
        auto result=VkClearDepthStencilValue();
    
[&]() {
result.depth=deserialize_float(name["members"]["depth"]);}();
[&]() {
result.stencil=deserialize_uint32_t(name["members"]["stencil"]);}();
return result;}

    json serialize_VkClearValue(VkClearValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["color"]=[&]() {
    json return_NteBvvl=json({});
    return serialize_VkClearColorValue(name.color);}();
result["members"]["depthStencil"]=[&]() {
    json return_rScBJmd=json({});
    return serialize_VkClearDepthStencilValue(name.depthStencil);}();
return result;}

    VkClearValue deserialize_VkClearValue(json name){
        auto result=VkClearValue();
    
[&]() {
result.color=deserialize_VkClearColorValue(name["members"]["color"]);}();
[&]() {
result.depthStencil=deserialize_VkClearDepthStencilValue(name["members"]["depthStencil"]);}();
return result;}

    json serialize_VkClearAttachment(VkClearAttachment name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["colorAttachment"]=[&]() {
    json return_FMgRwLU=json({});
    return serialize_uint32_t(name.colorAttachment);}();
result["members"]["clearValue"]=[&]() {
    json return_fpFSfcs=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkClearAttachment deserialize_VkClearAttachment(json name){
        auto result=VkClearAttachment();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.colorAttachment=deserialize_uint32_t(name["members"]["colorAttachment"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkAttachmentDescription(VkAttachmentDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_nawCpRK=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_eHqYtWr=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_iZpanIw=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_XEUhenX=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_qihstHq=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_eHjQHff=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_NqCzzcs=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_ENxfGzM=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription deserialize_VkAttachmentDescription(json name){
        auto result=VkAttachmentDescription();
    
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference(VkAttachmentReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachment"]=[&]() {
    json return_ovbEJuP=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_esOlhCx=json({});
    return serialize_VkImageLayout(name.layout);}();
return result;}

    VkAttachmentReference deserialize_VkAttachmentReference(json name){
        auto result=VkAttachmentReference();
    
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
return result;}

    json serialize_VkSubpassDescription(VkSubpassDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_twlXwnh=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_WrCYJcV=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_EPgQioP=json({});
    
        if (name.pInputAttachments==NULL){
            return_EPgQioP["null"]=true;
            return return_EPgQioP;
        }
        
        return_EPgQioP["members"]={};
        for(int EPgQioP=0; EPgQioP < name.inputAttachmentCount; EPgQioP++){
            json temp;
            temp=[&]() {
    json return_rCqFvtl=json({});
    return serialize_VkAttachmentReference(name.pInputAttachments[EPgQioP]);}();
            return_EPgQioP["members"][std::to_string(EPgQioP)].push_back(temp);
        }
        return return_EPgQioP;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_ZenHHwz=json({});
    
        if (name.pColorAttachments==NULL){
            return_ZenHHwz["null"]=true;
            return return_ZenHHwz;
        }
        
        return_ZenHHwz["members"]={};
        for(int ZenHHwz=0; ZenHHwz < name.colorAttachmentCount; ZenHHwz++){
            json temp;
            temp=[&]() {
    json return_QrBWMGr=json({});
    return serialize_VkAttachmentReference(name.pColorAttachments[ZenHHwz]);}();
            return_ZenHHwz["members"][std::to_string(ZenHHwz)].push_back(temp);
        }
        return return_ZenHHwz;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_jVwiNrL=json({});
    
        if (name.pResolveAttachments==NULL){
            return_jVwiNrL["null"]=true;
            return return_jVwiNrL;
        }
        
        return_jVwiNrL["members"]={};
        for(int jVwiNrL=0; jVwiNrL < name.colorAttachmentCount; jVwiNrL++){
            json temp;
            temp=[&]() {
    json return_WsOTIZc=json({});
    return serialize_VkAttachmentReference(name.pResolveAttachments[jVwiNrL]);}();
            return_jVwiNrL["members"][std::to_string(jVwiNrL)].push_back(temp);
        }
        return return_jVwiNrL;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_GspHwKP=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_GspHwKP["null"]=true;
            return return_GspHwKP;
        }
        return_GspHwKP=[&]() {
    json return_fjUwUbT=json({});
    return serialize_VkAttachmentReference(*name.pDepthStencilAttachment);}();
return return_GspHwKP;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_IVPXrnh=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_trPGtlT=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_trPGtlT["null"]=true;
            return return_trPGtlT;
        }
        
        return_trPGtlT["members"]={};
        for(int trPGtlT=0; trPGtlT < name.preserveAttachmentCount; trPGtlT++){
            json temp;
            temp=[&]() {
    json return_hpeWfFk=json({});
    return serialize_uint32_t(name.pPreserveAttachments[trPGtlT]);}();
            return_trPGtlT["members"][std::to_string(trPGtlT)].push_back(temp);
        }
        return return_trPGtlT;
        }();
return result;}

    VkSubpassDescription deserialize_VkSubpassDescription(json name){
        auto result=VkSubpassDescription();
    
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_KxPzUUs;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_KxPzUUs=NULL;
        }
    temp_KxPzUUs=(VkAttachmentReference*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference));
        for (int PqShGPX=0; PqShGPX < result.inputAttachmentCount; PqShGPX++){
            [&]() {
temp_KxPzUUs[PqShGPX]=deserialize_VkAttachmentReference(name["members"]["pInputAttachments"]["members"][PqShGPX]);}();;
        }
        }();result.pInputAttachments=temp_KxPzUUs;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_vSvZgZB;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_vSvZgZB=NULL;
        }
    temp_vSvZgZB=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int tgORdHh=0; tgORdHh < result.colorAttachmentCount; tgORdHh++){
            [&]() {
temp_vSvZgZB[tgORdHh]=deserialize_VkAttachmentReference(name["members"]["pColorAttachments"]["members"][tgORdHh]);}();;
        }
        }();result.pColorAttachments=temp_vSvZgZB;}();
[&]() {
VkAttachmentReference* temp_ahzgHWO;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_ahzgHWO=NULL;
        }
    temp_ahzgHWO=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int jMRkaZc=0; jMRkaZc < result.colorAttachmentCount; jMRkaZc++){
            [&]() {
temp_ahzgHWO[jMRkaZc]=deserialize_VkAttachmentReference(name["members"]["pResolveAttachments"]["members"][jMRkaZc]);}();;
        }
        }();result.pResolveAttachments=temp_ahzgHWO;}();
[&]() {
VkAttachmentReference* temp_MhhgvAv;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_MhhgvAv=NULL;
        }
    [&]() {
*(temp_MhhgvAv)=deserialize_VkAttachmentReference(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_MhhgvAv;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_vDAbduV;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_vDAbduV=NULL;
        }
    temp_vDAbduV=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int XDqMsuq=0; XDqMsuq < result.preserveAttachmentCount; XDqMsuq++){
            [&]() {
temp_vDAbduV[XDqMsuq]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][XDqMsuq]);}();;
        }
        }();result.pPreserveAttachments=temp_vDAbduV;}();
return result;}

    json serialize_VkSubpassDependency(VkSubpassDependency name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubpass"]=[&]() {
    json return_FHiHEJh=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_zzIBWow=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_NOGSZmu=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_CklJUHW=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_hGxYObz=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_znJgWCn=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_dBndcKo=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
return result;}

    VkSubpassDependency deserialize_VkSubpassDependency(json name){
        auto result=VkSubpassDependency();
    
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo(VkRenderPassCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FRUiOWf=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_ZSgGmvp=json({});
    
        if (name.pAttachments==NULL){
            return_ZSgGmvp["null"]=true;
            return return_ZSgGmvp;
        }
        
        return_ZSgGmvp["members"]={};
        for(int ZSgGmvp=0; ZSgGmvp < name.attachmentCount; ZSgGmvp++){
            json temp;
            temp=[&]() {
    json return_VhLMUYq=json({});
    return serialize_VkAttachmentDescription(name.pAttachments[ZSgGmvp]);}();
            return_ZSgGmvp["members"][std::to_string(ZSgGmvp)].push_back(temp);
        }
        return return_ZSgGmvp;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_JpvufHk=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_qouRxYN=json({});
    
        if (name.pSubpasses==NULL){
            return_qouRxYN["null"]=true;
            return return_qouRxYN;
        }
        
        return_qouRxYN["members"]={};
        for(int qouRxYN=0; qouRxYN < name.subpassCount; qouRxYN++){
            json temp;
            temp=[&]() {
    json return_cheWCGy=json({});
    return serialize_VkSubpassDescription(name.pSubpasses[qouRxYN]);}();
            return_qouRxYN["members"][std::to_string(qouRxYN)].push_back(temp);
        }
        return return_qouRxYN;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_eUodTpK=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_qNWKvKA=json({});
    
        if (name.pDependencies==NULL){
            return_qNWKvKA["null"]=true;
            return return_qNWKvKA;
        }
        
        return_qNWKvKA["members"]={};
        for(int qNWKvKA=0; qNWKvKA < name.dependencyCount; qNWKvKA++){
            json temp;
            temp=[&]() {
    json return_AmpGXND=json({});
    return serialize_VkSubpassDependency(name.pDependencies[qNWKvKA]);}();
            return_qNWKvKA["members"][std::to_string(qNWKvKA)].push_back(temp);
        }
        return return_qNWKvKA;
        }();
return result;}

    VkRenderPassCreateInfo deserialize_VkRenderPassCreateInfo(json name){
        auto result=VkRenderPassCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription* temp_IKYKkDr;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_IKYKkDr=NULL;
        }
    temp_IKYKkDr=(VkAttachmentDescription*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription));
        for (int hkdcGtC=0; hkdcGtC < result.attachmentCount; hkdcGtC++){
            [&]() {
temp_IKYKkDr[hkdcGtC]=deserialize_VkAttachmentDescription(name["members"]["pAttachments"]["members"][hkdcGtC]);}();;
        }
        }();result.pAttachments=temp_IKYKkDr;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription* temp_nDZUsRZ;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_nDZUsRZ=NULL;
        }
    temp_nDZUsRZ=(VkSubpassDescription*)malloc(result.subpassCount*sizeof(VkSubpassDescription));
        for (int pkwpnZA=0; pkwpnZA < result.subpassCount; pkwpnZA++){
            [&]() {
temp_nDZUsRZ[pkwpnZA]=deserialize_VkSubpassDescription(name["members"]["pSubpasses"]["members"][pkwpnZA]);}();;
        }
        }();result.pSubpasses=temp_nDZUsRZ;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency* temp_tvZjCqL;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_tvZjCqL=NULL;
        }
    temp_tvZjCqL=(VkSubpassDependency*)malloc(result.dependencyCount*sizeof(VkSubpassDependency));
        for (int BTOuaQP=0; BTOuaQP < result.dependencyCount; BTOuaQP++){
            [&]() {
temp_tvZjCqL[BTOuaQP]=deserialize_VkSubpassDependency(name["members"]["pDependencies"]["members"][BTOuaQP]);}();;
        }
        }();result.pDependencies=temp_tvZjCqL;}();
return result;}

    json serialize_VkEventCreateInfo(VkEventCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_iRkHaDw=json({});
    return serialize_VkEventCreateFlags(name.flags);}();
return result;}

    VkEventCreateInfo deserialize_VkEventCreateInfo(json name){
        auto result=VkEventCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkEventCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkFenceCreateInfo(VkFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GzTwWVd=json({});
    return serialize_VkFenceCreateFlags(name.flags);}();
return result;}

    VkFenceCreateInfo deserialize_VkFenceCreateInfo(json name){
        auto result=VkFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkFenceCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures(VkPhysicalDeviceFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["robustBufferAccess"]=[&]() {
    json return_FBBCjAh=json({});
    return_FBBCjAh=[&]() {
    json return_wAetCSt=json({});
    return serialize_uint32_t(name.robustBufferAccess);}();return return_FBBCjAh;}();
result["members"]["fullDrawIndexUint32"]=[&]() {
    json return_QSjNKqf=json({});
    return_QSjNKqf=[&]() {
    json return_rqFhYoy=json({});
    return serialize_uint32_t(name.fullDrawIndexUint32);}();return return_QSjNKqf;}();
result["members"]["imageCubeArray"]=[&]() {
    json return_hjRAmRX=json({});
    return_hjRAmRX=[&]() {
    json return_iREApKN=json({});
    return serialize_uint32_t(name.imageCubeArray);}();return return_hjRAmRX;}();
result["members"]["independentBlend"]=[&]() {
    json return_iGYiNYz=json({});
    return_iGYiNYz=[&]() {
    json return_tNYHAVK=json({});
    return serialize_uint32_t(name.independentBlend);}();return return_iGYiNYz;}();
result["members"]["geometryShader"]=[&]() {
    json return_CLKjQZn=json({});
    return_CLKjQZn=[&]() {
    json return_ygeNaFf=json({});
    return serialize_uint32_t(name.geometryShader);}();return return_CLKjQZn;}();
result["members"]["tessellationShader"]=[&]() {
    json return_RcBAeIO=json({});
    return_RcBAeIO=[&]() {
    json return_YEodifh=json({});
    return serialize_uint32_t(name.tessellationShader);}();return return_RcBAeIO;}();
result["members"]["sampleRateShading"]=[&]() {
    json return_dXUSLOy=json({});
    return_dXUSLOy=[&]() {
    json return_XTFThdb=json({});
    return serialize_uint32_t(name.sampleRateShading);}();return return_dXUSLOy;}();
result["members"]["dualSrcBlend"]=[&]() {
    json return_lQCgLEB=json({});
    return_lQCgLEB=[&]() {
    json return_SANxlIV=json({});
    return serialize_uint32_t(name.dualSrcBlend);}();return return_lQCgLEB;}();
result["members"]["logicOp"]=[&]() {
    json return_ckfLRKd=json({});
    return_ckfLRKd=[&]() {
    json return_PurrmLs=json({});
    return serialize_uint32_t(name.logicOp);}();return return_ckfLRKd;}();
result["members"]["multiDrawIndirect"]=[&]() {
    json return_MMDXQJD=json({});
    return_MMDXQJD=[&]() {
    json return_tIZhPCa=json({});
    return serialize_uint32_t(name.multiDrawIndirect);}();return return_MMDXQJD;}();
result["members"]["drawIndirectFirstInstance"]=[&]() {
    json return_LVRrRjA=json({});
    return_LVRrRjA=[&]() {
    json return_qJpYrSV=json({});
    return serialize_uint32_t(name.drawIndirectFirstInstance);}();return return_LVRrRjA;}();
result["members"]["depthClamp"]=[&]() {
    json return_tIqhkjY=json({});
    return_tIqhkjY=[&]() {
    json return_PIVIRED=json({});
    return serialize_uint32_t(name.depthClamp);}();return return_tIqhkjY;}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_bkIMpLW=json({});
    return_bkIMpLW=[&]() {
    json return_bcaDNCa=json({});
    return serialize_uint32_t(name.depthBiasClamp);}();return return_bkIMpLW;}();
result["members"]["fillModeNonSolid"]=[&]() {
    json return_vjDyXAZ=json({});
    return_vjDyXAZ=[&]() {
    json return_gYWJxQm=json({});
    return serialize_uint32_t(name.fillModeNonSolid);}();return return_vjDyXAZ;}();
result["members"]["depthBounds"]=[&]() {
    json return_evopOwW=json({});
    return_evopOwW=[&]() {
    json return_TWTaZIn=json({});
    return serialize_uint32_t(name.depthBounds);}();return return_evopOwW;}();
result["members"]["wideLines"]=[&]() {
    json return_NLXBmGB=json({});
    return_NLXBmGB=[&]() {
    json return_jhzuFHe=json({});
    return serialize_uint32_t(name.wideLines);}();return return_NLXBmGB;}();
result["members"]["largePoints"]=[&]() {
    json return_zGSyflL=json({});
    return_zGSyflL=[&]() {
    json return_IpiTjCc=json({});
    return serialize_uint32_t(name.largePoints);}();return return_zGSyflL;}();
result["members"]["alphaToOne"]=[&]() {
    json return_ungAPHQ=json({});
    return_ungAPHQ=[&]() {
    json return_VAsgNGs=json({});
    return serialize_uint32_t(name.alphaToOne);}();return return_ungAPHQ;}();
result["members"]["multiViewport"]=[&]() {
    json return_cfFmpUT=json({});
    return_cfFmpUT=[&]() {
    json return_ivEtLqq=json({});
    return serialize_uint32_t(name.multiViewport);}();return return_cfFmpUT;}();
result["members"]["samplerAnisotropy"]=[&]() {
    json return_vlShPDT=json({});
    return_vlShPDT=[&]() {
    json return_mKOsAKZ=json({});
    return serialize_uint32_t(name.samplerAnisotropy);}();return return_vlShPDT;}();
result["members"]["textureCompressionETC2"]=[&]() {
    json return_dPexaXO=json({});
    return_dPexaXO=[&]() {
    json return_sulPZfb=json({});
    return serialize_uint32_t(name.textureCompressionETC2);}();return return_dPexaXO;}();
result["members"]["textureCompressionASTC_LDR"]=[&]() {
    json return_mxXdtsB=json({});
    return_mxXdtsB=[&]() {
    json return_xQrpatK=json({});
    return serialize_uint32_t(name.textureCompressionASTC_LDR);}();return return_mxXdtsB;}();
result["members"]["textureCompressionBC"]=[&]() {
    json return_SCXsNVn=json({});
    return_SCXsNVn=[&]() {
    json return_qzMXrlU=json({});
    return serialize_uint32_t(name.textureCompressionBC);}();return return_SCXsNVn;}();
result["members"]["occlusionQueryPrecise"]=[&]() {
    json return_hWOFfsk=json({});
    return_hWOFfsk=[&]() {
    json return_NdRoVOc=json({});
    return serialize_uint32_t(name.occlusionQueryPrecise);}();return return_hWOFfsk;}();
result["members"]["pipelineStatisticsQuery"]=[&]() {
    json return_EhnstoM=json({});
    return_EhnstoM=[&]() {
    json return_mpltJUt=json({});
    return serialize_uint32_t(name.pipelineStatisticsQuery);}();return return_EhnstoM;}();
result["members"]["vertexPipelineStoresAndAtomics"]=[&]() {
    json return_crmQJTl=json({});
    return_crmQJTl=[&]() {
    json return_fyFEnLd=json({});
    return serialize_uint32_t(name.vertexPipelineStoresAndAtomics);}();return return_crmQJTl;}();
result["members"]["fragmentStoresAndAtomics"]=[&]() {
    json return_Gihizex=json({});
    return_Gihizex=[&]() {
    json return_FXZEgmA=json({});
    return serialize_uint32_t(name.fragmentStoresAndAtomics);}();return return_Gihizex;}();
result["members"]["shaderTessellationAndGeometryPointSize"]=[&]() {
    json return_PZPIXKc=json({});
    return_PZPIXKc=[&]() {
    json return_QIPmtuP=json({});
    return serialize_uint32_t(name.shaderTessellationAndGeometryPointSize);}();return return_PZPIXKc;}();
result["members"]["shaderImageGatherExtended"]=[&]() {
    json return_LYCDLTA=json({});
    return_LYCDLTA=[&]() {
    json return_mGaMIFh=json({});
    return serialize_uint32_t(name.shaderImageGatherExtended);}();return return_LYCDLTA;}();
result["members"]["shaderStorageImageExtendedFormats"]=[&]() {
    json return_bUKEiRR=json({});
    return_bUKEiRR=[&]() {
    json return_aYgJaFC=json({});
    return serialize_uint32_t(name.shaderStorageImageExtendedFormats);}();return return_bUKEiRR;}();
result["members"]["shaderStorageImageMultisample"]=[&]() {
    json return_EJIZaUE=json({});
    return_EJIZaUE=[&]() {
    json return_TwrtYwP=json({});
    return serialize_uint32_t(name.shaderStorageImageMultisample);}();return return_EJIZaUE;}();
result["members"]["shaderStorageImageReadWithoutFormat"]=[&]() {
    json return_gJFOpdT=json({});
    return_gJFOpdT=[&]() {
    json return_RaJrWdg=json({});
    return serialize_uint32_t(name.shaderStorageImageReadWithoutFormat);}();return return_gJFOpdT;}();
result["members"]["shaderStorageImageWriteWithoutFormat"]=[&]() {
    json return_vmHlYda=json({});
    return_vmHlYda=[&]() {
    json return_BKQAFMP=json({});
    return serialize_uint32_t(name.shaderStorageImageWriteWithoutFormat);}();return return_vmHlYda;}();
result["members"]["shaderUniformBufferArrayDynamicIndexing"]=[&]() {
    json return_rnbelnI=json({});
    return_rnbelnI=[&]() {
    json return_iwNzjyR=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayDynamicIndexing);}();return return_rnbelnI;}();
result["members"]["shaderSampledImageArrayDynamicIndexing"]=[&]() {
    json return_KiHSIpl=json({});
    return_KiHSIpl=[&]() {
    json return_pHjvLrd=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayDynamicIndexing);}();return return_KiHSIpl;}();
result["members"]["shaderStorageBufferArrayDynamicIndexing"]=[&]() {
    json return_yLNxPFu=json({});
    return_yLNxPFu=[&]() {
    json return_FseigyD=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayDynamicIndexing);}();return return_yLNxPFu;}();
result["members"]["shaderStorageImageArrayDynamicIndexing"]=[&]() {
    json return_vQVgAOh=json({});
    return_vQVgAOh=[&]() {
    json return_mzMFKiI=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayDynamicIndexing);}();return return_vQVgAOh;}();
result["members"]["shaderClipDistance"]=[&]() {
    json return_YqzEkbT=json({});
    return_YqzEkbT=[&]() {
    json return_fQKFGte=json({});
    return serialize_uint32_t(name.shaderClipDistance);}();return return_YqzEkbT;}();
result["members"]["shaderCullDistance"]=[&]() {
    json return_jcXhMzR=json({});
    return_jcXhMzR=[&]() {
    json return_nHEdCoF=json({});
    return serialize_uint32_t(name.shaderCullDistance);}();return return_jcXhMzR;}();
result["members"]["shaderFloat64"]=[&]() {
    json return_FGiURDY=json({});
    return_FGiURDY=[&]() {
    json return_VaiSlTn=json({});
    return serialize_uint32_t(name.shaderFloat64);}();return return_FGiURDY;}();
result["members"]["shaderInt64"]=[&]() {
    json return_eviAtWd=json({});
    return_eviAtWd=[&]() {
    json return_HGIlhEK=json({});
    return serialize_uint32_t(name.shaderInt64);}();return return_eviAtWd;}();
result["members"]["shaderInt16"]=[&]() {
    json return_OeHbztw=json({});
    return_OeHbztw=[&]() {
    json return_oBuubrO=json({});
    return serialize_uint32_t(name.shaderInt16);}();return return_OeHbztw;}();
result["members"]["shaderResourceResidency"]=[&]() {
    json return_xOzUBKW=json({});
    return_xOzUBKW=[&]() {
    json return_xDjcIBJ=json({});
    return serialize_uint32_t(name.shaderResourceResidency);}();return return_xOzUBKW;}();
result["members"]["shaderResourceMinLod"]=[&]() {
    json return_PeMOPzT=json({});
    return_PeMOPzT=[&]() {
    json return_JueIEZO=json({});
    return serialize_uint32_t(name.shaderResourceMinLod);}();return return_PeMOPzT;}();
result["members"]["sparseBinding"]=[&]() {
    json return_BWIDQOi=json({});
    return_BWIDQOi=[&]() {
    json return_nJOreWU=json({});
    return serialize_uint32_t(name.sparseBinding);}();return return_BWIDQOi;}();
result["members"]["sparseResidencyBuffer"]=[&]() {
    json return_NuGlHUp=json({});
    return_NuGlHUp=[&]() {
    json return_rzuxrdJ=json({});
    return serialize_uint32_t(name.sparseResidencyBuffer);}();return return_NuGlHUp;}();
result["members"]["sparseResidencyImage2D"]=[&]() {
    json return_rWLwlyZ=json({});
    return_rWLwlyZ=[&]() {
    json return_VzZbSuN=json({});
    return serialize_uint32_t(name.sparseResidencyImage2D);}();return return_rWLwlyZ;}();
result["members"]["sparseResidencyImage3D"]=[&]() {
    json return_eeZTkxE=json({});
    return_eeZTkxE=[&]() {
    json return_yfkheAG=json({});
    return serialize_uint32_t(name.sparseResidencyImage3D);}();return return_eeZTkxE;}();
result["members"]["sparseResidency2Samples"]=[&]() {
    json return_zAfDphd=json({});
    return_zAfDphd=[&]() {
    json return_ttzlRqx=json({});
    return serialize_uint32_t(name.sparseResidency2Samples);}();return return_zAfDphd;}();
result["members"]["sparseResidency4Samples"]=[&]() {
    json return_elkxiHs=json({});
    return_elkxiHs=[&]() {
    json return_FDfkwWG=json({});
    return serialize_uint32_t(name.sparseResidency4Samples);}();return return_elkxiHs;}();
result["members"]["sparseResidency8Samples"]=[&]() {
    json return_HFdqFHt=json({});
    return_HFdqFHt=[&]() {
    json return_CPpnkKk=json({});
    return serialize_uint32_t(name.sparseResidency8Samples);}();return return_HFdqFHt;}();
result["members"]["sparseResidency16Samples"]=[&]() {
    json return_HtZljkA=json({});
    return_HtZljkA=[&]() {
    json return_LNkNyPz=json({});
    return serialize_uint32_t(name.sparseResidency16Samples);}();return return_HtZljkA;}();
result["members"]["sparseResidencyAliased"]=[&]() {
    json return_XHBoUCO=json({});
    return_XHBoUCO=[&]() {
    json return_aJWzzuD=json({});
    return serialize_uint32_t(name.sparseResidencyAliased);}();return return_XHBoUCO;}();
result["members"]["variableMultisampleRate"]=[&]() {
    json return_nxKKZVP=json({});
    return_nxKKZVP=[&]() {
    json return_qYLBpgw=json({});
    return serialize_uint32_t(name.variableMultisampleRate);}();return return_nxKKZVP;}();
result["members"]["inheritedQueries"]=[&]() {
    json return_WSHAIxN=json({});
    return_WSHAIxN=[&]() {
    json return_YImPGPF=json({});
    return serialize_uint32_t(name.inheritedQueries);}();return return_WSHAIxN;}();
return result;}

    VkPhysicalDeviceFeatures deserialize_VkPhysicalDeviceFeatures(json name){
        auto result=VkPhysicalDeviceFeatures();
    
[&]() {
[&]() {
result.robustBufferAccess=deserialize_uint32_t(name["members"]["robustBufferAccess"]);}();}();
[&]() {
[&]() {
result.fullDrawIndexUint32=deserialize_uint32_t(name["members"]["fullDrawIndexUint32"]);}();}();
[&]() {
[&]() {
result.imageCubeArray=deserialize_uint32_t(name["members"]["imageCubeArray"]);}();}();
[&]() {
[&]() {
result.independentBlend=deserialize_uint32_t(name["members"]["independentBlend"]);}();}();
[&]() {
[&]() {
result.geometryShader=deserialize_uint32_t(name["members"]["geometryShader"]);}();}();
[&]() {
[&]() {
result.tessellationShader=deserialize_uint32_t(name["members"]["tessellationShader"]);}();}();
[&]() {
[&]() {
result.sampleRateShading=deserialize_uint32_t(name["members"]["sampleRateShading"]);}();}();
[&]() {
[&]() {
result.dualSrcBlend=deserialize_uint32_t(name["members"]["dualSrcBlend"]);}();}();
[&]() {
[&]() {
result.logicOp=deserialize_uint32_t(name["members"]["logicOp"]);}();}();
[&]() {
[&]() {
result.multiDrawIndirect=deserialize_uint32_t(name["members"]["multiDrawIndirect"]);}();}();
[&]() {
[&]() {
result.drawIndirectFirstInstance=deserialize_uint32_t(name["members"]["drawIndirectFirstInstance"]);}();}();
[&]() {
[&]() {
result.depthClamp=deserialize_uint32_t(name["members"]["depthClamp"]);}();}();
[&]() {
[&]() {
result.depthBiasClamp=deserialize_uint32_t(name["members"]["depthBiasClamp"]);}();}();
[&]() {
[&]() {
result.fillModeNonSolid=deserialize_uint32_t(name["members"]["fillModeNonSolid"]);}();}();
[&]() {
[&]() {
result.depthBounds=deserialize_uint32_t(name["members"]["depthBounds"]);}();}();
[&]() {
[&]() {
result.wideLines=deserialize_uint32_t(name["members"]["wideLines"]);}();}();
[&]() {
[&]() {
result.largePoints=deserialize_uint32_t(name["members"]["largePoints"]);}();}();
[&]() {
[&]() {
result.alphaToOne=deserialize_uint32_t(name["members"]["alphaToOne"]);}();}();
[&]() {
[&]() {
result.multiViewport=deserialize_uint32_t(name["members"]["multiViewport"]);}();}();
[&]() {
[&]() {
result.samplerAnisotropy=deserialize_uint32_t(name["members"]["samplerAnisotropy"]);}();}();
[&]() {
[&]() {
result.textureCompressionETC2=deserialize_uint32_t(name["members"]["textureCompressionETC2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_LDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_LDR"]);}();}();
[&]() {
[&]() {
result.textureCompressionBC=deserialize_uint32_t(name["members"]["textureCompressionBC"]);}();}();
[&]() {
[&]() {
result.occlusionQueryPrecise=deserialize_uint32_t(name["members"]["occlusionQueryPrecise"]);}();}();
[&]() {
[&]() {
result.pipelineStatisticsQuery=deserialize_uint32_t(name["members"]["pipelineStatisticsQuery"]);}();}();
[&]() {
[&]() {
result.vertexPipelineStoresAndAtomics=deserialize_uint32_t(name["members"]["vertexPipelineStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.fragmentStoresAndAtomics=deserialize_uint32_t(name["members"]["fragmentStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.shaderTessellationAndGeometryPointSize=deserialize_uint32_t(name["members"]["shaderTessellationAndGeometryPointSize"]);}();}();
[&]() {
[&]() {
result.shaderImageGatherExtended=deserialize_uint32_t(name["members"]["shaderImageGatherExtended"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageExtendedFormats=deserialize_uint32_t(name["members"]["shaderStorageImageExtendedFormats"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageMultisample=deserialize_uint32_t(name["members"]["shaderStorageImageMultisample"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageReadWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageReadWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageWriteWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageWriteWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderClipDistance=deserialize_uint32_t(name["members"]["shaderClipDistance"]);}();}();
[&]() {
[&]() {
result.shaderCullDistance=deserialize_uint32_t(name["members"]["shaderCullDistance"]);}();}();
[&]() {
[&]() {
result.shaderFloat64=deserialize_uint32_t(name["members"]["shaderFloat64"]);}();}();
[&]() {
[&]() {
result.shaderInt64=deserialize_uint32_t(name["members"]["shaderInt64"]);}();}();
[&]() {
[&]() {
result.shaderInt16=deserialize_uint32_t(name["members"]["shaderInt16"]);}();}();
[&]() {
[&]() {
result.shaderResourceResidency=deserialize_uint32_t(name["members"]["shaderResourceResidency"]);}();}();
[&]() {
[&]() {
result.shaderResourceMinLod=deserialize_uint32_t(name["members"]["shaderResourceMinLod"]);}();}();
[&]() {
[&]() {
result.sparseBinding=deserialize_uint32_t(name["members"]["sparseBinding"]);}();}();
[&]() {
[&]() {
result.sparseResidencyBuffer=deserialize_uint32_t(name["members"]["sparseResidencyBuffer"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage2D=deserialize_uint32_t(name["members"]["sparseResidencyImage2D"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage3D=deserialize_uint32_t(name["members"]["sparseResidencyImage3D"]);}();}();
[&]() {
[&]() {
result.sparseResidency2Samples=deserialize_uint32_t(name["members"]["sparseResidency2Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency4Samples=deserialize_uint32_t(name["members"]["sparseResidency4Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency8Samples=deserialize_uint32_t(name["members"]["sparseResidency8Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency16Samples=deserialize_uint32_t(name["members"]["sparseResidency16Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidencyAliased=deserialize_uint32_t(name["members"]["sparseResidencyAliased"]);}();}();
[&]() {
[&]() {
result.variableMultisampleRate=deserialize_uint32_t(name["members"]["variableMultisampleRate"]);}();}();
[&]() {
[&]() {
result.inheritedQueries=deserialize_uint32_t(name["members"]["inheritedQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSparseProperties(VkPhysicalDeviceSparseProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["residencyStandard2DBlockShape"]=[&]() {
    json return_QLnnxug=json({});
    return_QLnnxug=[&]() {
    json return_bswrzDJ=json({});
    return serialize_uint32_t(name.residencyStandard2DBlockShape);}();return return_QLnnxug;}();
result["members"]["residencyStandard2DMultisampleBlockShape"]=[&]() {
    json return_ezlaxzO=json({});
    return_ezlaxzO=[&]() {
    json return_BxRipTK=json({});
    return serialize_uint32_t(name.residencyStandard2DMultisampleBlockShape);}();return return_ezlaxzO;}();
result["members"]["residencyStandard3DBlockShape"]=[&]() {
    json return_XMSRzhg=json({});
    return_XMSRzhg=[&]() {
    json return_qfTNjIe=json({});
    return serialize_uint32_t(name.residencyStandard3DBlockShape);}();return return_XMSRzhg;}();
result["members"]["residencyAlignedMipSize"]=[&]() {
    json return_nhcmhGK=json({});
    return_nhcmhGK=[&]() {
    json return_fireSIs=json({});
    return serialize_uint32_t(name.residencyAlignedMipSize);}();return return_nhcmhGK;}();
result["members"]["residencyNonResidentStrict"]=[&]() {
    json return_wuLVhLs=json({});
    return_wuLVhLs=[&]() {
    json return_hopifYi=json({});
    return serialize_uint32_t(name.residencyNonResidentStrict);}();return return_wuLVhLs;}();
return result;}

    VkPhysicalDeviceSparseProperties deserialize_VkPhysicalDeviceSparseProperties(json name){
        auto result=VkPhysicalDeviceSparseProperties();
    
[&]() {
[&]() {
result.residencyStandard2DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard2DMultisampleBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DMultisampleBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard3DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard3DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyAlignedMipSize=deserialize_uint32_t(name["members"]["residencyAlignedMipSize"]);}();}();
[&]() {
[&]() {
result.residencyNonResidentStrict=deserialize_uint32_t(name["members"]["residencyNonResidentStrict"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLimits(VkPhysicalDeviceLimits name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxImageDimension1D"]=[&]() {
    json return_ZZHyRaJ=json({});
    return serialize_uint32_t(name.maxImageDimension1D);}();
result["members"]["maxImageDimension2D"]=[&]() {
    json return_YaQRsDX=json({});
    return serialize_uint32_t(name.maxImageDimension2D);}();
result["members"]["maxImageDimension3D"]=[&]() {
    json return_QKJwBAS=json({});
    return serialize_uint32_t(name.maxImageDimension3D);}();
result["members"]["maxImageDimensionCube"]=[&]() {
    json return_XOPJDnz=json({});
    return serialize_uint32_t(name.maxImageDimensionCube);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_QBcMjjE=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["maxTexelBufferElements"]=[&]() {
    json return_rzqbncS=json({});
    return serialize_uint32_t(name.maxTexelBufferElements);}();
result["members"]["maxUniformBufferRange"]=[&]() {
    json return_VcKAaFj=json({});
    return serialize_uint32_t(name.maxUniformBufferRange);}();
result["members"]["maxStorageBufferRange"]=[&]() {
    json return_JsVmzDW=json({});
    return serialize_uint32_t(name.maxStorageBufferRange);}();
result["members"]["maxPushConstantsSize"]=[&]() {
    json return_reqqZxX=json({});
    return serialize_uint32_t(name.maxPushConstantsSize);}();
result["members"]["maxMemoryAllocationCount"]=[&]() {
    json return_sTmGEBX=json({});
    return serialize_uint32_t(name.maxMemoryAllocationCount);}();
result["members"]["maxSamplerAllocationCount"]=[&]() {
    json return_CKHmWaO=json({});
    return serialize_uint32_t(name.maxSamplerAllocationCount);}();
result["members"]["bufferImageGranularity"]=[&]() {
    json return_uqvTuaW=json({});
    return_uqvTuaW=[&]() {
    json return_JNrSiSs=json({});
    return serialize_uint64_t(name.bufferImageGranularity);}();return return_uqvTuaW;}();
result["members"]["sparseAddressSpaceSize"]=[&]() {
    json return_eqqiEmb=json({});
    return_eqqiEmb=[&]() {
    json return_RDmzjrg=json({});
    return serialize_uint64_t(name.sparseAddressSpaceSize);}();return return_eqqiEmb;}();
result["members"]["maxBoundDescriptorSets"]=[&]() {
    json return_NoqgOEK=json({});
    return serialize_uint32_t(name.maxBoundDescriptorSets);}();
result["members"]["maxPerStageDescriptorSamplers"]=[&]() {
    json return_ODQDkWa=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSamplers);}();
result["members"]["maxPerStageDescriptorUniformBuffers"]=[&]() {
    json return_ScHNIsN=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUniformBuffers);}();
result["members"]["maxPerStageDescriptorStorageBuffers"]=[&]() {
    json return_zqAIKnh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageBuffers);}();
result["members"]["maxPerStageDescriptorSampledImages"]=[&]() {
    json return_CiNbiMI=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSampledImages);}();
result["members"]["maxPerStageDescriptorStorageImages"]=[&]() {
    json return_jFPcKtW=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageImages);}();
result["members"]["maxPerStageDescriptorInputAttachments"]=[&]() {
    json return_iAzXjtc=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInputAttachments);}();
result["members"]["maxPerStageResources"]=[&]() {
    json return_LhLHAQi=json({});
    return serialize_uint32_t(name.maxPerStageResources);}();
result["members"]["maxDescriptorSetSamplers"]=[&]() {
    json return_mlevobh=json({});
    return serialize_uint32_t(name.maxDescriptorSetSamplers);}();
result["members"]["maxDescriptorSetUniformBuffers"]=[&]() {
    json return_mtNTwde=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffers);}();
result["members"]["maxDescriptorSetUniformBuffersDynamic"]=[&]() {
    json return_HJZHOei=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetStorageBuffers"]=[&]() {
    json return_yerWiIX=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffers);}();
result["members"]["maxDescriptorSetStorageBuffersDynamic"]=[&]() {
    json return_nkFYRAw=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetSampledImages"]=[&]() {
    json return_CHaDVkZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetSampledImages);}();
result["members"]["maxDescriptorSetStorageImages"]=[&]() {
    json return_mLrxfUI=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageImages);}();
result["members"]["maxDescriptorSetInputAttachments"]=[&]() {
    json return_rFydjkp=json({});
    return serialize_uint32_t(name.maxDescriptorSetInputAttachments);}();
result["members"]["maxVertexInputAttributes"]=[&]() {
    json return_ONWgUcz=json({});
    return serialize_uint32_t(name.maxVertexInputAttributes);}();
result["members"]["maxVertexInputBindings"]=[&]() {
    json return_tHlKaSM=json({});
    return serialize_uint32_t(name.maxVertexInputBindings);}();
result["members"]["maxVertexInputAttributeOffset"]=[&]() {
    json return_vyEUXZR=json({});
    return serialize_uint32_t(name.maxVertexInputAttributeOffset);}();
result["members"]["maxVertexInputBindingStride"]=[&]() {
    json return_ARLFBvn=json({});
    return serialize_uint32_t(name.maxVertexInputBindingStride);}();
result["members"]["maxVertexOutputComponents"]=[&]() {
    json return_TCxnApR=json({});
    return serialize_uint32_t(name.maxVertexOutputComponents);}();
result["members"]["maxTessellationGenerationLevel"]=[&]() {
    json return_YLnnlKp=json({});
    return serialize_uint32_t(name.maxTessellationGenerationLevel);}();
result["members"]["maxTessellationPatchSize"]=[&]() {
    json return_tNgFKJG=json({});
    return serialize_uint32_t(name.maxTessellationPatchSize);}();
result["members"]["maxTessellationControlPerVertexInputComponents"]=[&]() {
    json return_YazZhfJ=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexInputComponents);}();
result["members"]["maxTessellationControlPerVertexOutputComponents"]=[&]() {
    json return_JWcxDcG=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexOutputComponents);}();
result["members"]["maxTessellationControlPerPatchOutputComponents"]=[&]() {
    json return_YxBSwET=json({});
    return serialize_uint32_t(name.maxTessellationControlPerPatchOutputComponents);}();
result["members"]["maxTessellationControlTotalOutputComponents"]=[&]() {
    json return_LUcupAG=json({});
    return serialize_uint32_t(name.maxTessellationControlTotalOutputComponents);}();
result["members"]["maxTessellationEvaluationInputComponents"]=[&]() {
    json return_YJxziRt=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationInputComponents);}();
result["members"]["maxTessellationEvaluationOutputComponents"]=[&]() {
    json return_SGKIANE=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationOutputComponents);}();
result["members"]["maxGeometryShaderInvocations"]=[&]() {
    json return_VhPljNX=json({});
    return serialize_uint32_t(name.maxGeometryShaderInvocations);}();
result["members"]["maxGeometryInputComponents"]=[&]() {
    json return_SmnsBGx=json({});
    return serialize_uint32_t(name.maxGeometryInputComponents);}();
result["members"]["maxGeometryOutputComponents"]=[&]() {
    json return_frjZLYr=json({});
    return serialize_uint32_t(name.maxGeometryOutputComponents);}();
result["members"]["maxGeometryOutputVertices"]=[&]() {
    json return_EJtxdig=json({});
    return serialize_uint32_t(name.maxGeometryOutputVertices);}();
result["members"]["maxGeometryTotalOutputComponents"]=[&]() {
    json return_VChAIlC=json({});
    return serialize_uint32_t(name.maxGeometryTotalOutputComponents);}();
result["members"]["maxFragmentInputComponents"]=[&]() {
    json return_crbnkry=json({});
    return serialize_uint32_t(name.maxFragmentInputComponents);}();
result["members"]["maxFragmentOutputAttachments"]=[&]() {
    json return_SnGnKtA=json({});
    return serialize_uint32_t(name.maxFragmentOutputAttachments);}();
result["members"]["maxFragmentDualSrcAttachments"]=[&]() {
    json return_KuovyHe=json({});
    return serialize_uint32_t(name.maxFragmentDualSrcAttachments);}();
result["members"]["maxFragmentCombinedOutputResources"]=[&]() {
    json return_tWpQHnS=json({});
    return serialize_uint32_t(name.maxFragmentCombinedOutputResources);}();
result["members"]["maxComputeSharedMemorySize"]=[&]() {
    json return_HfaEZwy=json({});
    return serialize_uint32_t(name.maxComputeSharedMemorySize);}();
result["members"]["maxComputeWorkGroupCount"]=[&]() {
    json return_QMWXpRy=json({});
    
        return_QMWXpRy["members"]={};
        for(int QMWXpRy=0; QMWXpRy < 3; QMWXpRy++){
            json temp;
            temp=[&]() {
    json return_eQDmJOy=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupCount[QMWXpRy]);}();
            return_QMWXpRy["members"][std::to_string(QMWXpRy)].push_back(temp);
        }
        return return_QMWXpRy;
        }();
result["members"]["maxComputeWorkGroupInvocations"]=[&]() {
    json return_GwcwPSn=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupInvocations);}();
result["members"]["maxComputeWorkGroupSize"]=[&]() {
    json return_buvyLwc=json({});
    
        return_buvyLwc["members"]={};
        for(int buvyLwc=0; buvyLwc < 3; buvyLwc++){
            json temp;
            temp=[&]() {
    json return_iOznETT=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupSize[buvyLwc]);}();
            return_buvyLwc["members"][std::to_string(buvyLwc)].push_back(temp);
        }
        return return_buvyLwc;
        }();
result["members"]["subPixelPrecisionBits"]=[&]() {
    json return_UmjXeWm=json({});
    return serialize_uint32_t(name.subPixelPrecisionBits);}();
result["members"]["subTexelPrecisionBits"]=[&]() {
    json return_NPXZkFu=json({});
    return serialize_uint32_t(name.subTexelPrecisionBits);}();
result["members"]["mipmapPrecisionBits"]=[&]() {
    json return_QcDURKV=json({});
    return serialize_uint32_t(name.mipmapPrecisionBits);}();
result["members"]["maxDrawIndexedIndexValue"]=[&]() {
    json return_bScyQRH=json({});
    return serialize_uint32_t(name.maxDrawIndexedIndexValue);}();
result["members"]["maxDrawIndirectCount"]=[&]() {
    json return_zdSeLdE=json({});
    return serialize_uint32_t(name.maxDrawIndirectCount);}();
result["members"]["maxSamplerLodBias"]=[&]() {
    json return_IpquhEo=json({});
    return serialize_float(name.maxSamplerLodBias);}();
result["members"]["maxSamplerAnisotropy"]=[&]() {
    json return_hlWhKNE=json({});
    return serialize_float(name.maxSamplerAnisotropy);}();
result["members"]["maxViewports"]=[&]() {
    json return_MwHIvzo=json({});
    return serialize_uint32_t(name.maxViewports);}();
result["members"]["maxViewportDimensions"]=[&]() {
    json return_cSEwdPP=json({});
    
        return_cSEwdPP["members"]={};
        for(int cSEwdPP=0; cSEwdPP < 2; cSEwdPP++){
            json temp;
            temp=[&]() {
    json return_bYBcMzb=json({});
    return serialize_uint32_t(name.maxViewportDimensions[cSEwdPP]);}();
            return_cSEwdPP["members"][std::to_string(cSEwdPP)].push_back(temp);
        }
        return return_cSEwdPP;
        }();
result["members"]["viewportBoundsRange"]=[&]() {
    json return_dTEwsmD=json({});
    
        return_dTEwsmD["members"]={};
        for(int dTEwsmD=0; dTEwsmD < 2; dTEwsmD++){
            json temp;
            temp=[&]() {
    json return_iarIJZh=json({});
    return serialize_float(name.viewportBoundsRange[dTEwsmD]);}();
            return_dTEwsmD["members"][std::to_string(dTEwsmD)].push_back(temp);
        }
        return return_dTEwsmD;
        }();
result["members"]["viewportSubPixelBits"]=[&]() {
    json return_EXiTMIk=json({});
    return serialize_uint32_t(name.viewportSubPixelBits);}();
result["members"]["minMemoryMapAlignment"]=[&]() {
    json return_uhpEWdf=json({});
    return serialize_size_t(name.minMemoryMapAlignment);}();
result["members"]["minTexelBufferOffsetAlignment"]=[&]() {
    json return_OnzbhHx=json({});
    return_OnzbhHx=[&]() {
    json return_rQbhuDv=json({});
    return serialize_uint64_t(name.minTexelBufferOffsetAlignment);}();return return_OnzbhHx;}();
result["members"]["minUniformBufferOffsetAlignment"]=[&]() {
    json return_GUVHUFf=json({});
    return_GUVHUFf=[&]() {
    json return_AtzaRCo=json({});
    return serialize_uint64_t(name.minUniformBufferOffsetAlignment);}();return return_GUVHUFf;}();
result["members"]["minStorageBufferOffsetAlignment"]=[&]() {
    json return_XeNzyUD=json({});
    return_XeNzyUD=[&]() {
    json return_BehxQwx=json({});
    return serialize_uint64_t(name.minStorageBufferOffsetAlignment);}();return return_XeNzyUD;}();
result["members"]["minTexelOffset"]=[&]() {
    json return_jtcYAoY=json({});
    return serialize_int32_t(name.minTexelOffset);}();
result["members"]["maxTexelOffset"]=[&]() {
    json return_dHgcsCR=json({});
    return serialize_uint32_t(name.maxTexelOffset);}();
result["members"]["minTexelGatherOffset"]=[&]() {
    json return_eWPILhG=json({});
    return serialize_int32_t(name.minTexelGatherOffset);}();
result["members"]["maxTexelGatherOffset"]=[&]() {
    json return_RGUBvhL=json({});
    return serialize_uint32_t(name.maxTexelGatherOffset);}();
result["members"]["minInterpolationOffset"]=[&]() {
    json return_JHHjGJd=json({});
    return serialize_float(name.minInterpolationOffset);}();
result["members"]["maxInterpolationOffset"]=[&]() {
    json return_VuPLKEj=json({});
    return serialize_float(name.maxInterpolationOffset);}();
result["members"]["subPixelInterpolationOffsetBits"]=[&]() {
    json return_QQSsLkv=json({});
    return serialize_uint32_t(name.subPixelInterpolationOffsetBits);}();
result["members"]["maxFramebufferWidth"]=[&]() {
    json return_ThWitmo=json({});
    return serialize_uint32_t(name.maxFramebufferWidth);}();
result["members"]["maxFramebufferHeight"]=[&]() {
    json return_vvaxsYu=json({});
    return serialize_uint32_t(name.maxFramebufferHeight);}();
result["members"]["maxFramebufferLayers"]=[&]() {
    json return_mGUfvpz=json({});
    return serialize_uint32_t(name.maxFramebufferLayers);}();
result["members"]["framebufferColorSampleCounts"]=[&]() {
    json return_MoCRImq=json({});
    return serialize_VkSampleCountFlags(name.framebufferColorSampleCounts);}();
result["members"]["framebufferDepthSampleCounts"]=[&]() {
    json return_snDIkAV=json({});
    return serialize_VkSampleCountFlags(name.framebufferDepthSampleCounts);}();
result["members"]["framebufferStencilSampleCounts"]=[&]() {
    json return_iCxyqCj=json({});
    return serialize_VkSampleCountFlags(name.framebufferStencilSampleCounts);}();
result["members"]["framebufferNoAttachmentsSampleCounts"]=[&]() {
    json return_SdcQPOw=json({});
    return serialize_VkSampleCountFlags(name.framebufferNoAttachmentsSampleCounts);}();
result["members"]["maxColorAttachments"]=[&]() {
    json return_JuDXwtv=json({});
    return serialize_uint32_t(name.maxColorAttachments);}();
result["members"]["sampledImageColorSampleCounts"]=[&]() {
    json return_HpqYjgp=json({});
    return serialize_VkSampleCountFlags(name.sampledImageColorSampleCounts);}();
result["members"]["sampledImageIntegerSampleCounts"]=[&]() {
    json return_DuhVyGO=json({});
    return serialize_VkSampleCountFlags(name.sampledImageIntegerSampleCounts);}();
result["members"]["sampledImageDepthSampleCounts"]=[&]() {
    json return_liisdAK=json({});
    return serialize_VkSampleCountFlags(name.sampledImageDepthSampleCounts);}();
result["members"]["sampledImageStencilSampleCounts"]=[&]() {
    json return_qvidetI=json({});
    return serialize_VkSampleCountFlags(name.sampledImageStencilSampleCounts);}();
result["members"]["storageImageSampleCounts"]=[&]() {
    json return_lznMNKk=json({});
    return serialize_VkSampleCountFlags(name.storageImageSampleCounts);}();
result["members"]["maxSampleMaskWords"]=[&]() {
    json return_uUKDJlZ=json({});
    return serialize_uint32_t(name.maxSampleMaskWords);}();
result["members"]["timestampComputeAndGraphics"]=[&]() {
    json return_wrVKUkF=json({});
    return_wrVKUkF=[&]() {
    json return_lkpfZcT=json({});
    return serialize_uint32_t(name.timestampComputeAndGraphics);}();return return_wrVKUkF;}();
result["members"]["timestampPeriod"]=[&]() {
    json return_mkaCZYQ=json({});
    return serialize_float(name.timestampPeriod);}();
result["members"]["maxClipDistances"]=[&]() {
    json return_NBtZXeB=json({});
    return serialize_uint32_t(name.maxClipDistances);}();
result["members"]["maxCullDistances"]=[&]() {
    json return_RAJrVKX=json({});
    return serialize_uint32_t(name.maxCullDistances);}();
result["members"]["maxCombinedClipAndCullDistances"]=[&]() {
    json return_cjjHYvb=json({});
    return serialize_uint32_t(name.maxCombinedClipAndCullDistances);}();
result["members"]["discreteQueuePriorities"]=[&]() {
    json return_cGDWJtv=json({});
    return serialize_uint32_t(name.discreteQueuePriorities);}();
result["members"]["pointSizeRange"]=[&]() {
    json return_nlIsEnC=json({});
    
        return_nlIsEnC["members"]={};
        for(int nlIsEnC=0; nlIsEnC < 2; nlIsEnC++){
            json temp;
            temp=[&]() {
    json return_OjNynhp=json({});
    return serialize_float(name.pointSizeRange[nlIsEnC]);}();
            return_nlIsEnC["members"][std::to_string(nlIsEnC)].push_back(temp);
        }
        return return_nlIsEnC;
        }();
result["members"]["lineWidthRange"]=[&]() {
    json return_mqJaLsU=json({});
    
        return_mqJaLsU["members"]={};
        for(int mqJaLsU=0; mqJaLsU < 2; mqJaLsU++){
            json temp;
            temp=[&]() {
    json return_UoLhKOR=json({});
    return serialize_float(name.lineWidthRange[mqJaLsU]);}();
            return_mqJaLsU["members"][std::to_string(mqJaLsU)].push_back(temp);
        }
        return return_mqJaLsU;
        }();
result["members"]["pointSizeGranularity"]=[&]() {
    json return_cepSvka=json({});
    return serialize_float(name.pointSizeGranularity);}();
result["members"]["lineWidthGranularity"]=[&]() {
    json return_WTRSwUV=json({});
    return serialize_float(name.lineWidthGranularity);}();
result["members"]["strictLines"]=[&]() {
    json return_GMTZqjN=json({});
    return_GMTZqjN=[&]() {
    json return_LRdFcxY=json({});
    return serialize_uint32_t(name.strictLines);}();return return_GMTZqjN;}();
result["members"]["standardSampleLocations"]=[&]() {
    json return_TqWMEYA=json({});
    return_TqWMEYA=[&]() {
    json return_hyGGTNs=json({});
    return serialize_uint32_t(name.standardSampleLocations);}();return return_TqWMEYA;}();
result["members"]["optimalBufferCopyOffsetAlignment"]=[&]() {
    json return_juHSstT=json({});
    return_juHSstT=[&]() {
    json return_tyzbXSA=json({});
    return serialize_uint64_t(name.optimalBufferCopyOffsetAlignment);}();return return_juHSstT;}();
result["members"]["optimalBufferCopyRowPitchAlignment"]=[&]() {
    json return_ypiOirE=json({});
    return_ypiOirE=[&]() {
    json return_fywWXYe=json({});
    return serialize_uint64_t(name.optimalBufferCopyRowPitchAlignment);}();return return_ypiOirE;}();
result["members"]["nonCoherentAtomSize"]=[&]() {
    json return_xYXvlPI=json({});
    return_xYXvlPI=[&]() {
    json return_QPDtMfj=json({});
    return serialize_uint64_t(name.nonCoherentAtomSize);}();return return_xYXvlPI;}();
return result;}

    VkPhysicalDeviceLimits deserialize_VkPhysicalDeviceLimits(json name){
        auto result=VkPhysicalDeviceLimits();
    
[&]() {
result.maxImageDimension1D=deserialize_uint32_t(name["members"]["maxImageDimension1D"]);}();
[&]() {
result.maxImageDimension2D=deserialize_uint32_t(name["members"]["maxImageDimension2D"]);}();
[&]() {
result.maxImageDimension3D=deserialize_uint32_t(name["members"]["maxImageDimension3D"]);}();
[&]() {
result.maxImageDimensionCube=deserialize_uint32_t(name["members"]["maxImageDimensionCube"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.maxTexelBufferElements=deserialize_uint32_t(name["members"]["maxTexelBufferElements"]);}();
[&]() {
result.maxUniformBufferRange=deserialize_uint32_t(name["members"]["maxUniformBufferRange"]);}();
[&]() {
result.maxStorageBufferRange=deserialize_uint32_t(name["members"]["maxStorageBufferRange"]);}();
[&]() {
result.maxPushConstantsSize=deserialize_uint32_t(name["members"]["maxPushConstantsSize"]);}();
[&]() {
result.maxMemoryAllocationCount=deserialize_uint32_t(name["members"]["maxMemoryAllocationCount"]);}();
[&]() {
result.maxSamplerAllocationCount=deserialize_uint32_t(name["members"]["maxSamplerAllocationCount"]);}();
[&]() {
[&]() {
result.bufferImageGranularity=deserialize_uint64_t(name["members"]["bufferImageGranularity"]);}();}();
[&]() {
[&]() {
result.sparseAddressSpaceSize=deserialize_uint64_t(name["members"]["sparseAddressSpaceSize"]);}();}();
[&]() {
result.maxBoundDescriptorSets=deserialize_uint32_t(name["members"]["maxBoundDescriptorSets"]);}();
[&]() {
result.maxPerStageDescriptorSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInputAttachments"]);}();
[&]() {
result.maxPerStageResources=deserialize_uint32_t(name["members"]["maxPerStageResources"]);}();
[&]() {
result.maxDescriptorSetSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSamplers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetSampledImages"]);}();
[&]() {
result.maxDescriptorSetStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageImages"]);}();
[&]() {
result.maxDescriptorSetInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetInputAttachments"]);}();
[&]() {
result.maxVertexInputAttributes=deserialize_uint32_t(name["members"]["maxVertexInputAttributes"]);}();
[&]() {
result.maxVertexInputBindings=deserialize_uint32_t(name["members"]["maxVertexInputBindings"]);}();
[&]() {
result.maxVertexInputAttributeOffset=deserialize_uint32_t(name["members"]["maxVertexInputAttributeOffset"]);}();
[&]() {
result.maxVertexInputBindingStride=deserialize_uint32_t(name["members"]["maxVertexInputBindingStride"]);}();
[&]() {
result.maxVertexOutputComponents=deserialize_uint32_t(name["members"]["maxVertexOutputComponents"]);}();
[&]() {
result.maxTessellationGenerationLevel=deserialize_uint32_t(name["members"]["maxTessellationGenerationLevel"]);}();
[&]() {
result.maxTessellationPatchSize=deserialize_uint32_t(name["members"]["maxTessellationPatchSize"]);}();
[&]() {
result.maxTessellationControlPerVertexInputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexInputComponents"]);}();
[&]() {
result.maxTessellationControlPerVertexOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexOutputComponents"]);}();
[&]() {
result.maxTessellationControlPerPatchOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerPatchOutputComponents"]);}();
[&]() {
result.maxTessellationControlTotalOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlTotalOutputComponents"]);}();
[&]() {
result.maxTessellationEvaluationInputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationInputComponents"]);}();
[&]() {
result.maxTessellationEvaluationOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationOutputComponents"]);}();
[&]() {
result.maxGeometryShaderInvocations=deserialize_uint32_t(name["members"]["maxGeometryShaderInvocations"]);}();
[&]() {
result.maxGeometryInputComponents=deserialize_uint32_t(name["members"]["maxGeometryInputComponents"]);}();
[&]() {
result.maxGeometryOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryOutputComponents"]);}();
[&]() {
result.maxGeometryOutputVertices=deserialize_uint32_t(name["members"]["maxGeometryOutputVertices"]);}();
[&]() {
result.maxGeometryTotalOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryTotalOutputComponents"]);}();
[&]() {
result.maxFragmentInputComponents=deserialize_uint32_t(name["members"]["maxFragmentInputComponents"]);}();
[&]() {
result.maxFragmentOutputAttachments=deserialize_uint32_t(name["members"]["maxFragmentOutputAttachments"]);}();
[&]() {
result.maxFragmentDualSrcAttachments=deserialize_uint32_t(name["members"]["maxFragmentDualSrcAttachments"]);}();
[&]() {
result.maxFragmentCombinedOutputResources=deserialize_uint32_t(name["members"]["maxFragmentCombinedOutputResources"]);}();
[&]() {
result.maxComputeSharedMemorySize=deserialize_uint32_t(name["members"]["maxComputeSharedMemorySize"]);}();
[&]() {

        for (int JXtzhEQ=0; JXtzhEQ < 3; JXtzhEQ++){
            [&]() {
result.maxComputeWorkGroupCount[JXtzhEQ]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupCount"]["members"][JXtzhEQ]);}();;
        }
        }();
[&]() {
result.maxComputeWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxComputeWorkGroupInvocations"]);}();
[&]() {

        for (int vQZbUEX=0; vQZbUEX < 3; vQZbUEX++){
            [&]() {
result.maxComputeWorkGroupSize[vQZbUEX]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupSize"]["members"][vQZbUEX]);}();;
        }
        }();
[&]() {
result.subPixelPrecisionBits=deserialize_uint32_t(name["members"]["subPixelPrecisionBits"]);}();
[&]() {
result.subTexelPrecisionBits=deserialize_uint32_t(name["members"]["subTexelPrecisionBits"]);}();
[&]() {
result.mipmapPrecisionBits=deserialize_uint32_t(name["members"]["mipmapPrecisionBits"]);}();
[&]() {
result.maxDrawIndexedIndexValue=deserialize_uint32_t(name["members"]["maxDrawIndexedIndexValue"]);}();
[&]() {
result.maxDrawIndirectCount=deserialize_uint32_t(name["members"]["maxDrawIndirectCount"]);}();
[&]() {
result.maxSamplerLodBias=deserialize_float(name["members"]["maxSamplerLodBias"]);}();
[&]() {
result.maxSamplerAnisotropy=deserialize_float(name["members"]["maxSamplerAnisotropy"]);}();
[&]() {
result.maxViewports=deserialize_uint32_t(name["members"]["maxViewports"]);}();
[&]() {

        for (int KNuryPB=0; KNuryPB < 2; KNuryPB++){
            [&]() {
result.maxViewportDimensions[KNuryPB]=deserialize_uint32_t(name["members"]["maxViewportDimensions"]["members"][KNuryPB]);}();;
        }
        }();
[&]() {

        for (int lapuSdR=0; lapuSdR < 2; lapuSdR++){
            [&]() {
result.viewportBoundsRange[lapuSdR]=deserialize_float(name["members"]["viewportBoundsRange"]["members"][lapuSdR]);}();;
        }
        }();
[&]() {
result.viewportSubPixelBits=deserialize_uint32_t(name["members"]["viewportSubPixelBits"]);}();
[&]() {
result.minMemoryMapAlignment=deserialize_size_t(name["members"]["minMemoryMapAlignment"]);}();
[&]() {
[&]() {
result.minTexelBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minTexelBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minUniformBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minUniformBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minStorageBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minStorageBufferOffsetAlignment"]);}();}();
[&]() {
result.minTexelOffset=deserialize_int32_t(name["members"]["minTexelOffset"]);}();
[&]() {
result.maxTexelOffset=deserialize_uint32_t(name["members"]["maxTexelOffset"]);}();
[&]() {
result.minTexelGatherOffset=deserialize_int32_t(name["members"]["minTexelGatherOffset"]);}();
[&]() {
result.maxTexelGatherOffset=deserialize_uint32_t(name["members"]["maxTexelGatherOffset"]);}();
[&]() {
result.minInterpolationOffset=deserialize_float(name["members"]["minInterpolationOffset"]);}();
[&]() {
result.maxInterpolationOffset=deserialize_float(name["members"]["maxInterpolationOffset"]);}();
[&]() {
result.subPixelInterpolationOffsetBits=deserialize_uint32_t(name["members"]["subPixelInterpolationOffsetBits"]);}();
[&]() {
result.maxFramebufferWidth=deserialize_uint32_t(name["members"]["maxFramebufferWidth"]);}();
[&]() {
result.maxFramebufferHeight=deserialize_uint32_t(name["members"]["maxFramebufferHeight"]);}();
[&]() {
result.maxFramebufferLayers=deserialize_uint32_t(name["members"]["maxFramebufferLayers"]);}();
[&]() {
result.framebufferColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferColorSampleCounts"]);}();
[&]() {
result.framebufferDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferDepthSampleCounts"]);}();
[&]() {
result.framebufferStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferStencilSampleCounts"]);}();
[&]() {
result.framebufferNoAttachmentsSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferNoAttachmentsSampleCounts"]);}();
[&]() {
result.maxColorAttachments=deserialize_uint32_t(name["members"]["maxColorAttachments"]);}();
[&]() {
result.sampledImageColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageColorSampleCounts"]);}();
[&]() {
result.sampledImageIntegerSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageIntegerSampleCounts"]);}();
[&]() {
result.sampledImageDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageDepthSampleCounts"]);}();
[&]() {
result.sampledImageStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageStencilSampleCounts"]);}();
[&]() {
result.storageImageSampleCounts=deserialize_VkSampleCountFlags(name["members"]["storageImageSampleCounts"]);}();
[&]() {
result.maxSampleMaskWords=deserialize_uint32_t(name["members"]["maxSampleMaskWords"]);}();
[&]() {
[&]() {
result.timestampComputeAndGraphics=deserialize_uint32_t(name["members"]["timestampComputeAndGraphics"]);}();}();
[&]() {
result.timestampPeriod=deserialize_float(name["members"]["timestampPeriod"]);}();
[&]() {
result.maxClipDistances=deserialize_uint32_t(name["members"]["maxClipDistances"]);}();
[&]() {
result.maxCullDistances=deserialize_uint32_t(name["members"]["maxCullDistances"]);}();
[&]() {
result.maxCombinedClipAndCullDistances=deserialize_uint32_t(name["members"]["maxCombinedClipAndCullDistances"]);}();
[&]() {
result.discreteQueuePriorities=deserialize_uint32_t(name["members"]["discreteQueuePriorities"]);}();
[&]() {

        for (int DiYwoKT=0; DiYwoKT < 2; DiYwoKT++){
            [&]() {
result.pointSizeRange[DiYwoKT]=deserialize_float(name["members"]["pointSizeRange"]["members"][DiYwoKT]);}();;
        }
        }();
[&]() {

        for (int pRwjykA=0; pRwjykA < 2; pRwjykA++){
            [&]() {
result.lineWidthRange[pRwjykA]=deserialize_float(name["members"]["lineWidthRange"]["members"][pRwjykA]);}();;
        }
        }();
[&]() {
result.pointSizeGranularity=deserialize_float(name["members"]["pointSizeGranularity"]);}();
[&]() {
result.lineWidthGranularity=deserialize_float(name["members"]["lineWidthGranularity"]);}();
[&]() {
[&]() {
result.strictLines=deserialize_uint32_t(name["members"]["strictLines"]);}();}();
[&]() {
[&]() {
result.standardSampleLocations=deserialize_uint32_t(name["members"]["standardSampleLocations"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyOffsetAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyRowPitchAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyRowPitchAlignment"]);}();}();
[&]() {
[&]() {
result.nonCoherentAtomSize=deserialize_uint64_t(name["members"]["nonCoherentAtomSize"]);}();}();
return result;}

    json serialize_VkSemaphoreCreateInfo(VkSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AqSTtHH=json({});
    return serialize_VkSemaphoreCreateFlags(name.flags);}();
return result;}

    VkSemaphoreCreateInfo deserialize_VkSemaphoreCreateInfo(json name){
        auto result=VkSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSemaphoreCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfo(VkQueryPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_iEYfjFP=json({});
    return serialize_VkQueryPoolCreateFlags(name.flags);}();
result["members"]["queryType"]=[&]() {
    json return_yHtQFPk=json({});
    return serialize_VkQueryType(name.queryType);}();
result["members"]["queryCount"]=[&]() {
    json return_MhZpdXT=json({});
    return serialize_uint32_t(name.queryCount);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_SdnLOyJ=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkQueryPoolCreateInfo deserialize_VkQueryPoolCreateInfo(json name){
        auto result=VkQueryPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkQueryPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queryType=deserialize_VkQueryType(name["members"]["queryType"]);}();
[&]() {
result.queryCount=deserialize_uint32_t(name["members"]["queryCount"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkFramebufferCreateInfo(VkFramebufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JLcSEDO=json({});
    return serialize_VkFramebufferCreateFlags(name.flags);}();
result["members"]["renderPass"]=[&]() {
    json return_eCcfmNF=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_fSTwRko=json({});
    
        if (name.pAttachments==NULL){
            return_fSTwRko["null"]=true;
            return return_fSTwRko;
        }
        
        return_fSTwRko["members"]={};
        for(int fSTwRko=0; fSTwRko < name.attachmentCount; fSTwRko++){
            json temp;
            temp=[&]() {
    json return_EgGVwZA=json({});
    return serialize_VkImageView(name.pAttachments[fSTwRko]);}();
            return_fSTwRko["members"][std::to_string(fSTwRko)].push_back(temp);
        }
        return return_fSTwRko;
        }();
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layers"]=[&]() {
    json return_KxmiSyT=json({});
    return serialize_uint32_t(name.layers);}();
return result;}

    VkFramebufferCreateInfo deserialize_VkFramebufferCreateInfo(json name){
        auto result=VkFramebufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkFramebufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_qXgJIsw;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_qXgJIsw=NULL;
        }
    temp_qXgJIsw=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int aBkALwD=0; aBkALwD < result.attachmentCount; aBkALwD++){
            [&]() {
temp_qXgJIsw[aBkALwD]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][aBkALwD]);}();;
        }
        }();result.pAttachments=temp_qXgJIsw;}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layers=deserialize_uint32_t(name["members"]["layers"]);}();
return result;}

    json serialize_VkDrawIndirectCommand(VkDrawIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["vertexCount"]=[&]() {
    json return_sDAzlBI=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_GLydUbe=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstVertex"]=[&]() {
    json return_HJTrdfm=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["firstInstance"]=[&]() {
    json return_oOjZXrM=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndirectCommand deserialize_VkDrawIndirectCommand(json name){
        auto result=VkDrawIndirectCommand();
    
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDrawIndexedIndirectCommand(VkDrawIndexedIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["indexCount"]=[&]() {
    json return_DOvSNFq=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_GLydUbe=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstIndex"]=[&]() {
    json return_ltGojsv=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["vertexOffset"]=[&]() {
    json return_aObDSOu=json({});
    return serialize_int32_t(name.vertexOffset);}();
result["members"]["firstInstance"]=[&]() {
    json return_oOjZXrM=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndexedIndirectCommand deserialize_VkDrawIndexedIndirectCommand(json name){
        auto result=VkDrawIndexedIndirectCommand();
    
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDispatchIndirectCommand(VkDispatchIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_fWuieLo=json({});
    return serialize_uint32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_TNKrvRg=json({});
    return serialize_uint32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_vXzdnfn=json({});
    return serialize_uint32_t(name.z);}();
return result;}

    VkDispatchIndirectCommand deserialize_VkDispatchIndirectCommand(json name){
        auto result=VkDispatchIndirectCommand();
    
[&]() {
result.x=deserialize_uint32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_uint32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_uint32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkMultiDrawInfoEXT(VkMultiDrawInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstVertex"]=[&]() {
    json return_HJTrdfm=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["vertexCount"]=[&]() {
    json return_sDAzlBI=json({});
    return serialize_uint32_t(name.vertexCount);}();
return result;}

    VkMultiDrawInfoEXT deserialize_VkMultiDrawInfoEXT(json name){
        auto result=VkMultiDrawInfoEXT();
    
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
return result;}

    json serialize_VkMultiDrawIndexedInfoEXT(VkMultiDrawIndexedInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstIndex"]=[&]() {
    json return_ltGojsv=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["indexCount"]=[&]() {
    json return_DOvSNFq=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["vertexOffset"]=[&]() {
    json return_aObDSOu=json({});
    return serialize_int32_t(name.vertexOffset);}();
return result;}

    VkMultiDrawIndexedInfoEXT deserialize_VkMultiDrawIndexedInfoEXT(json name){
        auto result=VkMultiDrawIndexedInfoEXT();
    
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
return result;}

    json serialize_VkSubmitInfo(VkSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_YnAXKTD=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_dsNTTiF=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_dsNTTiF["null"]=true;
            return return_dsNTTiF;
        }
        
        return_dsNTTiF["members"]={};
        for(int dsNTTiF=0; dsNTTiF < name.waitSemaphoreCount; dsNTTiF++){
            json temp;
            temp=[&]() {
    json return_kNqCqIJ=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[dsNTTiF]);}();
            return_dsNTTiF["members"][std::to_string(dsNTTiF)].push_back(temp);
        }
        return return_dsNTTiF;
        }();
result["members"]["pWaitDstStageMask"]=[&]() {
    json return_EnafmFu=json({});
    
        if (name.pWaitDstStageMask==NULL){
            return_EnafmFu["null"]=true;
            return return_EnafmFu;
        }
        
        return_EnafmFu["members"]={};
        for(int EnafmFu=0; EnafmFu < name.waitSemaphoreCount; EnafmFu++){
            json temp;
            temp=[&]() {
    json return_nnXRevh=json({});
    return serialize_VkPipelineStageFlags(name.pWaitDstStageMask[EnafmFu]);}();
            return_EnafmFu["members"][std::to_string(EnafmFu)].push_back(temp);
        }
        return return_EnafmFu;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_AaHHUKx=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBuffers"]=[&]() {
    json return_gjksHaw=json({});
    
        if (name.pCommandBuffers==NULL){
            return_gjksHaw["null"]=true;
            return return_gjksHaw;
        }
        
        return_gjksHaw["members"]={};
        for(int gjksHaw=0; gjksHaw < name.commandBufferCount; gjksHaw++){
            json temp;
            temp=[&]() {
    json return_ayRKSoN=json({});
    return serialize_VkCommandBuffer(name.pCommandBuffers[gjksHaw]);}();
            return_gjksHaw["members"][std::to_string(gjksHaw)].push_back(temp);
        }
        return return_gjksHaw;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_erRBknT=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_yNcjFGk=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_yNcjFGk["null"]=true;
            return return_yNcjFGk;
        }
        
        return_yNcjFGk["members"]={};
        for(int yNcjFGk=0; yNcjFGk < name.signalSemaphoreCount; yNcjFGk++){
            json temp;
            temp=[&]() {
    json return_NUNQfgO=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[yNcjFGk]);}();
            return_yNcjFGk["members"][std::to_string(yNcjFGk)].push_back(temp);
        }
        return return_yNcjFGk;
        }();
return result;}

    VkSubmitInfo deserialize_VkSubmitInfo(json name){
        auto result=VkSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_hfboaZU;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_hfboaZU=NULL;
        }
    temp_hfboaZU=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int asCGXsZ=0; asCGXsZ < result.waitSemaphoreCount; asCGXsZ++){
            [&]() {
temp_hfboaZU[asCGXsZ]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][asCGXsZ]);}();;
        }
        }();result.pWaitSemaphores=temp_hfboaZU;}();
[&]() {
VkPipelineStageFlags* temp_FwWlshq;[&]() {

        if (name["members"]["pWaitDstStageMask"].contains("null")){
        temp_FwWlshq=NULL;
        }
    temp_FwWlshq=(VkPipelineStageFlags*)malloc(result.waitSemaphoreCount*sizeof(VkPipelineStageFlags));
        for (int eYHkbkN=0; eYHkbkN < result.waitSemaphoreCount; eYHkbkN++){
            [&]() {
temp_FwWlshq[eYHkbkN]=deserialize_VkPipelineStageFlags(name["members"]["pWaitDstStageMask"]["members"][eYHkbkN]);}();;
        }
        }();result.pWaitDstStageMask=temp_FwWlshq;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
VkCommandBuffer* temp_jcEQPto;[&]() {

        if (name["members"]["pCommandBuffers"].contains("null")){
        temp_jcEQPto=NULL;
        }
    temp_jcEQPto=(VkCommandBuffer*)malloc(result.commandBufferCount*sizeof(VkCommandBuffer));
        for (int RcljDNz=0; RcljDNz < result.commandBufferCount; RcljDNz++){
            [&]() {
temp_jcEQPto[RcljDNz]=deserialize_VkCommandBuffer(name["members"]["pCommandBuffers"]["members"][RcljDNz]);}();;
        }
        }();result.pCommandBuffers=temp_jcEQPto;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_kAvuKqF;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_kAvuKqF=NULL;
        }
    temp_kAvuKqF=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int wFOWqbt=0; wFOWqbt < result.signalSemaphoreCount; wFOWqbt++){
            [&]() {
temp_kAvuKqF[wFOWqbt]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][wFOWqbt]);}();;
        }
        }();result.pSignalSemaphores=temp_kAvuKqF;}();
return result;}

    json serialize_VkDisplayPropertiesKHR(VkDisplayPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["display"]=[&]() {
    json return_ljervVq=json({});
    return serialize_VkDisplayKHR(name.display);}();
result["members"]["displayName"]=[&]() {
    json return_wdrwjfP=json({});
    
        if (name.displayName==NULL){
            return_wdrwjfP["null"]=true;
            return return_wdrwjfP;
        }
        return serialize_char_p(name.displayName);
}();
result["members"]["physicalDimensions"]=[&]() {
    json return_KKJAbCW=json({});
    return serialize_VkExtent2D(name.physicalDimensions);}();
result["members"]["physicalResolution"]=[&]() {
    json return_YCyeVli=json({});
    return serialize_VkExtent2D(name.physicalResolution);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_ZbrtQfW=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["planeReorderPossible"]=[&]() {
    json return_cjsAcYT=json({});
    return_cjsAcYT=[&]() {
    json return_iJJRzcA=json({});
    return serialize_uint32_t(name.planeReorderPossible);}();return return_cjsAcYT;}();
result["members"]["persistentContent"]=[&]() {
    json return_JCHBFfE=json({});
    return_JCHBFfE=[&]() {
    json return_GMugynY=json({});
    return serialize_uint32_t(name.persistentContent);}();return return_JCHBFfE;}();
return result;}

    VkDisplayPropertiesKHR deserialize_VkDisplayPropertiesKHR(json name){
        auto result=VkDisplayPropertiesKHR();
    
[&]() {
result.display=deserialize_VkDisplayKHR(name["members"]["display"]);}();
[&]() {
char* temp_QTeUOOS;[&]() {

        if (name["members"]["displayName"].contains("null")){
        temp_QTeUOOS=NULL;
        }
    temp_QTeUOOS=deserialize_char_p(name["members"]["displayName"]);
}();result.displayName=temp_QTeUOOS;}();
[&]() {
result.physicalDimensions=deserialize_VkExtent2D(name["members"]["physicalDimensions"]);}();
[&]() {
result.physicalResolution=deserialize_VkExtent2D(name["members"]["physicalResolution"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
[&]() {
result.planeReorderPossible=deserialize_uint32_t(name["members"]["planeReorderPossible"]);}();}();
[&]() {
[&]() {
result.persistentContent=deserialize_uint32_t(name["members"]["persistentContent"]);}();}();
return result;}

    json serialize_VkDisplayPlanePropertiesKHR(VkDisplayPlanePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["currentDisplay"]=[&]() {
    json return_YOfHCkD=json({});
    return serialize_VkDisplayKHR(name.currentDisplay);}();
result["members"]["currentStackIndex"]=[&]() {
    json return_LWoFXzb=json({});
    return serialize_uint32_t(name.currentStackIndex);}();
return result;}

    VkDisplayPlanePropertiesKHR deserialize_VkDisplayPlanePropertiesKHR(json name){
        auto result=VkDisplayPlanePropertiesKHR();
    
[&]() {
result.currentDisplay=deserialize_VkDisplayKHR(name["members"]["currentDisplay"]);}();
[&]() {
result.currentStackIndex=deserialize_uint32_t(name["members"]["currentStackIndex"]);}();
return result;}

    json serialize_VkDisplayModeParametersKHR(VkDisplayModeParametersKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["visibleRegion"]=[&]() {
    json return_DMItYBF=json({});
    return serialize_VkExtent2D(name.visibleRegion);}();
result["members"]["refreshRate"]=[&]() {
    json return_YHQOvbl=json({});
    return serialize_uint32_t(name.refreshRate);}();
return result;}

    VkDisplayModeParametersKHR deserialize_VkDisplayModeParametersKHR(json name){
        auto result=VkDisplayModeParametersKHR();
    
[&]() {
result.visibleRegion=deserialize_VkExtent2D(name["members"]["visibleRegion"]);}();
[&]() {
result.refreshRate=deserialize_uint32_t(name["members"]["refreshRate"]);}();
return result;}

    json serialize_VkDisplayModePropertiesKHR(VkDisplayModePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["displayMode"]=[&]() {
    json return_KklJdYZ=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["parameters"]=[&]() {
    json return_RBQEOga=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModePropertiesKHR deserialize_VkDisplayModePropertiesKHR(json name){
        auto result=VkDisplayModePropertiesKHR();
    
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayModeCreateInfoKHR(VkDisplayModeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RwUbQuI=json({});
    return serialize_VkDisplayModeCreateFlagsKHR(name.flags);}();
result["members"]["parameters"]=[&]() {
    json return_RBQEOga=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModeCreateInfoKHR deserialize_VkDisplayModeCreateInfoKHR(json name){
        auto result=VkDisplayModeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDisplayModeCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilitiesKHR(VkDisplayPlaneCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["supportedAlpha"]=[&]() {
    json return_qNndEhZ=json({});
    return serialize_VkDisplayPlaneAlphaFlagsKHR(name.supportedAlpha);}();
result["members"]["minSrcPosition"]=[&]() {
    json return_MvuSXww=json({});
    return serialize_VkOffset2D(name.minSrcPosition);}();
result["members"]["maxSrcPosition"]=[&]() {
    json return_kPrcXts=json({});
    return serialize_VkOffset2D(name.maxSrcPosition);}();
result["members"]["minSrcExtent"]=[&]() {
    json return_zXAKKei=json({});
    return serialize_VkExtent2D(name.minSrcExtent);}();
result["members"]["maxSrcExtent"]=[&]() {
    json return_qlIoUOg=json({});
    return serialize_VkExtent2D(name.maxSrcExtent);}();
result["members"]["minDstPosition"]=[&]() {
    json return_TNyndzh=json({});
    return serialize_VkOffset2D(name.minDstPosition);}();
result["members"]["maxDstPosition"]=[&]() {
    json return_dOIQqax=json({});
    return serialize_VkOffset2D(name.maxDstPosition);}();
result["members"]["minDstExtent"]=[&]() {
    json return_DWLsaMU=json({});
    return serialize_VkExtent2D(name.minDstExtent);}();
result["members"]["maxDstExtent"]=[&]() {
    json return_sqnqHhz=json({});
    return serialize_VkExtent2D(name.maxDstExtent);}();
return result;}

    VkDisplayPlaneCapabilitiesKHR deserialize_VkDisplayPlaneCapabilitiesKHR(json name){
        auto result=VkDisplayPlaneCapabilitiesKHR();
    
[&]() {
result.supportedAlpha=deserialize_VkDisplayPlaneAlphaFlagsKHR(name["members"]["supportedAlpha"]);}();
[&]() {
result.minSrcPosition=deserialize_VkOffset2D(name["members"]["minSrcPosition"]);}();
[&]() {
result.maxSrcPosition=deserialize_VkOffset2D(name["members"]["maxSrcPosition"]);}();
[&]() {
result.minSrcExtent=deserialize_VkExtent2D(name["members"]["minSrcExtent"]);}();
[&]() {
result.maxSrcExtent=deserialize_VkExtent2D(name["members"]["maxSrcExtent"]);}();
[&]() {
result.minDstPosition=deserialize_VkOffset2D(name["members"]["minDstPosition"]);}();
[&]() {
result.maxDstPosition=deserialize_VkOffset2D(name["members"]["maxDstPosition"]);}();
[&]() {
result.minDstExtent=deserialize_VkExtent2D(name["members"]["minDstExtent"]);}();
[&]() {
result.maxDstExtent=deserialize_VkExtent2D(name["members"]["maxDstExtent"]);}();
return result;}

    json serialize_VkDisplaySurfaceCreateInfoKHR(VkDisplaySurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_TAtufAg=json({});
    return serialize_VkDisplaySurfaceCreateFlagsKHR(name.flags);}();
result["members"]["displayMode"]=[&]() {
    json return_KklJdYZ=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["planeIndex"]=[&]() {
    json return_prRxQaT=json({});
    return serialize_uint32_t(name.planeIndex);}();
result["members"]["planeStackIndex"]=[&]() {
    json return_DveGncG=json({});
    return serialize_uint32_t(name.planeStackIndex);}();
result["members"]["transform"]=[&]() {
    json return_lkfZFPN=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["globalAlpha"]=[&]() {
    json return_rxpjAsl=json({});
    return serialize_float(name.globalAlpha);}();
result["members"]["alphaMode"]=[&]() {
    json return_njmSXZJ=json({});
    return serialize_VkDisplayPlaneAlphaFlagBitsKHR(name.alphaMode);}();
result["members"]["imageExtent"]=[&]() {
    json return_XoakNCL=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
return result;}

    VkDisplaySurfaceCreateInfoKHR deserialize_VkDisplaySurfaceCreateInfoKHR(json name){
        auto result=VkDisplaySurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDisplaySurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
[&]() {
result.planeStackIndex=deserialize_uint32_t(name["members"]["planeStackIndex"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.globalAlpha=deserialize_float(name["members"]["globalAlpha"]);}();
[&]() {
result.alphaMode=deserialize_VkDisplayPlaneAlphaFlagBitsKHR(name["members"]["alphaMode"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkDisplayPresentInfoKHR(VkDisplayPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcRect"]=[&]() {
    json return_VWFDmyL=json({});
    return serialize_VkRect2D(name.srcRect);}();
result["members"]["dstRect"]=[&]() {
    json return_uDUKTKG=json({});
    return serialize_VkRect2D(name.dstRect);}();
result["members"]["persistent"]=[&]() {
    json return_jADrPto=json({});
    return_jADrPto=[&]() {
    json return_iAeZGgc=json({});
    return serialize_uint32_t(name.persistent);}();return return_jADrPto;}();
return result;}

    VkDisplayPresentInfoKHR deserialize_VkDisplayPresentInfoKHR(json name){
        auto result=VkDisplayPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcRect=deserialize_VkRect2D(name["members"]["srcRect"]);}();
[&]() {
result.dstRect=deserialize_VkRect2D(name["members"]["dstRect"]);}();
[&]() {
[&]() {
result.persistent=deserialize_uint32_t(name["members"]["persistent"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesKHR(VkSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minImageCount"]=[&]() {
    json return_HLQkOwz=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_CWroTPY=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_VkCHapd=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_fMIdXLL=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_xXXKuYH=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_QBcMjjE=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_ZbrtQfW=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_EsdUhnB=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_HWUHXuh=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_JJVEgDR=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
return result;}

    VkSurfaceCapabilitiesKHR deserialize_VkSurfaceCapabilitiesKHR(json name){
        auto result=VkSurfaceCapabilitiesKHR();
    
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
return result;}

    json serialize_VkXlibSurfaceCreateInfoKHR(VkXlibSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gonWWAX=json({});
    return serialize_VkXlibSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["dpy"]=[&]() {
    json return_LtEmjGL=json({});
    
        if (name.dpy==NULL){
            return_LtEmjGL["null"]=true;
            return return_LtEmjGL;
        }
        return serialize_Display_p(name.dpy);
}();
result["members"]["window"]=[&]() {
    json return_bjYsWfO=json({});
    return serialize_Window(name.window);
}();
return result;}

    VkXlibSurfaceCreateInfoKHR deserialize_VkXlibSurfaceCreateInfoKHR(json name){
        auto result=VkXlibSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkXlibSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["dpy"].contains("null")){
        result.dpy=NULL;
        }
    result.dpy=deserialize_Display_p(name["members"]["dpy"]);
}();
[&]() {
result.window=deserialize_Window(name["members"]["window"]);
}();
return result;}

    json serialize_VkXcbSurfaceCreateInfoKHR(VkXcbSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MNYqKKS=json({});
    return serialize_VkXcbSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["connection"]=[&]() {
    json return_vcdqoRb=json({});
    
        if (name.connection==NULL){
            return_vcdqoRb["null"]=true;
            return return_vcdqoRb;
        }
        return serialize_xcb_connection_t_p(name.connection);
}();
result["members"]["window"]=[&]() {
    json return_kbVqByZ=json({});
    return serialize_xcb_window_t(name.window);
}();
return result;}

    VkXcbSurfaceCreateInfoKHR deserialize_VkXcbSurfaceCreateInfoKHR(json name){
        auto result=VkXcbSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkXcbSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["connection"].contains("null")){
        result.connection=NULL;
        }
    result.connection=deserialize_xcb_connection_t_p(name["members"]["connection"]);
}();
[&]() {
result.window=deserialize_xcb_window_t(name["members"]["window"]);
}();
return result;}

    json serialize_VkSurfaceFormatKHR(VkSurfaceFormatKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["colorSpace"]=[&]() {
    json return_GoFkRgE=json({});
    return serialize_VkColorSpaceKHR(name.colorSpace);}();
return result;}

    VkSurfaceFormatKHR deserialize_VkSurfaceFormatKHR(json name){
        auto result=VkSurfaceFormatKHR();
    
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.colorSpace=deserialize_VkColorSpaceKHR(name["members"]["colorSpace"]);}();
return result;}

    json serialize_VkSwapchainCreateInfoKHR(VkSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RWWQwLz=json({});
    return serialize_VkSwapchainCreateFlagsKHR(name.flags);}();
result["members"]["surface"]=[&]() {
    json return_fQJSPuz=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
result["members"]["minImageCount"]=[&]() {
    json return_HLQkOwz=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["imageFormat"]=[&]() {
    json return_AlzIijQ=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["imageColorSpace"]=[&]() {
    json return_lqncboq=json({});
    return serialize_VkColorSpaceKHR(name.imageColorSpace);}();
result["members"]["imageExtent"]=[&]() {
    json return_XoakNCL=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
result["members"]["imageArrayLayers"]=[&]() {
    json return_hGWsyFQ=json({});
    return serialize_uint32_t(name.imageArrayLayers);}();
result["members"]["imageUsage"]=[&]() {
    json return_Svpqjwu=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
result["members"]["imageSharingMode"]=[&]() {
    json return_RpRxXyP=json({});
    return serialize_VkSharingMode(name.imageSharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_WmcLOAF=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_dvhWemM=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_dvhWemM["null"]=true;
            return return_dvhWemM;
        }
        
        return_dvhWemM["members"]={};
        for(int dvhWemM=0; dvhWemM < name.queueFamilyIndexCount; dvhWemM++){
            json temp;
            temp=[&]() {
    json return_CJJYDwr=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[dvhWemM]);}();
            return_dvhWemM["members"][std::to_string(dvhWemM)].push_back(temp);
        }
        return return_dvhWemM;
        }();
result["members"]["preTransform"]=[&]() {
    json return_EJBiGEJ=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.preTransform);}();
result["members"]["compositeAlpha"]=[&]() {
    json return_NkphuJG=json({});
    return serialize_VkCompositeAlphaFlagBitsKHR(name.compositeAlpha);}();
result["members"]["presentMode"]=[&]() {
    json return_ICDTogd=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
result["members"]["clipped"]=[&]() {
    json return_fKkIAfW=json({});
    return_fKkIAfW=[&]() {
    json return_yPUOgEF=json({});
    return serialize_uint32_t(name.clipped);}();return return_fKkIAfW;}();
result["members"]["oldSwapchain"]=[&]() {
    json return_UddwFNB=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
result["members"]["oldSwapchain"]=[&]() {
    json return_UddwFNB=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
return result;}

    VkSwapchainCreateInfoKHR deserialize_VkSwapchainCreateInfoKHR(json name){
        auto result=VkSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSwapchainCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.imageColorSpace=deserialize_VkColorSpaceKHR(name["members"]["imageColorSpace"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
[&]() {
result.imageArrayLayers=deserialize_uint32_t(name["members"]["imageArrayLayers"]);}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
[&]() {
result.imageSharingMode=deserialize_VkSharingMode(name["members"]["imageSharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_MhmszBU;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_MhmszBU=NULL;
        }
    temp_MhmszBU=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int gkCgTDc=0; gkCgTDc < result.queueFamilyIndexCount; gkCgTDc++){
            [&]() {
temp_MhmszBU[gkCgTDc]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][gkCgTDc]);}();;
        }
        }();result.pQueueFamilyIndices=temp_MhmszBU;}();
[&]() {
result.preTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["preTransform"]);}();
[&]() {
result.compositeAlpha=deserialize_VkCompositeAlphaFlagBitsKHR(name["members"]["compositeAlpha"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
[&]() {
[&]() {
result.clipped=deserialize_uint32_t(name["members"]["clipped"]);}();}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
return result;}

    json serialize_VkPresentInfoKHR(VkPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_YnAXKTD=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_dsNTTiF=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_dsNTTiF["null"]=true;
            return return_dsNTTiF;
        }
        
        return_dsNTTiF["members"]={};
        for(int dsNTTiF=0; dsNTTiF < name.waitSemaphoreCount; dsNTTiF++){
            json temp;
            temp=[&]() {
    json return_kNqCqIJ=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[dsNTTiF]);}();
            return_dsNTTiF["members"][std::to_string(dsNTTiF)].push_back(temp);
        }
        return return_dsNTTiF;
        }();
result["members"]["swapchainCount"]=[&]() {
    json return_eQuTgzd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pSwapchains"]=[&]() {
    json return_rfVZIoH=json({});
    
        if (name.pSwapchains==NULL){
            return_rfVZIoH["null"]=true;
            return return_rfVZIoH;
        }
        
        return_rfVZIoH["members"]={};
        for(int rfVZIoH=0; rfVZIoH < name.swapchainCount; rfVZIoH++){
            json temp;
            temp=[&]() {
    json return_xAScIHy=json({});
    return serialize_VkSwapchainKHR(name.pSwapchains[rfVZIoH]);}();
            return_rfVZIoH["members"][std::to_string(rfVZIoH)].push_back(temp);
        }
        return return_rfVZIoH;
        }();
result["members"]["pImageIndices"]=[&]() {
    json return_RalBXjf=json({});
    
        if (name.pImageIndices==NULL){
            return_RalBXjf["null"]=true;
            return return_RalBXjf;
        }
        
        return_RalBXjf["members"]={};
        for(int RalBXjf=0; RalBXjf < name.swapchainCount; RalBXjf++){
            json temp;
            temp=[&]() {
    json return_aTWZtGi=json({});
    return serialize_uint32_t(name.pImageIndices[RalBXjf]);}();
            return_RalBXjf["members"][std::to_string(RalBXjf)].push_back(temp);
        }
        return return_RalBXjf;
        }();
result["members"]["pResults"]=[&]() {
    json return_YwCpamW=json({});
    
        if (name.pResults==NULL){
            return_YwCpamW["null"]=true;
            return return_YwCpamW;
        }
        
        return_YwCpamW["members"]={};
        for(int YwCpamW=0; YwCpamW < name.swapchainCount; YwCpamW++){
            json temp;
            temp=[&]() {
    json return_FbIhAAv=json({});
    return serialize_VkResult(name.pResults[YwCpamW]);}();
            return_YwCpamW["members"][std::to_string(YwCpamW)].push_back(temp);
        }
        return return_YwCpamW;
        }();
return result;}

    VkPresentInfoKHR deserialize_VkPresentInfoKHR(json name){
        auto result=VkPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_hfboaZU;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_hfboaZU=NULL;
        }
    temp_hfboaZU=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int asCGXsZ=0; asCGXsZ < result.waitSemaphoreCount; asCGXsZ++){
            [&]() {
temp_hfboaZU[asCGXsZ]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][asCGXsZ]);}();;
        }
        }();result.pWaitSemaphores=temp_hfboaZU;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkSwapchainKHR* temp_PpegmNf;[&]() {

        if (name["members"]["pSwapchains"].contains("null")){
        temp_PpegmNf=NULL;
        }
    temp_PpegmNf=(VkSwapchainKHR*)malloc(result.swapchainCount*sizeof(VkSwapchainKHR));
        for (int vkdQJPQ=0; vkdQJPQ < result.swapchainCount; vkdQJPQ++){
            [&]() {
temp_PpegmNf[vkdQJPQ]=deserialize_VkSwapchainKHR(name["members"]["pSwapchains"]["members"][vkdQJPQ]);}();;
        }
        }();result.pSwapchains=temp_PpegmNf;}();
[&]() {
uint32_t* temp_KeNvLjn;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_KeNvLjn=NULL;
        }
    temp_KeNvLjn=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int RBNevDy=0; RBNevDy < result.swapchainCount; RBNevDy++){
            [&]() {
temp_KeNvLjn[RBNevDy]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][RBNevDy]);}();;
        }
        }();result.pImageIndices=temp_KeNvLjn;}();
[&]() {

        if (name["members"]["pResults"].contains("null")){
        result.pResults=NULL;
        }
    result.pResults=(VkResult*)malloc(result.swapchainCount*sizeof(VkResult));
        for (int brKadas=0; brKadas < result.swapchainCount; brKadas++){
            [&]() {
result.pResults[brKadas]=deserialize_VkResult(name["members"]["pResults"]["members"][brKadas]);}();;
        }
        }();
return result;}

    json serialize_VkDebugReportCallbackCreateInfoEXT(VkDebugReportCallbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JslvwCn=json({});
    return serialize_VkDebugReportFlagsEXT(name.flags);}();
result["members"]["pfnCallback"]=[&]() {
    json return_hMFhSue=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugReportCallbackEXT(name.pfnCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_NIpboad=json({});
    
        if (name.pUserData==NULL){
            return_NIpboad["null"]=true;
            return return_NIpboad;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugReportFlagsEXT_id;
uintptr_t PFN_vkDebugReportCallbackEXT_id;
void* pUserData;
} VkDebugReportCallbackCreateInfoEXT_struct;

    VkDebugReportCallbackCreateInfoEXT deserialize_VkDebugReportCallbackCreateInfoEXT(json name){
        auto result=VkDebugReportCallbackCreateInfoEXT();
    
auto _struct = new VkDebugReportCallbackCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDebugReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnCallback=deserialize_PFN_vkDebugReportCallbackEXT(name["members"]["pfnCallback"]);
        #endif
        }();
_struct->PFN_vkDebugReportCallbackEXT_id=name["members"]["pfnCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkValidationFlagsEXT(VkValidationFlagsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disabledValidationCheckCount"]=[&]() {
    json return_xaFqiUX=json({});
    return serialize_uint32_t(name.disabledValidationCheckCount);}();
result["members"]["pDisabledValidationChecks"]=[&]() {
    json return_tZoRcZH=json({});
    
        if (name.pDisabledValidationChecks==NULL){
            return_tZoRcZH["null"]=true;
            return return_tZoRcZH;
        }
        
        return_tZoRcZH["members"]={};
        for(int tZoRcZH=0; tZoRcZH < name.disabledValidationCheckCount; tZoRcZH++){
            json temp;
            temp=[&]() {
    json return_ogeyKGV=json({});
    return serialize_VkValidationCheckEXT(name.pDisabledValidationChecks[tZoRcZH]);}();
            return_tZoRcZH["members"][std::to_string(tZoRcZH)].push_back(temp);
        }
        return return_tZoRcZH;
        }();
return result;}

    VkValidationFlagsEXT deserialize_VkValidationFlagsEXT(json name){
        auto result=VkValidationFlagsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.disabledValidationCheckCount=deserialize_uint32_t(name["members"]["disabledValidationCheckCount"]);}();
[&]() {
VkValidationCheckEXT* temp_eueFJKY;[&]() {

        if (name["members"]["pDisabledValidationChecks"].contains("null")){
        temp_eueFJKY=NULL;
        }
    temp_eueFJKY=(VkValidationCheckEXT*)malloc(result.disabledValidationCheckCount*sizeof(VkValidationCheckEXT));
        for (int GdnwVhF=0; GdnwVhF < result.disabledValidationCheckCount; GdnwVhF++){
            [&]() {
temp_eueFJKY[GdnwVhF]=deserialize_VkValidationCheckEXT(name["members"]["pDisabledValidationChecks"]["members"][GdnwVhF]);}();;
        }
        }();result.pDisabledValidationChecks=temp_eueFJKY;}();
return result;}

    json serialize_VkValidationFeaturesEXT(VkValidationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enabledValidationFeatureCount"]=[&]() {
    json return_YmqtzxZ=json({});
    return serialize_uint32_t(name.enabledValidationFeatureCount);}();
result["members"]["pEnabledValidationFeatures"]=[&]() {
    json return_aygpUQT=json({});
    
        if (name.pEnabledValidationFeatures==NULL){
            return_aygpUQT["null"]=true;
            return return_aygpUQT;
        }
        
        return_aygpUQT["members"]={};
        for(int aygpUQT=0; aygpUQT < name.enabledValidationFeatureCount; aygpUQT++){
            json temp;
            temp=[&]() {
    json return_sPPIXua=json({});
    return serialize_VkValidationFeatureEnableEXT(name.pEnabledValidationFeatures[aygpUQT]);}();
            return_aygpUQT["members"][std::to_string(aygpUQT)].push_back(temp);
        }
        return return_aygpUQT;
        }();
result["members"]["disabledValidationFeatureCount"]=[&]() {
    json return_rWKCTyY=json({});
    return serialize_uint32_t(name.disabledValidationFeatureCount);}();
result["members"]["pDisabledValidationFeatures"]=[&]() {
    json return_UgZtxQr=json({});
    
        if (name.pDisabledValidationFeatures==NULL){
            return_UgZtxQr["null"]=true;
            return return_UgZtxQr;
        }
        
        return_UgZtxQr["members"]={};
        for(int UgZtxQr=0; UgZtxQr < name.disabledValidationFeatureCount; UgZtxQr++){
            json temp;
            temp=[&]() {
    json return_miUaKPO=json({});
    return serialize_VkValidationFeatureDisableEXT(name.pDisabledValidationFeatures[UgZtxQr]);}();
            return_UgZtxQr["members"][std::to_string(UgZtxQr)].push_back(temp);
        }
        return return_UgZtxQr;
        }();
return result;}

    VkValidationFeaturesEXT deserialize_VkValidationFeaturesEXT(json name){
        auto result=VkValidationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.enabledValidationFeatureCount=deserialize_uint32_t(name["members"]["enabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureEnableEXT* temp_UUSpPoM;[&]() {

        if (name["members"]["pEnabledValidationFeatures"].contains("null")){
        temp_UUSpPoM=NULL;
        }
    temp_UUSpPoM=(VkValidationFeatureEnableEXT*)malloc(result.enabledValidationFeatureCount*sizeof(VkValidationFeatureEnableEXT));
        for (int ouZeNPX=0; ouZeNPX < result.enabledValidationFeatureCount; ouZeNPX++){
            [&]() {
temp_UUSpPoM[ouZeNPX]=deserialize_VkValidationFeatureEnableEXT(name["members"]["pEnabledValidationFeatures"]["members"][ouZeNPX]);}();;
        }
        }();result.pEnabledValidationFeatures=temp_UUSpPoM;}();
[&]() {
result.disabledValidationFeatureCount=deserialize_uint32_t(name["members"]["disabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureDisableEXT* temp_nnlQhxZ;[&]() {

        if (name["members"]["pDisabledValidationFeatures"].contains("null")){
        temp_nnlQhxZ=NULL;
        }
    temp_nnlQhxZ=(VkValidationFeatureDisableEXT*)malloc(result.disabledValidationFeatureCount*sizeof(VkValidationFeatureDisableEXT));
        for (int cPXMECA=0; cPXMECA < result.disabledValidationFeatureCount; cPXMECA++){
            [&]() {
temp_nnlQhxZ[cPXMECA]=deserialize_VkValidationFeatureDisableEXT(name["members"]["pDisabledValidationFeatures"]["members"][cPXMECA]);}();;
        }
        }();result.pDisabledValidationFeatures=temp_nnlQhxZ;}();
return result;}

    json serialize_VkPipelineRasterizationStateRasterizationOrderAMD(VkPipelineRasterizationStateRasterizationOrderAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrder"]=[&]() {
    json return_wgcUjcS=json({});
    return serialize_VkRasterizationOrderAMD(name.rasterizationOrder);}();
return result;}

    VkPipelineRasterizationStateRasterizationOrderAMD deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(json name){
        auto result=VkPipelineRasterizationStateRasterizationOrderAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.rasterizationOrder=deserialize_VkRasterizationOrderAMD(name["members"]["rasterizationOrder"]);}();
return result;}

    json serialize_VkDebugMarkerObjectNameInfoEXT(VkDebugMarkerObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_KJBjLQQ=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_sePBziW=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["pObjectName"]=[&]() {
    json return_fhwMbIA=json({});
    
        if (name.pObjectName==NULL){
            return_fhwMbIA["null"]=true;
            return return_fhwMbIA;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugMarkerObjectNameInfoEXT deserialize_VkDebugMarkerObjectNameInfoEXT(json name){
        auto result=VkDebugMarkerObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
char* temp_RQFycnx;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_RQFycnx=NULL;
        }
    temp_RQFycnx=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_RQFycnx;}();
return result;}

    json serialize_VkDebugMarkerObjectTagInfoEXT(VkDebugMarkerObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_KJBjLQQ=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_sePBziW=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["tagName"]=[&]() {
    json return_IuRXkCY=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_bKbgEFD=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_IridPtR=json({});
    
        if (name.pTag==NULL){
            return_IridPtR["null"]=true;
            return return_IridPtR;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugMarkerObjectTagInfoEXT deserialize_VkDebugMarkerObjectTagInfoEXT(json name){
        auto result=VkDebugMarkerObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_oGkMHYN;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_oGkMHYN=NULL;
        }
    temp_oGkMHYN=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_oGkMHYN;}();
return result;}

    json serialize_VkDebugMarkerMarkerInfoEXT(VkDebugMarkerMarkerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pMarkerName"]=[&]() {
    json return_lSROWvr=json({});
    
        if (name.pMarkerName==NULL){
            return_lSROWvr["null"]=true;
            return return_lSROWvr;
        }
        return serialize_char_p(name.pMarkerName);
}();
result["members"]["color"]=[&]() {
    json return_QptgCNk=json({});
    
        return_QptgCNk["members"]={};
        for(int QptgCNk=0; QptgCNk < 4; QptgCNk++){
            json temp;
            temp=[&]() {
    json return_oTZnxjO=json({});
    return serialize_float(name.color[QptgCNk]);}();
            return_QptgCNk["members"][std::to_string(QptgCNk)].push_back(temp);
        }
        return return_QptgCNk;
        }();
return result;}

    VkDebugMarkerMarkerInfoEXT deserialize_VkDebugMarkerMarkerInfoEXT(json name){
        auto result=VkDebugMarkerMarkerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
char* temp_AtjFUvo;[&]() {

        if (name["members"]["pMarkerName"].contains("null")){
        temp_AtjFUvo=NULL;
        }
    temp_AtjFUvo=deserialize_char_p(name["members"]["pMarkerName"]);
}();result.pMarkerName=temp_AtjFUvo;}();
[&]() {

        for (int EJClqqF=0; EJClqqF < 4; EJClqqF++){
            [&]() {
result.color[EJClqqF]=deserialize_float(name["members"]["color"]["members"][EJClqqF]);}();;
        }
        }();
return result;}

    json serialize_VkDedicatedAllocationImageCreateInfoNV(VkDedicatedAllocationImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_wbRymdM=json({});
    return_wbRymdM=[&]() {
    json return_hZoGgGL=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_wbRymdM;}();
return result;}

    VkDedicatedAllocationImageCreateInfoNV deserialize_VkDedicatedAllocationImageCreateInfoNV(json name){
        auto result=VkDedicatedAllocationImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationBufferCreateInfoNV(VkDedicatedAllocationBufferCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_wbRymdM=json({});
    return_wbRymdM=[&]() {
    json return_hZoGgGL=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_wbRymdM;}();
return result;}

    VkDedicatedAllocationBufferCreateInfoNV deserialize_VkDedicatedAllocationBufferCreateInfoNV(json name){
        auto result=VkDedicatedAllocationBufferCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationMemoryAllocateInfoNV(VkDedicatedAllocationMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDedicatedAllocationMemoryAllocateInfoNV deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(json name){
        auto result=VkDedicatedAllocationMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesNV(VkExternalImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["imageFormatProperties"]=[&]() {
    json return_MLKDsIc=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_WmrVoSx=json({});
    return serialize_VkExternalMemoryFeatureFlagsNV(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_HAUysbW=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_AUurZnv=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.compatibleHandleTypes);}();
return result;}

    VkExternalImageFormatPropertiesNV deserialize_VkExternalImageFormatPropertiesNV(json name){
        auto result=VkExternalImageFormatPropertiesNV();
    
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlagsNV(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoNV(VkExternalMemoryImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_TxJCfXX=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoNV deserialize_VkExternalMemoryImageCreateInfoNV(json name){
        auto result=VkExternalMemoryImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoNV(VkExportMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_TxJCfXX=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoNV deserialize_VkExportMemoryAllocateInfoNV(json name){
        auto result=VkExportMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCommands"]=[&]() {
    json return_IsRHAGk=json({});
    return_IsRHAGk=[&]() {
    json return_oBagYSG=json({});
    return serialize_uint32_t(name.deviceGeneratedCommands);}();return return_IsRHAGk;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCommands=deserialize_uint32_t(name["members"]["deviceGeneratedCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCompute"]=[&]() {
    json return_oWWQpfH=json({});
    return_oWWQpfH=[&]() {
    json return_aoYyJas=json({});
    return serialize_uint32_t(name.deviceGeneratedCompute);}();return return_oWWQpfH;}();
result["members"]["deviceGeneratedComputePipelines"]=[&]() {
    json return_UzsOMcU=json({});
    return_UzsOMcU=[&]() {
    json return_YAIrXUM=json({});
    return serialize_uint32_t(name.deviceGeneratedComputePipelines);}();return return_UzsOMcU;}();
result["members"]["deviceGeneratedComputeCaptureReplay"]=[&]() {
    json return_aTLnSLP=json({});
    return_aTLnSLP=[&]() {
    json return_RbMOeHz=json({});
    return serialize_uint32_t(name.deviceGeneratedComputeCaptureReplay);}();return return_aTLnSLP;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCompute=deserialize_uint32_t(name["members"]["deviceGeneratedCompute"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputePipelines=deserialize_uint32_t(name["members"]["deviceGeneratedComputePipelines"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputeCaptureReplay=deserialize_uint32_t(name["members"]["deviceGeneratedComputeCaptureReplay"]);}();}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfo(VkDevicePrivateDataCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_eVDndma=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfo deserialize_VkDevicePrivateDataCreateInfo(json name){
        auto result=VkDevicePrivateDataCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfoEXT(VkDevicePrivateDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_eVDndma=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfoEXT deserialize_VkDevicePrivateDataCreateInfoEXT(json name){
        auto result=VkDevicePrivateDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfo(VkPrivateDataSlotCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dxQVyOy=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfo deserialize_VkPrivateDataSlotCreateInfo(json name){
        auto result=VkPrivateDataSlotCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfoEXT(VkPrivateDataSlotCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dxQVyOy=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfoEXT deserialize_VkPrivateDataSlotCreateInfoEXT(json name){
        auto result=VkPrivateDataSlotCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeatures(VkPhysicalDevicePrivateDataFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_oTKCcXm=json({});
    return_oTKCcXm=[&]() {
    json return_gogCCXO=json({});
    return serialize_uint32_t(name.privateData);}();return return_oTKCcXm;}();
return result;}

    VkPhysicalDevicePrivateDataFeatures deserialize_VkPhysicalDevicePrivateDataFeatures(json name){
        auto result=VkPhysicalDevicePrivateDataFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeaturesEXT(VkPhysicalDevicePrivateDataFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_oTKCcXm=json({});
    return_oTKCcXm=[&]() {
    json return_gogCCXO=json({});
    return serialize_uint32_t(name.privateData);}();return return_oTKCcXm;}();
return result;}

    VkPhysicalDevicePrivateDataFeaturesEXT deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrivateDataFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGraphicsShaderGroupCount"]=[&]() {
    json return_dXoPPyJ=json({});
    return serialize_uint32_t(name.maxGraphicsShaderGroupCount);}();
result["members"]["maxIndirectSequenceCount"]=[&]() {
    json return_FTDNeuN=json({});
    return serialize_uint32_t(name.maxIndirectSequenceCount);}();
result["members"]["maxIndirectCommandsTokenCount"]=[&]() {
    json return_hBZryev=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenCount);}();
result["members"]["maxIndirectCommandsStreamCount"]=[&]() {
    json return_HGbwfpq=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamCount);}();
result["members"]["maxIndirectCommandsTokenOffset"]=[&]() {
    json return_XTiUnVG=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenOffset);}();
result["members"]["maxIndirectCommandsStreamStride"]=[&]() {
    json return_boyBIBu=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamStride);}();
result["members"]["minSequencesCountBufferOffsetAlignment"]=[&]() {
    json return_XZUMhEx=json({});
    return serialize_uint32_t(name.minSequencesCountBufferOffsetAlignment);}();
result["members"]["minSequencesIndexBufferOffsetAlignment"]=[&]() {
    json return_kPOzALP=json({});
    return serialize_uint32_t(name.minSequencesIndexBufferOffsetAlignment);}();
result["members"]["minIndirectCommandsBufferOffsetAlignment"]=[&]() {
    json return_SGxKDrf=json({});
    return serialize_uint32_t(name.minIndirectCommandsBufferOffsetAlignment);}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGraphicsShaderGroupCount=deserialize_uint32_t(name["members"]["maxGraphicsShaderGroupCount"]);}();
[&]() {
result.maxIndirectSequenceCount=deserialize_uint32_t(name["members"]["maxIndirectSequenceCount"]);}();
[&]() {
result.maxIndirectCommandsTokenCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenCount"]);}();
[&]() {
result.maxIndirectCommandsStreamCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamCount"]);}();
[&]() {
result.maxIndirectCommandsTokenOffset=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenOffset"]);}();
[&]() {
result.maxIndirectCommandsStreamStride=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamStride"]);}();
[&]() {
result.minSequencesCountBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesCountBufferOffsetAlignment"]);}();
[&]() {
result.minSequencesIndexBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesIndexBufferOffsetAlignment"]);}();
[&]() {
result.minIndirectCommandsBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minIndirectCommandsBufferOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(VkPhysicalDeviceMultiDrawPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiDrawCount"]=[&]() {
    json return_DvqNMLN=json({});
    return serialize_uint32_t(name.maxMultiDrawCount);}();
return result;}

    VkPhysicalDeviceMultiDrawPropertiesEXT deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiDrawCount=deserialize_uint32_t(name["members"]["maxMultiDrawCount"]);}();
return result;}

    json serialize_VkGraphicsShaderGroupCreateInfoNV(VkGraphicsShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stageCount"]=[&]() {
    json return_HUoWBmB=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_JogxCwb=json({});
    
        if (name.pStages==NULL){
            return_JogxCwb["null"]=true;
            return return_JogxCwb;
        }
        
        return_JogxCwb["members"]={};
        for(int JogxCwb=0; JogxCwb < name.stageCount; JogxCwb++){
            json temp;
            temp=[&]() {
    json return_VVAWtpC=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[JogxCwb]);}();
            return_JogxCwb["members"][std::to_string(JogxCwb)].push_back(temp);
        }
        return return_JogxCwb;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_dqCgcbD=json({});
    
        if (name.pVertexInputState==NULL){
            return_dqCgcbD["null"]=true;
            return return_dqCgcbD;
        }
        return_dqCgcbD=[&]() {
    json return_yluWGLQ=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_dqCgcbD;}();
result["members"]["pTessellationState"]=[&]() {
    json return_SqnOQMm=json({});
    
        if (name.pTessellationState==NULL){
            return_SqnOQMm["null"]=true;
            return return_SqnOQMm;
        }
        return_SqnOQMm=[&]() {
    json return_CLlvdaI=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_SqnOQMm;}();
return result;}

    VkGraphicsShaderGroupCreateInfoNV deserialize_VkGraphicsShaderGroupCreateInfoNV(json name){
        auto result=VkGraphicsShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_wmeakbU;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_wmeakbU=NULL;
        }
    temp_wmeakbU=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int EIxdjSJ=0; EIxdjSJ < result.stageCount; EIxdjSJ++){
            [&]() {
temp_wmeakbU[EIxdjSJ]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][EIxdjSJ]);}();;
        }
        }();result.pStages=temp_wmeakbU;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_yPPvfWd;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_yPPvfWd=NULL;
        }
    [&]() {
*(temp_yPPvfWd)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_yPPvfWd;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_vhRTGMt;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_vhRTGMt=NULL;
        }
    [&]() {
*(temp_vhRTGMt)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_vhRTGMt;}();
return result;}

    json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(VkGraphicsPipelineShaderGroupsCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["groupCount"]=[&]() {
    json return_ZLNCWnb=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_GMRAePY=json({});
    
        if (name.pGroups==NULL){
            return_GMRAePY["null"]=true;
            return return_GMRAePY;
        }
        
        return_GMRAePY["members"]={};
        for(int GMRAePY=0; GMRAePY < name.groupCount; GMRAePY++){
            json temp;
            temp=[&]() {
    json return_fIanHCr=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(name.pGroups[GMRAePY]);}();
            return_GMRAePY["members"][std::to_string(GMRAePY)].push_back(temp);
        }
        return return_GMRAePY;
        }();
result["members"]["pipelineCount"]=[&]() {
    json return_GOVRXKX=json({});
    return serialize_uint32_t(name.pipelineCount);}();
result["members"]["pPipelines"]=[&]() {
    json return_sIzkDCO=json({});
    
        if (name.pPipelines==NULL){
            return_sIzkDCO["null"]=true;
            return return_sIzkDCO;
        }
        
        return_sIzkDCO["members"]={};
        for(int sIzkDCO=0; sIzkDCO < name.pipelineCount; sIzkDCO++){
            json temp;
            temp=[&]() {
    json return_ATxWjuZ=json({});
    return serialize_VkPipeline(name.pPipelines[sIzkDCO]);}();
            return_sIzkDCO["members"][std::to_string(sIzkDCO)].push_back(temp);
        }
        return return_sIzkDCO;
        }();
return result;}

    VkGraphicsPipelineShaderGroupsCreateInfoNV deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(json name){
        auto result=VkGraphicsPipelineShaderGroupsCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkGraphicsShaderGroupCreateInfoNV* temp_LtTDJXV;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_LtTDJXV=NULL;
        }
    temp_LtTDJXV=(VkGraphicsShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkGraphicsShaderGroupCreateInfoNV));
        for (int oCntbNS=0; oCntbNS < result.groupCount; oCntbNS++){
            [&]() {
temp_LtTDJXV[oCntbNS]=deserialize_VkGraphicsShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][oCntbNS]);}();;
        }
        }();result.pGroups=temp_LtTDJXV;}();
[&]() {
result.pipelineCount=deserialize_uint32_t(name["members"]["pipelineCount"]);}();
[&]() {
VkPipeline* temp_OozRTqb;[&]() {

        if (name["members"]["pPipelines"].contains("null")){
        temp_OozRTqb=NULL;
        }
    temp_OozRTqb=(VkPipeline*)malloc(result.pipelineCount*sizeof(VkPipeline));
        for (int mpeNXFG=0; mpeNXFG < result.pipelineCount; mpeNXFG++){
            [&]() {
temp_OozRTqb[mpeNXFG]=deserialize_VkPipeline(name["members"]["pPipelines"]["members"][mpeNXFG]);}();;
        }
        }();result.pPipelines=temp_OozRTqb;}();
return result;}

    json serialize_VkBindShaderGroupIndirectCommandNV(VkBindShaderGroupIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupIndex"]=[&]() {
    json return_yzFZLAz=json({});
    return serialize_uint32_t(name.groupIndex);}();
return result;}

    VkBindShaderGroupIndirectCommandNV deserialize_VkBindShaderGroupIndirectCommandNV(json name){
        auto result=VkBindShaderGroupIndirectCommandNV();
    
[&]() {
result.groupIndex=deserialize_uint32_t(name["members"]["groupIndex"]);}();
return result;}

    json serialize_VkBindIndexBufferIndirectCommandNV(VkBindIndexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_bDXcedu=json({});
    return_bDXcedu=[&]() {
    json return_YvTDsEc=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_bDXcedu;}();
result["members"]["size"]=[&]() {
    json return_jmzVtiR=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["indexType"]=[&]() {
    json return_cWCOLYT=json({});
    return serialize_VkIndexType(name.indexType);}();
return result;}

    VkBindIndexBufferIndirectCommandNV deserialize_VkBindIndexBufferIndirectCommandNV(json name){
        auto result=VkBindIndexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
return result;}

    json serialize_VkBindVertexBufferIndirectCommandNV(VkBindVertexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_bDXcedu=json({});
    return_bDXcedu=[&]() {
    json return_YvTDsEc=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_bDXcedu;}();
result["members"]["size"]=[&]() {
    json return_jmzVtiR=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["stride"]=[&]() {
    json return_lWJEvlL=json({});
    return serialize_uint32_t(name.stride);}();
return result;}

    VkBindVertexBufferIndirectCommandNV deserialize_VkBindVertexBufferIndirectCommandNV(json name){
        auto result=VkBindVertexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkSetStateFlagsIndirectCommandNV(VkSetStateFlagsIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["data"]=[&]() {
    json return_iisWGkf=json({});
    return serialize_uint32_t(name.data);}();
return result;}

    VkSetStateFlagsIndirectCommandNV deserialize_VkSetStateFlagsIndirectCommandNV(json name){
        auto result=VkSetStateFlagsIndirectCommandNV();
    
[&]() {
result.data=deserialize_uint32_t(name["members"]["data"]);}();
return result;}

    json serialize_VkIndirectCommandsStreamNV(VkIndirectCommandsStreamNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
return result;}

    VkIndirectCommandsStreamNV deserialize_VkIndirectCommandsStreamNV(json name){
        auto result=VkIndirectCommandsStreamNV();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkIndirectCommandsLayoutTokenNV(VkIndirectCommandsLayoutTokenNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tokenType"]=[&]() {
    json return_tCiIoLG=json({});
    return serialize_VkIndirectCommandsTokenTypeNV(name.tokenType);}();
result["members"]["stream"]=[&]() {
    json return_OFJGfGb=json({});
    return serialize_uint32_t(name.stream);}();
result["members"]["offset"]=[&]() {
    json return_QevQWLB=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["vertexBindingUnit"]=[&]() {
    json return_tmAvdQP=json({});
    return serialize_uint32_t(name.vertexBindingUnit);}();
result["members"]["vertexDynamicStride"]=[&]() {
    json return_gdkGULU=json({});
    return_gdkGULU=[&]() {
    json return_merNJaB=json({});
    return serialize_uint32_t(name.vertexDynamicStride);}();return return_gdkGULU;}();
result["members"]["pushconstantPipelineLayout"]=[&]() {
    json return_BduILIS=json({});
    return serialize_VkPipelineLayout(name.pushconstantPipelineLayout);}();
result["members"]["pushconstantShaderStageFlags"]=[&]() {
    json return_IcQPzPO=json({});
    return serialize_VkShaderStageFlags(name.pushconstantShaderStageFlags);}();
result["members"]["pushconstantOffset"]=[&]() {
    json return_RxIfwmJ=json({});
    return serialize_uint32_t(name.pushconstantOffset);}();
result["members"]["pushconstantSize"]=[&]() {
    json return_cngaQCD=json({});
    return serialize_uint32_t(name.pushconstantSize);}();
result["members"]["indirectStateFlags"]=[&]() {
    json return_NFsHXWc=json({});
    return serialize_VkIndirectStateFlagsNV(name.indirectStateFlags);}();
result["members"]["indexTypeCount"]=[&]() {
    json return_KvuOJvJ=json({});
    return serialize_uint32_t(name.indexTypeCount);}();
result["members"]["pIndexTypes"]=[&]() {
    json return_yZZyKvf=json({});
    
        if (name.pIndexTypes==NULL){
            return_yZZyKvf["null"]=true;
            return return_yZZyKvf;
        }
        
        return_yZZyKvf["members"]={};
        for(int yZZyKvf=0; yZZyKvf < name.indexTypeCount; yZZyKvf++){
            json temp;
            temp=[&]() {
    json return_mLcKtDm=json({});
    return serialize_VkIndexType(name.pIndexTypes[yZZyKvf]);}();
            return_yZZyKvf["members"][std::to_string(yZZyKvf)].push_back(temp);
        }
        return return_yZZyKvf;
        }();
result["members"]["pIndexTypeValues"]=[&]() {
    json return_wulrSKw=json({});
    
        if (name.pIndexTypeValues==NULL){
            return_wulrSKw["null"]=true;
            return return_wulrSKw;
        }
        
        return_wulrSKw["members"]={};
        for(int wulrSKw=0; wulrSKw < name.indexTypeCount; wulrSKw++){
            json temp;
            temp=[&]() {
    json return_SQwIcSL=json({});
    return serialize_uint32_t(name.pIndexTypeValues[wulrSKw]);}();
            return_wulrSKw["members"][std::to_string(wulrSKw)].push_back(temp);
        }
        return return_wulrSKw;
        }();
return result;}

    VkIndirectCommandsLayoutTokenNV deserialize_VkIndirectCommandsLayoutTokenNV(json name){
        auto result=VkIndirectCommandsLayoutTokenNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.tokenType=deserialize_VkIndirectCommandsTokenTypeNV(name["members"]["tokenType"]);}();
[&]() {
result.stream=deserialize_uint32_t(name["members"]["stream"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.vertexBindingUnit=deserialize_uint32_t(name["members"]["vertexBindingUnit"]);}();
[&]() {
[&]() {
result.vertexDynamicStride=deserialize_uint32_t(name["members"]["vertexDynamicStride"]);}();}();
[&]() {
result.pushconstantPipelineLayout=deserialize_VkPipelineLayout(name["members"]["pushconstantPipelineLayout"]);}();
[&]() {
result.pushconstantShaderStageFlags=deserialize_VkShaderStageFlags(name["members"]["pushconstantShaderStageFlags"]);}();
[&]() {
result.pushconstantOffset=deserialize_uint32_t(name["members"]["pushconstantOffset"]);}();
[&]() {
result.pushconstantSize=deserialize_uint32_t(name["members"]["pushconstantSize"]);}();
[&]() {
result.indirectStateFlags=deserialize_VkIndirectStateFlagsNV(name["members"]["indirectStateFlags"]);}();
[&]() {
result.indexTypeCount=deserialize_uint32_t(name["members"]["indexTypeCount"]);}();
[&]() {
VkIndexType* temp_gmlATGC;[&]() {

        if (name["members"]["pIndexTypes"].contains("null")){
        temp_gmlATGC=NULL;
        }
    temp_gmlATGC=(VkIndexType*)malloc(result.indexTypeCount*sizeof(VkIndexType));
        for (int hWJZEMd=0; hWJZEMd < result.indexTypeCount; hWJZEMd++){
            [&]() {
temp_gmlATGC[hWJZEMd]=deserialize_VkIndexType(name["members"]["pIndexTypes"]["members"][hWJZEMd]);}();;
        }
        }();result.pIndexTypes=temp_gmlATGC;}();
[&]() {
uint32_t* temp_FAndBty;[&]() {

        if (name["members"]["pIndexTypeValues"].contains("null")){
        temp_FAndBty=NULL;
        }
    temp_FAndBty=(uint32_t*)malloc(result.indexTypeCount*sizeof(uint32_t));
        for (int gbfxnKK=0; gbfxnKK < result.indexTypeCount; gbfxnKK++){
            [&]() {
temp_FAndBty[gbfxnKK]=deserialize_uint32_t(name["members"]["pIndexTypeValues"]["members"][gbfxnKK]);}();;
        }
        }();result.pIndexTypeValues=temp_FAndBty;}();
return result;}

    json serialize_VkIndirectCommandsLayoutCreateInfoNV(VkIndirectCommandsLayoutCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mTXGOeZ=json({});
    return serialize_VkIndirectCommandsLayoutUsageFlagsNV(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["tokenCount"]=[&]() {
    json return_BRkwJAl=json({});
    return serialize_uint32_t(name.tokenCount);}();
result["members"]["pTokens"]=[&]() {
    json return_PHPCabH=json({});
    
        if (name.pTokens==NULL){
            return_PHPCabH["null"]=true;
            return return_PHPCabH;
        }
        
        return_PHPCabH["members"]={};
        for(int PHPCabH=0; PHPCabH < name.tokenCount; PHPCabH++){
            json temp;
            temp=[&]() {
    json return_wCVCrxg=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(name.pTokens[PHPCabH]);}();
            return_PHPCabH["members"][std::to_string(PHPCabH)].push_back(temp);
        }
        return return_PHPCabH;
        }();
result["members"]["streamCount"]=[&]() {
    json return_GbpuqkF=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreamStrides"]=[&]() {
    json return_FMncWux=json({});
    
        if (name.pStreamStrides==NULL){
            return_FMncWux["null"]=true;
            return return_FMncWux;
        }
        
        return_FMncWux["members"]={};
        for(int FMncWux=0; FMncWux < name.streamCount; FMncWux++){
            json temp;
            temp=[&]() {
    json return_SlHlQGn=json({});
    return serialize_uint32_t(name.pStreamStrides[FMncWux]);}();
            return_FMncWux["members"][std::to_string(FMncWux)].push_back(temp);
        }
        return return_FMncWux;
        }();
return result;}

    VkIndirectCommandsLayoutCreateInfoNV deserialize_VkIndirectCommandsLayoutCreateInfoNV(json name){
        auto result=VkIndirectCommandsLayoutCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkIndirectCommandsLayoutUsageFlagsNV(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.tokenCount=deserialize_uint32_t(name["members"]["tokenCount"]);}();
[&]() {
VkIndirectCommandsLayoutTokenNV* temp_ummdxtl;[&]() {

        if (name["members"]["pTokens"].contains("null")){
        temp_ummdxtl=NULL;
        }
    temp_ummdxtl=(VkIndirectCommandsLayoutTokenNV*)malloc(result.tokenCount*sizeof(VkIndirectCommandsLayoutTokenNV));
        for (int QEdrYwU=0; QEdrYwU < result.tokenCount; QEdrYwU++){
            [&]() {
temp_ummdxtl[QEdrYwU]=deserialize_VkIndirectCommandsLayoutTokenNV(name["members"]["pTokens"]["members"][QEdrYwU]);}();;
        }
        }();result.pTokens=temp_ummdxtl;}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
uint32_t* temp_lirXeHx;[&]() {

        if (name["members"]["pStreamStrides"].contains("null")){
        temp_lirXeHx=NULL;
        }
    temp_lirXeHx=(uint32_t*)malloc(result.streamCount*sizeof(uint32_t));
        for (int VXAbtsu=0; VXAbtsu < result.streamCount; VXAbtsu++){
            [&]() {
temp_lirXeHx[VXAbtsu]=deserialize_uint32_t(name["members"]["pStreamStrides"]["members"][VXAbtsu]);}();;
        }
        }();result.pStreamStrides=temp_lirXeHx;}();
return result;}

    json serialize_VkGeneratedCommandsInfoNV(VkGeneratedCommandsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_uHlACGC=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_qHBNleX=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["streamCount"]=[&]() {
    json return_GbpuqkF=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreams"]=[&]() {
    json return_EDziwfF=json({});
    
        if (name.pStreams==NULL){
            return_EDziwfF["null"]=true;
            return return_EDziwfF;
        }
        
        return_EDziwfF["members"]={};
        for(int EDziwfF=0; EDziwfF < name.streamCount; EDziwfF++){
            json temp;
            temp=[&]() {
    json return_qdHpqYT=json({});
    return serialize_VkIndirectCommandsStreamNV(name.pStreams[EDziwfF]);}();
            return_EDziwfF["members"][std::to_string(EDziwfF)].push_back(temp);
        }
        return return_EDziwfF;
        }();
result["members"]["sequencesCount"]=[&]() {
    json return_NxWiTlG=json({});
    return serialize_uint32_t(name.sequencesCount);}();
result["members"]["preprocessBuffer"]=[&]() {
    json return_XrAiYcM=json({});
    return serialize_VkBuffer(name.preprocessBuffer);}();
result["members"]["preprocessOffset"]=[&]() {
    json return_BLVfFgE=json({});
    return_BLVfFgE=[&]() {
    json return_AKGyRvD=json({});
    return serialize_uint64_t(name.preprocessOffset);}();return return_BLVfFgE;}();
result["members"]["preprocessSize"]=[&]() {
    json return_jcIiALL=json({});
    return_jcIiALL=[&]() {
    json return_hgmnVHs=json({});
    return serialize_uint64_t(name.preprocessSize);}();return return_jcIiALL;}();
result["members"]["sequencesCountBuffer"]=[&]() {
    json return_NdTwmDV=json({});
    return serialize_VkBuffer(name.sequencesCountBuffer);}();
result["members"]["sequencesCountOffset"]=[&]() {
    json return_yNpRMoy=json({});
    return_yNpRMoy=[&]() {
    json return_hqzvfgh=json({});
    return serialize_uint64_t(name.sequencesCountOffset);}();return return_yNpRMoy;}();
result["members"]["sequencesIndexBuffer"]=[&]() {
    json return_pSpLbIW=json({});
    return serialize_VkBuffer(name.sequencesIndexBuffer);}();
result["members"]["sequencesIndexOffset"]=[&]() {
    json return_WrlGVYK=json({});
    return_WrlGVYK=[&]() {
    json return_fKHXRWM=json({});
    return serialize_uint64_t(name.sequencesIndexOffset);}();return return_WrlGVYK;}();
return result;}

    VkGeneratedCommandsInfoNV deserialize_VkGeneratedCommandsInfoNV(json name){
        auto result=VkGeneratedCommandsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
VkIndirectCommandsStreamNV* temp_BGHeHDQ;[&]() {

        if (name["members"]["pStreams"].contains("null")){
        temp_BGHeHDQ=NULL;
        }
    temp_BGHeHDQ=(VkIndirectCommandsStreamNV*)malloc(result.streamCount*sizeof(VkIndirectCommandsStreamNV));
        for (int AtccVQe=0; AtccVQe < result.streamCount; AtccVQe++){
            [&]() {
temp_BGHeHDQ[AtccVQe]=deserialize_VkIndirectCommandsStreamNV(name["members"]["pStreams"]["members"][AtccVQe]);}();;
        }
        }();result.pStreams=temp_BGHeHDQ;}();
[&]() {
result.sequencesCount=deserialize_uint32_t(name["members"]["sequencesCount"]);}();
[&]() {
result.preprocessBuffer=deserialize_VkBuffer(name["members"]["preprocessBuffer"]);}();
[&]() {
[&]() {
result.preprocessOffset=deserialize_uint64_t(name["members"]["preprocessOffset"]);}();}();
[&]() {
[&]() {
result.preprocessSize=deserialize_uint64_t(name["members"]["preprocessSize"]);}();}();
[&]() {
result.sequencesCountBuffer=deserialize_VkBuffer(name["members"]["sequencesCountBuffer"]);}();
[&]() {
[&]() {
result.sequencesCountOffset=deserialize_uint64_t(name["members"]["sequencesCountOffset"]);}();}();
[&]() {
result.sequencesIndexBuffer=deserialize_VkBuffer(name["members"]["sequencesIndexBuffer"]);}();
[&]() {
[&]() {
result.sequencesIndexOffset=deserialize_uint64_t(name["members"]["sequencesIndexOffset"]);}();}();
return result;}

    json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(VkGeneratedCommandsMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_uHlACGC=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_qHBNleX=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["maxSequencesCount"]=[&]() {
    json return_lqzQiNz=json({});
    return serialize_uint32_t(name.maxSequencesCount);}();
return result;}

    VkGeneratedCommandsMemoryRequirementsInfoNV deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(json name){
        auto result=VkGeneratedCommandsMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.maxSequencesCount=deserialize_uint32_t(name["members"]["maxSequencesCount"]);}();
return result;}

    json serialize_VkPipelineIndirectDeviceAddressInfoNV(VkPipelineIndirectDeviceAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_uHlACGC=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineIndirectDeviceAddressInfoNV deserialize_VkPipelineIndirectDeviceAddressInfoNV(json name){
        auto result=VkPipelineIndirectDeviceAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkBindPipelineIndirectCommandNV(VkBindPipelineIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pipelineAddress"]=[&]() {
    json return_FbbGSGi=json({});
    return_FbbGSGi=[&]() {
    json return_MJSmCsc=json({});
    return serialize_uint64_t(name.pipelineAddress);}();return return_FbbGSGi;}();
return result;}

    VkBindPipelineIndirectCommandNV deserialize_VkBindPipelineIndirectCommandNV(json name){
        auto result=VkBindPipelineIndirectCommandNV();
    
[&]() {
[&]() {
result.pipelineAddress=deserialize_uint64_t(name["members"]["pipelineAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2(VkPhysicalDeviceFeatures2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_yNbhakm=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2 deserialize_VkPhysicalDeviceFeatures2(json name){
        auto result=VkPhysicalDeviceFeatures2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2KHR(VkPhysicalDeviceFeatures2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_yNbhakm=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2KHR deserialize_VkPhysicalDeviceFeatures2KHR(json name){
        auto result=VkPhysicalDeviceFeatures2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2(VkPhysicalDeviceProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_mUMnzZc=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2 deserialize_VkPhysicalDeviceProperties2(json name){
        auto result=VkPhysicalDeviceProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2KHR(VkPhysicalDeviceProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_mUMnzZc=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2KHR deserialize_VkPhysicalDeviceProperties2KHR(json name){
        auto result=VkPhysicalDeviceProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkFormatProperties2(VkFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_AByoriW=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2 deserialize_VkFormatProperties2(json name){
        auto result=VkFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkFormatProperties2KHR(VkFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_AByoriW=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2KHR deserialize_VkFormatProperties2KHR(json name){
        auto result=VkFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2(VkImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_MLKDsIc=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2 deserialize_VkImageFormatProperties2(json name){
        auto result=VkImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2KHR(VkImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_MLKDsIc=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2KHR deserialize_VkImageFormatProperties2KHR(json name){
        auto result=VkImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2(VkPhysicalDeviceImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_FaDvniv=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_KpmOsXz=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_BsnDdAZ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2 deserialize_VkPhysicalDeviceImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2KHR(VkPhysicalDeviceImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_FaDvniv=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_KpmOsXz=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_BsnDdAZ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2KHR deserialize_VkPhysicalDeviceImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2(VkQueueFamilyProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_PqMINuh=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2 deserialize_VkQueueFamilyProperties2(json name){
        auto result=VkQueueFamilyProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2KHR(VkQueueFamilyProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_PqMINuh=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2KHR deserialize_VkQueueFamilyProperties2KHR(json name){
        auto result=VkQueueFamilyProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2(VkPhysicalDeviceMemoryProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_DCBLgdy=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2 deserialize_VkPhysicalDeviceMemoryProperties2(json name){
        auto result=VkPhysicalDeviceMemoryProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2KHR(VkPhysicalDeviceMemoryProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_DCBLgdy=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2KHR deserialize_VkPhysicalDeviceMemoryProperties2KHR(json name){
        auto result=VkPhysicalDeviceMemoryProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2(VkSparseImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_EZytzRE=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2 deserialize_VkSparseImageFormatProperties2(json name){
        auto result=VkSparseImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2KHR(VkSparseImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_EZytzRE=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2KHR deserialize_VkSparseImageFormatProperties2KHR(json name){
        auto result=VkSparseImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2(VkPhysicalDeviceSparseImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_FaDvniv=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_eHqYtWr=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_KpmOsXz=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2 deserialize_VkPhysicalDeviceSparseImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(VkPhysicalDeviceSparseImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_FaDvniv=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_eHqYtWr=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_KpmOsXz=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2KHR deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(VkPhysicalDevicePushDescriptorPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPushDescriptors"]=[&]() {
    json return_pOURnEG=json({});
    return serialize_uint32_t(name.maxPushDescriptors);}();
return result;}

    VkPhysicalDevicePushDescriptorPropertiesKHR deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(json name){
        auto result=VkPhysicalDevicePushDescriptorPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPushDescriptors=deserialize_uint32_t(name["members"]["maxPushDescriptors"]);}();
return result;}

    json serialize_VkConformanceVersion(VkConformanceVersion name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_cGLxBfP=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_ycSmYnL=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_sAimBXJ=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_WTkXVtb=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersion deserialize_VkConformanceVersion(json name){
        auto result=VkConformanceVersion();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkConformanceVersionKHR(VkConformanceVersionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_cGLxBfP=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_ycSmYnL=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_sAimBXJ=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_WTkXVtb=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersionKHR deserialize_VkConformanceVersionKHR(json name){
        auto result=VkConformanceVersionKHR();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverProperties(VkPhysicalDeviceDriverProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_gkeusYX=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_rxFKkQa=json({});
    
        return_rxFKkQa["members"]={};
        for(int rxFKkQa=0; rxFKkQa < VK_MAX_DRIVER_NAME_SIZE; rxFKkQa++){
            json temp;
            temp=[&]() {
    json return_bxOaYCw=json({});
    return serialize_char(name.driverName[rxFKkQa]);}();
            return_rxFKkQa["members"][std::to_string(rxFKkQa)].push_back(temp);
        }
        return return_rxFKkQa;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_kGgafYo=json({});
    
        return_kGgafYo["members"]={};
        for(int kGgafYo=0; kGgafYo < VK_MAX_DRIVER_INFO_SIZE; kGgafYo++){
            json temp;
            temp=[&]() {
    json return_vlUgzbl=json({});
    return serialize_char(name.driverInfo[kGgafYo]);}();
            return_kGgafYo["members"][std::to_string(kGgafYo)].push_back(temp);
        }
        return return_kGgafYo;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_UvZYVpT=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverProperties deserialize_VkPhysicalDeviceDriverProperties(json name){
        auto result=VkPhysicalDeviceDriverProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int SiMZOtb=0; SiMZOtb < VK_MAX_DRIVER_NAME_SIZE; SiMZOtb++){
            [&]() {
result.driverName[SiMZOtb]=deserialize_char(name["members"]["driverName"]["members"][SiMZOtb]);}();;
        }
        }();
[&]() {

        for (int ZwrzTjC=0; ZwrzTjC < VK_MAX_DRIVER_INFO_SIZE; ZwrzTjC++){
            [&]() {
result.driverInfo[ZwrzTjC]=deserialize_char(name["members"]["driverInfo"]["members"][ZwrzTjC]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverPropertiesKHR(VkPhysicalDeviceDriverPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_gkeusYX=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_rxFKkQa=json({});
    
        return_rxFKkQa["members"]={};
        for(int rxFKkQa=0; rxFKkQa < VK_MAX_DRIVER_NAME_SIZE; rxFKkQa++){
            json temp;
            temp=[&]() {
    json return_bxOaYCw=json({});
    return serialize_char(name.driverName[rxFKkQa]);}();
            return_rxFKkQa["members"][std::to_string(rxFKkQa)].push_back(temp);
        }
        return return_rxFKkQa;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_kGgafYo=json({});
    
        return_kGgafYo["members"]={};
        for(int kGgafYo=0; kGgafYo < VK_MAX_DRIVER_INFO_SIZE; kGgafYo++){
            json temp;
            temp=[&]() {
    json return_vlUgzbl=json({});
    return serialize_char(name.driverInfo[kGgafYo]);}();
            return_kGgafYo["members"][std::to_string(kGgafYo)].push_back(temp);
        }
        return return_kGgafYo;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_UvZYVpT=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverPropertiesKHR deserialize_VkPhysicalDeviceDriverPropertiesKHR(json name){
        auto result=VkPhysicalDeviceDriverPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int SiMZOtb=0; SiMZOtb < VK_MAX_DRIVER_NAME_SIZE; SiMZOtb++){
            [&]() {
result.driverName[SiMZOtb]=deserialize_char(name["members"]["driverName"]["members"][SiMZOtb]);}();;
        }
        }();
[&]() {

        for (int ZwrzTjC=0; ZwrzTjC < VK_MAX_DRIVER_INFO_SIZE; ZwrzTjC++){
            [&]() {
result.driverInfo[ZwrzTjC]=deserialize_char(name["members"]["driverInfo"]["members"][ZwrzTjC]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPresentRegionsKHR(VkPresentRegionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_eQuTgzd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pRegions"]=[&]() {
    json return_yKshMek=json({});
    
        if (name.pRegions==NULL){
            return_yKshMek["null"]=true;
            return return_yKshMek;
        }
        
        return_yKshMek["members"]={};
        for(int yKshMek=0; yKshMek < name.swapchainCount; yKshMek++){
            json temp;
            temp=[&]() {
    json return_WxbSYzY=json({});
    return serialize_VkPresentRegionKHR(name.pRegions[yKshMek]);}();
            return_yKshMek["members"][std::to_string(yKshMek)].push_back(temp);
        }
        return return_yKshMek;
        }();
return result;}

    VkPresentRegionsKHR deserialize_VkPresentRegionsKHR(json name){
        auto result=VkPresentRegionsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentRegionKHR* temp_hvuCJfj;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_hvuCJfj=NULL;
        }
    temp_hvuCJfj=(VkPresentRegionKHR*)malloc(result.swapchainCount*sizeof(VkPresentRegionKHR));
        for (int LOutlwm=0; LOutlwm < result.swapchainCount; LOutlwm++){
            [&]() {
temp_hvuCJfj[LOutlwm]=deserialize_VkPresentRegionKHR(name["members"]["pRegions"]["members"][LOutlwm]);}();;
        }
        }();result.pRegions=temp_hvuCJfj;}();
return result;}

    json serialize_VkPresentRegionKHR(VkPresentRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rectangleCount"]=[&]() {
    json return_TwwokNW=json({});
    return serialize_uint32_t(name.rectangleCount);}();
result["members"]["pRectangles"]=[&]() {
    json return_uucwqwg=json({});
    
        if (name.pRectangles==NULL){
            return_uucwqwg["null"]=true;
            return return_uucwqwg;
        }
        
        return_uucwqwg["members"]={};
        for(int uucwqwg=0; uucwqwg < name.rectangleCount; uucwqwg++){
            json temp;
            temp=[&]() {
    json return_JVzIywa=json({});
    return serialize_VkRectLayerKHR(name.pRectangles[uucwqwg]);}();
            return_uucwqwg["members"][std::to_string(uucwqwg)].push_back(temp);
        }
        return return_uucwqwg;
        }();
return result;}

    VkPresentRegionKHR deserialize_VkPresentRegionKHR(json name){
        auto result=VkPresentRegionKHR();
    
[&]() {
result.rectangleCount=deserialize_uint32_t(name["members"]["rectangleCount"]);}();
[&]() {
VkRectLayerKHR* temp_KznEaLh;[&]() {

        if (name["members"]["pRectangles"].contains("null")){
        temp_KznEaLh=NULL;
        }
    temp_KznEaLh=(VkRectLayerKHR*)malloc(result.rectangleCount*sizeof(VkRectLayerKHR));
        for (int wBqdcCe=0; wBqdcCe < result.rectangleCount; wBqdcCe++){
            [&]() {
temp_KznEaLh[wBqdcCe]=deserialize_VkRectLayerKHR(name["members"]["pRectangles"]["members"][wBqdcCe]);}();;
        }
        }();result.pRectangles=temp_KznEaLh;}();
return result;}

    json serialize_VkRectLayerKHR(VkRectLayerKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_tkEhuuX=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_xiSBWpQ=json({});
    return serialize_VkExtent2D(name.extent);}();
result["members"]["layer"]=[&]() {
    json return_OrfAWuH=json({});
    return serialize_uint32_t(name.layer);}();
return result;}

    VkRectLayerKHR deserialize_VkRectLayerKHR(json name){
        auto result=VkRectLayerKHR();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
[&]() {
result.layer=deserialize_uint32_t(name["members"]["layer"]);}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeatures(VkPhysicalDeviceVariablePointersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_WahdCjk=json({});
    return_WahdCjk=[&]() {
    json return_WFfpEhf=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_WahdCjk;}();
result["members"]["variablePointers"]=[&]() {
    json return_jiuqcKt=json({});
    return_jiuqcKt=[&]() {
    json return_ozIrqdy=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_jiuqcKt;}();
return result;}

    VkPhysicalDeviceVariablePointersFeatures deserialize_VkPhysicalDeviceVariablePointersFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(VkPhysicalDeviceVariablePointersFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_WahdCjk=json({});
    return_WahdCjk=[&]() {
    json return_WFfpEhf=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_WahdCjk;}();
result["members"]["variablePointers"]=[&]() {
    json return_jiuqcKt=json({});
    return_jiuqcKt=[&]() {
    json return_ozIrqdy=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_jiuqcKt;}();
return result;}

    VkPhysicalDeviceVariablePointersFeaturesKHR deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointersFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(VkPhysicalDeviceVariablePointerFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_WahdCjk=json({});
    return_WahdCjk=[&]() {
    json return_WFfpEhf=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_WahdCjk;}();
result["members"]["variablePointers"]=[&]() {
    json return_jiuqcKt=json({});
    return_jiuqcKt=[&]() {
    json return_ozIrqdy=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_jiuqcKt;}();
return result;}

    VkPhysicalDeviceVariablePointerFeaturesKHR deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointerFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeatures(VkPhysicalDeviceVariablePointerFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_WahdCjk=json({});
    return_WahdCjk=[&]() {
    json return_WFfpEhf=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_WahdCjk;}();
result["members"]["variablePointers"]=[&]() {
    json return_jiuqcKt=json({});
    return_jiuqcKt=[&]() {
    json return_ozIrqdy=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_jiuqcKt;}();
return result;}

    VkPhysicalDeviceVariablePointerFeatures deserialize_VkPhysicalDeviceVariablePointerFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointerFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkExternalMemoryProperties(VkExternalMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_vejTZfl=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_swnJKmN=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_eRaCGAX=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryProperties deserialize_VkExternalMemoryProperties(json name){
        auto result=VkExternalMemoryProperties();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryPropertiesKHR(VkExternalMemoryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_vejTZfl=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_swnJKmN=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_eRaCGAX=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryPropertiesKHR deserialize_VkExternalMemoryPropertiesKHR(json name){
        auto result=VkExternalMemoryPropertiesKHR();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfo(VkPhysicalDeviceExternalImageFormatInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfo deserialize_VkPhysicalDeviceExternalImageFormatInfo(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(VkPhysicalDeviceExternalImageFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfoKHR deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalImageFormatProperties(VkExternalImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_erMBeJB=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatProperties deserialize_VkExternalImageFormatProperties(json name){
        auto result=VkExternalImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesKHR(VkExternalImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_erMBeJB=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatPropertiesKHR deserialize_VkExternalImageFormatPropertiesKHR(json name){
        auto result=VkExternalImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfo(VkPhysicalDeviceExternalBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EoqOIVe=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_ehpSOyF=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfo deserialize_VkPhysicalDeviceExternalBufferInfo(json name){
        auto result=VkPhysicalDeviceExternalBufferInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfoKHR(VkPhysicalDeviceExternalBufferInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EoqOIVe=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_ehpSOyF=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfoKHR deserialize_VkPhysicalDeviceExternalBufferInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalBufferInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalBufferProperties(VkExternalBufferProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_erMBeJB=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferProperties deserialize_VkExternalBufferProperties(json name){
        auto result=VkExternalBufferProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalBufferPropertiesKHR(VkExternalBufferPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_erMBeJB=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferPropertiesKHR deserialize_VkExternalBufferPropertiesKHR(json name){
        auto result=VkExternalBufferPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceIDProperties(VkPhysicalDeviceIDProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_BhogTdF=json({});
    
        return_BhogTdF["members"]={};
        for(int BhogTdF=0; BhogTdF < VK_UUID_SIZE; BhogTdF++){
            json temp;
            temp=[&]() {
    json return_iKhwDKj=json({});
    return serialize_uint8_t(name.deviceUUID[BhogTdF]);}();
            return_BhogTdF["members"][std::to_string(BhogTdF)].push_back(temp);
        }
        return return_BhogTdF;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_WCNWjGh=json({});
    
        return_WCNWjGh["members"]={};
        for(int WCNWjGh=0; WCNWjGh < VK_UUID_SIZE; WCNWjGh++){
            json temp;
            temp=[&]() {
    json return_EasOAnT=json({});
    return serialize_uint8_t(name.driverUUID[WCNWjGh]);}();
            return_WCNWjGh["members"][std::to_string(WCNWjGh)].push_back(temp);
        }
        return return_WCNWjGh;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_aaYdeyA=json({});
    
        return_aaYdeyA["members"]={};
        for(int aaYdeyA=0; aaYdeyA < VK_LUID_SIZE; aaYdeyA++){
            json temp;
            temp=[&]() {
    json return_RWjocTy=json({});
    return serialize_uint8_t(name.deviceLUID[aaYdeyA]);}();
            return_aaYdeyA["members"][std::to_string(aaYdeyA)].push_back(temp);
        }
        return return_aaYdeyA;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_usdbPVD=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_wrhFliq=json({});
    return_wrhFliq=[&]() {
    json return_reFyAOI=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_wrhFliq;}();
return result;}

    VkPhysicalDeviceIDProperties deserialize_VkPhysicalDeviceIDProperties(json name){
        auto result=VkPhysicalDeviceIDProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int pTxlXFB=0; pTxlXFB < VK_UUID_SIZE; pTxlXFB++){
            [&]() {
result.deviceUUID[pTxlXFB]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][pTxlXFB]);}();;
        }
        }();
[&]() {

        for (int nSQmLOX=0; nSQmLOX < VK_UUID_SIZE; nSQmLOX++){
            [&]() {
result.driverUUID[nSQmLOX]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][nSQmLOX]);}();;
        }
        }();
[&]() {

        for (int QGpKsyK=0; QGpKsyK < VK_LUID_SIZE; QGpKsyK++){
            [&]() {
result.deviceLUID[QGpKsyK]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][QGpKsyK]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIDPropertiesKHR(VkPhysicalDeviceIDPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_BhogTdF=json({});
    
        return_BhogTdF["members"]={};
        for(int BhogTdF=0; BhogTdF < VK_UUID_SIZE; BhogTdF++){
            json temp;
            temp=[&]() {
    json return_iKhwDKj=json({});
    return serialize_uint8_t(name.deviceUUID[BhogTdF]);}();
            return_BhogTdF["members"][std::to_string(BhogTdF)].push_back(temp);
        }
        return return_BhogTdF;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_WCNWjGh=json({});
    
        return_WCNWjGh["members"]={};
        for(int WCNWjGh=0; WCNWjGh < VK_UUID_SIZE; WCNWjGh++){
            json temp;
            temp=[&]() {
    json return_EasOAnT=json({});
    return serialize_uint8_t(name.driverUUID[WCNWjGh]);}();
            return_WCNWjGh["members"][std::to_string(WCNWjGh)].push_back(temp);
        }
        return return_WCNWjGh;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_aaYdeyA=json({});
    
        return_aaYdeyA["members"]={};
        for(int aaYdeyA=0; aaYdeyA < VK_LUID_SIZE; aaYdeyA++){
            json temp;
            temp=[&]() {
    json return_RWjocTy=json({});
    return serialize_uint8_t(name.deviceLUID[aaYdeyA]);}();
            return_aaYdeyA["members"][std::to_string(aaYdeyA)].push_back(temp);
        }
        return return_aaYdeyA;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_usdbPVD=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_wrhFliq=json({});
    return_wrhFliq=[&]() {
    json return_reFyAOI=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_wrhFliq;}();
return result;}

    VkPhysicalDeviceIDPropertiesKHR deserialize_VkPhysicalDeviceIDPropertiesKHR(json name){
        auto result=VkPhysicalDeviceIDPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int pTxlXFB=0; pTxlXFB < VK_UUID_SIZE; pTxlXFB++){
            [&]() {
result.deviceUUID[pTxlXFB]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][pTxlXFB]);}();;
        }
        }();
[&]() {

        for (int nSQmLOX=0; nSQmLOX < VK_UUID_SIZE; nSQmLOX++){
            [&]() {
result.driverUUID[nSQmLOX]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][nSQmLOX]);}();;
        }
        }();
[&]() {

        for (int QGpKsyK=0; QGpKsyK < VK_LUID_SIZE; QGpKsyK++){
            [&]() {
result.deviceLUID[QGpKsyK]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][QGpKsyK]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfo(VkExternalMemoryImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_dTHlhuA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfo deserialize_VkExternalMemoryImageCreateInfo(json name){
        auto result=VkExternalMemoryImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoKHR(VkExternalMemoryImageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_dTHlhuA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoKHR deserialize_VkExternalMemoryImageCreateInfoKHR(json name){
        auto result=VkExternalMemoryImageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfo(VkExternalMemoryBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_dTHlhuA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfo deserialize_VkExternalMemoryBufferCreateInfo(json name){
        auto result=VkExternalMemoryBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfoKHR(VkExternalMemoryBufferCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_dTHlhuA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfoKHR deserialize_VkExternalMemoryBufferCreateInfoKHR(json name){
        auto result=VkExternalMemoryBufferCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfo(VkExportMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_dTHlhuA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfo deserialize_VkExportMemoryAllocateInfo(json name){
        auto result=VkExportMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoKHR(VkExportMemoryAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_dTHlhuA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoKHR deserialize_VkExportMemoryAllocateInfoKHR(json name){
        auto result=VkExportMemoryAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportMemoryFdInfoKHR(VkImportMemoryFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_PWzAygt=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportMemoryFdInfoKHR deserialize_VkImportMemoryFdInfoKHR(json name){
        auto result=VkImportMemoryFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkMemoryFdPropertiesKHR(VkMemoryFdPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_ySvCeAY=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryFdPropertiesKHR deserialize_VkMemoryFdPropertiesKHR(json name){
        auto result=VkMemoryFdPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkMemoryGetFdInfoKHR(VkMemoryGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetFdInfoKHR deserialize_VkMemoryGetFdInfoKHR(json name){
        auto result=VkMemoryGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfo(VkPhysicalDeviceExternalSemaphoreInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_cYDMGWq=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfo deserialize_VkPhysicalDeviceExternalSemaphoreInfo(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(VkPhysicalDeviceExternalSemaphoreInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_cYDMGWq=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfoKHR deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalSemaphoreProperties(VkExternalSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_DWHjPqy=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_JodLqgp=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_WGkBNPO=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphoreProperties deserialize_VkExternalSemaphoreProperties(json name){
        auto result=VkExternalSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExternalSemaphorePropertiesKHR(VkExternalSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_DWHjPqy=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_JodLqgp=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_WGkBNPO=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphorePropertiesKHR deserialize_VkExternalSemaphorePropertiesKHR(json name){
        auto result=VkExternalSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfo(VkExportSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_qkBQetj=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfo deserialize_VkExportSemaphoreCreateInfo(json name){
        auto result=VkExportSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfoKHR(VkExportSemaphoreCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_qkBQetj=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfoKHR deserialize_VkExportSemaphoreCreateInfoKHR(json name){
        auto result=VkExportSemaphoreCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportSemaphoreFdInfoKHR(VkImportSemaphoreFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_bjStxzc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["flags"]=[&]() {
    json return_BXqphdh=json({});
    return serialize_VkSemaphoreImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_cYDMGWq=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_PWzAygt=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportSemaphoreFdInfoKHR deserialize_VkImportSemaphoreFdInfoKHR(json name){
        auto result=VkImportSemaphoreFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.flags=deserialize_VkSemaphoreImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkSemaphoreGetFdInfoKHR(VkSemaphoreGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_bjStxzc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["handleType"]=[&]() {
    json return_cYDMGWq=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkSemaphoreGetFdInfoKHR deserialize_VkSemaphoreGetFdInfoKHR(json name){
        auto result=VkSemaphoreGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfo(VkPhysicalDeviceExternalFenceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_iUTAZvh=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfo deserialize_VkPhysicalDeviceExternalFenceInfo(json name){
        auto result=VkPhysicalDeviceExternalFenceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfoKHR(VkPhysicalDeviceExternalFenceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_iUTAZvh=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfoKHR deserialize_VkPhysicalDeviceExternalFenceInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalFenceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalFenceProperties(VkExternalFenceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_nKuTZCj=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_JoiucDU=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_SdrJvtP=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFenceProperties deserialize_VkExternalFenceProperties(json name){
        auto result=VkExternalFenceProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExternalFencePropertiesKHR(VkExternalFencePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_nKuTZCj=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_JoiucDU=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_SdrJvtP=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFencePropertiesKHR deserialize_VkExternalFencePropertiesKHR(json name){
        auto result=VkExternalFencePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExportFenceCreateInfo(VkExportFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_JhVfQpK=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfo deserialize_VkExportFenceCreateInfo(json name){
        auto result=VkExportFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportFenceCreateInfoKHR(VkExportFenceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_JhVfQpK=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfoKHR deserialize_VkExportFenceCreateInfoKHR(json name){
        auto result=VkExportFenceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportFenceFdInfoKHR(VkImportFenceFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_OcrQYHu=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["flags"]=[&]() {
    json return_ruKFBRV=json({});
    return serialize_VkFenceImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_iUTAZvh=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_PWzAygt=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportFenceFdInfoKHR deserialize_VkImportFenceFdInfoKHR(json name){
        auto result=VkImportFenceFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.flags=deserialize_VkFenceImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkFenceGetFdInfoKHR(VkFenceGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_OcrQYHu=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["handleType"]=[&]() {
    json return_iUTAZvh=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkFenceGetFdInfoKHR deserialize_VkFenceGetFdInfoKHR(json name){
        auto result=VkFenceGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeatures(VkPhysicalDeviceMultiviewFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_BbdyPfw=json({});
    return_BbdyPfw=[&]() {
    json return_qJpfllc=json({});
    return serialize_uint32_t(name.multiview);}();return return_BbdyPfw;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_WERbBQD=json({});
    return_WERbBQD=[&]() {
    json return_efCSlhF=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_WERbBQD;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_dQKCoEh=json({});
    return_dQKCoEh=[&]() {
    json return_MlYrrjY=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_dQKCoEh;}();
return result;}

    VkPhysicalDeviceMultiviewFeatures deserialize_VkPhysicalDeviceMultiviewFeatures(json name){
        auto result=VkPhysicalDeviceMultiviewFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeaturesKHR(VkPhysicalDeviceMultiviewFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_BbdyPfw=json({});
    return_BbdyPfw=[&]() {
    json return_qJpfllc=json({});
    return serialize_uint32_t(name.multiview);}();return return_BbdyPfw;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_WERbBQD=json({});
    return_WERbBQD=[&]() {
    json return_efCSlhF=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_WERbBQD;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_dQKCoEh=json({});
    return_dQKCoEh=[&]() {
    json return_MlYrrjY=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_dQKCoEh;}();
return result;}

    VkPhysicalDeviceMultiviewFeaturesKHR deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewProperties(VkPhysicalDeviceMultiviewProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_pXeKvAP=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_EBqmExb=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewProperties deserialize_VkPhysicalDeviceMultiviewProperties(json name){
        auto result=VkPhysicalDeviceMultiviewProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPropertiesKHR(VkPhysicalDeviceMultiviewPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_pXeKvAP=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_EBqmExb=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewPropertiesKHR deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfo(VkRenderPassMultiviewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_JpvufHk=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_GBsKSsK=json({});
    
        if (name.pViewMasks==NULL){
            return_GBsKSsK["null"]=true;
            return return_GBsKSsK;
        }
        
        return_GBsKSsK["members"]={};
        for(int GBsKSsK=0; GBsKSsK < name.subpassCount; GBsKSsK++){
            json temp;
            temp=[&]() {
    json return_EpxRWGB=json({});
    return serialize_uint32_t(name.pViewMasks[GBsKSsK]);}();
            return_GBsKSsK["members"][std::to_string(GBsKSsK)].push_back(temp);
        }
        return return_GBsKSsK;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_eUodTpK=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_OQFEoln=json({});
    
        if (name.pViewOffsets==NULL){
            return_OQFEoln["null"]=true;
            return return_OQFEoln;
        }
        
        return_OQFEoln["members"]={};
        for(int OQFEoln=0; OQFEoln < name.dependencyCount; OQFEoln++){
            json temp;
            temp=[&]() {
    json return_yzgPfGL=json({});
    return serialize_int32_t(name.pViewOffsets[OQFEoln]);}();
            return_OQFEoln["members"][std::to_string(OQFEoln)].push_back(temp);
        }
        return return_OQFEoln;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_udSpiYW=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_kyMdcej=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_kyMdcej["null"]=true;
            return return_kyMdcej;
        }
        
        return_kyMdcej["members"]={};
        for(int kyMdcej=0; kyMdcej < name.correlationMaskCount; kyMdcej++){
            json temp;
            temp=[&]() {
    json return_btDkdKZ=json({});
    return serialize_uint32_t(name.pCorrelationMasks[kyMdcej]);}();
            return_kyMdcej["members"][std::to_string(kyMdcej)].push_back(temp);
        }
        return return_kyMdcej;
        }();
return result;}

    VkRenderPassMultiviewCreateInfo deserialize_VkRenderPassMultiviewCreateInfo(json name){
        auto result=VkRenderPassMultiviewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_sxkwRQs;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_sxkwRQs=NULL;
        }
    temp_sxkwRQs=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int jUIASGR=0; jUIASGR < result.subpassCount; jUIASGR++){
            [&]() {
temp_sxkwRQs[jUIASGR]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][jUIASGR]);}();;
        }
        }();result.pViewMasks=temp_sxkwRQs;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_NUsOwqQ;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_NUsOwqQ=NULL;
        }
    temp_NUsOwqQ=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int xkxCyIi=0; xkxCyIi < result.dependencyCount; xkxCyIi++){
            [&]() {
temp_NUsOwqQ[xkxCyIi]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][xkxCyIi]);}();;
        }
        }();result.pViewOffsets=temp_NUsOwqQ;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_eADveqg;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_eADveqg=NULL;
        }
    temp_eADveqg=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int JTGvzOH=0; JTGvzOH < result.correlationMaskCount; JTGvzOH++){
            [&]() {
temp_eADveqg[JTGvzOH]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][JTGvzOH]);}();;
        }
        }();result.pCorrelationMasks=temp_eADveqg;}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfoKHR(VkRenderPassMultiviewCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_JpvufHk=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_GBsKSsK=json({});
    
        if (name.pViewMasks==NULL){
            return_GBsKSsK["null"]=true;
            return return_GBsKSsK;
        }
        
        return_GBsKSsK["members"]={};
        for(int GBsKSsK=0; GBsKSsK < name.subpassCount; GBsKSsK++){
            json temp;
            temp=[&]() {
    json return_EpxRWGB=json({});
    return serialize_uint32_t(name.pViewMasks[GBsKSsK]);}();
            return_GBsKSsK["members"][std::to_string(GBsKSsK)].push_back(temp);
        }
        return return_GBsKSsK;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_eUodTpK=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_OQFEoln=json({});
    
        if (name.pViewOffsets==NULL){
            return_OQFEoln["null"]=true;
            return return_OQFEoln;
        }
        
        return_OQFEoln["members"]={};
        for(int OQFEoln=0; OQFEoln < name.dependencyCount; OQFEoln++){
            json temp;
            temp=[&]() {
    json return_yzgPfGL=json({});
    return serialize_int32_t(name.pViewOffsets[OQFEoln]);}();
            return_OQFEoln["members"][std::to_string(OQFEoln)].push_back(temp);
        }
        return return_OQFEoln;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_udSpiYW=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_kyMdcej=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_kyMdcej["null"]=true;
            return return_kyMdcej;
        }
        
        return_kyMdcej["members"]={};
        for(int kyMdcej=0; kyMdcej < name.correlationMaskCount; kyMdcej++){
            json temp;
            temp=[&]() {
    json return_btDkdKZ=json({});
    return serialize_uint32_t(name.pCorrelationMasks[kyMdcej]);}();
            return_kyMdcej["members"][std::to_string(kyMdcej)].push_back(temp);
        }
        return return_kyMdcej;
        }();
return result;}

    VkRenderPassMultiviewCreateInfoKHR deserialize_VkRenderPassMultiviewCreateInfoKHR(json name){
        auto result=VkRenderPassMultiviewCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_sxkwRQs;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_sxkwRQs=NULL;
        }
    temp_sxkwRQs=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int jUIASGR=0; jUIASGR < result.subpassCount; jUIASGR++){
            [&]() {
temp_sxkwRQs[jUIASGR]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][jUIASGR]);}();;
        }
        }();result.pViewMasks=temp_sxkwRQs;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_NUsOwqQ;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_NUsOwqQ=NULL;
        }
    temp_NUsOwqQ=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int xkxCyIi=0; xkxCyIi < result.dependencyCount; xkxCyIi++){
            [&]() {
temp_NUsOwqQ[xkxCyIi]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][xkxCyIi]);}();;
        }
        }();result.pViewOffsets=temp_NUsOwqQ;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_eADveqg;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_eADveqg=NULL;
        }
    temp_eADveqg=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int JTGvzOH=0; JTGvzOH < result.correlationMaskCount; JTGvzOH++){
            [&]() {
temp_eADveqg[JTGvzOH]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][JTGvzOH]);}();;
        }
        }();result.pCorrelationMasks=temp_eADveqg;}();
return result;}

    json serialize_VkSurfaceCapabilities2EXT(VkSurfaceCapabilities2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImageCount"]=[&]() {
    json return_HLQkOwz=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_CWroTPY=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_VkCHapd=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_fMIdXLL=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_xXXKuYH=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_QBcMjjE=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_ZbrtQfW=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_EsdUhnB=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_HWUHXuh=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_JJVEgDR=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
result["members"]["supportedSurfaceCounters"]=[&]() {
    json return_PBHxyTi=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.supportedSurfaceCounters);}();
return result;}

    VkSurfaceCapabilities2EXT deserialize_VkSurfaceCapabilities2EXT(json name){
        auto result=VkSurfaceCapabilities2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
[&]() {
result.supportedSurfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["supportedSurfaceCounters"]);}();
return result;}

    json serialize_VkDisplayPowerInfoEXT(VkDisplayPowerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["powerState"]=[&]() {
    json return_fmAiwLC=json({});
    return serialize_VkDisplayPowerStateEXT(name.powerState);}();
return result;}

    VkDisplayPowerInfoEXT deserialize_VkDisplayPowerInfoEXT(json name){
        auto result=VkDisplayPowerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.powerState=deserialize_VkDisplayPowerStateEXT(name["members"]["powerState"]);}();
return result;}

    json serialize_VkDeviceEventInfoEXT(VkDeviceEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceEvent"]=[&]() {
    json return_OWUcmqv=json({});
    return serialize_VkDeviceEventTypeEXT(name.deviceEvent);}();
return result;}

    VkDeviceEventInfoEXT deserialize_VkDeviceEventInfoEXT(json name){
        auto result=VkDeviceEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceEvent=deserialize_VkDeviceEventTypeEXT(name["members"]["deviceEvent"]);}();
return result;}

    json serialize_VkDisplayEventInfoEXT(VkDisplayEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayEvent"]=[&]() {
    json return_lIXEWyf=json({});
    return serialize_VkDisplayEventTypeEXT(name.displayEvent);}();
return result;}

    VkDisplayEventInfoEXT deserialize_VkDisplayEventInfoEXT(json name){
        auto result=VkDisplayEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.displayEvent=deserialize_VkDisplayEventTypeEXT(name["members"]["displayEvent"]);}();
return result;}

    json serialize_VkSwapchainCounterCreateInfoEXT(VkSwapchainCounterCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCounters"]=[&]() {
    json return_gxWuuZn=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.surfaceCounters);}();
return result;}

    VkSwapchainCounterCreateInfoEXT deserialize_VkSwapchainCounterCreateInfoEXT(json name){
        auto result=VkSwapchainCounterCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.surfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["surfaceCounters"]);}();
return result;}

    json serialize_VkPhysicalDeviceGroupProperties(VkPhysicalDeviceGroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_yfFqZkF=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_gxmWPry=json({});
    
        return_gxmWPry["members"]={};
        for(int gxmWPry=0; gxmWPry < VK_MAX_DEVICE_GROUP_SIZE; gxmWPry++){
            json temp;
            temp=[&]() {
    json return_yYvLQYj=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[gxmWPry]);}();
            return_gxmWPry["members"][std::to_string(gxmWPry)].push_back(temp);
        }
        return return_gxmWPry;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_noVTGZa=json({});
    return_noVTGZa=[&]() {
    json return_SBdZplM=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_noVTGZa;}();
return result;}

    VkPhysicalDeviceGroupProperties deserialize_VkPhysicalDeviceGroupProperties(json name){
        auto result=VkPhysicalDeviceGroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int EYeeokg=0; EYeeokg < VK_MAX_DEVICE_GROUP_SIZE; EYeeokg++){
            [&]() {
result.physicalDevices[EYeeokg]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][EYeeokg]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGroupPropertiesKHR(VkPhysicalDeviceGroupPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_yfFqZkF=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_gxmWPry=json({});
    
        return_gxmWPry["members"]={};
        for(int gxmWPry=0; gxmWPry < VK_MAX_DEVICE_GROUP_SIZE; gxmWPry++){
            json temp;
            temp=[&]() {
    json return_yYvLQYj=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[gxmWPry]);}();
            return_gxmWPry["members"][std::to_string(gxmWPry)].push_back(temp);
        }
        return return_gxmWPry;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_noVTGZa=json({});
    return_noVTGZa=[&]() {
    json return_SBdZplM=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_noVTGZa;}();
return result;}

    VkPhysicalDeviceGroupPropertiesKHR deserialize_VkPhysicalDeviceGroupPropertiesKHR(json name){
        auto result=VkPhysicalDeviceGroupPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int EYeeokg=0; EYeeokg < VK_MAX_DEVICE_GROUP_SIZE; EYeeokg++){
            [&]() {
result.physicalDevices[EYeeokg]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][EYeeokg]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfo(VkMemoryAllocateFlagsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IcEMPNC=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfo deserialize_VkMemoryAllocateFlagsInfo(json name){
        auto result=VkMemoryAllocateFlagsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfoKHR(VkMemoryAllocateFlagsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IcEMPNC=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfoKHR deserialize_VkMemoryAllocateFlagsInfoKHR(json name){
        auto result=VkMemoryAllocateFlagsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkBindBufferMemoryInfo(VkBindBufferMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
return result;}

    VkBindBufferMemoryInfo deserialize_VkBindBufferMemoryInfo(json name){
        auto result=VkBindBufferMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryInfoKHR(VkBindBufferMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
return result;}

    VkBindBufferMemoryInfoKHR deserialize_VkBindBufferMemoryInfoKHR(json name){
        auto result=VkBindBufferMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfo(VkBindBufferMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_kcgOuWH=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_UyDBQLD=json({});
    
        if (name.pDeviceIndices==NULL){
            return_UyDBQLD["null"]=true;
            return return_UyDBQLD;
        }
        
        return_UyDBQLD["members"]={};
        for(int UyDBQLD=0; UyDBQLD < name.deviceIndexCount; UyDBQLD++){
            json temp;
            temp=[&]() {
    json return_XkMOnOS=json({});
    return serialize_uint32_t(name.pDeviceIndices[UyDBQLD]);}();
            return_UyDBQLD["members"][std::to_string(UyDBQLD)].push_back(temp);
        }
        return return_UyDBQLD;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfo deserialize_VkBindBufferMemoryDeviceGroupInfo(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_nIzIfmY;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_nIzIfmY=NULL;
        }
    temp_nIzIfmY=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int AAutYhu=0; AAutYhu < result.deviceIndexCount; AAutYhu++){
            [&]() {
temp_nIzIfmY[AAutYhu]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][AAutYhu]);}();;
        }
        }();result.pDeviceIndices=temp_nIzIfmY;}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfoKHR(VkBindBufferMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_kcgOuWH=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_UyDBQLD=json({});
    
        if (name.pDeviceIndices==NULL){
            return_UyDBQLD["null"]=true;
            return return_UyDBQLD;
        }
        
        return_UyDBQLD["members"]={};
        for(int UyDBQLD=0; UyDBQLD < name.deviceIndexCount; UyDBQLD++){
            json temp;
            temp=[&]() {
    json return_XkMOnOS=json({});
    return serialize_uint32_t(name.pDeviceIndices[UyDBQLD]);}();
            return_UyDBQLD["members"][std::to_string(UyDBQLD)].push_back(temp);
        }
        return return_UyDBQLD;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfoKHR deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_nIzIfmY;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_nIzIfmY=NULL;
        }
    temp_nIzIfmY=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int AAutYhu=0; AAutYhu < result.deviceIndexCount; AAutYhu++){
            [&]() {
temp_nIzIfmY[AAutYhu]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][AAutYhu]);}();;
        }
        }();result.pDeviceIndices=temp_nIzIfmY;}();
return result;}

    json serialize_VkBindImageMemoryInfo(VkBindImageMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
return result;}

    VkBindImageMemoryInfo deserialize_VkBindImageMemoryInfo(json name){
        auto result=VkBindImageMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryInfoKHR(VkBindImageMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
return result;}

    VkBindImageMemoryInfoKHR deserialize_VkBindImageMemoryInfoKHR(json name){
        auto result=VkBindImageMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfo(VkBindImageMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_kcgOuWH=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_UyDBQLD=json({});
    
        if (name.pDeviceIndices==NULL){
            return_UyDBQLD["null"]=true;
            return return_UyDBQLD;
        }
        
        return_UyDBQLD["members"]={};
        for(int UyDBQLD=0; UyDBQLD < name.deviceIndexCount; UyDBQLD++){
            json temp;
            temp=[&]() {
    json return_XkMOnOS=json({});
    return serialize_uint32_t(name.pDeviceIndices[UyDBQLD]);}();
            return_UyDBQLD["members"][std::to_string(UyDBQLD)].push_back(temp);
        }
        return return_UyDBQLD;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_DCBvrRh=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_XKCqAyk=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_XKCqAyk["null"]=true;
            return return_XKCqAyk;
        }
        
        return_XKCqAyk["members"]={};
        for(int XKCqAyk=0; XKCqAyk < name.splitInstanceBindRegionCount; XKCqAyk++){
            json temp;
            temp=[&]() {
    json return_VPzjzTD=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[XKCqAyk]);}();
            return_XKCqAyk["members"][std::to_string(XKCqAyk)].push_back(temp);
        }
        return return_XKCqAyk;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfo deserialize_VkBindImageMemoryDeviceGroupInfo(json name){
        auto result=VkBindImageMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_nIzIfmY;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_nIzIfmY=NULL;
        }
    temp_nIzIfmY=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int AAutYhu=0; AAutYhu < result.deviceIndexCount; AAutYhu++){
            [&]() {
temp_nIzIfmY[AAutYhu]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][AAutYhu]);}();;
        }
        }();result.pDeviceIndices=temp_nIzIfmY;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_HmXAkRg;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_HmXAkRg=NULL;
        }
    temp_HmXAkRg=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int AQEMQIe=0; AQEMQIe < result.splitInstanceBindRegionCount; AQEMQIe++){
            [&]() {
temp_HmXAkRg[AQEMQIe]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][AQEMQIe]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_HmXAkRg;}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfoKHR(VkBindImageMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_kcgOuWH=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_UyDBQLD=json({});
    
        if (name.pDeviceIndices==NULL){
            return_UyDBQLD["null"]=true;
            return return_UyDBQLD;
        }
        
        return_UyDBQLD["members"]={};
        for(int UyDBQLD=0; UyDBQLD < name.deviceIndexCount; UyDBQLD++){
            json temp;
            temp=[&]() {
    json return_XkMOnOS=json({});
    return serialize_uint32_t(name.pDeviceIndices[UyDBQLD]);}();
            return_UyDBQLD["members"][std::to_string(UyDBQLD)].push_back(temp);
        }
        return return_UyDBQLD;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_DCBvrRh=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_XKCqAyk=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_XKCqAyk["null"]=true;
            return return_XKCqAyk;
        }
        
        return_XKCqAyk["members"]={};
        for(int XKCqAyk=0; XKCqAyk < name.splitInstanceBindRegionCount; XKCqAyk++){
            json temp;
            temp=[&]() {
    json return_VPzjzTD=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[XKCqAyk]);}();
            return_XKCqAyk["members"][std::to_string(XKCqAyk)].push_back(temp);
        }
        return return_XKCqAyk;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfoKHR deserialize_VkBindImageMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindImageMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_nIzIfmY;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_nIzIfmY=NULL;
        }
    temp_nIzIfmY=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int AAutYhu=0; AAutYhu < result.deviceIndexCount; AAutYhu++){
            [&]() {
temp_nIzIfmY[AAutYhu]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][AAutYhu]);}();;
        }
        }();result.pDeviceIndices=temp_nIzIfmY;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_HmXAkRg;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_HmXAkRg=NULL;
        }
    temp_HmXAkRg=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int AQEMQIe=0; AQEMQIe < result.splitInstanceBindRegionCount; AQEMQIe++){
            [&]() {
temp_HmXAkRg[AQEMQIe]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][AQEMQIe]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_HmXAkRg;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfo(VkDeviceGroupRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_mqXxQyz=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_EDXcjSa=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_EDXcjSa["null"]=true;
            return return_EDXcjSa;
        }
        
        return_EDXcjSa["members"]={};
        for(int EDXcjSa=0; EDXcjSa < name.deviceRenderAreaCount; EDXcjSa++){
            json temp;
            temp=[&]() {
    json return_MQMziES=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[EDXcjSa]);}();
            return_EDXcjSa["members"][std::to_string(EDXcjSa)].push_back(temp);
        }
        return return_EDXcjSa;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfo deserialize_VkDeviceGroupRenderPassBeginInfo(json name){
        auto result=VkDeviceGroupRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_eUlIZrh;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_eUlIZrh=NULL;
        }
    temp_eUlIZrh=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int xwVBTwt=0; xwVBTwt < result.deviceRenderAreaCount; xwVBTwt++){
            [&]() {
temp_eUlIZrh[xwVBTwt]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][xwVBTwt]);}();;
        }
        }();result.pDeviceRenderAreas=temp_eUlIZrh;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfoKHR(VkDeviceGroupRenderPassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_mqXxQyz=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_EDXcjSa=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_EDXcjSa["null"]=true;
            return return_EDXcjSa;
        }
        
        return_EDXcjSa["members"]={};
        for(int EDXcjSa=0; EDXcjSa < name.deviceRenderAreaCount; EDXcjSa++){
            json temp;
            temp=[&]() {
    json return_MQMziES=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[EDXcjSa]);}();
            return_EDXcjSa["members"][std::to_string(EDXcjSa)].push_back(temp);
        }
        return return_EDXcjSa;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfoKHR deserialize_VkDeviceGroupRenderPassBeginInfoKHR(json name){
        auto result=VkDeviceGroupRenderPassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_eUlIZrh;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_eUlIZrh=NULL;
        }
    temp_eUlIZrh=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int xwVBTwt=0; xwVBTwt < result.deviceRenderAreaCount; xwVBTwt++){
            [&]() {
temp_eUlIZrh[xwVBTwt]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][xwVBTwt]);}();;
        }
        }();result.pDeviceRenderAreas=temp_eUlIZrh;}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfo(VkDeviceGroupCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfo deserialize_VkDeviceGroupCommandBufferBeginInfo(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfoKHR(VkDeviceGroupCommandBufferBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfoKHR deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupSubmitInfo(VkDeviceGroupSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_YnAXKTD=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_hIxXxOe=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_hIxXxOe["null"]=true;
            return return_hIxXxOe;
        }
        
        return_hIxXxOe["members"]={};
        for(int hIxXxOe=0; hIxXxOe < name.waitSemaphoreCount; hIxXxOe++){
            json temp;
            temp=[&]() {
    json return_hjoFvaQ=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[hIxXxOe]);}();
            return_hIxXxOe["members"][std::to_string(hIxXxOe)].push_back(temp);
        }
        return return_hIxXxOe;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_AaHHUKx=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_CNkUOjn=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_CNkUOjn["null"]=true;
            return return_CNkUOjn;
        }
        
        return_CNkUOjn["members"]={};
        for(int CNkUOjn=0; CNkUOjn < name.commandBufferCount; CNkUOjn++){
            json temp;
            temp=[&]() {
    json return_xPHfArh=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[CNkUOjn]);}();
            return_CNkUOjn["members"][std::to_string(CNkUOjn)].push_back(temp);
        }
        return return_CNkUOjn;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_erRBknT=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_GqtAiqk=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_GqtAiqk["null"]=true;
            return return_GqtAiqk;
        }
        
        return_GqtAiqk["members"]={};
        for(int GqtAiqk=0; GqtAiqk < name.signalSemaphoreCount; GqtAiqk++){
            json temp;
            temp=[&]() {
    json return_VzJfzbm=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[GqtAiqk]);}();
            return_GqtAiqk["members"][std::to_string(GqtAiqk)].push_back(temp);
        }
        return return_GqtAiqk;
        }();
return result;}

    VkDeviceGroupSubmitInfo deserialize_VkDeviceGroupSubmitInfo(json name){
        auto result=VkDeviceGroupSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_eWOpCki;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_eWOpCki=NULL;
        }
    temp_eWOpCki=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int YRlTqHT=0; YRlTqHT < result.waitSemaphoreCount; YRlTqHT++){
            [&]() {
temp_eWOpCki[YRlTqHT]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][YRlTqHT]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_eWOpCki;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_wPjNdOU;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_wPjNdOU=NULL;
        }
    temp_wPjNdOU=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int ePxODcS=0; ePxODcS < result.commandBufferCount; ePxODcS++){
            [&]() {
temp_wPjNdOU[ePxODcS]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][ePxODcS]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_wPjNdOU;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_DOhBqTt;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_DOhBqTt=NULL;
        }
    temp_DOhBqTt=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int SrzWEtX=0; SrzWEtX < result.signalSemaphoreCount; SrzWEtX++){
            [&]() {
temp_DOhBqTt[SrzWEtX]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][SrzWEtX]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_DOhBqTt;}();
return result;}

    json serialize_VkDeviceGroupSubmitInfoKHR(VkDeviceGroupSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_YnAXKTD=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_hIxXxOe=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_hIxXxOe["null"]=true;
            return return_hIxXxOe;
        }
        
        return_hIxXxOe["members"]={};
        for(int hIxXxOe=0; hIxXxOe < name.waitSemaphoreCount; hIxXxOe++){
            json temp;
            temp=[&]() {
    json return_hjoFvaQ=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[hIxXxOe]);}();
            return_hIxXxOe["members"][std::to_string(hIxXxOe)].push_back(temp);
        }
        return return_hIxXxOe;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_AaHHUKx=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_CNkUOjn=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_CNkUOjn["null"]=true;
            return return_CNkUOjn;
        }
        
        return_CNkUOjn["members"]={};
        for(int CNkUOjn=0; CNkUOjn < name.commandBufferCount; CNkUOjn++){
            json temp;
            temp=[&]() {
    json return_xPHfArh=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[CNkUOjn]);}();
            return_CNkUOjn["members"][std::to_string(CNkUOjn)].push_back(temp);
        }
        return return_CNkUOjn;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_erRBknT=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_GqtAiqk=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_GqtAiqk["null"]=true;
            return return_GqtAiqk;
        }
        
        return_GqtAiqk["members"]={};
        for(int GqtAiqk=0; GqtAiqk < name.signalSemaphoreCount; GqtAiqk++){
            json temp;
            temp=[&]() {
    json return_VzJfzbm=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[GqtAiqk]);}();
            return_GqtAiqk["members"][std::to_string(GqtAiqk)].push_back(temp);
        }
        return return_GqtAiqk;
        }();
return result;}

    VkDeviceGroupSubmitInfoKHR deserialize_VkDeviceGroupSubmitInfoKHR(json name){
        auto result=VkDeviceGroupSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_eWOpCki;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_eWOpCki=NULL;
        }
    temp_eWOpCki=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int YRlTqHT=0; YRlTqHT < result.waitSemaphoreCount; YRlTqHT++){
            [&]() {
temp_eWOpCki[YRlTqHT]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][YRlTqHT]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_eWOpCki;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_wPjNdOU;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_wPjNdOU=NULL;
        }
    temp_wPjNdOU=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int ePxODcS=0; ePxODcS < result.commandBufferCount; ePxODcS++){
            [&]() {
temp_wPjNdOU[ePxODcS]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][ePxODcS]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_wPjNdOU;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_DOhBqTt;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_DOhBqTt=NULL;
        }
    temp_DOhBqTt=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int SrzWEtX=0; SrzWEtX < result.signalSemaphoreCount; SrzWEtX++){
            [&]() {
temp_DOhBqTt[SrzWEtX]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][SrzWEtX]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_DOhBqTt;}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfo(VkDeviceGroupBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_NeGnlNg=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_xDolTcP=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfo deserialize_VkDeviceGroupBindSparseInfo(json name){
        auto result=VkDeviceGroupBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfoKHR(VkDeviceGroupBindSparseInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_NeGnlNg=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_xDolTcP=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfoKHR deserialize_VkDeviceGroupBindSparseInfoKHR(json name){
        auto result=VkDeviceGroupBindSparseInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupPresentCapabilitiesKHR(VkDeviceGroupPresentCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMask"]=[&]() {
    json return_NidxdnH=json({});
    
        return_NidxdnH["members"]={};
        for(int NidxdnH=0; NidxdnH < VK_MAX_DEVICE_GROUP_SIZE; NidxdnH++){
            json temp;
            temp=[&]() {
    json return_csFnbDm=json({});
    return serialize_uint32_t(name.presentMask[NidxdnH]);}();
            return_NidxdnH["members"][std::to_string(NidxdnH)].push_back(temp);
        }
        return return_NidxdnH;
        }();
result["members"]["modes"]=[&]() {
    json return_WSActLA=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupPresentCapabilitiesKHR deserialize_VkDeviceGroupPresentCapabilitiesKHR(json name){
        auto result=VkDeviceGroupPresentCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int aaGBaEA=0; aaGBaEA < VK_MAX_DEVICE_GROUP_SIZE; aaGBaEA++){
            [&]() {
result.presentMask[aaGBaEA]=deserialize_uint32_t(name["members"]["presentMask"]["members"][aaGBaEA]);}();;
        }
        }();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkImageSwapchainCreateInfoKHR(VkImageSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_UhgbclQ=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
return result;}

    VkImageSwapchainCreateInfoKHR deserialize_VkImageSwapchainCreateInfoKHR(json name){
        auto result=VkImageSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
return result;}

    json serialize_VkBindImageMemorySwapchainInfoKHR(VkBindImageMemorySwapchainInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_UhgbclQ=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndex"]=[&]() {
    json return_HsVmdlJ=json({});
    return serialize_uint32_t(name.imageIndex);}();
return result;}

    VkBindImageMemorySwapchainInfoKHR deserialize_VkBindImageMemorySwapchainInfoKHR(json name){
        auto result=VkBindImageMemorySwapchainInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndex=deserialize_uint32_t(name["members"]["imageIndex"]);}();
return result;}

    json serialize_VkAcquireNextImageInfoKHR(VkAcquireNextImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_UhgbclQ=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["timeout"]=[&]() {
    json return_wkQoHIN=json({});
    return serialize_uint64_t(name.timeout);}();
result["members"]["semaphore"]=[&]() {
    json return_bjStxzc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["fence"]=[&]() {
    json return_OcrQYHu=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkAcquireNextImageInfoKHR deserialize_VkAcquireNextImageInfoKHR(json name){
        auto result=VkAcquireNextImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupPresentInfoKHR(VkDeviceGroupPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_eQuTgzd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pDeviceMasks"]=[&]() {
    json return_xpmZMoa=json({});
    
        if (name.pDeviceMasks==NULL){
            return_xpmZMoa["null"]=true;
            return return_xpmZMoa;
        }
        
        return_xpmZMoa["members"]={};
        for(int xpmZMoa=0; xpmZMoa < name.swapchainCount; xpmZMoa++){
            json temp;
            temp=[&]() {
    json return_GPnKXIq=json({});
    return serialize_uint32_t(name.pDeviceMasks[xpmZMoa]);}();
            return_xpmZMoa["members"][std::to_string(xpmZMoa)].push_back(temp);
        }
        return return_xpmZMoa;
        }();
result["members"]["mode"]=[&]() {
    json return_tRggQPx=json({});
    return serialize_VkDeviceGroupPresentModeFlagBitsKHR(name.mode);}();
return result;}

    VkDeviceGroupPresentInfoKHR deserialize_VkDeviceGroupPresentInfoKHR(json name){
        auto result=VkDeviceGroupPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint32_t* temp_GGKEetg;[&]() {

        if (name["members"]["pDeviceMasks"].contains("null")){
        temp_GGKEetg=NULL;
        }
    temp_GGKEetg=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int HMTrAnF=0; HMTrAnF < result.swapchainCount; HMTrAnF++){
            [&]() {
temp_GGKEetg[HMTrAnF]=deserialize_uint32_t(name["members"]["pDeviceMasks"]["members"][HMTrAnF]);}();;
        }
        }();result.pDeviceMasks=temp_GGKEetg;}();
[&]() {
result.mode=deserialize_VkDeviceGroupPresentModeFlagBitsKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfo(VkDeviceGroupDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_yfFqZkF=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_QWMrcQI=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_QWMrcQI["null"]=true;
            return return_QWMrcQI;
        }
        
        return_QWMrcQI["members"]={};
        for(int QWMrcQI=0; QWMrcQI < name.physicalDeviceCount; QWMrcQI++){
            json temp;
            temp=[&]() {
    json return_TfbBLuH=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[QWMrcQI]);}();
            return_QWMrcQI["members"][std::to_string(QWMrcQI)].push_back(temp);
        }
        return return_QWMrcQI;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfo deserialize_VkDeviceGroupDeviceCreateInfo(json name){
        auto result=VkDeviceGroupDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_TqfDIeB;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_TqfDIeB=NULL;
        }
    temp_TqfDIeB=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int vrwErcE=0; vrwErcE < result.physicalDeviceCount; vrwErcE++){
            [&]() {
temp_TqfDIeB[vrwErcE]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][vrwErcE]);}();;
        }
        }();result.pPhysicalDevices=temp_TqfDIeB;}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfoKHR(VkDeviceGroupDeviceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_yfFqZkF=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_QWMrcQI=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_QWMrcQI["null"]=true;
            return return_QWMrcQI;
        }
        
        return_QWMrcQI["members"]={};
        for(int QWMrcQI=0; QWMrcQI < name.physicalDeviceCount; QWMrcQI++){
            json temp;
            temp=[&]() {
    json return_TfbBLuH=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[QWMrcQI]);}();
            return_QWMrcQI["members"][std::to_string(QWMrcQI)].push_back(temp);
        }
        return return_QWMrcQI;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfoKHR deserialize_VkDeviceGroupDeviceCreateInfoKHR(json name){
        auto result=VkDeviceGroupDeviceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_TqfDIeB;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_TqfDIeB=NULL;
        }
    temp_TqfDIeB=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int vrwErcE=0; vrwErcE < result.physicalDeviceCount; vrwErcE++){
            [&]() {
temp_TqfDIeB[vrwErcE]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][vrwErcE]);}();;
        }
        }();result.pPhysicalDevices=temp_TqfDIeB;}();
return result;}

    json serialize_VkDeviceGroupSwapchainCreateInfoKHR(VkDeviceGroupSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["modes"]=[&]() {
    json return_WSActLA=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupSwapchainCreateInfoKHR deserialize_VkDeviceGroupSwapchainCreateInfoKHR(json name){
        auto result=VkDeviceGroupSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntry(VkDescriptorUpdateTemplateEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_aOOcCVc=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_ZRUrPYV=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_djhXFXg=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_lEOhxWs=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_WGuFUww=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_UGcGsYJ=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntry deserialize_VkDescriptorUpdateTemplateEntry(json name){
        auto result=VkDescriptorUpdateTemplateEntry();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntryKHR(VkDescriptorUpdateTemplateEntryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_aOOcCVc=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_ZRUrPYV=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_djhXFXg=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_lEOhxWs=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_WGuFUww=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_UGcGsYJ=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntryKHR deserialize_VkDescriptorUpdateTemplateEntryKHR(json name){
        auto result=VkDescriptorUpdateTemplateEntryKHR();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfo(VkDescriptorUpdateTemplateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ZWrAeJh=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_BTztPHG=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_hMAZUgA=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_hMAZUgA["null"]=true;
            return return_hMAZUgA;
        }
        
        return_hMAZUgA["members"]={};
        for(int hMAZUgA=0; hMAZUgA < name.descriptorUpdateEntryCount; hMAZUgA++){
            json temp;
            temp=[&]() {
    json return_lrqPoTC=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[hMAZUgA]);}();
            return_hMAZUgA["members"][std::to_string(hMAZUgA)].push_back(temp);
        }
        return return_hMAZUgA;
        }();
result["members"]["templateType"]=[&]() {
    json return_PKamgra=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_WzTdeDA=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_cHuVRLC=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_wrsreDp=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfo deserialize_VkDescriptorUpdateTemplateCreateInfo(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_wNuhQCU;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_wNuhQCU=NULL;
        }
    temp_wNuhQCU=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int zabMUGm=0; zabMUGm < result.descriptorUpdateEntryCount; zabMUGm++){
            [&]() {
temp_wNuhQCU[zabMUGm]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][zabMUGm]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_wNuhQCU;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfoKHR(VkDescriptorUpdateTemplateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ZWrAeJh=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_BTztPHG=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_hMAZUgA=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_hMAZUgA["null"]=true;
            return return_hMAZUgA;
        }
        
        return_hMAZUgA["members"]={};
        for(int hMAZUgA=0; hMAZUgA < name.descriptorUpdateEntryCount; hMAZUgA++){
            json temp;
            temp=[&]() {
    json return_lrqPoTC=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[hMAZUgA]);}();
            return_hMAZUgA["members"][std::to_string(hMAZUgA)].push_back(temp);
        }
        return return_hMAZUgA;
        }();
result["members"]["templateType"]=[&]() {
    json return_PKamgra=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_WzTdeDA=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_cHuVRLC=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_wrsreDp=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfoKHR deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_wNuhQCU;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_wNuhQCU=NULL;
        }
    temp_wNuhQCU=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int zabMUGm=0; zabMUGm < result.descriptorUpdateEntryCount; zabMUGm++){
            [&]() {
temp_wNuhQCU[zabMUGm]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][zabMUGm]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_wNuhQCU;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkXYColorEXT(VkXYColorEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ftpUCfE=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_AMPASAz=json({});
    return serialize_float(name.y);}();
return result;}

    VkXYColorEXT deserialize_VkXYColorEXT(json name){
        auto result=VkXYColorEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkPhysicalDevicePresentIdFeaturesKHR(VkPhysicalDevicePresentIdFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentId"]=[&]() {
    json return_xqXVGdU=json({});
    return_xqXVGdU=[&]() {
    json return_gRraESr=json({});
    return serialize_uint32_t(name.presentId);}();return return_xqXVGdU;}();
return result;}

    VkPhysicalDevicePresentIdFeaturesKHR deserialize_VkPhysicalDevicePresentIdFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentIdFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentId=deserialize_uint32_t(name["members"]["presentId"]);}();}();
return result;}

    json serialize_VkPresentIdKHR(VkPresentIdKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_eQuTgzd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentIds"]=[&]() {
    json return_kGGSDYO=json({});
    
        if (name.pPresentIds==NULL){
            return_kGGSDYO["null"]=true;
            return return_kGGSDYO;
        }
        
        return_kGGSDYO["members"]={};
        for(int kGGSDYO=0; kGGSDYO < name.swapchainCount; kGGSDYO++){
            json temp;
            temp=[&]() {
    json return_ADLrgbV=json({});
    return serialize_uint64_t(name.pPresentIds[kGGSDYO]);}();
            return_kGGSDYO["members"][std::to_string(kGGSDYO)].push_back(temp);
        }
        return return_kGGSDYO;
        }();
return result;}

    VkPresentIdKHR deserialize_VkPresentIdKHR(json name){
        auto result=VkPresentIdKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint64_t* temp_yFBiNlk;[&]() {

        if (name["members"]["pPresentIds"].contains("null")){
        temp_yFBiNlk=NULL;
        }
    temp_yFBiNlk=(uint64_t*)malloc(result.swapchainCount*sizeof(uint64_t));
        for (int pjnAVAs=0; pjnAVAs < result.swapchainCount; pjnAVAs++){
            [&]() {
temp_yFBiNlk[pjnAVAs]=deserialize_uint64_t(name["members"]["pPresentIds"]["members"][pjnAVAs]);}();;
        }
        }();result.pPresentIds=temp_yFBiNlk;}();
return result;}

    json serialize_VkPhysicalDevicePresentWaitFeaturesKHR(VkPhysicalDevicePresentWaitFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentWait"]=[&]() {
    json return_mThtgnj=json({});
    return_mThtgnj=[&]() {
    json return_wDnXRgh=json({});
    return serialize_uint32_t(name.presentWait);}();return return_mThtgnj;}();
return result;}

    VkPhysicalDevicePresentWaitFeaturesKHR deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentWaitFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentWait=deserialize_uint32_t(name["members"]["presentWait"]);}();}();
return result;}

    json serialize_VkHdrMetadataEXT(VkHdrMetadataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPrimaryRed"]=[&]() {
    json return_fPNylWc=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryRed);}();
result["members"]["displayPrimaryGreen"]=[&]() {
    json return_CITlpBA=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryGreen);}();
result["members"]["displayPrimaryBlue"]=[&]() {
    json return_lnMOAHu=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryBlue);}();
result["members"]["whitePoint"]=[&]() {
    json return_Ntirbhz=json({});
    return serialize_VkXYColorEXT(name.whitePoint);}();
result["members"]["maxLuminance"]=[&]() {
    json return_inKHEwH=json({});
    return serialize_float(name.maxLuminance);}();
result["members"]["minLuminance"]=[&]() {
    json return_pdavDRj=json({});
    return serialize_float(name.minLuminance);}();
result["members"]["maxContentLightLevel"]=[&]() {
    json return_BPJgKoT=json({});
    return serialize_float(name.maxContentLightLevel);}();
result["members"]["maxFrameAverageLightLevel"]=[&]() {
    json return_GoBrwzX=json({});
    return serialize_float(name.maxFrameAverageLightLevel);}();
return result;}

    VkHdrMetadataEXT deserialize_VkHdrMetadataEXT(json name){
        auto result=VkHdrMetadataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.displayPrimaryRed=deserialize_VkXYColorEXT(name["members"]["displayPrimaryRed"]);}();
[&]() {
result.displayPrimaryGreen=deserialize_VkXYColorEXT(name["members"]["displayPrimaryGreen"]);}();
[&]() {
result.displayPrimaryBlue=deserialize_VkXYColorEXT(name["members"]["displayPrimaryBlue"]);}();
[&]() {
result.whitePoint=deserialize_VkXYColorEXT(name["members"]["whitePoint"]);}();
[&]() {
result.maxLuminance=deserialize_float(name["members"]["maxLuminance"]);}();
[&]() {
result.minLuminance=deserialize_float(name["members"]["minLuminance"]);}();
[&]() {
result.maxContentLightLevel=deserialize_float(name["members"]["maxContentLightLevel"]);}();
[&]() {
result.maxFrameAverageLightLevel=deserialize_float(name["members"]["maxFrameAverageLightLevel"]);}();
return result;}

    json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkDisplayNativeHdrSurfaceCapabilitiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingSupport"]=[&]() {
    json return_MkYxLyH=json({});
    return_MkYxLyH=[&]() {
    json return_ThlqhoQ=json({});
    return serialize_uint32_t(name.localDimmingSupport);}();return return_MkYxLyH;}();
return result;}

    VkDisplayNativeHdrSurfaceCapabilitiesAMD deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(json name){
        auto result=VkDisplayNativeHdrSurfaceCapabilitiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.localDimmingSupport=deserialize_uint32_t(name["members"]["localDimmingSupport"]);}();}();
return result;}

    json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(VkSwapchainDisplayNativeHdrCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingEnable"]=[&]() {
    json return_eaEvufu=json({});
    return_eaEvufu=[&]() {
    json return_SvQNatP=json({});
    return serialize_uint32_t(name.localDimmingEnable);}();return return_eaEvufu;}();
return result;}

    VkSwapchainDisplayNativeHdrCreateInfoAMD deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(json name){
        auto result=VkSwapchainDisplayNativeHdrCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.localDimmingEnable=deserialize_uint32_t(name["members"]["localDimmingEnable"]);}();}();
return result;}

    json serialize_VkRefreshCycleDurationGOOGLE(VkRefreshCycleDurationGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["refreshDuration"]=[&]() {
    json return_lVRecdQ=json({});
    return serialize_uint64_t(name.refreshDuration);}();
return result;}

    VkRefreshCycleDurationGOOGLE deserialize_VkRefreshCycleDurationGOOGLE(json name){
        auto result=VkRefreshCycleDurationGOOGLE();
    
[&]() {
result.refreshDuration=deserialize_uint64_t(name["members"]["refreshDuration"]);}();
return result;}

    json serialize_VkPastPresentationTimingGOOGLE(VkPastPresentationTimingGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_ZuwqPma=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_RoVRSLq=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
result["members"]["actualPresentTime"]=[&]() {
    json return_RUGASUq=json({});
    return serialize_uint64_t(name.actualPresentTime);}();
result["members"]["earliestPresentTime"]=[&]() {
    json return_NUOKfPO=json({});
    return serialize_uint64_t(name.earliestPresentTime);}();
result["members"]["presentMargin"]=[&]() {
    json return_nIAgaOn=json({});
    return serialize_uint64_t(name.presentMargin);}();
return result;}

    VkPastPresentationTimingGOOGLE deserialize_VkPastPresentationTimingGOOGLE(json name){
        auto result=VkPastPresentationTimingGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
[&]() {
result.actualPresentTime=deserialize_uint64_t(name["members"]["actualPresentTime"]);}();
[&]() {
result.earliestPresentTime=deserialize_uint64_t(name["members"]["earliestPresentTime"]);}();
[&]() {
result.presentMargin=deserialize_uint64_t(name["members"]["presentMargin"]);}();
return result;}

    json serialize_VkPresentTimesInfoGOOGLE(VkPresentTimesInfoGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_eQuTgzd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pTimes"]=[&]() {
    json return_RItSSmG=json({});
    
        if (name.pTimes==NULL){
            return_RItSSmG["null"]=true;
            return return_RItSSmG;
        }
        
        return_RItSSmG["members"]={};
        for(int RItSSmG=0; RItSSmG < name.swapchainCount; RItSSmG++){
            json temp;
            temp=[&]() {
    json return_IEzgFUX=json({});
    return serialize_VkPresentTimeGOOGLE(name.pTimes[RItSSmG]);}();
            return_RItSSmG["members"][std::to_string(RItSSmG)].push_back(temp);
        }
        return return_RItSSmG;
        }();
return result;}

    VkPresentTimesInfoGOOGLE deserialize_VkPresentTimesInfoGOOGLE(json name){
        auto result=VkPresentTimesInfoGOOGLE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentTimeGOOGLE* temp_RwUEPnn;[&]() {

        if (name["members"]["pTimes"].contains("null")){
        temp_RwUEPnn=NULL;
        }
    temp_RwUEPnn=(VkPresentTimeGOOGLE*)malloc(result.swapchainCount*sizeof(VkPresentTimeGOOGLE));
        for (int TWZmPBh=0; TWZmPBh < result.swapchainCount; TWZmPBh++){
            [&]() {
temp_RwUEPnn[TWZmPBh]=deserialize_VkPresentTimeGOOGLE(name["members"]["pTimes"]["members"][TWZmPBh]);}();;
        }
        }();result.pTimes=temp_RwUEPnn;}();
return result;}

    json serialize_VkPresentTimeGOOGLE(VkPresentTimeGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_ZuwqPma=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_RoVRSLq=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
return result;}

    VkPresentTimeGOOGLE deserialize_VkPresentTimeGOOGLE(json name){
        auto result=VkPresentTimeGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
return result;}

    json serialize_VkViewportWScalingNV(VkViewportWScalingNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["xcoeff"]=[&]() {
    json return_HUfPKmG=json({});
    return serialize_float(name.xcoeff);}();
result["members"]["ycoeff"]=[&]() {
    json return_vrqeACF=json({});
    return serialize_float(name.ycoeff);}();
return result;}

    VkViewportWScalingNV deserialize_VkViewportWScalingNV(json name){
        auto result=VkViewportWScalingNV();
    
[&]() {
result.xcoeff=deserialize_float(name["members"]["xcoeff"]);}();
[&]() {
result.ycoeff=deserialize_float(name["members"]["ycoeff"]);}();
return result;}

    json serialize_VkPipelineViewportWScalingStateCreateInfoNV(VkPipelineViewportWScalingStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportWScalingEnable"]=[&]() {
    json return_drcQEjn=json({});
    return_drcQEjn=[&]() {
    json return_FPQDqUy=json({});
    return serialize_uint32_t(name.viewportWScalingEnable);}();return return_drcQEjn;}();
result["members"]["viewportCount"]=[&]() {
    json return_ngXLoMy=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportWScalings"]=[&]() {
    json return_HWzttro=json({});
    
        if (name.pViewportWScalings==NULL){
            return_HWzttro["null"]=true;
            return return_HWzttro;
        }
        
        return_HWzttro["members"]={};
        for(int HWzttro=0; HWzttro < name.viewportCount; HWzttro++){
            json temp;
            temp=[&]() {
    json return_ensxykd=json({});
    return serialize_VkViewportWScalingNV(name.pViewportWScalings[HWzttro]);}();
            return_HWzttro["members"][std::to_string(HWzttro)].push_back(temp);
        }
        return return_HWzttro;
        }();
return result;}

    VkPipelineViewportWScalingStateCreateInfoNV deserialize_VkPipelineViewportWScalingStateCreateInfoNV(json name){
        auto result=VkPipelineViewportWScalingStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.viewportWScalingEnable=deserialize_uint32_t(name["members"]["viewportWScalingEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportWScalingNV* temp_JjDXPAF;[&]() {

        if (name["members"]["pViewportWScalings"].contains("null")){
        temp_JjDXPAF=NULL;
        }
    temp_JjDXPAF=(VkViewportWScalingNV*)malloc(result.viewportCount*sizeof(VkViewportWScalingNV));
        for (int guQfmtK=0; guQfmtK < result.viewportCount; guQfmtK++){
            [&]() {
temp_JjDXPAF[guQfmtK]=deserialize_VkViewportWScalingNV(name["members"]["pViewportWScalings"]["members"][guQfmtK]);}();;
        }
        }();result.pViewportWScalings=temp_JjDXPAF;}();
return result;}

    json serialize_VkViewportSwizzleNV(VkViewportSwizzleNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_QcuNzJl=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.x);}();
result["members"]["y"]=[&]() {
    json return_ZOMThAi=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.y);}();
result["members"]["z"]=[&]() {
    json return_rkupqjA=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.z);}();
result["members"]["w"]=[&]() {
    json return_tVaXEEv=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.w);}();
return result;}

    VkViewportSwizzleNV deserialize_VkViewportSwizzleNV(json name){
        auto result=VkViewportSwizzleNV();
    
[&]() {
result.x=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["x"]);}();
[&]() {
result.y=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["y"]);}();
[&]() {
result.z=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["z"]);}();
[&]() {
result.w=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["w"]);}();
return result;}

    json serialize_VkPipelineViewportSwizzleStateCreateInfoNV(VkPipelineViewportSwizzleStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PVzIPxc=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_ngXLoMy=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportSwizzles"]=[&]() {
    json return_MHSZlJK=json({});
    
        if (name.pViewportSwizzles==NULL){
            return_MHSZlJK["null"]=true;
            return return_MHSZlJK;
        }
        
        return_MHSZlJK["members"]={};
        for(int MHSZlJK=0; MHSZlJK < name.viewportCount; MHSZlJK++){
            json temp;
            temp=[&]() {
    json return_bXiYbHN=json({});
    return serialize_VkViewportSwizzleNV(name.pViewportSwizzles[MHSZlJK]);}();
            return_MHSZlJK["members"][std::to_string(MHSZlJK)].push_back(temp);
        }
        return return_MHSZlJK;
        }();
return result;}

    VkPipelineViewportSwizzleStateCreateInfoNV deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(json name){
        auto result=VkPipelineViewportSwizzleStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportSwizzleNV* temp_EsGdFZp;[&]() {

        if (name["members"]["pViewportSwizzles"].contains("null")){
        temp_EsGdFZp=NULL;
        }
    temp_EsGdFZp=(VkViewportSwizzleNV*)malloc(result.viewportCount*sizeof(VkViewportSwizzleNV));
        for (int zxHTPQh=0; zxHTPQh < result.viewportCount; zxHTPQh++){
            [&]() {
temp_EsGdFZp[zxHTPQh]=deserialize_VkViewportSwizzleNV(name["members"]["pViewportSwizzles"]["members"][zxHTPQh]);}();;
        }
        }();result.pViewportSwizzles=temp_EsGdFZp;}();
return result;}

    json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkPhysicalDeviceDiscardRectanglePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDiscardRectangles"]=[&]() {
    json return_xdIVUoP=json({});
    return serialize_uint32_t(name.maxDiscardRectangles);}();
return result;}

    VkPhysicalDeviceDiscardRectanglePropertiesEXT deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(json name){
        auto result=VkPhysicalDeviceDiscardRectanglePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDiscardRectangles=deserialize_uint32_t(name["members"]["maxDiscardRectangles"]);}();
return result;}

    json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(VkPipelineDiscardRectangleStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GkfMtFF=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name.flags);}();
result["members"]["discardRectangleMode"]=[&]() {
    json return_seOeemd=json({});
    return serialize_VkDiscardRectangleModeEXT(name.discardRectangleMode);}();
result["members"]["discardRectangleCount"]=[&]() {
    json return_xgytFIB=json({});
    return serialize_uint32_t(name.discardRectangleCount);}();
result["members"]["pDiscardRectangles"]=[&]() {
    json return_oFuopoZ=json({});
    
        if (name.pDiscardRectangles==NULL){
            return_oFuopoZ["null"]=true;
            return return_oFuopoZ;
        }
        
        return_oFuopoZ["members"]={};
        for(int oFuopoZ=0; oFuopoZ < name.discardRectangleCount; oFuopoZ++){
            json temp;
            temp=[&]() {
    json return_WXqmodK=json({});
    return serialize_VkRect2D(name.pDiscardRectangles[oFuopoZ]);}();
            return_oFuopoZ["members"][std::to_string(oFuopoZ)].push_back(temp);
        }
        return return_oFuopoZ;
        }();
return result;}

    VkPipelineDiscardRectangleStateCreateInfoEXT deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(json name){
        auto result=VkPipelineDiscardRectangleStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.discardRectangleMode=deserialize_VkDiscardRectangleModeEXT(name["members"]["discardRectangleMode"]);}();
[&]() {
result.discardRectangleCount=deserialize_uint32_t(name["members"]["discardRectangleCount"]);}();
[&]() {
VkRect2D* temp_mcZXyWz;[&]() {

        if (name["members"]["pDiscardRectangles"].contains("null")){
        temp_mcZXyWz=NULL;
        }
    temp_mcZXyWz=(VkRect2D*)malloc(result.discardRectangleCount*sizeof(VkRect2D));
        for (int VjzrhyT=0; VjzrhyT < result.discardRectangleCount; VjzrhyT++){
            [&]() {
temp_mcZXyWz[VjzrhyT]=deserialize_VkRect2D(name["members"]["pDiscardRectangles"]["members"][VjzrhyT]);}();;
        }
        }();result.pDiscardRectangles=temp_mcZXyWz;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewPositionAllComponents"]=[&]() {
    json return_PIjkduH=json({});
    return_PIjkduH=[&]() {
    json return_hqaPppg=json({});
    return serialize_uint32_t(name.perViewPositionAllComponents);}();return return_PIjkduH;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.perViewPositionAllComponents=deserialize_uint32_t(name["members"]["perViewPositionAllComponents"]);}();}();
return result;}

    json serialize_VkInputAttachmentAspectReference(VkInputAttachmentAspectReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_XDZzjUX=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_lCiHqUb=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReference deserialize_VkInputAttachmentAspectReference(json name){
        auto result=VkInputAttachmentAspectReference();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkInputAttachmentAspectReferenceKHR(VkInputAttachmentAspectReferenceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_XDZzjUX=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_lCiHqUb=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReferenceKHR deserialize_VkInputAttachmentAspectReferenceKHR(json name){
        auto result=VkInputAttachmentAspectReferenceKHR();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfo(VkRenderPassInputAttachmentAspectCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_OFwGmLT=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_FoYIAlR=json({});
    
        if (name.pAspectReferences==NULL){
            return_FoYIAlR["null"]=true;
            return return_FoYIAlR;
        }
        
        return_FoYIAlR["members"]={};
        for(int FoYIAlR=0; FoYIAlR < name.aspectReferenceCount; FoYIAlR++){
            json temp;
            temp=[&]() {
    json return_mmfDpAp=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[FoYIAlR]);}();
            return_FoYIAlR["members"][std::to_string(FoYIAlR)].push_back(temp);
        }
        return return_FoYIAlR;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfo deserialize_VkRenderPassInputAttachmentAspectCreateInfo(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_OipdYFl;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_OipdYFl=NULL;
        }
    temp_OipdYFl=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int ZPEOdrq=0; ZPEOdrq < result.aspectReferenceCount; ZPEOdrq++){
            [&]() {
temp_OipdYFl[ZPEOdrq]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][ZPEOdrq]);}();;
        }
        }();result.pAspectReferences=temp_OipdYFl;}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(VkRenderPassInputAttachmentAspectCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_OFwGmLT=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_FoYIAlR=json({});
    
        if (name.pAspectReferences==NULL){
            return_FoYIAlR["null"]=true;
            return return_FoYIAlR;
        }
        
        return_FoYIAlR["members"]={};
        for(int FoYIAlR=0; FoYIAlR < name.aspectReferenceCount; FoYIAlR++){
            json temp;
            temp=[&]() {
    json return_mmfDpAp=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[FoYIAlR]);}();
            return_FoYIAlR["members"][std::to_string(FoYIAlR)].push_back(temp);
        }
        return return_FoYIAlR;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfoKHR deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_OipdYFl;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_OipdYFl=NULL;
        }
    temp_OipdYFl=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int ZPEOdrq=0; ZPEOdrq < result.aspectReferenceCount; ZPEOdrq++){
            [&]() {
temp_OipdYFl[ZPEOdrq]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][ZPEOdrq]);}();;
        }
        }();result.pAspectReferences=temp_OipdYFl;}();
return result;}

    json serialize_VkPhysicalDeviceSurfaceInfo2KHR(VkPhysicalDeviceSurfaceInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surface"]=[&]() {
    json return_fQJSPuz=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
return result;}

    VkPhysicalDeviceSurfaceInfo2KHR deserialize_VkPhysicalDeviceSurfaceInfo2KHR(json name){
        auto result=VkPhysicalDeviceSurfaceInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
return result;}

    json serialize_VkSurfaceCapabilities2KHR(VkSurfaceCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCapabilities"]=[&]() {
    json return_hLIaHXN=json({});
    return serialize_VkSurfaceCapabilitiesKHR(name.surfaceCapabilities);}();
return result;}

    VkSurfaceCapabilities2KHR deserialize_VkSurfaceCapabilities2KHR(json name){
        auto result=VkSurfaceCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceCapabilities=deserialize_VkSurfaceCapabilitiesKHR(name["members"]["surfaceCapabilities"]);}();
return result;}

    json serialize_VkSurfaceFormat2KHR(VkSurfaceFormat2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceFormat"]=[&]() {
    json return_nRQRNBL=json({});
    return serialize_VkSurfaceFormatKHR(name.surfaceFormat);}();
return result;}

    VkSurfaceFormat2KHR deserialize_VkSurfaceFormat2KHR(json name){
        auto result=VkSurfaceFormat2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceFormat=deserialize_VkSurfaceFormatKHR(name["members"]["surfaceFormat"]);}();
return result;}

    json serialize_VkDisplayProperties2KHR(VkDisplayProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayProperties"]=[&]() {
    json return_vMXJsdi=json({});
    return serialize_VkDisplayPropertiesKHR(name.displayProperties);}();
return result;}

    VkDisplayProperties2KHR deserialize_VkDisplayProperties2KHR(json name){
        auto result=VkDisplayProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayProperties=deserialize_VkDisplayPropertiesKHR(name["members"]["displayProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneProperties2KHR(VkDisplayPlaneProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPlaneProperties"]=[&]() {
    json return_qPdsMQK=json({});
    return serialize_VkDisplayPlanePropertiesKHR(name.displayPlaneProperties);}();
return result;}

    VkDisplayPlaneProperties2KHR deserialize_VkDisplayPlaneProperties2KHR(json name){
        auto result=VkDisplayPlaneProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayPlaneProperties=deserialize_VkDisplayPlanePropertiesKHR(name["members"]["displayPlaneProperties"]);}();
return result;}

    json serialize_VkDisplayModeProperties2KHR(VkDisplayModeProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayModeProperties"]=[&]() {
    json return_NZEAGkr=json({});
    return serialize_VkDisplayModePropertiesKHR(name.displayModeProperties);}();
return result;}

    VkDisplayModeProperties2KHR deserialize_VkDisplayModeProperties2KHR(json name){
        auto result=VkDisplayModeProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayModeProperties=deserialize_VkDisplayModePropertiesKHR(name["members"]["displayModeProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneInfo2KHR(VkDisplayPlaneInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_SHrpYhA=json({});
    return serialize_VkDisplayModeKHR(name.mode);}();
result["members"]["planeIndex"]=[&]() {
    json return_prRxQaT=json({});
    return serialize_uint32_t(name.planeIndex);}();
return result;}

    VkDisplayPlaneInfo2KHR deserialize_VkDisplayPlaneInfo2KHR(json name){
        auto result=VkDisplayPlaneInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.mode=deserialize_VkDisplayModeKHR(name["members"]["mode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilities2KHR(VkDisplayPlaneCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["capabilities"]=[&]() {
    json return_bfsBTlb=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(name.capabilities);}();
return result;}

    VkDisplayPlaneCapabilities2KHR deserialize_VkDisplayPlaneCapabilities2KHR(json name){
        auto result=VkDisplayPlaneCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.capabilities=deserialize_VkDisplayPlaneCapabilitiesKHR(name["members"]["capabilities"]);}();
return result;}

    json serialize_VkSharedPresentSurfaceCapabilitiesKHR(VkSharedPresentSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sharedPresentSupportedUsageFlags"]=[&]() {
    json return_HdMGfun=json({});
    return serialize_VkImageUsageFlags(name.sharedPresentSupportedUsageFlags);}();
return result;}

    VkSharedPresentSurfaceCapabilitiesKHR deserialize_VkSharedPresentSurfaceCapabilitiesKHR(json name){
        auto result=VkSharedPresentSurfaceCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sharedPresentSupportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["sharedPresentSupportedUsageFlags"]);}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeatures(VkPhysicalDevice16BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_zrjxQmG=json({});
    return_zrjxQmG=[&]() {
    json return_KCUIVjy=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_zrjxQmG;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_NlpeZAK=json({});
    return_NlpeZAK=[&]() {
    json return_xlGkdXu=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_NlpeZAK;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_EJOemyY=json({});
    return_EJOemyY=[&]() {
    json return_osXxXiZ=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_EJOemyY;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_iepRkPV=json({});
    return_iepRkPV=[&]() {
    json return_GScRciz=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_iepRkPV;}();
return result;}

    VkPhysicalDevice16BitStorageFeatures deserialize_VkPhysicalDevice16BitStorageFeatures(json name){
        auto result=VkPhysicalDevice16BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeaturesKHR(VkPhysicalDevice16BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_zrjxQmG=json({});
    return_zrjxQmG=[&]() {
    json return_KCUIVjy=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_zrjxQmG;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_NlpeZAK=json({});
    return_NlpeZAK=[&]() {
    json return_xlGkdXu=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_NlpeZAK;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_EJOemyY=json({});
    return_EJOemyY=[&]() {
    json return_osXxXiZ=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_EJOemyY;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_iepRkPV=json({});
    return_iepRkPV=[&]() {
    json return_GScRciz=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_iepRkPV;}();
return result;}

    VkPhysicalDevice16BitStorageFeaturesKHR deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice16BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupProperties(VkPhysicalDeviceSubgroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSize"]=[&]() {
    json return_MbXcUKt=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["supportedStages"]=[&]() {
    json return_xYTkoqm=json({});
    return serialize_VkShaderStageFlags(name.supportedStages);}();
result["members"]["supportedOperations"]=[&]() {
    json return_LIXkUgO=json({});
    return serialize_VkSubgroupFeatureFlags(name.supportedOperations);}();
result["members"]["quadOperationsInAllStages"]=[&]() {
    json return_exLyErt=json({});
    return_exLyErt=[&]() {
    json return_hkfgywz=json({});
    return serialize_uint32_t(name.quadOperationsInAllStages);}();return return_exLyErt;}();
return result;}

    VkPhysicalDeviceSubgroupProperties deserialize_VkPhysicalDeviceSubgroupProperties(json name){
        auto result=VkPhysicalDeviceSubgroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.supportedStages=deserialize_VkShaderStageFlags(name["members"]["supportedStages"]);}();
[&]() {
result.supportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["supportedOperations"]);}();
[&]() {
[&]() {
result.quadOperationsInAllStages=deserialize_uint32_t(name["members"]["quadOperationsInAllStages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_XVkBciW=json({});
    return_XVkBciW=[&]() {
    json return_LVRtfEJ=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_XVkBciW;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_XVkBciW=json({});
    return_XVkBciW=[&]() {
    json return_LVRtfEJ=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_XVkBciW;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2(VkBufferMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2 deserialize_VkBufferMemoryRequirementsInfo2(json name){
        auto result=VkBufferMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2KHR(VkBufferMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2KHR deserialize_VkBufferMemoryRequirementsInfo2KHR(json name){
        auto result=VkBufferMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirements(VkDeviceBufferMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_MresNzJ=json({});
    
        if (name.pCreateInfo==NULL){
            return_MresNzJ["null"]=true;
            return return_MresNzJ;
        }
        return_MresNzJ=[&]() {
    json return_AszXjFq=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_MresNzJ;}();
return result;}

    VkDeviceBufferMemoryRequirements deserialize_VkDeviceBufferMemoryRequirements(json name){
        auto result=VkDeviceBufferMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
VkBufferCreateInfo* temp_ZuCoIBw;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_ZuCoIBw=NULL;
        }
    [&]() {
*(temp_ZuCoIBw)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_ZuCoIBw;}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirementsKHR(VkDeviceBufferMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_MresNzJ=json({});
    
        if (name.pCreateInfo==NULL){
            return_MresNzJ["null"]=true;
            return return_MresNzJ;
        }
        return_MresNzJ=[&]() {
    json return_AszXjFq=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_MresNzJ;}();
return result;}

    VkDeviceBufferMemoryRequirementsKHR deserialize_VkDeviceBufferMemoryRequirementsKHR(json name){
        auto result=VkDeviceBufferMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
VkBufferCreateInfo* temp_ZuCoIBw;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_ZuCoIBw=NULL;
        }
    [&]() {
*(temp_ZuCoIBw)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_ZuCoIBw;}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2(VkImageMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2 deserialize_VkImageMemoryRequirementsInfo2(json name){
        auto result=VkImageMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2KHR(VkImageMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2KHR deserialize_VkImageMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2(VkImageSparseMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2 deserialize_VkImageSparseMemoryRequirementsInfo2(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2KHR(VkImageSparseMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2KHR deserialize_VkImageSparseMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirements(VkDeviceImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_hodHPwJ=json({});
    
        if (name.pCreateInfo==NULL){
            return_hodHPwJ["null"]=true;
            return return_hodHPwJ;
        }
        return_hodHPwJ=[&]() {
    json return_MFWMyog=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_hodHPwJ;}();
result["members"]["planeAspect"]=[&]() {
    json return_GyBcVsY=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirements deserialize_VkDeviceImageMemoryRequirements(json name){
        auto result=VkDeviceImageMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
VkImageCreateInfo* temp_UEuUimT;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_UEuUimT=NULL;
        }
    [&]() {
*(temp_UEuUimT)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_UEuUimT;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirementsKHR(VkDeviceImageMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_hodHPwJ=json({});
    
        if (name.pCreateInfo==NULL){
            return_hodHPwJ["null"]=true;
            return return_hodHPwJ;
        }
        return_hodHPwJ=[&]() {
    json return_MFWMyog=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_hodHPwJ;}();
result["members"]["planeAspect"]=[&]() {
    json return_GyBcVsY=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirementsKHR deserialize_VkDeviceImageMemoryRequirementsKHR(json name){
        auto result=VkDeviceImageMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
VkImageCreateInfo* temp_UEuUimT;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_UEuUimT=NULL;
        }
    [&]() {
*(temp_UEuUimT)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_UEuUimT;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkMemoryRequirements2(VkMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_BdQGzca=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2 deserialize_VkMemoryRequirements2(json name){
        auto result=VkMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkMemoryRequirements2KHR(VkMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_BdQGzca=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2KHR deserialize_VkMemoryRequirements2KHR(json name){
        auto result=VkMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2(VkSparseImageMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_fPcpDuw=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2 deserialize_VkSparseImageMemoryRequirements2(json name){
        auto result=VkSparseImageMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2KHR(VkSparseImageMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_fPcpDuw=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2KHR deserialize_VkSparseImageMemoryRequirements2KHR(json name){
        auto result=VkSparseImageMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingProperties(VkPhysicalDevicePointClippingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_cNSzcJK=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingProperties deserialize_VkPhysicalDevicePointClippingProperties(json name){
        auto result=VkPhysicalDevicePointClippingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingPropertiesKHR(VkPhysicalDevicePointClippingPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_cNSzcJK=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingPropertiesKHR deserialize_VkPhysicalDevicePointClippingPropertiesKHR(json name){
        auto result=VkPhysicalDevicePointClippingPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkMemoryDedicatedRequirements(VkMemoryDedicatedRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_hDQlUPr=json({});
    return_hDQlUPr=[&]() {
    json return_FRgPebG=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_hDQlUPr;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_PyBvYGB=json({});
    return_PyBvYGB=[&]() {
    json return_RNUpFZY=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_PyBvYGB;}();
return result;}

    VkMemoryDedicatedRequirements deserialize_VkMemoryDedicatedRequirements(json name){
        auto result=VkMemoryDedicatedRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedRequirementsKHR(VkMemoryDedicatedRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_hDQlUPr=json({});
    return_hDQlUPr=[&]() {
    json return_FRgPebG=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_hDQlUPr;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_PyBvYGB=json({});
    return_PyBvYGB=[&]() {
    json return_RNUpFZY=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_PyBvYGB;}();
return result;}

    VkMemoryDedicatedRequirementsKHR deserialize_VkMemoryDedicatedRequirementsKHR(json name){
        auto result=VkMemoryDedicatedRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfo(VkMemoryDedicatedAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfo deserialize_VkMemoryDedicatedAllocateInfo(json name){
        auto result=VkMemoryDedicatedAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfoKHR(VkMemoryDedicatedAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfoKHR deserialize_VkMemoryDedicatedAllocateInfoKHR(json name){
        auto result=VkMemoryDedicatedAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfo(VkImageViewUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfo deserialize_VkImageViewUsageCreateInfo(json name){
        auto result=VkImageViewUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkImageViewSlicedCreateInfoEXT(VkImageViewSlicedCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sliceOffset"]=[&]() {
    json return_NzKtKhz=json({});
    return serialize_uint32_t(name.sliceOffset);}();
result["members"]["sliceCount"]=[&]() {
    json return_IVIhLVY=json({});
    return serialize_uint32_t(name.sliceCount);}();
return result;}

    VkImageViewSlicedCreateInfoEXT deserialize_VkImageViewSlicedCreateInfoEXT(json name){
        auto result=VkImageViewSlicedCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.sliceOffset=deserialize_uint32_t(name["members"]["sliceOffset"]);}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfoKHR(VkImageViewUsageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfoKHR deserialize_VkImageViewUsageCreateInfoKHR(json name){
        auto result=VkImageViewUsageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfo(VkPipelineTessellationDomainOriginStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_idmUIZa=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfo deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(VkPipelineTessellationDomainOriginStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_idmUIZa=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfoKHR deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfo(VkSamplerYcbcrConversionInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_QRtUhbO=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfo deserialize_VkSamplerYcbcrConversionInfo(json name){
        auto result=VkSamplerYcbcrConversionInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfoKHR(VkSamplerYcbcrConversionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_QRtUhbO=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfoKHR deserialize_VkSamplerYcbcrConversionInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfo(VkSamplerYcbcrConversionCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_KAfshLj=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_tegtERL=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_kUWBeRM=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_cNsrcQO=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_pIJrWBk=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_CZstRyO=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_hCgzjUz=json({});
    return_hCgzjUz=[&]() {
    json return_iUbElPW=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_hCgzjUz;}();
return result;}

    VkSamplerYcbcrConversionCreateInfo deserialize_VkSamplerYcbcrConversionCreateInfo(json name){
        auto result=VkSamplerYcbcrConversionCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfoKHR(VkSamplerYcbcrConversionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_KAfshLj=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_tegtERL=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_kUWBeRM=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_cNsrcQO=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_pIJrWBk=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_CZstRyO=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_hCgzjUz=json({});
    return_hCgzjUz=[&]() {
    json return_iUbElPW=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_hCgzjUz;}();
return result;}

    VkSamplerYcbcrConversionCreateInfoKHR deserialize_VkSamplerYcbcrConversionCreateInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfo(VkBindImagePlaneMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_GyBcVsY=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfo deserialize_VkBindImagePlaneMemoryInfo(json name){
        auto result=VkBindImagePlaneMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfoKHR(VkBindImagePlaneMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_GyBcVsY=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfoKHR deserialize_VkBindImagePlaneMemoryInfoKHR(json name){
        auto result=VkBindImagePlaneMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfo(VkImagePlaneMemoryRequirementsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_GyBcVsY=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfo deserialize_VkImagePlaneMemoryRequirementsInfo(json name){
        auto result=VkImagePlaneMemoryRequirementsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfoKHR(VkImagePlaneMemoryRequirementsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_GyBcVsY=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfoKHR deserialize_VkImagePlaneMemoryRequirementsInfoKHR(json name){
        auto result=VkImagePlaneMemoryRequirementsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(VkPhysicalDeviceSamplerYcbcrConversionFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_FjatIMB=json({});
    return_FjatIMB=[&]() {
    json return_ZHKiXNw=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_FjatIMB;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeatures deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_FjatIMB=json({});
    return_FjatIMB=[&]() {
    json return_ZHKiXNw=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_FjatIMB;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatProperties(VkSamplerYcbcrConversionImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_GNdajWi=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatProperties deserialize_VkSamplerYcbcrConversionImageFormatProperties(json name){
        auto result=VkSamplerYcbcrConversionImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(VkSamplerYcbcrConversionImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_GNdajWi=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatPropertiesKHR deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(json name){
        auto result=VkSamplerYcbcrConversionImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkTextureLODGatherFormatPropertiesAMD(VkTextureLODGatherFormatPropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsTextureGatherLODBiasAMD"]=[&]() {
    json return_sgNqIJA=json({});
    return_sgNqIJA=[&]() {
    json return_fiueLag=json({});
    return serialize_uint32_t(name.supportsTextureGatherLODBiasAMD);}();return return_sgNqIJA;}();
return result;}

    VkTextureLODGatherFormatPropertiesAMD deserialize_VkTextureLODGatherFormatPropertiesAMD(json name){
        auto result=VkTextureLODGatherFormatPropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supportsTextureGatherLODBiasAMD=deserialize_uint32_t(name["members"]["supportsTextureGatherLODBiasAMD"]);}();}();
return result;}

    json serialize_VkConditionalRenderingBeginInfoEXT(VkConditionalRenderingBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["flags"]=[&]() {
    json return_DpnynBA=json({});
    return serialize_VkConditionalRenderingFlagsEXT(name.flags);}();
return result;}

    VkConditionalRenderingBeginInfoEXT deserialize_VkConditionalRenderingBeginInfoEXT(json name){
        auto result=VkConditionalRenderingBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
result.flags=deserialize_VkConditionalRenderingFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkProtectedSubmitInfo(VkProtectedSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedSubmit"]=[&]() {
    json return_uKihDyj=json({});
    return_uKihDyj=[&]() {
    json return_mPKMfOh=json({});
    return serialize_uint32_t(name.protectedSubmit);}();return return_uKihDyj;}();
return result;}

    VkProtectedSubmitInfo deserialize_VkProtectedSubmitInfo(json name){
        auto result=VkProtectedSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.protectedSubmit=deserialize_uint32_t(name["members"]["protectedSubmit"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryFeatures(VkPhysicalDeviceProtectedMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedMemory"]=[&]() {
    json return_JHXvDBt=json({});
    return_JHXvDBt=[&]() {
    json return_FZZqguP=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_JHXvDBt;}();
return result;}

    VkPhysicalDeviceProtectedMemoryFeatures deserialize_VkPhysicalDeviceProtectedMemoryFeatures(json name){
        auto result=VkPhysicalDeviceProtectedMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryProperties(VkPhysicalDeviceProtectedMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedNoFault"]=[&]() {
    json return_HOhtSHv=json({});
    return_HOhtSHv=[&]() {
    json return_DLHcJmx=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_HOhtSHv;}();
return result;}

    VkPhysicalDeviceProtectedMemoryProperties deserialize_VkPhysicalDeviceProtectedMemoryProperties(json name){
        auto result=VkPhysicalDeviceProtectedMemoryProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
return result;}

    json serialize_VkDeviceQueueInfo2(VkDeviceQueueInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cItAUvx=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_cQXidFT=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueIndex"]=[&]() {
    json return_DJcDHSQ=json({});
    return serialize_uint32_t(name.queueIndex);}();
return result;}

    VkDeviceQueueInfo2 deserialize_VkDeviceQueueInfo2(json name){
        auto result=VkDeviceQueueInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueIndex=deserialize_uint32_t(name["members"]["queueIndex"]);}();
return result;}

    json serialize_VkPipelineCoverageToColorStateCreateInfoNV(VkPipelineCoverageToColorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_HZvZCtY=json({});
    return serialize_VkPipelineCoverageToColorStateCreateFlagsNV(name.flags);}();
result["members"]["coverageToColorEnable"]=[&]() {
    json return_NJUnzMA=json({});
    return_NJUnzMA=[&]() {
    json return_tMUCcMP=json({});
    return serialize_uint32_t(name.coverageToColorEnable);}();return return_NJUnzMA;}();
result["members"]["coverageToColorLocation"]=[&]() {
    json return_zGIoXBm=json({});
    return serialize_uint32_t(name.coverageToColorLocation);}();
return result;}

    VkPipelineCoverageToColorStateCreateInfoNV deserialize_VkPipelineCoverageToColorStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageToColorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
[&]() {
result.coverageToColorEnable=deserialize_uint32_t(name["members"]["coverageToColorEnable"]);}();}();
[&]() {
result.coverageToColorLocation=deserialize_uint32_t(name["members"]["coverageToColorLocation"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(VkPhysicalDeviceSamplerFilterMinmaxProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_fBmoBqn=json({});
    return_fBmoBqn=[&]() {
    json return_LyoyfcN=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_fBmoBqn;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_cbXlDVR=json({});
    return_cbXlDVR=[&]() {
    json return_NBjXsWT=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_cbXlDVR;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxProperties deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_fBmoBqn=json({});
    return_fBmoBqn=[&]() {
    json return_LyoyfcN=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_fBmoBqn;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_cbXlDVR=json({});
    return_cbXlDVR=[&]() {
    json return_NBjXsWT=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_cbXlDVR;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkSampleLocationEXT(VkSampleLocationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ftpUCfE=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_AMPASAz=json({});
    return serialize_float(name.y);}();
return result;}

    VkSampleLocationEXT deserialize_VkSampleLocationEXT(json name){
        auto result=VkSampleLocationEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkSampleLocationsInfoEXT(VkSampleLocationsInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsPerPixel"]=[&]() {
    json return_drkZPBT=json({});
    return serialize_VkSampleCountFlagBits(name.sampleLocationsPerPixel);}();
result["members"]["sampleLocationGridSize"]=[&]() {
    json return_AwKhhtw=json({});
    return serialize_VkExtent2D(name.sampleLocationGridSize);}();
result["members"]["sampleLocationsCount"]=[&]() {
    json return_PqsJvCP=json({});
    return serialize_uint32_t(name.sampleLocationsCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_rjtHCfB=json({});
    
        if (name.pSampleLocations==NULL){
            return_rjtHCfB["null"]=true;
            return return_rjtHCfB;
        }
        
        return_rjtHCfB["members"]={};
        for(int rjtHCfB=0; rjtHCfB < name.sampleLocationsCount; rjtHCfB++){
            json temp;
            temp=[&]() {
    json return_VNuIibt=json({});
    return serialize_VkSampleLocationEXT(name.pSampleLocations[rjtHCfB]);}();
            return_rjtHCfB["members"][std::to_string(rjtHCfB)].push_back(temp);
        }
        return return_rjtHCfB;
        }();
return result;}

    VkSampleLocationsInfoEXT deserialize_VkSampleLocationsInfoEXT(json name){
        auto result=VkSampleLocationsInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.sampleLocationsPerPixel=deserialize_VkSampleCountFlagBits(name["members"]["sampleLocationsPerPixel"]);}();
[&]() {
result.sampleLocationGridSize=deserialize_VkExtent2D(name["members"]["sampleLocationGridSize"]);}();
[&]() {
result.sampleLocationsCount=deserialize_uint32_t(name["members"]["sampleLocationsCount"]);}();
[&]() {
VkSampleLocationEXT* temp_XIxhqzX;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_XIxhqzX=NULL;
        }
    temp_XIxhqzX=(VkSampleLocationEXT*)malloc(result.sampleLocationsCount*sizeof(VkSampleLocationEXT));
        for (int HfOzZEV=0; HfOzZEV < result.sampleLocationsCount; HfOzZEV++){
            [&]() {
temp_XIxhqzX[HfOzZEV]=deserialize_VkSampleLocationEXT(name["members"]["pSampleLocations"]["members"][HfOzZEV]);}();;
        }
        }();result.pSampleLocations=temp_XIxhqzX;}();
return result;}

    json serialize_VkAttachmentSampleLocationsEXT(VkAttachmentSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachmentIndex"]=[&]() {
    json return_teKjxdV=json({});
    return serialize_uint32_t(name.attachmentIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_qTbdkWe=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkAttachmentSampleLocationsEXT deserialize_VkAttachmentSampleLocationsEXT(json name){
        auto result=VkAttachmentSampleLocationsEXT();
    
[&]() {
result.attachmentIndex=deserialize_uint32_t(name["members"]["attachmentIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkSubpassSampleLocationsEXT(VkSubpassSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassIndex"]=[&]() {
    json return_SOMWXIw=json({});
    return serialize_uint32_t(name.subpassIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_qTbdkWe=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkSubpassSampleLocationsEXT deserialize_VkSubpassSampleLocationsEXT(json name){
        auto result=VkSubpassSampleLocationsEXT();
    
[&]() {
result.subpassIndex=deserialize_uint32_t(name["members"]["subpassIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkRenderPassSampleLocationsBeginInfoEXT(VkRenderPassSampleLocationsBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentInitialSampleLocationsCount"]=[&]() {
    json return_ESwiZQr=json({});
    return serialize_uint32_t(name.attachmentInitialSampleLocationsCount);}();
result["members"]["pAttachmentInitialSampleLocations"]=[&]() {
    json return_SNgnfIl=json({});
    
        if (name.pAttachmentInitialSampleLocations==NULL){
            return_SNgnfIl["null"]=true;
            return return_SNgnfIl;
        }
        
        return_SNgnfIl["members"]={};
        for(int SNgnfIl=0; SNgnfIl < name.attachmentInitialSampleLocationsCount; SNgnfIl++){
            json temp;
            temp=[&]() {
    json return_NPKTTFq=json({});
    return serialize_VkAttachmentSampleLocationsEXT(name.pAttachmentInitialSampleLocations[SNgnfIl]);}();
            return_SNgnfIl["members"][std::to_string(SNgnfIl)].push_back(temp);
        }
        return return_SNgnfIl;
        }();
result["members"]["postSubpassSampleLocationsCount"]=[&]() {
    json return_UdzEUnd=json({});
    return serialize_uint32_t(name.postSubpassSampleLocationsCount);}();
result["members"]["pPostSubpassSampleLocations"]=[&]() {
    json return_raHOLgo=json({});
    
        if (name.pPostSubpassSampleLocations==NULL){
            return_raHOLgo["null"]=true;
            return return_raHOLgo;
        }
        
        return_raHOLgo["members"]={};
        for(int raHOLgo=0; raHOLgo < name.postSubpassSampleLocationsCount; raHOLgo++){
            json temp;
            temp=[&]() {
    json return_Rzogade=json({});
    return serialize_VkSubpassSampleLocationsEXT(name.pPostSubpassSampleLocations[raHOLgo]);}();
            return_raHOLgo["members"][std::to_string(raHOLgo)].push_back(temp);
        }
        return return_raHOLgo;
        }();
return result;}

    VkRenderPassSampleLocationsBeginInfoEXT deserialize_VkRenderPassSampleLocationsBeginInfoEXT(json name){
        auto result=VkRenderPassSampleLocationsBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachmentInitialSampleLocationsCount=deserialize_uint32_t(name["members"]["attachmentInitialSampleLocationsCount"]);}();
[&]() {
VkAttachmentSampleLocationsEXT* temp_LBOZALb;[&]() {

        if (name["members"]["pAttachmentInitialSampleLocations"].contains("null")){
        temp_LBOZALb=NULL;
        }
    temp_LBOZALb=(VkAttachmentSampleLocationsEXT*)malloc(result.attachmentInitialSampleLocationsCount*sizeof(VkAttachmentSampleLocationsEXT));
        for (int THIeMQH=0; THIeMQH < result.attachmentInitialSampleLocationsCount; THIeMQH++){
            [&]() {
temp_LBOZALb[THIeMQH]=deserialize_VkAttachmentSampleLocationsEXT(name["members"]["pAttachmentInitialSampleLocations"]["members"][THIeMQH]);}();;
        }
        }();result.pAttachmentInitialSampleLocations=temp_LBOZALb;}();
[&]() {
result.postSubpassSampleLocationsCount=deserialize_uint32_t(name["members"]["postSubpassSampleLocationsCount"]);}();
[&]() {
VkSubpassSampleLocationsEXT* temp_QLZXfAm;[&]() {

        if (name["members"]["pPostSubpassSampleLocations"].contains("null")){
        temp_QLZXfAm=NULL;
        }
    temp_QLZXfAm=(VkSubpassSampleLocationsEXT*)malloc(result.postSubpassSampleLocationsCount*sizeof(VkSubpassSampleLocationsEXT));
        for (int MdbdhHD=0; MdbdhHD < result.postSubpassSampleLocationsCount; MdbdhHD++){
            [&]() {
temp_QLZXfAm[MdbdhHD]=deserialize_VkSubpassSampleLocationsEXT(name["members"]["pPostSubpassSampleLocations"]["members"][MdbdhHD]);}();;
        }
        }();result.pPostSubpassSampleLocations=temp_QLZXfAm;}();
return result;}

    json serialize_VkPipelineSampleLocationsStateCreateInfoEXT(VkPipelineSampleLocationsStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsEnable"]=[&]() {
    json return_PjPDaWW=json({});
    return_PjPDaWW=[&]() {
    json return_NeKVfEj=json({});
    return serialize_uint32_t(name.sampleLocationsEnable);}();return return_PjPDaWW;}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_qTbdkWe=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkPipelineSampleLocationsStateCreateInfoEXT deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(json name){
        auto result=VkPipelineSampleLocationsStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.sampleLocationsEnable=deserialize_uint32_t(name["members"]["sampleLocationsEnable"]);}();}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(VkPhysicalDeviceSampleLocationsPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationSampleCounts"]=[&]() {
    json return_FRtTiqf=json({});
    return serialize_VkSampleCountFlags(name.sampleLocationSampleCounts);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_DeBIBqk=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
result["members"]["sampleLocationCoordinateRange"]=[&]() {
    json return_IeqgDqc=json({});
    
        return_IeqgDqc["members"]={};
        for(int IeqgDqc=0; IeqgDqc < 2; IeqgDqc++){
            json temp;
            temp=[&]() {
    json return_pUCmxhf=json({});
    return serialize_float(name.sampleLocationCoordinateRange[IeqgDqc]);}();
            return_IeqgDqc["members"][std::to_string(IeqgDqc)].push_back(temp);
        }
        return return_IeqgDqc;
        }();
result["members"]["sampleLocationSubPixelBits"]=[&]() {
    json return_ywUfyQX=json({});
    return serialize_uint32_t(name.sampleLocationSubPixelBits);}();
result["members"]["variableSampleLocations"]=[&]() {
    json return_WLwUwLM=json({});
    return_WLwUwLM=[&]() {
    json return_RQRBvkM=json({});
    return serialize_uint32_t(name.variableSampleLocations);}();return return_WLwUwLM;}();
return result;}

    VkPhysicalDeviceSampleLocationsPropertiesEXT deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSampleLocationsPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleLocationSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleLocationSampleCounts"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
[&]() {

        for (int DheqWlY=0; DheqWlY < 2; DheqWlY++){
            [&]() {
result.sampleLocationCoordinateRange[DheqWlY]=deserialize_float(name["members"]["sampleLocationCoordinateRange"]["members"][DheqWlY]);}();;
        }
        }();
[&]() {
result.sampleLocationSubPixelBits=deserialize_uint32_t(name["members"]["sampleLocationSubPixelBits"]);}();
[&]() {
[&]() {
result.variableSampleLocations=deserialize_uint32_t(name["members"]["variableSampleLocations"]);}();}();
return result;}

    json serialize_VkMultisamplePropertiesEXT(VkMultisamplePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_DeBIBqk=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
return result;}

    VkMultisamplePropertiesEXT deserialize_VkMultisamplePropertiesEXT(json name){
        auto result=VkMultisamplePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfo(VkSamplerReductionModeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_xRBExme=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfo deserialize_VkSamplerReductionModeCreateInfo(json name){
        auto result=VkSamplerReductionModeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfoEXT(VkSamplerReductionModeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_xRBExme=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfoEXT deserialize_VkSamplerReductionModeCreateInfoEXT(json name){
        auto result=VkSamplerReductionModeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendCoherentOperations"]=[&]() {
    json return_UHTVYYh=json({});
    return_UHTVYYh=[&]() {
    json return_TNpPsYk=json({});
    return serialize_uint32_t(name.advancedBlendCoherentOperations);}();return return_UHTVYYh;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.advancedBlendCoherentOperations=deserialize_uint32_t(name["members"]["advancedBlendCoherentOperations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(VkPhysicalDeviceMultiDrawFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiDraw"]=[&]() {
    json return_vHBrdfK=json({});
    return_vHBrdfK=[&]() {
    json return_YHRnTTI=json({});
    return serialize_uint32_t(name.multiDraw);}();return return_vHBrdfK;}();
return result;}

    VkPhysicalDeviceMultiDrawFeaturesEXT deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiDraw=deserialize_uint32_t(name["members"]["multiDraw"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendMaxColorAttachments"]=[&]() {
    json return_VkHwXwl=json({});
    return serialize_uint32_t(name.advancedBlendMaxColorAttachments);}();
result["members"]["advancedBlendIndependentBlend"]=[&]() {
    json return_MxdxCuz=json({});
    return_MxdxCuz=[&]() {
    json return_fcfuFCM=json({});
    return serialize_uint32_t(name.advancedBlendIndependentBlend);}();return return_MxdxCuz;}();
result["members"]["advancedBlendNonPremultipliedSrcColor"]=[&]() {
    json return_kduEWEO=json({});
    return_kduEWEO=[&]() {
    json return_DCwpiyj=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedSrcColor);}();return return_kduEWEO;}();
result["members"]["advancedBlendNonPremultipliedDstColor"]=[&]() {
    json return_MGBDgCL=json({});
    return_MGBDgCL=[&]() {
    json return_yPAFxcv=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedDstColor);}();return return_MGBDgCL;}();
result["members"]["advancedBlendCorrelatedOverlap"]=[&]() {
    json return_GSbwxpJ=json({});
    return_GSbwxpJ=[&]() {
    json return_JZPsmwF=json({});
    return serialize_uint32_t(name.advancedBlendCorrelatedOverlap);}();return return_GSbwxpJ;}();
result["members"]["advancedBlendAllOperations"]=[&]() {
    json return_xiZMNwe=json({});
    return_xiZMNwe=[&]() {
    json return_ZqlWRkz=json({});
    return serialize_uint32_t(name.advancedBlendAllOperations);}();return return_xiZMNwe;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.advancedBlendMaxColorAttachments=deserialize_uint32_t(name["members"]["advancedBlendMaxColorAttachments"]);}();
[&]() {
[&]() {
result.advancedBlendIndependentBlend=deserialize_uint32_t(name["members"]["advancedBlendIndependentBlend"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedSrcColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedSrcColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedDstColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedDstColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendCorrelatedOverlap=deserialize_uint32_t(name["members"]["advancedBlendCorrelatedOverlap"]);}();}();
[&]() {
[&]() {
result.advancedBlendAllOperations=deserialize_uint32_t(name["members"]["advancedBlendAllOperations"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkPipelineColorBlendAdvancedStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_moluBax=json({});
    return_moluBax=[&]() {
    json return_JbchZOg=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_moluBax;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_dDHrKbf=json({});
    return_dDHrKbf=[&]() {
    json return_IxIdybe=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_dDHrKbf;}();
result["members"]["blendOverlap"]=[&]() {
    json return_YHlAPQm=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
return result;}

    VkPipelineColorBlendAdvancedStateCreateInfoEXT deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(json name){
        auto result=VkPipelineColorBlendAdvancedStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeatures(VkPhysicalDeviceInlineUniformBlockFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_XdPUseW=json({});
    return_XdPUseW=[&]() {
    json return_EtMrJxV=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_XdPUseW;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_HImrYPY=json({});
    return_HImrYPY=[&]() {
    json return_tesfOEp=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_HImrYPY;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeatures deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(VkPhysicalDeviceInlineUniformBlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_XdPUseW=json({});
    return_XdPUseW=[&]() {
    json return_EtMrJxV=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_XdPUseW;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_HImrYPY=json({});
    return_HImrYPY=[&]() {
    json return_tesfOEp=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_HImrYPY;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeaturesEXT deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockProperties(VkPhysicalDeviceInlineUniformBlockProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_WoCzQLn=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_KSaNAsV=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_EKioPZl=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_TxmZtSg=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_kwpVGPU=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockProperties deserialize_VkPhysicalDeviceInlineUniformBlockProperties(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(VkPhysicalDeviceInlineUniformBlockPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_WoCzQLn=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_KSaNAsV=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_EKioPZl=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_TxmZtSg=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_kwpVGPU=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockPropertiesEXT deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlock(VkWriteDescriptorSetInlineUniformBlock name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_UUedljA=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_dhyZsyp=json({});
    
        if (name.pData==NULL){
            return_dhyZsyp["null"]=true;
            return return_dhyZsyp;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlock deserialize_VkWriteDescriptorSetInlineUniformBlock(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlock();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_wkWXdZT;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_wkWXdZT=NULL;
        }
    temp_wkWXdZT=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_wkWXdZT;}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlockEXT(VkWriteDescriptorSetInlineUniformBlockEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_UUedljA=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_dhyZsyp=json({});
    
        if (name.pData==NULL){
            return_dhyZsyp["null"]=true;
            return return_dhyZsyp;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlockEXT deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlockEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_wkWXdZT;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_wkWXdZT=NULL;
        }
    temp_wkWXdZT=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_wkWXdZT;}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(VkDescriptorPoolInlineUniformBlockCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_OsiHMiA=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfo deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(VkDescriptorPoolInlineUniformBlockCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_OsiHMiA=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfoEXT deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkPipelineCoverageModulationStateCreateInfoNV(VkPipelineCoverageModulationStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uMdtiri=json({});
    return serialize_VkPipelineCoverageModulationStateCreateFlagsNV(name.flags);}();
result["members"]["coverageModulationMode"]=[&]() {
    json return_XujYIFz=json({});
    return serialize_VkCoverageModulationModeNV(name.coverageModulationMode);}();
result["members"]["coverageModulationTableEnable"]=[&]() {
    json return_PycuAxd=json({});
    return_PycuAxd=[&]() {
    json return_zWQQafm=json({});
    return serialize_uint32_t(name.coverageModulationTableEnable);}();return return_PycuAxd;}();
result["members"]["coverageModulationTableCount"]=[&]() {
    json return_MtZZMdV=json({});
    return serialize_uint32_t(name.coverageModulationTableCount);}();
result["members"]["pCoverageModulationTable"]=[&]() {
    json return_PkcNwYV=json({});
    
        if (name.pCoverageModulationTable==NULL){
            return_PkcNwYV["null"]=true;
            return return_PkcNwYV;
        }
        
        return_PkcNwYV["members"]={};
        for(int PkcNwYV=0; PkcNwYV < name.coverageModulationTableCount; PkcNwYV++){
            json temp;
            temp=[&]() {
    json return_pPtfSxL=json({});
    return serialize_float(name.pCoverageModulationTable[PkcNwYV]);}();
            return_PkcNwYV["members"][std::to_string(PkcNwYV)].push_back(temp);
        }
        return return_PkcNwYV;
        }();
return result;}

    VkPipelineCoverageModulationStateCreateInfoNV deserialize_VkPipelineCoverageModulationStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageModulationStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageModulationMode=deserialize_VkCoverageModulationModeNV(name["members"]["coverageModulationMode"]);}();
[&]() {
[&]() {
result.coverageModulationTableEnable=deserialize_uint32_t(name["members"]["coverageModulationTableEnable"]);}();}();
[&]() {
result.coverageModulationTableCount=deserialize_uint32_t(name["members"]["coverageModulationTableCount"]);}();
[&]() {
float* temp_JKBvsFi;[&]() {

        if (name["members"]["pCoverageModulationTable"].contains("null")){
        temp_JKBvsFi=NULL;
        }
    temp_JKBvsFi=(float*)malloc(result.coverageModulationTableCount*sizeof(float));
        for (int cuxyDLP=0; cuxyDLP < result.coverageModulationTableCount; cuxyDLP++){
            [&]() {
temp_JKBvsFi[cuxyDLP]=deserialize_float(name["members"]["pCoverageModulationTable"]["members"][cuxyDLP]);}();;
        }
        }();result.pCoverageModulationTable=temp_JKBvsFi;}();
return result;}

    json serialize_VkImageFormatListCreateInfo(VkImageFormatListCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_cFgFlzx=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_JUizQAk=json({});
    
        if (name.pViewFormats==NULL){
            return_JUizQAk["null"]=true;
            return return_JUizQAk;
        }
        
        return_JUizQAk["members"]={};
        for(int JUizQAk=0; JUizQAk < name.viewFormatCount; JUizQAk++){
            json temp;
            temp=[&]() {
    json return_XWgQyiv=json({});
    return serialize_VkFormat(name.pViewFormats[JUizQAk]);}();
            return_JUizQAk["members"][std::to_string(JUizQAk)].push_back(temp);
        }
        return return_JUizQAk;
        }();
return result;}

    VkImageFormatListCreateInfo deserialize_VkImageFormatListCreateInfo(json name){
        auto result=VkImageFormatListCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_PCZtsmX;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_PCZtsmX=NULL;
        }
    temp_PCZtsmX=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int YymsRzi=0; YymsRzi < result.viewFormatCount; YymsRzi++){
            [&]() {
temp_PCZtsmX[YymsRzi]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][YymsRzi]);}();;
        }
        }();result.pViewFormats=temp_PCZtsmX;}();
return result;}

    json serialize_VkImageFormatListCreateInfoKHR(VkImageFormatListCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_cFgFlzx=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_JUizQAk=json({});
    
        if (name.pViewFormats==NULL){
            return_JUizQAk["null"]=true;
            return return_JUizQAk;
        }
        
        return_JUizQAk["members"]={};
        for(int JUizQAk=0; JUizQAk < name.viewFormatCount; JUizQAk++){
            json temp;
            temp=[&]() {
    json return_XWgQyiv=json({});
    return serialize_VkFormat(name.pViewFormats[JUizQAk]);}();
            return_JUizQAk["members"][std::to_string(JUizQAk)].push_back(temp);
        }
        return return_JUizQAk;
        }();
return result;}

    VkImageFormatListCreateInfoKHR deserialize_VkImageFormatListCreateInfoKHR(json name){
        auto result=VkImageFormatListCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_PCZtsmX;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_PCZtsmX=NULL;
        }
    temp_PCZtsmX=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int YymsRzi=0; YymsRzi < result.viewFormatCount; YymsRzi++){
            [&]() {
temp_PCZtsmX[YymsRzi]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][YymsRzi]);}();;
        }
        }();result.pViewFormats=temp_PCZtsmX;}();
return result;}

    json serialize_VkValidationCacheCreateInfoEXT(VkValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NIrDaTY=json({});
    return serialize_VkValidationCacheCreateFlagsEXT(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_PGjdlnH=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_mbtiLJl=json({});
    
        if (name.pInitialData==NULL){
            return_mbtiLJl["null"]=true;
            return return_mbtiLJl;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkValidationCacheCreateInfoEXT deserialize_VkValidationCacheCreateInfoEXT(json name){
        auto result=VkValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkValidationCacheCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_UURIezS;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_UURIezS=NULL;
        }
    temp_UURIezS=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_UURIezS;}();
return result;}

    json serialize_VkShaderModuleValidationCacheCreateInfoEXT(VkShaderModuleValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["validationCache"]=[&]() {
    json return_xqVVxlM=json({});
    return serialize_VkValidationCacheEXT(name.validationCache);}();
return result;}

    VkShaderModuleValidationCacheCreateInfoEXT deserialize_VkShaderModuleValidationCacheCreateInfoEXT(json name){
        auto result=VkShaderModuleValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.validationCache=deserialize_VkValidationCacheEXT(name["members"]["validationCache"]);}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3Properties(VkPhysicalDeviceMaintenance3Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_NdILVai=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_iIkisCm=json({});
    return_iIkisCm=[&]() {
    json return_kzGrjSv=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_iIkisCm;}();
return result;}

    VkPhysicalDeviceMaintenance3Properties deserialize_VkPhysicalDeviceMaintenance3Properties(json name){
        auto result=VkPhysicalDeviceMaintenance3Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(VkPhysicalDeviceMaintenance3PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_NdILVai=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_iIkisCm=json({});
    return_iIkisCm=[&]() {
    json return_kzGrjSv=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_iIkisCm;}();
return result;}

    VkPhysicalDeviceMaintenance3PropertiesKHR deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance3PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Features(VkPhysicalDeviceMaintenance4Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_AlPoUXr=json({});
    return_AlPoUXr=[&]() {
    json return_NJuytil=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_AlPoUXr;}();
return result;}

    VkPhysicalDeviceMaintenance4Features deserialize_VkPhysicalDeviceMaintenance4Features(json name){
        auto result=VkPhysicalDeviceMaintenance4Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(VkPhysicalDeviceMaintenance4FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_AlPoUXr=json({});
    return_AlPoUXr=[&]() {
    json return_NJuytil=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_AlPoUXr;}();
return result;}

    VkPhysicalDeviceMaintenance4FeaturesKHR deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Properties(VkPhysicalDeviceMaintenance4Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_dHdoyHA=json({});
    return_dHdoyHA=[&]() {
    json return_xheMvEH=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_dHdoyHA;}();
return result;}

    VkPhysicalDeviceMaintenance4Properties deserialize_VkPhysicalDeviceMaintenance4Properties(json name){
        auto result=VkPhysicalDeviceMaintenance4Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(VkPhysicalDeviceMaintenance4PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_dHdoyHA=json({});
    return_dHdoyHA=[&]() {
    json return_xheMvEH=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_dHdoyHA;}();
return result;}

    VkPhysicalDeviceMaintenance4PropertiesKHR deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(VkPhysicalDeviceMaintenance5FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance5"]=[&]() {
    json return_XnozkNE=json({});
    return_XnozkNE=[&]() {
    json return_bhbIJuG=json({});
    return serialize_uint32_t(name.maintenance5);}();return return_XnozkNE;}();
return result;}

    VkPhysicalDeviceMaintenance5FeaturesKHR deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance5=deserialize_uint32_t(name["members"]["maintenance5"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(VkPhysicalDeviceMaintenance5PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]=[&]() {
    json return_oiKCZnk=json({});
    return_oiKCZnk=[&]() {
    json return_KGeBWfT=json({});
    return serialize_uint32_t(name.earlyFragmentMultisampleCoverageAfterSampleCounting);}();return return_oiKCZnk;}();
result["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]=[&]() {
    json return_LPKKWtO=json({});
    return_LPKKWtO=[&]() {
    json return_VjlsCnt=json({});
    return serialize_uint32_t(name.earlyFragmentSampleMaskTestBeforeSampleCounting);}();return return_LPKKWtO;}();
result["members"]["depthStencilSwizzleOneSupport"]=[&]() {
    json return_xgDNFpc=json({});
    return_xgDNFpc=[&]() {
    json return_GxVEGwr=json({});
    return serialize_uint32_t(name.depthStencilSwizzleOneSupport);}();return return_xgDNFpc;}();
result["members"]["polygonModePointSize"]=[&]() {
    json return_oeRDsof=json({});
    return_oeRDsof=[&]() {
    json return_BZFfpAd=json({});
    return serialize_uint32_t(name.polygonModePointSize);}();return return_oeRDsof;}();
result["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]=[&]() {
    json return_eKqFALH=json({});
    return_eKqFALH=[&]() {
    json return_alvxLCy=json({});
    return serialize_uint32_t(name.nonStrictSinglePixelWideLinesUseParallelogram);}();return return_eKqFALH;}();
result["members"]["nonStrictWideLinesUseParallelogram"]=[&]() {
    json return_QcjUdkI=json({});
    return_QcjUdkI=[&]() {
    json return_xdatYEH=json({});
    return serialize_uint32_t(name.nonStrictWideLinesUseParallelogram);}();return return_QcjUdkI;}();
return result;}

    VkPhysicalDeviceMaintenance5PropertiesKHR deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.earlyFragmentMultisampleCoverageAfterSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]);}();}();
[&]() {
[&]() {
result.earlyFragmentSampleMaskTestBeforeSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]);}();}();
[&]() {
[&]() {
result.depthStencilSwizzleOneSupport=deserialize_uint32_t(name["members"]["depthStencilSwizzleOneSupport"]);}();}();
[&]() {
[&]() {
result.polygonModePointSize=deserialize_uint32_t(name["members"]["polygonModePointSize"]);}();}();
[&]() {
[&]() {
result.nonStrictSinglePixelWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]);}();}();
[&]() {
[&]() {
result.nonStrictWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictWideLinesUseParallelogram"]);}();}();
return result;}

    json serialize_VkRenderingAreaInfoKHR(VkRenderingAreaInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_scWJVih=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_scWJVih["null"]=true;
            return return_scWJVih;
        }
        
        return_scWJVih["members"]={};
        for(int scWJVih=0; scWJVih < name.colorAttachmentCount; scWJVih++){
            json temp;
            temp=[&]() {
    json return_iUPgkxH=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[scWJVih]);}();
            return_scWJVih["members"][std::to_string(scWJVih)].push_back(temp);
        }
        return return_scWJVih;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_fsCuorL=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_DKIpMHJ=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkRenderingAreaInfoKHR deserialize_VkRenderingAreaInfoKHR(json name){
        auto result=VkRenderingAreaInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_mGsBzRq;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_mGsBzRq=NULL;
        }
    temp_mGsBzRq=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int YGTKgra=0; YGTKgra < result.colorAttachmentCount; YGTKgra++){
            [&]() {
temp_mGsBzRq[YGTKgra]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][YGTKgra]);}();;
        }
        }();result.pColorAttachmentFormats=temp_mGsBzRq;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutSupport(VkDescriptorSetLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_iZlxSwq=json({});
    return_iZlxSwq=[&]() {
    json return_iqprika=json({});
    return serialize_uint32_t(name.supported);}();return return_iZlxSwq;}();
return result;}

    VkDescriptorSetLayoutSupport deserialize_VkDescriptorSetLayoutSupport(json name){
        auto result=VkDescriptorSetLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkDescriptorSetLayoutSupportKHR(VkDescriptorSetLayoutSupportKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_iZlxSwq=json({});
    return_iZlxSwq=[&]() {
    json return_iqprika=json({});
    return serialize_uint32_t(name.supported);}();return return_iZlxSwq;}();
return result;}

    VkDescriptorSetLayoutSupportKHR deserialize_VkDescriptorSetLayoutSupportKHR(json name){
        auto result=VkDescriptorSetLayoutSupportKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParametersFeatures(VkPhysicalDeviceShaderDrawParametersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_NpWwBzY=json({});
    return_NpWwBzY=[&]() {
    json return_pYAAMtz=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_NpWwBzY;}();
return result;}

    VkPhysicalDeviceShaderDrawParametersFeatures deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParametersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParameterFeatures(VkPhysicalDeviceShaderDrawParameterFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_NpWwBzY=json({});
    return_NpWwBzY=[&]() {
    json return_pYAAMtz=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_NpWwBzY;}();
return result;}

    VkPhysicalDeviceShaderDrawParameterFeatures deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParameterFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8Features(VkPhysicalDeviceShaderFloat16Int8Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_duJcorf=json({});
    return_duJcorf=[&]() {
    json return_rZmmQJb=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_duJcorf;}();
result["members"]["shaderInt8"]=[&]() {
    json return_flcVjnn=json({});
    return_flcVjnn=[&]() {
    json return_qovMBrq=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_flcVjnn;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8Features deserialize_VkPhysicalDeviceShaderFloat16Int8Features(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_duJcorf=json({});
    return_duJcorf=[&]() {
    json return_rZmmQJb=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_duJcorf;}();
result["members"]["shaderInt8"]=[&]() {
    json return_flcVjnn=json({});
    return_flcVjnn=[&]() {
    json return_qovMBrq=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_flcVjnn;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(VkPhysicalDeviceFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_duJcorf=json({});
    return_duJcorf=[&]() {
    json return_rZmmQJb=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_duJcorf;}();
result["members"]["shaderInt8"]=[&]() {
    json return_flcVjnn=json({});
    return_flcVjnn=[&]() {
    json return_qovMBrq=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_flcVjnn;}();
return result;}

    VkPhysicalDeviceFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsProperties(VkPhysicalDeviceFloatControlsProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_QlCxcRG=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_mkKbeXD=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_hdGbcfL=json({});
    return_hdGbcfL=[&]() {
    json return_VWXjxzE=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_hdGbcfL;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_eKYRXYf=json({});
    return_eKYRXYf=[&]() {
    json return_eXlLigD=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_eKYRXYf;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_XNqwMbb=json({});
    return_XNqwMbb=[&]() {
    json return_ljMAkEE=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_XNqwMbb;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_ZQyRxhT=json({});
    return_ZQyRxhT=[&]() {
    json return_soFjpUa=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_ZQyRxhT;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_fyERzWW=json({});
    return_fyERzWW=[&]() {
    json return_CEaiCmK=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_fyERzWW;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_fsZbPNT=json({});
    return_fsZbPNT=[&]() {
    json return_jdWKMut=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_fsZbPNT;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_dIWBUXP=json({});
    return_dIWBUXP=[&]() {
    json return_qJxMFBN=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_dIWBUXP;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_fzIQCoj=json({});
    return_fzIQCoj=[&]() {
    json return_JPYZZri=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_fzIQCoj;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_yjoFIlL=json({});
    return_yjoFIlL=[&]() {
    json return_oOBdYBf=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_yjoFIlL;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_URpdwOJ=json({});
    return_URpdwOJ=[&]() {
    json return_poWgZTr=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_URpdwOJ;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_LWxRCCh=json({});
    return_LWxRCCh=[&]() {
    json return_ufKCatV=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_LWxRCCh;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_sbSCPyi=json({});
    return_sbSCPyi=[&]() {
    json return_NCmNTYP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_sbSCPyi;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_gNbvqqR=json({});
    return_gNbvqqR=[&]() {
    json return_zUtMCrn=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_gNbvqqR;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_xUCNQAS=json({});
    return_xUCNQAS=[&]() {
    json return_NFNIeOy=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_xUCNQAS;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_ujJuCLm=json({});
    return_ujJuCLm=[&]() {
    json return_wrmRuJI=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_ujJuCLm;}();
return result;}

    VkPhysicalDeviceFloatControlsProperties deserialize_VkPhysicalDeviceFloatControlsProperties(json name){
        auto result=VkPhysicalDeviceFloatControlsProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(VkPhysicalDeviceFloatControlsPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_QlCxcRG=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_mkKbeXD=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_hdGbcfL=json({});
    return_hdGbcfL=[&]() {
    json return_VWXjxzE=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_hdGbcfL;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_eKYRXYf=json({});
    return_eKYRXYf=[&]() {
    json return_eXlLigD=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_eKYRXYf;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_XNqwMbb=json({});
    return_XNqwMbb=[&]() {
    json return_ljMAkEE=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_XNqwMbb;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_ZQyRxhT=json({});
    return_ZQyRxhT=[&]() {
    json return_soFjpUa=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_ZQyRxhT;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_fyERzWW=json({});
    return_fyERzWW=[&]() {
    json return_CEaiCmK=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_fyERzWW;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_fsZbPNT=json({});
    return_fsZbPNT=[&]() {
    json return_jdWKMut=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_fsZbPNT;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_dIWBUXP=json({});
    return_dIWBUXP=[&]() {
    json return_qJxMFBN=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_dIWBUXP;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_fzIQCoj=json({});
    return_fzIQCoj=[&]() {
    json return_JPYZZri=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_fzIQCoj;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_yjoFIlL=json({});
    return_yjoFIlL=[&]() {
    json return_oOBdYBf=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_yjoFIlL;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_URpdwOJ=json({});
    return_URpdwOJ=[&]() {
    json return_poWgZTr=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_URpdwOJ;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_LWxRCCh=json({});
    return_LWxRCCh=[&]() {
    json return_ufKCatV=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_LWxRCCh;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_sbSCPyi=json({});
    return_sbSCPyi=[&]() {
    json return_NCmNTYP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_sbSCPyi;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_gNbvqqR=json({});
    return_gNbvqqR=[&]() {
    json return_zUtMCrn=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_gNbvqqR;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_xUCNQAS=json({});
    return_xUCNQAS=[&]() {
    json return_NFNIeOy=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_xUCNQAS;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_ujJuCLm=json({});
    return_ujJuCLm=[&]() {
    json return_wrmRuJI=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_ujJuCLm;}();
return result;}

    VkPhysicalDeviceFloatControlsPropertiesKHR deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFloatControlsPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeatures(VkPhysicalDeviceHostQueryResetFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_pehXKgM=json({});
    return_pehXKgM=[&]() {
    json return_jORpLlU=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_pehXKgM;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeatures deserialize_VkPhysicalDeviceHostQueryResetFeatures(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(VkPhysicalDeviceHostQueryResetFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_pehXKgM=json({});
    return_pehXKgM=[&]() {
    json return_jORpLlU=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_pehXKgM;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeaturesEXT deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkShaderResourceUsageAMD(VkShaderResourceUsageAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["numUsedVgprs"]=[&]() {
    json return_WhhlKVP=json({});
    return serialize_uint32_t(name.numUsedVgprs);}();
result["members"]["numUsedSgprs"]=[&]() {
    json return_eamuyem=json({});
    return serialize_uint32_t(name.numUsedSgprs);}();
result["members"]["ldsSizePerLocalWorkGroup"]=[&]() {
    json return_YcHXaNb=json({});
    return serialize_uint32_t(name.ldsSizePerLocalWorkGroup);}();
result["members"]["ldsUsageSizeInBytes"]=[&]() {
    json return_NYWFiZI=json({});
    return serialize_size_t(name.ldsUsageSizeInBytes);}();
result["members"]["scratchMemUsageInBytes"]=[&]() {
    json return_hdOjsOK=json({});
    return serialize_size_t(name.scratchMemUsageInBytes);}();
return result;}

    VkShaderResourceUsageAMD deserialize_VkShaderResourceUsageAMD(json name){
        auto result=VkShaderResourceUsageAMD();
    
[&]() {
result.numUsedVgprs=deserialize_uint32_t(name["members"]["numUsedVgprs"]);}();
[&]() {
result.numUsedSgprs=deserialize_uint32_t(name["members"]["numUsedSgprs"]);}();
[&]() {
result.ldsSizePerLocalWorkGroup=deserialize_uint32_t(name["members"]["ldsSizePerLocalWorkGroup"]);}();
[&]() {
result.ldsUsageSizeInBytes=deserialize_size_t(name["members"]["ldsUsageSizeInBytes"]);}();
[&]() {
result.scratchMemUsageInBytes=deserialize_size_t(name["members"]["scratchMemUsageInBytes"]);}();
return result;}

    json serialize_VkShaderStatisticsInfoAMD(VkShaderStatisticsInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shaderStageMask"]=[&]() {
    json return_SGHPzuc=json({});
    return serialize_VkShaderStageFlags(name.shaderStageMask);}();
result["members"]["resourceUsage"]=[&]() {
    json return_FjLhzPn=json({});
    return serialize_VkShaderResourceUsageAMD(name.resourceUsage);}();
result["members"]["numPhysicalVgprs"]=[&]() {
    json return_ZVeqcbj=json({});
    return serialize_uint32_t(name.numPhysicalVgprs);}();
result["members"]["numPhysicalSgprs"]=[&]() {
    json return_WpZvfEo=json({});
    return serialize_uint32_t(name.numPhysicalSgprs);}();
result["members"]["numAvailableVgprs"]=[&]() {
    json return_RfbtWYW=json({});
    return serialize_uint32_t(name.numAvailableVgprs);}();
result["members"]["numAvailableSgprs"]=[&]() {
    json return_nFYCyDd=json({});
    return serialize_uint32_t(name.numAvailableSgprs);}();
result["members"]["computeWorkGroupSize"]=[&]() {
    json return_QhHeAKt=json({});
    
        return_QhHeAKt["members"]={};
        for(int QhHeAKt=0; QhHeAKt < 3; QhHeAKt++){
            json temp;
            temp=[&]() {
    json return_RjLkdTy=json({});
    return serialize_uint32_t(name.computeWorkGroupSize[QhHeAKt]);}();
            return_QhHeAKt["members"][std::to_string(QhHeAKt)].push_back(temp);
        }
        return return_QhHeAKt;
        }();
return result;}

    VkShaderStatisticsInfoAMD deserialize_VkShaderStatisticsInfoAMD(json name){
        auto result=VkShaderStatisticsInfoAMD();
    
[&]() {
result.shaderStageMask=deserialize_VkShaderStageFlags(name["members"]["shaderStageMask"]);}();
[&]() {
result.resourceUsage=deserialize_VkShaderResourceUsageAMD(name["members"]["resourceUsage"]);}();
[&]() {
result.numPhysicalVgprs=deserialize_uint32_t(name["members"]["numPhysicalVgprs"]);}();
[&]() {
result.numPhysicalSgprs=deserialize_uint32_t(name["members"]["numPhysicalSgprs"]);}();
[&]() {
result.numAvailableVgprs=deserialize_uint32_t(name["members"]["numAvailableVgprs"]);}();
[&]() {
result.numAvailableSgprs=deserialize_uint32_t(name["members"]["numAvailableSgprs"]);}();
[&]() {

        for (int QPNtAVp=0; QPNtAVp < 3; QPNtAVp++){
            [&]() {
result.computeWorkGroupSize[QPNtAVp]=deserialize_uint32_t(name["members"]["computeWorkGroupSize"]["members"][QPNtAVp]);}();;
        }
        }();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(VkDeviceQueueGlobalPriorityCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_KWkAlKy=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoKHR deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(VkDeviceQueueGlobalPriorityCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_KWkAlKy=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoEXT deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_WLJCaZE=json({});
    return_WLJCaZE=[&]() {
    json return_xqWJxFR=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_WLJCaZE;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_WLJCaZE=json({});
    return_WLJCaZE=[&]() {
    json return_xqWJxFR=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_WLJCaZE;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(VkQueueFamilyGlobalPriorityPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_uPfFGXG=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_sfeeMua=json({});
    
        return_sfeeMua["members"]={};
        for(int sfeeMua=0; sfeeMua < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; sfeeMua++){
            json temp;
            temp=[&]() {
    json return_eQAQnxa=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[sfeeMua]);}();
            return_sfeeMua["members"][std::to_string(sfeeMua)].push_back(temp);
        }
        return return_sfeeMua;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesKHR deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int buwXvMe=0; buwXvMe < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; buwXvMe++){
            [&]() {
result.priorities[buwXvMe]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][buwXvMe]);}();;
        }
        }();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(VkQueueFamilyGlobalPriorityPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_uPfFGXG=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_sfeeMua=json({});
    
        return_sfeeMua["members"]={};
        for(int sfeeMua=0; sfeeMua < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; sfeeMua++){
            json temp;
            temp=[&]() {
    json return_eQAQnxa=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[sfeeMua]);}();
            return_sfeeMua["members"][std::to_string(sfeeMua)].push_back(temp);
        }
        return return_sfeeMua;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesEXT deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int buwXvMe=0; buwXvMe < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; buwXvMe++){
            [&]() {
result.priorities[buwXvMe]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][buwXvMe]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsObjectNameInfoEXT(VkDebugUtilsObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_ZOyibly=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_lmUUGkJ=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["pObjectName"]=[&]() {
    json return_fhwMbIA=json({});
    
        if (name.pObjectName==NULL){
            return_fhwMbIA["null"]=true;
            return return_fhwMbIA;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugUtilsObjectNameInfoEXT deserialize_VkDebugUtilsObjectNameInfoEXT(json name){
        auto result=VkDebugUtilsObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
char* temp_RQFycnx;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_RQFycnx=NULL;
        }
    temp_RQFycnx=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_RQFycnx;}();
return result;}

    json serialize_VkDebugUtilsObjectTagInfoEXT(VkDebugUtilsObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_ZOyibly=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_lmUUGkJ=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["tagName"]=[&]() {
    json return_IuRXkCY=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_bKbgEFD=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_IridPtR=json({});
    
        if (name.pTag==NULL){
            return_IridPtR["null"]=true;
            return return_IridPtR;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugUtilsObjectTagInfoEXT deserialize_VkDebugUtilsObjectTagInfoEXT(json name){
        auto result=VkDebugUtilsObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_oGkMHYN;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_oGkMHYN=NULL;
        }
    temp_oGkMHYN=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_oGkMHYN;}();
return result;}

    json serialize_VkDebugUtilsLabelEXT(VkDebugUtilsLabelEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pLabelName"]=[&]() {
    json return_MgPEfdt=json({});
    
        if (name.pLabelName==NULL){
            return_MgPEfdt["null"]=true;
            return return_MgPEfdt;
        }
        return serialize_char_p(name.pLabelName);
}();
result["members"]["color"]=[&]() {
    json return_QptgCNk=json({});
    
        return_QptgCNk["members"]={};
        for(int QptgCNk=0; QptgCNk < 4; QptgCNk++){
            json temp;
            temp=[&]() {
    json return_oTZnxjO=json({});
    return serialize_float(name.color[QptgCNk]);}();
            return_QptgCNk["members"][std::to_string(QptgCNk)].push_back(temp);
        }
        return return_QptgCNk;
        }();
return result;}

    VkDebugUtilsLabelEXT deserialize_VkDebugUtilsLabelEXT(json name){
        auto result=VkDebugUtilsLabelEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
char* temp_ZaqHWaY;[&]() {

        if (name["members"]["pLabelName"].contains("null")){
        temp_ZaqHWaY=NULL;
        }
    temp_ZaqHWaY=deserialize_char_p(name["members"]["pLabelName"]);
}();result.pLabelName=temp_ZaqHWaY;}();
[&]() {

        for (int EJClqqF=0; EJClqqF < 4; EJClqqF++){
            [&]() {
result.color[EJClqqF]=deserialize_float(name["members"]["color"]["members"][EJClqqF]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsMessengerCreateInfoEXT(VkDebugUtilsMessengerCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RhaubDu=json({});
    return serialize_VkDebugUtilsMessengerCreateFlagsEXT(name.flags);}();
result["members"]["messageSeverity"]=[&]() {
    json return_SnTjlwB=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagsEXT(name.messageSeverity);}();
result["members"]["messageType"]=[&]() {
    json return_xhjiuHq=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(name.messageType);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_XZCyXbB=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugUtilsMessengerCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_NIpboad=json({});
    
        if (name.pUserData==NULL){
            return_NIpboad["null"]=true;
            return return_NIpboad;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugUtilsMessengerCreateFlagsEXT_id;
uintptr_t VkDebugUtilsMessageSeverityFlagsEXT_id;
uintptr_t VkDebugUtilsMessageTypeFlagsEXT_id;
uintptr_t PFN_vkDebugUtilsMessengerCallbackEXT_id;
void* pUserData;
} VkDebugUtilsMessengerCreateInfoEXT_struct;

    VkDebugUtilsMessengerCreateInfoEXT deserialize_VkDebugUtilsMessengerCreateInfoEXT(json name){
        auto result=VkDebugUtilsMessengerCreateInfoEXT();
    
auto _struct = new VkDebugUtilsMessengerCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagsEXT(name["members"]["messageSeverity"]);}();
[&]() {
result.messageType=deserialize_VkDebugUtilsMessageTypeFlagsEXT(name["members"]["messageType"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDebugUtilsMessengerCallbackDataEXT(VkDebugUtilsMessengerCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IMaocXI=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name.flags);}();
result["members"]["pMessageIdName"]=[&]() {
    json return_LShkhXr=json({});
    
        if (name.pMessageIdName==NULL){
            return_LShkhXr["null"]=true;
            return return_LShkhXr;
        }
        return serialize_char_p(name.pMessageIdName);
}();
result["members"]["messageIdNumber"]=[&]() {
    json return_ilzdSoX=json({});
    return serialize_int32_t(name.messageIdNumber);}();
result["members"]["pMessage"]=[&]() {
    json return_nprawYw=json({});
    
        if (name.pMessage==NULL){
            return_nprawYw["null"]=true;
            return return_nprawYw;
        }
        return serialize_char_p(name.pMessage);
}();
result["members"]["queueLabelCount"]=[&]() {
    json return_mIiMwdC=json({});
    return serialize_uint32_t(name.queueLabelCount);}();
result["members"]["pQueueLabels"]=[&]() {
    json return_cxnsKit=json({});
    
        if (name.pQueueLabels==NULL){
            return_cxnsKit["null"]=true;
            return return_cxnsKit;
        }
        
        return_cxnsKit["members"]={};
        for(int cxnsKit=0; cxnsKit < name.queueLabelCount; cxnsKit++){
            json temp;
            temp=[&]() {
    json return_ImhzVsJ=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pQueueLabels[cxnsKit]);}();
            return_cxnsKit["members"][std::to_string(cxnsKit)].push_back(temp);
        }
        return return_cxnsKit;
        }();
result["members"]["cmdBufLabelCount"]=[&]() {
    json return_dRPoNwO=json({});
    return serialize_uint32_t(name.cmdBufLabelCount);}();
result["members"]["pCmdBufLabels"]=[&]() {
    json return_TJZTtBQ=json({});
    
        if (name.pCmdBufLabels==NULL){
            return_TJZTtBQ["null"]=true;
            return return_TJZTtBQ;
        }
        
        return_TJZTtBQ["members"]={};
        for(int TJZTtBQ=0; TJZTtBQ < name.cmdBufLabelCount; TJZTtBQ++){
            json temp;
            temp=[&]() {
    json return_BAetIPM=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pCmdBufLabels[TJZTtBQ]);}();
            return_TJZTtBQ["members"][std::to_string(TJZTtBQ)].push_back(temp);
        }
        return return_TJZTtBQ;
        }();
result["members"]["objectCount"]=[&]() {
    json return_FWdiePi=json({});
    return serialize_uint32_t(name.objectCount);}();
result["members"]["pObjects"]=[&]() {
    json return_DnGGoKW=json({});
    
        if (name.pObjects==NULL){
            return_DnGGoKW["null"]=true;
            return return_DnGGoKW;
        }
        
        return_DnGGoKW["members"]={};
        for(int DnGGoKW=0; DnGGoKW < name.objectCount; DnGGoKW++){
            json temp;
            temp=[&]() {
    json return_tRVJLfc=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(name.pObjects[DnGGoKW]);}();
            return_DnGGoKW["members"][std::to_string(DnGGoKW)].push_back(temp);
        }
        return return_DnGGoKW;
        }();
return result;}

    VkDebugUtilsMessengerCallbackDataEXT deserialize_VkDebugUtilsMessengerCallbackDataEXT(json name){
        auto result=VkDebugUtilsMessengerCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name["members"]["flags"]);}();
[&]() {
char* temp_xxQbWkg;[&]() {

        if (name["members"]["pMessageIdName"].contains("null")){
        temp_xxQbWkg=NULL;
        }
    temp_xxQbWkg=deserialize_char_p(name["members"]["pMessageIdName"]);
}();result.pMessageIdName=temp_xxQbWkg;}();
[&]() {
result.messageIdNumber=deserialize_int32_t(name["members"]["messageIdNumber"]);}();
[&]() {
char* temp_jZCfirX;[&]() {

        if (name["members"]["pMessage"].contains("null")){
        temp_jZCfirX=NULL;
        }
    temp_jZCfirX=deserialize_char_p(name["members"]["pMessage"]);
}();result.pMessage=temp_jZCfirX;}();
[&]() {
result.queueLabelCount=deserialize_uint32_t(name["members"]["queueLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_aFkDfBq;[&]() {

        if (name["members"]["pQueueLabels"].contains("null")){
        temp_aFkDfBq=NULL;
        }
    temp_aFkDfBq=(VkDebugUtilsLabelEXT*)malloc(result.queueLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int fxStAgL=0; fxStAgL < result.queueLabelCount; fxStAgL++){
            [&]() {
temp_aFkDfBq[fxStAgL]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pQueueLabels"]["members"][fxStAgL]);}();;
        }
        }();result.pQueueLabels=temp_aFkDfBq;}();
[&]() {
result.cmdBufLabelCount=deserialize_uint32_t(name["members"]["cmdBufLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_TxcSJTa;[&]() {

        if (name["members"]["pCmdBufLabels"].contains("null")){
        temp_TxcSJTa=NULL;
        }
    temp_TxcSJTa=(VkDebugUtilsLabelEXT*)malloc(result.cmdBufLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int rsGuGqd=0; rsGuGqd < result.cmdBufLabelCount; rsGuGqd++){
            [&]() {
temp_TxcSJTa[rsGuGqd]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pCmdBufLabels"]["members"][rsGuGqd]);}();;
        }
        }();result.pCmdBufLabels=temp_TxcSJTa;}();
[&]() {
result.objectCount=deserialize_uint32_t(name["members"]["objectCount"]);}();
[&]() {
VkDebugUtilsObjectNameInfoEXT* temp_JhowCPs;[&]() {

        if (name["members"]["pObjects"].contains("null")){
        temp_JhowCPs=NULL;
        }
    temp_JhowCPs=(VkDebugUtilsObjectNameInfoEXT*)malloc(result.objectCount*sizeof(VkDebugUtilsObjectNameInfoEXT));
        for (int tuZhApy=0; tuZhApy < result.objectCount; tuZhApy++){
            [&]() {
temp_JhowCPs[tuZhApy]=deserialize_VkDebugUtilsObjectNameInfoEXT(name["members"]["pObjects"]["members"][tuZhApy]);}();;
        }
        }();result.pObjects=temp_JhowCPs;}();
return result;}

    json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMemoryReport"]=[&]() {
    json return_UmkizHi=json({});
    return_UmkizHi=[&]() {
    json return_bfSsbog=json({});
    return serialize_uint32_t(name.deviceMemoryReport);}();return return_UmkizHi;}();
return result;}

    VkPhysicalDeviceDeviceMemoryReportFeaturesEXT deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDeviceMemoryReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceMemoryReport=deserialize_uint32_t(name["members"]["deviceMemoryReport"]);}();}();
return result;}

    json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(VkDeviceDeviceMemoryReportCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hNcLvEB=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_IYtSyFn=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDeviceMemoryReportCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_NIpboad=json({});
    
        if (name.pUserData==NULL){
            return_NIpboad["null"]=true;
            return return_NIpboad;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDeviceMemoryReportFlagsEXT_id;
uintptr_t PFN_vkDeviceMemoryReportCallbackEXT_id;
void* pUserData;
} VkDeviceDeviceMemoryReportCreateInfoEXT_struct;

    VkDeviceDeviceMemoryReportCreateInfoEXT deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(json name){
        auto result=VkDeviceDeviceMemoryReportCreateInfoEXT();
    
auto _struct = new VkDeviceDeviceMemoryReportCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDeviceMemoryReportCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDeviceMemoryReportCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceMemoryReportCallbackDataEXT(VkDeviceMemoryReportCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hNcLvEB=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["type"]=[&]() {
    json return_QGaFxYU=json({});
    return serialize_VkDeviceMemoryReportEventTypeEXT(name.type);}();
result["members"]["memoryObjectId"]=[&]() {
    json return_IUGDmVx=json({});
    return serialize_uint64_t(name.memoryObjectId);}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["objectType"]=[&]() {
    json return_ZOyibly=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_lmUUGkJ=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["heapIndex"]=[&]() {
    json return_TUPITxP=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkDeviceMemoryReportCallbackDataEXT deserialize_VkDeviceMemoryReportCallbackDataEXT(json name){
        auto result=VkDeviceMemoryReportCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.type=deserialize_VkDeviceMemoryReportEventTypeEXT(name["members"]["type"]);}();
[&]() {
result.memoryObjectId=deserialize_uint64_t(name["members"]["memoryObjectId"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkImportMemoryHostPointerInfoEXT(VkImportMemoryHostPointerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["pHostPointer"]=[&]() {
    json return_pMvQOZh=json({});
    
        if (name.pHostPointer==NULL){
            return_pMvQOZh["null"]=true;
            return return_pMvQOZh;
        }
        return serialize_void_p(name.pHostPointer);
}();
return result;}

    VkImportMemoryHostPointerInfoEXT deserialize_VkImportMemoryHostPointerInfoEXT(json name){
        auto result=VkImportMemoryHostPointerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
return result;}

    json serialize_VkMemoryHostPointerPropertiesEXT(VkMemoryHostPointerPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_ySvCeAY=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryHostPointerPropertiesEXT deserialize_VkMemoryHostPointerPropertiesEXT(json name){
        auto result=VkMemoryHostPointerPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkPhysicalDeviceExternalMemoryHostPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImportedHostPointerAlignment"]=[&]() {
    json return_JOIHLqB=json({});
    return_JOIHLqB=[&]() {
    json return_cvQjmqX=json({});
    return serialize_uint64_t(name.minImportedHostPointerAlignment);}();return return_JOIHLqB;}();
return result;}

    VkPhysicalDeviceExternalMemoryHostPropertiesEXT deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(json name){
        auto result=VkPhysicalDeviceExternalMemoryHostPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minImportedHostPointerAlignment=deserialize_uint64_t(name["members"]["minImportedHostPointerAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkPhysicalDeviceConservativeRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveOverestimationSize"]=[&]() {
    json return_aEkjTFM=json({});
    return serialize_float(name.primitiveOverestimationSize);}();
result["members"]["maxExtraPrimitiveOverestimationSize"]=[&]() {
    json return_oUlGEFR=json({});
    return serialize_float(name.maxExtraPrimitiveOverestimationSize);}();
result["members"]["extraPrimitiveOverestimationSizeGranularity"]=[&]() {
    json return_yEyMrhG=json({});
    return serialize_float(name.extraPrimitiveOverestimationSizeGranularity);}();
result["members"]["primitiveUnderestimation"]=[&]() {
    json return_uJEBSno=json({});
    return_uJEBSno=[&]() {
    json return_MDfIYmJ=json({});
    return serialize_uint32_t(name.primitiveUnderestimation);}();return return_uJEBSno;}();
result["members"]["conservativePointAndLineRasterization"]=[&]() {
    json return_VMOyioW=json({});
    return_VMOyioW=[&]() {
    json return_NkdMPsO=json({});
    return serialize_uint32_t(name.conservativePointAndLineRasterization);}();return return_VMOyioW;}();
result["members"]["degenerateTrianglesRasterized"]=[&]() {
    json return_AWIZnVE=json({});
    return_AWIZnVE=[&]() {
    json return_xUkTQJr=json({});
    return serialize_uint32_t(name.degenerateTrianglesRasterized);}();return return_AWIZnVE;}();
result["members"]["degenerateLinesRasterized"]=[&]() {
    json return_YvfMKLi=json({});
    return_YvfMKLi=[&]() {
    json return_bAvgaDB=json({});
    return serialize_uint32_t(name.degenerateLinesRasterized);}();return return_YvfMKLi;}();
result["members"]["fullyCoveredFragmentShaderInputVariable"]=[&]() {
    json return_SwYEiFA=json({});
    return_SwYEiFA=[&]() {
    json return_LCZNNUm=json({});
    return serialize_uint32_t(name.fullyCoveredFragmentShaderInputVariable);}();return return_SwYEiFA;}();
result["members"]["conservativeRasterizationPostDepthCoverage"]=[&]() {
    json return_pOcemHK=json({});
    return_pOcemHK=[&]() {
    json return_blAXMHn=json({});
    return serialize_uint32_t(name.conservativeRasterizationPostDepthCoverage);}();return return_pOcemHK;}();
return result;}

    VkPhysicalDeviceConservativeRasterizationPropertiesEXT deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.primitiveOverestimationSize=deserialize_float(name["members"]["primitiveOverestimationSize"]);}();
[&]() {
result.maxExtraPrimitiveOverestimationSize=deserialize_float(name["members"]["maxExtraPrimitiveOverestimationSize"]);}();
[&]() {
result.extraPrimitiveOverestimationSizeGranularity=deserialize_float(name["members"]["extraPrimitiveOverestimationSizeGranularity"]);}();
[&]() {
[&]() {
result.primitiveUnderestimation=deserialize_uint32_t(name["members"]["primitiveUnderestimation"]);}();}();
[&]() {
[&]() {
result.conservativePointAndLineRasterization=deserialize_uint32_t(name["members"]["conservativePointAndLineRasterization"]);}();}();
[&]() {
[&]() {
result.degenerateTrianglesRasterized=deserialize_uint32_t(name["members"]["degenerateTrianglesRasterized"]);}();}();
[&]() {
[&]() {
result.degenerateLinesRasterized=deserialize_uint32_t(name["members"]["degenerateLinesRasterized"]);}();}();
[&]() {
[&]() {
result.fullyCoveredFragmentShaderInputVariable=deserialize_uint32_t(name["members"]["fullyCoveredFragmentShaderInputVariable"]);}();}();
[&]() {
[&]() {
result.conservativeRasterizationPostDepthCoverage=deserialize_uint32_t(name["members"]["conservativeRasterizationPostDepthCoverage"]);}();}();
return result;}

    json serialize_VkCalibratedTimestampInfoEXT(VkCalibratedTimestampInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timeDomain"]=[&]() {
    json return_zeksdjv=json({});
    return serialize_VkTimeDomainEXT(name.timeDomain);}();
return result;}

    VkCalibratedTimestampInfoEXT deserialize_VkCalibratedTimestampInfoEXT(json name){
        auto result=VkCalibratedTimestampInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.timeDomain=deserialize_VkTimeDomainEXT(name["members"]["timeDomain"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesAMD(VkPhysicalDeviceShaderCorePropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEngineCount"]=[&]() {
    json return_yFwtwaw=json({});
    return serialize_uint32_t(name.shaderEngineCount);}();
result["members"]["shaderArraysPerEngineCount"]=[&]() {
    json return_eJBVDPP=json({});
    return serialize_uint32_t(name.shaderArraysPerEngineCount);}();
result["members"]["computeUnitsPerShaderArray"]=[&]() {
    json return_YXxvlpD=json({});
    return serialize_uint32_t(name.computeUnitsPerShaderArray);}();
result["members"]["simdPerComputeUnit"]=[&]() {
    json return_pgzMHQx=json({});
    return serialize_uint32_t(name.simdPerComputeUnit);}();
result["members"]["wavefrontsPerSimd"]=[&]() {
    json return_jfLsxUB=json({});
    return serialize_uint32_t(name.wavefrontsPerSimd);}();
result["members"]["wavefrontSize"]=[&]() {
    json return_YZqXHqt=json({});
    return serialize_uint32_t(name.wavefrontSize);}();
result["members"]["sgprsPerSimd"]=[&]() {
    json return_LbEsaPP=json({});
    return serialize_uint32_t(name.sgprsPerSimd);}();
result["members"]["minSgprAllocation"]=[&]() {
    json return_TVguaus=json({});
    return serialize_uint32_t(name.minSgprAllocation);}();
result["members"]["maxSgprAllocation"]=[&]() {
    json return_hWglQuO=json({});
    return serialize_uint32_t(name.maxSgprAllocation);}();
result["members"]["sgprAllocationGranularity"]=[&]() {
    json return_ZUbidJy=json({});
    return serialize_uint32_t(name.sgprAllocationGranularity);}();
result["members"]["vgprsPerSimd"]=[&]() {
    json return_CYWcPDx=json({});
    return serialize_uint32_t(name.vgprsPerSimd);}();
result["members"]["minVgprAllocation"]=[&]() {
    json return_zMmYZOG=json({});
    return serialize_uint32_t(name.minVgprAllocation);}();
result["members"]["maxVgprAllocation"]=[&]() {
    json return_JSYDQis=json({});
    return serialize_uint32_t(name.maxVgprAllocation);}();
result["members"]["vgprAllocationGranularity"]=[&]() {
    json return_vHWtgLh=json({});
    return serialize_uint32_t(name.vgprAllocationGranularity);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesAMD deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderEngineCount=deserialize_uint32_t(name["members"]["shaderEngineCount"]);}();
[&]() {
result.shaderArraysPerEngineCount=deserialize_uint32_t(name["members"]["shaderArraysPerEngineCount"]);}();
[&]() {
result.computeUnitsPerShaderArray=deserialize_uint32_t(name["members"]["computeUnitsPerShaderArray"]);}();
[&]() {
result.simdPerComputeUnit=deserialize_uint32_t(name["members"]["simdPerComputeUnit"]);}();
[&]() {
result.wavefrontsPerSimd=deserialize_uint32_t(name["members"]["wavefrontsPerSimd"]);}();
[&]() {
result.wavefrontSize=deserialize_uint32_t(name["members"]["wavefrontSize"]);}();
[&]() {
result.sgprsPerSimd=deserialize_uint32_t(name["members"]["sgprsPerSimd"]);}();
[&]() {
result.minSgprAllocation=deserialize_uint32_t(name["members"]["minSgprAllocation"]);}();
[&]() {
result.maxSgprAllocation=deserialize_uint32_t(name["members"]["maxSgprAllocation"]);}();
[&]() {
result.sgprAllocationGranularity=deserialize_uint32_t(name["members"]["sgprAllocationGranularity"]);}();
[&]() {
result.vgprsPerSimd=deserialize_uint32_t(name["members"]["vgprsPerSimd"]);}();
[&]() {
result.minVgprAllocation=deserialize_uint32_t(name["members"]["minVgprAllocation"]);}();
[&]() {
result.maxVgprAllocation=deserialize_uint32_t(name["members"]["maxVgprAllocation"]);}();
[&]() {
result.vgprAllocationGranularity=deserialize_uint32_t(name["members"]["vgprAllocationGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreProperties2AMD(VkPhysicalDeviceShaderCoreProperties2AMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreFeatures"]=[&]() {
    json return_nfpZxzO=json({});
    return serialize_VkShaderCorePropertiesFlagsAMD(name.shaderCoreFeatures);}();
result["members"]["activeComputeUnitCount"]=[&]() {
    json return_dmSQPCW=json({});
    return serialize_uint32_t(name.activeComputeUnitCount);}();
return result;}

    VkPhysicalDeviceShaderCoreProperties2AMD deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(json name){
        auto result=VkPhysicalDeviceShaderCoreProperties2AMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreFeatures=deserialize_VkShaderCorePropertiesFlagsAMD(name["members"]["shaderCoreFeatures"]);}();
[&]() {
result.activeComputeUnitCount=deserialize_uint32_t(name["members"]["activeComputeUnitCount"]);}();
return result;}

    json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(VkPipelineRasterizationConservativeStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WomoQUu=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name.flags);}();
result["members"]["conservativeRasterizationMode"]=[&]() {
    json return_OiRBxjW=json({});
    return serialize_VkConservativeRasterizationModeEXT(name.conservativeRasterizationMode);}();
result["members"]["extraPrimitiveOverestimationSize"]=[&]() {
    json return_GKsExPN=json({});
    return serialize_float(name.extraPrimitiveOverestimationSize);}();
return result;}

    VkPipelineRasterizationConservativeStateCreateInfoEXT deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationConservativeStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.conservativeRasterizationMode=deserialize_VkConservativeRasterizationModeEXT(name["members"]["conservativeRasterizationMode"]);}();
[&]() {
result.extraPrimitiveOverestimationSize=deserialize_float(name["members"]["extraPrimitiveOverestimationSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeatures(VkPhysicalDeviceDescriptorIndexingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_hEgQDnG=json({});
    return_hEgQDnG=[&]() {
    json return_vssmIka=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_hEgQDnG;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_zxTIcGh=json({});
    return_zxTIcGh=[&]() {
    json return_gniiRBU=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_zxTIcGh;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_PncuDYg=json({});
    return_PncuDYg=[&]() {
    json return_ZaGxmkW=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_PncuDYg;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_lBEjPwF=json({});
    return_lBEjPwF=[&]() {
    json return_rrmEjKp=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_lBEjPwF;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_lQDTFZt=json({});
    return_lQDTFZt=[&]() {
    json return_cVjtBUl=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_lQDTFZt;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_HaSYgRr=json({});
    return_HaSYgRr=[&]() {
    json return_UJvUkmk=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_HaSYgRr;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_uoQBXgO=json({});
    return_uoQBXgO=[&]() {
    json return_OVXEndv=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_uoQBXgO;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_PsDumTJ=json({});
    return_PsDumTJ=[&]() {
    json return_wyKufUh=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_PsDumTJ;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_NLdOhpI=json({});
    return_NLdOhpI=[&]() {
    json return_RUgEzKs=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_NLdOhpI;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_mJNMFnt=json({});
    return_mJNMFnt=[&]() {
    json return_fSCMOUi=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_mJNMFnt;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_QnEDtvB=json({});
    return_QnEDtvB=[&]() {
    json return_KRcyHYH=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_QnEDtvB;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_HhjqdCq=json({});
    return_HhjqdCq=[&]() {
    json return_ftiuWzF=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_HhjqdCq;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_TpRfWnm=json({});
    return_TpRfWnm=[&]() {
    json return_IMfksYQ=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_TpRfWnm;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_zOKexBd=json({});
    return_zOKexBd=[&]() {
    json return_VwesYkR=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_zOKexBd;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_vuwFhgO=json({});
    return_vuwFhgO=[&]() {
    json return_GIknhaT=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_vuwFhgO;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_rccyfAZ=json({});
    return_rccyfAZ=[&]() {
    json return_clTdYNq=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_rccyfAZ;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_IXrtCAI=json({});
    return_IXrtCAI=[&]() {
    json return_CiBQmwF=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_IXrtCAI;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_GmJfuIR=json({});
    return_GmJfuIR=[&]() {
    json return_bnvtDob=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_GmJfuIR;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_NpOJlys=json({});
    return_NpOJlys=[&]() {
    json return_jOdzoJc=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_NpOJlys;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_NGWPweM=json({});
    return_NGWPweM=[&]() {
    json return_aKDosya=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_NGWPweM;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeatures deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(VkPhysicalDeviceDescriptorIndexingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_hEgQDnG=json({});
    return_hEgQDnG=[&]() {
    json return_vssmIka=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_hEgQDnG;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_zxTIcGh=json({});
    return_zxTIcGh=[&]() {
    json return_gniiRBU=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_zxTIcGh;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_PncuDYg=json({});
    return_PncuDYg=[&]() {
    json return_ZaGxmkW=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_PncuDYg;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_lBEjPwF=json({});
    return_lBEjPwF=[&]() {
    json return_rrmEjKp=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_lBEjPwF;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_lQDTFZt=json({});
    return_lQDTFZt=[&]() {
    json return_cVjtBUl=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_lQDTFZt;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_HaSYgRr=json({});
    return_HaSYgRr=[&]() {
    json return_UJvUkmk=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_HaSYgRr;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_uoQBXgO=json({});
    return_uoQBXgO=[&]() {
    json return_OVXEndv=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_uoQBXgO;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_PsDumTJ=json({});
    return_PsDumTJ=[&]() {
    json return_wyKufUh=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_PsDumTJ;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_NLdOhpI=json({});
    return_NLdOhpI=[&]() {
    json return_RUgEzKs=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_NLdOhpI;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_mJNMFnt=json({});
    return_mJNMFnt=[&]() {
    json return_fSCMOUi=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_mJNMFnt;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_QnEDtvB=json({});
    return_QnEDtvB=[&]() {
    json return_KRcyHYH=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_QnEDtvB;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_HhjqdCq=json({});
    return_HhjqdCq=[&]() {
    json return_ftiuWzF=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_HhjqdCq;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_TpRfWnm=json({});
    return_TpRfWnm=[&]() {
    json return_IMfksYQ=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_TpRfWnm;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_zOKexBd=json({});
    return_zOKexBd=[&]() {
    json return_VwesYkR=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_zOKexBd;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_vuwFhgO=json({});
    return_vuwFhgO=[&]() {
    json return_GIknhaT=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_vuwFhgO;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_rccyfAZ=json({});
    return_rccyfAZ=[&]() {
    json return_clTdYNq=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_rccyfAZ;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_IXrtCAI=json({});
    return_IXrtCAI=[&]() {
    json return_CiBQmwF=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_IXrtCAI;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_GmJfuIR=json({});
    return_GmJfuIR=[&]() {
    json return_bnvtDob=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_GmJfuIR;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_NpOJlys=json({});
    return_NpOJlys=[&]() {
    json return_jOdzoJc=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_NpOJlys;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_NGWPweM=json({});
    return_NGWPweM=[&]() {
    json return_aKDosya=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_NGWPweM;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeaturesEXT deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingProperties(VkPhysicalDeviceDescriptorIndexingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_ePfTKxz=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_PdnVlJy=json({});
    return_PdnVlJy=[&]() {
    json return_eMJsmKw=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_PdnVlJy;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_UikgQrZ=json({});
    return_UikgQrZ=[&]() {
    json return_oNDObwS=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_UikgQrZ;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_MZyZLro=json({});
    return_MZyZLro=[&]() {
    json return_NkaZYGA=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_MZyZLro;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_LPiYJuk=json({});
    return_LPiYJuk=[&]() {
    json return_gsilbKy=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_LPiYJuk;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_uSHhHpY=json({});
    return_uSHhHpY=[&]() {
    json return_omvmlSZ=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_uSHhHpY;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_JLZLAdw=json({});
    return_JLZLAdw=[&]() {
    json return_sRBWmpC=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_JLZLAdw;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_duLJvYy=json({});
    return_duLJvYy=[&]() {
    json return_wbUDgmN=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_duLJvYy;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_uBzwYxC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_ndLKkPY=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_lJTShcn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_nhjbNXA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_dJmoFUt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_MkLVdjC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_vJwnLkI=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_haVYbbg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_HgKoHlu=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_CketgTI=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_StuMRpL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_YitCkOh=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_XLhApqv=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_OUlRYeR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_gmhAvGL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingProperties deserialize_VkPhysicalDeviceDescriptorIndexingProperties(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(VkPhysicalDeviceDescriptorIndexingPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_ePfTKxz=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_PdnVlJy=json({});
    return_PdnVlJy=[&]() {
    json return_eMJsmKw=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_PdnVlJy;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_UikgQrZ=json({});
    return_UikgQrZ=[&]() {
    json return_oNDObwS=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_UikgQrZ;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_MZyZLro=json({});
    return_MZyZLro=[&]() {
    json return_NkaZYGA=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_MZyZLro;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_LPiYJuk=json({});
    return_LPiYJuk=[&]() {
    json return_gsilbKy=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_LPiYJuk;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_uSHhHpY=json({});
    return_uSHhHpY=[&]() {
    json return_omvmlSZ=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_uSHhHpY;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_JLZLAdw=json({});
    return_JLZLAdw=[&]() {
    json return_sRBWmpC=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_JLZLAdw;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_duLJvYy=json({});
    return_duLJvYy=[&]() {
    json return_wbUDgmN=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_duLJvYy;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_uBzwYxC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_ndLKkPY=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_lJTShcn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_nhjbNXA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_dJmoFUt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_MkLVdjC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_vJwnLkI=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_haVYbbg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_HgKoHlu=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_CketgTI=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_StuMRpL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_YitCkOh=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_XLhApqv=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_OUlRYeR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_gmhAvGL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingPropertiesEXT deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(VkDescriptorSetLayoutBindingFlagsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_IYUIEJz=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_psbBeES=json({});
    
        if (name.pBindingFlags==NULL){
            return_psbBeES["null"]=true;
            return return_psbBeES;
        }
        
        return_psbBeES["members"]={};
        for(int psbBeES=0; psbBeES < name.bindingCount; psbBeES++){
            json temp;
            temp=[&]() {
    json return_hKMvVNY=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[psbBeES]);}();
            return_psbBeES["members"][std::to_string(psbBeES)].push_back(temp);
        }
        return return_psbBeES;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfo deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_GSDmXrM;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_GSDmXrM=NULL;
        }
    temp_GSDmXrM=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int BaIFguV=0; BaIFguV < result.bindingCount; BaIFguV++){
            [&]() {
temp_GSDmXrM[BaIFguV]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][BaIFguV]);}();;
        }
        }();result.pBindingFlags=temp_GSDmXrM;}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_IYUIEJz=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_psbBeES=json({});
    
        if (name.pBindingFlags==NULL){
            return_psbBeES["null"]=true;
            return return_psbBeES;
        }
        
        return_psbBeES["members"]={};
        for(int psbBeES=0; psbBeES < name.bindingCount; psbBeES++){
            json temp;
            temp=[&]() {
    json return_hKMvVNY=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[psbBeES]);}();
            return_psbBeES["members"][std::to_string(psbBeES)].push_back(temp);
        }
        return return_psbBeES;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfoEXT deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_GSDmXrM;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_GSDmXrM=NULL;
        }
    temp_GSDmXrM=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int BaIFguV=0; BaIFguV < result.bindingCount; BaIFguV++){
            [&]() {
temp_GSDmXrM[BaIFguV]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][BaIFguV]);}();;
        }
        }();result.pBindingFlags=temp_GSDmXrM;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(VkDescriptorSetVariableDescriptorCountAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_jILqZMd=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_xdXmyER=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_xdXmyER["null"]=true;
            return return_xdXmyER;
        }
        
        return_xdXmyER["members"]={};
        for(int xdXmyER=0; xdXmyER < name.descriptorSetCount; xdXmyER++){
            json temp;
            temp=[&]() {
    json return_ZchIgii=json({});
    return serialize_uint32_t(name.pDescriptorCounts[xdXmyER]);}();
            return_xdXmyER["members"][std::to_string(xdXmyER)].push_back(temp);
        }
        return return_xdXmyER;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfo deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_Tojhmyq;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_Tojhmyq=NULL;
        }
    temp_Tojhmyq=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int JomFdCn=0; JomFdCn < result.descriptorSetCount; JomFdCn++){
            [&]() {
temp_Tojhmyq[JomFdCn]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][JomFdCn]);}();;
        }
        }();result.pDescriptorCounts=temp_Tojhmyq;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_jILqZMd=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_xdXmyER=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_xdXmyER["null"]=true;
            return return_xdXmyER;
        }
        
        return_xdXmyER["members"]={};
        for(int xdXmyER=0; xdXmyER < name.descriptorSetCount; xdXmyER++){
            json temp;
            temp=[&]() {
    json return_ZchIgii=json({});
    return serialize_uint32_t(name.pDescriptorCounts[xdXmyER]);}();
            return_xdXmyER["members"][std::to_string(xdXmyER)].push_back(temp);
        }
        return return_xdXmyER;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfoEXT deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_Tojhmyq;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_Tojhmyq=NULL;
        }
    temp_Tojhmyq=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int JomFdCn=0; JomFdCn < result.descriptorSetCount; JomFdCn++){
            [&]() {
temp_Tojhmyq[JomFdCn]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][JomFdCn]);}();;
        }
        }();result.pDescriptorCounts=temp_Tojhmyq;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(VkDescriptorSetVariableDescriptorCountLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_mFaXfxc=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupport deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_mFaXfxc=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupportEXT deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupportEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkAttachmentDescription2(VkAttachmentDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nawCpRK=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_eHqYtWr=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_iZpanIw=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_XEUhenX=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_qihstHq=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_eHjQHff=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_NqCzzcs=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_ENxfGzM=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2 deserialize_VkAttachmentDescription2(json name){
        auto result=VkAttachmentDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescription2KHR(VkAttachmentDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nawCpRK=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_eHqYtWr=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_iZpanIw=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_XEUhenX=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_qihstHq=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_eHjQHff=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_NqCzzcs=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_ENxfGzM=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2KHR deserialize_VkAttachmentDescription2KHR(json name){
        auto result=VkAttachmentDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference2(VkAttachmentReference2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_ovbEJuP=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_esOlhCx=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2 deserialize_VkAttachmentReference2(json name){
        auto result=VkAttachmentReference2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkAttachmentReference2KHR(VkAttachmentReference2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_ovbEJuP=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_esOlhCx=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_CoZBOdX=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2KHR deserialize_VkAttachmentReference2KHR(json name){
        auto result=VkAttachmentReference2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkSubpassDescription2(VkSubpassDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_twlXwnh=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_WrCYJcV=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_pQEpmNo=json({});
    
        if (name.pInputAttachments==NULL){
            return_pQEpmNo["null"]=true;
            return return_pQEpmNo;
        }
        
        return_pQEpmNo["members"]={};
        for(int pQEpmNo=0; pQEpmNo < name.inputAttachmentCount; pQEpmNo++){
            json temp;
            temp=[&]() {
    json return_cYcsBJH=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[pQEpmNo]);}();
            return_pQEpmNo["members"][std::to_string(pQEpmNo)].push_back(temp);
        }
        return return_pQEpmNo;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_hhRpRwd=json({});
    
        if (name.pColorAttachments==NULL){
            return_hhRpRwd["null"]=true;
            return return_hhRpRwd;
        }
        
        return_hhRpRwd["members"]={};
        for(int hhRpRwd=0; hhRpRwd < name.colorAttachmentCount; hhRpRwd++){
            json temp;
            temp=[&]() {
    json return_KzTtChN=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[hhRpRwd]);}();
            return_hhRpRwd["members"][std::to_string(hhRpRwd)].push_back(temp);
        }
        return return_hhRpRwd;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_bUvAIfB=json({});
    
        if (name.pResolveAttachments==NULL){
            return_bUvAIfB["null"]=true;
            return return_bUvAIfB;
        }
        
        return_bUvAIfB["members"]={};
        for(int bUvAIfB=0; bUvAIfB < name.colorAttachmentCount; bUvAIfB++){
            json temp;
            temp=[&]() {
    json return_nzbONUN=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[bUvAIfB]);}();
            return_bUvAIfB["members"][std::to_string(bUvAIfB)].push_back(temp);
        }
        return return_bUvAIfB;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_XANNhPu=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_XANNhPu["null"]=true;
            return return_XANNhPu;
        }
        return_XANNhPu=[&]() {
    json return_DNlIOLu=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_XANNhPu;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_IVPXrnh=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_trPGtlT=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_trPGtlT["null"]=true;
            return return_trPGtlT;
        }
        
        return_trPGtlT["members"]={};
        for(int trPGtlT=0; trPGtlT < name.preserveAttachmentCount; trPGtlT++){
            json temp;
            temp=[&]() {
    json return_hpeWfFk=json({});
    return serialize_uint32_t(name.pPreserveAttachments[trPGtlT]);}();
            return_trPGtlT["members"][std::to_string(trPGtlT)].push_back(temp);
        }
        return return_trPGtlT;
        }();
return result;}

    VkSubpassDescription2 deserialize_VkSubpassDescription2(json name){
        auto result=VkSubpassDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_hDhLyss;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_hDhLyss=NULL;
        }
    temp_hDhLyss=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int SyuiaMe=0; SyuiaMe < result.inputAttachmentCount; SyuiaMe++){
            [&]() {
temp_hDhLyss[SyuiaMe]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][SyuiaMe]);}();;
        }
        }();result.pInputAttachments=temp_hDhLyss;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_JgfemBW;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_JgfemBW=NULL;
        }
    temp_JgfemBW=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int AHxgzRZ=0; AHxgzRZ < result.colorAttachmentCount; AHxgzRZ++){
            [&]() {
temp_JgfemBW[AHxgzRZ]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][AHxgzRZ]);}();;
        }
        }();result.pColorAttachments=temp_JgfemBW;}();
[&]() {
VkAttachmentReference2* temp_YpkcbxH;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_YpkcbxH=NULL;
        }
    temp_YpkcbxH=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int LvElVDS=0; LvElVDS < result.colorAttachmentCount; LvElVDS++){
            [&]() {
temp_YpkcbxH[LvElVDS]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][LvElVDS]);}();;
        }
        }();result.pResolveAttachments=temp_YpkcbxH;}();
[&]() {
VkAttachmentReference2* temp_qfILqVR;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_qfILqVR=NULL;
        }
    [&]() {
*(temp_qfILqVR)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_qfILqVR;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_vDAbduV;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_vDAbduV=NULL;
        }
    temp_vDAbduV=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int XDqMsuq=0; XDqMsuq < result.preserveAttachmentCount; XDqMsuq++){
            [&]() {
temp_vDAbduV[XDqMsuq]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][XDqMsuq]);}();;
        }
        }();result.pPreserveAttachments=temp_vDAbduV;}();
return result;}

    json serialize_VkSubpassDescription2KHR(VkSubpassDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_twlXwnh=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_utNYxVZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_WrCYJcV=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_pQEpmNo=json({});
    
        if (name.pInputAttachments==NULL){
            return_pQEpmNo["null"]=true;
            return return_pQEpmNo;
        }
        
        return_pQEpmNo["members"]={};
        for(int pQEpmNo=0; pQEpmNo < name.inputAttachmentCount; pQEpmNo++){
            json temp;
            temp=[&]() {
    json return_cYcsBJH=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[pQEpmNo]);}();
            return_pQEpmNo["members"][std::to_string(pQEpmNo)].push_back(temp);
        }
        return return_pQEpmNo;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_hhRpRwd=json({});
    
        if (name.pColorAttachments==NULL){
            return_hhRpRwd["null"]=true;
            return return_hhRpRwd;
        }
        
        return_hhRpRwd["members"]={};
        for(int hhRpRwd=0; hhRpRwd < name.colorAttachmentCount; hhRpRwd++){
            json temp;
            temp=[&]() {
    json return_KzTtChN=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[hhRpRwd]);}();
            return_hhRpRwd["members"][std::to_string(hhRpRwd)].push_back(temp);
        }
        return return_hhRpRwd;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_bUvAIfB=json({});
    
        if (name.pResolveAttachments==NULL){
            return_bUvAIfB["null"]=true;
            return return_bUvAIfB;
        }
        
        return_bUvAIfB["members"]={};
        for(int bUvAIfB=0; bUvAIfB < name.colorAttachmentCount; bUvAIfB++){
            json temp;
            temp=[&]() {
    json return_nzbONUN=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[bUvAIfB]);}();
            return_bUvAIfB["members"][std::to_string(bUvAIfB)].push_back(temp);
        }
        return return_bUvAIfB;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_XANNhPu=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_XANNhPu["null"]=true;
            return return_XANNhPu;
        }
        return_XANNhPu=[&]() {
    json return_DNlIOLu=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_XANNhPu;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_IVPXrnh=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_trPGtlT=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_trPGtlT["null"]=true;
            return return_trPGtlT;
        }
        
        return_trPGtlT["members"]={};
        for(int trPGtlT=0; trPGtlT < name.preserveAttachmentCount; trPGtlT++){
            json temp;
            temp=[&]() {
    json return_hpeWfFk=json({});
    return serialize_uint32_t(name.pPreserveAttachments[trPGtlT]);}();
            return_trPGtlT["members"][std::to_string(trPGtlT)].push_back(temp);
        }
        return return_trPGtlT;
        }();
return result;}

    VkSubpassDescription2KHR deserialize_VkSubpassDescription2KHR(json name){
        auto result=VkSubpassDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_hDhLyss;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_hDhLyss=NULL;
        }
    temp_hDhLyss=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int SyuiaMe=0; SyuiaMe < result.inputAttachmentCount; SyuiaMe++){
            [&]() {
temp_hDhLyss[SyuiaMe]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][SyuiaMe]);}();;
        }
        }();result.pInputAttachments=temp_hDhLyss;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_JgfemBW;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_JgfemBW=NULL;
        }
    temp_JgfemBW=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int AHxgzRZ=0; AHxgzRZ < result.colorAttachmentCount; AHxgzRZ++){
            [&]() {
temp_JgfemBW[AHxgzRZ]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][AHxgzRZ]);}();;
        }
        }();result.pColorAttachments=temp_JgfemBW;}();
[&]() {
VkAttachmentReference2* temp_YpkcbxH;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_YpkcbxH=NULL;
        }
    temp_YpkcbxH=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int LvElVDS=0; LvElVDS < result.colorAttachmentCount; LvElVDS++){
            [&]() {
temp_YpkcbxH[LvElVDS]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][LvElVDS]);}();;
        }
        }();result.pResolveAttachments=temp_YpkcbxH;}();
[&]() {
VkAttachmentReference2* temp_qfILqVR;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_qfILqVR=NULL;
        }
    [&]() {
*(temp_qfILqVR)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_qfILqVR;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_vDAbduV;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_vDAbduV=NULL;
        }
    temp_vDAbduV=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int XDqMsuq=0; XDqMsuq < result.preserveAttachmentCount; XDqMsuq++){
            [&]() {
temp_vDAbduV[XDqMsuq]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][XDqMsuq]);}();;
        }
        }();result.pPreserveAttachments=temp_vDAbduV;}();
return result;}

    json serialize_VkSubpassDependency2(VkSubpassDependency2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_FHiHEJh=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_zzIBWow=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_NOGSZmu=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_CklJUHW=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_hGxYObz=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_znJgWCn=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_dBndcKo=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_qwNWSGo=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2 deserialize_VkSubpassDependency2(json name){
        auto result=VkSubpassDependency2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkSubpassDependency2KHR(VkSubpassDependency2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_FHiHEJh=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_zzIBWow=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_NOGSZmu=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_CklJUHW=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_hGxYObz=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_znJgWCn=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_dBndcKo=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_qwNWSGo=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2KHR deserialize_VkSubpassDependency2KHR(json name){
        auto result=VkSubpassDependency2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo2(VkRenderPassCreateInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FRUiOWf=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_xONhneF=json({});
    
        if (name.pAttachments==NULL){
            return_xONhneF["null"]=true;
            return return_xONhneF;
        }
        
        return_xONhneF["members"]={};
        for(int xONhneF=0; xONhneF < name.attachmentCount; xONhneF++){
            json temp;
            temp=[&]() {
    json return_ujDDSzh=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[xONhneF]);}();
            return_xONhneF["members"][std::to_string(xONhneF)].push_back(temp);
        }
        return return_xONhneF;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_JpvufHk=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_tAavVlU=json({});
    
        if (name.pSubpasses==NULL){
            return_tAavVlU["null"]=true;
            return return_tAavVlU;
        }
        
        return_tAavVlU["members"]={};
        for(int tAavVlU=0; tAavVlU < name.subpassCount; tAavVlU++){
            json temp;
            temp=[&]() {
    json return_uUjrZct=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[tAavVlU]);}();
            return_tAavVlU["members"][std::to_string(tAavVlU)].push_back(temp);
        }
        return return_tAavVlU;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_eUodTpK=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_EyJnrdH=json({});
    
        if (name.pDependencies==NULL){
            return_EyJnrdH["null"]=true;
            return return_EyJnrdH;
        }
        
        return_EyJnrdH["members"]={};
        for(int EyJnrdH=0; EyJnrdH < name.dependencyCount; EyJnrdH++){
            json temp;
            temp=[&]() {
    json return_CFjdqhO=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[EyJnrdH]);}();
            return_EyJnrdH["members"][std::to_string(EyJnrdH)].push_back(temp);
        }
        return return_EyJnrdH;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_hLfpiDS=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_XCbrYJu=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_XCbrYJu["null"]=true;
            return return_XCbrYJu;
        }
        
        return_XCbrYJu["members"]={};
        for(int XCbrYJu=0; XCbrYJu < name.correlatedViewMaskCount; XCbrYJu++){
            json temp;
            temp=[&]() {
    json return_IRtoEoG=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[XCbrYJu]);}();
            return_XCbrYJu["members"][std::to_string(XCbrYJu)].push_back(temp);
        }
        return return_XCbrYJu;
        }();
return result;}

    VkRenderPassCreateInfo2 deserialize_VkRenderPassCreateInfo2(json name){
        auto result=VkRenderPassCreateInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_jQGAQNt;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_jQGAQNt=NULL;
        }
    temp_jQGAQNt=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int pcevbwy=0; pcevbwy < result.attachmentCount; pcevbwy++){
            [&]() {
temp_jQGAQNt[pcevbwy]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][pcevbwy]);}();;
        }
        }();result.pAttachments=temp_jQGAQNt;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_iguCDfK;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_iguCDfK=NULL;
        }
    temp_iguCDfK=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int FpfoUGz=0; FpfoUGz < result.subpassCount; FpfoUGz++){
            [&]() {
temp_iguCDfK[FpfoUGz]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][FpfoUGz]);}();;
        }
        }();result.pSubpasses=temp_iguCDfK;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_dGYjXPb;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_dGYjXPb=NULL;
        }
    temp_dGYjXPb=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int AIlcPMZ=0; AIlcPMZ < result.dependencyCount; AIlcPMZ++){
            [&]() {
temp_dGYjXPb[AIlcPMZ]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][AIlcPMZ]);}();;
        }
        }();result.pDependencies=temp_dGYjXPb;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_mQJzBwX;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_mQJzBwX=NULL;
        }
    temp_mQJzBwX=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int UfytbuU=0; UfytbuU < result.correlatedViewMaskCount; UfytbuU++){
            [&]() {
temp_mQJzBwX[UfytbuU]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][UfytbuU]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_mQJzBwX;}();
return result;}

    json serialize_VkRenderPassCreateInfo2KHR(VkRenderPassCreateInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FRUiOWf=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_xONhneF=json({});
    
        if (name.pAttachments==NULL){
            return_xONhneF["null"]=true;
            return return_xONhneF;
        }
        
        return_xONhneF["members"]={};
        for(int xONhneF=0; xONhneF < name.attachmentCount; xONhneF++){
            json temp;
            temp=[&]() {
    json return_ujDDSzh=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[xONhneF]);}();
            return_xONhneF["members"][std::to_string(xONhneF)].push_back(temp);
        }
        return return_xONhneF;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_JpvufHk=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_tAavVlU=json({});
    
        if (name.pSubpasses==NULL){
            return_tAavVlU["null"]=true;
            return return_tAavVlU;
        }
        
        return_tAavVlU["members"]={};
        for(int tAavVlU=0; tAavVlU < name.subpassCount; tAavVlU++){
            json temp;
            temp=[&]() {
    json return_uUjrZct=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[tAavVlU]);}();
            return_tAavVlU["members"][std::to_string(tAavVlU)].push_back(temp);
        }
        return return_tAavVlU;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_eUodTpK=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_EyJnrdH=json({});
    
        if (name.pDependencies==NULL){
            return_EyJnrdH["null"]=true;
            return return_EyJnrdH;
        }
        
        return_EyJnrdH["members"]={};
        for(int EyJnrdH=0; EyJnrdH < name.dependencyCount; EyJnrdH++){
            json temp;
            temp=[&]() {
    json return_CFjdqhO=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[EyJnrdH]);}();
            return_EyJnrdH["members"][std::to_string(EyJnrdH)].push_back(temp);
        }
        return return_EyJnrdH;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_hLfpiDS=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_XCbrYJu=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_XCbrYJu["null"]=true;
            return return_XCbrYJu;
        }
        
        return_XCbrYJu["members"]={};
        for(int XCbrYJu=0; XCbrYJu < name.correlatedViewMaskCount; XCbrYJu++){
            json temp;
            temp=[&]() {
    json return_IRtoEoG=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[XCbrYJu]);}();
            return_XCbrYJu["members"][std::to_string(XCbrYJu)].push_back(temp);
        }
        return return_XCbrYJu;
        }();
return result;}

    VkRenderPassCreateInfo2KHR deserialize_VkRenderPassCreateInfo2KHR(json name){
        auto result=VkRenderPassCreateInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_jQGAQNt;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_jQGAQNt=NULL;
        }
    temp_jQGAQNt=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int pcevbwy=0; pcevbwy < result.attachmentCount; pcevbwy++){
            [&]() {
temp_jQGAQNt[pcevbwy]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][pcevbwy]);}();;
        }
        }();result.pAttachments=temp_jQGAQNt;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_iguCDfK;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_iguCDfK=NULL;
        }
    temp_iguCDfK=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int FpfoUGz=0; FpfoUGz < result.subpassCount; FpfoUGz++){
            [&]() {
temp_iguCDfK[FpfoUGz]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][FpfoUGz]);}();;
        }
        }();result.pSubpasses=temp_iguCDfK;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_dGYjXPb;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_dGYjXPb=NULL;
        }
    temp_dGYjXPb=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int AIlcPMZ=0; AIlcPMZ < result.dependencyCount; AIlcPMZ++){
            [&]() {
temp_dGYjXPb[AIlcPMZ]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][AIlcPMZ]);}();;
        }
        }();result.pDependencies=temp_dGYjXPb;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_mQJzBwX;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_mQJzBwX=NULL;
        }
    temp_mQJzBwX=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int UfytbuU=0; UfytbuU < result.correlatedViewMaskCount; UfytbuU++){
            [&]() {
temp_mQJzBwX[UfytbuU]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][UfytbuU]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_mQJzBwX;}();
return result;}

    json serialize_VkSubpassBeginInfo(VkSubpassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_XADdvrU=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfo deserialize_VkSubpassBeginInfo(json name){
        auto result=VkSubpassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassBeginInfoKHR(VkSubpassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_XADdvrU=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfoKHR deserialize_VkSubpassBeginInfoKHR(json name){
        auto result=VkSubpassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassEndInfo(VkSubpassEndInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfo deserialize_VkSubpassEndInfo(json name){
        auto result=VkSubpassEndInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
return result;}

    json serialize_VkSubpassEndInfoKHR(VkSubpassEndInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfoKHR deserialize_VkSubpassEndInfoKHR(json name){
        auto result=VkSubpassEndInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(VkPhysicalDeviceTimelineSemaphoreFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_esdonFM=json({});
    return_esdonFM=[&]() {
    json return_birAWVc=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_esdonFM;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeatures deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_esdonFM=json({});
    return_esdonFM=[&]() {
    json return_birAWVc=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_esdonFM;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeaturesKHR deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreProperties(VkPhysicalDeviceTimelineSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_vYPlMuN=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreProperties deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(VkPhysicalDeviceTimelineSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_vYPlMuN=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphorePropertiesKHR deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfo(VkSemaphoreTypeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_tMbBUzn=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_ZfXUaqr=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfo deserialize_VkSemaphoreTypeCreateInfo(json name){
        auto result=VkSemaphoreTypeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfoKHR(VkSemaphoreTypeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_tMbBUzn=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_ZfXUaqr=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfoKHR deserialize_VkSemaphoreTypeCreateInfoKHR(json name){
        auto result=VkSemaphoreTypeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfo(VkTimelineSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_yeRvvbe=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_tIdZsrh=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_tIdZsrh["null"]=true;
            return return_tIdZsrh;
        }
        
        return_tIdZsrh["members"]={};
        for(int tIdZsrh=0; tIdZsrh < name.waitSemaphoreValueCount; tIdZsrh++){
            json temp;
            temp=[&]() {
    json return_qqtlhmv=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[tIdZsrh]);}();
            return_tIdZsrh["members"][std::to_string(tIdZsrh)].push_back(temp);
        }
        return return_tIdZsrh;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_PpFYcUx=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_fSVptyG=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_fSVptyG["null"]=true;
            return return_fSVptyG;
        }
        
        return_fSVptyG["members"]={};
        for(int fSVptyG=0; fSVptyG < name.signalSemaphoreValueCount; fSVptyG++){
            json temp;
            temp=[&]() {
    json return_snLwcij=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[fSVptyG]);}();
            return_fSVptyG["members"][std::to_string(fSVptyG)].push_back(temp);
        }
        return return_fSVptyG;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfo deserialize_VkTimelineSemaphoreSubmitInfo(json name){
        auto result=VkTimelineSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_ZoZoOmx;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_ZoZoOmx=NULL;
        }
    temp_ZoZoOmx=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int wXCAlnp=0; wXCAlnp < result.waitSemaphoreValueCount; wXCAlnp++){
            [&]() {
temp_ZoZoOmx[wXCAlnp]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][wXCAlnp]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_ZoZoOmx;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_WbupVtQ;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_WbupVtQ=NULL;
        }
    temp_WbupVtQ=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int gBeHPDW=0; gBeHPDW < result.signalSemaphoreValueCount; gBeHPDW++){
            [&]() {
temp_WbupVtQ[gBeHPDW]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][gBeHPDW]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_WbupVtQ;}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfoKHR(VkTimelineSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_yeRvvbe=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_tIdZsrh=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_tIdZsrh["null"]=true;
            return return_tIdZsrh;
        }
        
        return_tIdZsrh["members"]={};
        for(int tIdZsrh=0; tIdZsrh < name.waitSemaphoreValueCount; tIdZsrh++){
            json temp;
            temp=[&]() {
    json return_qqtlhmv=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[tIdZsrh]);}();
            return_tIdZsrh["members"][std::to_string(tIdZsrh)].push_back(temp);
        }
        return return_tIdZsrh;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_PpFYcUx=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_fSVptyG=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_fSVptyG["null"]=true;
            return return_fSVptyG;
        }
        
        return_fSVptyG["members"]={};
        for(int fSVptyG=0; fSVptyG < name.signalSemaphoreValueCount; fSVptyG++){
            json temp;
            temp=[&]() {
    json return_snLwcij=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[fSVptyG]);}();
            return_fSVptyG["members"][std::to_string(fSVptyG)].push_back(temp);
        }
        return return_fSVptyG;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfoKHR deserialize_VkTimelineSemaphoreSubmitInfoKHR(json name){
        auto result=VkTimelineSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_ZoZoOmx;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_ZoZoOmx=NULL;
        }
    temp_ZoZoOmx=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int wXCAlnp=0; wXCAlnp < result.waitSemaphoreValueCount; wXCAlnp++){
            [&]() {
temp_ZoZoOmx[wXCAlnp]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][wXCAlnp]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_ZoZoOmx;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_WbupVtQ;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_WbupVtQ=NULL;
        }
    temp_WbupVtQ=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int gBeHPDW=0; gBeHPDW < result.signalSemaphoreValueCount; gBeHPDW++){
            [&]() {
temp_WbupVtQ[gBeHPDW]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][gBeHPDW]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_WbupVtQ;}();
return result;}

    json serialize_VkSemaphoreWaitInfo(VkSemaphoreWaitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sEWXovW=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_zhhCEqd=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_wVuQUcu=json({});
    
        if (name.pSemaphores==NULL){
            return_wVuQUcu["null"]=true;
            return return_wVuQUcu;
        }
        
        return_wVuQUcu["members"]={};
        for(int wVuQUcu=0; wVuQUcu < name.semaphoreCount; wVuQUcu++){
            json temp;
            temp=[&]() {
    json return_NNfdVee=json({});
    return serialize_VkSemaphore(name.pSemaphores[wVuQUcu]);}();
            return_wVuQUcu["members"][std::to_string(wVuQUcu)].push_back(temp);
        }
        return return_wVuQUcu;
        }();
result["members"]["pValues"]=[&]() {
    json return_NlqKMgE=json({});
    
        if (name.pValues==NULL){
            return_NlqKMgE["null"]=true;
            return return_NlqKMgE;
        }
        
        return_NlqKMgE["members"]={};
        for(int NlqKMgE=0; NlqKMgE < name.semaphoreCount; NlqKMgE++){
            json temp;
            temp=[&]() {
    json return_SVAninP=json({});
    return serialize_uint64_t(name.pValues[NlqKMgE]);}();
            return_NlqKMgE["members"][std::to_string(NlqKMgE)].push_back(temp);
        }
        return return_NlqKMgE;
        }();
return result;}

    VkSemaphoreWaitInfo deserialize_VkSemaphoreWaitInfo(json name){
        auto result=VkSemaphoreWaitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_nZbSKXR;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_nZbSKXR=NULL;
        }
    temp_nZbSKXR=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int knmXsbS=0; knmXsbS < result.semaphoreCount; knmXsbS++){
            [&]() {
temp_nZbSKXR[knmXsbS]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][knmXsbS]);}();;
        }
        }();result.pSemaphores=temp_nZbSKXR;}();
[&]() {
uint64_t* temp_VAwEENg;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_VAwEENg=NULL;
        }
    temp_VAwEENg=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int vYOzHfi=0; vYOzHfi < result.semaphoreCount; vYOzHfi++){
            [&]() {
temp_VAwEENg[vYOzHfi]=deserialize_uint64_t(name["members"]["pValues"]["members"][vYOzHfi]);}();;
        }
        }();result.pValues=temp_VAwEENg;}();
return result;}

    json serialize_VkSemaphoreWaitInfoKHR(VkSemaphoreWaitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sEWXovW=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_zhhCEqd=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_wVuQUcu=json({});
    
        if (name.pSemaphores==NULL){
            return_wVuQUcu["null"]=true;
            return return_wVuQUcu;
        }
        
        return_wVuQUcu["members"]={};
        for(int wVuQUcu=0; wVuQUcu < name.semaphoreCount; wVuQUcu++){
            json temp;
            temp=[&]() {
    json return_NNfdVee=json({});
    return serialize_VkSemaphore(name.pSemaphores[wVuQUcu]);}();
            return_wVuQUcu["members"][std::to_string(wVuQUcu)].push_back(temp);
        }
        return return_wVuQUcu;
        }();
result["members"]["pValues"]=[&]() {
    json return_NlqKMgE=json({});
    
        if (name.pValues==NULL){
            return_NlqKMgE["null"]=true;
            return return_NlqKMgE;
        }
        
        return_NlqKMgE["members"]={};
        for(int NlqKMgE=0; NlqKMgE < name.semaphoreCount; NlqKMgE++){
            json temp;
            temp=[&]() {
    json return_SVAninP=json({});
    return serialize_uint64_t(name.pValues[NlqKMgE]);}();
            return_NlqKMgE["members"][std::to_string(NlqKMgE)].push_back(temp);
        }
        return return_NlqKMgE;
        }();
return result;}

    VkSemaphoreWaitInfoKHR deserialize_VkSemaphoreWaitInfoKHR(json name){
        auto result=VkSemaphoreWaitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_nZbSKXR;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_nZbSKXR=NULL;
        }
    temp_nZbSKXR=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int knmXsbS=0; knmXsbS < result.semaphoreCount; knmXsbS++){
            [&]() {
temp_nZbSKXR[knmXsbS]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][knmXsbS]);}();;
        }
        }();result.pSemaphores=temp_nZbSKXR;}();
[&]() {
uint64_t* temp_VAwEENg;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_VAwEENg=NULL;
        }
    temp_VAwEENg=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int vYOzHfi=0; vYOzHfi < result.semaphoreCount; vYOzHfi++){
            [&]() {
temp_VAwEENg[vYOzHfi]=deserialize_uint64_t(name["members"]["pValues"]["members"][vYOzHfi]);}();;
        }
        }();result.pValues=temp_VAwEENg;}();
return result;}

    json serialize_VkSemaphoreSignalInfo(VkSemaphoreSignalInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_bjStxzc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_lvQlVTe=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfo deserialize_VkSemaphoreSignalInfo(json name){
        auto result=VkSemaphoreSignalInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkSemaphoreSignalInfoKHR(VkSemaphoreSignalInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_bjStxzc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_lvQlVTe=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfoKHR deserialize_VkSemaphoreSignalInfoKHR(json name){
        auto result=VkSemaphoreSignalInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkVertexInputBindingDivisorDescriptionEXT(VkVertexInputBindingDivisorDescriptionEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_BpBrDUS=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["divisor"]=[&]() {
    json return_mUhSyhU=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDivisorDescriptionEXT deserialize_VkVertexInputBindingDivisorDescriptionEXT(json name){
        auto result=VkVertexInputBindingDivisorDescriptionEXT();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(VkPipelineVertexInputDivisorStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexBindingDivisorCount"]=[&]() {
    json return_GEZwuVO=json({});
    return serialize_uint32_t(name.vertexBindingDivisorCount);}();
result["members"]["pVertexBindingDivisors"]=[&]() {
    json return_HoBZOIg=json({});
    
        if (name.pVertexBindingDivisors==NULL){
            return_HoBZOIg["null"]=true;
            return return_HoBZOIg;
        }
        
        return_HoBZOIg["members"]={};
        for(int HoBZOIg=0; HoBZOIg < name.vertexBindingDivisorCount; HoBZOIg++){
            json temp;
            temp=[&]() {
    json return_Krgoqne=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(name.pVertexBindingDivisors[HoBZOIg]);}();
            return_HoBZOIg["members"][std::to_string(HoBZOIg)].push_back(temp);
        }
        return return_HoBZOIg;
        }();
return result;}

    VkPipelineVertexInputDivisorStateCreateInfoEXT deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(json name){
        auto result=VkPipelineVertexInputDivisorStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.vertexBindingDivisorCount=deserialize_uint32_t(name["members"]["vertexBindingDivisorCount"]);}();
[&]() {
VkVertexInputBindingDivisorDescriptionEXT* temp_VFKnMlm;[&]() {

        if (name["members"]["pVertexBindingDivisors"].contains("null")){
        temp_VFKnMlm=NULL;
        }
    temp_VFKnMlm=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(result.vertexBindingDivisorCount*sizeof(VkVertexInputBindingDivisorDescriptionEXT));
        for (int xlfQjkd=0; xlfQjkd < result.vertexBindingDivisorCount; xlfQjkd++){
            [&]() {
temp_VFKnMlm[xlfQjkd]=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name["members"]["pVertexBindingDivisors"]["members"][xlfQjkd]);}();;
        }
        }();result.pVertexBindingDivisors=temp_VFKnMlm;}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVertexAttribDivisor"]=[&]() {
    json return_kfYAEtB=json({});
    return serialize_uint32_t(name.maxVertexAttribDivisor);}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVertexAttribDivisor=deserialize_uint32_t(name["members"]["maxVertexAttribDivisor"]);}();
return result;}

    json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(VkPhysicalDevicePCIBusInfoPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pciDomain"]=[&]() {
    json return_SVYNMje=json({});
    return serialize_uint32_t(name.pciDomain);}();
result["members"]["pciBus"]=[&]() {
    json return_mkuKWTI=json({});
    return serialize_uint32_t(name.pciBus);}();
result["members"]["pciDevice"]=[&]() {
    json return_mtEPXOs=json({});
    return serialize_uint32_t(name.pciDevice);}();
result["members"]["pciFunction"]=[&]() {
    json return_salnJZO=json({});
    return serialize_uint32_t(name.pciFunction);}();
return result;}

    VkPhysicalDevicePCIBusInfoPropertiesEXT deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(json name){
        auto result=VkPhysicalDevicePCIBusInfoPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pciDomain=deserialize_uint32_t(name["members"]["pciDomain"]);}();
[&]() {
result.pciBus=deserialize_uint32_t(name["members"]["pciBus"]);}();
[&]() {
result.pciDevice=deserialize_uint32_t(name["members"]["pciDevice"]);}();
[&]() {
result.pciFunction=deserialize_uint32_t(name["members"]["pciFunction"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkCommandBufferInheritanceConditionalRenderingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRenderingEnable"]=[&]() {
    json return_lfOPRji=json({});
    return_lfOPRji=[&]() {
    json return_LNvrOsH=json({});
    return serialize_uint32_t(name.conditionalRenderingEnable);}();return return_lfOPRji;}();
return result;}

    VkCommandBufferInheritanceConditionalRenderingInfoEXT deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(json name){
        auto result=VkCommandBufferInheritanceConditionalRenderingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.conditionalRenderingEnable=deserialize_uint32_t(name["members"]["conditionalRenderingEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeatures(VkPhysicalDevice8BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_cUzGUfG=json({});
    return_cUzGUfG=[&]() {
    json return_pCcCIik=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_cUzGUfG;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_nwBVDAM=json({});
    return_nwBVDAM=[&]() {
    json return_XENtzYw=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_nwBVDAM;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_UGLYbTl=json({});
    return_UGLYbTl=[&]() {
    json return_suqDaQO=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_UGLYbTl;}();
return result;}

    VkPhysicalDevice8BitStorageFeatures deserialize_VkPhysicalDevice8BitStorageFeatures(json name){
        auto result=VkPhysicalDevice8BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeaturesKHR(VkPhysicalDevice8BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_cUzGUfG=json({});
    return_cUzGUfG=[&]() {
    json return_pCcCIik=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_cUzGUfG;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_nwBVDAM=json({});
    return_nwBVDAM=[&]() {
    json return_XENtzYw=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_nwBVDAM;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_UGLYbTl=json({});
    return_UGLYbTl=[&]() {
    json return_suqDaQO=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_UGLYbTl;}();
return result;}

    VkPhysicalDevice8BitStorageFeaturesKHR deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice8BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkPhysicalDeviceConditionalRenderingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRendering"]=[&]() {
    json return_dsrcpZd=json({});
    return_dsrcpZd=[&]() {
    json return_AzdjKHb=json({});
    return serialize_uint32_t(name.conditionalRendering);}();return return_dsrcpZd;}();
result["members"]["inheritedConditionalRendering"]=[&]() {
    json return_ztvqchE=json({});
    return_ztvqchE=[&]() {
    json return_NrkaCkr=json({});
    return serialize_uint32_t(name.inheritedConditionalRendering);}();return return_ztvqchE;}();
return result;}

    VkPhysicalDeviceConditionalRenderingFeaturesEXT deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceConditionalRenderingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.conditionalRendering=deserialize_uint32_t(name["members"]["conditionalRendering"]);}();}();
[&]() {
[&]() {
result.inheritedConditionalRendering=deserialize_uint32_t(name["members"]["inheritedConditionalRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(VkPhysicalDeviceVulkanMemoryModelFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_DIWTENw=json({});
    return_DIWTENw=[&]() {
    json return_VsbQVeU=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_DIWTENw;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_vZbiJNO=json({});
    return_vZbiJNO=[&]() {
    json return_mkgUNIp=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_vZbiJNO;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_HEClEDl=json({});
    return_HEClEDl=[&]() {
    json return_LXRWIYh=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_HEClEDl;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeatures deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_DIWTENw=json({});
    return_DIWTENw=[&]() {
    json return_VsbQVeU=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_DIWTENw;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_vZbiJNO=json({});
    return_vZbiJNO=[&]() {
    json return_mkgUNIp=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_vZbiJNO;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_HEClEDl=json({});
    return_HEClEDl=[&]() {
    json return_LXRWIYh=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_HEClEDl;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeaturesKHR deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64Features(VkPhysicalDeviceShaderAtomicInt64Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_jdDrghC=json({});
    return_jdDrghC=[&]() {
    json return_tORLEiQ=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_jdDrghC;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_phsryIj=json({});
    return_phsryIj=[&]() {
    json return_cmPSQhS=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_phsryIj;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64Features deserialize_VkPhysicalDeviceShaderAtomicInt64Features(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_jdDrghC=json({});
    return_jdDrghC=[&]() {
    json return_tORLEiQ=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_jdDrghC;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_phsryIj=json({});
    return_phsryIj=[&]() {
    json return_cmPSQhS=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_phsryIj;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64FeaturesKHR deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat32Atomics"]=[&]() {
    json return_vBSrGeN=json({});
    return_vBSrGeN=[&]() {
    json return_Ljbxedi=json({});
    return serialize_uint32_t(name.shaderBufferFloat32Atomics);}();return return_vBSrGeN;}();
result["members"]["shaderBufferFloat32AtomicAdd"]=[&]() {
    json return_gStMwtq=json({});
    return_gStMwtq=[&]() {
    json return_CbgPUSt=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicAdd);}();return return_gStMwtq;}();
result["members"]["shaderBufferFloat64Atomics"]=[&]() {
    json return_cuACDmt=json({});
    return_cuACDmt=[&]() {
    json return_WreqRWR=json({});
    return serialize_uint32_t(name.shaderBufferFloat64Atomics);}();return return_cuACDmt;}();
result["members"]["shaderBufferFloat64AtomicAdd"]=[&]() {
    json return_qmmVToW=json({});
    return_qmmVToW=[&]() {
    json return_ipKlGAP=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicAdd);}();return return_qmmVToW;}();
result["members"]["shaderSharedFloat32Atomics"]=[&]() {
    json return_Tgqfptq=json({});
    return_Tgqfptq=[&]() {
    json return_gGOOVLT=json({});
    return serialize_uint32_t(name.shaderSharedFloat32Atomics);}();return return_Tgqfptq;}();
result["members"]["shaderSharedFloat32AtomicAdd"]=[&]() {
    json return_NJBpntU=json({});
    return_NJBpntU=[&]() {
    json return_tWIfLCM=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicAdd);}();return return_NJBpntU;}();
result["members"]["shaderSharedFloat64Atomics"]=[&]() {
    json return_pFUbjAS=json({});
    return_pFUbjAS=[&]() {
    json return_rAfbSPo=json({});
    return serialize_uint32_t(name.shaderSharedFloat64Atomics);}();return return_pFUbjAS;}();
result["members"]["shaderSharedFloat64AtomicAdd"]=[&]() {
    json return_nJigPlP=json({});
    return_nJigPlP=[&]() {
    json return_nqMyfYP=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicAdd);}();return return_nJigPlP;}();
result["members"]["shaderImageFloat32Atomics"]=[&]() {
    json return_GgJqDCW=json({});
    return_GgJqDCW=[&]() {
    json return_domUhAZ=json({});
    return serialize_uint32_t(name.shaderImageFloat32Atomics);}();return return_GgJqDCW;}();
result["members"]["shaderImageFloat32AtomicAdd"]=[&]() {
    json return_gUXeHfJ=json({});
    return_gUXeHfJ=[&]() {
    json return_CcZPrDZ=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicAdd);}();return return_gUXeHfJ;}();
result["members"]["sparseImageFloat32Atomics"]=[&]() {
    json return_MkZcmTL=json({});
    return_MkZcmTL=[&]() {
    json return_XJSErKq=json({});
    return serialize_uint32_t(name.sparseImageFloat32Atomics);}();return return_MkZcmTL;}();
result["members"]["sparseImageFloat32AtomicAdd"]=[&]() {
    json return_lPdXBqQ=json({});
    return_lPdXBqQ=[&]() {
    json return_yEoThmz=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicAdd);}();return return_lPdXBqQ;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloatFeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloatFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat32Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32Atomics=deserialize_uint32_t(name["members"]["shaderImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32Atomics=deserialize_uint32_t(name["members"]["sparseImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicAdd"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat16Atomics"]=[&]() {
    json return_geSNAgL=json({});
    return_geSNAgL=[&]() {
    json return_GIWSQda=json({});
    return serialize_uint32_t(name.shaderBufferFloat16Atomics);}();return return_geSNAgL;}();
result["members"]["shaderBufferFloat16AtomicAdd"]=[&]() {
    json return_wHYWzcz=json({});
    return_wHYWzcz=[&]() {
    json return_mtAPXde=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicAdd);}();return return_wHYWzcz;}();
result["members"]["shaderBufferFloat16AtomicMinMax"]=[&]() {
    json return_nPtTsQL=json({});
    return_nPtTsQL=[&]() {
    json return_YjbkgGa=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicMinMax);}();return return_nPtTsQL;}();
result["members"]["shaderBufferFloat32AtomicMinMax"]=[&]() {
    json return_wyBvUyN=json({});
    return_wyBvUyN=[&]() {
    json return_QhLGEZO=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicMinMax);}();return return_wyBvUyN;}();
result["members"]["shaderBufferFloat64AtomicMinMax"]=[&]() {
    json return_IkWikSN=json({});
    return_IkWikSN=[&]() {
    json return_NwEfkTD=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicMinMax);}();return return_IkWikSN;}();
result["members"]["shaderSharedFloat16Atomics"]=[&]() {
    json return_gicrEOX=json({});
    return_gicrEOX=[&]() {
    json return_wyzbpkr=json({});
    return serialize_uint32_t(name.shaderSharedFloat16Atomics);}();return return_gicrEOX;}();
result["members"]["shaderSharedFloat16AtomicAdd"]=[&]() {
    json return_bQTWhsd=json({});
    return_bQTWhsd=[&]() {
    json return_YeyEjzu=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicAdd);}();return return_bQTWhsd;}();
result["members"]["shaderSharedFloat16AtomicMinMax"]=[&]() {
    json return_vVUGOct=json({});
    return_vVUGOct=[&]() {
    json return_YlmoEwT=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicMinMax);}();return return_vVUGOct;}();
result["members"]["shaderSharedFloat32AtomicMinMax"]=[&]() {
    json return_yGJFXcC=json({});
    return_yGJFXcC=[&]() {
    json return_qNMEmNd=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicMinMax);}();return return_yGJFXcC;}();
result["members"]["shaderSharedFloat64AtomicMinMax"]=[&]() {
    json return_svOgoAL=json({});
    return_svOgoAL=[&]() {
    json return_CjqYNiM=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicMinMax);}();return return_svOgoAL;}();
result["members"]["shaderImageFloat32AtomicMinMax"]=[&]() {
    json return_ShpGLni=json({});
    return_ShpGLni=[&]() {
    json return_pNOSWzu=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicMinMax);}();return return_ShpGLni;}();
result["members"]["sparseImageFloat32AtomicMinMax"]=[&]() {
    json return_TRWnKYr=json({});
    return_TRWnKYr=[&]() {
    json return_godEIAy=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicMinMax);}();return return_TRWnKYr;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat16Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicMinMax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexAttributeInstanceRateDivisor"]=[&]() {
    json return_wxlrean=json({});
    return_wxlrean=[&]() {
    json return_VqwRFaL=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateDivisor);}();return return_wxlrean;}();
result["members"]["vertexAttributeInstanceRateZeroDivisor"]=[&]() {
    json return_UHmgBnX=json({});
    return_UHmgBnX=[&]() {
    json return_ovWblqo=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateZeroDivisor);}();return return_UHmgBnX;}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateDivisor"]);}();}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateZeroDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateZeroDivisor"]);}();}();
return result;}

    json serialize_VkQueueFamilyCheckpointPropertiesNV(VkQueueFamilyCheckpointPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_XsnoIDA=json({});
    return serialize_VkPipelineStageFlags(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointPropertiesNV deserialize_VkQueueFamilyCheckpointPropertiesNV(json name){
        auto result=VkQueueFamilyCheckpointPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointDataNV(VkCheckpointDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_fHKZJzi=json({});
    return serialize_VkPipelineStageFlagBits(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_eoiLqJR=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_eoiLqJR["null"]=true;
            return return_eoiLqJR;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointDataNV deserialize_VkCheckpointDataNV(json name){
        auto result=VkCheckpointDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlagBits(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolveProperties(VkPhysicalDeviceDepthStencilResolveProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_nKHNWcX=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_mZDiNuO=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_ouNHLZV=json({});
    return_ouNHLZV=[&]() {
    json return_QjZTSJE=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_ouNHLZV;}();
result["members"]["independentResolve"]=[&]() {
    json return_DqJAuBQ=json({});
    return_DqJAuBQ=[&]() {
    json return_qWvALge=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_DqJAuBQ;}();
return result;}

    VkPhysicalDeviceDepthStencilResolveProperties deserialize_VkPhysicalDeviceDepthStencilResolveProperties(json name){
        auto result=VkPhysicalDeviceDepthStencilResolveProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(VkPhysicalDeviceDepthStencilResolvePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_nKHNWcX=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_mZDiNuO=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_ouNHLZV=json({});
    return_ouNHLZV=[&]() {
    json return_QjZTSJE=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_ouNHLZV;}();
result["members"]["independentResolve"]=[&]() {
    json return_DqJAuBQ=json({});
    return_DqJAuBQ=[&]() {
    json return_qWvALge=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_DqJAuBQ;}();
return result;}

    VkPhysicalDeviceDepthStencilResolvePropertiesKHR deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(json name){
        auto result=VkPhysicalDeviceDepthStencilResolvePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolve(VkSubpassDescriptionDepthStencilResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_voGQUHE=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_DbcwFvN=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_clfRbMJ=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_clfRbMJ["null"]=true;
            return return_clfRbMJ;
        }
        return_clfRbMJ=[&]() {
    json return_pCNIIHj=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_clfRbMJ;}();
return result;}

    VkSubpassDescriptionDepthStencilResolve deserialize_VkSubpassDescriptionDepthStencilResolve(json name){
        auto result=VkSubpassDescriptionDepthStencilResolve();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_RKvVKrK;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_RKvVKrK=NULL;
        }
    [&]() {
*(temp_RKvVKrK)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_RKvVKrK;}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolveKHR(VkSubpassDescriptionDepthStencilResolveKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_voGQUHE=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_DbcwFvN=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_clfRbMJ=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_clfRbMJ["null"]=true;
            return return_clfRbMJ;
        }
        return_clfRbMJ=[&]() {
    json return_pCNIIHj=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_clfRbMJ;}();
return result;}

    VkSubpassDescriptionDepthStencilResolveKHR deserialize_VkSubpassDescriptionDepthStencilResolveKHR(json name){
        auto result=VkSubpassDescriptionDepthStencilResolveKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_RKvVKrK;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_RKvVKrK=NULL;
        }
    [&]() {
*(temp_RKvVKrK)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_RKvVKrK;}();
return result;}

    json serialize_VkImageViewASTCDecodeModeEXT(VkImageViewASTCDecodeModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeMode"]=[&]() {
    json return_vxctohf=json({});
    return serialize_VkFormat(name.decodeMode);}();
return result;}

    VkImageViewASTCDecodeModeEXT deserialize_VkImageViewASTCDecodeModeEXT(json name){
        auto result=VkImageViewASTCDecodeModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.decodeMode=deserialize_VkFormat(name["members"]["decodeMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(VkPhysicalDeviceASTCDecodeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeModeSharedExponent"]=[&]() {
    json return_LuJLWfw=json({});
    return_LuJLWfw=[&]() {
    json return_uxoWSAY=json({});
    return serialize_uint32_t(name.decodeModeSharedExponent);}();return return_LuJLWfw;}();
return result;}

    VkPhysicalDeviceASTCDecodeFeaturesEXT deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceASTCDecodeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.decodeModeSharedExponent=deserialize_uint32_t(name["members"]["decodeModeSharedExponent"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkPhysicalDeviceTransformFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transformFeedback"]=[&]() {
    json return_MYSNujx=json({});
    return_MYSNujx=[&]() {
    json return_TKNMXLu=json({});
    return serialize_uint32_t(name.transformFeedback);}();return return_MYSNujx;}();
result["members"]["geometryStreams"]=[&]() {
    json return_nzWblQz=json({});
    return_nzWblQz=[&]() {
    json return_kKHQasH=json({});
    return serialize_uint32_t(name.geometryStreams);}();return return_nzWblQz;}();
return result;}

    VkPhysicalDeviceTransformFeedbackFeaturesEXT deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.transformFeedback=deserialize_uint32_t(name["members"]["transformFeedback"]);}();}();
[&]() {
[&]() {
result.geometryStreams=deserialize_uint32_t(name["members"]["geometryStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkPhysicalDeviceTransformFeedbackPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTransformFeedbackStreams"]=[&]() {
    json return_AWSFsjy=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreams);}();
result["members"]["maxTransformFeedbackBuffers"]=[&]() {
    json return_NaitFgw=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBuffers);}();
result["members"]["maxTransformFeedbackBufferSize"]=[&]() {
    json return_FcfOSYT=json({});
    return_FcfOSYT=[&]() {
    json return_iBauYVy=json({});
    return serialize_uint64_t(name.maxTransformFeedbackBufferSize);}();return return_FcfOSYT;}();
result["members"]["maxTransformFeedbackStreamDataSize"]=[&]() {
    json return_qaNfHSy=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreamDataSize);}();
result["members"]["maxTransformFeedbackBufferDataSize"]=[&]() {
    json return_iRhywBm=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataSize);}();
result["members"]["maxTransformFeedbackBufferDataStride"]=[&]() {
    json return_kJMuOfP=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataStride);}();
result["members"]["transformFeedbackQueries"]=[&]() {
    json return_qAAvDbY=json({});
    return_qAAvDbY=[&]() {
    json return_HnPdyCS=json({});
    return serialize_uint32_t(name.transformFeedbackQueries);}();return return_qAAvDbY;}();
result["members"]["transformFeedbackStreamsLinesTriangles"]=[&]() {
    json return_EErvyAE=json({});
    return_EErvyAE=[&]() {
    json return_YDJfaQi=json({});
    return serialize_uint32_t(name.transformFeedbackStreamsLinesTriangles);}();return return_EErvyAE;}();
result["members"]["transformFeedbackRasterizationStreamSelect"]=[&]() {
    json return_fooolYI=json({});
    return_fooolYI=[&]() {
    json return_XtIQRyA=json({});
    return serialize_uint32_t(name.transformFeedbackRasterizationStreamSelect);}();return return_fooolYI;}();
result["members"]["transformFeedbackDraw"]=[&]() {
    json return_SUUsvba=json({});
    return_SUUsvba=[&]() {
    json return_ucyVKXg=json({});
    return serialize_uint32_t(name.transformFeedbackDraw);}();return return_SUUsvba;}();
return result;}

    VkPhysicalDeviceTransformFeedbackPropertiesEXT deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTransformFeedbackStreams=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreams"]);}();
[&]() {
result.maxTransformFeedbackBuffers=deserialize_uint32_t(name["members"]["maxTransformFeedbackBuffers"]);}();
[&]() {
[&]() {
result.maxTransformFeedbackBufferSize=deserialize_uint64_t(name["members"]["maxTransformFeedbackBufferSize"]);}();}();
[&]() {
result.maxTransformFeedbackStreamDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreamDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataStride=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataStride"]);}();
[&]() {
[&]() {
result.transformFeedbackQueries=deserialize_uint32_t(name["members"]["transformFeedbackQueries"]);}();}();
[&]() {
[&]() {
result.transformFeedbackStreamsLinesTriangles=deserialize_uint32_t(name["members"]["transformFeedbackStreamsLinesTriangles"]);}();}();
[&]() {
[&]() {
result.transformFeedbackRasterizationStreamSelect=deserialize_uint32_t(name["members"]["transformFeedbackRasterizationStreamSelect"]);}();}();
[&]() {
[&]() {
result.transformFeedbackDraw=deserialize_uint32_t(name["members"]["transformFeedbackDraw"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(VkPipelineRasterizationStateStreamCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_Touzrco=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name.flags);}();
result["members"]["rasterizationStream"]=[&]() {
    json return_EqSkdVA=json({});
    return serialize_uint32_t(name.rasterizationStream);}();
return result;}

    VkPipelineRasterizationStateStreamCreateInfoEXT deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationStateStreamCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.rasterizationStream=deserialize_uint32_t(name["members"]["rasterizationStream"]);}();
return result;}

    json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTest"]=[&]() {
    json return_dbbIInA=json({});
    return_dbbIInA=[&]() {
    json return_zGqhHvV=json({});
    return serialize_uint32_t(name.representativeFragmentTest);}();return return_dbbIInA;}();
return result;}

    VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(json name){
        auto result=VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.representativeFragmentTest=deserialize_uint32_t(name["members"]["representativeFragmentTest"]);}();}();
return result;}

    json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkPipelineRepresentativeFragmentTestStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTestEnable"]=[&]() {
    json return_ULHqPuu=json({});
    return_ULHqPuu=[&]() {
    json return_obvUgJr=json({});
    return serialize_uint32_t(name.representativeFragmentTestEnable);}();return return_ULHqPuu;}();
return result;}

    VkPipelineRepresentativeFragmentTestStateCreateInfoNV deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(json name){
        auto result=VkPipelineRepresentativeFragmentTestStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.representativeFragmentTestEnable=deserialize_uint32_t(name["members"]["representativeFragmentTestEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(VkPhysicalDeviceExclusiveScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissor"]=[&]() {
    json return_cfspnng=json({});
    return_cfspnng=[&]() {
    json return_xzLuffP=json({});
    return serialize_uint32_t(name.exclusiveScissor);}();return return_cfspnng;}();
return result;}

    VkPhysicalDeviceExclusiveScissorFeaturesNV deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceExclusiveScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.exclusiveScissor=deserialize_uint32_t(name["members"]["exclusiveScissor"]);}();}();
return result;}

    json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkPipelineViewportExclusiveScissorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissorCount"]=[&]() {
    json return_IDYszwq=json({});
    return serialize_uint32_t(name.exclusiveScissorCount);}();
result["members"]["pExclusiveScissors"]=[&]() {
    json return_FIemhIm=json({});
    
        if (name.pExclusiveScissors==NULL){
            return_FIemhIm["null"]=true;
            return return_FIemhIm;
        }
        
        return_FIemhIm["members"]={};
        for(int FIemhIm=0; FIemhIm < name.exclusiveScissorCount; FIemhIm++){
            json temp;
            temp=[&]() {
    json return_KhTarBo=json({});
    return serialize_VkRect2D(name.pExclusiveScissors[FIemhIm]);}();
            return_FIemhIm["members"][std::to_string(FIemhIm)].push_back(temp);
        }
        return return_FIemhIm;
        }();
return result;}

    VkPipelineViewportExclusiveScissorStateCreateInfoNV deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(json name){
        auto result=VkPipelineViewportExclusiveScissorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.exclusiveScissorCount=deserialize_uint32_t(name["members"]["exclusiveScissorCount"]);}();
[&]() {
VkRect2D* temp_bnuFziz;[&]() {

        if (name["members"]["pExclusiveScissors"].contains("null")){
        temp_bnuFziz=NULL;
        }
    temp_bnuFziz=(VkRect2D*)malloc(result.exclusiveScissorCount*sizeof(VkRect2D));
        for (int YyJBDpK=0; YyJBDpK < result.exclusiveScissorCount; YyJBDpK++){
            [&]() {
temp_bnuFziz[YyJBDpK]=deserialize_VkRect2D(name["members"]["pExclusiveScissors"]["members"][YyJBDpK]);}();;
        }
        }();result.pExclusiveScissors=temp_bnuFziz;}();
return result;}

    json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(VkPhysicalDeviceCornerSampledImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cornerSampledImage"]=[&]() {
    json return_QJreQaw=json({});
    return_QJreQaw=[&]() {
    json return_uPeaOdE=json({});
    return serialize_uint32_t(name.cornerSampledImage);}();return return_QJreQaw;}();
return result;}

    VkPhysicalDeviceCornerSampledImageFeaturesNV deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceCornerSampledImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cornerSampledImage=deserialize_uint32_t(name["members"]["cornerSampledImage"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["computeDerivativeGroupQuads"]=[&]() {
    json return_LnCgkjs=json({});
    return_LnCgkjs=[&]() {
    json return_ystfRjc=json({});
    return serialize_uint32_t(name.computeDerivativeGroupQuads);}();return return_LnCgkjs;}();
result["members"]["computeDerivativeGroupLinear"]=[&]() {
    json return_jSoTsli=json({});
    return_jSoTsli=[&]() {
    json return_pqEXwMV=json({});
    return serialize_uint32_t(name.computeDerivativeGroupLinear);}();return return_jSoTsli;}();
return result;}

    VkPhysicalDeviceComputeShaderDerivativesFeaturesNV deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(json name){
        auto result=VkPhysicalDeviceComputeShaderDerivativesFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.computeDerivativeGroupQuads=deserialize_uint32_t(name["members"]["computeDerivativeGroupQuads"]);}();}();
[&]() {
[&]() {
result.computeDerivativeGroupLinear=deserialize_uint32_t(name["members"]["computeDerivativeGroupLinear"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkPhysicalDeviceShaderImageFootprintFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFootprint"]=[&]() {
    json return_twaNuYL=json({});
    return_twaNuYL=[&]() {
    json return_tzEmlKn=json({});
    return serialize_uint32_t(name.imageFootprint);}();return return_twaNuYL;}();
return result;}

    VkPhysicalDeviceShaderImageFootprintFeaturesNV deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderImageFootprintFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageFootprint=deserialize_uint32_t(name["members"]["imageFootprint"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocationImageAliasing"]=[&]() {
    json return_vzMiVQH=json({});
    return_vzMiVQH=[&]() {
    json return_aQWEJRo=json({});
    return serialize_uint32_t(name.dedicatedAllocationImageAliasing);}();return return_vzMiVQH;}();
return result;}

    VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(json name){
        auto result=VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dedicatedAllocationImageAliasing=deserialize_uint32_t(name["members"]["dedicatedAllocationImageAliasing"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indirectCopy"]=[&]() {
    json return_pdXKtbd=json({});
    return_pdXKtbd=[&]() {
    json return_ujzBfaI=json({});
    return serialize_uint32_t(name.indirectCopy);}();return return_pdXKtbd;}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectFeaturesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indirectCopy=deserialize_uint32_t(name["members"]["indirectCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedQueues"]=[&]() {
    json return_JFBcdgQ=json({});
    return serialize_VkQueueFlags(name.supportedQueues);}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectPropertiesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedQueues=deserialize_VkQueueFlags(name["members"]["supportedQueues"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(VkPhysicalDeviceMemoryDecompressionFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryDecompression"]=[&]() {
    json return_FdYUwWv=json({});
    return_FdYUwWv=[&]() {
    json return_hhTaklu=json({});
    return serialize_uint32_t(name.memoryDecompression);}();return return_FdYUwWv;}();
return result;}

    VkPhysicalDeviceMemoryDecompressionFeaturesNV deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryDecompression=deserialize_uint32_t(name["members"]["memoryDecompression"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(VkPhysicalDeviceMemoryDecompressionPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decompressionMethods"]=[&]() {
    json return_yofktVS=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethods);}();
result["members"]["maxDecompressionIndirectCount"]=[&]() {
    json return_dkrRIQS=json({});
    return serialize_uint64_t(name.maxDecompressionIndirectCount);}();
return result;}

    VkPhysicalDeviceMemoryDecompressionPropertiesNV deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.decompressionMethods=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethods"]);}();
[&]() {
result.maxDecompressionIndirectCount=deserialize_uint64_t(name["members"]["maxDecompressionIndirectCount"]);}();
return result;}

    json serialize_VkShadingRatePaletteNV(VkShadingRatePaletteNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRatePaletteEntryCount"]=[&]() {
    json return_yftFtDK=json({});
    return serialize_uint32_t(name.shadingRatePaletteEntryCount);}();
result["members"]["pShadingRatePaletteEntries"]=[&]() {
    json return_vGsdYwq=json({});
    
        if (name.pShadingRatePaletteEntries==NULL){
            return_vGsdYwq["null"]=true;
            return return_vGsdYwq;
        }
        
        return_vGsdYwq["members"]={};
        for(int vGsdYwq=0; vGsdYwq < name.shadingRatePaletteEntryCount; vGsdYwq++){
            json temp;
            temp=[&]() {
    json return_bVDesKk=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.pShadingRatePaletteEntries[vGsdYwq]);}();
            return_vGsdYwq["members"][std::to_string(vGsdYwq)].push_back(temp);
        }
        return return_vGsdYwq;
        }();
return result;}

    VkShadingRatePaletteNV deserialize_VkShadingRatePaletteNV(json name){
        auto result=VkShadingRatePaletteNV();
    
[&]() {
result.shadingRatePaletteEntryCount=deserialize_uint32_t(name["members"]["shadingRatePaletteEntryCount"]);}();
[&]() {
VkShadingRatePaletteEntryNV* temp_XZffPxE;[&]() {

        if (name["members"]["pShadingRatePaletteEntries"].contains("null")){
        temp_XZffPxE=NULL;
        }
    temp_XZffPxE=(VkShadingRatePaletteEntryNV*)malloc(result.shadingRatePaletteEntryCount*sizeof(VkShadingRatePaletteEntryNV));
        for (int PFIsrfP=0; PFIsrfP < result.shadingRatePaletteEntryCount; PFIsrfP++){
            [&]() {
temp_XZffPxE[PFIsrfP]=deserialize_VkShadingRatePaletteEntryNV(name["members"]["pShadingRatePaletteEntries"]["members"][PFIsrfP]);}();;
        }
        }();result.pShadingRatePaletteEntries=temp_XZffPxE;}();
return result;}

    json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(VkPipelineViewportShadingRateImageStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImageEnable"]=[&]() {
    json return_imXolxR=json({});
    return_imXolxR=[&]() {
    json return_WclOhkU=json({});
    return serialize_uint32_t(name.shadingRateImageEnable);}();return return_imXolxR;}();
result["members"]["viewportCount"]=[&]() {
    json return_ngXLoMy=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pShadingRatePalettes"]=[&]() {
    json return_ACPSvdL=json({});
    
        if (name.pShadingRatePalettes==NULL){
            return_ACPSvdL["null"]=true;
            return return_ACPSvdL;
        }
        
        return_ACPSvdL["members"]={};
        for(int ACPSvdL=0; ACPSvdL < name.viewportCount; ACPSvdL++){
            json temp;
            temp=[&]() {
    json return_YIdxwcM=json({});
    return serialize_VkShadingRatePaletteNV(name.pShadingRatePalettes[ACPSvdL]);}();
            return_ACPSvdL["members"][std::to_string(ACPSvdL)].push_back(temp);
        }
        return return_ACPSvdL;
        }();
return result;}

    VkPipelineViewportShadingRateImageStateCreateInfoNV deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(json name){
        auto result=VkPipelineViewportShadingRateImageStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.shadingRateImageEnable=deserialize_uint32_t(name["members"]["shadingRateImageEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkShadingRatePaletteNV* temp_CmfULWr;[&]() {

        if (name["members"]["pShadingRatePalettes"].contains("null")){
        temp_CmfULWr=NULL;
        }
    temp_CmfULWr=(VkShadingRatePaletteNV*)malloc(result.viewportCount*sizeof(VkShadingRatePaletteNV));
        for (int toBwqTk=0; toBwqTk < result.viewportCount; toBwqTk++){
            [&]() {
temp_CmfULWr[toBwqTk]=deserialize_VkShadingRatePaletteNV(name["members"]["pShadingRatePalettes"]["members"][toBwqTk]);}();;
        }
        }();result.pShadingRatePalettes=temp_CmfULWr;}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(VkPhysicalDeviceShadingRateImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImage"]=[&]() {
    json return_PrWChQS=json({});
    return_PrWChQS=[&]() {
    json return_MYvDCJm=json({});
    return serialize_uint32_t(name.shadingRateImage);}();return return_PrWChQS;}();
result["members"]["shadingRateCoarseSampleOrder"]=[&]() {
    json return_QAtLghc=json({});
    return_QAtLghc=[&]() {
    json return_lrVpbKB=json({});
    return serialize_uint32_t(name.shadingRateCoarseSampleOrder);}();return return_QAtLghc;}();
return result;}

    VkPhysicalDeviceShadingRateImageFeaturesNV deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shadingRateImage=deserialize_uint32_t(name["members"]["shadingRateImage"]);}();}();
[&]() {
[&]() {
result.shadingRateCoarseSampleOrder=deserialize_uint32_t(name["members"]["shadingRateCoarseSampleOrder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(VkPhysicalDeviceShadingRateImagePropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateTexelSize"]=[&]() {
    json return_DweUZjr=json({});
    return serialize_VkExtent2D(name.shadingRateTexelSize);}();
result["members"]["shadingRatePaletteSize"]=[&]() {
    json return_jFHYiAL=json({});
    return serialize_uint32_t(name.shadingRatePaletteSize);}();
result["members"]["shadingRateMaxCoarseSamples"]=[&]() {
    json return_RAJqiUB=json({});
    return serialize_uint32_t(name.shadingRateMaxCoarseSamples);}();
return result;}

    VkPhysicalDeviceShadingRateImagePropertiesNV deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImagePropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shadingRateTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateTexelSize"]);}();
[&]() {
result.shadingRatePaletteSize=deserialize_uint32_t(name["members"]["shadingRatePaletteSize"]);}();
[&]() {
result.shadingRateMaxCoarseSamples=deserialize_uint32_t(name["members"]["shadingRateMaxCoarseSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["invocationMask"]=[&]() {
    json return_uGITMND=json({});
    return_uGITMND=[&]() {
    json return_krValOS=json({});
    return serialize_uint32_t(name.invocationMask);}();return return_uGITMND;}();
return result;}

    VkPhysicalDeviceInvocationMaskFeaturesHUAWEI deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceInvocationMaskFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.invocationMask=deserialize_uint32_t(name["members"]["invocationMask"]);}();}();
return result;}

    json serialize_VkCoarseSampleLocationNV(VkCoarseSampleLocationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pixelX"]=[&]() {
    json return_nhnAQOu=json({});
    return serialize_uint32_t(name.pixelX);}();
result["members"]["pixelY"]=[&]() {
    json return_zYOcnFt=json({});
    return serialize_uint32_t(name.pixelY);}();
result["members"]["sample"]=[&]() {
    json return_MnfJYTj=json({});
    return serialize_uint32_t(name.sample);}();
return result;}

    VkCoarseSampleLocationNV deserialize_VkCoarseSampleLocationNV(json name){
        auto result=VkCoarseSampleLocationNV();
    
[&]() {
result.pixelX=deserialize_uint32_t(name["members"]["pixelX"]);}();
[&]() {
result.pixelY=deserialize_uint32_t(name["members"]["pixelY"]);}();
[&]() {
result.sample=deserialize_uint32_t(name["members"]["sample"]);}();
return result;}

    json serialize_VkCoarseSampleOrderCustomNV(VkCoarseSampleOrderCustomNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRate"]=[&]() {
    json return_DznihJe=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.shadingRate);}();
result["members"]["sampleCount"]=[&]() {
    json return_fsODsvO=json({});
    return serialize_uint32_t(name.sampleCount);}();
result["members"]["sampleLocationCount"]=[&]() {
    json return_uhQNIUA=json({});
    return serialize_uint32_t(name.sampleLocationCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_ddZusTR=json({});
    
        if (name.pSampleLocations==NULL){
            return_ddZusTR["null"]=true;
            return return_ddZusTR;
        }
        
        return_ddZusTR["members"]={};
        for(int ddZusTR=0; ddZusTR < name.sampleLocationCount; ddZusTR++){
            json temp;
            temp=[&]() {
    json return_dMbhJPJ=json({});
    return serialize_VkCoarseSampleLocationNV(name.pSampleLocations[ddZusTR]);}();
            return_ddZusTR["members"][std::to_string(ddZusTR)].push_back(temp);
        }
        return return_ddZusTR;
        }();
return result;}

    VkCoarseSampleOrderCustomNV deserialize_VkCoarseSampleOrderCustomNV(json name){
        auto result=VkCoarseSampleOrderCustomNV();
    
[&]() {
result.shadingRate=deserialize_VkShadingRatePaletteEntryNV(name["members"]["shadingRate"]);}();
[&]() {
result.sampleCount=deserialize_uint32_t(name["members"]["sampleCount"]);}();
[&]() {
result.sampleLocationCount=deserialize_uint32_t(name["members"]["sampleLocationCount"]);}();
[&]() {
VkCoarseSampleLocationNV* temp_jLZFCeA;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_jLZFCeA=NULL;
        }
    temp_jLZFCeA=(VkCoarseSampleLocationNV*)malloc(result.sampleLocationCount*sizeof(VkCoarseSampleLocationNV));
        for (int EzDUjNq=0; EzDUjNq < result.sampleLocationCount; EzDUjNq++){
            [&]() {
temp_jLZFCeA[EzDUjNq]=deserialize_VkCoarseSampleLocationNV(name["members"]["pSampleLocations"]["members"][EzDUjNq]);}();;
        }
        }();result.pSampleLocations=temp_jLZFCeA;}();
return result;}

    json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleOrderType"]=[&]() {
    json return_KziuEfi=json({});
    return serialize_VkCoarseSampleOrderTypeNV(name.sampleOrderType);}();
result["members"]["customSampleOrderCount"]=[&]() {
    json return_latKREb=json({});
    return serialize_uint32_t(name.customSampleOrderCount);}();
result["members"]["pCustomSampleOrders"]=[&]() {
    json return_BSmnvlr=json({});
    
        if (name.pCustomSampleOrders==NULL){
            return_BSmnvlr["null"]=true;
            return return_BSmnvlr;
        }
        
        return_BSmnvlr["members"]={};
        for(int BSmnvlr=0; BSmnvlr < name.customSampleOrderCount; BSmnvlr++){
            json temp;
            temp=[&]() {
    json return_FIzvjbY=json({});
    return serialize_VkCoarseSampleOrderCustomNV(name.pCustomSampleOrders[BSmnvlr]);}();
            return_BSmnvlr["members"][std::to_string(BSmnvlr)].push_back(temp);
        }
        return return_BSmnvlr;
        }();
return result;}

    VkPipelineViewportCoarseSampleOrderStateCreateInfoNV deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(json name){
        auto result=VkPipelineViewportCoarseSampleOrderStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.sampleOrderType=deserialize_VkCoarseSampleOrderTypeNV(name["members"]["sampleOrderType"]);}();
[&]() {
result.customSampleOrderCount=deserialize_uint32_t(name["members"]["customSampleOrderCount"]);}();
[&]() {
VkCoarseSampleOrderCustomNV* temp_ADVaJEX;[&]() {

        if (name["members"]["pCustomSampleOrders"].contains("null")){
        temp_ADVaJEX=NULL;
        }
    temp_ADVaJEX=(VkCoarseSampleOrderCustomNV*)malloc(result.customSampleOrderCount*sizeof(VkCoarseSampleOrderCustomNV));
        for (int aYFtYqv=0; aYFtYqv < result.customSampleOrderCount; aYFtYqv++){
            [&]() {
temp_ADVaJEX[aYFtYqv]=deserialize_VkCoarseSampleOrderCustomNV(name["members"]["pCustomSampleOrders"]["members"][aYFtYqv]);}();;
        }
        }();result.pCustomSampleOrders=temp_ADVaJEX;}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesNV(VkPhysicalDeviceMeshShaderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_iLEneYn=json({});
    return_iLEneYn=[&]() {
    json return_ykaznPe=json({});
    return serialize_uint32_t(name.taskShader);}();return return_iLEneYn;}();
result["members"]["meshShader"]=[&]() {
    json return_fuOwNlh=json({});
    return_fuOwNlh=[&]() {
    json return_tZMdxBP=json({});
    return serialize_uint32_t(name.meshShader);}();return return_fuOwNlh;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesNV deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesNV(VkPhysicalDeviceMeshShaderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDrawMeshTasksCount"]=[&]() {
    json return_FmUTaOT=json({});
    return serialize_uint32_t(name.maxDrawMeshTasksCount);}();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_tYpTmdo=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_qvPrvCq=json({});
    
        return_qvPrvCq["members"]={};
        for(int qvPrvCq=0; qvPrvCq < 3; qvPrvCq++){
            json temp;
            temp=[&]() {
    json return_PIvBiXm=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[qvPrvCq]);}();
            return_qvPrvCq["members"][std::to_string(qvPrvCq)].push_back(temp);
        }
        return return_qvPrvCq;
        }();
result["members"]["maxTaskTotalMemorySize"]=[&]() {
    json return_fIqQOFG=json({});
    return serialize_uint32_t(name.maxTaskTotalMemorySize);}();
result["members"]["maxTaskOutputCount"]=[&]() {
    json return_ARNnLOh=json({});
    return serialize_uint32_t(name.maxTaskOutputCount);}();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_yXfXfIZ=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_BEDMJaO=json({});
    
        return_BEDMJaO["members"]={};
        for(int BEDMJaO=0; BEDMJaO < 3; BEDMJaO++){
            json temp;
            temp=[&]() {
    json return_ykFndOM=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[BEDMJaO]);}();
            return_BEDMJaO["members"][std::to_string(BEDMJaO)].push_back(temp);
        }
        return return_BEDMJaO;
        }();
result["members"]["maxMeshTotalMemorySize"]=[&]() {
    json return_qYwUqPd=json({});
    return serialize_uint32_t(name.maxMeshTotalMemorySize);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_bjScYXP=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_qLEHWbs=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_HMSVzuh=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_VlCXZqJ=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_VlayoYi=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesNV deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDrawMeshTasksCount=deserialize_uint32_t(name["members"]["maxDrawMeshTasksCount"]);}();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int lCzLZEc=0; lCzLZEc < 3; lCzLZEc++){
            [&]() {
result.maxTaskWorkGroupSize[lCzLZEc]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][lCzLZEc]);}();;
        }
        }();
[&]() {
result.maxTaskTotalMemorySize=deserialize_uint32_t(name["members"]["maxTaskTotalMemorySize"]);}();
[&]() {
result.maxTaskOutputCount=deserialize_uint32_t(name["members"]["maxTaskOutputCount"]);}();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int YUMikmO=0; YUMikmO < 3; YUMikmO++){
            [&]() {
result.maxMeshWorkGroupSize[YUMikmO]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][YUMikmO]);}();;
        }
        }();
[&]() {
result.maxMeshTotalMemorySize=deserialize_uint32_t(name["members"]["maxMeshTotalMemorySize"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandNV(VkDrawMeshTasksIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["taskCount"]=[&]() {
    json return_ezRxldH=json({});
    return serialize_uint32_t(name.taskCount);}();
result["members"]["firstTask"]=[&]() {
    json return_sqbPeaZ=json({});
    return serialize_uint32_t(name.firstTask);}();
return result;}

    VkDrawMeshTasksIndirectCommandNV deserialize_VkDrawMeshTasksIndirectCommandNV(json name){
        auto result=VkDrawMeshTasksIndirectCommandNV();
    
[&]() {
result.taskCount=deserialize_uint32_t(name["members"]["taskCount"]);}();
[&]() {
result.firstTask=deserialize_uint32_t(name["members"]["firstTask"]);}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(VkPhysicalDeviceMeshShaderFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_iLEneYn=json({});
    return_iLEneYn=[&]() {
    json return_ykaznPe=json({});
    return serialize_uint32_t(name.taskShader);}();return return_iLEneYn;}();
result["members"]["meshShader"]=[&]() {
    json return_fuOwNlh=json({});
    return_fuOwNlh=[&]() {
    json return_tZMdxBP=json({});
    return serialize_uint32_t(name.meshShader);}();return return_fuOwNlh;}();
result["members"]["multiviewMeshShader"]=[&]() {
    json return_oqpBWiE=json({});
    return_oqpBWiE=[&]() {
    json return_pvDhLhh=json({});
    return serialize_uint32_t(name.multiviewMeshShader);}();return return_oqpBWiE;}();
result["members"]["primitiveFragmentShadingRateMeshShader"]=[&]() {
    json return_xDJrhHt=json({});
    return_xDJrhHt=[&]() {
    json return_FNfMAmJ=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateMeshShader);}();return return_xDJrhHt;}();
result["members"]["meshShaderQueries"]=[&]() {
    json return_mdMGsJF=json({});
    return_mdMGsJF=[&]() {
    json return_UPwMeZF=json({});
    return serialize_uint32_t(name.meshShaderQueries);}();return return_mdMGsJF;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesEXT deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
[&]() {
[&]() {
result.multiviewMeshShader=deserialize_uint32_t(name["members"]["multiviewMeshShader"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateMeshShader=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateMeshShader"]);}();}();
[&]() {
[&]() {
result.meshShaderQueries=deserialize_uint32_t(name["members"]["meshShaderQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(VkPhysicalDeviceMeshShaderPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTaskWorkGroupTotalCount"]=[&]() {
    json return_zXWaFnF=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupTotalCount);}();
result["members"]["maxTaskWorkGroupCount"]=[&]() {
    json return_DgpvPGz=json({});
    
        return_DgpvPGz["members"]={};
        for(int DgpvPGz=0; DgpvPGz < 3; DgpvPGz++){
            json temp;
            temp=[&]() {
    json return_SYLzZaZ=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupCount[DgpvPGz]);}();
            return_DgpvPGz["members"][std::to_string(DgpvPGz)].push_back(temp);
        }
        return return_DgpvPGz;
        }();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_tYpTmdo=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_qvPrvCq=json({});
    
        return_qvPrvCq["members"]={};
        for(int qvPrvCq=0; qvPrvCq < 3; qvPrvCq++){
            json temp;
            temp=[&]() {
    json return_PIvBiXm=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[qvPrvCq]);}();
            return_qvPrvCq["members"][std::to_string(qvPrvCq)].push_back(temp);
        }
        return return_qvPrvCq;
        }();
result["members"]["maxTaskPayloadSize"]=[&]() {
    json return_DeawFQG=json({});
    return serialize_uint32_t(name.maxTaskPayloadSize);}();
result["members"]["maxTaskSharedMemorySize"]=[&]() {
    json return_JWzkagT=json({});
    return serialize_uint32_t(name.maxTaskSharedMemorySize);}();
result["members"]["maxTaskPayloadAndSharedMemorySize"]=[&]() {
    json return_pnakujq=json({});
    return serialize_uint32_t(name.maxTaskPayloadAndSharedMemorySize);}();
result["members"]["maxMeshWorkGroupTotalCount"]=[&]() {
    json return_Rpdgbnz=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupTotalCount);}();
result["members"]["maxMeshWorkGroupCount"]=[&]() {
    json return_wnVwwIb=json({});
    
        return_wnVwwIb["members"]={};
        for(int wnVwwIb=0; wnVwwIb < 3; wnVwwIb++){
            json temp;
            temp=[&]() {
    json return_ASQnjat=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupCount[wnVwwIb]);}();
            return_wnVwwIb["members"][std::to_string(wnVwwIb)].push_back(temp);
        }
        return return_wnVwwIb;
        }();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_yXfXfIZ=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_BEDMJaO=json({});
    
        return_BEDMJaO["members"]={};
        for(int BEDMJaO=0; BEDMJaO < 3; BEDMJaO++){
            json temp;
            temp=[&]() {
    json return_ykFndOM=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[BEDMJaO]);}();
            return_BEDMJaO["members"][std::to_string(BEDMJaO)].push_back(temp);
        }
        return return_BEDMJaO;
        }();
result["members"]["maxMeshSharedMemorySize"]=[&]() {
    json return_qJOSrAF=json({});
    return serialize_uint32_t(name.maxMeshSharedMemorySize);}();
result["members"]["maxMeshPayloadAndSharedMemorySize"]=[&]() {
    json return_qJXvUyB=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndSharedMemorySize);}();
result["members"]["maxMeshOutputMemorySize"]=[&]() {
    json return_wKHFAOP=json({});
    return serialize_uint32_t(name.maxMeshOutputMemorySize);}();
result["members"]["maxMeshPayloadAndOutputMemorySize"]=[&]() {
    json return_qaLMxNw=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndOutputMemorySize);}();
result["members"]["maxMeshOutputComponents"]=[&]() {
    json return_RuDICWt=json({});
    return serialize_uint32_t(name.maxMeshOutputComponents);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_bjScYXP=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_qLEHWbs=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshOutputLayers"]=[&]() {
    json return_VBQSXFz=json({});
    return serialize_uint32_t(name.maxMeshOutputLayers);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_HMSVzuh=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_VlCXZqJ=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_VlayoYi=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
result["members"]["maxPreferredTaskWorkGroupInvocations"]=[&]() {
    json return_AfsUCUT=json({});
    return serialize_uint32_t(name.maxPreferredTaskWorkGroupInvocations);}();
result["members"]["maxPreferredMeshWorkGroupInvocations"]=[&]() {
    json return_ifEoNXY=json({});
    return serialize_uint32_t(name.maxPreferredMeshWorkGroupInvocations);}();
result["members"]["prefersLocalInvocationVertexOutput"]=[&]() {
    json return_pBKctag=json({});
    return_pBKctag=[&]() {
    json return_PnovHmy=json({});
    return serialize_uint32_t(name.prefersLocalInvocationVertexOutput);}();return return_pBKctag;}();
result["members"]["prefersLocalInvocationPrimitiveOutput"]=[&]() {
    json return_vbadiLt=json({});
    return_vbadiLt=[&]() {
    json return_FKNqHqJ=json({});
    return serialize_uint32_t(name.prefersLocalInvocationPrimitiveOutput);}();return return_vbadiLt;}();
result["members"]["prefersCompactVertexOutput"]=[&]() {
    json return_QuHMQsL=json({});
    return_QuHMQsL=[&]() {
    json return_GhaEeAp=json({});
    return serialize_uint32_t(name.prefersCompactVertexOutput);}();return return_QuHMQsL;}();
result["members"]["prefersCompactPrimitiveOutput"]=[&]() {
    json return_fshyput=json({});
    return_fshyput=[&]() {
    json return_lSGhRDP=json({});
    return serialize_uint32_t(name.prefersCompactPrimitiveOutput);}();return return_fshyput;}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesEXT deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTaskWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxTaskWorkGroupTotalCount"]);}();
[&]() {

        for (int gdQzQgU=0; gdQzQgU < 3; gdQzQgU++){
            [&]() {
result.maxTaskWorkGroupCount[gdQzQgU]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupCount"]["members"][gdQzQgU]);}();;
        }
        }();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int lCzLZEc=0; lCzLZEc < 3; lCzLZEc++){
            [&]() {
result.maxTaskWorkGroupSize[lCzLZEc]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][lCzLZEc]);}();;
        }
        }();
[&]() {
result.maxTaskPayloadSize=deserialize_uint32_t(name["members"]["maxTaskPayloadSize"]);}();
[&]() {
result.maxTaskSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskSharedMemorySize"]);}();
[&]() {
result.maxTaskPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxMeshWorkGroupTotalCount"]);}();
[&]() {

        for (int RiSnLPl=0; RiSnLPl < 3; RiSnLPl++){
            [&]() {
result.maxMeshWorkGroupCount[RiSnLPl]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupCount"]["members"][RiSnLPl]);}();;
        }
        }();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int YUMikmO=0; YUMikmO < 3; YUMikmO++){
            [&]() {
result.maxMeshWorkGroupSize[YUMikmO]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][YUMikmO]);}();;
        }
        }();
[&]() {
result.maxMeshSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshSharedMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshOutputMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndOutputMemorySize"]);}();
[&]() {
result.maxMeshOutputComponents=deserialize_uint32_t(name["members"]["maxMeshOutputComponents"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshOutputLayers=deserialize_uint32_t(name["members"]["maxMeshOutputLayers"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
[&]() {
result.maxPreferredTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredTaskWorkGroupInvocations"]);}();
[&]() {
result.maxPreferredMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredMeshWorkGroupInvocations"]);}();
[&]() {
[&]() {
result.prefersLocalInvocationVertexOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersLocalInvocationPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationPrimitiveOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactVertexOutput=deserialize_uint32_t(name["members"]["prefersCompactVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersCompactPrimitiveOutput"]);}();}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandEXT(VkDrawMeshTasksIndirectCommandEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupCountX"]=[&]() {
    json return_roBdDZe=json({});
    return serialize_uint32_t(name.groupCountX);}();
result["members"]["groupCountY"]=[&]() {
    json return_fZCRyGU=json({});
    return serialize_uint32_t(name.groupCountY);}();
result["members"]["groupCountZ"]=[&]() {
    json return_nKISzbN=json({});
    return serialize_uint32_t(name.groupCountZ);}();
return result;}

    VkDrawMeshTasksIndirectCommandEXT deserialize_VkDrawMeshTasksIndirectCommandEXT(json name){
        auto result=VkDrawMeshTasksIndirectCommandEXT();
    
[&]() {
result.groupCountX=deserialize_uint32_t(name["members"]["groupCountX"]);}();
[&]() {
result.groupCountY=deserialize_uint32_t(name["members"]["groupCountY"]);}();
[&]() {
result.groupCountZ=deserialize_uint32_t(name["members"]["groupCountZ"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoNV(VkRayTracingShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_sbLJCdS=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_EOZSrRG=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_QObkjOz=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_UiOItRT=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_TKWGMgV=json({});
    return serialize_uint32_t(name.intersectionShader);}();
return result;}

    VkRayTracingShaderGroupCreateInfoNV deserialize_VkRayTracingShaderGroupCreateInfoNV(json name){
        auto result=VkRayTracingShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoKHR(VkRayTracingShaderGroupCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_sbLJCdS=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_EOZSrRG=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_QObkjOz=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_UiOItRT=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_TKWGMgV=json({});
    return serialize_uint32_t(name.intersectionShader);}();
result["members"]["pShaderGroupCaptureReplayHandle"]=[&]() {
    json return_niUbxSh=json({});
    
        if (name.pShaderGroupCaptureReplayHandle==NULL){
            return_niUbxSh["null"]=true;
            return return_niUbxSh;
        }
        return serialize_void_p(name.pShaderGroupCaptureReplayHandle);
}();
return result;}

    VkRayTracingShaderGroupCreateInfoKHR deserialize_VkRayTracingShaderGroupCreateInfoKHR(json name){
        auto result=VkRayTracingShaderGroupCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
[&]() {
void* temp_XrRcshb;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_XrRcshb=NULL;
        }
    temp_XrRcshb=deserialize_void_p(name["members"]["pShaderGroupCaptureReplayHandle"]);
}();result.pShaderGroupCaptureReplayHandle=temp_XrRcshb;}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoNV(VkRayTracingPipelineCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tXrevDQ=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_HUoWBmB=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_JogxCwb=json({});
    
        if (name.pStages==NULL){
            return_JogxCwb["null"]=true;
            return return_JogxCwb;
        }
        
        return_JogxCwb["members"]={};
        for(int JogxCwb=0; JogxCwb < name.stageCount; JogxCwb++){
            json temp;
            temp=[&]() {
    json return_VVAWtpC=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[JogxCwb]);}();
            return_JogxCwb["members"][std::to_string(JogxCwb)].push_back(temp);
        }
        return return_JogxCwb;
        }();
result["members"]["groupCount"]=[&]() {
    json return_ZLNCWnb=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_RmJbiJa=json({});
    
        if (name.pGroups==NULL){
            return_RmJbiJa["null"]=true;
            return return_RmJbiJa;
        }
        
        return_RmJbiJa["members"]={};
        for(int RmJbiJa=0; RmJbiJa < name.groupCount; RmJbiJa++){
            json temp;
            temp=[&]() {
    json return_ztEBIeC=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(name.pGroups[RmJbiJa]);}();
            return_RmJbiJa["members"][std::to_string(RmJbiJa)].push_back(temp);
        }
        return return_RmJbiJa;
        }();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_xtOoxNq=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["layout"]=[&]() {
    json return_qjbIgUM=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_HeYHLTv=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_Mkeuads=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoNV deserialize_VkRayTracingPipelineCreateInfoNV(json name){
        auto result=VkRayTracingPipelineCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_wmeakbU;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_wmeakbU=NULL;
        }
    temp_wmeakbU=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int EIxdjSJ=0; EIxdjSJ < result.stageCount; EIxdjSJ++){
            [&]() {
temp_wmeakbU[EIxdjSJ]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][EIxdjSJ]);}();;
        }
        }();result.pStages=temp_wmeakbU;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoNV* temp_ezSutrh;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_ezSutrh=NULL;
        }
    temp_ezSutrh=(VkRayTracingShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoNV));
        for (int NIgkmEK=0; NIgkmEK < result.groupCount; NIgkmEK++){
            [&]() {
temp_ezSutrh[NIgkmEK]=deserialize_VkRayTracingShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][NIgkmEK]);}();;
        }
        }();result.pGroups=temp_ezSutrh;}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoKHR(VkRayTracingPipelineCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tXrevDQ=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_HUoWBmB=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_JogxCwb=json({});
    
        if (name.pStages==NULL){
            return_JogxCwb["null"]=true;
            return return_JogxCwb;
        }
        
        return_JogxCwb["members"]={};
        for(int JogxCwb=0; JogxCwb < name.stageCount; JogxCwb++){
            json temp;
            temp=[&]() {
    json return_VVAWtpC=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[JogxCwb]);}();
            return_JogxCwb["members"][std::to_string(JogxCwb)].push_back(temp);
        }
        return return_JogxCwb;
        }();
result["members"]["groupCount"]=[&]() {
    json return_ZLNCWnb=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_CNQreie=json({});
    
        if (name.pGroups==NULL){
            return_CNQreie["null"]=true;
            return return_CNQreie;
        }
        
        return_CNQreie["members"]={};
        for(int CNQreie=0; CNQreie < name.groupCount; CNQreie++){
            json temp;
            temp=[&]() {
    json return_xixJoer=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(name.pGroups[CNQreie]);}();
            return_CNQreie["members"][std::to_string(CNQreie)].push_back(temp);
        }
        return return_CNQreie;
        }();
result["members"]["maxPipelineRayRecursionDepth"]=[&]() {
    json return_zHBekKC=json({});
    return serialize_uint32_t(name.maxPipelineRayRecursionDepth);}();
result["members"]["pLibraryInfo"]=[&]() {
    json return_hSdmRhj=json({});
    
        if (name.pLibraryInfo==NULL){
            return_hSdmRhj["null"]=true;
            return return_hSdmRhj;
        }
        return_hSdmRhj=[&]() {
    json return_AFYlQkc=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*name.pLibraryInfo);}();
return return_hSdmRhj;}();
result["members"]["pLibraryInterface"]=[&]() {
    json return_bseofPb=json({});
    
        if (name.pLibraryInterface==NULL){
            return_bseofPb["null"]=true;
            return return_bseofPb;
        }
        return_bseofPb=[&]() {
    json return_ShIBvdk=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*name.pLibraryInterface);}();
return return_bseofPb;}();
result["members"]["pDynamicState"]=[&]() {
    json return_TyQhKod=json({});
    
        if (name.pDynamicState==NULL){
            return_TyQhKod["null"]=true;
            return return_TyQhKod;
        }
        return_TyQhKod=[&]() {
    json return_yYPOXeJ=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_TyQhKod;}();
result["members"]["layout"]=[&]() {
    json return_qjbIgUM=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_HeYHLTv=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_Mkeuads=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoKHR deserialize_VkRayTracingPipelineCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_wmeakbU;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_wmeakbU=NULL;
        }
    temp_wmeakbU=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int EIxdjSJ=0; EIxdjSJ < result.stageCount; EIxdjSJ++){
            [&]() {
temp_wmeakbU[EIxdjSJ]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][EIxdjSJ]);}();;
        }
        }();result.pStages=temp_wmeakbU;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoKHR* temp_NQPkDcb;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_NQPkDcb=NULL;
        }
    temp_NQPkDcb=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoKHR));
        for (int ZBaIYhv=0; ZBaIYhv < result.groupCount; ZBaIYhv++){
            [&]() {
temp_NQPkDcb[ZBaIYhv]=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name["members"]["pGroups"]["members"][ZBaIYhv]);}();;
        }
        }();result.pGroups=temp_NQPkDcb;}();
[&]() {
result.maxPipelineRayRecursionDepth=deserialize_uint32_t(name["members"]["maxPipelineRayRecursionDepth"]);}();
[&]() {
VkPipelineLibraryCreateInfoKHR* temp_qECjDra;[&]() {

        if (name["members"]["pLibraryInfo"].contains("null")){
        temp_qECjDra=NULL;
        }
    [&]() {
*(temp_qECjDra)=deserialize_VkPipelineLibraryCreateInfoKHR(name["members"]["pLibraryInfo"]);}();
}();result.pLibraryInfo=temp_qECjDra;}();
[&]() {
VkRayTracingPipelineInterfaceCreateInfoKHR* temp_wYphAKP;[&]() {

        if (name["members"]["pLibraryInterface"].contains("null")){
        temp_wYphAKP=NULL;
        }
    [&]() {
*(temp_wYphAKP)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name["members"]["pLibraryInterface"]);}();
}();result.pLibraryInterface=temp_wYphAKP;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_ebagFXm;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_ebagFXm=NULL;
        }
    [&]() {
*(temp_ebagFXm)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_ebagFXm;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkGeometryTrianglesNV(VkGeometryTrianglesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_oSaFHlT=json({});
    return serialize_VkBuffer(name.vertexData);}();
result["members"]["vertexOffset"]=[&]() {
    json return_fxUGqqH=json({});
    return_fxUGqqH=[&]() {
    json return_gzVlhXg=json({});
    return serialize_uint64_t(name.vertexOffset);}();return return_fxUGqqH;}();
result["members"]["vertexCount"]=[&]() {
    json return_sDAzlBI=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["vertexStride"]=[&]() {
    json return_YLPuBAr=json({});
    return_YLPuBAr=[&]() {
    json return_VZYgkKU=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_YLPuBAr;}();
result["members"]["vertexFormat"]=[&]() {
    json return_PrpRJNA=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["indexData"]=[&]() {
    json return_LXNllgj=json({});
    return serialize_VkBuffer(name.indexData);}();
result["members"]["indexOffset"]=[&]() {
    json return_LYOdMUH=json({});
    return_LYOdMUH=[&]() {
    json return_nSIGkFf=json({});
    return serialize_uint64_t(name.indexOffset);}();return return_LYOdMUH;}();
result["members"]["indexCount"]=[&]() {
    json return_DOvSNFq=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["indexType"]=[&]() {
    json return_cWCOLYT=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["transformData"]=[&]() {
    json return_ZsMALKT=json({});
    return serialize_VkBuffer(name.transformData);}();
result["members"]["transformOffset"]=[&]() {
    json return_QLEzEwz=json({});
    return_QLEzEwz=[&]() {
    json return_SiLqvtt=json({});
    return serialize_uint64_t(name.transformOffset);}();return return_QLEzEwz;}();
return result;}

    VkGeometryTrianglesNV deserialize_VkGeometryTrianglesNV(json name){
        auto result=VkGeometryTrianglesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.vertexData=deserialize_VkBuffer(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexOffset=deserialize_uint64_t(name["members"]["vertexOffset"]);}();}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.indexData=deserialize_VkBuffer(name["members"]["indexData"]);}();
[&]() {
[&]() {
result.indexOffset=deserialize_uint64_t(name["members"]["indexOffset"]);}();}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.transformData=deserialize_VkBuffer(name["members"]["transformData"]);}();
[&]() {
[&]() {
result.transformOffset=deserialize_uint64_t(name["members"]["transformOffset"]);}();}();
return result;}

    json serialize_VkGeometryAABBNV(VkGeometryAABBNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aabbData"]=[&]() {
    json return_EfYhuID=json({});
    return serialize_VkBuffer(name.aabbData);}();
result["members"]["numAABBs"]=[&]() {
    json return_laltVRd=json({});
    return serialize_uint32_t(name.numAABBs);}();
result["members"]["stride"]=[&]() {
    json return_lWJEvlL=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
return result;}

    VkGeometryAABBNV deserialize_VkGeometryAABBNV(json name){
        auto result=VkGeometryAABBNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.aabbData=deserialize_VkBuffer(name["members"]["aabbData"]);}();
[&]() {
result.numAABBs=deserialize_uint32_t(name["members"]["numAABBs"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkGeometryDataNV(VkGeometryDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_EPDctuQ=json({});
    return serialize_VkGeometryTrianglesNV(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_QkcCMIs=json({});
    return serialize_VkGeometryAABBNV(name.aabbs);}();
return result;}

    VkGeometryDataNV deserialize_VkGeometryDataNV(json name){
        auto result=VkGeometryDataNV();
    
[&]() {
result.triangles=deserialize_VkGeometryTrianglesNV(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkGeometryAABBNV(name["members"]["aabbs"]);}();
return result;}

    json serialize_VkGeometryNV(VkGeometryNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_IbXwkDd=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_UCrJsmi=json({});
    return serialize_VkGeometryDataNV(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_jMtlADY=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkGeometryNV deserialize_VkGeometryNV(json name){
        auto result=VkGeometryNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkGeometryDataNV(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureInfoNV(VkAccelerationStructureInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_ReeifAg=json({});
    return serialize_VkAccelerationStructureTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_DwdOLty=json({});
    return serialize_VkBuildAccelerationStructureFlagsNV(name.flags);}();
result["members"]["instanceCount"]=[&]() {
    json return_GLydUbe=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["geometryCount"]=[&]() {
    json return_bKVJmGZ=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_xMJVSnI=json({});
    
        if (name.pGeometries==NULL){
            return_xMJVSnI["null"]=true;
            return return_xMJVSnI;
        }
        
        return_xMJVSnI["members"]={};
        for(int xMJVSnI=0; xMJVSnI < name.geometryCount; xMJVSnI++){
            json temp;
            temp=[&]() {
    json return_ROSTLIC=json({});
    return serialize_VkGeometryNV(name.pGeometries[xMJVSnI]);}();
            return_xMJVSnI["members"][std::to_string(xMJVSnI)].push_back(temp);
        }
        return return_xMJVSnI;
        }();
return result;}

    VkAccelerationStructureInfoNV deserialize_VkAccelerationStructureInfoNV(json name){
        auto result=VkAccelerationStructureInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsNV(name["members"]["flags"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkGeometryNV* temp_SBpfhZr;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_SBpfhZr=NULL;
        }
    temp_SBpfhZr=(VkGeometryNV*)malloc(result.geometryCount*sizeof(VkGeometryNV));
        for (int HdBoIWM=0; HdBoIWM < result.geometryCount; HdBoIWM++){
            [&]() {
temp_SBpfhZr[HdBoIWM]=deserialize_VkGeometryNV(name["members"]["pGeometries"]["members"][HdBoIWM]);}();;
        }
        }();result.pGeometries=temp_SBpfhZr;}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoNV(VkAccelerationStructureCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compactedSize"]=[&]() {
    json return_CxaWGak=json({});
    return_CxaWGak=[&]() {
    json return_GquJGkg=json({});
    return serialize_uint64_t(name.compactedSize);}();return return_CxaWGak;}();
result["members"]["info"]=[&]() {
    json return_dxEiLRB=json({});
    return serialize_VkAccelerationStructureInfoNV(name.info);}();
return result;}

    VkAccelerationStructureCreateInfoNV deserialize_VkAccelerationStructureCreateInfoNV(json name){
        auto result=VkAccelerationStructureCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.compactedSize=deserialize_uint64_t(name["members"]["compactedSize"]);}();}();
[&]() {
result.info=deserialize_VkAccelerationStructureInfoNV(name["members"]["info"]);}();
return result;}

    json serialize_VkBindAccelerationStructureMemoryInfoNV(VkBindAccelerationStructureMemoryInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_IWSHKTe=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_kcgOuWH=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_UyDBQLD=json({});
    
        if (name.pDeviceIndices==NULL){
            return_UyDBQLD["null"]=true;
            return return_UyDBQLD;
        }
        
        return_UyDBQLD["members"]={};
        for(int UyDBQLD=0; UyDBQLD < name.deviceIndexCount; UyDBQLD++){
            json temp;
            temp=[&]() {
    json return_XkMOnOS=json({});
    return serialize_uint32_t(name.pDeviceIndices[UyDBQLD]);}();
            return_UyDBQLD["members"][std::to_string(UyDBQLD)].push_back(temp);
        }
        return return_UyDBQLD;
        }();
return result;}

    VkBindAccelerationStructureMemoryInfoNV deserialize_VkBindAccelerationStructureMemoryInfoNV(json name){
        auto result=VkBindAccelerationStructureMemoryInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_nIzIfmY;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_nIzIfmY=NULL;
        }
    temp_nIzIfmY=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int AAutYhu=0; AAutYhu < result.deviceIndexCount; AAutYhu++){
            [&]() {
temp_nIzIfmY[AAutYhu]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][AAutYhu]);}();;
        }
        }();result.pDeviceIndices=temp_nIzIfmY;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureKHR(VkWriteDescriptorSetAccelerationStructureKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_mmbwDHD=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_TLgXjxY=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_TLgXjxY["null"]=true;
            return return_TLgXjxY;
        }
        
        return_TLgXjxY["members"]={};
        for(int TLgXjxY=0; TLgXjxY < name.accelerationStructureCount; TLgXjxY++){
            json temp;
            temp=[&]() {
    json return_EPcArec=json({});
    return serialize_VkAccelerationStructureKHR(name.pAccelerationStructures[TLgXjxY]);}();
            return_TLgXjxY["members"][std::to_string(TLgXjxY)].push_back(temp);
        }
        return return_TLgXjxY;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureKHR deserialize_VkWriteDescriptorSetAccelerationStructureKHR(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureKHR* temp_BFwQnFW;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_BFwQnFW=NULL;
        }
    temp_BFwQnFW=(VkAccelerationStructureKHR*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureKHR));
        for (int TWvwMem=0; TWvwMem < result.accelerationStructureCount; TWvwMem++){
            [&]() {
temp_BFwQnFW[TWvwMem]=deserialize_VkAccelerationStructureKHR(name["members"]["pAccelerationStructures"]["members"][TWvwMem]);}();;
        }
        }();result.pAccelerationStructures=temp_BFwQnFW;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureNV(VkWriteDescriptorSetAccelerationStructureNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_mmbwDHD=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_yQOscPk=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_yQOscPk["null"]=true;
            return return_yQOscPk;
        }
        
        return_yQOscPk["members"]={};
        for(int yQOscPk=0; yQOscPk < name.accelerationStructureCount; yQOscPk++){
            json temp;
            temp=[&]() {
    json return_hbjWuHX=json({});
    return serialize_VkAccelerationStructureNV(name.pAccelerationStructures[yQOscPk]);}();
            return_yQOscPk["members"][std::to_string(yQOscPk)].push_back(temp);
        }
        return return_yQOscPk;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureNV deserialize_VkWriteDescriptorSetAccelerationStructureNV(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureNV* temp_yHhWkkX;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_yHhWkkX=NULL;
        }
    temp_yHhWkkX=(VkAccelerationStructureNV*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureNV));
        for (int HNZvfkJ=0; HNZvfkJ < result.accelerationStructureCount; HNZvfkJ++){
            [&]() {
temp_yHhWkkX[HNZvfkJ]=deserialize_VkAccelerationStructureNV(name["members"]["pAccelerationStructures"]["members"][HNZvfkJ]);}();;
        }
        }();result.pAccelerationStructures=temp_yHhWkkX;}();
return result;}

    json serialize_VkAccelerationStructureMemoryRequirementsInfoNV(VkAccelerationStructureMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_eBiXpLq=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsTypeNV(name.type);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_IWSHKTe=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureMemoryRequirementsInfoNV deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(json name){
        auto result=VkAccelerationStructureMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(name["members"]["type"]);}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkPhysicalDeviceAccelerationStructureFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_RySMaKh=json({});
    return_RySMaKh=[&]() {
    json return_LYkFMgP=json({});
    return serialize_uint32_t(name.accelerationStructure);}();return return_RySMaKh;}();
result["members"]["accelerationStructureCaptureReplay"]=[&]() {
    json return_ZkchuMt=json({});
    return_ZkchuMt=[&]() {
    json return_OPKLbbt=json({});
    return serialize_uint32_t(name.accelerationStructureCaptureReplay);}();return return_ZkchuMt;}();
result["members"]["accelerationStructureIndirectBuild"]=[&]() {
    json return_HIkdnSu=json({});
    return_HIkdnSu=[&]() {
    json return_HKHfPZS=json({});
    return serialize_uint32_t(name.accelerationStructureIndirectBuild);}();return return_HIkdnSu;}();
result["members"]["accelerationStructureHostCommands"]=[&]() {
    json return_KLSUFNo=json({});
    return_KLSUFNo=[&]() {
    json return_GqNXGOg=json({});
    return serialize_uint32_t(name.accelerationStructureHostCommands);}();return return_KLSUFNo;}();
result["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]=[&]() {
    json return_NhYADTA=json({});
    return_NhYADTA=[&]() {
    json return_POthzUB=json({});
    return serialize_uint32_t(name.descriptorBindingAccelerationStructureUpdateAfterBind);}();return return_NhYADTA;}();
return result;}

    VkPhysicalDeviceAccelerationStructureFeaturesKHR deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructureFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint32_t(name["members"]["accelerationStructure"]);}();}();
[&]() {
[&]() {
result.accelerationStructureCaptureReplay=deserialize_uint32_t(name["members"]["accelerationStructureCaptureReplay"]);}();}();
[&]() {
[&]() {
result.accelerationStructureIndirectBuild=deserialize_uint32_t(name["members"]["accelerationStructureIndirectBuild"]);}();}();
[&]() {
[&]() {
result.accelerationStructureHostCommands=deserialize_uint32_t(name["members"]["accelerationStructureHostCommands"]);}();}();
[&]() {
[&]() {
result.descriptorBindingAccelerationStructureUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkPhysicalDeviceRayTracingPipelineFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPipeline"]=[&]() {
    json return_UKSXKqD=json({});
    return_UKSXKqD=[&]() {
    json return_EIycdli=json({});
    return serialize_uint32_t(name.rayTracingPipeline);}();return return_UKSXKqD;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]=[&]() {
    json return_mDMbwHp=json({});
    return_mDMbwHp=[&]() {
    json return_BXlymJz=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplay);}();return return_mDMbwHp;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]=[&]() {
    json return_aRBMqSd=json({});
    return_aRBMqSd=[&]() {
    json return_weGtgiD=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplayMixed);}();return return_aRBMqSd;}();
result["members"]["rayTracingPipelineTraceRaysIndirect"]=[&]() {
    json return_VtmjIei=json({});
    return_VtmjIei=[&]() {
    json return_EJpddkD=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect);}();return return_VtmjIei;}();
result["members"]["rayTraversalPrimitiveCulling"]=[&]() {
    json return_satPDPD=json({});
    return_satPDPD=[&]() {
    json return_ejwIIan=json({});
    return serialize_uint32_t(name.rayTraversalPrimitiveCulling);}();return return_satPDPD;}();
return result;}

    VkPhysicalDeviceRayTracingPipelineFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelineFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPipeline=deserialize_uint32_t(name["members"]["rayTracingPipeline"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplay=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplayMixed=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect"]);}();}();
[&]() {
[&]() {
result.rayTraversalPrimitiveCulling=deserialize_uint32_t(name["members"]["rayTraversalPrimitiveCulling"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayQueryFeaturesKHR(VkPhysicalDeviceRayQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayQuery"]=[&]() {
    json return_qFIbZSv=json({});
    return_qFIbZSv=[&]() {
    json return_lekZfcf=json({});
    return serialize_uint32_t(name.rayQuery);}();return return_qFIbZSv;}();
return result;}

    VkPhysicalDeviceRayQueryFeaturesKHR deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayQuery=deserialize_uint32_t(name["members"]["rayQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkPhysicalDeviceAccelerationStructurePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_DxIChET=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_wUHPhNK=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxPrimitiveCount"]=[&]() {
    json return_YjiIcjz=json({});
    return serialize_uint64_t(name.maxPrimitiveCount);}();
result["members"]["maxPerStageDescriptorAccelerationStructures"]=[&]() {
    json return_vaQOnNM=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorAccelerationStructures);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_EIIWXof=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindAccelerationStructures);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_xbqMBQQ=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
result["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_oGOYbFW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindAccelerationStructures);}();
result["members"]["minAccelerationStructureScratchOffsetAlignment"]=[&]() {
    json return_TOipLgS=json({});
    return serialize_uint32_t(name.minAccelerationStructureScratchOffsetAlignment);}();
return result;}

    VkPhysicalDeviceAccelerationStructurePropertiesKHR deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructurePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxPrimitiveCount=deserialize_uint64_t(name["members"]["maxPrimitiveCount"]);}();
[&]() {
result.maxPerStageDescriptorAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorAccelerationStructures"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.minAccelerationStructureScratchOffsetAlignment=deserialize_uint32_t(name["members"]["minAccelerationStructureScratchOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkPhysicalDeviceRayTracingPipelinePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_BvdTMyW=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRayRecursionDepth"]=[&]() {
    json return_wbpceMW=json({});
    return serialize_uint32_t(name.maxRayRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_vcxjUjw=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_dHazkQX=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["shaderGroupHandleCaptureReplaySize"]=[&]() {
    json return_AKqYnZB=json({});
    return serialize_uint32_t(name.shaderGroupHandleCaptureReplaySize);}();
result["members"]["maxRayDispatchInvocationCount"]=[&]() {
    json return_WCNnzqB=json({});
    return serialize_uint32_t(name.maxRayDispatchInvocationCount);}();
result["members"]["shaderGroupHandleAlignment"]=[&]() {
    json return_qswysJZ=json({});
    return serialize_uint32_t(name.shaderGroupHandleAlignment);}();
result["members"]["maxRayHitAttributeSize"]=[&]() {
    json return_BOKrciq=json({});
    return serialize_uint32_t(name.maxRayHitAttributeSize);}();
return result;}

    VkPhysicalDeviceRayTracingPipelinePropertiesKHR deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelinePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRayRecursionDepth=deserialize_uint32_t(name["members"]["maxRayRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.shaderGroupHandleCaptureReplaySize=deserialize_uint32_t(name["members"]["shaderGroupHandleCaptureReplaySize"]);}();
[&]() {
result.maxRayDispatchInvocationCount=deserialize_uint32_t(name["members"]["maxRayDispatchInvocationCount"]);}();
[&]() {
result.shaderGroupHandleAlignment=deserialize_uint32_t(name["members"]["shaderGroupHandleAlignment"]);}();
[&]() {
result.maxRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPropertiesNV(VkPhysicalDeviceRayTracingPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_BvdTMyW=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_xtOoxNq=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_vcxjUjw=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_dHazkQX=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_DxIChET=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_wUHPhNK=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxTriangleCount"]=[&]() {
    json return_hMRMuhB=json({});
    return serialize_uint64_t(name.maxTriangleCount);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_xbqMBQQ=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
return result;}

    VkPhysicalDeviceRayTracingPropertiesNV deserialize_VkPhysicalDeviceRayTracingPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxTriangleCount=deserialize_uint64_t(name["members"]["maxTriangleCount"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
return result;}

    json serialize_VkStridedDeviceAddressRegionKHR(VkStridedDeviceAddressRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
result["members"]["stride"]=[&]() {
    json return_iTPAgtT=json({});
    return_iTPAgtT=[&]() {
    json return_eIZhHmN=json({});
    return serialize_uint64_t(name.stride);}();return return_iTPAgtT;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkStridedDeviceAddressRegionKHR deserialize_VkStridedDeviceAddressRegionKHR(json name){
        auto result=VkStridedDeviceAddressRegionKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkTraceRaysIndirectCommandKHR(VkTraceRaysIndirectCommandKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_hKmcNDm=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommandKHR deserialize_VkTraceRaysIndirectCommandKHR(json name){
        auto result=VkTraceRaysIndirectCommandKHR();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkTraceRaysIndirectCommand2KHR(VkTraceRaysIndirectCommand2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["raygenShaderRecordAddress"]=[&]() {
    json return_otKbPCi=json({});
    return_otKbPCi=[&]() {
    json return_VkkKmGW=json({});
    return serialize_uint64_t(name.raygenShaderRecordAddress);}();return return_otKbPCi;}();
result["members"]["raygenShaderRecordSize"]=[&]() {
    json return_XsypSzo=json({});
    return_XsypSzo=[&]() {
    json return_JQOOWTW=json({});
    return serialize_uint64_t(name.raygenShaderRecordSize);}();return return_XsypSzo;}();
result["members"]["missShaderBindingTableAddress"]=[&]() {
    json return_YSZACfN=json({});
    return_YSZACfN=[&]() {
    json return_xeanrCv=json({});
    return serialize_uint64_t(name.missShaderBindingTableAddress);}();return return_YSZACfN;}();
result["members"]["missShaderBindingTableSize"]=[&]() {
    json return_kuybrTv=json({});
    return_kuybrTv=[&]() {
    json return_IWyHspy=json({});
    return serialize_uint64_t(name.missShaderBindingTableSize);}();return return_kuybrTv;}();
result["members"]["missShaderBindingTableStride"]=[&]() {
    json return_HmJCHOL=json({});
    return_HmJCHOL=[&]() {
    json return_FMuRjmj=json({});
    return serialize_uint64_t(name.missShaderBindingTableStride);}();return return_HmJCHOL;}();
result["members"]["hitShaderBindingTableAddress"]=[&]() {
    json return_NKRWvHT=json({});
    return_NKRWvHT=[&]() {
    json return_IUxkYeL=json({});
    return serialize_uint64_t(name.hitShaderBindingTableAddress);}();return return_NKRWvHT;}();
result["members"]["hitShaderBindingTableSize"]=[&]() {
    json return_cWywXSH=json({});
    return_cWywXSH=[&]() {
    json return_pJxphJQ=json({});
    return serialize_uint64_t(name.hitShaderBindingTableSize);}();return return_cWywXSH;}();
result["members"]["hitShaderBindingTableStride"]=[&]() {
    json return_PuKZKTf=json({});
    return_PuKZKTf=[&]() {
    json return_dkUmxow=json({});
    return serialize_uint64_t(name.hitShaderBindingTableStride);}();return return_PuKZKTf;}();
result["members"]["callableShaderBindingTableAddress"]=[&]() {
    json return_mxEClFn=json({});
    return_mxEClFn=[&]() {
    json return_OgjhfdS=json({});
    return serialize_uint64_t(name.callableShaderBindingTableAddress);}();return return_mxEClFn;}();
result["members"]["callableShaderBindingTableSize"]=[&]() {
    json return_wJtbjFF=json({});
    return_wJtbjFF=[&]() {
    json return_qfxBLgz=json({});
    return serialize_uint64_t(name.callableShaderBindingTableSize);}();return return_wJtbjFF;}();
result["members"]["callableShaderBindingTableStride"]=[&]() {
    json return_GesgKvc=json({});
    return_GesgKvc=[&]() {
    json return_NEXMDik=json({});
    return serialize_uint64_t(name.callableShaderBindingTableStride);}();return return_GesgKvc;}();
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_hKmcNDm=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommand2KHR deserialize_VkTraceRaysIndirectCommand2KHR(json name){
        auto result=VkTraceRaysIndirectCommand2KHR();
    
[&]() {
[&]() {
result.raygenShaderRecordAddress=deserialize_uint64_t(name["members"]["raygenShaderRecordAddress"]);}();}();
[&]() {
[&]() {
result.raygenShaderRecordSize=deserialize_uint64_t(name["members"]["raygenShaderRecordSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableAddress=deserialize_uint64_t(name["members"]["missShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableSize=deserialize_uint64_t(name["members"]["missShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableStride=deserialize_uint64_t(name["members"]["missShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableAddress=deserialize_uint64_t(name["members"]["hitShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableSize=deserialize_uint64_t(name["members"]["hitShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableStride=deserialize_uint64_t(name["members"]["hitShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableAddress=deserialize_uint64_t(name["members"]["callableShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableSize=deserialize_uint64_t(name["members"]["callableShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableStride=deserialize_uint64_t(name["members"]["callableShaderBindingTableStride"]);}();}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMaintenance1"]=[&]() {
    json return_ZGIhthC=json({});
    return_ZGIhthC=[&]() {
    json return_LKDIFAI=json({});
    return serialize_uint32_t(name.rayTracingMaintenance1);}();return return_ZGIhthC;}();
result["members"]["rayTracingPipelineTraceRaysIndirect2"]=[&]() {
    json return_YJplPnY=json({});
    return_YJplPnY=[&]() {
    json return_QrzprFc=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect2);}();return return_YJplPnY;}();
return result;}

    VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMaintenance1=deserialize_uint32_t(name["members"]["rayTracingMaintenance1"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect2=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect2"]);}();}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesListEXT(VkDrmFormatModifierPropertiesListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_PYUYDJw=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_huSkpIp=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_huSkpIp["null"]=true;
            return return_huSkpIp;
        }
        
        return_huSkpIp["members"]={};
        for(int huSkpIp=0; huSkpIp < name.drmFormatModifierCount; huSkpIp++){
            json temp;
            temp=[&]() {
    json return_bboAoBz=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(name.pDrmFormatModifierProperties[huSkpIp]);}();
            return_huSkpIp["members"][std::to_string(huSkpIp)].push_back(temp);
        }
        return return_huSkpIp;
        }();
return result;}

    VkDrmFormatModifierPropertiesListEXT deserialize_VkDrmFormatModifierPropertiesListEXT(json name){
        auto result=VkDrmFormatModifierPropertiesListEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierPropertiesEXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierPropertiesEXT));
        for (int FKLgoww=0; FKLgoww < result.drmFormatModifierCount; FKLgoww++){
            [&]() {
result.pDrmFormatModifierProperties[FKLgoww]=deserialize_VkDrmFormatModifierPropertiesEXT(name["members"]["pDrmFormatModifierProperties"]["members"][FKLgoww]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierPropertiesEXT(VkDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_PrrVGoe=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_BGuXzDo=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_PNxtMfZ=json({});
    return serialize_VkFormatFeatureFlags(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierPropertiesEXT deserialize_VkDrmFormatModifierPropertiesEXT(json name){
        auto result=VkDrmFormatModifierPropertiesEXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkPhysicalDeviceImageDrmFormatModifierInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_PrrVGoe=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["sharingMode"]=[&]() {
    json return_yUyTEYB=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_WmcLOAF=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_dvhWemM=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_dvhWemM["null"]=true;
            return return_dvhWemM;
        }
        
        return_dvhWemM["members"]={};
        for(int dvhWemM=0; dvhWemM < name.queueFamilyIndexCount; dvhWemM++){
            json temp;
            temp=[&]() {
    json return_CJJYDwr=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[dvhWemM]);}();
            return_dvhWemM["members"][std::to_string(dvhWemM)].push_back(temp);
        }
        return return_dvhWemM;
        }();
return result;}

    VkPhysicalDeviceImageDrmFormatModifierInfoEXT deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(json name){
        auto result=VkPhysicalDeviceImageDrmFormatModifierInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_MhmszBU;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_MhmszBU=NULL;
        }
    temp_MhmszBU=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int gkCgTDc=0; gkCgTDc < result.queueFamilyIndexCount; gkCgTDc++){
            [&]() {
temp_MhmszBU[gkCgTDc]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][gkCgTDc]);}();;
        }
        }();result.pQueueFamilyIndices=temp_MhmszBU;}();
return result;}

    json serialize_VkImageDrmFormatModifierListCreateInfoEXT(VkImageDrmFormatModifierListCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_PYUYDJw=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifiers"]=[&]() {
    json return_cqURZYf=json({});
    
        if (name.pDrmFormatModifiers==NULL){
            return_cqURZYf["null"]=true;
            return return_cqURZYf;
        }
        
        return_cqURZYf["members"]={};
        for(int cqURZYf=0; cqURZYf < name.drmFormatModifierCount; cqURZYf++){
            json temp;
            temp=[&]() {
    json return_ONMBUmN=json({});
    return serialize_uint64_t(name.pDrmFormatModifiers[cqURZYf]);}();
            return_cqURZYf["members"][std::to_string(cqURZYf)].push_back(temp);
        }
        return return_cqURZYf;
        }();
return result;}

    VkImageDrmFormatModifierListCreateInfoEXT deserialize_VkImageDrmFormatModifierListCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierListCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {
uint64_t* temp_HwOUhxX;[&]() {

        if (name["members"]["pDrmFormatModifiers"].contains("null")){
        temp_HwOUhxX=NULL;
        }
    temp_HwOUhxX=(uint64_t*)malloc(result.drmFormatModifierCount*sizeof(uint64_t));
        for (int yREbSSn=0; yREbSSn < result.drmFormatModifierCount; yREbSSn++){
            [&]() {
temp_HwOUhxX[yREbSSn]=deserialize_uint64_t(name["members"]["pDrmFormatModifiers"]["members"][yREbSSn]);}();;
        }
        }();result.pDrmFormatModifiers=temp_HwOUhxX;}();
return result;}

    json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(VkImageDrmFormatModifierExplicitCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_PrrVGoe=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_BGuXzDo=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["pPlaneLayouts"]=[&]() {
    json return_LetyYke=json({});
    
        if (name.pPlaneLayouts==NULL){
            return_LetyYke["null"]=true;
            return return_LetyYke;
        }
        
        return_LetyYke["members"]={};
        for(int LetyYke=0; LetyYke < name.drmFormatModifierPlaneCount; LetyYke++){
            json temp;
            temp=[&]() {
    json return_MKurhlo=json({});
    return serialize_VkSubresourceLayout(name.pPlaneLayouts[LetyYke]);}();
            return_LetyYke["members"][std::to_string(LetyYke)].push_back(temp);
        }
        return return_LetyYke;
        }();
return result;}

    VkImageDrmFormatModifierExplicitCreateInfoEXT deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierExplicitCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
VkSubresourceLayout* temp_OlDAfhj;[&]() {

        if (name["members"]["pPlaneLayouts"].contains("null")){
        temp_OlDAfhj=NULL;
        }
    temp_OlDAfhj=(VkSubresourceLayout*)malloc(result.drmFormatModifierPlaneCount*sizeof(VkSubresourceLayout));
        for (int vqHjYog=0; vqHjYog < result.drmFormatModifierPlaneCount; vqHjYog++){
            [&]() {
temp_OlDAfhj[vqHjYog]=deserialize_VkSubresourceLayout(name["members"]["pPlaneLayouts"]["members"][vqHjYog]);}();;
        }
        }();result.pPlaneLayouts=temp_OlDAfhj;}();
return result;}

    json serialize_VkImageDrmFormatModifierPropertiesEXT(VkImageDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_PrrVGoe=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
return result;}

    VkImageDrmFormatModifierPropertiesEXT deserialize_VkImageDrmFormatModifierPropertiesEXT(json name){
        auto result=VkImageDrmFormatModifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfo(VkImageStencilUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_QhSgbOY=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfo deserialize_VkImageStencilUsageCreateInfo(json name){
        auto result=VkImageStencilUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfoEXT(VkImageStencilUsageCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_QhSgbOY=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfoEXT deserialize_VkImageStencilUsageCreateInfoEXT(json name){
        auto result=VkImageStencilUsageCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkDeviceMemoryOverallocationCreateInfoAMD(VkDeviceMemoryOverallocationCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["overallocationBehavior"]=[&]() {
    json return_StBeTWa=json({});
    return serialize_VkMemoryOverallocationBehaviorAMD(name.overallocationBehavior);}();
return result;}

    VkDeviceMemoryOverallocationCreateInfoAMD deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(json name){
        auto result=VkDeviceMemoryOverallocationCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.overallocationBehavior=deserialize_VkMemoryOverallocationBehaviorAMD(name["members"]["overallocationBehavior"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkPhysicalDeviceFragmentDensityMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMap"]=[&]() {
    json return_ZLEMXAF=json({});
    return_ZLEMXAF=[&]() {
    json return_BXdUWDa=json({});
    return serialize_uint32_t(name.fragmentDensityMap);}();return return_ZLEMXAF;}();
result["members"]["fragmentDensityMapDynamic"]=[&]() {
    json return_vDKaSAY=json({});
    return_vDKaSAY=[&]() {
    json return_YLWYNTN=json({});
    return serialize_uint32_t(name.fragmentDensityMapDynamic);}();return return_vDKaSAY;}();
result["members"]["fragmentDensityMapNonSubsampledImages"]=[&]() {
    json return_BxAnGkR=json({});
    return_BxAnGkR=[&]() {
    json return_LLlOHSm=json({});
    return serialize_uint32_t(name.fragmentDensityMapNonSubsampledImages);}();return return_BxAnGkR;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapFeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMap=deserialize_uint32_t(name["members"]["fragmentDensityMap"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapDynamic=deserialize_uint32_t(name["members"]["fragmentDensityMapDynamic"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapNonSubsampledImages=deserialize_uint32_t(name["members"]["fragmentDensityMapNonSubsampledImages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapDeferred"]=[&]() {
    json return_icAQqtJ=json({});
    return_icAQqtJ=[&]() {
    json return_CisVLKE=json({});
    return serialize_uint32_t(name.fragmentDensityMapDeferred);}();return return_icAQqtJ;}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2FeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapDeferred=deserialize_uint32_t(name["members"]["fragmentDensityMapDeferred"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapOffset"]=[&]() {
    json return_NvoIAnN=json({});
    return_NvoIAnN=[&]() {
    json return_opMaeZx=json({});
    return serialize_uint32_t(name.fragmentDensityMapOffset);}();return return_NvoIAnN;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapOffset=deserialize_uint32_t(name["members"]["fragmentDensityMapOffset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkPhysicalDeviceFragmentDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentDensityTexelSize"]=[&]() {
    json return_TJltazE=json({});
    return serialize_VkExtent2D(name.minFragmentDensityTexelSize);}();
result["members"]["maxFragmentDensityTexelSize"]=[&]() {
    json return_trovlGt=json({});
    return serialize_VkExtent2D(name.maxFragmentDensityTexelSize);}();
result["members"]["fragmentDensityInvocations"]=[&]() {
    json return_ahwPJPa=json({});
    return_ahwPJPa=[&]() {
    json return_HcPBsIp=json({});
    return serialize_uint32_t(name.fragmentDensityInvocations);}();return return_ahwPJPa;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapPropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentDensityTexelSize"]);}();
[&]() {
result.maxFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentDensityTexelSize"]);}();
[&]() {
[&]() {
result.fragmentDensityInvocations=deserialize_uint32_t(name["members"]["fragmentDensityInvocations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subsampledLoads"]=[&]() {
    json return_vmKCRLz=json({});
    return_vmKCRLz=[&]() {
    json return_XNHmSrW=json({});
    return serialize_uint32_t(name.subsampledLoads);}();return return_vmKCRLz;}();
result["members"]["subsampledCoarseReconstructionEarlyAccess"]=[&]() {
    json return_bPMhWcA=json({});
    return_bPMhWcA=[&]() {
    json return_GzPyESS=json({});
    return serialize_uint32_t(name.subsampledCoarseReconstructionEarlyAccess);}();return return_bPMhWcA;}();
result["members"]["maxSubsampledArrayLayers"]=[&]() {
    json return_HvTsnNe=json({});
    return serialize_uint32_t(name.maxSubsampledArrayLayers);}();
result["members"]["maxDescriptorSetSubsampledSamplers"]=[&]() {
    json return_xvbOxos=json({});
    return serialize_uint32_t(name.maxDescriptorSetSubsampledSamplers);}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2PropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subsampledLoads=deserialize_uint32_t(name["members"]["subsampledLoads"]);}();}();
[&]() {
[&]() {
result.subsampledCoarseReconstructionEarlyAccess=deserialize_uint32_t(name["members"]["subsampledCoarseReconstructionEarlyAccess"]);}();}();
[&]() {
result.maxSubsampledArrayLayers=deserialize_uint32_t(name["members"]["maxSubsampledArrayLayers"]);}();
[&]() {
result.maxDescriptorSetSubsampledSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSubsampledSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetGranularity"]=[&]() {
    json return_cMEjDEe=json({});
    return serialize_VkExtent2D(name.fragmentDensityOffsetGranularity);}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.fragmentDensityOffsetGranularity=deserialize_VkExtent2D(name["members"]["fragmentDensityOffsetGranularity"]);}();
return result;}

    json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(VkRenderPassFragmentDensityMapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapAttachment"]=[&]() {
    json return_VQqGqaG=json({});
    return serialize_VkAttachmentReference(name.fragmentDensityMapAttachment);}();
return result;}

    VkRenderPassFragmentDensityMapCreateInfoEXT deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(json name){
        auto result=VkRenderPassFragmentDensityMapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.fragmentDensityMapAttachment=deserialize_VkAttachmentReference(name["members"]["fragmentDensityMapAttachment"]);}();
return result;}

    json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(VkSubpassFragmentDensityMapOffsetEndInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetCount"]=[&]() {
    json return_wDPDeAw=json({});
    return serialize_uint32_t(name.fragmentDensityOffsetCount);}();
result["members"]["pFragmentDensityOffsets"]=[&]() {
    json return_Fbritkk=json({});
    
        if (name.pFragmentDensityOffsets==NULL){
            return_Fbritkk["null"]=true;
            return return_Fbritkk;
        }
        
        return_Fbritkk["members"]={};
        for(int Fbritkk=0; Fbritkk < name.fragmentDensityOffsetCount; Fbritkk++){
            json temp;
            temp=[&]() {
    json return_gSFUiob=json({});
    return serialize_VkOffset2D(name.pFragmentDensityOffsets[Fbritkk]);}();
            return_Fbritkk["members"][std::to_string(Fbritkk)].push_back(temp);
        }
        return return_Fbritkk;
        }();
return result;}

    VkSubpassFragmentDensityMapOffsetEndInfoQCOM deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(json name){
        auto result=VkSubpassFragmentDensityMapOffsetEndInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.fragmentDensityOffsetCount=deserialize_uint32_t(name["members"]["fragmentDensityOffsetCount"]);}();
[&]() {
VkOffset2D* temp_PHyqSKz;[&]() {

        if (name["members"]["pFragmentDensityOffsets"].contains("null")){
        temp_PHyqSKz=NULL;
        }
    temp_PHyqSKz=(VkOffset2D*)malloc(result.fragmentDensityOffsetCount*sizeof(VkOffset2D));
        for (int JsqsHoE=0; JsqsHoE < result.fragmentDensityOffsetCount; JsqsHoE++){
            [&]() {
temp_PHyqSKz[JsqsHoE]=deserialize_VkOffset2D(name["members"]["pFragmentDensityOffsets"]["members"][JsqsHoE]);}();;
        }
        }();result.pFragmentDensityOffsets=temp_PHyqSKz;}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(VkPhysicalDeviceScalarBlockLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_oGQUcpR=json({});
    return_oGQUcpR=[&]() {
    json return_cwwLHbn=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_oGQUcpR;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeatures deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_oGQUcpR=json({});
    return_oGQUcpR=[&]() {
    json return_cwwLHbn=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_oGQUcpR;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeaturesEXT deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkSurfaceProtectedCapabilitiesKHR(VkSurfaceProtectedCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsProtected"]=[&]() {
    json return_hTridtQ=json({});
    return_hTridtQ=[&]() {
    json return_fUjJEhM=json({});
    return serialize_uint32_t(name.supportsProtected);}();return return_hTridtQ;}();
return result;}

    VkSurfaceProtectedCapabilitiesKHR deserialize_VkSurfaceProtectedCapabilitiesKHR(json name){
        auto result=VkSurfaceProtectedCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.supportsProtected=deserialize_uint32_t(name["members"]["supportsProtected"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkPhysicalDeviceUniformBufferStandardLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_vsLfvhv=json({});
    return_vsLfvhv=[&]() {
    json return_AGOkKpT=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_vsLfvhv;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeatures deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_vsLfvhv=json({});
    return_vsLfvhv=[&]() {
    json return_AGOkKpT=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_vsLfvhv;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkPhysicalDeviceDepthClipEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipEnable"]=[&]() {
    json return_CKVnouO=json({});
    return_CKVnouO=[&]() {
    json return_tDZOzYQ=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_CKVnouO;}();
return result;}

    VkPhysicalDeviceDepthClipEnableFeaturesEXT deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkPipelineRasterizationDepthClipStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WOrapUS=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name.flags);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_CKVnouO=json({});
    return_CKVnouO=[&]() {
    json return_tDZOzYQ=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_CKVnouO;}();
return result;}

    VkPipelineRasterizationDepthClipStateCreateInfoEXT deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationDepthClipStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkPhysicalDeviceMemoryBudgetPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["heapBudget"]=[&]() {
    json return_cTQUPEj=json({});
    
        return_cTQUPEj["members"]={};
        for(int cTQUPEj=0; cTQUPEj < VK_MAX_MEMORY_HEAPS; cTQUPEj++){
            json temp;
            temp=[&]() {
    json return_EIKUGya=json({});
    return_EIKUGya=[&]() {
    json return_YCMxKbB=json({});
    return serialize_uint64_t(name.heapBudget[cTQUPEj]);}();return return_EIKUGya;}();
            return_cTQUPEj["members"][std::to_string(cTQUPEj)].push_back(temp);
        }
        return return_cTQUPEj;
        }();
result["members"]["heapUsage"]=[&]() {
    json return_lJVdasO=json({});
    
        return_lJVdasO["members"]={};
        for(int lJVdasO=0; lJVdasO < VK_MAX_MEMORY_HEAPS; lJVdasO++){
            json temp;
            temp=[&]() {
    json return_ghjtZVQ=json({});
    return_ghjtZVQ=[&]() {
    json return_XFyLNTP=json({});
    return serialize_uint64_t(name.heapUsage[lJVdasO]);}();return return_ghjtZVQ;}();
            return_lJVdasO["members"][std::to_string(lJVdasO)].push_back(temp);
        }
        return return_lJVdasO;
        }();
return result;}

    VkPhysicalDeviceMemoryBudgetPropertiesEXT deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMemoryBudgetPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int UyOqPjR=0; UyOqPjR < VK_MAX_MEMORY_HEAPS; UyOqPjR++){
            [&]() {
[&]() {
result.heapBudget[UyOqPjR]=deserialize_uint64_t(name["members"]["heapBudget"]["members"][UyOqPjR]);}();}();;
        }
        }();
[&]() {

        for (int EHyacLd=0; EHyacLd < VK_MAX_MEMORY_HEAPS; EHyacLd++){
            [&]() {
[&]() {
result.heapUsage[EHyacLd]=deserialize_uint64_t(name["members"]["heapUsage"]["members"][EHyacLd]);}();}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkPhysicalDeviceMemoryPriorityFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryPriority"]=[&]() {
    json return_dBazEeL=json({});
    return_dBazEeL=[&]() {
    json return_aJQyykX=json({});
    return serialize_uint32_t(name.memoryPriority);}();return return_dBazEeL;}();
return result;}

    VkPhysicalDeviceMemoryPriorityFeaturesEXT deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMemoryPriorityFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryPriority=deserialize_uint32_t(name["members"]["memoryPriority"]);}();}();
return result;}

    json serialize_VkMemoryPriorityAllocateInfoEXT(VkMemoryPriorityAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priority"]=[&]() {
    json return_gXyrPKK=json({});
    return serialize_float(name.priority);}();
return result;}

    VkMemoryPriorityAllocateInfoEXT deserialize_VkMemoryPriorityAllocateInfoEXT(json name){
        auto result=VkMemoryPriorityAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.priority=deserialize_float(name["members"]["priority"]);}();
return result;}

    json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pageableDeviceLocalMemory"]=[&]() {
    json return_uQZOTCs=json({});
    return_uQZOTCs=[&]() {
    json return_ZGOhdCb=json({});
    return serialize_uint32_t(name.pageableDeviceLocalMemory);}();return return_uQZOTCs;}();
return result;}

    VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pageableDeviceLocalMemory=deserialize_uint32_t(name["members"]["pageableDeviceLocalMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(VkPhysicalDeviceBufferDeviceAddressFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_rEQDyxd=json({});
    return_rEQDyxd=[&]() {
    json return_zUttdnK=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_rEQDyxd;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_rHxSldy=json({});
    return_rHxSldy=[&]() {
    json return_MNBlTkE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_rHxSldy;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_jrcoDdJ=json({});
    return_jrcoDdJ=[&]() {
    json return_HaJzyiP=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_jrcoDdJ;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeatures deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_rEQDyxd=json({});
    return_rEQDyxd=[&]() {
    json return_zUttdnK=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_rEQDyxd;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_rHxSldy=json({});
    return_rHxSldy=[&]() {
    json return_MNBlTkE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_rHxSldy;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_jrcoDdJ=json({});
    return_jrcoDdJ=[&]() {
    json return_HaJzyiP=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_jrcoDdJ;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesKHR deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_rEQDyxd=json({});
    return_rEQDyxd=[&]() {
    json return_zUttdnK=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_rEQDyxd;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_rHxSldy=json({});
    return_rHxSldy=[&]() {
    json return_MNBlTkE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_rHxSldy;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_jrcoDdJ=json({});
    return_jrcoDdJ=[&]() {
    json return_HaJzyiP=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_jrcoDdJ;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(VkPhysicalDeviceBufferAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_rEQDyxd=json({});
    return_rEQDyxd=[&]() {
    json return_zUttdnK=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_rEQDyxd;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_rHxSldy=json({});
    return_rHxSldy=[&]() {
    json return_MNBlTkE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_rHxSldy;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_jrcoDdJ=json({});
    return_jrcoDdJ=[&]() {
    json return_HaJzyiP=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_jrcoDdJ;}();
return result;}

    VkPhysicalDeviceBufferAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkBufferDeviceAddressInfo(VkBufferDeviceAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfo deserialize_VkBufferDeviceAddressInfo(json name){
        auto result=VkBufferDeviceAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoKHR(VkBufferDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoKHR deserialize_VkBufferDeviceAddressInfoKHR(json name){
        auto result=VkBufferDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoEXT(VkBufferDeviceAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoEXT deserialize_VkBufferDeviceAddressInfoEXT(json name){
        auto result=VkBufferDeviceAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfo(VkBufferOpaqueCaptureAddressCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_pQJxhre=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfo deserialize_VkBufferOpaqueCaptureAddressCreateInfo(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(VkBufferOpaqueCaptureAddressCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_pQJxhre=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfoKHR deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferDeviceAddressCreateInfoEXT(VkBufferDeviceAddressCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
return result;}

    VkBufferDeviceAddressCreateInfoEXT deserialize_VkBufferDeviceAddressCreateInfoEXT(json name){
        auto result=VkBufferDeviceAddressCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(VkPhysicalDeviceImageViewImageFormatInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageViewType"]=[&]() {
    json return_ASHVuIb=json({});
    return serialize_VkImageViewType(name.imageViewType);}();
return result;}

    VkPhysicalDeviceImageViewImageFormatInfoEXT deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(json name){
        auto result=VkPhysicalDeviceImageViewImageFormatInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageViewType=deserialize_VkImageViewType(name["members"]["imageViewType"]);}();
return result;}

    json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(VkFilterCubicImageViewImageFormatPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCubic"]=[&]() {
    json return_XUpmrrF=json({});
    return_XUpmrrF=[&]() {
    json return_LPYOPgu=json({});
    return serialize_uint32_t(name.filterCubic);}();return return_XUpmrrF;}();
result["members"]["filterCubicMinmax"]=[&]() {
    json return_FINPHmv=json({});
    return_FINPHmv=[&]() {
    json return_XtQTUzI=json({});
    return serialize_uint32_t(name.filterCubicMinmax);}();return return_FINPHmv;}();
return result;}

    VkFilterCubicImageViewImageFormatPropertiesEXT deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(json name){
        auto result=VkFilterCubicImageViewImageFormatPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterCubic=deserialize_uint32_t(name["members"]["filterCubic"]);}();}();
[&]() {
[&]() {
result.filterCubicMinmax=deserialize_uint32_t(name["members"]["filterCubicMinmax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeatures(VkPhysicalDeviceImagelessFramebufferFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_bYQylWx=json({});
    return_bYQylWx=[&]() {
    json return_SqavXmC=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_bYQylWx;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeatures deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(VkPhysicalDeviceImagelessFramebufferFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_bYQylWx=json({});
    return_bYQylWx=[&]() {
    json return_SqavXmC=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_bYQylWx;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeaturesKHR deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfo(VkFramebufferAttachmentsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_JGkUlcC=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_vqlFazF=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_vqlFazF["null"]=true;
            return return_vqlFazF;
        }
        
        return_vqlFazF["members"]={};
        for(int vqlFazF=0; vqlFazF < name.attachmentImageInfoCount; vqlFazF++){
            json temp;
            temp=[&]() {
    json return_XDPJnBr=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[vqlFazF]);}();
            return_vqlFazF["members"][std::to_string(vqlFazF)].push_back(temp);
        }
        return return_vqlFazF;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfo deserialize_VkFramebufferAttachmentsCreateInfo(json name){
        auto result=VkFramebufferAttachmentsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_thbpLih;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_thbpLih=NULL;
        }
    temp_thbpLih=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int uMVuDiC=0; uMVuDiC < result.attachmentImageInfoCount; uMVuDiC++){
            [&]() {
temp_thbpLih[uMVuDiC]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][uMVuDiC]);}();;
        }
        }();result.pAttachmentImageInfos=temp_thbpLih;}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfoKHR(VkFramebufferAttachmentsCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_JGkUlcC=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_vqlFazF=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_vqlFazF["null"]=true;
            return return_vqlFazF;
        }
        
        return_vqlFazF["members"]={};
        for(int vqlFazF=0; vqlFazF < name.attachmentImageInfoCount; vqlFazF++){
            json temp;
            temp=[&]() {
    json return_XDPJnBr=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[vqlFazF]);}();
            return_vqlFazF["members"][std::to_string(vqlFazF)].push_back(temp);
        }
        return return_vqlFazF;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfoKHR deserialize_VkFramebufferAttachmentsCreateInfoKHR(json name){
        auto result=VkFramebufferAttachmentsCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_thbpLih;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_thbpLih=NULL;
        }
    temp_thbpLih=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int uMVuDiC=0; uMVuDiC < result.attachmentImageInfoCount; uMVuDiC++){
            [&]() {
temp_thbpLih[uMVuDiC]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][uMVuDiC]);}();;
        }
        }();result.pAttachmentImageInfos=temp_thbpLih;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfo(VkFramebufferAttachmentImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BsnDdAZ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_NOQkDfJ=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_cFgFlzx=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_JUizQAk=json({});
    
        if (name.pViewFormats==NULL){
            return_JUizQAk["null"]=true;
            return return_JUizQAk;
        }
        
        return_JUizQAk["members"]={};
        for(int JUizQAk=0; JUizQAk < name.viewFormatCount; JUizQAk++){
            json temp;
            temp=[&]() {
    json return_XWgQyiv=json({});
    return serialize_VkFormat(name.pViewFormats[JUizQAk]);}();
            return_JUizQAk["members"][std::to_string(JUizQAk)].push_back(temp);
        }
        return return_JUizQAk;
        }();
return result;}

    VkFramebufferAttachmentImageInfo deserialize_VkFramebufferAttachmentImageInfo(json name){
        auto result=VkFramebufferAttachmentImageInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_PCZtsmX;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_PCZtsmX=NULL;
        }
    temp_PCZtsmX=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int YymsRzi=0; YymsRzi < result.viewFormatCount; YymsRzi++){
            [&]() {
temp_PCZtsmX[YymsRzi]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][YymsRzi]);}();;
        }
        }();result.pViewFormats=temp_PCZtsmX;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfoKHR(VkFramebufferAttachmentImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BsnDdAZ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_pdjkxGD=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_NOQkDfJ=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_cFgFlzx=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_JUizQAk=json({});
    
        if (name.pViewFormats==NULL){
            return_JUizQAk["null"]=true;
            return return_JUizQAk;
        }
        
        return_JUizQAk["members"]={};
        for(int JUizQAk=0; JUizQAk < name.viewFormatCount; JUizQAk++){
            json temp;
            temp=[&]() {
    json return_XWgQyiv=json({});
    return serialize_VkFormat(name.pViewFormats[JUizQAk]);}();
            return_JUizQAk["members"][std::to_string(JUizQAk)].push_back(temp);
        }
        return return_JUizQAk;
        }();
return result;}

    VkFramebufferAttachmentImageInfoKHR deserialize_VkFramebufferAttachmentImageInfoKHR(json name){
        auto result=VkFramebufferAttachmentImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_PCZtsmX;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_PCZtsmX=NULL;
        }
    temp_PCZtsmX=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int YymsRzi=0; YymsRzi < result.viewFormatCount; YymsRzi++){
            [&]() {
temp_PCZtsmX[YymsRzi]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][YymsRzi]);}();;
        }
        }();result.pViewFormats=temp_PCZtsmX;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfo(VkRenderPassAttachmentBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_fSTwRko=json({});
    
        if (name.pAttachments==NULL){
            return_fSTwRko["null"]=true;
            return return_fSTwRko;
        }
        
        return_fSTwRko["members"]={};
        for(int fSTwRko=0; fSTwRko < name.attachmentCount; fSTwRko++){
            json temp;
            temp=[&]() {
    json return_EgGVwZA=json({});
    return serialize_VkImageView(name.pAttachments[fSTwRko]);}();
            return_fSTwRko["members"][std::to_string(fSTwRko)].push_back(temp);
        }
        return return_fSTwRko;
        }();
return result;}

    VkRenderPassAttachmentBeginInfo deserialize_VkRenderPassAttachmentBeginInfo(json name){
        auto result=VkRenderPassAttachmentBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_qXgJIsw;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_qXgJIsw=NULL;
        }
    temp_qXgJIsw=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int aBkALwD=0; aBkALwD < result.attachmentCount; aBkALwD++){
            [&]() {
temp_qXgJIsw[aBkALwD]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][aBkALwD]);}();;
        }
        }();result.pAttachments=temp_qXgJIsw;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfoKHR(VkRenderPassAttachmentBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_fSTwRko=json({});
    
        if (name.pAttachments==NULL){
            return_fSTwRko["null"]=true;
            return return_fSTwRko;
        }
        
        return_fSTwRko["members"]={};
        for(int fSTwRko=0; fSTwRko < name.attachmentCount; fSTwRko++){
            json temp;
            temp=[&]() {
    json return_EgGVwZA=json({});
    return serialize_VkImageView(name.pAttachments[fSTwRko]);}();
            return_fSTwRko["members"][std::to_string(fSTwRko)].push_back(temp);
        }
        return return_fSTwRko;
        }();
return result;}

    VkRenderPassAttachmentBeginInfoKHR deserialize_VkRenderPassAttachmentBeginInfoKHR(json name){
        auto result=VkRenderPassAttachmentBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_qXgJIsw;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_qXgJIsw=NULL;
        }
    temp_qXgJIsw=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int aBkALwD=0; aBkALwD < result.attachmentCount; aBkALwD++){
            [&]() {
temp_qXgJIsw[aBkALwD]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][aBkALwD]);}();;
        }
        }();result.pAttachments=temp_qXgJIsw;}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(VkPhysicalDeviceTextureCompressionASTCHDRFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_OHQTraF=json({});
    return_OHQTraF=[&]() {
    json return_FLeVwFe=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_OHQTraF;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeatures deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_OHQTraF=json({});
    return_OHQTraF=[&]() {
    json return_FLeVwFe=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_OHQTraF;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkPhysicalDeviceCooperativeMatrixFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_bybNXea=json({});
    return_bybNXea=[&]() {
    json return_EKANyvT=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_bybNXea;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_MiIfomY=json({});
    return_MiIfomY=[&]() {
    json return_IyDUfwO=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_MiIfomY;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesNV deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDeviceCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_jIxxlcr=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesNV deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesNV(VkCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_Mqalifm=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_qNcqYfl=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_xmzXEtX=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_rgGNfFD=json({});
    return serialize_VkComponentTypeNV(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_rvvuYbS=json({});
    return serialize_VkComponentTypeNV(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_QciOYMg=json({});
    return serialize_VkComponentTypeNV(name.CType);}();
result["members"]["DType"]=[&]() {
    json return_ydfFdcK=json({});
    return serialize_VkComponentTypeNV(name.DType);}();
result["members"]["scope"]=[&]() {
    json return_DDmKDcG=json({});
    return serialize_VkScopeNV(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesNV deserialize_VkCooperativeMatrixPropertiesNV(json name){
        auto result=VkCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeNV(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeNV(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeNV(name["members"]["CType"]);}();
[&]() {
result.DType=deserialize_VkComponentTypeNV(name["members"]["DType"]);}();
[&]() {
result.scope=deserialize_VkScopeNV(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrImageArrays"]=[&]() {
    json return_VSKYDUi=json({});
    return_VSKYDUi=[&]() {
    json return_CLchwZh=json({});
    return serialize_uint32_t(name.ycbcrImageArrays);}();return return_VSKYDUi;}();
return result;}

    VkPhysicalDeviceYcbcrImageArraysFeaturesEXT deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcrImageArraysFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrImageArrays=deserialize_uint32_t(name["members"]["ycbcrImageArrays"]);}();}();
return result;}

    json serialize_VkImageViewHandleInfoNVX(VkImageViewHandleInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_qadnqHU=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["descriptorType"]=[&]() {
    json return_lEOhxWs=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["sampler"]=[&]() {
    json return_qujTsSt=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkImageViewHandleInfoNVX deserialize_VkImageViewHandleInfoNVX(json name){
        auto result=VkImageViewHandleInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkImageViewAddressPropertiesNVX(VkImageViewAddressPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkImageViewAddressPropertiesNVX deserialize_VkImageViewAddressPropertiesNVX(json name){
        auto result=VkImageViewAddressPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkPipelineCreationFeedback(VkPipelineCreationFeedback name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_znBChks=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_Qpjwgyc=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedback deserialize_VkPipelineCreationFeedback(json name){
        auto result=VkPipelineCreationFeedback();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackEXT(VkPipelineCreationFeedbackEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_znBChks=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_Qpjwgyc=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedbackEXT deserialize_VkPipelineCreationFeedbackEXT(json name){
        auto result=VkPipelineCreationFeedbackEXT();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfo(VkPipelineCreationFeedbackCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_kdZGRRi=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_kdZGRRi["null"]=true;
            return return_kdZGRRi;
        }
        return_kdZGRRi=[&]() {
    json return_OldPZNm=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_kdZGRRi;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_UEljyLG=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_bxLEPCq=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_bxLEPCq["null"]=true;
            return return_bxLEPCq;
        }
        
        return_bxLEPCq["members"]={};
        for(int bxLEPCq=0; bxLEPCq < name.pipelineStageCreationFeedbackCount; bxLEPCq++){
            json temp;
            temp=[&]() {
    json return_lBDfVFD=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[bxLEPCq]);}();
            return_bxLEPCq["members"][std::to_string(bxLEPCq)].push_back(temp);
        }
        return return_bxLEPCq;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfo deserialize_VkPipelineCreationFeedbackCreateInfo(json name){
        auto result=VkPipelineCreationFeedbackCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int SEmFevs=0; SEmFevs < result.pipelineStageCreationFeedbackCount; SEmFevs++){
            [&]() {
result.pPipelineStageCreationFeedbacks[SEmFevs]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][SEmFevs]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfoEXT(VkPipelineCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_kdZGRRi=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_kdZGRRi["null"]=true;
            return return_kdZGRRi;
        }
        return_kdZGRRi=[&]() {
    json return_OldPZNm=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_kdZGRRi;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_UEljyLG=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_bxLEPCq=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_bxLEPCq["null"]=true;
            return return_bxLEPCq;
        }
        
        return_bxLEPCq["members"]={};
        for(int bxLEPCq=0; bxLEPCq < name.pipelineStageCreationFeedbackCount; bxLEPCq++){
            json temp;
            temp=[&]() {
    json return_lBDfVFD=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[bxLEPCq]);}();
            return_bxLEPCq["members"][std::to_string(bxLEPCq)].push_back(temp);
        }
        return return_bxLEPCq;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfoEXT deserialize_VkPipelineCreationFeedbackCreateInfoEXT(json name){
        auto result=VkPipelineCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int SEmFevs=0; SEmFevs < result.pipelineStageCreationFeedbackCount; SEmFevs++){
            [&]() {
result.pPipelineStageCreationFeedbacks[SEmFevs]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][SEmFevs]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePresentBarrierFeaturesNV(VkPhysicalDevicePresentBarrierFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrier"]=[&]() {
    json return_AVCmFRb=json({});
    return_AVCmFRb=[&]() {
    json return_mblfyGK=json({});
    return serialize_uint32_t(name.presentBarrier);}();return return_AVCmFRb;}();
return result;}

    VkPhysicalDevicePresentBarrierFeaturesNV deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(json name){
        auto result=VkPhysicalDevicePresentBarrierFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrier=deserialize_uint32_t(name["members"]["presentBarrier"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesPresentBarrierNV(VkSurfaceCapabilitiesPresentBarrierNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierSupported"]=[&]() {
    json return_yWcepnH=json({});
    return_yWcepnH=[&]() {
    json return_eFLRrRb=json({});
    return serialize_uint32_t(name.presentBarrierSupported);}();return return_yWcepnH;}();
return result;}

    VkSurfaceCapabilitiesPresentBarrierNV deserialize_VkSurfaceCapabilitiesPresentBarrierNV(json name){
        auto result=VkSurfaceCapabilitiesPresentBarrierNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierSupported=deserialize_uint32_t(name["members"]["presentBarrierSupported"]);}();}();
return result;}

    json serialize_VkSwapchainPresentBarrierCreateInfoNV(VkSwapchainPresentBarrierCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierEnable"]=[&]() {
    json return_QjRBUFt=json({});
    return_QjRBUFt=[&]() {
    json return_yWHdDLP=json({});
    return serialize_uint32_t(name.presentBarrierEnable);}();return return_QjRBUFt;}();
return result;}

    VkSwapchainPresentBarrierCreateInfoNV deserialize_VkSwapchainPresentBarrierCreateInfoNV(json name){
        auto result=VkSwapchainPresentBarrierCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierEnable=deserialize_uint32_t(name["members"]["presentBarrierEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(VkPhysicalDevicePerformanceQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCounterQueryPools"]=[&]() {
    json return_UbmJJbg=json({});
    return_UbmJJbg=[&]() {
    json return_uhrtzOS=json({});
    return serialize_uint32_t(name.performanceCounterQueryPools);}();return return_UbmJJbg;}();
result["members"]["performanceCounterMultipleQueryPools"]=[&]() {
    json return_PzjedAl=json({});
    return_PzjedAl=[&]() {
    json return_aEBNjYU=json({});
    return serialize_uint32_t(name.performanceCounterMultipleQueryPools);}();return return_PzjedAl;}();
return result;}

    VkPhysicalDevicePerformanceQueryFeaturesKHR deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.performanceCounterQueryPools=deserialize_uint32_t(name["members"]["performanceCounterQueryPools"]);}();}();
[&]() {
[&]() {
result.performanceCounterMultipleQueryPools=deserialize_uint32_t(name["members"]["performanceCounterMultipleQueryPools"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(VkPhysicalDevicePerformanceQueryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allowCommandBufferQueryCopies"]=[&]() {
    json return_GXddMBY=json({});
    return_GXddMBY=[&]() {
    json return_bIjCkJQ=json({});
    return serialize_uint32_t(name.allowCommandBufferQueryCopies);}();return return_GXddMBY;}();
return result;}

    VkPhysicalDevicePerformanceQueryPropertiesKHR deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.allowCommandBufferQueryCopies=deserialize_uint32_t(name["members"]["allowCommandBufferQueryCopies"]);}();}();
return result;}

    json serialize_VkPerformanceCounterKHR(VkPerformanceCounterKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["unit"]=[&]() {
    json return_piikcqN=json({});
    return serialize_VkPerformanceCounterUnitKHR(name.unit);}();
result["members"]["scope"]=[&]() {
    json return_kaAhQbx=json({});
    return serialize_VkPerformanceCounterScopeKHR(name.scope);}();
result["members"]["storage"]=[&]() {
    json return_oEkJkbk=json({});
    return serialize_VkPerformanceCounterStorageKHR(name.storage);}();
result["members"]["uuid"]=[&]() {
    json return_KGSBKKt=json({});
    
        return_KGSBKKt["members"]={};
        for(int KGSBKKt=0; KGSBKKt < VK_UUID_SIZE; KGSBKKt++){
            json temp;
            temp=[&]() {
    json return_EiLfUGx=json({});
    return serialize_uint8_t(name.uuid[KGSBKKt]);}();
            return_KGSBKKt["members"][std::to_string(KGSBKKt)].push_back(temp);
        }
        return return_KGSBKKt;
        }();
return result;}

    VkPerformanceCounterKHR deserialize_VkPerformanceCounterKHR(json name){
        auto result=VkPerformanceCounterKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.unit=deserialize_VkPerformanceCounterUnitKHR(name["members"]["unit"]);}();
[&]() {
result.scope=deserialize_VkPerformanceCounterScopeKHR(name["members"]["scope"]);}();
[&]() {
result.storage=deserialize_VkPerformanceCounterStorageKHR(name["members"]["storage"]);}();
[&]() {

        for (int pkooImf=0; pkooImf < VK_UUID_SIZE; pkooImf++){
            [&]() {
result.uuid[pkooImf]=deserialize_uint8_t(name["members"]["uuid"]["members"][pkooImf]);}();;
        }
        }();
return result;}

    json serialize_VkPerformanceCounterDescriptionKHR(VkPerformanceCounterDescriptionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_iSbaCaP=json({});
    return serialize_VkPerformanceCounterDescriptionFlagsKHR(name.flags);}();
result["members"]["name"]=[&]() {
    json return_eMZHjWd=json({});
    
        return_eMZHjWd["members"]={};
        for(int eMZHjWd=0; eMZHjWd < VK_MAX_DESCRIPTION_SIZE; eMZHjWd++){
            json temp;
            temp=[&]() {
    json return_GADvzXQ=json({});
    return serialize_char(name.name[eMZHjWd]);}();
            return_eMZHjWd["members"][std::to_string(eMZHjWd)].push_back(temp);
        }
        return return_eMZHjWd;
        }();
result["members"]["category"]=[&]() {
    json return_FrUzDtE=json({});
    
        return_FrUzDtE["members"]={};
        for(int FrUzDtE=0; FrUzDtE < VK_MAX_DESCRIPTION_SIZE; FrUzDtE++){
            json temp;
            temp=[&]() {
    json return_CPiCuGd=json({});
    return serialize_char(name.category[FrUzDtE]);}();
            return_FrUzDtE["members"][std::to_string(FrUzDtE)].push_back(temp);
        }
        return return_FrUzDtE;
        }();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
return result;}

    VkPerformanceCounterDescriptionKHR deserialize_VkPerformanceCounterDescriptionKHR(json name){
        auto result=VkPerformanceCounterDescriptionKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkPerformanceCounterDescriptionFlagsKHR(name["members"]["flags"]);}();
[&]() {

        for (int cNGdKqJ=0; cNGdKqJ < VK_MAX_DESCRIPTION_SIZE; cNGdKqJ++){
            [&]() {
result.name[cNGdKqJ]=deserialize_char(name["members"]["name"]["members"][cNGdKqJ]);}();;
        }
        }();
[&]() {

        for (int mVYWNwJ=0; mVYWNwJ < VK_MAX_DESCRIPTION_SIZE; mVYWNwJ++){
            [&]() {
result.category[mVYWNwJ]=deserialize_char(name["members"]["category"]["members"][mVYWNwJ]);}();;
        }
        }();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
return result;}

    json serialize_VkQueryPoolPerformanceCreateInfoKHR(VkQueryPoolPerformanceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_cQXidFT=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["counterIndexCount"]=[&]() {
    json return_TfIuvGU=json({});
    return serialize_uint32_t(name.counterIndexCount);}();
result["members"]["pCounterIndices"]=[&]() {
    json return_kpxExjz=json({});
    
        if (name.pCounterIndices==NULL){
            return_kpxExjz["null"]=true;
            return return_kpxExjz;
        }
        
        return_kpxExjz["members"]={};
        for(int kpxExjz=0; kpxExjz < name.counterIndexCount; kpxExjz++){
            json temp;
            temp=[&]() {
    json return_ulPMDEM=json({});
    return serialize_uint32_t(name.pCounterIndices[kpxExjz]);}();
            return_kpxExjz["members"][std::to_string(kpxExjz)].push_back(temp);
        }
        return return_kpxExjz;
        }();
return result;}

    VkQueryPoolPerformanceCreateInfoKHR deserialize_VkQueryPoolPerformanceCreateInfoKHR(json name){
        auto result=VkQueryPoolPerformanceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.counterIndexCount=deserialize_uint32_t(name["members"]["counterIndexCount"]);}();
[&]() {
uint32_t* temp_qxBmLiq;[&]() {

        if (name["members"]["pCounterIndices"].contains("null")){
        temp_qxBmLiq=NULL;
        }
    temp_qxBmLiq=(uint32_t*)malloc(result.counterIndexCount*sizeof(uint32_t));
        for (int qPMPBLh=0; qPMPBLh < result.counterIndexCount; qPMPBLh++){
            [&]() {
temp_qxBmLiq[qPMPBLh]=deserialize_uint32_t(name["members"]["pCounterIndices"]["members"][qPMPBLh]);}();;
        }
        }();result.pCounterIndices=temp_qxBmLiq;}();
return result;}

    json serialize_VkPerformanceCounterResultKHR(VkPerformanceCounterResultKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["int32"]=[&]() {
    json return_epHXsBs=json({});
    return serialize_int32_t(name.int32);}();
result["members"]["int64"]=[&]() {
    json return_sdtnRHr=json({});
    return serialize_int64_t(name.int64);}();
result["members"]["uint32"]=[&]() {
    json return_WgOwYoH=json({});
    return serialize_uint32_t(name.uint32);}();
result["members"]["uint64"]=[&]() {
    json return_ogIgmBC=json({});
    return serialize_uint64_t(name.uint64);}();
result["members"]["float32"]=[&]() {
    json return_xWXJkIW=json({});
    return serialize_float(name.float32);}();
result["members"]["float64"]=[&]() {
    json return_gASfLul=json({});
    return serialize_double(name.float64);}();
return result;}

    VkPerformanceCounterResultKHR deserialize_VkPerformanceCounterResultKHR(json name){
        auto result=VkPerformanceCounterResultKHR();
    
[&]() {
result.int32=deserialize_int32_t(name["members"]["int32"]);}();
[&]() {
result.int64=deserialize_int64_t(name["members"]["int64"]);}();
[&]() {
result.uint32=deserialize_uint32_t(name["members"]["uint32"]);}();
[&]() {
result.uint64=deserialize_uint64_t(name["members"]["uint64"]);}();
[&]() {
result.float32=deserialize_float(name["members"]["float32"]);}();
[&]() {
result.float64=deserialize_double(name["members"]["float64"]);}();
return result;}

    json serialize_VkAcquireProfilingLockInfoKHR(VkAcquireProfilingLockInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mzYnjxV=json({});
    return serialize_VkAcquireProfilingLockFlagsKHR(name.flags);}();
result["members"]["timeout"]=[&]() {
    json return_wkQoHIN=json({});
    return serialize_uint64_t(name.timeout);}();
return result;}

    VkAcquireProfilingLockInfoKHR deserialize_VkAcquireProfilingLockInfoKHR(json name){
        auto result=VkAcquireProfilingLockInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkAcquireProfilingLockFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
return result;}

    json serialize_VkPerformanceQuerySubmitInfoKHR(VkPerformanceQuerySubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["counterPassIndex"]=[&]() {
    json return_eWyvPIV=json({});
    return serialize_uint32_t(name.counterPassIndex);}();
return result;}

    VkPerformanceQuerySubmitInfoKHR deserialize_VkPerformanceQuerySubmitInfoKHR(json name){
        auto result=VkPerformanceQuerySubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.counterPassIndex=deserialize_uint32_t(name["members"]["counterPassIndex"]);}();
return result;}

    json serialize_VkHeadlessSurfaceCreateInfoEXT(VkHeadlessSurfaceCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mMIpBjU=json({});
    return serialize_VkHeadlessSurfaceCreateFlagsEXT(name.flags);}();
return result;}

    VkHeadlessSurfaceCreateInfoEXT deserialize_VkHeadlessSurfaceCreateInfoEXT(json name){
        auto result=VkHeadlessSurfaceCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkHeadlessSurfaceCreateFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkPhysicalDeviceCoverageReductionModeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_PZctltT=json({});
    return_PZctltT=[&]() {
    json return_mpTBRui=json({});
    return serialize_uint32_t(name.coverageReductionMode);}();return return_PZctltT;}();
return result;}

    VkPhysicalDeviceCoverageReductionModeFeaturesNV deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(json name){
        auto result=VkPhysicalDeviceCoverageReductionModeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.coverageReductionMode=deserialize_uint32_t(name["members"]["coverageReductionMode"]);}();}();
return result;}

    json serialize_VkPipelineCoverageReductionStateCreateInfoNV(VkPipelineCoverageReductionStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EdeVBGI=json({});
    return serialize_VkPipelineCoverageReductionStateCreateFlagsNV(name.flags);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_ZgBpsLx=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
return result;}

    VkPipelineCoverageReductionStateCreateInfoNV deserialize_VkPipelineCoverageReductionStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageReductionStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
return result;}

    json serialize_VkFramebufferMixedSamplesCombinationNV(VkFramebufferMixedSamplesCombinationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_ZgBpsLx=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_solYlXE=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["depthStencilSamples"]=[&]() {
    json return_qpACCxd=json({});
    return serialize_VkSampleCountFlags(name.depthStencilSamples);}();
result["members"]["colorSamples"]=[&]() {
    json return_LFMlzQL=json({});
    return serialize_VkSampleCountFlags(name.colorSamples);}();
return result;}

    VkFramebufferMixedSamplesCombinationNV deserialize_VkFramebufferMixedSamplesCombinationNV(json name){
        auto result=VkFramebufferMixedSamplesCombinationNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
result.depthStencilSamples=deserialize_VkSampleCountFlags(name["members"]["depthStencilSamples"]);}();
[&]() {
result.colorSamples=deserialize_VkSampleCountFlags(name["members"]["colorSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerFunctions2"]=[&]() {
    json return_daFAwOn=json({});
    return_daFAwOn=[&]() {
    json return_wykVpKy=json({});
    return serialize_uint32_t(name.shaderIntegerFunctions2);}();return return_daFAwOn;}();
return result;}

    VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(json name){
        auto result=VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerFunctions2=deserialize_uint32_t(name["members"]["shaderIntegerFunctions2"]);}();}();
return result;}

    json serialize_VkPerformanceValueDataINTEL(VkPerformanceValueDataINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["value32"]=[&]() {
    json return_OJPSJHC=json({});
    return serialize_uint32_t(name.value32);}();
result["members"]["value64"]=[&]() {
    json return_YPYDRwV=json({});
    return serialize_uint64_t(name.value64);}();
result["members"]["valueFloat"]=[&]() {
    json return_luJhBws=json({});
    return serialize_float(name.valueFloat);}();
result["members"]["valueBool"]=[&]() {
    json return_gCbFOjw=json({});
    return_gCbFOjw=[&]() {
    json return_HgxGSTg=json({});
    return serialize_uint32_t(name.valueBool);}();return return_gCbFOjw;}();
result["members"]["valueString"]=[&]() {
    json return_FobgKyT=json({});
    
        if (name.valueString==NULL){
            return_FobgKyT["null"]=true;
            return return_FobgKyT;
        }
        return serialize_char_p(name.valueString);
}();
return result;}

    VkPerformanceValueDataINTEL deserialize_VkPerformanceValueDataINTEL(json name){
        auto result=VkPerformanceValueDataINTEL();
    
[&]() {
result.value32=deserialize_uint32_t(name["members"]["value32"]);}();
[&]() {
result.value64=deserialize_uint64_t(name["members"]["value64"]);}();
[&]() {
result.valueFloat=deserialize_float(name["members"]["valueFloat"]);}();
[&]() {
[&]() {
result.valueBool=deserialize_uint32_t(name["members"]["valueBool"]);}();}();
[&]() {
char* temp_SOdgXRA;[&]() {

        if (name["members"]["valueString"].contains("null")){
        temp_SOdgXRA=NULL;
        }
    temp_SOdgXRA=deserialize_char_p(name["members"]["valueString"]);
}();result.valueString=temp_SOdgXRA;}();
return result;}

    json serialize_VkPerformanceValueINTEL(VkPerformanceValueINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_SvHMUws=json({});
    return serialize_VkPerformanceValueTypeINTEL(name.type);}();
result["members"]["data"]=[&]() {
    json return_suspXbm=json({});
    return serialize_VkPerformanceValueDataINTEL(name.data);}();
return result;}

    VkPerformanceValueINTEL deserialize_VkPerformanceValueINTEL(json name){
        auto result=VkPerformanceValueINTEL();
    
[&]() {
result.type=deserialize_VkPerformanceValueTypeINTEL(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkPerformanceValueDataINTEL(name["members"]["data"]);}();
return result;}

    json serialize_VkInitializePerformanceApiInfoINTEL(VkInitializePerformanceApiInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pUserData"]=[&]() {
    json return_NIpboad=json({});
    
        if (name.pUserData==NULL){
            return_NIpboad["null"]=true;
            return return_NIpboad;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}

    VkInitializePerformanceApiInfoINTEL deserialize_VkInitializePerformanceApiInfoINTEL(json name){
        auto result=VkInitializePerformanceApiInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
return result;}

    json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(VkQueryPoolPerformanceQueryCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_xEWGwbi=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolPerformanceQueryCreateInfoINTEL deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(json name){
        auto result=VkQueryPoolPerformanceQueryCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfoINTEL(VkQueryPoolCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_xEWGwbi=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolCreateInfoINTEL deserialize_VkQueryPoolCreateInfoINTEL(json name){
        auto result=VkQueryPoolCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkPerformanceMarkerInfoINTEL(VkPerformanceMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_ZGAuShX=json({});
    return serialize_uint64_t(name.marker);}();
return result;}

    VkPerformanceMarkerInfoINTEL deserialize_VkPerformanceMarkerInfoINTEL(json name){
        auto result=VkPerformanceMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.marker=deserialize_uint64_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceStreamMarkerInfoINTEL(VkPerformanceStreamMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_RVtwcIw=json({});
    return serialize_uint32_t(name.marker);}();
return result;}

    VkPerformanceStreamMarkerInfoINTEL deserialize_VkPerformanceStreamMarkerInfoINTEL(json name){
        auto result=VkPerformanceStreamMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.marker=deserialize_uint32_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceOverrideInfoINTEL(VkPerformanceOverrideInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_rAOiisa=json({});
    return serialize_VkPerformanceOverrideTypeINTEL(name.type);}();
result["members"]["enable"]=[&]() {
    json return_lErtBrn=json({});
    return_lErtBrn=[&]() {
    json return_hVjobli=json({});
    return serialize_uint32_t(name.enable);}();return return_lErtBrn;}();
result["members"]["parameter"]=[&]() {
    json return_rJwOOdE=json({});
    return serialize_uint64_t(name.parameter);}();
return result;}

    VkPerformanceOverrideInfoINTEL deserialize_VkPerformanceOverrideInfoINTEL(json name){
        auto result=VkPerformanceOverrideInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkPerformanceOverrideTypeINTEL(name["members"]["type"]);}();
[&]() {
[&]() {
result.enable=deserialize_uint32_t(name["members"]["enable"]);}();}();
[&]() {
result.parameter=deserialize_uint64_t(name["members"]["parameter"]);}();
return result;}

    json serialize_VkPerformanceConfigurationAcquireInfoINTEL(VkPerformanceConfigurationAcquireInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_IgjXBwv=json({});
    return serialize_VkPerformanceConfigurationTypeINTEL(name.type);}();
return result;}

    VkPerformanceConfigurationAcquireInfoINTEL deserialize_VkPerformanceConfigurationAcquireInfoINTEL(json name){
        auto result=VkPerformanceConfigurationAcquireInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkPerformanceConfigurationTypeINTEL(name["members"]["type"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderClockFeaturesKHR(VkPhysicalDeviceShaderClockFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupClock"]=[&]() {
    json return_aFhhtEO=json({});
    return_aFhhtEO=[&]() {
    json return_VvXOFJY=json({});
    return serialize_uint32_t(name.shaderSubgroupClock);}();return return_aFhhtEO;}();
result["members"]["shaderDeviceClock"]=[&]() {
    json return_jSOaBgr=json({});
    return_jSOaBgr=[&]() {
    json return_eQWuvsH=json({});
    return serialize_uint32_t(name.shaderDeviceClock);}();return return_jSOaBgr;}();
return result;}

    VkPhysicalDeviceShaderClockFeaturesKHR deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderClockFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupClock=deserialize_uint32_t(name["members"]["shaderSubgroupClock"]);}();}();
[&]() {
[&]() {
result.shaderDeviceClock=deserialize_uint32_t(name["members"]["shaderDeviceClock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkPhysicalDeviceIndexTypeUint8FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexTypeUint8"]=[&]() {
    json return_xROArOf=json({});
    return_xROArOf=[&]() {
    json return_CKUudvz=json({});
    return serialize_uint32_t(name.indexTypeUint8);}();return return_xROArOf;}();
return result;}

    VkPhysicalDeviceIndexTypeUint8FeaturesEXT deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(json name){
        auto result=VkPhysicalDeviceIndexTypeUint8FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indexTypeUint8=deserialize_uint32_t(name["members"]["indexTypeUint8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMCount"]=[&]() {
    json return_dgBJOLW=json({});
    return serialize_uint32_t(name.shaderSMCount);}();
result["members"]["shaderWarpsPerSM"]=[&]() {
    json return_OVHEAld=json({});
    return serialize_uint32_t(name.shaderWarpsPerSM);}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsPropertiesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderSMCount=deserialize_uint32_t(name["members"]["shaderSMCount"]);}();
[&]() {
result.shaderWarpsPerSM=deserialize_uint32_t(name["members"]["shaderWarpsPerSM"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMBuiltins"]=[&]() {
    json return_aMiUXdf=json({});
    return_aMiUXdf=[&]() {
    json return_cItwARk=json({});
    return serialize_uint32_t(name.shaderSMBuiltins);}();return return_aMiUXdf;}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsFeaturesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSMBuiltins=deserialize_uint32_t(name["members"]["shaderSMBuiltins"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderSampleInterlock"]=[&]() {
    json return_HzuuDFv=json({});
    return_HzuuDFv=[&]() {
    json return_zwAOoXH=json({});
    return serialize_uint32_t(name.fragmentShaderSampleInterlock);}();return return_HzuuDFv;}();
result["members"]["fragmentShaderPixelInterlock"]=[&]() {
    json return_kVlFrhA=json({});
    return_kVlFrhA=[&]() {
    json return_NvQPtqD=json({});
    return serialize_uint32_t(name.fragmentShaderPixelInterlock);}();return return_kVlFrhA;}();
result["members"]["fragmentShaderShadingRateInterlock"]=[&]() {
    json return_hJFJtHl=json({});
    return_hJFJtHl=[&]() {
    json return_aSpqAhV=json({});
    return serialize_uint32_t(name.fragmentShaderShadingRateInterlock);}();return return_hJFJtHl;}();
return result;}

    VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderSampleInterlock=deserialize_uint32_t(name["members"]["fragmentShaderSampleInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderPixelInterlock=deserialize_uint32_t(name["members"]["fragmentShaderPixelInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderShadingRateInterlock=deserialize_uint32_t(name["members"]["fragmentShaderShadingRateInterlock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_vGglSta=json({});
    return_vGglSta=[&]() {
    json return_jAEfutl=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_vGglSta;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_vGglSta=json({});
    return_vGglSta=[&]() {
    json return_jAEfutl=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_vGglSta;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayout(VkAttachmentReferenceStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_XpEjaUS=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayout deserialize_VkAttachmentReferenceStencilLayout(json name){
        auto result=VkAttachmentReferenceStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveTopologyListRestart"]=[&]() {
    json return_dcSSwSI=json({});
    return_dcSSwSI=[&]() {
    json return_kFHuCNI=json({});
    return serialize_uint32_t(name.primitiveTopologyListRestart);}();return return_dcSSwSI;}();
result["members"]["primitiveTopologyPatchListRestart"]=[&]() {
    json return_OCiHzlE=json({});
    return_OCiHzlE=[&]() {
    json return_Pxsykef=json({});
    return serialize_uint32_t(name.primitiveTopologyPatchListRestart);}();return return_OCiHzlE;}();
return result;}

    VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitiveTopologyListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyListRestart"]);}();}();
[&]() {
[&]() {
result.primitiveTopologyPatchListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyPatchListRestart"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayoutKHR(VkAttachmentReferenceStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_XpEjaUS=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayoutKHR deserialize_VkAttachmentReferenceStencilLayoutKHR(json name){
        auto result=VkAttachmentReferenceStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayout(VkAttachmentDescriptionStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_qKmRRum=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_EMcBfhT=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayout deserialize_VkAttachmentDescriptionStencilLayout(json name){
        auto result=VkAttachmentDescriptionStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayoutKHR(VkAttachmentDescriptionStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_qKmRRum=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_EMcBfhT=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayoutKHR deserialize_VkAttachmentDescriptionStencilLayoutKHR(json name){
        auto result=VkAttachmentDescriptionStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineExecutableInfo"]=[&]() {
    json return_WdJWZWF=json({});
    return_WdJWZWF=[&]() {
    json return_aEUBiVI=json({});
    return serialize_uint32_t(name.pipelineExecutableInfo);}();return return_WdJWZWF;}();
return result;}

    VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(json name){
        auto result=VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineExecutableInfo=deserialize_uint32_t(name["members"]["pipelineExecutableInfo"]);}();}();
return result;}

    json serialize_VkPipelineInfoKHR(VkPipelineInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_uHlACGC=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoKHR deserialize_VkPipelineInfoKHR(json name){
        auto result=VkPipelineInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineInfoEXT(VkPipelineInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_uHlACGC=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoEXT deserialize_VkPipelineInfoEXT(json name){
        auto result=VkPipelineInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineExecutablePropertiesKHR(VkPipelineExecutablePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stages"]=[&]() {
    json return_pixouXU=json({});
    return serialize_VkShaderStageFlags(name.stages);}();
result["members"]["name"]=[&]() {
    json return_eMZHjWd=json({});
    
        return_eMZHjWd["members"]={};
        for(int eMZHjWd=0; eMZHjWd < VK_MAX_DESCRIPTION_SIZE; eMZHjWd++){
            json temp;
            temp=[&]() {
    json return_GADvzXQ=json({});
    return serialize_char(name.name[eMZHjWd]);}();
            return_eMZHjWd["members"][std::to_string(eMZHjWd)].push_back(temp);
        }
        return return_eMZHjWd;
        }();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["subgroupSize"]=[&]() {
    json return_MbXcUKt=json({});
    return serialize_uint32_t(name.subgroupSize);}();
return result;}

    VkPipelineExecutablePropertiesKHR deserialize_VkPipelineExecutablePropertiesKHR(json name){
        auto result=VkPipelineExecutablePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stages=deserialize_VkShaderStageFlags(name["members"]["stages"]);}();
[&]() {

        for (int cNGdKqJ=0; cNGdKqJ < VK_MAX_DESCRIPTION_SIZE; cNGdKqJ++){
            [&]() {
result.name[cNGdKqJ]=deserialize_char(name["members"]["name"]["members"][cNGdKqJ]);}();;
        }
        }();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
return result;}

    json serialize_VkPipelineExecutableInfoKHR(VkPipelineExecutableInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_uHlACGC=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["executableIndex"]=[&]() {
    json return_byxvdGJ=json({});
    return serialize_uint32_t(name.executableIndex);}();
return result;}

    VkPipelineExecutableInfoKHR deserialize_VkPipelineExecutableInfoKHR(json name){
        auto result=VkPipelineExecutableInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.executableIndex=deserialize_uint32_t(name["members"]["executableIndex"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticValueKHR(VkPipelineExecutableStatisticValueKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["b32"]=[&]() {
    json return_fLQNOkp=json({});
    return_fLQNOkp=[&]() {
    json return_ZdCrJUn=json({});
    return serialize_uint32_t(name.b32);}();return return_fLQNOkp;}();
result["members"]["i64"]=[&]() {
    json return_oqbPSTC=json({});
    return serialize_int64_t(name.i64);}();
result["members"]["u64"]=[&]() {
    json return_vzgbGKu=json({});
    return serialize_uint64_t(name.u64);}();
result["members"]["f64"]=[&]() {
    json return_IuYTnWd=json({});
    return serialize_double(name.f64);}();
return result;}

    VkPipelineExecutableStatisticValueKHR deserialize_VkPipelineExecutableStatisticValueKHR(json name){
        auto result=VkPipelineExecutableStatisticValueKHR();
    
[&]() {
[&]() {
result.b32=deserialize_uint32_t(name["members"]["b32"]);}();}();
[&]() {
result.i64=deserialize_int64_t(name["members"]["i64"]);}();
[&]() {
result.u64=deserialize_uint64_t(name["members"]["u64"]);}();
[&]() {
result.f64=deserialize_double(name["members"]["f64"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticKHR(VkPipelineExecutableStatisticKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_eMZHjWd=json({});
    
        return_eMZHjWd["members"]={};
        for(int eMZHjWd=0; eMZHjWd < VK_MAX_DESCRIPTION_SIZE; eMZHjWd++){
            json temp;
            temp=[&]() {
    json return_GADvzXQ=json({});
    return serialize_char(name.name[eMZHjWd]);}();
            return_eMZHjWd["members"][std::to_string(eMZHjWd)].push_back(temp);
        }
        return return_eMZHjWd;
        }();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["format"]=[&]() {
    json return_usItwUZ=json({});
    return serialize_VkPipelineExecutableStatisticFormatKHR(name.format);}();
result["members"]["value"]=[&]() {
    json return_TFPTBlW=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(name.value);}();
return result;}

    VkPipelineExecutableStatisticKHR deserialize_VkPipelineExecutableStatisticKHR(json name){
        auto result=VkPipelineExecutableStatisticKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int cNGdKqJ=0; cNGdKqJ < VK_MAX_DESCRIPTION_SIZE; cNGdKqJ++){
            [&]() {
result.name[cNGdKqJ]=deserialize_char(name["members"]["name"]["members"][cNGdKqJ]);}();;
        }
        }();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {
result.format=deserialize_VkPipelineExecutableStatisticFormatKHR(name["members"]["format"]);}();
[&]() {
result.value=deserialize_VkPipelineExecutableStatisticValueKHR(name["members"]["value"]);}();
return result;}

    json serialize_VkPipelineExecutableInternalRepresentationKHR(VkPipelineExecutableInternalRepresentationKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_eMZHjWd=json({});
    
        return_eMZHjWd["members"]={};
        for(int eMZHjWd=0; eMZHjWd < VK_MAX_DESCRIPTION_SIZE; eMZHjWd++){
            json temp;
            temp=[&]() {
    json return_GADvzXQ=json({});
    return serialize_char(name.name[eMZHjWd]);}();
            return_eMZHjWd["members"][std::to_string(eMZHjWd)].push_back(temp);
        }
        return return_eMZHjWd;
        }();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["isText"]=[&]() {
    json return_kvqkTXc=json({});
    return_kvqkTXc=[&]() {
    json return_dvcfBTJ=json({});
    return serialize_uint32_t(name.isText);}();return return_kvqkTXc;}();
result["members"]["dataSize"]=[&]() {
    json return_VwVTWUs=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_iuveWgS=json({});
    
        if (name.pData==NULL){
            return_iuveWgS["null"]=true;
            return return_iuveWgS;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkPipelineExecutableInternalRepresentationKHR deserialize_VkPipelineExecutableInternalRepresentationKHR(json name){
        auto result=VkPipelineExecutableInternalRepresentationKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int cNGdKqJ=0; cNGdKqJ < VK_MAX_DESCRIPTION_SIZE; cNGdKqJ++){
            [&]() {
result.name[cNGdKqJ]=deserialize_char(name["members"]["name"]["members"][cNGdKqJ]);}();;
        }
        }();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {
[&]() {
result.isText=deserialize_uint32_t(name["members"]["isText"]);}();}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {

        if (name["members"]["pData"].contains("null")){
        result.pData=NULL;
        }
    result.pData=deserialize_void_p(name["members"]["pData"]);
}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_EuBkwBq=json({});
    return_EuBkwBq=[&]() {
    json return_ORPBXQb=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_EuBkwBq;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_EuBkwBq=json({});
    return_EuBkwBq=[&]() {
    json return_ORPBXQb=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_EuBkwBq;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["texelBufferAlignment"]=[&]() {
    json return_amDBnTV=json({});
    return_amDBnTV=[&]() {
    json return_sjfejyk=json({});
    return serialize_uint32_t(name.texelBufferAlignment);}();return return_amDBnTV;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.texelBufferAlignment=deserialize_uint32_t(name["members"]["texelBufferAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(VkPhysicalDeviceTexelBufferAlignmentProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_jwLiMHJ=json({});
    return_jwLiMHJ=[&]() {
    json return_GGpeoif=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_jwLiMHJ;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_pEspUAo=json({});
    return_pEspUAo=[&]() {
    json return_gVwktwT=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_pEspUAo;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_NYBiwgz=json({});
    return_NYBiwgz=[&]() {
    json return_OjDkPvN=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_NYBiwgz;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_gDHbRgk=json({});
    return_gDHbRgk=[&]() {
    json return_aVumtBr=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_gDHbRgk;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentProperties deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_jwLiMHJ=json({});
    return_jwLiMHJ=[&]() {
    json return_GGpeoif=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_jwLiMHJ;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_pEspUAo=json({});
    return_pEspUAo=[&]() {
    json return_gVwktwT=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_pEspUAo;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_NYBiwgz=json({});
    return_NYBiwgz=[&]() {
    json return_OjDkPvN=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_NYBiwgz;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_gDHbRgk=json({});
    return_gDHbRgk=[&]() {
    json return_aVumtBr=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_gDHbRgk;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(VkPhysicalDeviceSubgroupSizeControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_QiPPWbQ=json({});
    return_QiPPWbQ=[&]() {
    json return_TKMpguz=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_QiPPWbQ;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_IKhSQZs=json({});
    return_IKhSQZs=[&]() {
    json return_aKffDPY=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_IKhSQZs;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeatures deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_QiPPWbQ=json({});
    return_QiPPWbQ=[&]() {
    json return_TKMpguz=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_QiPPWbQ;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_IKhSQZs=json({});
    return_IKhSQZs=[&]() {
    json return_aKffDPY=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_IKhSQZs;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeaturesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlProperties(VkPhysicalDeviceSubgroupSizeControlProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_wIBWoql=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_AuuBgsO=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_GHmRtfu=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_RlNKqYy=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlProperties deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_wIBWoql=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_AuuBgsO=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_GHmRtfu=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_RlNKqYy=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlPropertiesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_uSmpROy=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfo deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_uSmpROy=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(VkShaderRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_uSmpROy=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkShaderRequiredSubgroupSizeCreateInfoEXT deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkShaderRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(VkSubpassShadingPipelineCreateInfoHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_eCcfmNF=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_XDZzjUX=json({});
    return serialize_uint32_t(name.subpass);}();
return result;}

    VkSubpassShadingPipelineCreateInfoHUAWEI deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(json name){
        auto result=VkSubpassShadingPipelineCreateInfoHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]=[&]() {
    json return_jjoJPDS=json({});
    return serialize_uint32_t(name.maxSubpassShadingWorkgroupSizeAspectRatio);}();
return result;}

    VkPhysicalDeviceSubpassShadingPropertiesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSubpassShadingWorkgroupSizeAspectRatio=deserialize_uint32_t(name["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]);}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWorkGroupCount"]=[&]() {
    json return_khZJWUe=json({});
    
        return_khZJWUe["members"]={};
        for(int khZJWUe=0; khZJWUe < 3; khZJWUe++){
            json temp;
            temp=[&]() {
    json return_vXGRcxn=json({});
    return serialize_uint32_t(name.maxWorkGroupCount[khZJWUe]);}();
            return_khZJWUe["members"][std::to_string(khZJWUe)].push_back(temp);
        }
        return return_khZJWUe;
        }();
result["members"]["maxWorkGroupSize"]=[&]() {
    json return_loFMaYr=json({});
    
        return_loFMaYr["members"]={};
        for(int loFMaYr=0; loFMaYr < 3; loFMaYr++){
            json temp;
            temp=[&]() {
    json return_qDYsFsg=json({});
    return serialize_uint32_t(name.maxWorkGroupSize[loFMaYr]);}();
            return_loFMaYr["members"][std::to_string(loFMaYr)].push_back(temp);
        }
        return return_loFMaYr;
        }();
result["members"]["maxOutputClusterCount"]=[&]() {
    json return_KbmoWcm=json({});
    return serialize_uint32_t(name.maxOutputClusterCount);}();
result["members"]["indirectBufferOffsetAlignment"]=[&]() {
    json return_gtIFBjm=json({});
    return_gtIFBjm=[&]() {
    json return_YgkUIja=json({});
    return serialize_uint64_t(name.indirectBufferOffsetAlignment);}();return return_gtIFBjm;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int QPidpeO=0; QPidpeO < 3; QPidpeO++){
            [&]() {
result.maxWorkGroupCount[QPidpeO]=deserialize_uint32_t(name["members"]["maxWorkGroupCount"]["members"][QPidpeO]);}();;
        }
        }();
[&]() {

        for (int wdIOEyl=0; wdIOEyl < 3; wdIOEyl++){
            [&]() {
result.maxWorkGroupSize[wdIOEyl]=deserialize_uint32_t(name["members"]["maxWorkGroupSize"]["members"][wdIOEyl]);}();;
        }
        }();
[&]() {
result.maxOutputClusterCount=deserialize_uint32_t(name["members"]["maxOutputClusterCount"]);}();
[&]() {
[&]() {
result.indirectBufferOffsetAlignment=deserialize_uint64_t(name["members"]["indirectBufferOffsetAlignment"]);}();}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(VkMemoryOpaqueCaptureAddressAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_pQJxhre=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfo deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(VkMemoryOpaqueCaptureAddressAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_pQJxhre=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfoKHR deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(VkDeviceMemoryOpaqueCaptureAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfo deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(VkDeviceMemoryOpaqueCaptureAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfoKHR deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(VkPhysicalDeviceLineRasterizationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rectangularLines"]=[&]() {
    json return_hFMqJdb=json({});
    return_hFMqJdb=[&]() {
    json return_pYXjeCd=json({});
    return serialize_uint32_t(name.rectangularLines);}();return return_hFMqJdb;}();
result["members"]["bresenhamLines"]=[&]() {
    json return_NXKpiYW=json({});
    return_NXKpiYW=[&]() {
    json return_AbCCXGc=json({});
    return serialize_uint32_t(name.bresenhamLines);}();return return_NXKpiYW;}();
result["members"]["smoothLines"]=[&]() {
    json return_vxHREQi=json({});
    return_vxHREQi=[&]() {
    json return_lMPkAHf=json({});
    return serialize_uint32_t(name.smoothLines);}();return return_vxHREQi;}();
result["members"]["stippledRectangularLines"]=[&]() {
    json return_uVpIKcA=json({});
    return_uVpIKcA=[&]() {
    json return_rOFfiow=json({});
    return serialize_uint32_t(name.stippledRectangularLines);}();return return_uVpIKcA;}();
result["members"]["stippledBresenhamLines"]=[&]() {
    json return_DfTKEjI=json({});
    return_DfTKEjI=[&]() {
    json return_sRzCHJS=json({});
    return serialize_uint32_t(name.stippledBresenhamLines);}();return return_DfTKEjI;}();
result["members"]["stippledSmoothLines"]=[&]() {
    json return_ktIJpFc=json({});
    return_ktIJpFc=[&]() {
    json return_XnNMOir=json({});
    return serialize_uint32_t(name.stippledSmoothLines);}();return return_ktIJpFc;}();
return result;}

    VkPhysicalDeviceLineRasterizationFeaturesEXT deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rectangularLines=deserialize_uint32_t(name["members"]["rectangularLines"]);}();}();
[&]() {
[&]() {
result.bresenhamLines=deserialize_uint32_t(name["members"]["bresenhamLines"]);}();}();
[&]() {
[&]() {
result.smoothLines=deserialize_uint32_t(name["members"]["smoothLines"]);}();}();
[&]() {
[&]() {
result.stippledRectangularLines=deserialize_uint32_t(name["members"]["stippledRectangularLines"]);}();}();
[&]() {
[&]() {
result.stippledBresenhamLines=deserialize_uint32_t(name["members"]["stippledBresenhamLines"]);}();}();
[&]() {
[&]() {
result.stippledSmoothLines=deserialize_uint32_t(name["members"]["stippledSmoothLines"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(VkPhysicalDeviceLineRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineSubPixelPrecisionBits"]=[&]() {
    json return_uRwQhbx=json({});
    return serialize_uint32_t(name.lineSubPixelPrecisionBits);}();
return result;}

    VkPhysicalDeviceLineRasterizationPropertiesEXT deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.lineSubPixelPrecisionBits=deserialize_uint32_t(name["members"]["lineSubPixelPrecisionBits"]);}();
return result;}

    json serialize_VkPipelineRasterizationLineStateCreateInfoEXT(VkPipelineRasterizationLineStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineRasterizationMode"]=[&]() {
    json return_xFlpUcP=json({});
    return serialize_VkLineRasterizationModeEXT(name.lineRasterizationMode);}();
result["members"]["stippledLineEnable"]=[&]() {
    json return_DOEYgOL=json({});
    return_DOEYgOL=[&]() {
    json return_dvTUhDD=json({});
    return serialize_uint32_t(name.stippledLineEnable);}();return return_DOEYgOL;}();
result["members"]["lineStippleFactor"]=[&]() {
    json return_SPPiqCU=json({});
    return serialize_uint32_t(name.lineStippleFactor);}();
result["members"]["lineStipplePattern"]=[&]() {
    json return_nxiktMy=json({});
    return serialize_uint16_t(name.lineStipplePattern);}();
return result;}

    VkPipelineRasterizationLineStateCreateInfoEXT deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationLineStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.lineRasterizationMode=deserialize_VkLineRasterizationModeEXT(name["members"]["lineRasterizationMode"]);}();
[&]() {
[&]() {
result.stippledLineEnable=deserialize_uint32_t(name["members"]["stippledLineEnable"]);}();}();
[&]() {
result.lineStippleFactor=deserialize_uint32_t(name["members"]["lineStippleFactor"]);}();
[&]() {
result.lineStipplePattern=deserialize_uint16_t(name["members"]["lineStipplePattern"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(VkPhysicalDevicePipelineCreationCacheControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_egJOdwp=json({});
    return_egJOdwp=[&]() {
    json return_qxSjYhr=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_egJOdwp;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeatures deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_egJOdwp=json({});
    return_egJOdwp=[&]() {
    json return_qxSjYhr=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_egJOdwp;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Features(VkPhysicalDeviceVulkan11Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_zrjxQmG=json({});
    return_zrjxQmG=[&]() {
    json return_KCUIVjy=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_zrjxQmG;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_NlpeZAK=json({});
    return_NlpeZAK=[&]() {
    json return_xlGkdXu=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_NlpeZAK;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_EJOemyY=json({});
    return_EJOemyY=[&]() {
    json return_osXxXiZ=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_EJOemyY;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_iepRkPV=json({});
    return_iepRkPV=[&]() {
    json return_GScRciz=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_iepRkPV;}();
result["members"]["multiview"]=[&]() {
    json return_BbdyPfw=json({});
    return_BbdyPfw=[&]() {
    json return_qJpfllc=json({});
    return serialize_uint32_t(name.multiview);}();return return_BbdyPfw;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_WERbBQD=json({});
    return_WERbBQD=[&]() {
    json return_efCSlhF=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_WERbBQD;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_dQKCoEh=json({});
    return_dQKCoEh=[&]() {
    json return_MlYrrjY=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_dQKCoEh;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_WahdCjk=json({});
    return_WahdCjk=[&]() {
    json return_WFfpEhf=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_WahdCjk;}();
result["members"]["variablePointers"]=[&]() {
    json return_jiuqcKt=json({});
    return_jiuqcKt=[&]() {
    json return_ozIrqdy=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_jiuqcKt;}();
result["members"]["protectedMemory"]=[&]() {
    json return_JHXvDBt=json({});
    return_JHXvDBt=[&]() {
    json return_FZZqguP=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_JHXvDBt;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_FjatIMB=json({});
    return_FjatIMB=[&]() {
    json return_ZHKiXNw=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_FjatIMB;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_NpWwBzY=json({});
    return_NpWwBzY=[&]() {
    json return_pYAAMtz=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_NpWwBzY;}();
return result;}

    VkPhysicalDeviceVulkan11Features deserialize_VkPhysicalDeviceVulkan11Features(json name){
        auto result=VkPhysicalDeviceVulkan11Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Properties(VkPhysicalDeviceVulkan11Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_BhogTdF=json({});
    
        return_BhogTdF["members"]={};
        for(int BhogTdF=0; BhogTdF < VK_UUID_SIZE; BhogTdF++){
            json temp;
            temp=[&]() {
    json return_iKhwDKj=json({});
    return serialize_uint8_t(name.deviceUUID[BhogTdF]);}();
            return_BhogTdF["members"][std::to_string(BhogTdF)].push_back(temp);
        }
        return return_BhogTdF;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_WCNWjGh=json({});
    
        return_WCNWjGh["members"]={};
        for(int WCNWjGh=0; WCNWjGh < VK_UUID_SIZE; WCNWjGh++){
            json temp;
            temp=[&]() {
    json return_EasOAnT=json({});
    return serialize_uint8_t(name.driverUUID[WCNWjGh]);}();
            return_WCNWjGh["members"][std::to_string(WCNWjGh)].push_back(temp);
        }
        return return_WCNWjGh;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_aaYdeyA=json({});
    
        return_aaYdeyA["members"]={};
        for(int aaYdeyA=0; aaYdeyA < VK_LUID_SIZE; aaYdeyA++){
            json temp;
            temp=[&]() {
    json return_RWjocTy=json({});
    return serialize_uint8_t(name.deviceLUID[aaYdeyA]);}();
            return_aaYdeyA["members"][std::to_string(aaYdeyA)].push_back(temp);
        }
        return return_aaYdeyA;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_usdbPVD=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_wrhFliq=json({});
    return_wrhFliq=[&]() {
    json return_reFyAOI=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_wrhFliq;}();
result["members"]["subgroupSize"]=[&]() {
    json return_MbXcUKt=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["subgroupSupportedStages"]=[&]() {
    json return_LUveOTd=json({});
    return serialize_VkShaderStageFlags(name.subgroupSupportedStages);}();
result["members"]["subgroupSupportedOperations"]=[&]() {
    json return_luFnEvF=json({});
    return serialize_VkSubgroupFeatureFlags(name.subgroupSupportedOperations);}();
result["members"]["subgroupQuadOperationsInAllStages"]=[&]() {
    json return_FjsjWoG=json({});
    return_FjsjWoG=[&]() {
    json return_bQCrzey=json({});
    return serialize_uint32_t(name.subgroupQuadOperationsInAllStages);}();return return_FjsjWoG;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_cNSzcJK=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_pXeKvAP=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_EBqmExb=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_HOhtSHv=json({});
    return_HOhtSHv=[&]() {
    json return_DLHcJmx=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_HOhtSHv;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_NdILVai=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_iIkisCm=json({});
    return_iIkisCm=[&]() {
    json return_kzGrjSv=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_iIkisCm;}();
return result;}

    VkPhysicalDeviceVulkan11Properties deserialize_VkPhysicalDeviceVulkan11Properties(json name){
        auto result=VkPhysicalDeviceVulkan11Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int pTxlXFB=0; pTxlXFB < VK_UUID_SIZE; pTxlXFB++){
            [&]() {
result.deviceUUID[pTxlXFB]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][pTxlXFB]);}();;
        }
        }();
[&]() {

        for (int nSQmLOX=0; nSQmLOX < VK_UUID_SIZE; nSQmLOX++){
            [&]() {
result.driverUUID[nSQmLOX]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][nSQmLOX]);}();;
        }
        }();
[&]() {

        for (int QGpKsyK=0; QGpKsyK < VK_LUID_SIZE; QGpKsyK++){
            [&]() {
result.deviceLUID[QGpKsyK]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][QGpKsyK]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.subgroupSupportedStages=deserialize_VkShaderStageFlags(name["members"]["subgroupSupportedStages"]);}();
[&]() {
result.subgroupSupportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["subgroupSupportedOperations"]);}();
[&]() {
[&]() {
result.subgroupQuadOperationsInAllStages=deserialize_uint32_t(name["members"]["subgroupQuadOperationsInAllStages"]);}();}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Features(VkPhysicalDeviceVulkan12Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerMirrorClampToEdge"]=[&]() {
    json return_pICPVSt=json({});
    return_pICPVSt=[&]() {
    json return_qoIRUIj=json({});
    return serialize_uint32_t(name.samplerMirrorClampToEdge);}();return return_pICPVSt;}();
result["members"]["drawIndirectCount"]=[&]() {
    json return_HxoUiTB=json({});
    return_HxoUiTB=[&]() {
    json return_ZFfyiyM=json({});
    return serialize_uint32_t(name.drawIndirectCount);}();return return_HxoUiTB;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_cUzGUfG=json({});
    return_cUzGUfG=[&]() {
    json return_pCcCIik=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_cUzGUfG;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_nwBVDAM=json({});
    return_nwBVDAM=[&]() {
    json return_XENtzYw=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_nwBVDAM;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_UGLYbTl=json({});
    return_UGLYbTl=[&]() {
    json return_suqDaQO=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_UGLYbTl;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_jdDrghC=json({});
    return_jdDrghC=[&]() {
    json return_tORLEiQ=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_jdDrghC;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_phsryIj=json({});
    return_phsryIj=[&]() {
    json return_cmPSQhS=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_phsryIj;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_duJcorf=json({});
    return_duJcorf=[&]() {
    json return_rZmmQJb=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_duJcorf;}();
result["members"]["shaderInt8"]=[&]() {
    json return_flcVjnn=json({});
    return_flcVjnn=[&]() {
    json return_qovMBrq=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_flcVjnn;}();
result["members"]["descriptorIndexing"]=[&]() {
    json return_sBFkkWF=json({});
    return_sBFkkWF=[&]() {
    json return_FNPbIfa=json({});
    return serialize_uint32_t(name.descriptorIndexing);}();return return_sBFkkWF;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_hEgQDnG=json({});
    return_hEgQDnG=[&]() {
    json return_vssmIka=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_hEgQDnG;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_zxTIcGh=json({});
    return_zxTIcGh=[&]() {
    json return_gniiRBU=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_zxTIcGh;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_PncuDYg=json({});
    return_PncuDYg=[&]() {
    json return_ZaGxmkW=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_PncuDYg;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_lBEjPwF=json({});
    return_lBEjPwF=[&]() {
    json return_rrmEjKp=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_lBEjPwF;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_lQDTFZt=json({});
    return_lQDTFZt=[&]() {
    json return_cVjtBUl=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_lQDTFZt;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_HaSYgRr=json({});
    return_HaSYgRr=[&]() {
    json return_UJvUkmk=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_HaSYgRr;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_uoQBXgO=json({});
    return_uoQBXgO=[&]() {
    json return_OVXEndv=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_uoQBXgO;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_PsDumTJ=json({});
    return_PsDumTJ=[&]() {
    json return_wyKufUh=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_PsDumTJ;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_NLdOhpI=json({});
    return_NLdOhpI=[&]() {
    json return_RUgEzKs=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_NLdOhpI;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_mJNMFnt=json({});
    return_mJNMFnt=[&]() {
    json return_fSCMOUi=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_mJNMFnt;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_QnEDtvB=json({});
    return_QnEDtvB=[&]() {
    json return_KRcyHYH=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_QnEDtvB;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_HhjqdCq=json({});
    return_HhjqdCq=[&]() {
    json return_ftiuWzF=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_HhjqdCq;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_TpRfWnm=json({});
    return_TpRfWnm=[&]() {
    json return_IMfksYQ=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_TpRfWnm;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_zOKexBd=json({});
    return_zOKexBd=[&]() {
    json return_VwesYkR=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_zOKexBd;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_vuwFhgO=json({});
    return_vuwFhgO=[&]() {
    json return_GIknhaT=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_vuwFhgO;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_rccyfAZ=json({});
    return_rccyfAZ=[&]() {
    json return_clTdYNq=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_rccyfAZ;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_IXrtCAI=json({});
    return_IXrtCAI=[&]() {
    json return_CiBQmwF=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_IXrtCAI;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_GmJfuIR=json({});
    return_GmJfuIR=[&]() {
    json return_bnvtDob=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_GmJfuIR;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_NpOJlys=json({});
    return_NpOJlys=[&]() {
    json return_jOdzoJc=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_NpOJlys;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_NGWPweM=json({});
    return_NGWPweM=[&]() {
    json return_aKDosya=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_NGWPweM;}();
result["members"]["samplerFilterMinmax"]=[&]() {
    json return_uNeGsyH=json({});
    return_uNeGsyH=[&]() {
    json return_sjRyNLg=json({});
    return serialize_uint32_t(name.samplerFilterMinmax);}();return return_uNeGsyH;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_oGQUcpR=json({});
    return_oGQUcpR=[&]() {
    json return_cwwLHbn=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_oGQUcpR;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_bYQylWx=json({});
    return_bYQylWx=[&]() {
    json return_SqavXmC=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_bYQylWx;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_vsLfvhv=json({});
    return_vsLfvhv=[&]() {
    json return_AGOkKpT=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_vsLfvhv;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_XVkBciW=json({});
    return_XVkBciW=[&]() {
    json return_LVRtfEJ=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_XVkBciW;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_vGglSta=json({});
    return_vGglSta=[&]() {
    json return_jAEfutl=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_vGglSta;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_pehXKgM=json({});
    return_pehXKgM=[&]() {
    json return_jORpLlU=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_pehXKgM;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_esdonFM=json({});
    return_esdonFM=[&]() {
    json return_birAWVc=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_esdonFM;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_rEQDyxd=json({});
    return_rEQDyxd=[&]() {
    json return_zUttdnK=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_rEQDyxd;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_rHxSldy=json({});
    return_rHxSldy=[&]() {
    json return_MNBlTkE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_rHxSldy;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_jrcoDdJ=json({});
    return_jrcoDdJ=[&]() {
    json return_HaJzyiP=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_jrcoDdJ;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_DIWTENw=json({});
    return_DIWTENw=[&]() {
    json return_VsbQVeU=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_DIWTENw;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_vZbiJNO=json({});
    return_vZbiJNO=[&]() {
    json return_mkgUNIp=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_vZbiJNO;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_HEClEDl=json({});
    return_HEClEDl=[&]() {
    json return_LXRWIYh=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_HEClEDl;}();
result["members"]["shaderOutputViewportIndex"]=[&]() {
    json return_SEvGPqG=json({});
    return_SEvGPqG=[&]() {
    json return_XyHFCql=json({});
    return serialize_uint32_t(name.shaderOutputViewportIndex);}();return return_SEvGPqG;}();
result["members"]["shaderOutputLayer"]=[&]() {
    json return_pbzYCqd=json({});
    return_pbzYCqd=[&]() {
    json return_auBPQEF=json({});
    return serialize_uint32_t(name.shaderOutputLayer);}();return return_pbzYCqd;}();
result["members"]["subgroupBroadcastDynamicId"]=[&]() {
    json return_YOfnndF=json({});
    return_YOfnndF=[&]() {
    json return_ETHHlTO=json({});
    return serialize_uint32_t(name.subgroupBroadcastDynamicId);}();return return_YOfnndF;}();
return result;}

    VkPhysicalDeviceVulkan12Features deserialize_VkPhysicalDeviceVulkan12Features(json name){
        auto result=VkPhysicalDeviceVulkan12Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerMirrorClampToEdge=deserialize_uint32_t(name["members"]["samplerMirrorClampToEdge"]);}();}();
[&]() {
[&]() {
result.drawIndirectCount=deserialize_uint32_t(name["members"]["drawIndirectCount"]);}();}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
[&]() {
[&]() {
result.descriptorIndexing=deserialize_uint32_t(name["members"]["descriptorIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
[&]() {
[&]() {
result.samplerFilterMinmax=deserialize_uint32_t(name["members"]["samplerFilterMinmax"]);}();}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
[&]() {
[&]() {
result.shaderOutputViewportIndex=deserialize_uint32_t(name["members"]["shaderOutputViewportIndex"]);}();}();
[&]() {
[&]() {
result.shaderOutputLayer=deserialize_uint32_t(name["members"]["shaderOutputLayer"]);}();}();
[&]() {
[&]() {
result.subgroupBroadcastDynamicId=deserialize_uint32_t(name["members"]["subgroupBroadcastDynamicId"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Properties(VkPhysicalDeviceVulkan12Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_gkeusYX=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_rxFKkQa=json({});
    
        return_rxFKkQa["members"]={};
        for(int rxFKkQa=0; rxFKkQa < VK_MAX_DRIVER_NAME_SIZE; rxFKkQa++){
            json temp;
            temp=[&]() {
    json return_bxOaYCw=json({});
    return serialize_char(name.driverName[rxFKkQa]);}();
            return_rxFKkQa["members"][std::to_string(rxFKkQa)].push_back(temp);
        }
        return return_rxFKkQa;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_kGgafYo=json({});
    
        return_kGgafYo["members"]={};
        for(int kGgafYo=0; kGgafYo < VK_MAX_DRIVER_INFO_SIZE; kGgafYo++){
            json temp;
            temp=[&]() {
    json return_vlUgzbl=json({});
    return serialize_char(name.driverInfo[kGgafYo]);}();
            return_kGgafYo["members"][std::to_string(kGgafYo)].push_back(temp);
        }
        return return_kGgafYo;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_UvZYVpT=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_QlCxcRG=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_mkKbeXD=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_hdGbcfL=json({});
    return_hdGbcfL=[&]() {
    json return_VWXjxzE=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_hdGbcfL;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_eKYRXYf=json({});
    return_eKYRXYf=[&]() {
    json return_eXlLigD=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_eKYRXYf;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_XNqwMbb=json({});
    return_XNqwMbb=[&]() {
    json return_ljMAkEE=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_XNqwMbb;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_ZQyRxhT=json({});
    return_ZQyRxhT=[&]() {
    json return_soFjpUa=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_ZQyRxhT;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_fyERzWW=json({});
    return_fyERzWW=[&]() {
    json return_CEaiCmK=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_fyERzWW;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_fsZbPNT=json({});
    return_fsZbPNT=[&]() {
    json return_jdWKMut=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_fsZbPNT;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_dIWBUXP=json({});
    return_dIWBUXP=[&]() {
    json return_qJxMFBN=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_dIWBUXP;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_fzIQCoj=json({});
    return_fzIQCoj=[&]() {
    json return_JPYZZri=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_fzIQCoj;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_yjoFIlL=json({});
    return_yjoFIlL=[&]() {
    json return_oOBdYBf=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_yjoFIlL;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_URpdwOJ=json({});
    return_URpdwOJ=[&]() {
    json return_poWgZTr=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_URpdwOJ;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_LWxRCCh=json({});
    return_LWxRCCh=[&]() {
    json return_ufKCatV=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_LWxRCCh;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_sbSCPyi=json({});
    return_sbSCPyi=[&]() {
    json return_NCmNTYP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_sbSCPyi;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_gNbvqqR=json({});
    return_gNbvqqR=[&]() {
    json return_zUtMCrn=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_gNbvqqR;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_xUCNQAS=json({});
    return_xUCNQAS=[&]() {
    json return_NFNIeOy=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_xUCNQAS;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_ujJuCLm=json({});
    return_ujJuCLm=[&]() {
    json return_wrmRuJI=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_ujJuCLm;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_ePfTKxz=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_PdnVlJy=json({});
    return_PdnVlJy=[&]() {
    json return_eMJsmKw=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_PdnVlJy;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_UikgQrZ=json({});
    return_UikgQrZ=[&]() {
    json return_oNDObwS=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_UikgQrZ;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_MZyZLro=json({});
    return_MZyZLro=[&]() {
    json return_NkaZYGA=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_MZyZLro;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_LPiYJuk=json({});
    return_LPiYJuk=[&]() {
    json return_gsilbKy=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_LPiYJuk;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_uSHhHpY=json({});
    return_uSHhHpY=[&]() {
    json return_omvmlSZ=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_uSHhHpY;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_JLZLAdw=json({});
    return_JLZLAdw=[&]() {
    json return_sRBWmpC=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_JLZLAdw;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_duLJvYy=json({});
    return_duLJvYy=[&]() {
    json return_wbUDgmN=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_duLJvYy;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_uBzwYxC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_ndLKkPY=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_lJTShcn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_nhjbNXA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_dJmoFUt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_MkLVdjC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_vJwnLkI=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_haVYbbg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_HgKoHlu=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_CketgTI=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_StuMRpL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_YitCkOh=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_XLhApqv=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_OUlRYeR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_gmhAvGL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_nKHNWcX=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_mZDiNuO=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_ouNHLZV=json({});
    return_ouNHLZV=[&]() {
    json return_QjZTSJE=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_ouNHLZV;}();
result["members"]["independentResolve"]=[&]() {
    json return_DqJAuBQ=json({});
    return_DqJAuBQ=[&]() {
    json return_qWvALge=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_DqJAuBQ;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_fBmoBqn=json({});
    return_fBmoBqn=[&]() {
    json return_LyoyfcN=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_fBmoBqn;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_cbXlDVR=json({});
    return_cbXlDVR=[&]() {
    json return_NBjXsWT=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_cbXlDVR;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_vYPlMuN=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
result["members"]["framebufferIntegerColorSampleCounts"]=[&]() {
    json return_fgeYXZv=json({});
    return serialize_VkSampleCountFlags(name.framebufferIntegerColorSampleCounts);}();
return result;}

    VkPhysicalDeviceVulkan12Properties deserialize_VkPhysicalDeviceVulkan12Properties(json name){
        auto result=VkPhysicalDeviceVulkan12Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int SiMZOtb=0; SiMZOtb < VK_MAX_DRIVER_NAME_SIZE; SiMZOtb++){
            [&]() {
result.driverName[SiMZOtb]=deserialize_char(name["members"]["driverName"]["members"][SiMZOtb]);}();;
        }
        }();
[&]() {

        for (int ZwrzTjC=0; ZwrzTjC < VK_MAX_DRIVER_INFO_SIZE; ZwrzTjC++){
            [&]() {
result.driverInfo[ZwrzTjC]=deserialize_char(name["members"]["driverInfo"]["members"][ZwrzTjC]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
[&]() {
result.framebufferIntegerColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferIntegerColorSampleCounts"]);}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Features(VkPhysicalDeviceVulkan13Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_nvwwGfm=json({});
    return_nvwwGfm=[&]() {
    json return_fTmmZwn=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_nvwwGfm;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_XdPUseW=json({});
    return_XdPUseW=[&]() {
    json return_EtMrJxV=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_XdPUseW;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_HImrYPY=json({});
    return_HImrYPY=[&]() {
    json return_tesfOEp=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_HImrYPY;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_egJOdwp=json({});
    return_egJOdwp=[&]() {
    json return_qxSjYhr=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_egJOdwp;}();
result["members"]["privateData"]=[&]() {
    json return_oTKCcXm=json({});
    return_oTKCcXm=[&]() {
    json return_gogCCXO=json({});
    return serialize_uint32_t(name.privateData);}();return return_oTKCcXm;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_EuBkwBq=json({});
    return_EuBkwBq=[&]() {
    json return_ORPBXQb=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_EuBkwBq;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_bYRMmRP=json({});
    return_bYRMmRP=[&]() {
    json return_KdVbdcR=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_bYRMmRP;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_QiPPWbQ=json({});
    return_QiPPWbQ=[&]() {
    json return_TKMpguz=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_QiPPWbQ;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_IKhSQZs=json({});
    return_IKhSQZs=[&]() {
    json return_aKffDPY=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_IKhSQZs;}();
result["members"]["synchronization2"]=[&]() {
    json return_SNWRsaB=json({});
    return_SNWRsaB=[&]() {
    json return_KvTfIVX=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_SNWRsaB;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_OHQTraF=json({});
    return_OHQTraF=[&]() {
    json return_FLeVwFe=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_OHQTraF;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_INhPoHA=json({});
    return_INhPoHA=[&]() {
    json return_OyDmeUn=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_INhPoHA;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_HyJEZse=json({});
    return_HyJEZse=[&]() {
    json return_lHytIYu=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_HyJEZse;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_QeSOizG=json({});
    return_QeSOizG=[&]() {
    json return_VKLuNmN=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_QeSOizG;}();
result["members"]["maintenance4"]=[&]() {
    json return_AlPoUXr=json({});
    return_AlPoUXr=[&]() {
    json return_NJuytil=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_AlPoUXr;}();
return result;}

    VkPhysicalDeviceVulkan13Features deserialize_VkPhysicalDeviceVulkan13Features(json name){
        auto result=VkPhysicalDeviceVulkan13Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Properties(VkPhysicalDeviceVulkan13Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_wIBWoql=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_AuuBgsO=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_GHmRtfu=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_RlNKqYy=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_WoCzQLn=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_KSaNAsV=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_EKioPZl=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_TxmZtSg=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_kwpVGPU=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxInlineUniformTotalSize"]=[&]() {
    json return_jHTIYIP=json({});
    return serialize_uint32_t(name.maxInlineUniformTotalSize);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_HschYFM=json({});
    return_HschYFM=[&]() {
    json return_PfeaXxo=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_HschYFM;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_qFnkeyv=json({});
    return_qFnkeyv=[&]() {
    json return_SVdyPLV=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_qFnkeyv;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_VuNPfgs=json({});
    return_VuNPfgs=[&]() {
    json return_dtxuLRi=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_VuNPfgs;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_JcfFHpA=json({});
    return_JcfFHpA=[&]() {
    json return_LxuNeSj=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_JcfFHpA;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_InQPDLg=json({});
    return_InQPDLg=[&]() {
    json return_IAnsXxq=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_InQPDLg;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_HfcKJGj=json({});
    return_HfcKJGj=[&]() {
    json return_bPaYdlR=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_HfcKJGj;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_gcNNWlF=json({});
    return_gcNNWlF=[&]() {
    json return_fioeLkA=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_gcNNWlF;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_OSNiUmH=json({});
    return_OSNiUmH=[&]() {
    json return_aCxdHsL=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_OSNiUmH;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_WBSSzAM=json({});
    return_WBSSzAM=[&]() {
    json return_KpfDxFu=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_WBSSzAM;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_ZtOlqHA=json({});
    return_ZtOlqHA=[&]() {
    json return_owQYWvU=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_ZtOlqHA;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_fxNeKcj=json({});
    return_fxNeKcj=[&]() {
    json return_rhpfVIe=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_fxNeKcj;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_LzYrcYD=json({});
    return_LzYrcYD=[&]() {
    json return_WXpDGKI=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_LzYrcYD;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_QAPMrBP=json({});
    return_QAPMrBP=[&]() {
    json return_EYHlQRN=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_QAPMrBP;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_dwTKyfI=json({});
    return_dwTKyfI=[&]() {
    json return_WcbpVhV=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_dwTKyfI;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_xFHWhKK=json({});
    return_xFHWhKK=[&]() {
    json return_IfWrwwW=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_xFHWhKK;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_XmoeSPd=json({});
    return_XmoeSPd=[&]() {
    json return_dQBqDbJ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_XmoeSPd;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_HFQAJHZ=json({});
    return_HFQAJHZ=[&]() {
    json return_IChMiiP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_HFQAJHZ;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_AKNjIAf=json({});
    return_AKNjIAf=[&]() {
    json return_uCbLVBo=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_AKNjIAf;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_Asrnpbv=json({});
    return_Asrnpbv=[&]() {
    json return_VcKRtTX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_Asrnpbv;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_LQeMEDr=json({});
    return_LQeMEDr=[&]() {
    json return_IkuTnpM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_LQeMEDr;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_LekwbJy=json({});
    return_LekwbJy=[&]() {
    json return_tWfHMuz=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_LekwbJy;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_HoKYYXh=json({});
    return_HoKYYXh=[&]() {
    json return_SJPnxuL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_HoKYYXh;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_ZSLBigN=json({});
    return_ZSLBigN=[&]() {
    json return_xAiHLAW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_ZSLBigN;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_TPLORKo=json({});
    return_TPLORKo=[&]() {
    json return_vLYZnTf=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_TPLORKo;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_KwFGTBW=json({});
    return_KwFGTBW=[&]() {
    json return_wDUnMRb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_KwFGTBW;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_FgLiBEe=json({});
    return_FgLiBEe=[&]() {
    json return_JxVasNC=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_FgLiBEe;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_rCAXduj=json({});
    return_rCAXduj=[&]() {
    json return_LJjqkRV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_rCAXduj;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_htfRqcR=json({});
    return_htfRqcR=[&]() {
    json return_VQGoiIW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_htfRqcR;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_RRiocEE=json({});
    return_RRiocEE=[&]() {
    json return_bwMvKZM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_RRiocEE;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_bpqDsBZ=json({});
    return_bpqDsBZ=[&]() {
    json return_aVTQjny=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_bpqDsBZ;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_jwLiMHJ=json({});
    return_jwLiMHJ=[&]() {
    json return_GGpeoif=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_jwLiMHJ;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_pEspUAo=json({});
    return_pEspUAo=[&]() {
    json return_gVwktwT=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_pEspUAo;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_NYBiwgz=json({});
    return_NYBiwgz=[&]() {
    json return_OjDkPvN=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_NYBiwgz;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_gDHbRgk=json({});
    return_gDHbRgk=[&]() {
    json return_aVumtBr=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_gDHbRgk;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_dHdoyHA=json({});
    return_dHdoyHA=[&]() {
    json return_xheMvEH=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_dHdoyHA;}();
return result;}

    VkPhysicalDeviceVulkan13Properties deserialize_VkPhysicalDeviceVulkan13Properties(json name){
        auto result=VkPhysicalDeviceVulkan13Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxInlineUniformTotalSize=deserialize_uint32_t(name["members"]["maxInlineUniformTotalSize"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPipelineCompilerControlCreateInfoAMD(VkPipelineCompilerControlCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compilerControlFlags"]=[&]() {
    json return_rLlaGIp=json({});
    return serialize_VkPipelineCompilerControlFlagsAMD(name.compilerControlFlags);}();
return result;}

    VkPipelineCompilerControlCreateInfoAMD deserialize_VkPipelineCompilerControlCreateInfoAMD(json name){
        auto result=VkPipelineCompilerControlCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.compilerControlFlags=deserialize_VkPipelineCompilerControlFlagsAMD(name["members"]["compilerControlFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkPhysicalDeviceCoherentMemoryFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceCoherentMemory"]=[&]() {
    json return_ctpuVQh=json({});
    return_ctpuVQh=[&]() {
    json return_yrbYHji=json({});
    return serialize_uint32_t(name.deviceCoherentMemory);}();return return_ctpuVQh;}();
return result;}

    VkPhysicalDeviceCoherentMemoryFeaturesAMD deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(json name){
        auto result=VkPhysicalDeviceCoherentMemoryFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceCoherentMemory=deserialize_uint32_t(name["members"]["deviceCoherentMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceToolProperties(VkPhysicalDeviceToolProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_NMmwgzX=json({});
    
        return_NMmwgzX["members"]={};
        for(int NMmwgzX=0; NMmwgzX < VK_MAX_EXTENSION_NAME_SIZE; NMmwgzX++){
            json temp;
            temp=[&]() {
    json return_RBqbtMa=json({});
    return serialize_char(name.name[NMmwgzX]);}();
            return_NMmwgzX["members"][std::to_string(NMmwgzX)].push_back(temp);
        }
        return return_NMmwgzX;
        }();
result["members"]["version"]=[&]() {
    json return_gLGkoPN=json({});
    
        return_gLGkoPN["members"]={};
        for(int gLGkoPN=0; gLGkoPN < VK_MAX_EXTENSION_NAME_SIZE; gLGkoPN++){
            json temp;
            temp=[&]() {
    json return_WOKMGZK=json({});
    return serialize_char(name.version[gLGkoPN]);}();
            return_gLGkoPN["members"][std::to_string(gLGkoPN)].push_back(temp);
        }
        return return_gLGkoPN;
        }();
result["members"]["purposes"]=[&]() {
    json return_ZacGKeL=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["layer"]=[&]() {
    json return_QfLewik=json({});
    
        return_QfLewik["members"]={};
        for(int QfLewik=0; QfLewik < VK_MAX_EXTENSION_NAME_SIZE; QfLewik++){
            json temp;
            temp=[&]() {
    json return_aCMnqRi=json({});
    return serialize_char(name.layer[QfLewik]);}();
            return_QfLewik["members"][std::to_string(QfLewik)].push_back(temp);
        }
        return return_QfLewik;
        }();
return result;}

    VkPhysicalDeviceToolProperties deserialize_VkPhysicalDeviceToolProperties(json name){
        auto result=VkPhysicalDeviceToolProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int akmxrsE=0; akmxrsE < VK_MAX_EXTENSION_NAME_SIZE; akmxrsE++){
            [&]() {
result.name[akmxrsE]=deserialize_char(name["members"]["name"]["members"][akmxrsE]);}();;
        }
        }();
[&]() {

        for (int yTiHQDm=0; yTiHQDm < VK_MAX_EXTENSION_NAME_SIZE; yTiHQDm++){
            [&]() {
result.version[yTiHQDm]=deserialize_char(name["members"]["version"]["members"][yTiHQDm]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {

        for (int DCqclcF=0; DCqclcF < VK_MAX_EXTENSION_NAME_SIZE; DCqclcF++){
            [&]() {
result.layer[DCqclcF]=deserialize_char(name["members"]["layer"]["members"][DCqclcF]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceToolPropertiesEXT(VkPhysicalDeviceToolPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_NMmwgzX=json({});
    
        return_NMmwgzX["members"]={};
        for(int NMmwgzX=0; NMmwgzX < VK_MAX_EXTENSION_NAME_SIZE; NMmwgzX++){
            json temp;
            temp=[&]() {
    json return_RBqbtMa=json({});
    return serialize_char(name.name[NMmwgzX]);}();
            return_NMmwgzX["members"][std::to_string(NMmwgzX)].push_back(temp);
        }
        return return_NMmwgzX;
        }();
result["members"]["version"]=[&]() {
    json return_gLGkoPN=json({});
    
        return_gLGkoPN["members"]={};
        for(int gLGkoPN=0; gLGkoPN < VK_MAX_EXTENSION_NAME_SIZE; gLGkoPN++){
            json temp;
            temp=[&]() {
    json return_WOKMGZK=json({});
    return serialize_char(name.version[gLGkoPN]);}();
            return_gLGkoPN["members"][std::to_string(gLGkoPN)].push_back(temp);
        }
        return return_gLGkoPN;
        }();
result["members"]["purposes"]=[&]() {
    json return_ZacGKeL=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["layer"]=[&]() {
    json return_QfLewik=json({});
    
        return_QfLewik["members"]={};
        for(int QfLewik=0; QfLewik < VK_MAX_EXTENSION_NAME_SIZE; QfLewik++){
            json temp;
            temp=[&]() {
    json return_aCMnqRi=json({});
    return serialize_char(name.layer[QfLewik]);}();
            return_QfLewik["members"][std::to_string(QfLewik)].push_back(temp);
        }
        return return_QfLewik;
        }();
return result;}

    VkPhysicalDeviceToolPropertiesEXT deserialize_VkPhysicalDeviceToolPropertiesEXT(json name){
        auto result=VkPhysicalDeviceToolPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int akmxrsE=0; akmxrsE < VK_MAX_EXTENSION_NAME_SIZE; akmxrsE++){
            [&]() {
result.name[akmxrsE]=deserialize_char(name["members"]["name"]["members"][akmxrsE]);}();;
        }
        }();
[&]() {

        for (int yTiHQDm=0; yTiHQDm < VK_MAX_EXTENSION_NAME_SIZE; yTiHQDm++){
            [&]() {
result.version[yTiHQDm]=deserialize_char(name["members"]["version"]["members"][yTiHQDm]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {

        for (int DCqclcF=0; DCqclcF < VK_MAX_EXTENSION_NAME_SIZE; DCqclcF++){
            [&]() {
result.layer[DCqclcF]=deserialize_char(name["members"]["layer"]["members"][DCqclcF]);}();;
        }
        }();
return result;}

    json serialize_VkSamplerCustomBorderColorCreateInfoEXT(VkSamplerCustomBorderColorCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColor"]=[&]() {
    json return_vrWqcTo=json({});
    return serialize_VkClearColorValue(name.customBorderColor);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkSamplerCustomBorderColorCreateInfoEXT deserialize_VkSamplerCustomBorderColorCreateInfoEXT(json name){
        auto result=VkSamplerCustomBorderColorCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.customBorderColor=deserialize_VkClearColorValue(name["members"]["customBorderColor"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkPhysicalDeviceCustomBorderColorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxCustomBorderColorSamplers"]=[&]() {
    json return_ZGFpFHT=json({});
    return serialize_uint32_t(name.maxCustomBorderColorSamplers);}();
return result;}

    VkPhysicalDeviceCustomBorderColorPropertiesEXT deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxCustomBorderColorSamplers=deserialize_uint32_t(name["members"]["maxCustomBorderColorSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkPhysicalDeviceCustomBorderColorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColors"]=[&]() {
    json return_LmbcoRS=json({});
    return_LmbcoRS=[&]() {
    json return_kWtUzkC=json({});
    return serialize_uint32_t(name.customBorderColors);}();return return_LmbcoRS;}();
result["members"]["customBorderColorWithoutFormat"]=[&]() {
    json return_arsPPDa=json({});
    return_arsPPDa=[&]() {
    json return_OZWYTyf=json({});
    return serialize_uint32_t(name.customBorderColorWithoutFormat);}();return return_arsPPDa;}();
return result;}

    VkPhysicalDeviceCustomBorderColorFeaturesEXT deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.customBorderColors=deserialize_uint32_t(name["members"]["customBorderColors"]);}();}();
[&]() {
[&]() {
result.customBorderColorWithoutFormat=deserialize_uint32_t(name["members"]["customBorderColorWithoutFormat"]);}();}();
return result;}

    json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(VkSamplerBorderColorComponentMappingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["components"]=[&]() {
    json return_kUWBeRM=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["srgb"]=[&]() {
    json return_KBlnzPL=json({});
    return_KBlnzPL=[&]() {
    json return_tmkeMEM=json({});
    return serialize_uint32_t(name.srgb);}();return return_KBlnzPL;}();
return result;}

    VkSamplerBorderColorComponentMappingCreateInfoEXT deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(json name){
        auto result=VkSamplerBorderColorComponentMappingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
[&]() {
result.srgb=deserialize_uint32_t(name["members"]["srgb"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["borderColorSwizzle"]=[&]() {
    json return_NyBfdPD=json({});
    return_NyBfdPD=[&]() {
    json return_eHPdpQJ=json({});
    return serialize_uint32_t(name.borderColorSwizzle);}();return return_NyBfdPD;}();
result["members"]["borderColorSwizzleFromImage"]=[&]() {
    json return_dMxTlFp=json({});
    return_dMxTlFp=[&]() {
    json return_kEIKlvH=json({});
    return serialize_uint32_t(name.borderColorSwizzleFromImage);}();return return_dMxTlFp;}();
return result;}

    VkPhysicalDeviceBorderColorSwizzleFeaturesEXT deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBorderColorSwizzleFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.borderColorSwizzle=deserialize_uint32_t(name["members"]["borderColorSwizzle"]);}();}();
[&]() {
[&]() {
result.borderColorSwizzleFromImage=deserialize_uint32_t(name["members"]["borderColorSwizzleFromImage"]);}();}();
return result;}

    json serialize_VkDeviceOrHostAddressKHR(VkDeviceOrHostAddressKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
result["members"]["hostAddress"]=[&]() {
    json return_fXsRiFp=json({});
    
        if (name.hostAddress==NULL){
            return_fXsRiFp["null"]=true;
            return return_fXsRiFp;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressKHR deserialize_VkDeviceOrHostAddressKHR(json name){
        auto result=VkDeviceOrHostAddressKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        result.hostAddress=NULL;
        }
    result.hostAddress=deserialize_void_p(name["members"]["hostAddress"]);
}();
return result;}

    json serialize_VkDeviceOrHostAddressConstKHR(VkDeviceOrHostAddressConstKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
result["members"]["hostAddress"]=[&]() {
    json return_irAFqyY=json({});
    
        if (name.hostAddress==NULL){
            return_irAFqyY["null"]=true;
            return return_irAFqyY;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressConstKHR deserialize_VkDeviceOrHostAddressConstKHR(json name){
        auto result=VkDeviceOrHostAddressConstKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
void* temp_evLSMHZ;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_evLSMHZ=NULL;
        }
    temp_evLSMHZ=deserialize_void_p(name["members"]["hostAddress"]);
}();result.hostAddress=temp_evLSMHZ;}();
return result;}

    json serialize_VkAccelerationStructureGeometryTrianglesDataKHR(VkAccelerationStructureGeometryTrianglesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexFormat"]=[&]() {
    json return_PrpRJNA=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["vertexData"]=[&]() {
    json return_UwHxkbR=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
result["members"]["vertexStride"]=[&]() {
    json return_YLPuBAr=json({});
    return_YLPuBAr=[&]() {
    json return_VZYgkKU=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_YLPuBAr;}();
result["members"]["maxVertex"]=[&]() {
    json return_SYqbJna=json({});
    return serialize_uint32_t(name.maxVertex);}();
result["members"]["indexType"]=[&]() {
    json return_cWCOLYT=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexData"]=[&]() {
    json return_jNLDYDY=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexData);}();
result["members"]["transformData"]=[&]() {
    json return_ayiJhXq=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.transformData);}();
return result;}

    VkAccelerationStructureGeometryTrianglesDataKHR deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryTrianglesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.maxVertex=deserialize_uint32_t(name["members"]["maxVertex"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexData"]);}();
[&]() {
result.transformData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["transformData"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryAabbsDataKHR(VkAccelerationStructureGeometryAabbsDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["data"]=[&]() {
    json return_lmUVUgX=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["stride"]=[&]() {
    json return_iTPAgtT=json({});
    return_iTPAgtT=[&]() {
    json return_eIZhHmN=json({});
    return serialize_uint64_t(name.stride);}();return return_iTPAgtT;}();
return result;}

    VkAccelerationStructureGeometryAabbsDataKHR deserialize_VkAccelerationStructureGeometryAabbsDataKHR(json name){
        auto result=VkAccelerationStructureGeometryAabbsDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryInstancesDataKHR(VkAccelerationStructureGeometryInstancesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["arrayOfPointers"]=[&]() {
    json return_EPSXieX=json({});
    return_EPSXieX=[&]() {
    json return_KeCtUPn=json({});
    return serialize_uint32_t(name.arrayOfPointers);}();return return_EPSXieX;}();
result["members"]["data"]=[&]() {
    json return_lmUVUgX=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
return result;}

    VkAccelerationStructureGeometryInstancesDataKHR deserialize_VkAccelerationStructureGeometryInstancesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryInstancesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.arrayOfPointers=deserialize_uint32_t(name["members"]["arrayOfPointers"]);}();}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryDataKHR(VkAccelerationStructureGeometryDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_qnLqsks=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_cQGKVLh=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(name.aabbs);}();
result["members"]["instances"]=[&]() {
    json return_ySqRyxv=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(name.instances);}();
return result;}

    VkAccelerationStructureGeometryDataKHR deserialize_VkAccelerationStructureGeometryDataKHR(json name){
        auto result=VkAccelerationStructureGeometryDataKHR();
    
[&]() {
result.triangles=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name["members"]["aabbs"]);}();
[&]() {
result.instances=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name["members"]["instances"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryKHR(VkAccelerationStructureGeometryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_IbXwkDd=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_DSzCoVX=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_jMtlADY=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkAccelerationStructureGeometryKHR deserialize_VkAccelerationStructureGeometryKHR(json name){
        auto result=VkAccelerationStructureGeometryKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkAccelerationStructureGeometryDataKHR(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildGeometryInfoKHR(VkAccelerationStructureBuildGeometryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_cVEdQsX=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["flags"]=[&]() {
    json return_LqmMyBK=json({});
    return serialize_VkBuildAccelerationStructureFlagsKHR(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_aeDkWQl=json({});
    return serialize_VkBuildAccelerationStructureModeKHR(name.mode);}();
result["members"]["srcAccelerationStructure"]=[&]() {
    json return_kFCottO=json({});
    return serialize_VkAccelerationStructureKHR(name.srcAccelerationStructure);}();
result["members"]["dstAccelerationStructure"]=[&]() {
    json return_yWxqSzy=json({});
    return serialize_VkAccelerationStructureKHR(name.dstAccelerationStructure);}();
result["members"]["geometryCount"]=[&]() {
    json return_bKVJmGZ=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_bSuhKop=json({});
    
        if (name.pGeometries==NULL){
            return_bSuhKop["null"]=true;
            return return_bSuhKop;
        }
        
        return_bSuhKop["members"]={};
        for(int bSuhKop=0; bSuhKop < name.geometryCount; bSuhKop++){
            json temp;
            temp=[&]() {
    json return_TJBrAZd=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.pGeometries[bSuhKop]);}();
            return_bSuhKop["members"][std::to_string(bSuhKop)].push_back(temp);
        }
        return return_bSuhKop;
        }();
result["members"]["ppGeometries"]=[&]() {
    json return_HxQbJaB=json({});
    
        if (name.ppGeometries==NULL){
            return_HxQbJaB["null"]=true;
            return return_HxQbJaB;
        }
        
        return_HxQbJaB["members"]={};
        for(int HxQbJaB=0; HxQbJaB < name.geometryCount; HxQbJaB++){
            json temp;
            temp=[&]() {
    json return_gIoVYzD=json({});
    
        if (name.ppGeometries[HxQbJaB]==NULL){
            return_gIoVYzD["null"]=true;
            return return_gIoVYzD;
        }
        
        return_gIoVYzD["members"]={};
        for(int gIoVYzD=0; gIoVYzD < 1; gIoVYzD++){
            json temp;
            temp=[&]() {
    json return_btKquNb=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.ppGeometries[HxQbJaB][gIoVYzD]);}();
            return_gIoVYzD["members"][std::to_string(gIoVYzD)].push_back(temp);
        }
        return return_gIoVYzD;
        }();
            return_HxQbJaB["members"][std::to_string(HxQbJaB)].push_back(temp);
        }
        return return_HxQbJaB;
        }();
result["members"]["scratchData"]=[&]() {
    json return_WENpoKK=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
return result;}

    VkAccelerationStructureBuildGeometryInfoKHR deserialize_VkAccelerationStructureBuildGeometryInfoKHR(json name){
        auto result=VkAccelerationStructureBuildGeometryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildAccelerationStructureModeKHR(name["members"]["mode"]);}();
[&]() {
result.srcAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["srcAccelerationStructure"]);}();
[&]() {
result.dstAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["dstAccelerationStructure"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkAccelerationStructureGeometryKHR* temp_FSpGxNz;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_FSpGxNz=NULL;
        }
    temp_FSpGxNz=(VkAccelerationStructureGeometryKHR*)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR));
        for (int zqsqrCM=0; zqsqrCM < result.geometryCount; zqsqrCM++){
            [&]() {
temp_FSpGxNz[zqsqrCM]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["pGeometries"]["members"][zqsqrCM]);}();;
        }
        }();result.pGeometries=temp_FSpGxNz;}();
[&]() {
VkAccelerationStructureGeometryKHR** temp_JorSzUd;[&]() {

        if (name["members"]["ppGeometries"].contains("null")){
        temp_JorSzUd=NULL;
        }
    temp_JorSzUd=(VkAccelerationStructureGeometryKHR**)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR*));
        for (int ZyPKUzF=0; ZyPKUzF < result.geometryCount; ZyPKUzF++){
            [&]() {

        if (name["members"]["ppGeometries"]["members"][ZyPKUzF].contains("null")){
        temp_JorSzUd[ZyPKUzF]=NULL;
        }
    temp_JorSzUd[ZyPKUzF]=(VkAccelerationStructureGeometryKHR*)malloc(1*sizeof(VkAccelerationStructureGeometryKHR));
        for (int vtdQSGh=0; vtdQSGh < 1; vtdQSGh++){
            [&]() {
temp_JorSzUd[ZyPKUzF][vtdQSGh]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["ppGeometries"]["members"][ZyPKUzF]["members"][vtdQSGh]);}();;
        }
        }();;
        }
        }();result.ppGeometries=temp_JorSzUd;}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildRangeInfoKHR(VkAccelerationStructureBuildRangeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["primitiveCount"]=[&]() {
    json return_oaxLDPJ=json({});
    return serialize_uint32_t(name.primitiveCount);}();
result["members"]["primitiveOffset"]=[&]() {
    json return_xaPlXjS=json({});
    return serialize_uint32_t(name.primitiveOffset);}();
result["members"]["firstVertex"]=[&]() {
    json return_HJTrdfm=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["transformOffset"]=[&]() {
    json return_dxYViPm=json({});
    return serialize_uint32_t(name.transformOffset);}();
return result;}

    VkAccelerationStructureBuildRangeInfoKHR deserialize_VkAccelerationStructureBuildRangeInfoKHR(json name){
        auto result=VkAccelerationStructureBuildRangeInfoKHR();
    
[&]() {
result.primitiveCount=deserialize_uint32_t(name["members"]["primitiveCount"]);}();
[&]() {
result.primitiveOffset=deserialize_uint32_t(name["members"]["primitiveOffset"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.transformOffset=deserialize_uint32_t(name["members"]["transformOffset"]);}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoKHR(VkAccelerationStructureCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_kMNfdJU=json({});
    return serialize_VkAccelerationStructureCreateFlagsKHR(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["type"]=[&]() {
    json return_cVEdQsX=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
return result;}

    VkAccelerationStructureCreateInfoKHR deserialize_VkAccelerationStructureCreateInfoKHR(json name){
        auto result=VkAccelerationStructureCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.createFlags=deserialize_VkAccelerationStructureCreateFlagsKHR(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkAabbPositionsKHR(VkAabbPositionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_gxHnFdT=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_lWYufFs=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_bpsNFQg=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_UjtcwuA=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_hoFJHNi=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_UCPUltl=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsKHR deserialize_VkAabbPositionsKHR(json name){
        auto result=VkAabbPositionsKHR();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkAabbPositionsNV(VkAabbPositionsNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_gxHnFdT=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_lWYufFs=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_bpsNFQg=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_UjtcwuA=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_hoFJHNi=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_UCPUltl=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsNV deserialize_VkAabbPositionsNV(json name){
        auto result=VkAabbPositionsNV();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkTransformMatrixKHR(VkTransformMatrixKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_FZZCgXw=json({});
    
        return_FZZCgXw["members"]={};
        for(int FZZCgXw=0; FZZCgXw < 3; FZZCgXw++){
            json temp;
            temp=[&]() {
    json return_DFsoMNJ=json({});
    
        return_DFsoMNJ["members"]={};
        for(int DFsoMNJ=0; DFsoMNJ < 4; DFsoMNJ++){
            json temp;
            temp=[&]() {
    json return_NSDYYgp=json({});
    return serialize_float(name.matrix[FZZCgXw][DFsoMNJ]);}();
            return_DFsoMNJ["members"][std::to_string(DFsoMNJ)].push_back(temp);
        }
        return return_DFsoMNJ;
        }();
            return_FZZCgXw["members"][std::to_string(FZZCgXw)].push_back(temp);
        }
        return return_FZZCgXw;
        }();
return result;}

    VkTransformMatrixKHR deserialize_VkTransformMatrixKHR(json name){
        auto result=VkTransformMatrixKHR();
    
[&]() {

        for (int IlDgkIe=0; IlDgkIe < 3; IlDgkIe++){
            [&]() {

        for (int THgpxXB=0; THgpxXB < 4; THgpxXB++){
            [&]() {
result.matrix[IlDgkIe][THgpxXB]=deserialize_float(name["members"]["matrix"]["members"][IlDgkIe]["members"][THgpxXB]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkTransformMatrixNV(VkTransformMatrixNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_FZZCgXw=json({});
    
        return_FZZCgXw["members"]={};
        for(int FZZCgXw=0; FZZCgXw < 3; FZZCgXw++){
            json temp;
            temp=[&]() {
    json return_DFsoMNJ=json({});
    
        return_DFsoMNJ["members"]={};
        for(int DFsoMNJ=0; DFsoMNJ < 4; DFsoMNJ++){
            json temp;
            temp=[&]() {
    json return_NSDYYgp=json({});
    return serialize_float(name.matrix[FZZCgXw][DFsoMNJ]);}();
            return_DFsoMNJ["members"][std::to_string(DFsoMNJ)].push_back(temp);
        }
        return return_DFsoMNJ;
        }();
            return_FZZCgXw["members"][std::to_string(FZZCgXw)].push_back(temp);
        }
        return return_FZZCgXw;
        }();
return result;}

    VkTransformMatrixNV deserialize_VkTransformMatrixNV(json name){
        auto result=VkTransformMatrixNV();
    
[&]() {

        for (int IlDgkIe=0; IlDgkIe < 3; IlDgkIe++){
            [&]() {

        for (int THgpxXB=0; THgpxXB < 4; THgpxXB++){
            [&]() {
result.matrix[IlDgkIe][THgpxXB]=deserialize_float(name["members"]["matrix"]["members"][IlDgkIe]["members"][THgpxXB]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureInstanceKHR(VkAccelerationStructureInstanceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_PfKHeQe=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_jVJvUMc=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_eaEYHJF=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_KxgBRrn=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_ltIoDJR=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_oBjKoLD=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceKHR deserialize_VkAccelerationStructureInstanceKHR(json name){
        auto result=VkAccelerationStructureInstanceKHR();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureInstanceNV(VkAccelerationStructureInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_PfKHeQe=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_jVJvUMc=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_eaEYHJF=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_KxgBRrn=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_ltIoDJR=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_oBjKoLD=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceNV deserialize_VkAccelerationStructureInstanceNV(json name){
        auto result=VkAccelerationStructureInstanceNV();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureDeviceAddressInfoKHR(VkAccelerationStructureDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_Kbuffsb=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureDeviceAddressInfoKHR deserialize_VkAccelerationStructureDeviceAddressInfoKHR(json name){
        auto result=VkAccelerationStructureDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkAccelerationStructureVersionInfoKHR(VkAccelerationStructureVersionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_GGeTZVn=json({});
    
        if (name.pVersionData==NULL){
            return_GGeTZVn["null"]=true;
            return return_GGeTZVn;
        }
        
        return_GGeTZVn["members"]={};
        for(int GGeTZVn=0; GGeTZVn < 2*VK_UUID_SIZE; GGeTZVn++){
            json temp;
            temp=[&]() {
    json return_hjuCTya=json({});
    return serialize_uint8_t(name.pVersionData[GGeTZVn]);}();
            return_GGeTZVn["members"][std::to_string(GGeTZVn)].push_back(temp);
        }
        return return_GGeTZVn;
        }();
return result;}

    VkAccelerationStructureVersionInfoKHR deserialize_VkAccelerationStructureVersionInfoKHR(json name){
        auto result=VkAccelerationStructureVersionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
uint8_t* temp_UUssyJJ;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_UUssyJJ=NULL;
        }
    temp_UUssyJJ=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int UcycriX=0; UcycriX < 2*VK_UUID_SIZE; UcycriX++){
            [&]() {
temp_UUssyJJ[UcycriX]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][UcycriX]);}();;
        }
        }();result.pVersionData=temp_UUssyJJ;}();
return result;}

    json serialize_VkCopyAccelerationStructureInfoKHR(VkCopyAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_UxSYhZu=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_jdDdRrk=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_tnzcQeE=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureInfoKHR deserialize_VkCopyAccelerationStructureInfoKHR(json name){
        auto result=VkCopyAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyAccelerationStructureToMemoryInfoKHR(VkCopyAccelerationStructureToMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_UxSYhZu=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_gGOVJcV=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_tnzcQeE=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureToMemoryInfoKHR deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(json name){
        auto result=VkCopyAccelerationStructureToMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToAccelerationStructureInfoKHR(VkCopyMemoryToAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_kHUjpnP=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_jdDdRrk=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_tnzcQeE=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyMemoryToAccelerationStructureInfoKHR deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(json name){
        auto result=VkCopyMemoryToAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(VkRayTracingPipelineInterfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPipelineRayPayloadSize"]=[&]() {
    json return_DWFUAiS=json({});
    return serialize_uint32_t(name.maxPipelineRayPayloadSize);}();
result["members"]["maxPipelineRayHitAttributeSize"]=[&]() {
    json return_tsDKRTq=json({});
    return serialize_uint32_t(name.maxPipelineRayHitAttributeSize);}();
return result;}

    VkRayTracingPipelineInterfaceCreateInfoKHR deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineInterfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.maxPipelineRayPayloadSize=deserialize_uint32_t(name["members"]["maxPipelineRayPayloadSize"]);}();
[&]() {
result.maxPipelineRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxPipelineRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPipelineLibraryCreateInfoKHR(VkPipelineLibraryCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["libraryCount"]=[&]() {
    json return_hXUQdsg=json({});
    return serialize_uint32_t(name.libraryCount);}();
result["members"]["pLibraries"]=[&]() {
    json return_BKcetlg=json({});
    
        if (name.pLibraries==NULL){
            return_BKcetlg["null"]=true;
            return return_BKcetlg;
        }
        
        return_BKcetlg["members"]={};
        for(int BKcetlg=0; BKcetlg < name.libraryCount; BKcetlg++){
            json temp;
            temp=[&]() {
    json return_AlGazBv=json({});
    return serialize_VkPipeline(name.pLibraries[BKcetlg]);}();
            return_BKcetlg["members"][std::to_string(BKcetlg)].push_back(temp);
        }
        return return_BKcetlg;
        }();
return result;}

    VkPipelineLibraryCreateInfoKHR deserialize_VkPipelineLibraryCreateInfoKHR(json name){
        auto result=VkPipelineLibraryCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.libraryCount=deserialize_uint32_t(name["members"]["libraryCount"]);}();
[&]() {
VkPipeline* temp_vVdwbft;[&]() {

        if (name["members"]["pLibraries"].contains("null")){
        temp_vVdwbft=NULL;
        }
    temp_vVdwbft=(VkPipeline*)malloc(result.libraryCount*sizeof(VkPipeline));
        for (int OLyaDur=0; OLyaDur < result.libraryCount; OLyaDur++){
            [&]() {
temp_vVdwbft[OLyaDur]=deserialize_VkPipeline(name["members"]["pLibraries"]["members"][OLyaDur]);}();;
        }
        }();result.pLibraries=temp_vVdwbft;}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState"]=[&]() {
    json return_YiRdsaB=json({});
    return_YiRdsaB=[&]() {
    json return_SBQQFpo=json({});
    return serialize_uint32_t(name.extendedDynamicState);}();return return_YiRdsaB;}();
return result;}

    VkPhysicalDeviceExtendedDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState=deserialize_uint32_t(name["members"]["extendedDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState2"]=[&]() {
    json return_wRHSxfF=json({});
    return_wRHSxfF=[&]() {
    json return_nKZtQqU=json({});
    return serialize_uint32_t(name.extendedDynamicState2);}();return return_wRHSxfF;}();
result["members"]["extendedDynamicState2LogicOp"]=[&]() {
    json return_ZUzdnwz=json({});
    return_ZUzdnwz=[&]() {
    json return_gRalinK=json({});
    return serialize_uint32_t(name.extendedDynamicState2LogicOp);}();return return_ZUzdnwz;}();
result["members"]["extendedDynamicState2PatchControlPoints"]=[&]() {
    json return_cyLYjHm=json({});
    return_cyLYjHm=[&]() {
    json return_QexEqqI=json({});
    return serialize_uint32_t(name.extendedDynamicState2PatchControlPoints);}();return return_cyLYjHm;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState2FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState2=deserialize_uint32_t(name["members"]["extendedDynamicState2"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2LogicOp=deserialize_uint32_t(name["members"]["extendedDynamicState2LogicOp"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2PatchControlPoints=deserialize_uint32_t(name["members"]["extendedDynamicState2PatchControlPoints"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState3TessellationDomainOrigin"]=[&]() {
    json return_vHGTPXT=json({});
    return_vHGTPXT=[&]() {
    json return_RGkCYLN=json({});
    return serialize_uint32_t(name.extendedDynamicState3TessellationDomainOrigin);}();return return_vHGTPXT;}();
result["members"]["extendedDynamicState3DepthClampEnable"]=[&]() {
    json return_RczkzFK=json({});
    return_RczkzFK=[&]() {
    json return_Oqaywzc=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClampEnable);}();return return_RczkzFK;}();
result["members"]["extendedDynamicState3PolygonMode"]=[&]() {
    json return_xcRBAcZ=json({});
    return_xcRBAcZ=[&]() {
    json return_IQQzAkB=json({});
    return serialize_uint32_t(name.extendedDynamicState3PolygonMode);}();return return_xcRBAcZ;}();
result["members"]["extendedDynamicState3RasterizationSamples"]=[&]() {
    json return_UpeRNFi=json({});
    return_UpeRNFi=[&]() {
    json return_DUfpJor=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationSamples);}();return return_UpeRNFi;}();
result["members"]["extendedDynamicState3SampleMask"]=[&]() {
    json return_pZepExF=json({});
    return_pZepExF=[&]() {
    json return_tdrQNUW=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleMask);}();return return_pZepExF;}();
result["members"]["extendedDynamicState3AlphaToCoverageEnable"]=[&]() {
    json return_shuwySq=json({});
    return_shuwySq=[&]() {
    json return_GeBQkXs=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToCoverageEnable);}();return return_shuwySq;}();
result["members"]["extendedDynamicState3AlphaToOneEnable"]=[&]() {
    json return_JKHmQyO=json({});
    return_JKHmQyO=[&]() {
    json return_rFmvxzr=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToOneEnable);}();return return_JKHmQyO;}();
result["members"]["extendedDynamicState3LogicOpEnable"]=[&]() {
    json return_SKBvKJh=json({});
    return_SKBvKJh=[&]() {
    json return_xFvZPNw=json({});
    return serialize_uint32_t(name.extendedDynamicState3LogicOpEnable);}();return return_SKBvKJh;}();
result["members"]["extendedDynamicState3ColorBlendEnable"]=[&]() {
    json return_ybYtOgh=json({});
    return_ybYtOgh=[&]() {
    json return_gIvyMAl=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEnable);}();return return_ybYtOgh;}();
result["members"]["extendedDynamicState3ColorBlendEquation"]=[&]() {
    json return_EnMGxeA=json({});
    return_EnMGxeA=[&]() {
    json return_vrCqrCt=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEquation);}();return return_EnMGxeA;}();
result["members"]["extendedDynamicState3ColorWriteMask"]=[&]() {
    json return_VmZKqRh=json({});
    return_VmZKqRh=[&]() {
    json return_VaxQVnf=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorWriteMask);}();return return_VmZKqRh;}();
result["members"]["extendedDynamicState3RasterizationStream"]=[&]() {
    json return_FwWRpdz=json({});
    return_FwWRpdz=[&]() {
    json return_BWclFrH=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationStream);}();return return_FwWRpdz;}();
result["members"]["extendedDynamicState3ConservativeRasterizationMode"]=[&]() {
    json return_diasFxp=json({});
    return_diasFxp=[&]() {
    json return_DvaXxMv=json({});
    return serialize_uint32_t(name.extendedDynamicState3ConservativeRasterizationMode);}();return return_diasFxp;}();
result["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]=[&]() {
    json return_BRwstQG=json({});
    return_BRwstQG=[&]() {
    json return_LNixilh=json({});
    return serialize_uint32_t(name.extendedDynamicState3ExtraPrimitiveOverestimationSize);}();return return_BRwstQG;}();
result["members"]["extendedDynamicState3DepthClipEnable"]=[&]() {
    json return_GnSYIAS=json({});
    return_GnSYIAS=[&]() {
    json return_xUkFZwf=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipEnable);}();return return_GnSYIAS;}();
result["members"]["extendedDynamicState3SampleLocationsEnable"]=[&]() {
    json return_TwDRYpC=json({});
    return_TwDRYpC=[&]() {
    json return_GuWViPh=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleLocationsEnable);}();return return_TwDRYpC;}();
result["members"]["extendedDynamicState3ColorBlendAdvanced"]=[&]() {
    json return_tWWRNnx=json({});
    return_tWWRNnx=[&]() {
    json return_BqTkUUB=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendAdvanced);}();return return_tWWRNnx;}();
result["members"]["extendedDynamicState3ProvokingVertexMode"]=[&]() {
    json return_YKEOlaO=json({});
    return_YKEOlaO=[&]() {
    json return_QShURwu=json({});
    return serialize_uint32_t(name.extendedDynamicState3ProvokingVertexMode);}();return return_YKEOlaO;}();
result["members"]["extendedDynamicState3LineRasterizationMode"]=[&]() {
    json return_aMsPrRA=json({});
    return_aMsPrRA=[&]() {
    json return_JghQlZB=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineRasterizationMode);}();return return_aMsPrRA;}();
result["members"]["extendedDynamicState3LineStippleEnable"]=[&]() {
    json return_GmSxyDr=json({});
    return_GmSxyDr=[&]() {
    json return_BTXJvKa=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineStippleEnable);}();return return_GmSxyDr;}();
result["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]=[&]() {
    json return_OKLHuNz=json({});
    return_OKLHuNz=[&]() {
    json return_NHmWTth=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipNegativeOneToOne);}();return return_OKLHuNz;}();
result["members"]["extendedDynamicState3ViewportWScalingEnable"]=[&]() {
    json return_mfFzuaf=json({});
    return_mfFzuaf=[&]() {
    json return_ccqMEZy=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportWScalingEnable);}();return return_mfFzuaf;}();
result["members"]["extendedDynamicState3ViewportSwizzle"]=[&]() {
    json return_DFAxVcT=json({});
    return_DFAxVcT=[&]() {
    json return_XQbGxEI=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportSwizzle);}();return return_DFAxVcT;}();
result["members"]["extendedDynamicState3CoverageToColorEnable"]=[&]() {
    json return_YIVIwxo=json({});
    return_YIVIwxo=[&]() {
    json return_fngbAPu=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorEnable);}();return return_YIVIwxo;}();
result["members"]["extendedDynamicState3CoverageToColorLocation"]=[&]() {
    json return_vWvjFtJ=json({});
    return_vWvjFtJ=[&]() {
    json return_AsMwQak=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorLocation);}();return return_vWvjFtJ;}();
result["members"]["extendedDynamicState3CoverageModulationMode"]=[&]() {
    json return_dAjqomR=json({});
    return_dAjqomR=[&]() {
    json return_wLEtIOf=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationMode);}();return return_dAjqomR;}();
result["members"]["extendedDynamicState3CoverageModulationTableEnable"]=[&]() {
    json return_mebypTl=json({});
    return_mebypTl=[&]() {
    json return_OiPPfxF=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTableEnable);}();return return_mebypTl;}();
result["members"]["extendedDynamicState3CoverageModulationTable"]=[&]() {
    json return_kiCwBIU=json({});
    return_kiCwBIU=[&]() {
    json return_WlpQZNO=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTable);}();return return_kiCwBIU;}();
result["members"]["extendedDynamicState3CoverageReductionMode"]=[&]() {
    json return_HFmEJcx=json({});
    return_HFmEJcx=[&]() {
    json return_ClyzVWg=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageReductionMode);}();return return_HFmEJcx;}();
result["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]=[&]() {
    json return_PrZEfMH=json({});
    return_PrZEfMH=[&]() {
    json return_WmiPBNb=json({});
    return serialize_uint32_t(name.extendedDynamicState3RepresentativeFragmentTestEnable);}();return return_PrZEfMH;}();
result["members"]["extendedDynamicState3ShadingRateImageEnable"]=[&]() {
    json return_JXDetMQ=json({});
    return_JXDetMQ=[&]() {
    json return_ZbvgZVe=json({});
    return serialize_uint32_t(name.extendedDynamicState3ShadingRateImageEnable);}();return return_JXDetMQ;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState3TessellationDomainOrigin=deserialize_uint32_t(name["members"]["extendedDynamicState3TessellationDomainOrigin"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClampEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClampEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3PolygonMode=deserialize_uint32_t(name["members"]["extendedDynamicState3PolygonMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationSamples=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationSamples"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleMask=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToCoverageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToOneEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToOneEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LogicOpEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LogicOpEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEquation=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEquation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorWriteMask=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorWriteMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationStream=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationStream"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ConservativeRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ConservativeRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ExtraPrimitiveOverestimationSize=deserialize_uint32_t(name["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleLocationsEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleLocationsEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendAdvanced=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendAdvanced"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ProvokingVertexMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ProvokingVertexMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3LineRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineStippleEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LineStippleEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipNegativeOneToOne=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportWScalingEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportWScalingEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportSwizzle=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportSwizzle"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorLocation=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorLocation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTableEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTableEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageReductionMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageReductionMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RepresentativeFragmentTestEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ShadingRateImageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ShadingRateImageEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicPrimitiveTopologyUnrestricted"]=[&]() {
    json return_JoBvkMl=json({});
    return_JoBvkMl=[&]() {
    json return_dSNRlhz=json({});
    return serialize_uint32_t(name.dynamicPrimitiveTopologyUnrestricted);}();return return_JoBvkMl;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3PropertiesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicPrimitiveTopologyUnrestricted=deserialize_uint32_t(name["members"]["dynamicPrimitiveTopologyUnrestricted"]);}();}();
return result;}

    json serialize_VkColorBlendEquationEXT(VkColorBlendEquationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_KnUlHmO=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_pEVmILP=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_YaZmRgq=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_xLwFYwx=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_SfBfPls=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_NQHVtMu=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
return result;}

    VkColorBlendEquationEXT deserialize_VkColorBlendEquationEXT(json name){
        auto result=VkColorBlendEquationEXT();
    
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
return result;}

    json serialize_VkColorBlendAdvancedEXT(VkColorBlendAdvancedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["advancedBlendOp"]=[&]() {
    json return_MMFRume=json({});
    return serialize_VkBlendOp(name.advancedBlendOp);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_moluBax=json({});
    return_moluBax=[&]() {
    json return_JbchZOg=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_moluBax;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_dDHrKbf=json({});
    return_dDHrKbf=[&]() {
    json return_IxIdybe=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_dDHrKbf;}();
result["members"]["blendOverlap"]=[&]() {
    json return_YHlAPQm=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
result["members"]["clampResults"]=[&]() {
    json return_hblVSXL=json({});
    return_hblVSXL=[&]() {
    json return_xHuZJKO=json({});
    return serialize_uint32_t(name.clampResults);}();return return_hblVSXL;}();
return result;}

    VkColorBlendAdvancedEXT deserialize_VkColorBlendAdvancedEXT(json name){
        auto result=VkColorBlendAdvancedEXT();
    
[&]() {
result.advancedBlendOp=deserialize_VkBlendOp(name["members"]["advancedBlendOp"]);}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
[&]() {
[&]() {
result.clampResults=deserialize_uint32_t(name["members"]["clampResults"]);}();}();
return result;}

    json serialize_VkRenderPassTransformBeginInfoQCOM(VkRenderPassTransformBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_lkfZFPN=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkRenderPassTransformBeginInfoQCOM deserialize_VkRenderPassTransformBeginInfoQCOM(json name){
        auto result=VkRenderPassTransformBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCopyCommandTransformInfoQCOM(VkCopyCommandTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_lkfZFPN=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkCopyCommandTransformInfoQCOM deserialize_VkCopyCommandTransformInfoQCOM(json name){
        auto result=VkCopyCommandTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkCommandBufferInheritanceRenderPassTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_lkfZFPN=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["renderArea"]=[&]() {
    json return_WGwTgag=json({});
    return serialize_VkRect2D(name.renderArea);}();
return result;}

    VkCommandBufferInheritanceRenderPassTransformInfoQCOM deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(json name){
        auto result=VkCommandBufferInheritanceRenderPassTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
return result;}

    json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkPhysicalDeviceDiagnosticsConfigFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["diagnosticsConfig"]=[&]() {
    json return_hHrCKwL=json({});
    return_hHrCKwL=[&]() {
    json return_zMyrorh=json({});
    return serialize_uint32_t(name.diagnosticsConfig);}();return return_hHrCKwL;}();
return result;}

    VkPhysicalDeviceDiagnosticsConfigFeaturesNV deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(json name){
        auto result=VkPhysicalDeviceDiagnosticsConfigFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.diagnosticsConfig=deserialize_uint32_t(name["members"]["diagnosticsConfig"]);}();}();
return result;}

    json serialize_VkDeviceDiagnosticsConfigCreateInfoNV(VkDeviceDiagnosticsConfigCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GrRCeiA=json({});
    return serialize_VkDeviceDiagnosticsConfigFlagsNV(name.flags);}();
return result;}

    VkDeviceDiagnosticsConfigCreateInfoNV deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(json name){
        auto result=VkDeviceDiagnosticsConfigCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkDeviceDiagnosticsConfigFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_INhPoHA=json({});
    return_INhPoHA=[&]() {
    json return_OyDmeUn=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_INhPoHA;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_INhPoHA=json({});
    return_INhPoHA=[&]() {
    json return_OyDmeUn=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_INhPoHA;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupUniformControlFlow"]=[&]() {
    json return_PkvppKG=json({});
    return_PkvppKG=[&]() {
    json return_lVeNuGP=json({});
    return serialize_uint32_t(name.shaderSubgroupUniformControlFlow);}();return return_PkvppKG;}();
return result;}

    VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupUniformControlFlow=deserialize_uint32_t(name["members"]["shaderSubgroupUniformControlFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2FeaturesEXT(VkPhysicalDeviceRobustness2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustBufferAccess2"]=[&]() {
    json return_FkymGJr=json({});
    return_FkymGJr=[&]() {
    json return_vXeYfGJ=json({});
    return serialize_uint32_t(name.robustBufferAccess2);}();return return_FkymGJr;}();
result["members"]["robustImageAccess2"]=[&]() {
    json return_dNbFFbh=json({});
    return_dNbFFbh=[&]() {
    json return_ZLBEEvp=json({});
    return serialize_uint32_t(name.robustImageAccess2);}();return return_dNbFFbh;}();
result["members"]["nullDescriptor"]=[&]() {
    json return_HXncLgD=json({});
    return_HXncLgD=[&]() {
    json return_yXEJBhN=json({});
    return serialize_uint32_t(name.nullDescriptor);}();return return_HXncLgD;}();
return result;}

    VkPhysicalDeviceRobustness2FeaturesEXT deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustBufferAccess2=deserialize_uint32_t(name["members"]["robustBufferAccess2"]);}();}();
[&]() {
[&]() {
result.robustImageAccess2=deserialize_uint32_t(name["members"]["robustImageAccess2"]);}();}();
[&]() {
[&]() {
result.nullDescriptor=deserialize_uint32_t(name["members"]["nullDescriptor"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2PropertiesEXT(VkPhysicalDeviceRobustness2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustStorageBufferAccessSizeAlignment"]=[&]() {
    json return_ESSpTdW=json({});
    return_ESSpTdW=[&]() {
    json return_KoJWRJk=json({});
    return serialize_uint64_t(name.robustStorageBufferAccessSizeAlignment);}();return return_ESSpTdW;}();
result["members"]["robustUniformBufferAccessSizeAlignment"]=[&]() {
    json return_aajsvkd=json({});
    return_aajsvkd=[&]() {
    json return_nNpsiuU=json({});
    return serialize_uint64_t(name.robustUniformBufferAccessSizeAlignment);}();return return_aajsvkd;}();
return result;}

    VkPhysicalDeviceRobustness2PropertiesEXT deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustStorageBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustStorageBufferAccessSizeAlignment"]);}();}();
[&]() {
[&]() {
result.robustUniformBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustUniformBufferAccessSizeAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeatures(VkPhysicalDeviceImageRobustnessFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_nvwwGfm=json({});
    return_nvwwGfm=[&]() {
    json return_fTmmZwn=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_nvwwGfm;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeatures deserialize_VkPhysicalDeviceImageRobustnessFeatures(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(VkPhysicalDeviceImageRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_nvwwGfm=json({});
    return_nvwwGfm=[&]() {
    json return_fTmmZwn=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_nvwwGfm;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeaturesEXT deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["workgroupMemoryExplicitLayout"]=[&]() {
    json return_LtQPgom=json({});
    return_LtQPgom=[&]() {
    json return_oqlZwZT=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout);}();return return_LtQPgom;}();
result["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]=[&]() {
    json return_GPerSEK=json({});
    return_GPerSEK=[&]() {
    json return_subZfdF=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayoutScalarBlockLayout);}();return return_GPerSEK;}();
result["members"]["workgroupMemoryExplicitLayout8BitAccess"]=[&]() {
    json return_AiAnRcZ=json({});
    return_AiAnRcZ=[&]() {
    json return_tiyIpTc=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout8BitAccess);}();return return_AiAnRcZ;}();
result["members"]["workgroupMemoryExplicitLayout16BitAccess"]=[&]() {
    json return_DfUdrev=json({});
    return_DfUdrev=[&]() {
    json return_SYTEKHq=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout16BitAccess);}();return return_DfUdrev;}();
return result;}

    VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayoutScalarBlockLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout8BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout8BitAccess"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout16BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout16BitAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDevice4444FormatsFeaturesEXT(VkPhysicalDevice4444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatA4R4G4B4"]=[&]() {
    json return_ePTgcGv=json({});
    return_ePTgcGv=[&]() {
    json return_BRnrAti=json({});
    return serialize_uint32_t(name.formatA4R4G4B4);}();return return_ePTgcGv;}();
result["members"]["formatA4B4G4R4"]=[&]() {
    json return_HBZuqFj=json({});
    return_HBZuqFj=[&]() {
    json return_EIOvwRW=json({});
    return serialize_uint32_t(name.formatA4B4G4R4);}();return return_HBZuqFj;}();
return result;}

    VkPhysicalDevice4444FormatsFeaturesEXT deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDevice4444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatA4R4G4B4=deserialize_uint32_t(name["members"]["formatA4R4G4B4"]);}();}();
[&]() {
[&]() {
result.formatA4B4G4R4=deserialize_uint32_t(name["members"]["formatA4B4G4R4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassShading"]=[&]() {
    json return_UFeLmrg=json({});
    return_UFeLmrg=[&]() {
    json return_mQSJheV=json({});
    return serialize_uint32_t(name.subpassShading);}();return return_UFeLmrg;}();
return result;}

    VkPhysicalDeviceSubpassShadingFeaturesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassShading=deserialize_uint32_t(name["members"]["subpassShading"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["clustercullingShader"]=[&]() {
    json return_tALAhRV=json({});
    return_tALAhRV=[&]() {
    json return_gPnnZJh=json({});
    return serialize_uint32_t(name.clustercullingShader);}();return return_tALAhRV;}();
result["members"]["multiviewClusterCullingShader"]=[&]() {
    json return_VczvFzA=json({});
    return_VczvFzA=[&]() {
    json return_uDoJPkj=json({});
    return serialize_uint32_t(name.multiviewClusterCullingShader);}();return return_VczvFzA;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.clustercullingShader=deserialize_uint32_t(name["members"]["clustercullingShader"]);}();}();
[&]() {
[&]() {
result.multiviewClusterCullingShader=deserialize_uint32_t(name["members"]["multiviewClusterCullingShader"]);}();}();
return result;}

    json serialize_VkBufferCopy2(VkBufferCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_ceNoGnZ=json({});
    return_ceNoGnZ=[&]() {
    json return_fLeQKKS=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_ceNoGnZ;}();
result["members"]["dstOffset"]=[&]() {
    json return_QyOyycH=json({});
    return_QyOyycH=[&]() {
    json return_oAGIrKv=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_QyOyycH;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkBufferCopy2 deserialize_VkBufferCopy2(json name){
        auto result=VkBufferCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferCopy2KHR(VkBufferCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_ceNoGnZ=json({});
    return_ceNoGnZ=[&]() {
    json return_fLeQKKS=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_ceNoGnZ;}();
result["members"]["dstOffset"]=[&]() {
    json return_QyOyycH=json({});
    return_QyOyycH=[&]() {
    json return_oAGIrKv=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_QyOyycH;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkBufferCopy2KHR deserialize_VkBufferCopy2KHR(json name){
        auto result=VkBufferCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageCopy2(VkImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_neTwZQL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_YsFjbpi=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2 deserialize_VkImageCopy2(json name){
        auto result=VkImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageCopy2KHR(VkImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_neTwZQL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_YsFjbpi=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2KHR deserialize_VkImageCopy2KHR(json name){
        auto result=VkImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit2(VkImageBlit2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_lnMNFYk=json({});
    
        return_lnMNFYk["members"]={};
        for(int lnMNFYk=0; lnMNFYk < 2; lnMNFYk++){
            json temp;
            temp=[&]() {
    json return_sEflJEU=json({});
    return serialize_VkOffset3D(name.srcOffsets[lnMNFYk]);}();
            return_lnMNFYk["members"][std::to_string(lnMNFYk)].push_back(temp);
        }
        return return_lnMNFYk;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_cDydwTX=json({});
    
        return_cDydwTX["members"]={};
        for(int cDydwTX=0; cDydwTX < 2; cDydwTX++){
            json temp;
            temp=[&]() {
    json return_GhxsNbj=json({});
    return serialize_VkOffset3D(name.dstOffsets[cDydwTX]);}();
            return_cDydwTX["members"][std::to_string(cDydwTX)].push_back(temp);
        }
        return return_cDydwTX;
        }();
return result;}

    VkImageBlit2 deserialize_VkImageBlit2(json name){
        auto result=VkImageBlit2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int vqLwYtU=0; vqLwYtU < 2; vqLwYtU++){
            [&]() {
result.srcOffsets[vqLwYtU]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][vqLwYtU]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int kiiKvyU=0; kiiKvyU < 2; kiiKvyU++){
            [&]() {
result.dstOffsets[kiiKvyU]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][kiiKvyU]);}();;
        }
        }();
return result;}

    json serialize_VkImageBlit2KHR(VkImageBlit2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_lnMNFYk=json({});
    
        return_lnMNFYk["members"]={};
        for(int lnMNFYk=0; lnMNFYk < 2; lnMNFYk++){
            json temp;
            temp=[&]() {
    json return_sEflJEU=json({});
    return serialize_VkOffset3D(name.srcOffsets[lnMNFYk]);}();
            return_lnMNFYk["members"][std::to_string(lnMNFYk)].push_back(temp);
        }
        return return_lnMNFYk;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_cDydwTX=json({});
    
        return_cDydwTX["members"]={};
        for(int cDydwTX=0; cDydwTX < 2; cDydwTX++){
            json temp;
            temp=[&]() {
    json return_GhxsNbj=json({});
    return serialize_VkOffset3D(name.dstOffsets[cDydwTX]);}();
            return_cDydwTX["members"][std::to_string(cDydwTX)].push_back(temp);
        }
        return return_cDydwTX;
        }();
return result;}

    VkImageBlit2KHR deserialize_VkImageBlit2KHR(json name){
        auto result=VkImageBlit2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int vqLwYtU=0; vqLwYtU < 2; vqLwYtU++){
            [&]() {
result.srcOffsets[vqLwYtU]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][vqLwYtU]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int kiiKvyU=0; kiiKvyU < 2; kiiKvyU++){
            [&]() {
result.dstOffsets[kiiKvyU]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][kiiKvyU]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy2(VkBufferImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_MZlGkCk=json({});
    return_MZlGkCk=[&]() {
    json return_QPXercI=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_MZlGkCk;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_IKCIkyk=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_litXJQl=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_OusFfMz=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_MUCANiu=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WESMOjr=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2 deserialize_VkBufferImageCopy2(json name){
        auto result=VkBufferImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkBufferImageCopy2KHR(VkBufferImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_MZlGkCk=json({});
    return_MZlGkCk=[&]() {
    json return_QPXercI=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_MZlGkCk;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_IKCIkyk=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_litXJQl=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_OusFfMz=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_MUCANiu=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WESMOjr=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2KHR deserialize_VkBufferImageCopy2KHR(json name){
        auto result=VkBufferImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve2(VkImageResolve2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_neTwZQL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_YsFjbpi=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2 deserialize_VkImageResolve2(json name){
        auto result=VkImageResolve2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageResolve2KHR(VkImageResolve2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_CjRMmOs=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_neTwZQL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_lFclBfj=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_YsFjbpi=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AlWgNGU=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2KHR deserialize_VkImageResolve2KHR(json name){
        auto result=VkImageResolve2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkCopyBufferInfo2(VkCopyBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_ftaWhqw=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_ufQXOYa=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_WNEzRqb=json({});
    
        if (name.pRegions==NULL){
            return_WNEzRqb["null"]=true;
            return return_WNEzRqb;
        }
        
        return_WNEzRqb["members"]={};
        for(int WNEzRqb=0; WNEzRqb < name.regionCount; WNEzRqb++){
            json temp;
            temp=[&]() {
    json return_mTtVOwq=json({});
    return serialize_VkBufferCopy2(name.pRegions[WNEzRqb]);}();
            return_WNEzRqb["members"][std::to_string(WNEzRqb)].push_back(temp);
        }
        return return_WNEzRqb;
        }();
return result;}

    VkCopyBufferInfo2 deserialize_VkCopyBufferInfo2(json name){
        auto result=VkCopyBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_ajLcDmX;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_ajLcDmX=NULL;
        }
    temp_ajLcDmX=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int lyTVrwS=0; lyTVrwS < result.regionCount; lyTVrwS++){
            [&]() {
temp_ajLcDmX[lyTVrwS]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][lyTVrwS]);}();;
        }
        }();result.pRegions=temp_ajLcDmX;}();
return result;}

    json serialize_VkCopyBufferInfo2KHR(VkCopyBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_ftaWhqw=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_ufQXOYa=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_WNEzRqb=json({});
    
        if (name.pRegions==NULL){
            return_WNEzRqb["null"]=true;
            return return_WNEzRqb;
        }
        
        return_WNEzRqb["members"]={};
        for(int WNEzRqb=0; WNEzRqb < name.regionCount; WNEzRqb++){
            json temp;
            temp=[&]() {
    json return_mTtVOwq=json({});
    return serialize_VkBufferCopy2(name.pRegions[WNEzRqb]);}();
            return_WNEzRqb["members"][std::to_string(WNEzRqb)].push_back(temp);
        }
        return return_WNEzRqb;
        }();
return result;}

    VkCopyBufferInfo2KHR deserialize_VkCopyBufferInfo2KHR(json name){
        auto result=VkCopyBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_ajLcDmX;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_ajLcDmX=NULL;
        }
    temp_ajLcDmX=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int lyTVrwS=0; lyTVrwS < result.regionCount; lyTVrwS++){
            [&]() {
temp_ajLcDmX[lyTVrwS]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][lyTVrwS]);}();;
        }
        }();result.pRegions=temp_ajLcDmX;}();
return result;}

    json serialize_VkCopyImageInfo2(VkCopyImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_UvLyNNY=json({});
    
        if (name.pRegions==NULL){
            return_UvLyNNY["null"]=true;
            return return_UvLyNNY;
        }
        
        return_UvLyNNY["members"]={};
        for(int UvLyNNY=0; UvLyNNY < name.regionCount; UvLyNNY++){
            json temp;
            temp=[&]() {
    json return_NSmsBUc=json({});
    return serialize_VkImageCopy2(name.pRegions[UvLyNNY]);}();
            return_UvLyNNY["members"][std::to_string(UvLyNNY)].push_back(temp);
        }
        return return_UvLyNNY;
        }();
return result;}

    VkCopyImageInfo2 deserialize_VkCopyImageInfo2(json name){
        auto result=VkCopyImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_lAWrQXM;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_lAWrQXM=NULL;
        }
    temp_lAWrQXM=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int xDybKns=0; xDybKns < result.regionCount; xDybKns++){
            [&]() {
temp_lAWrQXM[xDybKns]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][xDybKns]);}();;
        }
        }();result.pRegions=temp_lAWrQXM;}();
return result;}

    json serialize_VkCopyImageInfo2KHR(VkCopyImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_UvLyNNY=json({});
    
        if (name.pRegions==NULL){
            return_UvLyNNY["null"]=true;
            return return_UvLyNNY;
        }
        
        return_UvLyNNY["members"]={};
        for(int UvLyNNY=0; UvLyNNY < name.regionCount; UvLyNNY++){
            json temp;
            temp=[&]() {
    json return_NSmsBUc=json({});
    return serialize_VkImageCopy2(name.pRegions[UvLyNNY]);}();
            return_UvLyNNY["members"][std::to_string(UvLyNNY)].push_back(temp);
        }
        return return_UvLyNNY;
        }();
return result;}

    VkCopyImageInfo2KHR deserialize_VkCopyImageInfo2KHR(json name){
        auto result=VkCopyImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_lAWrQXM;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_lAWrQXM=NULL;
        }
    temp_lAWrQXM=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int xDybKns=0; xDybKns < result.regionCount; xDybKns++){
            [&]() {
temp_lAWrQXM[xDybKns]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][xDybKns]);}();;
        }
        }();result.pRegions=temp_lAWrQXM;}();
return result;}

    json serialize_VkBlitImageInfo2(VkBlitImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_klTlonz=json({});
    
        if (name.pRegions==NULL){
            return_klTlonz["null"]=true;
            return return_klTlonz;
        }
        
        return_klTlonz["members"]={};
        for(int klTlonz=0; klTlonz < name.regionCount; klTlonz++){
            json temp;
            temp=[&]() {
    json return_xyEVYRm=json({});
    return serialize_VkImageBlit2(name.pRegions[klTlonz]);}();
            return_klTlonz["members"][std::to_string(klTlonz)].push_back(temp);
        }
        return return_klTlonz;
        }();
result["members"]["filter"]=[&]() {
    json return_gEVzYWH=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2 deserialize_VkBlitImageInfo2(json name){
        auto result=VkBlitImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_RuAxpqf;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_RuAxpqf=NULL;
        }
    temp_RuAxpqf=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int qDKcyfg=0; qDKcyfg < result.regionCount; qDKcyfg++){
            [&]() {
temp_RuAxpqf[qDKcyfg]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][qDKcyfg]);}();;
        }
        }();result.pRegions=temp_RuAxpqf;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkBlitImageInfo2KHR(VkBlitImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_klTlonz=json({});
    
        if (name.pRegions==NULL){
            return_klTlonz["null"]=true;
            return return_klTlonz;
        }
        
        return_klTlonz["members"]={};
        for(int klTlonz=0; klTlonz < name.regionCount; klTlonz++){
            json temp;
            temp=[&]() {
    json return_xyEVYRm=json({});
    return serialize_VkImageBlit2(name.pRegions[klTlonz]);}();
            return_klTlonz["members"][std::to_string(klTlonz)].push_back(temp);
        }
        return return_klTlonz;
        }();
result["members"]["filter"]=[&]() {
    json return_gEVzYWH=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2KHR deserialize_VkBlitImageInfo2KHR(json name){
        auto result=VkBlitImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_RuAxpqf;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_RuAxpqf=NULL;
        }
    temp_RuAxpqf=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int qDKcyfg=0; qDKcyfg < result.regionCount; qDKcyfg++){
            [&]() {
temp_RuAxpqf[qDKcyfg]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][qDKcyfg]);}();;
        }
        }();result.pRegions=temp_RuAxpqf;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkCopyBufferToImageInfo2(VkCopyBufferToImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_ftaWhqw=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_zfSbjgM=json({});
    
        if (name.pRegions==NULL){
            return_zfSbjgM["null"]=true;
            return return_zfSbjgM;
        }
        
        return_zfSbjgM["members"]={};
        for(int zfSbjgM=0; zfSbjgM < name.regionCount; zfSbjgM++){
            json temp;
            temp=[&]() {
    json return_TkQBUiq=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[zfSbjgM]);}();
            return_zfSbjgM["members"][std::to_string(zfSbjgM)].push_back(temp);
        }
        return return_zfSbjgM;
        }();
return result;}

    VkCopyBufferToImageInfo2 deserialize_VkCopyBufferToImageInfo2(json name){
        auto result=VkCopyBufferToImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_PdRxVrG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_PdRxVrG=NULL;
        }
    temp_PdRxVrG=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int LTGUVPS=0; LTGUVPS < result.regionCount; LTGUVPS++){
            [&]() {
temp_PdRxVrG[LTGUVPS]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][LTGUVPS]);}();;
        }
        }();result.pRegions=temp_PdRxVrG;}();
return result;}

    json serialize_VkCopyBufferToImageInfo2KHR(VkCopyBufferToImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_ftaWhqw=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_zfSbjgM=json({});
    
        if (name.pRegions==NULL){
            return_zfSbjgM["null"]=true;
            return return_zfSbjgM;
        }
        
        return_zfSbjgM["members"]={};
        for(int zfSbjgM=0; zfSbjgM < name.regionCount; zfSbjgM++){
            json temp;
            temp=[&]() {
    json return_TkQBUiq=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[zfSbjgM]);}();
            return_zfSbjgM["members"][std::to_string(zfSbjgM)].push_back(temp);
        }
        return return_zfSbjgM;
        }();
return result;}

    VkCopyBufferToImageInfo2KHR deserialize_VkCopyBufferToImageInfo2KHR(json name){
        auto result=VkCopyBufferToImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_PdRxVrG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_PdRxVrG=NULL;
        }
    temp_PdRxVrG=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int LTGUVPS=0; LTGUVPS < result.regionCount; LTGUVPS++){
            [&]() {
temp_PdRxVrG[LTGUVPS]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][LTGUVPS]);}();;
        }
        }();result.pRegions=temp_PdRxVrG;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2(VkCopyImageToBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_ufQXOYa=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_zfSbjgM=json({});
    
        if (name.pRegions==NULL){
            return_zfSbjgM["null"]=true;
            return return_zfSbjgM;
        }
        
        return_zfSbjgM["members"]={};
        for(int zfSbjgM=0; zfSbjgM < name.regionCount; zfSbjgM++){
            json temp;
            temp=[&]() {
    json return_TkQBUiq=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[zfSbjgM]);}();
            return_zfSbjgM["members"][std::to_string(zfSbjgM)].push_back(temp);
        }
        return return_zfSbjgM;
        }();
return result;}

    VkCopyImageToBufferInfo2 deserialize_VkCopyImageToBufferInfo2(json name){
        auto result=VkCopyImageToBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_PdRxVrG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_PdRxVrG=NULL;
        }
    temp_PdRxVrG=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int LTGUVPS=0; LTGUVPS < result.regionCount; LTGUVPS++){
            [&]() {
temp_PdRxVrG[LTGUVPS]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][LTGUVPS]);}();;
        }
        }();result.pRegions=temp_PdRxVrG;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2KHR(VkCopyImageToBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_ufQXOYa=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_zfSbjgM=json({});
    
        if (name.pRegions==NULL){
            return_zfSbjgM["null"]=true;
            return return_zfSbjgM;
        }
        
        return_zfSbjgM["members"]={};
        for(int zfSbjgM=0; zfSbjgM < name.regionCount; zfSbjgM++){
            json temp;
            temp=[&]() {
    json return_TkQBUiq=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[zfSbjgM]);}();
            return_zfSbjgM["members"][std::to_string(zfSbjgM)].push_back(temp);
        }
        return return_zfSbjgM;
        }();
return result;}

    VkCopyImageToBufferInfo2KHR deserialize_VkCopyImageToBufferInfo2KHR(json name){
        auto result=VkCopyImageToBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_PdRxVrG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_PdRxVrG=NULL;
        }
    temp_PdRxVrG=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int LTGUVPS=0; LTGUVPS < result.regionCount; LTGUVPS++){
            [&]() {
temp_PdRxVrG[LTGUVPS]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][LTGUVPS]);}();;
        }
        }();result.pRegions=temp_PdRxVrG;}();
return result;}

    json serialize_VkResolveImageInfo2(VkResolveImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_RsWofTz=json({});
    
        if (name.pRegions==NULL){
            return_RsWofTz["null"]=true;
            return return_RsWofTz;
        }
        
        return_RsWofTz["members"]={};
        for(int RsWofTz=0; RsWofTz < name.regionCount; RsWofTz++){
            json temp;
            temp=[&]() {
    json return_YgwHDBk=json({});
    return serialize_VkImageResolve2(name.pRegions[RsWofTz]);}();
            return_RsWofTz["members"][std::to_string(RsWofTz)].push_back(temp);
        }
        return return_RsWofTz;
        }();
return result;}

    VkResolveImageInfo2 deserialize_VkResolveImageInfo2(json name){
        auto result=VkResolveImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_rBKKTgF;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_rBKKTgF=NULL;
        }
    temp_rBKKTgF=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int BKzsiBg=0; BKzsiBg < result.regionCount; BKzsiBg++){
            [&]() {
temp_rBKKTgF[BKzsiBg]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][BKzsiBg]);}();;
        }
        }();result.pRegions=temp_rBKKTgF;}();
return result;}

    json serialize_VkResolveImageInfo2KHR(VkResolveImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_RsWofTz=json({});
    
        if (name.pRegions==NULL){
            return_RsWofTz["null"]=true;
            return return_RsWofTz;
        }
        
        return_RsWofTz["members"]={};
        for(int RsWofTz=0; RsWofTz < name.regionCount; RsWofTz++){
            json temp;
            temp=[&]() {
    json return_YgwHDBk=json({});
    return serialize_VkImageResolve2(name.pRegions[RsWofTz]);}();
            return_RsWofTz["members"][std::to_string(RsWofTz)].push_back(temp);
        }
        return return_RsWofTz;
        }();
return result;}

    VkResolveImageInfo2KHR deserialize_VkResolveImageInfo2KHR(json name){
        auto result=VkResolveImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_rBKKTgF;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_rBKKTgF=NULL;
        }
    temp_rBKKTgF=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int BKzsiBg=0; BKzsiBg < result.regionCount; BKzsiBg++){
            [&]() {
temp_rBKKTgF[BKzsiBg]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][BKzsiBg]);}();;
        }
        }();result.pRegions=temp_rBKKTgF;}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderImageInt64Atomics"]=[&]() {
    json return_qokgtXz=json({});
    return_qokgtXz=[&]() {
    json return_FmoWquE=json({});
    return serialize_uint32_t(name.shaderImageInt64Atomics);}();return return_qokgtXz;}();
result["members"]["sparseImageInt64Atomics"]=[&]() {
    json return_dlzPocl=json({});
    return_dlzPocl=[&]() {
    json return_zAZMwVD=json({});
    return serialize_uint32_t(name.sparseImageInt64Atomics);}();return return_dlzPocl;}();
return result;}

    VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderImageInt64Atomics=deserialize_uint32_t(name["members"]["shaderImageInt64Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageInt64Atomics=deserialize_uint32_t(name["members"]["sparseImageInt64Atomics"]);}();}();
return result;}

    json serialize_VkFragmentShadingRateAttachmentInfoKHR(VkFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pFragmentShadingRateAttachment"]=[&]() {
    json return_IjOzbrn=json({});
    
        if (name.pFragmentShadingRateAttachment==NULL){
            return_IjOzbrn["null"]=true;
            return return_IjOzbrn;
        }
        return_IjOzbrn=[&]() {
    json return_iFtsxwb=json({});
    return serialize_VkAttachmentReference2(*name.pFragmentShadingRateAttachment);}();
return return_IjOzbrn;}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_TYmHWqn=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkFragmentShadingRateAttachmentInfoKHR deserialize_VkFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
VkAttachmentReference2* temp_pidzJfA;[&]() {

        if (name["members"]["pFragmentShadingRateAttachment"].contains("null")){
        temp_pidzJfA=NULL;
        }
    [&]() {
*(temp_pidzJfA)=deserialize_VkAttachmentReference2(name["members"]["pFragmentShadingRateAttachment"]);}();
}();result.pFragmentShadingRateAttachment=temp_pidzJfA;}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(VkPipelineFragmentShadingRateStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentSize"]=[&]() {
    json return_NMHbOsM=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
result["members"]["combinerOps"]=[&]() {
    json return_QKbJyBb=json({});
    
        return_QKbJyBb["members"]={};
        for(int QKbJyBb=0; QKbJyBb < 2; QKbJyBb++){
            json temp;
            temp=[&]() {
    json return_zkIZBNJ=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[QKbJyBb]);}();
            return_QKbJyBb["members"][std::to_string(QKbJyBb)].push_back(temp);
        }
        return return_QKbJyBb;
        }();
return result;}

    VkPipelineFragmentShadingRateStateCreateInfoKHR deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(json name){
        auto result=VkPipelineFragmentShadingRateStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
[&]() {

        for (int VNsDUnv=0; VNsDUnv < 2; VNsDUnv++){
            [&]() {
result.combinerOps[VNsDUnv]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][VNsDUnv]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(VkPhysicalDeviceFragmentShadingRateFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineFragmentShadingRate"]=[&]() {
    json return_BWJLQju=json({});
    return_BWJLQju=[&]() {
    json return_kXmQrXh=json({});
    return serialize_uint32_t(name.pipelineFragmentShadingRate);}();return return_BWJLQju;}();
result["members"]["primitiveFragmentShadingRate"]=[&]() {
    json return_PTeqQrL=json({});
    return_PTeqQrL=[&]() {
    json return_xuvGGmK=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRate);}();return return_PTeqQrL;}();
result["members"]["attachmentFragmentShadingRate"]=[&]() {
    json return_ffavncj=json({});
    return_ffavncj=[&]() {
    json return_xJsXUTy=json({});
    return serialize_uint32_t(name.attachmentFragmentShadingRate);}();return return_ffavncj;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateFeaturesKHR deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineFragmentShadingRate=deserialize_uint32_t(name["members"]["pipelineFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRate=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.attachmentFragmentShadingRate=deserialize_uint32_t(name["members"]["attachmentFragmentShadingRate"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(VkPhysicalDeviceFragmentShadingRatePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_VkdujhO=json({});
    return serialize_VkExtent2D(name.minFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_uDCeDuq=json({});
    return serialize_VkExtent2D(name.maxFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]=[&]() {
    json return_UbILhDT=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateAttachmentTexelSizeAspectRatio);}();
result["members"]["primitiveFragmentShadingRateWithMultipleViewports"]=[&]() {
    json return_FPyfabj=json({});
    return_FPyfabj=[&]() {
    json return_kxlWWOh=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateWithMultipleViewports);}();return return_FPyfabj;}();
result["members"]["layeredShadingRateAttachments"]=[&]() {
    json return_KxNcdvk=json({});
    return_KxNcdvk=[&]() {
    json return_vQEHIXm=json({});
    return serialize_uint32_t(name.layeredShadingRateAttachments);}();return return_KxNcdvk;}();
result["members"]["fragmentShadingRateNonTrivialCombinerOps"]=[&]() {
    json return_tUmsBZc=json({});
    return_tUmsBZc=[&]() {
    json return_gqqKbxk=json({});
    return serialize_uint32_t(name.fragmentShadingRateNonTrivialCombinerOps);}();return return_tUmsBZc;}();
result["members"]["maxFragmentSize"]=[&]() {
    json return_urOyuJI=json({});
    return serialize_VkExtent2D(name.maxFragmentSize);}();
result["members"]["maxFragmentSizeAspectRatio"]=[&]() {
    json return_RuUPSTZ=json({});
    return serialize_uint32_t(name.maxFragmentSizeAspectRatio);}();
result["members"]["maxFragmentShadingRateCoverageSamples"]=[&]() {
    json return_wJKjQuR=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateCoverageSamples);}();
result["members"]["maxFragmentShadingRateRasterizationSamples"]=[&]() {
    json return_GFEYLza=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateRasterizationSamples);}();
result["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]=[&]() {
    json return_ulSdZGh=json({});
    return_ulSdZGh=[&]() {
    json return_lndpoJO=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderDepthStencilWrites);}();return return_ulSdZGh;}();
result["members"]["fragmentShadingRateWithSampleMask"]=[&]() {
    json return_PjxJGWL=json({});
    return_PjxJGWL=[&]() {
    json return_qBfFDmW=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithSampleMask);}();return return_PjxJGWL;}();
result["members"]["fragmentShadingRateWithShaderSampleMask"]=[&]() {
    json return_HipDfPQ=json({});
    return_HipDfPQ=[&]() {
    json return_KPuurFD=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderSampleMask);}();return return_HipDfPQ;}();
result["members"]["fragmentShadingRateWithConservativeRasterization"]=[&]() {
    json return_rvoaNCa=json({});
    return_rvoaNCa=[&]() {
    json return_NVlmrQO=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithConservativeRasterization);}();return return_rvoaNCa;}();
result["members"]["fragmentShadingRateWithFragmentShaderInterlock"]=[&]() {
    json return_yrpCcoR=json({});
    return_yrpCcoR=[&]() {
    json return_hxDNCzz=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithFragmentShaderInterlock);}();return return_yrpCcoR;}();
result["members"]["fragmentShadingRateWithCustomSampleLocations"]=[&]() {
    json return_iJLGzjQ=json({});
    return_iJLGzjQ=[&]() {
    json return_huewGTk=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithCustomSampleLocations);}();return return_iJLGzjQ;}();
result["members"]["fragmentShadingRateStrictMultiplyCombiner"]=[&]() {
    json return_qiRFzWU=json({});
    return_qiRFzWU=[&]() {
    json return_SGtAGKN=json({});
    return serialize_uint32_t(name.fragmentShadingRateStrictMultiplyCombiner);}();return return_qiRFzWU;}();
return result;}

    VkPhysicalDeviceFragmentShadingRatePropertiesKHR deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRatePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]);}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateWithMultipleViewports=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateWithMultipleViewports"]);}();}();
[&]() {
[&]() {
result.layeredShadingRateAttachments=deserialize_uint32_t(name["members"]["layeredShadingRateAttachments"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateNonTrivialCombinerOps=deserialize_uint32_t(name["members"]["fragmentShadingRateNonTrivialCombinerOps"]);}();}();
[&]() {
result.maxFragmentSize=deserialize_VkExtent2D(name["members"]["maxFragmentSize"]);}();
[&]() {
result.maxFragmentSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentSizeAspectRatio"]);}();
[&]() {
result.maxFragmentShadingRateCoverageSamples=deserialize_uint32_t(name["members"]["maxFragmentShadingRateCoverageSamples"]);}();
[&]() {
result.maxFragmentShadingRateRasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateRasterizationSamples"]);}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderDepthStencilWrites=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithConservativeRasterization=deserialize_uint32_t(name["members"]["fragmentShadingRateWithConservativeRasterization"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithFragmentShaderInterlock=deserialize_uint32_t(name["members"]["fragmentShadingRateWithFragmentShaderInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithCustomSampleLocations=deserialize_uint32_t(name["members"]["fragmentShadingRateWithCustomSampleLocations"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateStrictMultiplyCombiner=deserialize_uint32_t(name["members"]["fragmentShadingRateStrictMultiplyCombiner"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateKHR(VkPhysicalDeviceFragmentShadingRateKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleCounts"]=[&]() {
    json return_FkdNcNx=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["fragmentSize"]=[&]() {
    json return_NMHbOsM=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateKHR deserialize_VkPhysicalDeviceFragmentShadingRateKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(VkPhysicalDeviceShaderTerminateInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_bYRMmRP=json({});
    return_bYRMmRP=[&]() {
    json return_KdVbdcR=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_bYRMmRP;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeatures deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_bYRMmRP=json({});
    return_bYRMmRP=[&]() {
    json return_KdVbdcR=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_bYRMmRP;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShadingRateEnums"]=[&]() {
    json return_EDJRpXP=json({});
    return_EDJRpXP=[&]() {
    json return_uyNzajj=json({});
    return serialize_uint32_t(name.fragmentShadingRateEnums);}();return return_EDJRpXP;}();
result["members"]["supersampleFragmentShadingRates"]=[&]() {
    json return_LKomtSJ=json({});
    return_LKomtSJ=[&]() {
    json return_NnNFpRD=json({});
    return serialize_uint32_t(name.supersampleFragmentShadingRates);}();return return_LKomtSJ;}();
result["members"]["noInvocationFragmentShadingRates"]=[&]() {
    json return_OcZadgM=json({});
    return_OcZadgM=[&]() {
    json return_KXqvbxD=json({});
    return serialize_uint32_t(name.noInvocationFragmentShadingRates);}();return return_OcZadgM;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShadingRateEnums=deserialize_uint32_t(name["members"]["fragmentShadingRateEnums"]);}();}();
[&]() {
[&]() {
result.supersampleFragmentShadingRates=deserialize_uint32_t(name["members"]["supersampleFragmentShadingRates"]);}();}();
[&]() {
[&]() {
result.noInvocationFragmentShadingRates=deserialize_uint32_t(name["members"]["noInvocationFragmentShadingRates"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxFragmentShadingRateInvocationCount"]=[&]() {
    json return_IXUqRRE=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateInvocationCount);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxFragmentShadingRateInvocationCount=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateInvocationCount"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkPipelineFragmentShadingRateEnumStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateType"]=[&]() {
    json return_mlJTNiH=json({});
    return serialize_VkFragmentShadingRateTypeNV(name.shadingRateType);}();
result["members"]["shadingRate"]=[&]() {
    json return_gCPnBQa=json({});
    return serialize_VkFragmentShadingRateNV(name.shadingRate);}();
result["members"]["combinerOps"]=[&]() {
    json return_QKbJyBb=json({});
    
        return_QKbJyBb["members"]={};
        for(int QKbJyBb=0; QKbJyBb < 2; QKbJyBb++){
            json temp;
            temp=[&]() {
    json return_zkIZBNJ=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[QKbJyBb]);}();
            return_QKbJyBb["members"][std::to_string(QKbJyBb)].push_back(temp);
        }
        return return_QKbJyBb;
        }();
return result;}

    VkPipelineFragmentShadingRateEnumStateCreateInfoNV deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(json name){
        auto result=VkPipelineFragmentShadingRateEnumStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.shadingRateType=deserialize_VkFragmentShadingRateTypeNV(name["members"]["shadingRateType"]);}();
[&]() {
result.shadingRate=deserialize_VkFragmentShadingRateNV(name["members"]["shadingRate"]);}();
[&]() {

        for (int VNsDUnv=0; VNsDUnv < 2; VNsDUnv++){
            [&]() {
result.combinerOps[VNsDUnv]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][VNsDUnv]);}();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureBuildSizesInfoKHR(VkAccelerationStructureBuildSizesInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureSize"]=[&]() {
    json return_LLWOgdq=json({});
    return_LLWOgdq=[&]() {
    json return_EkGOEPB=json({});
    return serialize_uint64_t(name.accelerationStructureSize);}();return return_LLWOgdq;}();
result["members"]["updateScratchSize"]=[&]() {
    json return_vMAipck=json({});
    return_vMAipck=[&]() {
    json return_LhKSkdj=json({});
    return serialize_uint64_t(name.updateScratchSize);}();return return_vMAipck;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_UAFAgJT=json({});
    return_UAFAgJT=[&]() {
    json return_JlHCvHE=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_UAFAgJT;}();
return result;}

    VkAccelerationStructureBuildSizesInfoKHR deserialize_VkAccelerationStructureBuildSizesInfoKHR(json name){
        auto result=VkAccelerationStructureBuildSizesInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.accelerationStructureSize=deserialize_uint64_t(name["members"]["accelerationStructureSize"]);}();}();
[&]() {
[&]() {
result.updateScratchSize=deserialize_uint64_t(name["members"]["updateScratchSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image2DViewOf3D"]=[&]() {
    json return_rjyDMPJ=json({});
    return_rjyDMPJ=[&]() {
    json return_lPAjZHq=json({});
    return serialize_uint32_t(name.image2DViewOf3D);}();return return_rjyDMPJ;}();
result["members"]["sampler2DViewOf3D"]=[&]() {
    json return_nAguKNu=json({});
    return_nAguKNu=[&]() {
    json return_vEaZxyd=json({});
    return serialize_uint32_t(name.sampler2DViewOf3D);}();return return_nAguKNu;}();
return result;}

    VkPhysicalDeviceImage2DViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImage2DViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.image2DViewOf3D=deserialize_uint32_t(name["members"]["image2DViewOf3D"]);}();}();
[&]() {
[&]() {
result.sampler2DViewOf3D=deserialize_uint32_t(name["members"]["sampler2DViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSlicedViewOf3D"]=[&]() {
    json return_uDVvGDP=json({});
    return_uDVvGDP=[&]() {
    json return_dctXvdw=json({});
    return serialize_uint32_t(name.imageSlicedViewOf3D);}();return return_uDVvGDP;}();
return result;}

    VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageSlicedViewOf3D=deserialize_uint32_t(name["members"]["imageSlicedViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopDynamicState"]=[&]() {
    json return_nBxAStI=json({});
    return_nBxAStI=[&]() {
    json return_YoIqrLP=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopDynamicState);}();return return_nBxAStI;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopDynamicState=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_fKwUnBO=json({});
    return_fKwUnBO=[&]() {
    json return_vzNBuRG=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_fKwUnBO;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_fKwUnBO=json({});
    return_fKwUnBO=[&]() {
    json return_vzNBuRG=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_fKwUnBO;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkMutableDescriptorTypeListEXT(VkMutableDescriptorTypeListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_jiGbtnu=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_dteGlYQ=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_dteGlYQ["null"]=true;
            return return_dteGlYQ;
        }
        
        return_dteGlYQ["members"]={};
        for(int dteGlYQ=0; dteGlYQ < name.descriptorTypeCount; dteGlYQ++){
            json temp;
            temp=[&]() {
    json return_AuOxuNm=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[dteGlYQ]);}();
            return_dteGlYQ["members"][std::to_string(dteGlYQ)].push_back(temp);
        }
        return return_dteGlYQ;
        }();
return result;}

    VkMutableDescriptorTypeListEXT deserialize_VkMutableDescriptorTypeListEXT(json name){
        auto result=VkMutableDescriptorTypeListEXT();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_LInuYcK;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_LInuYcK=NULL;
        }
    temp_LInuYcK=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int VgRGaAX=0; VgRGaAX < result.descriptorTypeCount; VgRGaAX++){
            [&]() {
temp_LInuYcK[VgRGaAX]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][VgRGaAX]);}();;
        }
        }();result.pDescriptorTypes=temp_LInuYcK;}();
return result;}

    json serialize_VkMutableDescriptorTypeListVALVE(VkMutableDescriptorTypeListVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_jiGbtnu=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_dteGlYQ=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_dteGlYQ["null"]=true;
            return return_dteGlYQ;
        }
        
        return_dteGlYQ["members"]={};
        for(int dteGlYQ=0; dteGlYQ < name.descriptorTypeCount; dteGlYQ++){
            json temp;
            temp=[&]() {
    json return_AuOxuNm=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[dteGlYQ]);}();
            return_dteGlYQ["members"][std::to_string(dteGlYQ)].push_back(temp);
        }
        return return_dteGlYQ;
        }();
return result;}

    VkMutableDescriptorTypeListVALVE deserialize_VkMutableDescriptorTypeListVALVE(json name){
        auto result=VkMutableDescriptorTypeListVALVE();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_LInuYcK;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_LInuYcK=NULL;
        }
    temp_LInuYcK=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int VgRGaAX=0; VgRGaAX < result.descriptorTypeCount; VgRGaAX++){
            [&]() {
temp_LInuYcK[VgRGaAX]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][VgRGaAX]);}();;
        }
        }();result.pDescriptorTypes=temp_LInuYcK;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoEXT(VkMutableDescriptorTypeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_YqErkvK=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_VGFeQSc=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_VGFeQSc["null"]=true;
            return return_VGFeQSc;
        }
        
        return_VGFeQSc["members"]={};
        for(int VGFeQSc=0; VGFeQSc < name.mutableDescriptorTypeListCount; VGFeQSc++){
            json temp;
            temp=[&]() {
    json return_PONwDwY=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[VGFeQSc]);}();
            return_VGFeQSc["members"][std::to_string(VGFeQSc)].push_back(temp);
        }
        return return_VGFeQSc;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoEXT deserialize_VkMutableDescriptorTypeCreateInfoEXT(json name){
        auto result=VkMutableDescriptorTypeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_FzRDDVu;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_FzRDDVu=NULL;
        }
    temp_FzRDDVu=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int IARWPsO=0; IARWPsO < result.mutableDescriptorTypeListCount; IARWPsO++){
            [&]() {
temp_FzRDDVu[IARWPsO]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][IARWPsO]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_FzRDDVu;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoVALVE(VkMutableDescriptorTypeCreateInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_YqErkvK=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_VGFeQSc=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_VGFeQSc["null"]=true;
            return return_VGFeQSc;
        }
        
        return_VGFeQSc["members"]={};
        for(int VGFeQSc=0; VGFeQSc < name.mutableDescriptorTypeListCount; VGFeQSc++){
            json temp;
            temp=[&]() {
    json return_PONwDwY=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[VGFeQSc]);}();
            return_VGFeQSc["members"][std::to_string(VGFeQSc)].push_back(temp);
        }
        return return_VGFeQSc;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoVALVE deserialize_VkMutableDescriptorTypeCreateInfoVALVE(json name){
        auto result=VkMutableDescriptorTypeCreateInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_FzRDDVu;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_FzRDDVu=NULL;
        }
    temp_FzRDDVu=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int IARWPsO=0; IARWPsO < result.mutableDescriptorTypeListCount; IARWPsO++){
            [&]() {
temp_FzRDDVu[IARWPsO]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][IARWPsO]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_FzRDDVu;}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(VkPhysicalDeviceDepthClipControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipControl"]=[&]() {
    json return_AMZeHPM=json({});
    return_AMZeHPM=[&]() {
    json return_fgUPiGh=json({});
    return serialize_uint32_t(name.depthClipControl);}();return return_AMZeHPM;}();
return result;}

    VkPhysicalDeviceDepthClipControlFeaturesEXT deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipControl=deserialize_uint32_t(name["members"]["depthClipControl"]);}();}();
return result;}

    json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(VkPipelineViewportDepthClipControlCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["negativeOneToOne"]=[&]() {
    json return_erpULqj=json({});
    return_erpULqj=[&]() {
    json return_KsdeAYl=json({});
    return serialize_uint32_t(name.negativeOneToOne);}();return return_erpULqj;}();
return result;}

    VkPipelineViewportDepthClipControlCreateInfoEXT deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(json name){
        auto result=VkPipelineViewportDepthClipControlCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.negativeOneToOne=deserialize_uint32_t(name["members"]["negativeOneToOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexInputDynamicState"]=[&]() {
    json return_HgMMmXl=json({});
    return_HgMMmXl=[&]() {
    json return_wJXdmGO=json({});
    return serialize_uint32_t(name.vertexInputDynamicState);}();return return_HgMMmXl;}();
return result;}

    VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexInputDynamicState=deserialize_uint32_t(name["members"]["vertexInputDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryRDMA"]=[&]() {
    json return_zAQFeVu=json({});
    return_zAQFeVu=[&]() {
    json return_BXByQfu=json({});
    return serialize_uint32_t(name.externalMemoryRDMA);}();return return_zAQFeVu;}();
return result;}

    VkPhysicalDeviceExternalMemoryRDMAFeaturesNV deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(json name){
        auto result=VkPhysicalDeviceExternalMemoryRDMAFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.externalMemoryRDMA=deserialize_uint32_t(name["members"]["externalMemoryRDMA"]);}();}();
return result;}

    json serialize_VkVertexInputBindingDescription2EXT(VkVertexInputBindingDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["binding"]=[&]() {
    json return_BpBrDUS=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_lWJEvlL=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_exAjkCF=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
result["members"]["divisor"]=[&]() {
    json return_mUhSyhU=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDescription2EXT deserialize_VkVertexInputBindingDescription2EXT(json name){
        auto result=VkVertexInputBindingDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription2EXT(VkVertexInputAttributeDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["location"]=[&]() {
    json return_XAwCZun=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_BpBrDUS=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_QevQWLB=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription2EXT deserialize_VkVertexInputAttributeDescription2EXT(json name){
        auto result=VkVertexInputAttributeDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(VkPhysicalDeviceColorWriteEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorWriteEnable"]=[&]() {
    json return_KzFJGkh=json({});
    return_KzFJGkh=[&]() {
    json return_UkxZLrP=json({});
    return serialize_uint32_t(name.colorWriteEnable);}();return return_KzFJGkh;}();
return result;}

    VkPhysicalDeviceColorWriteEnableFeaturesEXT deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceColorWriteEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.colorWriteEnable=deserialize_uint32_t(name["members"]["colorWriteEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorWriteCreateInfoEXT(VkPipelineColorWriteCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_uATwtAt=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pColorWriteEnables"]=[&]() {
    json return_KceBuLf=json({});
    
        if (name.pColorWriteEnables==NULL){
            return_KceBuLf["null"]=true;
            return return_KceBuLf;
        }
        
        return_KceBuLf["members"]={};
        for(int KceBuLf=0; KceBuLf < name.attachmentCount; KceBuLf++){
            json temp;
            temp=[&]() {
    json return_BdtCGrW=json({});
    return_BdtCGrW=[&]() {
    json return_ILXCqbK=json({});
    return serialize_uint32_t(name.pColorWriteEnables[KceBuLf]);}();return return_BdtCGrW;}();
            return_KceBuLf["members"][std::to_string(KceBuLf)].push_back(temp);
        }
        return return_KceBuLf;
        }();
return result;}

    VkPipelineColorWriteCreateInfoEXT deserialize_VkPipelineColorWriteCreateInfoEXT(json name){
        auto result=VkPipelineColorWriteCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkBool32* temp_CnPKpow;[&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_CnPKpow=NULL;
        }
    temp_CnPKpow=(VkBool32*)malloc(result.attachmentCount*sizeof(VkBool32));
        for (int WnoYSwe=0; WnoYSwe < result.attachmentCount; WnoYSwe++){
            [&]() {
[&]() {
temp_CnPKpow[WnoYSwe]=deserialize_uint32_t(name["members"]["pColorWriteEnables"]["members"][WnoYSwe]);}();}();;
        }
        }();result.pColorWriteEnables=temp_CnPKpow;}();
return result;}

    json serialize_VkMemoryBarrier2(VkMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_tSgkheN=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_MTvLYTT=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_hTZLRYu=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_KLucBxN=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2 deserialize_VkMemoryBarrier2(json name){
        auto result=VkMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkMemoryBarrier2KHR(VkMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_tSgkheN=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_MTvLYTT=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_hTZLRYu=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_KLucBxN=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2KHR deserialize_VkMemoryBarrier2KHR(json name){
        auto result=VkMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2(VkImageMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_tSgkheN=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_MTvLYTT=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_hTZLRYu=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_KLucBxN=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_rCwsJVl=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_zLfnkid=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_KRlEorD=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_egsutkp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_bsHqPsS=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2 deserialize_VkImageMemoryBarrier2(json name){
        auto result=VkImageMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2KHR(VkImageMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_tSgkheN=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_MTvLYTT=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_hTZLRYu=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_KLucBxN=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_rCwsJVl=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_zLfnkid=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_KRlEorD=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_egsutkp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_bsHqPsS=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2KHR deserialize_VkImageMemoryBarrier2KHR(json name){
        auto result=VkImageMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier2(VkBufferMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_tSgkheN=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_MTvLYTT=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_hTZLRYu=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_KLucBxN=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_KRlEorD=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_egsutkp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkBufferMemoryBarrier2 deserialize_VkBufferMemoryBarrier2(json name){
        auto result=VkBufferMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferMemoryBarrier2KHR(VkBufferMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_tSgkheN=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_MTvLYTT=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_hTZLRYu=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_KLucBxN=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_KRlEorD=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_egsutkp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkBufferMemoryBarrier2KHR deserialize_VkBufferMemoryBarrier2KHR(json name){
        auto result=VkBufferMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkDependencyInfo(VkDependencyInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_dBndcKo=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_qlZQYfQ=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_ZSLCXQl=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_ZSLCXQl["null"]=true;
            return return_ZSLCXQl;
        }
        
        return_ZSLCXQl["members"]={};
        for(int ZSLCXQl=0; ZSLCXQl < name.memoryBarrierCount; ZSLCXQl++){
            json temp;
            temp=[&]() {
    json return_fAaYpHD=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[ZSLCXQl]);}();
            return_ZSLCXQl["members"][std::to_string(ZSLCXQl)].push_back(temp);
        }
        return return_ZSLCXQl;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_sJdYREj=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_ooCdlwn=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_ooCdlwn["null"]=true;
            return return_ooCdlwn;
        }
        
        return_ooCdlwn["members"]={};
        for(int ooCdlwn=0; ooCdlwn < name.bufferMemoryBarrierCount; ooCdlwn++){
            json temp;
            temp=[&]() {
    json return_SJVrLFL=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[ooCdlwn]);}();
            return_ooCdlwn["members"][std::to_string(ooCdlwn)].push_back(temp);
        }
        return return_ooCdlwn;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_HKMScVz=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_deLZmRN=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_deLZmRN["null"]=true;
            return return_deLZmRN;
        }
        
        return_deLZmRN["members"]={};
        for(int deLZmRN=0; deLZmRN < name.imageMemoryBarrierCount; deLZmRN++){
            json temp;
            temp=[&]() {
    json return_BmbDDGL=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[deLZmRN]);}();
            return_deLZmRN["members"][std::to_string(deLZmRN)].push_back(temp);
        }
        return return_deLZmRN;
        }();
return result;}

    VkDependencyInfo deserialize_VkDependencyInfo(json name){
        auto result=VkDependencyInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_sDUqTTo;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_sDUqTTo=NULL;
        }
    temp_sDUqTTo=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int TWAeFCU=0; TWAeFCU < result.memoryBarrierCount; TWAeFCU++){
            [&]() {
temp_sDUqTTo[TWAeFCU]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][TWAeFCU]);}();;
        }
        }();result.pMemoryBarriers=temp_sDUqTTo;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_HytyCVt;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_HytyCVt=NULL;
        }
    temp_HytyCVt=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int wprTopU=0; wprTopU < result.bufferMemoryBarrierCount; wprTopU++){
            [&]() {
temp_HytyCVt[wprTopU]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][wprTopU]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_HytyCVt;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_SvlWUzX;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_SvlWUzX=NULL;
        }
    temp_SvlWUzX=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int oNQnNfv=0; oNQnNfv < result.imageMemoryBarrierCount; oNQnNfv++){
            [&]() {
temp_SvlWUzX[oNQnNfv]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][oNQnNfv]);}();;
        }
        }();result.pImageMemoryBarriers=temp_SvlWUzX;}();
return result;}

    json serialize_VkDependencyInfoKHR(VkDependencyInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_dBndcKo=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_qlZQYfQ=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_ZSLCXQl=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_ZSLCXQl["null"]=true;
            return return_ZSLCXQl;
        }
        
        return_ZSLCXQl["members"]={};
        for(int ZSLCXQl=0; ZSLCXQl < name.memoryBarrierCount; ZSLCXQl++){
            json temp;
            temp=[&]() {
    json return_fAaYpHD=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[ZSLCXQl]);}();
            return_ZSLCXQl["members"][std::to_string(ZSLCXQl)].push_back(temp);
        }
        return return_ZSLCXQl;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_sJdYREj=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_ooCdlwn=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_ooCdlwn["null"]=true;
            return return_ooCdlwn;
        }
        
        return_ooCdlwn["members"]={};
        for(int ooCdlwn=0; ooCdlwn < name.bufferMemoryBarrierCount; ooCdlwn++){
            json temp;
            temp=[&]() {
    json return_SJVrLFL=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[ooCdlwn]);}();
            return_ooCdlwn["members"][std::to_string(ooCdlwn)].push_back(temp);
        }
        return return_ooCdlwn;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_HKMScVz=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_deLZmRN=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_deLZmRN["null"]=true;
            return return_deLZmRN;
        }
        
        return_deLZmRN["members"]={};
        for(int deLZmRN=0; deLZmRN < name.imageMemoryBarrierCount; deLZmRN++){
            json temp;
            temp=[&]() {
    json return_BmbDDGL=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[deLZmRN]);}();
            return_deLZmRN["members"][std::to_string(deLZmRN)].push_back(temp);
        }
        return return_deLZmRN;
        }();
return result;}

    VkDependencyInfoKHR deserialize_VkDependencyInfoKHR(json name){
        auto result=VkDependencyInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_sDUqTTo;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_sDUqTTo=NULL;
        }
    temp_sDUqTTo=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int TWAeFCU=0; TWAeFCU < result.memoryBarrierCount; TWAeFCU++){
            [&]() {
temp_sDUqTTo[TWAeFCU]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][TWAeFCU]);}();;
        }
        }();result.pMemoryBarriers=temp_sDUqTTo;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_HytyCVt;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_HytyCVt=NULL;
        }
    temp_HytyCVt=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int wprTopU=0; wprTopU < result.bufferMemoryBarrierCount; wprTopU++){
            [&]() {
temp_HytyCVt[wprTopU]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][wprTopU]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_HytyCVt;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_SvlWUzX;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_SvlWUzX=NULL;
        }
    temp_SvlWUzX=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int oNQnNfv=0; oNQnNfv < result.imageMemoryBarrierCount; oNQnNfv++){
            [&]() {
temp_SvlWUzX[oNQnNfv]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][oNQnNfv]);}();;
        }
        }();result.pImageMemoryBarriers=temp_SvlWUzX;}();
return result;}

    json serialize_VkSemaphoreSubmitInfo(VkSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_bjStxzc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_lvQlVTe=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_eDnBTfS=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_xxGZjiw=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfo deserialize_VkSemaphoreSubmitInfo(json name){
        auto result=VkSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkSemaphoreSubmitInfoKHR(VkSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_bjStxzc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_lvQlVTe=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_eDnBTfS=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_xxGZjiw=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfoKHR deserialize_VkSemaphoreSubmitInfoKHR(json name){
        auto result=VkSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfo(VkCommandBufferSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_XjzTBRj=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfo deserialize_VkCommandBufferSubmitInfo(json name){
        auto result=VkCommandBufferSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfoKHR(VkCommandBufferSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_XjzTBRj=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_sOYwgxV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfoKHR deserialize_VkCommandBufferSubmitInfoKHR(json name){
        auto result=VkCommandBufferSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkSubmitInfo2(VkSubmitInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FUAkjdk=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_rqXdeXL=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_SrmaWYN=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_SrmaWYN["null"]=true;
            return return_SrmaWYN;
        }
        
        return_SrmaWYN["members"]={};
        for(int SrmaWYN=0; SrmaWYN < name.waitSemaphoreInfoCount; SrmaWYN++){
            json temp;
            temp=[&]() {
    json return_AFqsvmH=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[SrmaWYN]);}();
            return_SrmaWYN["members"][std::to_string(SrmaWYN)].push_back(temp);
        }
        return return_SrmaWYN;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_ioGqEAq=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_ZpKJHCb=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_ZpKJHCb["null"]=true;
            return return_ZpKJHCb;
        }
        
        return_ZpKJHCb["members"]={};
        for(int ZpKJHCb=0; ZpKJHCb < name.commandBufferInfoCount; ZpKJHCb++){
            json temp;
            temp=[&]() {
    json return_BayfEuG=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[ZpKJHCb]);}();
            return_ZpKJHCb["members"][std::to_string(ZpKJHCb)].push_back(temp);
        }
        return return_ZpKJHCb;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_hWmsDLm=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_oWqyFDr=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_oWqyFDr["null"]=true;
            return return_oWqyFDr;
        }
        
        return_oWqyFDr["members"]={};
        for(int oWqyFDr=0; oWqyFDr < name.signalSemaphoreInfoCount; oWqyFDr++){
            json temp;
            temp=[&]() {
    json return_dGHdgyW=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[oWqyFDr]);}();
            return_oWqyFDr["members"][std::to_string(oWqyFDr)].push_back(temp);
        }
        return return_oWqyFDr;
        }();
return result;}

    VkSubmitInfo2 deserialize_VkSubmitInfo2(json name){
        auto result=VkSubmitInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_RHDUKuC;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_RHDUKuC=NULL;
        }
    temp_RHDUKuC=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int OCQIkWx=0; OCQIkWx < result.waitSemaphoreInfoCount; OCQIkWx++){
            [&]() {
temp_RHDUKuC[OCQIkWx]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][OCQIkWx]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_RHDUKuC;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_MlXLoSA;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_MlXLoSA=NULL;
        }
    temp_MlXLoSA=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int OqVQAEH=0; OqVQAEH < result.commandBufferInfoCount; OqVQAEH++){
            [&]() {
temp_MlXLoSA[OqVQAEH]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][OqVQAEH]);}();;
        }
        }();result.pCommandBufferInfos=temp_MlXLoSA;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_oimkNnk;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_oimkNnk=NULL;
        }
    temp_oimkNnk=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int vqQFcQP=0; vqQFcQP < result.signalSemaphoreInfoCount; vqQFcQP++){
            [&]() {
temp_oimkNnk[vqQFcQP]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][vqQFcQP]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_oimkNnk;}();
return result;}

    json serialize_VkSubmitInfo2KHR(VkSubmitInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FUAkjdk=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_rqXdeXL=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_SrmaWYN=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_SrmaWYN["null"]=true;
            return return_SrmaWYN;
        }
        
        return_SrmaWYN["members"]={};
        for(int SrmaWYN=0; SrmaWYN < name.waitSemaphoreInfoCount; SrmaWYN++){
            json temp;
            temp=[&]() {
    json return_AFqsvmH=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[SrmaWYN]);}();
            return_SrmaWYN["members"][std::to_string(SrmaWYN)].push_back(temp);
        }
        return return_SrmaWYN;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_ioGqEAq=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_ZpKJHCb=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_ZpKJHCb["null"]=true;
            return return_ZpKJHCb;
        }
        
        return_ZpKJHCb["members"]={};
        for(int ZpKJHCb=0; ZpKJHCb < name.commandBufferInfoCount; ZpKJHCb++){
            json temp;
            temp=[&]() {
    json return_BayfEuG=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[ZpKJHCb]);}();
            return_ZpKJHCb["members"][std::to_string(ZpKJHCb)].push_back(temp);
        }
        return return_ZpKJHCb;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_hWmsDLm=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_oWqyFDr=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_oWqyFDr["null"]=true;
            return return_oWqyFDr;
        }
        
        return_oWqyFDr["members"]={};
        for(int oWqyFDr=0; oWqyFDr < name.signalSemaphoreInfoCount; oWqyFDr++){
            json temp;
            temp=[&]() {
    json return_dGHdgyW=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[oWqyFDr]);}();
            return_oWqyFDr["members"][std::to_string(oWqyFDr)].push_back(temp);
        }
        return return_oWqyFDr;
        }();
return result;}

    VkSubmitInfo2KHR deserialize_VkSubmitInfo2KHR(json name){
        auto result=VkSubmitInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_RHDUKuC;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_RHDUKuC=NULL;
        }
    temp_RHDUKuC=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int OCQIkWx=0; OCQIkWx < result.waitSemaphoreInfoCount; OCQIkWx++){
            [&]() {
temp_RHDUKuC[OCQIkWx]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][OCQIkWx]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_RHDUKuC;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_MlXLoSA;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_MlXLoSA=NULL;
        }
    temp_MlXLoSA=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int OqVQAEH=0; OqVQAEH < result.commandBufferInfoCount; OqVQAEH++){
            [&]() {
temp_MlXLoSA[OqVQAEH]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][OqVQAEH]);}();;
        }
        }();result.pCommandBufferInfos=temp_MlXLoSA;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_oimkNnk;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_oimkNnk=NULL;
        }
    temp_oimkNnk=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int vqQFcQP=0; vqQFcQP < result.signalSemaphoreInfoCount; vqQFcQP++){
            [&]() {
temp_oimkNnk[vqQFcQP]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][vqQFcQP]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_oimkNnk;}();
return result;}

    json serialize_VkQueueFamilyCheckpointProperties2NV(VkQueueFamilyCheckpointProperties2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_YrCtfvC=json({});
    return serialize_VkPipelineStageFlags2(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointProperties2NV deserialize_VkQueueFamilyCheckpointProperties2NV(json name){
        auto result=VkQueueFamilyCheckpointProperties2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags2(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointData2NV(VkCheckpointData2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_vfQTbkN=json({});
    return serialize_VkPipelineStageFlags2(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_eoiLqJR=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_eoiLqJR["null"]=true;
            return return_eoiLqJR;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointData2NV deserialize_VkCheckpointData2NV(json name){
        auto result=VkCheckpointData2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlags2(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2Features(VkPhysicalDeviceSynchronization2Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_SNWRsaB=json({});
    return_SNWRsaB=[&]() {
    json return_KvTfIVX=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_SNWRsaB;}();
return result;}

    VkPhysicalDeviceSynchronization2Features deserialize_VkPhysicalDeviceSynchronization2Features(json name){
        auto result=VkPhysicalDeviceSynchronization2Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(VkPhysicalDeviceSynchronization2FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_SNWRsaB=json({});
    return_SNWRsaB=[&]() {
    json return_KvTfIVX=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_SNWRsaB;}();
return result;}

    VkPhysicalDeviceSynchronization2FeaturesKHR deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(json name){
        auto result=VkPhysicalDeviceSynchronization2FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(VkPhysicalDeviceHostImageCopyFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostImageCopy"]=[&]() {
    json return_ejkQgdX=json({});
    return_ejkQgdX=[&]() {
    json return_BqQTNQU=json({});
    return serialize_uint32_t(name.hostImageCopy);}();return return_ejkQgdX;}();
return result;}

    VkPhysicalDeviceHostImageCopyFeaturesEXT deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostImageCopy=deserialize_uint32_t(name["members"]["hostImageCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(VkPhysicalDeviceHostImageCopyPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["copySrcLayoutCount"]=[&]() {
    json return_uUjsoGF=json({});
    return serialize_uint32_t(name.copySrcLayoutCount);}();
result["members"]["pCopySrcLayouts"]=[&]() {
    json return_SdKENNM=json({});
    
        if (name.pCopySrcLayouts==NULL){
            return_SdKENNM["null"]=true;
            return return_SdKENNM;
        }
        
        return_SdKENNM["members"]={};
        for(int SdKENNM=0; SdKENNM < name.copySrcLayoutCount; SdKENNM++){
            json temp;
            temp=[&]() {
    json return_MdeuQaM=json({});
    return serialize_VkImageLayout(name.pCopySrcLayouts[SdKENNM]);}();
            return_SdKENNM["members"][std::to_string(SdKENNM)].push_back(temp);
        }
        return return_SdKENNM;
        }();
result["members"]["copyDstLayoutCount"]=[&]() {
    json return_GSApMay=json({});
    return serialize_uint32_t(name.copyDstLayoutCount);}();
result["members"]["pCopyDstLayouts"]=[&]() {
    json return_lupKRCM=json({});
    
        if (name.pCopyDstLayouts==NULL){
            return_lupKRCM["null"]=true;
            return return_lupKRCM;
        }
        
        return_lupKRCM["members"]={};
        for(int lupKRCM=0; lupKRCM < name.copyDstLayoutCount; lupKRCM++){
            json temp;
            temp=[&]() {
    json return_vVgeWNX=json({});
    return serialize_VkImageLayout(name.pCopyDstLayouts[lupKRCM]);}();
            return_lupKRCM["members"][std::to_string(lupKRCM)].push_back(temp);
        }
        return return_lupKRCM;
        }();
result["members"]["optimalTilingLayoutUUID"]=[&]() {
    json return_ZDPDSmI=json({});
    
        return_ZDPDSmI["members"]={};
        for(int ZDPDSmI=0; ZDPDSmI < VK_UUID_SIZE; ZDPDSmI++){
            json temp;
            temp=[&]() {
    json return_zcopFgi=json({});
    return serialize_uint8_t(name.optimalTilingLayoutUUID[ZDPDSmI]);}();
            return_ZDPDSmI["members"][std::to_string(ZDPDSmI)].push_back(temp);
        }
        return return_ZDPDSmI;
        }();
result["members"]["identicalMemoryTypeRequirements"]=[&]() {
    json return_fJgJBbm=json({});
    return_fJgJBbm=[&]() {
    json return_LIiRivv=json({});
    return serialize_uint32_t(name.identicalMemoryTypeRequirements);}();return return_fJgJBbm;}();
return result;}

    VkPhysicalDeviceHostImageCopyPropertiesEXT deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.copySrcLayoutCount=deserialize_uint32_t(name["members"]["copySrcLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopySrcLayouts"].contains("null")){
        result.pCopySrcLayouts=NULL;
        }
    result.pCopySrcLayouts=(VkImageLayout*)malloc(result.copySrcLayoutCount*sizeof(VkImageLayout));
        for (int dlYajDR=0; dlYajDR < result.copySrcLayoutCount; dlYajDR++){
            [&]() {
result.pCopySrcLayouts[dlYajDR]=deserialize_VkImageLayout(name["members"]["pCopySrcLayouts"]["members"][dlYajDR]);}();;
        }
        }();
[&]() {
result.copyDstLayoutCount=deserialize_uint32_t(name["members"]["copyDstLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopyDstLayouts"].contains("null")){
        result.pCopyDstLayouts=NULL;
        }
    result.pCopyDstLayouts=(VkImageLayout*)malloc(result.copyDstLayoutCount*sizeof(VkImageLayout));
        for (int YcFscxN=0; YcFscxN < result.copyDstLayoutCount; YcFscxN++){
            [&]() {
result.pCopyDstLayouts[YcFscxN]=deserialize_VkImageLayout(name["members"]["pCopyDstLayouts"]["members"][YcFscxN]);}();;
        }
        }();
[&]() {

        for (int nBAXdBW=0; nBAXdBW < VK_UUID_SIZE; nBAXdBW++){
            [&]() {
result.optimalTilingLayoutUUID[nBAXdBW]=deserialize_uint8_t(name["members"]["optimalTilingLayoutUUID"]["members"][nBAXdBW]);}();;
        }
        }();
[&]() {
[&]() {
result.identicalMemoryTypeRequirements=deserialize_uint32_t(name["members"]["identicalMemoryTypeRequirements"]);}();}();
return result;}

    json serialize_VkMemoryToImageCopyEXT(VkMemoryToImageCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_pSYtOWR=json({});
    
        if (name.pHostPointer==NULL){
            return_pSYtOWR["null"]=true;
            return return_pSYtOWR;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_ygqdhkD=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_BzySeIY=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_OusFfMz=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_MUCANiu=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WESMOjr=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkMemoryToImageCopyEXT deserialize_VkMemoryToImageCopyEXT(json name){
        auto result=VkMemoryToImageCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
void* temp_QewrUkf;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_QewrUkf=NULL;
        }
    temp_QewrUkf=deserialize_void_p(name["members"]["pHostPointer"]);
}();result.pHostPointer=temp_QewrUkf;}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageToMemoryCopyEXT(VkImageToMemoryCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_pMvQOZh=json({});
    
        if (name.pHostPointer==NULL){
            return_pMvQOZh["null"]=true;
            return return_pMvQOZh;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_ygqdhkD=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_BzySeIY=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_OusFfMz=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_MUCANiu=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WESMOjr=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkImageToMemoryCopyEXT deserialize_VkImageToMemoryCopyEXT(json name){
        auto result=VkImageToMemoryCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryToImageInfoEXT(VkCopyMemoryToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wuOHARY=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_cKIrSCI=json({});
    
        if (name.pRegions==NULL){
            return_cKIrSCI["null"]=true;
            return return_cKIrSCI;
        }
        
        return_cKIrSCI["members"]={};
        for(int cKIrSCI=0; cKIrSCI < name.regionCount; cKIrSCI++){
            json temp;
            temp=[&]() {
    json return_eXRIZdL=json({});
    return serialize_VkMemoryToImageCopyEXT(name.pRegions[cKIrSCI]);}();
            return_cKIrSCI["members"][std::to_string(cKIrSCI)].push_back(temp);
        }
        return return_cKIrSCI;
        }();
return result;}

    VkCopyMemoryToImageInfoEXT deserialize_VkCopyMemoryToImageInfoEXT(json name){
        auto result=VkCopyMemoryToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkMemoryToImageCopyEXT* temp_wipNWqs;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_wipNWqs=NULL;
        }
    temp_wipNWqs=(VkMemoryToImageCopyEXT*)malloc(result.regionCount*sizeof(VkMemoryToImageCopyEXT));
        for (int ZaULZmw=0; ZaULZmw < result.regionCount; ZaULZmw++){
            [&]() {
temp_wipNWqs[ZaULZmw]=deserialize_VkMemoryToImageCopyEXT(name["members"]["pRegions"]["members"][ZaULZmw]);}();;
        }
        }();result.pRegions=temp_wipNWqs;}();
return result;}

    json serialize_VkCopyImageToMemoryInfoEXT(VkCopyImageToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wuOHARY=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_UDuvumC=json({});
    
        if (name.pRegions==NULL){
            return_UDuvumC["null"]=true;
            return return_UDuvumC;
        }
        
        return_UDuvumC["members"]={};
        for(int UDuvumC=0; UDuvumC < name.regionCount; UDuvumC++){
            json temp;
            temp=[&]() {
    json return_TQmuTKW=json({});
    return serialize_VkImageToMemoryCopyEXT(name.pRegions[UDuvumC]);}();
            return_UDuvumC["members"][std::to_string(UDuvumC)].push_back(temp);
        }
        return return_UDuvumC;
        }();
return result;}

    VkCopyImageToMemoryInfoEXT deserialize_VkCopyImageToMemoryInfoEXT(json name){
        auto result=VkCopyImageToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageToMemoryCopyEXT* temp_jzCTKFG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_jzCTKFG=NULL;
        }
    temp_jzCTKFG=(VkImageToMemoryCopyEXT*)malloc(result.regionCount*sizeof(VkImageToMemoryCopyEXT));
        for (int BQCUMdC=0; BQCUMdC < result.regionCount; BQCUMdC++){
            [&]() {
temp_jzCTKFG[BQCUMdC]=deserialize_VkImageToMemoryCopyEXT(name["members"]["pRegions"]["members"][BQCUMdC]);}();;
        }
        }();result.pRegions=temp_jzCTKFG;}();
return result;}

    json serialize_VkCopyImageToImageInfoEXT(VkCopyImageToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wuOHARY=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_ZTkHqcA=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_igYuWPk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rifusCm=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OngVWKP=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_UvLyNNY=json({});
    
        if (name.pRegions==NULL){
            return_UvLyNNY["null"]=true;
            return return_UvLyNNY;
        }
        
        return_UvLyNNY["members"]={};
        for(int UvLyNNY=0; UvLyNNY < name.regionCount; UvLyNNY++){
            json temp;
            temp=[&]() {
    json return_NSmsBUc=json({});
    return serialize_VkImageCopy2(name.pRegions[UvLyNNY]);}();
            return_UvLyNNY["members"][std::to_string(UvLyNNY)].push_back(temp);
        }
        return return_UvLyNNY;
        }();
return result;}

    VkCopyImageToImageInfoEXT deserialize_VkCopyImageToImageInfoEXT(json name){
        auto result=VkCopyImageToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_lAWrQXM;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_lAWrQXM=NULL;
        }
    temp_lAWrQXM=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int xDybKns=0; xDybKns < result.regionCount; xDybKns++){
            [&]() {
temp_lAWrQXM[xDybKns]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][xDybKns]);}();;
        }
        }();result.pRegions=temp_lAWrQXM;}();
return result;}

    json serialize_VkHostImageLayoutTransitionInfoEXT(VkHostImageLayoutTransitionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["oldLayout"]=[&]() {
    json return_rCwsJVl=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_zLfnkid=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["subresourceRange"]=[&]() {
    json return_bsHqPsS=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkHostImageLayoutTransitionInfoEXT deserialize_VkHostImageLayoutTransitionInfoEXT(json name){
        auto result=VkHostImageLayoutTransitionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkSubresourceHostMemcpySizeEXT(VkSubresourceHostMemcpySizeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkSubresourceHostMemcpySizeEXT deserialize_VkSubresourceHostMemcpySizeEXT(json name){
        auto result=VkSubresourceHostMemcpySizeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkHostImageCopyDevicePerformanceQueryEXT(VkHostImageCopyDevicePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimalDeviceAccess"]=[&]() {
    json return_QrkyHXJ=json({});
    return_QrkyHXJ=[&]() {
    json return_ZkhaEKh=json({});
    return serialize_uint32_t(name.optimalDeviceAccess);}();return return_QrkyHXJ;}();
result["members"]["identicalMemoryLayout"]=[&]() {
    json return_xmicAWY=json({});
    return_xmicAWY=[&]() {
    json return_JQuQJhc=json({});
    return serialize_uint32_t(name.identicalMemoryLayout);}();return return_xmicAWY;}();
return result;}

    VkHostImageCopyDevicePerformanceQueryEXT deserialize_VkHostImageCopyDevicePerformanceQueryEXT(json name){
        auto result=VkHostImageCopyDevicePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimalDeviceAccess=deserialize_uint32_t(name["members"]["optimalDeviceAccess"]);}();}();
[&]() {
[&]() {
result.identicalMemoryLayout=deserialize_uint32_t(name["members"]["identicalMemoryLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitivesGeneratedQuery"]=[&]() {
    json return_ekJEKWa=json({});
    return_ekJEKWa=[&]() {
    json return_eWrmivp=json({});
    return serialize_uint32_t(name.primitivesGeneratedQuery);}();return return_ekJEKWa;}();
result["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]=[&]() {
    json return_STiZXmi=json({});
    return_STiZXmi=[&]() {
    json return_uMHlzWv=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithRasterizerDiscard);}();return return_STiZXmi;}();
result["members"]["primitivesGeneratedQueryWithNonZeroStreams"]=[&]() {
    json return_IylBliy=json({});
    return_IylBliy=[&]() {
    json return_FtSmWSg=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithNonZeroStreams);}();return return_IylBliy;}();
return result;}

    VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitivesGeneratedQuery=deserialize_uint32_t(name["members"]["primitivesGeneratedQuery"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithRasterizerDiscard=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithNonZeroStreams=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithNonZeroStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(VkPhysicalDeviceLegacyDitheringFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["legacyDithering"]=[&]() {
    json return_ZXiyDQg=json({});
    return_ZXiyDQg=[&]() {
    json return_xrjVkND=json({});
    return serialize_uint32_t(name.legacyDithering);}();return return_ZXiyDQg;}();
return result;}

    VkPhysicalDeviceLegacyDitheringFeaturesEXT deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLegacyDitheringFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.legacyDithering=deserialize_uint32_t(name["members"]["legacyDithering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampled"]=[&]() {
    json return_QeJNgjw=json({});
    return_QeJNgjw=[&]() {
    json return_igBIJqE=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampled);}();return return_QeJNgjw;}();
return result;}

    VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampled=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampled"]);}();}();
return result;}

    json serialize_VkSubpassResolvePerformanceQueryEXT(VkSubpassResolvePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimal"]=[&]() {
    json return_RHmOhEh=json({});
    return_RHmOhEh=[&]() {
    json return_YVIeTVY=json({});
    return serialize_uint32_t(name.optimal);}();return return_RHmOhEh;}();
return result;}

    VkSubpassResolvePerformanceQueryEXT deserialize_VkSubpassResolvePerformanceQueryEXT(json name){
        auto result=VkSubpassResolvePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimal=deserialize_uint32_t(name["members"]["optimal"]);}();}();
return result;}

    json serialize_VkMultisampledRenderToSingleSampledInfoEXT(VkMultisampledRenderToSingleSampledInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampledEnable"]=[&]() {
    json return_PdiknNC=json({});
    return_PdiknNC=[&]() {
    json return_QAzGIkJ=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampledEnable);}();return return_PdiknNC;}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_solYlXE=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkMultisampledRenderToSingleSampledInfoEXT deserialize_VkMultisampledRenderToSingleSampledInfoEXT(json name){
        auto result=VkMultisampledRenderToSingleSampledInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampledEnable=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampledEnable"]);}();}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineProtectedAccess"]=[&]() {
    json return_bLiuPFE=json({});
    return_bLiuPFE=[&]() {
    json return_fEWxPZY=json({});
    return serialize_uint32_t(name.pipelineProtectedAccess);}();return return_bLiuPFE;}();
return result;}

    VkPhysicalDevicePipelineProtectedAccessFeaturesEXT deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineProtectedAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineProtectedAccess=deserialize_uint32_t(name["members"]["pipelineProtectedAccess"]);}();}();
return result;}

    json serialize_VkQueueFamilyVideoPropertiesKHR(VkQueueFamilyVideoPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperations"]=[&]() {
    json return_qoiIKqY=json({});
    return serialize_VkVideoCodecOperationFlagsKHR(name.videoCodecOperations);}();
return result;}

    VkQueueFamilyVideoPropertiesKHR deserialize_VkQueueFamilyVideoPropertiesKHR(json name){
        auto result=VkQueueFamilyVideoPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.videoCodecOperations=deserialize_VkVideoCodecOperationFlagsKHR(name["members"]["videoCodecOperations"]);}();
return result;}

    json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(VkQueueFamilyQueryResultStatusPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queryResultStatusSupport"]=[&]() {
    json return_SunIBUF=json({});
    return_SunIBUF=[&]() {
    json return_xKcLugD=json({});
    return serialize_uint32_t(name.queryResultStatusSupport);}();return return_SunIBUF;}();
return result;}

    VkQueueFamilyQueryResultStatusPropertiesKHR deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(json name){
        auto result=VkQueueFamilyQueryResultStatusPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.queryResultStatusSupport=deserialize_uint32_t(name["members"]["queryResultStatusSupport"]);}();}();
return result;}

    json serialize_VkVideoProfileListInfoKHR(VkVideoProfileListInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["profileCount"]=[&]() {
    json return_EZemuCp=json({});
    return serialize_uint32_t(name.profileCount);}();
result["members"]["pProfiles"]=[&]() {
    json return_YbfXjEL=json({});
    
        if (name.pProfiles==NULL){
            return_YbfXjEL["null"]=true;
            return return_YbfXjEL;
        }
        
        return_YbfXjEL["members"]={};
        for(int YbfXjEL=0; YbfXjEL < name.profileCount; YbfXjEL++){
            json temp;
            temp=[&]() {
    json return_Hypbwzo=json({});
    return serialize_VkVideoProfileInfoKHR(name.pProfiles[YbfXjEL]);}();
            return_YbfXjEL["members"][std::to_string(YbfXjEL)].push_back(temp);
        }
        return return_YbfXjEL;
        }();
return result;}

    VkVideoProfileListInfoKHR deserialize_VkVideoProfileListInfoKHR(json name){
        auto result=VkVideoProfileListInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.profileCount=deserialize_uint32_t(name["members"]["profileCount"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_zCkFNle;[&]() {

        if (name["members"]["pProfiles"].contains("null")){
        temp_zCkFNle=NULL;
        }
    temp_zCkFNle=(VkVideoProfileInfoKHR*)malloc(result.profileCount*sizeof(VkVideoProfileInfoKHR));
        for (int oCgiNnY=0; oCgiNnY < result.profileCount; oCgiNnY++){
            [&]() {
temp_zCkFNle[oCgiNnY]=deserialize_VkVideoProfileInfoKHR(name["members"]["pProfiles"]["members"][oCgiNnY]);}();;
        }
        }();result.pProfiles=temp_zCkFNle;}();
return result;}

    json serialize_VkPhysicalDeviceVideoFormatInfoKHR(VkPhysicalDeviceVideoFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageUsage"]=[&]() {
    json return_Svpqjwu=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
return result;}

    VkPhysicalDeviceVideoFormatInfoKHR deserialize_VkPhysicalDeviceVideoFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceVideoFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
return result;}

    json serialize_VkVideoFormatPropertiesKHR(VkVideoFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["componentMapping"]=[&]() {
    json return_NEMzvOz=json({});
    return serialize_VkComponentMapping(name.componentMapping);}();
result["members"]["imageCreateFlags"]=[&]() {
    json return_zYsTZXL=json({});
    return serialize_VkImageCreateFlags(name.imageCreateFlags);}();
result["members"]["imageType"]=[&]() {
    json return_ONBhMkL=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["imageTiling"]=[&]() {
    json return_KQdQzNS=json({});
    return serialize_VkImageTiling(name.imageTiling);}();
result["members"]["imageUsageFlags"]=[&]() {
    json return_oILJxlW=json({});
    return serialize_VkImageUsageFlags(name.imageUsageFlags);}();
return result;}

    VkVideoFormatPropertiesKHR deserialize_VkVideoFormatPropertiesKHR(json name){
        auto result=VkVideoFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.componentMapping=deserialize_VkComponentMapping(name["members"]["componentMapping"]);}();
[&]() {
result.imageCreateFlags=deserialize_VkImageCreateFlags(name["members"]["imageCreateFlags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.imageTiling=deserialize_VkImageTiling(name["members"]["imageTiling"]);}();
[&]() {
result.imageUsageFlags=deserialize_VkImageUsageFlags(name["members"]["imageUsageFlags"]);}();
return result;}

    json serialize_VkVideoProfileInfoKHR(VkVideoProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperation"]=[&]() {
    json return_HhihgnW=json({});
    return serialize_VkVideoCodecOperationFlagBitsKHR(name.videoCodecOperation);}();
result["members"]["chromaSubsampling"]=[&]() {
    json return_tWWkAva=json({});
    return serialize_VkVideoChromaSubsamplingFlagsKHR(name.chromaSubsampling);}();
result["members"]["lumaBitDepth"]=[&]() {
    json return_jORnIld=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.lumaBitDepth);}();
result["members"]["chromaBitDepth"]=[&]() {
    json return_vHVZTFO=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.chromaBitDepth);}();
return result;}

    VkVideoProfileInfoKHR deserialize_VkVideoProfileInfoKHR(json name){
        auto result=VkVideoProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.videoCodecOperation=deserialize_VkVideoCodecOperationFlagBitsKHR(name["members"]["videoCodecOperation"]);}();
[&]() {
result.chromaSubsampling=deserialize_VkVideoChromaSubsamplingFlagsKHR(name["members"]["chromaSubsampling"]);}();
[&]() {
result.lumaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["lumaBitDepth"]);}();
[&]() {
result.chromaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["chromaBitDepth"]);}();
return result;}

    json serialize_VkVideoCapabilitiesKHR(VkVideoCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yOyCoBP=json({});
    return serialize_VkVideoCapabilityFlagsKHR(name.flags);}();
result["members"]["minBitstreamBufferOffsetAlignment"]=[&]() {
    json return_DubFPlQ=json({});
    return_DubFPlQ=[&]() {
    json return_ZIvcOEi=json({});
    return serialize_uint64_t(name.minBitstreamBufferOffsetAlignment);}();return return_DubFPlQ;}();
result["members"]["minBitstreamBufferSizeAlignment"]=[&]() {
    json return_EHRiNNU=json({});
    return_EHRiNNU=[&]() {
    json return_ztITqvZ=json({});
    return serialize_uint64_t(name.minBitstreamBufferSizeAlignment);}();return return_EHRiNNU;}();
result["members"]["pictureAccessGranularity"]=[&]() {
    json return_pbQzgcd=json({});
    return serialize_VkExtent2D(name.pictureAccessGranularity);}();
result["members"]["minCodedExtent"]=[&]() {
    json return_DjMkHGx=json({});
    return serialize_VkExtent2D(name.minCodedExtent);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_RPajdLn=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_PCqpQFr=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_wrSLzQh=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["stdHeaderVersion"]=[&]() {
    json return_xfvSXHc=json({});
    return serialize_VkExtensionProperties(name.stdHeaderVersion);}();
return result;}

    VkVideoCapabilitiesKHR deserialize_VkVideoCapabilitiesKHR(json name){
        auto result=VkVideoCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoCapabilityFlagsKHR(name["members"]["flags"]);}();
[&]() {
[&]() {
result.minBitstreamBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minBitstreamBufferSizeAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferSizeAlignment"]);}();}();
[&]() {
result.pictureAccessGranularity=deserialize_VkExtent2D(name["members"]["pictureAccessGranularity"]);}();
[&]() {
result.minCodedExtent=deserialize_VkExtent2D(name["members"]["minCodedExtent"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
result.stdHeaderVersion=deserialize_VkExtensionProperties(name["members"]["stdHeaderVersion"]);}();
return result;}

    json serialize_VkVideoSessionMemoryRequirementsKHR(VkVideoSessionMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_dJvlNDD=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_BdQGzca=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkVideoSessionMemoryRequirementsKHR deserialize_VkVideoSessionMemoryRequirementsKHR(json name){
        auto result=VkVideoSessionMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkBindVideoSessionMemoryInfoKHR(VkBindVideoSessionMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_dJvlNDD=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xcDDiSm=json({});
    return_xcDDiSm=[&]() {
    json return_hEFRjEi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xcDDiSm;}();
result["members"]["memorySize"]=[&]() {
    json return_HhMrjlI=json({});
    return_HhMrjlI=[&]() {
    json return_qwHdRcF=json({});
    return serialize_uint64_t(name.memorySize);}();return return_HhMrjlI;}();
return result;}

    VkBindVideoSessionMemoryInfoKHR deserialize_VkBindVideoSessionMemoryInfoKHR(json name){
        auto result=VkBindVideoSessionMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
[&]() {
result.memorySize=deserialize_uint64_t(name["members"]["memorySize"]);}();}();
return result;}

    json serialize_VkVideoPictureResourceInfoKHR(VkVideoPictureResourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["codedOffset"]=[&]() {
    json return_iHccqiV=json({});
    return serialize_VkOffset2D(name.codedOffset);}();
result["members"]["codedExtent"]=[&]() {
    json return_NkSYxkz=json({});
    return serialize_VkExtent2D(name.codedExtent);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_ZZfGoEh=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["imageViewBinding"]=[&]() {
    json return_wygSPbR=json({});
    return serialize_VkImageView(name.imageViewBinding);}();
return result;}

    VkVideoPictureResourceInfoKHR deserialize_VkVideoPictureResourceInfoKHR(json name){
        auto result=VkVideoPictureResourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.codedOffset=deserialize_VkOffset2D(name["members"]["codedOffset"]);}();
[&]() {
result.codedExtent=deserialize_VkExtent2D(name["members"]["codedExtent"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.imageViewBinding=deserialize_VkImageView(name["members"]["imageViewBinding"]);}();
return result;}

    json serialize_VkVideoReferenceSlotInfoKHR(VkVideoReferenceSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["slotIndex"]=[&]() {
    json return_TbGhVoW=json({});
    return serialize_int32_t(name.slotIndex);}();
result["members"]["pPictureResource"]=[&]() {
    json return_ICaQvOd=json({});
    
        if (name.pPictureResource==NULL){
            return_ICaQvOd["null"]=true;
            return return_ICaQvOd;
        }
        return_ICaQvOd=[&]() {
    json return_TnVUpfj=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*name.pPictureResource);}();
return return_ICaQvOd;}();
return result;}

    VkVideoReferenceSlotInfoKHR deserialize_VkVideoReferenceSlotInfoKHR(json name){
        auto result=VkVideoReferenceSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.slotIndex=deserialize_int32_t(name["members"]["slotIndex"]);}();
[&]() {
VkVideoPictureResourceInfoKHR* temp_LZrQXxb;[&]() {

        if (name["members"]["pPictureResource"].contains("null")){
        temp_LZrQXxb=NULL;
        }
    [&]() {
*(temp_LZrQXxb)=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["pPictureResource"]);}();
}();result.pPictureResource=temp_LZrQXxb;}();
return result;}

    json serialize_VkVideoDecodeCapabilitiesKHR(VkVideoDecodeCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tSIRgKM=json({});
    return serialize_VkVideoDecodeCapabilityFlagsKHR(name.flags);}();
return result;}

    VkVideoDecodeCapabilitiesKHR deserialize_VkVideoDecodeCapabilitiesKHR(json name){
        auto result=VkVideoDecodeCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoDecodeCapabilityFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoDecodeUsageInfoKHR(VkVideoDecodeUsageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoUsageHints"]=[&]() {
    json return_TDIzbQC=json({});
    return serialize_VkVideoDecodeUsageFlagsKHR(name.videoUsageHints);}();
return result;}

    VkVideoDecodeUsageInfoKHR deserialize_VkVideoDecodeUsageInfoKHR(json name){
        auto result=VkVideoDecodeUsageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.videoUsageHints=deserialize_VkVideoDecodeUsageFlagsKHR(name["members"]["videoUsageHints"]);}();
return result;}

    json serialize_VkVideoDecodeInfoKHR(VkVideoDecodeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lZqyALl=json({});
    return serialize_VkVideoDecodeFlagsKHR(name.flags);}();
result["members"]["srcBuffer"]=[&]() {
    json return_ftaWhqw=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["srcBufferOffset"]=[&]() {
    json return_hVTKCSJ=json({});
    return_hVTKCSJ=[&]() {
    json return_UhJjguq=json({});
    return serialize_uint64_t(name.srcBufferOffset);}();return return_hVTKCSJ;}();
result["members"]["srcBufferRange"]=[&]() {
    json return_kvBcKYQ=json({});
    return_kvBcKYQ=[&]() {
    json return_FjUbcOU=json({});
    return serialize_uint64_t(name.srcBufferRange);}();return return_kvBcKYQ;}();
result["members"]["dstPictureResource"]=[&]() {
    json return_ZSrqyie=json({});
    return serialize_VkVideoPictureResourceInfoKHR(name.dstPictureResource);}();
result["members"]["pSetupReferenceSlot"]=[&]() {
    json return_nypRQsi=json({});
    
        if (name.pSetupReferenceSlot==NULL){
            return_nypRQsi["null"]=true;
            return return_nypRQsi;
        }
        return_nypRQsi=[&]() {
    json return_qoxDIkg=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*name.pSetupReferenceSlot);}();
return return_nypRQsi;}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_gCmMCVS=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_OGtXEMu=json({});
    
        if (name.pReferenceSlots==NULL){
            return_OGtXEMu["null"]=true;
            return return_OGtXEMu;
        }
        
        return_OGtXEMu["members"]={};
        for(int OGtXEMu=0; OGtXEMu < name.referenceSlotCount; OGtXEMu++){
            json temp;
            temp=[&]() {
    json return_aEmVYnp=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[OGtXEMu]);}();
            return_OGtXEMu["members"][std::to_string(OGtXEMu)].push_back(temp);
        }
        return return_OGtXEMu;
        }();
return result;}

    VkVideoDecodeInfoKHR deserialize_VkVideoDecodeInfoKHR(json name){
        auto result=VkVideoDecodeInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkVideoDecodeFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
[&]() {
result.srcBufferOffset=deserialize_uint64_t(name["members"]["srcBufferOffset"]);}();}();
[&]() {
[&]() {
result.srcBufferRange=deserialize_uint64_t(name["members"]["srcBufferRange"]);}();}();
[&]() {
result.dstPictureResource=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["dstPictureResource"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_aJtuRpQ;[&]() {

        if (name["members"]["pSetupReferenceSlot"].contains("null")){
        temp_aJtuRpQ=NULL;
        }
    [&]() {
*(temp_aJtuRpQ)=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pSetupReferenceSlot"]);}();
}();result.pSetupReferenceSlot=temp_aJtuRpQ;}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_FEklcRM;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_FEklcRM=NULL;
        }
    temp_FEklcRM=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int IzUpeuB=0; IzUpeuB < result.referenceSlotCount; IzUpeuB++){
            [&]() {
temp_FEklcRM[IzUpeuB]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][IzUpeuB]);}();;
        }
        }();result.pReferenceSlots=temp_FEklcRM;}();
return result;}

    json serialize_VkVideoDecodeH264ProfileInfoKHR(VkVideoDecodeH264ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_JUHPUzh=json({});
    return serialize_StdVideoH264ProfileIdc(name.stdProfileIdc);
}();
result["members"]["pictureLayout"]=[&]() {
    json return_LGDoGKb=json({});
    return serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name.pictureLayout);}();
return result;}

    VkVideoDecodeH264ProfileInfoKHR deserialize_VkVideoDecodeH264ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH264ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH264ProfileIdc(name["members"]["stdProfileIdc"]);
}();
[&]() {
result.pictureLayout=deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name["members"]["pictureLayout"]);}();
return result;}

    json serialize_VkVideoDecodeH264CapabilitiesKHR(VkVideoDecodeH264CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_cfiXANz=json({});
    return serialize_StdVideoH264LevelIdc(name.maxLevelIdc);
}();
result["members"]["fieldOffsetGranularity"]=[&]() {
    json return_DqWunGB=json({});
    return serialize_VkOffset2D(name.fieldOffsetGranularity);}();
return result;}

    VkVideoDecodeH264CapabilitiesKHR deserialize_VkVideoDecodeH264CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH264CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH264LevelIdc(name["members"]["maxLevelIdc"]);
}();
[&]() {
result.fieldOffsetGranularity=deserialize_VkOffset2D(name["members"]["fieldOffsetGranularity"]);}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(VkVideoDecodeH264SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_njwCUHO=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_CLzKIXz=json({});
    
        if (name.pStdSPSs==NULL){
            return_CLzKIXz["null"]=true;
            return return_CLzKIXz;
        }
        return serialize_StdVideoH264SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_pEWMLbO=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_dAqyfWx=json({});
    
        if (name.pStdPPSs==NULL){
            return_dAqyfWx["null"]=true;
            return return_dAqyfWx;
        }
        return serialize_StdVideoH264PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH264SessionParametersAddInfoKHR deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH264SequenceParameterSet* temp_biFImCU;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_biFImCU=NULL;
        }
    temp_biFImCU=deserialize_StdVideoH264SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_biFImCU;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH264PictureParameterSet* temp_vgyJlla;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_vgyJlla=NULL;
        }
    temp_vgyJlla=deserialize_StdVideoH264PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_vgyJlla;}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(VkVideoDecodeH264SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_YsBgNJF=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_LsmWTYw=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_OIMIcOR=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_OIMIcOR["null"]=true;
            return return_OIMIcOR;
        }
        return_OIMIcOR=[&]() {
    json return_yzSSOOx=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_OIMIcOR;}();
return result;}

    VkVideoDecodeH264SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH264SessionParametersAddInfoKHR* temp_kiBYWDx;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_kiBYWDx=NULL;
        }
    [&]() {
*(temp_kiBYWDx)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_kiBYWDx;}();
return result;}

    json serialize_VkVideoDecodeH264PictureInfoKHR(VkVideoDecodeH264PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_jDgQWBp=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_jDgQWBp["null"]=true;
            return return_jDgQWBp;
        }
        return serialize_StdVideoDecodeH264PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceCount"]=[&]() {
    json return_IVIhLVY=json({});
    return serialize_uint32_t(name.sliceCount);}();
result["members"]["pSliceOffsets"]=[&]() {
    json return_ThEiRVk=json({});
    
        if (name.pSliceOffsets==NULL){
            return_ThEiRVk["null"]=true;
            return return_ThEiRVk;
        }
        
        return_ThEiRVk["members"]={};
        for(int ThEiRVk=0; ThEiRVk < name.sliceCount; ThEiRVk++){
            json temp;
            temp=[&]() {
    json return_WkXwIqj=json({});
    return serialize_uint32_t(name.pSliceOffsets[ThEiRVk]);}();
            return_ThEiRVk["members"][std::to_string(ThEiRVk)].push_back(temp);
        }
        return return_ThEiRVk;
        }();
return result;}

    VkVideoDecodeH264PictureInfoKHR deserialize_VkVideoDecodeH264PictureInfoKHR(json name){
        auto result=VkVideoDecodeH264PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
StdVideoDecodeH264PictureInfo* temp_SMdLSLw;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_SMdLSLw=NULL;
        }
    temp_SMdLSLw=deserialize_StdVideoDecodeH264PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_SMdLSLw;}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
[&]() {
uint32_t* temp_iOWZRHv;[&]() {

        if (name["members"]["pSliceOffsets"].contains("null")){
        temp_iOWZRHv=NULL;
        }
    temp_iOWZRHv=(uint32_t*)malloc(result.sliceCount*sizeof(uint32_t));
        for (int HNPSdPh=0; HNPSdPh < result.sliceCount; HNPSdPh++){
            [&]() {
temp_iOWZRHv[HNPSdPh]=deserialize_uint32_t(name["members"]["pSliceOffsets"]["members"][HNPSdPh]);}();;
        }
        }();result.pSliceOffsets=temp_iOWZRHv;}();
return result;}

    json serialize_VkVideoDecodeH264DpbSlotInfoKHR(VkVideoDecodeH264DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_TPunWJt=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_TPunWJt["null"]=true;
            return return_TPunWJt;
        }
        return serialize_StdVideoDecodeH264ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH264DpbSlotInfoKHR deserialize_VkVideoDecodeH264DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH264DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
StdVideoDecodeH264ReferenceInfo* temp_szmSylq;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_szmSylq=NULL;
        }
    temp_szmSylq=deserialize_StdVideoDecodeH264ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_szmSylq;}();
return result;}

    json serialize_VkVideoDecodeH265ProfileInfoKHR(VkVideoDecodeH265ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_HgXGozG=json({});
    return serialize_StdVideoH265ProfileIdc(name.stdProfileIdc);
}();
return result;}

    VkVideoDecodeH265ProfileInfoKHR deserialize_VkVideoDecodeH265ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH265ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH265ProfileIdc(name["members"]["stdProfileIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265CapabilitiesKHR(VkVideoDecodeH265CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_DrARjft=json({});
    return serialize_StdVideoH265LevelIdc(name.maxLevelIdc);
}();
return result;}

    VkVideoDecodeH265CapabilitiesKHR deserialize_VkVideoDecodeH265CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH265CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH265LevelIdc(name["members"]["maxLevelIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(VkVideoDecodeH265SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdVPSCount"]=[&]() {
    json return_hcfkZey=json({});
    return serialize_uint32_t(name.stdVPSCount);}();
result["members"]["pStdVPSs"]=[&]() {
    json return_gnSHjOl=json({});
    
        if (name.pStdVPSs==NULL){
            return_gnSHjOl["null"]=true;
            return return_gnSHjOl;
        }
        return serialize_StdVideoH265VideoParameterSet_p(name.pStdVPSs);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_njwCUHO=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_Unlehey=json({});
    
        if (name.pStdSPSs==NULL){
            return_Unlehey["null"]=true;
            return return_Unlehey;
        }
        return serialize_StdVideoH265SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_pEWMLbO=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_jlGVrIT=json({});
    
        if (name.pStdPPSs==NULL){
            return_jlGVrIT["null"]=true;
            return return_jlGVrIT;
        }
        return serialize_StdVideoH265PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH265SessionParametersAddInfoKHR deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.stdVPSCount=deserialize_uint32_t(name["members"]["stdVPSCount"]);}();
[&]() {
StdVideoH265VideoParameterSet* temp_uLuLnFX;[&]() {

        if (name["members"]["pStdVPSs"].contains("null")){
        temp_uLuLnFX=NULL;
        }
    temp_uLuLnFX=deserialize_StdVideoH265VideoParameterSet_p(name["members"]["pStdVPSs"]);
}();result.pStdVPSs=temp_uLuLnFX;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH265SequenceParameterSet* temp_wptIktQ;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_wptIktQ=NULL;
        }
    temp_wptIktQ=deserialize_StdVideoH265SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_wptIktQ;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH265PictureParameterSet* temp_pqYmJOx;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_pqYmJOx=NULL;
        }
    temp_pqYmJOx=deserialize_StdVideoH265PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_pqYmJOx;}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(VkVideoDecodeH265SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdVPSCount"]=[&]() {
    json return_tPyEton=json({});
    return serialize_uint32_t(name.maxStdVPSCount);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_YsBgNJF=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_LsmWTYw=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_ntwpWoW=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_ntwpWoW["null"]=true;
            return return_ntwpWoW;
        }
        return_ntwpWoW=[&]() {
    json return_JCEdfbZ=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_ntwpWoW;}();
return result;}

    VkVideoDecodeH265SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.maxStdVPSCount=deserialize_uint32_t(name["members"]["maxStdVPSCount"]);}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH265SessionParametersAddInfoKHR* temp_QWWXbke;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_QWWXbke=NULL;
        }
    [&]() {
*(temp_QWWXbke)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_QWWXbke;}();
return result;}

    json serialize_VkVideoDecodeH265PictureInfoKHR(VkVideoDecodeH265PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_ElPgWST=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_ElPgWST["null"]=true;
            return return_ElPgWST;
        }
        return serialize_StdVideoDecodeH265PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceSegmentCount"]=[&]() {
    json return_zNKLWSo=json({});
    return serialize_uint32_t(name.sliceSegmentCount);}();
result["members"]["pSliceSegmentOffsets"]=[&]() {
    json return_ifPhqzQ=json({});
    
        if (name.pSliceSegmentOffsets==NULL){
            return_ifPhqzQ["null"]=true;
            return return_ifPhqzQ;
        }
        
        return_ifPhqzQ["members"]={};
        for(int ifPhqzQ=0; ifPhqzQ < name.sliceSegmentCount; ifPhqzQ++){
            json temp;
            temp=[&]() {
    json return_PMsRtIo=json({});
    return serialize_uint32_t(name.pSliceSegmentOffsets[ifPhqzQ]);}();
            return_ifPhqzQ["members"][std::to_string(ifPhqzQ)].push_back(temp);
        }
        return return_ifPhqzQ;
        }();
return result;}

    VkVideoDecodeH265PictureInfoKHR deserialize_VkVideoDecodeH265PictureInfoKHR(json name){
        auto result=VkVideoDecodeH265PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
StdVideoDecodeH265PictureInfo* temp_ZufToJH;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_ZufToJH=NULL;
        }
    temp_ZufToJH=deserialize_StdVideoDecodeH265PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_ZufToJH;}();
[&]() {
result.sliceSegmentCount=deserialize_uint32_t(name["members"]["sliceSegmentCount"]);}();
[&]() {
uint32_t* temp_mFxWCgs;[&]() {

        if (name["members"]["pSliceSegmentOffsets"].contains("null")){
        temp_mFxWCgs=NULL;
        }
    temp_mFxWCgs=(uint32_t*)malloc(result.sliceSegmentCount*sizeof(uint32_t));
        for (int JHzUZtN=0; JHzUZtN < result.sliceSegmentCount; JHzUZtN++){
            [&]() {
temp_mFxWCgs[JHzUZtN]=deserialize_uint32_t(name["members"]["pSliceSegmentOffsets"]["members"][JHzUZtN]);}();;
        }
        }();result.pSliceSegmentOffsets=temp_mFxWCgs;}();
return result;}

    json serialize_VkVideoDecodeH265DpbSlotInfoKHR(VkVideoDecodeH265DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_WUnDTjL=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_WUnDTjL["null"]=true;
            return return_WUnDTjL;
        }
        return serialize_StdVideoDecodeH265ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH265DpbSlotInfoKHR deserialize_VkVideoDecodeH265DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH265DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
StdVideoDecodeH265ReferenceInfo* temp_PafRbBx;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_PafRbBx=NULL;
        }
    temp_PafRbBx=deserialize_StdVideoDecodeH265ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_PafRbBx;}();
return result;}

    json serialize_VkVideoSessionCreateInfoKHR(VkVideoSessionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_cQXidFT=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["flags"]=[&]() {
    json return_yNLSwaJ=json({});
    return serialize_VkVideoSessionCreateFlagsKHR(name.flags);}();
result["members"]["pVideoProfile"]=[&]() {
    json return_XZbiMdJ=json({});
    
        if (name.pVideoProfile==NULL){
            return_XZbiMdJ["null"]=true;
            return return_XZbiMdJ;
        }
        return_XZbiMdJ=[&]() {
    json return_XKmlHto=json({});
    return serialize_VkVideoProfileInfoKHR(*name.pVideoProfile);}();
return return_XZbiMdJ;}();
result["members"]["pictureFormat"]=[&]() {
    json return_doaBBhK=json({});
    return serialize_VkFormat(name.pictureFormat);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_RPajdLn=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["referencePictureFormat"]=[&]() {
    json return_rIVZoBh=json({});
    return serialize_VkFormat(name.referencePictureFormat);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_PCqpQFr=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_wrSLzQh=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["pStdHeaderVersion"]=[&]() {
    json return_OWqYQUN=json({});
    
        if (name.pStdHeaderVersion==NULL){
            return_OWqYQUN["null"]=true;
            return return_OWqYQUN;
        }
        return_OWqYQUN=[&]() {
    json return_LZfXYkJ=json({});
    return serialize_VkExtensionProperties(*name.pStdHeaderVersion);}();
return return_OWqYQUN;}();
return result;}

    VkVideoSessionCreateInfoKHR deserialize_VkVideoSessionCreateInfoKHR(json name){
        auto result=VkVideoSessionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.flags=deserialize_VkVideoSessionCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_dNSvgED;[&]() {

        if (name["members"]["pVideoProfile"].contains("null")){
        temp_dNSvgED=NULL;
        }
    [&]() {
*(temp_dNSvgED)=deserialize_VkVideoProfileInfoKHR(name["members"]["pVideoProfile"]);}();
}();result.pVideoProfile=temp_dNSvgED;}();
[&]() {
result.pictureFormat=deserialize_VkFormat(name["members"]["pictureFormat"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.referencePictureFormat=deserialize_VkFormat(name["members"]["referencePictureFormat"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
VkExtensionProperties* temp_zWOZUIH;[&]() {

        if (name["members"]["pStdHeaderVersion"].contains("null")){
        temp_zWOZUIH=NULL;
        }
    [&]() {
*(temp_zWOZUIH)=deserialize_VkExtensionProperties(name["members"]["pStdHeaderVersion"]);}();
}();result.pStdHeaderVersion=temp_zWOZUIH;}();
return result;}

    json serialize_VkVideoSessionParametersCreateInfoKHR(VkVideoSessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XdNhckd=json({});
    return serialize_VkVideoSessionParametersCreateFlagsKHR(name.flags);}();
result["members"]["videoSessionParametersTemplate"]=[&]() {
    json return_erigHVA=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParametersTemplate);}();
result["members"]["videoSession"]=[&]() {
    json return_hWSZIJE=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
return result;}

    VkVideoSessionParametersCreateInfoKHR deserialize_VkVideoSessionParametersCreateInfoKHR(json name){
        auto result=VkVideoSessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkVideoSessionParametersCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSessionParametersTemplate=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParametersTemplate"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
return result;}

    json serialize_VkVideoSessionParametersUpdateInfoKHR(VkVideoSessionParametersUpdateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["updateSequenceCount"]=[&]() {
    json return_COcDfpH=json({});
    return serialize_uint32_t(name.updateSequenceCount);}();
return result;}

    VkVideoSessionParametersUpdateInfoKHR deserialize_VkVideoSessionParametersUpdateInfoKHR(json name){
        auto result=VkVideoSessionParametersUpdateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.updateSequenceCount=deserialize_uint32_t(name["members"]["updateSequenceCount"]);}();
return result;}

    json serialize_VkVideoBeginCodingInfoKHR(VkVideoBeginCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ZpfdBQn=json({});
    return serialize_VkVideoBeginCodingFlagsKHR(name.flags);}();
result["members"]["videoSession"]=[&]() {
    json return_hWSZIJE=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
result["members"]["videoSessionParameters"]=[&]() {
    json return_yLFauwQ=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParameters);}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_gCmMCVS=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_OGtXEMu=json({});
    
        if (name.pReferenceSlots==NULL){
            return_OGtXEMu["null"]=true;
            return return_OGtXEMu;
        }
        
        return_OGtXEMu["members"]={};
        for(int OGtXEMu=0; OGtXEMu < name.referenceSlotCount; OGtXEMu++){
            json temp;
            temp=[&]() {
    json return_aEmVYnp=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[OGtXEMu]);}();
            return_OGtXEMu["members"][std::to_string(OGtXEMu)].push_back(temp);
        }
        return return_OGtXEMu;
        }();
return result;}

    VkVideoBeginCodingInfoKHR deserialize_VkVideoBeginCodingInfoKHR(json name){
        auto result=VkVideoBeginCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkVideoBeginCodingFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
[&]() {
result.videoSessionParameters=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParameters"]);}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_FEklcRM;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_FEklcRM=NULL;
        }
    temp_FEklcRM=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int IzUpeuB=0; IzUpeuB < result.referenceSlotCount; IzUpeuB++){
            [&]() {
temp_FEklcRM[IzUpeuB]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][IzUpeuB]);}();;
        }
        }();result.pReferenceSlots=temp_FEklcRM;}();
return result;}

    json serialize_VkVideoEndCodingInfoKHR(VkVideoEndCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MAEncEg=json({});
    return serialize_VkVideoEndCodingFlagsKHR(name.flags);}();
return result;}

    VkVideoEndCodingInfoKHR deserialize_VkVideoEndCodingInfoKHR(json name){
        auto result=VkVideoEndCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkVideoEndCodingFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoCodingControlInfoKHR(VkVideoCodingControlInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_aBwuueN=json({});
    return serialize_VkVideoCodingControlFlagsKHR(name.flags);}();
return result;}

    VkVideoCodingControlInfoKHR deserialize_VkVideoCodingControlInfoKHR(json name){
        auto result=VkVideoCodingControlInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkVideoCodingControlFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkPhysicalDeviceInheritedViewportScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inheritedViewportScissor2D"]=[&]() {
    json return_eECfVcU=json({});
    return_eECfVcU=[&]() {
    json return_jRaghXy=json({});
    return serialize_uint32_t(name.inheritedViewportScissor2D);}();return return_eECfVcU;}();
return result;}

    VkPhysicalDeviceInheritedViewportScissorFeaturesNV deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceInheritedViewportScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inheritedViewportScissor2D=deserialize_uint32_t(name["members"]["inheritedViewportScissor2D"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceViewportScissorInfoNV(VkCommandBufferInheritanceViewportScissorInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportScissor2D"]=[&]() {
    json return_iqotghG=json({});
    return_iqotghG=[&]() {
    json return_MoBhhWy=json({});
    return serialize_uint32_t(name.viewportScissor2D);}();return return_iqotghG;}();
result["members"]["viewportDepthCount"]=[&]() {
    json return_xbsVdfQ=json({});
    return serialize_uint32_t(name.viewportDepthCount);}();
result["members"]["pViewportDepths"]=[&]() {
    json return_QFFFTZg=json({});
    
        if (name.pViewportDepths==NULL){
            return_QFFFTZg["null"]=true;
            return return_QFFFTZg;
        }
        return_QFFFTZg=[&]() {
    json return_cKzmKdx=json({});
    return serialize_VkViewport(*name.pViewportDepths);}();
return return_QFFFTZg;}();
return result;}

    VkCommandBufferInheritanceViewportScissorInfoNV deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(json name){
        auto result=VkCommandBufferInheritanceViewportScissorInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.viewportScissor2D=deserialize_uint32_t(name["members"]["viewportScissor2D"]);}();}();
[&]() {
result.viewportDepthCount=deserialize_uint32_t(name["members"]["viewportDepthCount"]);}();
[&]() {
VkViewport* temp_YxItYLx;[&]() {

        if (name["members"]["pViewportDepths"].contains("null")){
        temp_YxItYLx=NULL;
        }
    [&]() {
*(temp_YxItYLx)=deserialize_VkViewport(name["members"]["pViewportDepths"]);}();
}();result.pViewportDepths=temp_YxItYLx;}();
return result;}

    json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcr2plane444Formats"]=[&]() {
    json return_lAjeRaT=json({});
    return_lAjeRaT=[&]() {
    json return_xcZEnqy=json({});
    return serialize_uint32_t(name.ycbcr2plane444Formats);}();return return_lAjeRaT;}();
return result;}

    VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcr2plane444Formats=deserialize_uint32_t(name["members"]["ycbcr2plane444Formats"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(VkPhysicalDeviceProvokingVertexFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexLast"]=[&]() {
    json return_XAMSeIC=json({});
    return_XAMSeIC=[&]() {
    json return_BgBpmAW=json({});
    return serialize_uint32_t(name.provokingVertexLast);}();return return_XAMSeIC;}();
result["members"]["transformFeedbackPreservesProvokingVertex"]=[&]() {
    json return_UHcFkPi=json({});
    return_UHcFkPi=[&]() {
    json return_RjvkSta=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesProvokingVertex);}();return return_UHcFkPi;}();
return result;}

    VkPhysicalDeviceProvokingVertexFeaturesEXT deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexLast=deserialize_uint32_t(name["members"]["provokingVertexLast"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(VkPhysicalDeviceProvokingVertexPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexModePerPipeline"]=[&]() {
    json return_KOORsgj=json({});
    return_KOORsgj=[&]() {
    json return_BCXIRua=json({});
    return serialize_uint32_t(name.provokingVertexModePerPipeline);}();return return_KOORsgj;}();
result["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]=[&]() {
    json return_zzMZoeP=json({});
    return_zzMZoeP=[&]() {
    json return_BMNrqBz=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesTriangleFanProvokingVertex);}();return return_zzMZoeP;}();
return result;}

    VkPhysicalDeviceProvokingVertexPropertiesEXT deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexModePerPipeline=deserialize_uint32_t(name["members"]["provokingVertexModePerPipeline"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesTriangleFanProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexMode"]=[&]() {
    json return_NJTUQxw=json({});
    return serialize_VkProvokingVertexModeEXT(name.provokingVertexMode);}();
return result;}

    VkPipelineRasterizationProvokingVertexStateCreateInfoEXT deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationProvokingVertexStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.provokingVertexMode=deserialize_VkProvokingVertexModeEXT(name["members"]["provokingVertexMode"]);}();
return result;}

    json serialize_VkCuModuleCreateInfoNVX(VkCuModuleCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_VwVTWUs=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_dhyZsyp=json({});
    
        if (name.pData==NULL){
            return_dhyZsyp["null"]=true;
            return return_dhyZsyp;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkCuModuleCreateInfoNVX deserialize_VkCuModuleCreateInfoNVX(json name){
        auto result=VkCuModuleCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_wkWXdZT;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_wkWXdZT=NULL;
        }
    temp_wkWXdZT=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_wkWXdZT;}();
return result;}

    json serialize_VkCuFunctionCreateInfoNVX(VkCuFunctionCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["module"]=[&]() {
    json return_ySzwxoQ=json({});
    return serialize_VkCuModuleNVX(name.module);}();
result["members"]["pName"]=[&]() {
    json return_fydPvmv=json({});
    
        if (name.pName==NULL){
            return_fydPvmv["null"]=true;
            return return_fydPvmv;
        }
        return serialize_char_p(name.pName);
}();
return result;}

    VkCuFunctionCreateInfoNVX deserialize_VkCuFunctionCreateInfoNVX(json name){
        auto result=VkCuFunctionCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.module=deserialize_VkCuModuleNVX(name["members"]["module"]);}();
[&]() {
char* temp_uaicPga;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_uaicPga=NULL;
        }
    temp_uaicPga=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_uaicPga;}();
return result;}

    json serialize_VkCuLaunchInfoNVX(VkCuLaunchInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["function"]=[&]() {
    json return_ppCMlDg=json({});
    return serialize_VkCuFunctionNVX(name.function);}();
result["members"]["gridDimX"]=[&]() {
    json return_aoSdaYj=json({});
    return serialize_uint32_t(name.gridDimX);}();
result["members"]["gridDimY"]=[&]() {
    json return_LERIUzX=json({});
    return serialize_uint32_t(name.gridDimY);}();
result["members"]["gridDimZ"]=[&]() {
    json return_CVQXDLQ=json({});
    return serialize_uint32_t(name.gridDimZ);}();
result["members"]["blockDimX"]=[&]() {
    json return_JmdFIqG=json({});
    return serialize_uint32_t(name.blockDimX);}();
result["members"]["blockDimY"]=[&]() {
    json return_UpzdUjA=json({});
    return serialize_uint32_t(name.blockDimY);}();
result["members"]["blockDimZ"]=[&]() {
    json return_dNsvUQk=json({});
    return serialize_uint32_t(name.blockDimZ);}();
result["members"]["sharedMemBytes"]=[&]() {
    json return_lSCqfHM=json({});
    return serialize_uint32_t(name.sharedMemBytes);}();
result["members"]["paramCount"]=[&]() {
    json return_jmpUKnu=json({});
    return serialize_size_t(name.paramCount);}();
result["members"]["pParams"]=[&]() {
    json return_XJDBLNB=json({});
    
        if (name.pParams==NULL){
            return_XJDBLNB["null"]=true;
            return return_XJDBLNB;
        }
        
        return_XJDBLNB["members"]={};
        for(int XJDBLNB=0; XJDBLNB < name.paramCount; XJDBLNB++){
            json temp;
            temp=[&]() {
    json return_WAuXJQd=json({});
    
        if (name.pParams[XJDBLNB]==NULL){
            return_WAuXJQd["null"]=true;
            return return_WAuXJQd;
        }
        return serialize_void_p(name.pParams[XJDBLNB]);
}();
            return_XJDBLNB["members"][std::to_string(XJDBLNB)].push_back(temp);
        }
        return return_XJDBLNB;
        }();
result["members"]["extraCount"]=[&]() {
    json return_OhYwvVk=json({});
    return serialize_size_t(name.extraCount);}();
result["members"]["pExtras"]=[&]() {
    json return_HehQKku=json({});
    
        if (name.pExtras==NULL){
            return_HehQKku["null"]=true;
            return return_HehQKku;
        }
        
        return_HehQKku["members"]={};
        for(int HehQKku=0; HehQKku < name.extraCount; HehQKku++){
            json temp;
            temp=[&]() {
    json return_GWaYIjF=json({});
    
        if (name.pExtras[HehQKku]==NULL){
            return_GWaYIjF["null"]=true;
            return return_GWaYIjF;
        }
        return serialize_void_p(name.pExtras[HehQKku]);
}();
            return_HehQKku["members"][std::to_string(HehQKku)].push_back(temp);
        }
        return return_HehQKku;
        }();
return result;}

    VkCuLaunchInfoNVX deserialize_VkCuLaunchInfoNVX(json name){
        auto result=VkCuLaunchInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.function=deserialize_VkCuFunctionNVX(name["members"]["function"]);}();
[&]() {
result.gridDimX=deserialize_uint32_t(name["members"]["gridDimX"]);}();
[&]() {
result.gridDimY=deserialize_uint32_t(name["members"]["gridDimY"]);}();
[&]() {
result.gridDimZ=deserialize_uint32_t(name["members"]["gridDimZ"]);}();
[&]() {
result.blockDimX=deserialize_uint32_t(name["members"]["blockDimX"]);}();
[&]() {
result.blockDimY=deserialize_uint32_t(name["members"]["blockDimY"]);}();
[&]() {
result.blockDimZ=deserialize_uint32_t(name["members"]["blockDimZ"]);}();
[&]() {
result.sharedMemBytes=deserialize_uint32_t(name["members"]["sharedMemBytes"]);}();
[&]() {
result.paramCount=deserialize_size_t(name["members"]["paramCount"]);}();
[&]() {
void** temp_XxHYlkD;[&]() {

        if (name["members"]["pParams"].contains("null")){
        temp_XxHYlkD=NULL;
        }
    temp_XxHYlkD=(void**)malloc(result.paramCount*sizeof(void*));
        for (int uQaizPl=0; uQaizPl < result.paramCount; uQaizPl++){
            [&]() {

        if (name["members"]["pParams"]["members"][uQaizPl].contains("null")){
        temp_XxHYlkD[uQaizPl]=NULL;
        }
    temp_XxHYlkD[uQaizPl]=deserialize_void_p(name["members"]["pParams"]["members"][uQaizPl]);
}();;
        }
        }();result.pParams=temp_XxHYlkD;}();
[&]() {
result.extraCount=deserialize_size_t(name["members"]["extraCount"]);}();
[&]() {
void** temp_aWFeKHF;[&]() {

        if (name["members"]["pExtras"].contains("null")){
        temp_aWFeKHF=NULL;
        }
    temp_aWFeKHF=(void**)malloc(result.extraCount*sizeof(void*));
        for (int ljpuLzA=0; ljpuLzA < result.extraCount; ljpuLzA++){
            [&]() {

        if (name["members"]["pExtras"]["members"][ljpuLzA].contains("null")){
        temp_aWFeKHF[ljpuLzA]=NULL;
        }
    temp_aWFeKHF[ljpuLzA]=deserialize_void_p(name["members"]["pExtras"]["members"][ljpuLzA]);
}();;
        }
        }();result.pExtras=temp_aWFeKHF;}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkPhysicalDeviceDescriptorBufferFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorBuffer"]=[&]() {
    json return_gLgrMwO=json({});
    return_gLgrMwO=[&]() {
    json return_ZZiKExJ=json({});
    return serialize_uint32_t(name.descriptorBuffer);}();return return_gLgrMwO;}();
result["members"]["descriptorBufferCaptureReplay"]=[&]() {
    json return_NCuStSC=json({});
    return_NCuStSC=[&]() {
    json return_kVsKXMM=json({});
    return serialize_uint32_t(name.descriptorBufferCaptureReplay);}();return return_NCuStSC;}();
result["members"]["descriptorBufferImageLayoutIgnored"]=[&]() {
    json return_ohIGuGD=json({});
    return_ohIGuGD=[&]() {
    json return_dxTACCR=json({});
    return serialize_uint32_t(name.descriptorBufferImageLayoutIgnored);}();return return_ohIGuGD;}();
result["members"]["descriptorBufferPushDescriptors"]=[&]() {
    json return_FVaEcLL=json({});
    return_FVaEcLL=[&]() {
    json return_moUnzgz=json({});
    return serialize_uint32_t(name.descriptorBufferPushDescriptors);}();return return_FVaEcLL;}();
return result;}

    VkPhysicalDeviceDescriptorBufferFeaturesEXT deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorBuffer=deserialize_uint32_t(name["members"]["descriptorBuffer"]);}();}();
[&]() {
[&]() {
result.descriptorBufferCaptureReplay=deserialize_uint32_t(name["members"]["descriptorBufferCaptureReplay"]);}();}();
[&]() {
[&]() {
result.descriptorBufferImageLayoutIgnored=deserialize_uint32_t(name["members"]["descriptorBufferImageLayoutIgnored"]);}();}();
[&]() {
[&]() {
result.descriptorBufferPushDescriptors=deserialize_uint32_t(name["members"]["descriptorBufferPushDescriptors"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkPhysicalDeviceDescriptorBufferPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorSingleArray"]=[&]() {
    json return_AcjBTuL=json({});
    return_AcjBTuL=[&]() {
    json return_LTXeIHo=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorSingleArray);}();return return_AcjBTuL;}();
result["members"]["bufferlessPushDescriptors"]=[&]() {
    json return_RvHxDzn=json({});
    return_RvHxDzn=[&]() {
    json return_JwzMbqG=json({});
    return serialize_uint32_t(name.bufferlessPushDescriptors);}();return return_RvHxDzn;}();
result["members"]["allowSamplerImageViewPostSubmitCreation"]=[&]() {
    json return_yZMpslF=json({});
    return_yZMpslF=[&]() {
    json return_jYgKiAa=json({});
    return serialize_uint32_t(name.allowSamplerImageViewPostSubmitCreation);}();return return_yZMpslF;}();
result["members"]["descriptorBufferOffsetAlignment"]=[&]() {
    json return_yIuxdBP=json({});
    return_yIuxdBP=[&]() {
    json return_WDBDQSm=json({});
    return serialize_uint64_t(name.descriptorBufferOffsetAlignment);}();return return_yIuxdBP;}();
result["members"]["maxDescriptorBufferBindings"]=[&]() {
    json return_xXwoezr=json({});
    return serialize_uint32_t(name.maxDescriptorBufferBindings);}();
result["members"]["maxResourceDescriptorBufferBindings"]=[&]() {
    json return_hBHPITn=json({});
    return serialize_uint32_t(name.maxResourceDescriptorBufferBindings);}();
result["members"]["maxSamplerDescriptorBufferBindings"]=[&]() {
    json return_TMgIzDS=json({});
    return serialize_uint32_t(name.maxSamplerDescriptorBufferBindings);}();
result["members"]["maxEmbeddedImmutableSamplerBindings"]=[&]() {
    json return_GaxUAtH=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplerBindings);}();
result["members"]["maxEmbeddedImmutableSamplers"]=[&]() {
    json return_ihRbSwa=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplers);}();
result["members"]["bufferCaptureReplayDescriptorDataSize"]=[&]() {
    json return_JTLcemE=json({});
    return serialize_size_t(name.bufferCaptureReplayDescriptorDataSize);}();
result["members"]["imageCaptureReplayDescriptorDataSize"]=[&]() {
    json return_knaQmSk=json({});
    return serialize_size_t(name.imageCaptureReplayDescriptorDataSize);}();
result["members"]["imageViewCaptureReplayDescriptorDataSize"]=[&]() {
    json return_cPwtFXr=json({});
    return serialize_size_t(name.imageViewCaptureReplayDescriptorDataSize);}();
result["members"]["samplerCaptureReplayDescriptorDataSize"]=[&]() {
    json return_QzzvlID=json({});
    return serialize_size_t(name.samplerCaptureReplayDescriptorDataSize);}();
result["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]=[&]() {
    json return_AhIjuJO=json({});
    return serialize_size_t(name.accelerationStructureCaptureReplayDescriptorDataSize);}();
result["members"]["samplerDescriptorSize"]=[&]() {
    json return_KvPPspZ=json({});
    return serialize_size_t(name.samplerDescriptorSize);}();
result["members"]["combinedImageSamplerDescriptorSize"]=[&]() {
    json return_HVdUvOa=json({});
    return serialize_size_t(name.combinedImageSamplerDescriptorSize);}();
result["members"]["sampledImageDescriptorSize"]=[&]() {
    json return_GGNZODm=json({});
    return serialize_size_t(name.sampledImageDescriptorSize);}();
result["members"]["storageImageDescriptorSize"]=[&]() {
    json return_PNJmPdk=json({});
    return serialize_size_t(name.storageImageDescriptorSize);}();
result["members"]["uniformTexelBufferDescriptorSize"]=[&]() {
    json return_EjbxUbv=json({});
    return serialize_size_t(name.uniformTexelBufferDescriptorSize);}();
result["members"]["robustUniformTexelBufferDescriptorSize"]=[&]() {
    json return_svRUvIL=json({});
    return serialize_size_t(name.robustUniformTexelBufferDescriptorSize);}();
result["members"]["storageTexelBufferDescriptorSize"]=[&]() {
    json return_ElnjCxk=json({});
    return serialize_size_t(name.storageTexelBufferDescriptorSize);}();
result["members"]["robustStorageTexelBufferDescriptorSize"]=[&]() {
    json return_WSnTAsU=json({});
    return serialize_size_t(name.robustStorageTexelBufferDescriptorSize);}();
result["members"]["uniformBufferDescriptorSize"]=[&]() {
    json return_yWmaHRz=json({});
    return serialize_size_t(name.uniformBufferDescriptorSize);}();
result["members"]["robustUniformBufferDescriptorSize"]=[&]() {
    json return_aPDEkzU=json({});
    return serialize_size_t(name.robustUniformBufferDescriptorSize);}();
result["members"]["storageBufferDescriptorSize"]=[&]() {
    json return_YwCTYTg=json({});
    return serialize_size_t(name.storageBufferDescriptorSize);}();
result["members"]["robustStorageBufferDescriptorSize"]=[&]() {
    json return_pcJZqVU=json({});
    return serialize_size_t(name.robustStorageBufferDescriptorSize);}();
result["members"]["inputAttachmentDescriptorSize"]=[&]() {
    json return_pEpDuSP=json({});
    return serialize_size_t(name.inputAttachmentDescriptorSize);}();
result["members"]["accelerationStructureDescriptorSize"]=[&]() {
    json return_uMwpCuX=json({});
    return serialize_size_t(name.accelerationStructureDescriptorSize);}();
result["members"]["maxSamplerDescriptorBufferRange"]=[&]() {
    json return_OCMCppL=json({});
    return_OCMCppL=[&]() {
    json return_gOlmCPz=json({});
    return serialize_uint64_t(name.maxSamplerDescriptorBufferRange);}();return return_OCMCppL;}();
result["members"]["maxResourceDescriptorBufferRange"]=[&]() {
    json return_PTBtRZs=json({});
    return_PTBtRZs=[&]() {
    json return_hvlEdTB=json({});
    return serialize_uint64_t(name.maxResourceDescriptorBufferRange);}();return return_PTBtRZs;}();
result["members"]["samplerDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_elyojWq=json({});
    return_elyojWq=[&]() {
    json return_JLwNWfs=json({});
    return serialize_uint64_t(name.samplerDescriptorBufferAddressSpaceSize);}();return return_elyojWq;}();
result["members"]["resourceDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_SwRwrWa=json({});
    return_SwRwrWa=[&]() {
    json return_rGhrMAj=json({});
    return serialize_uint64_t(name.resourceDescriptorBufferAddressSpaceSize);}();return return_SwRwrWa;}();
result["members"]["descriptorBufferAddressSpaceSize"]=[&]() {
    json return_nnCWmXV=json({});
    return_nnCWmXV=[&]() {
    json return_AvKyZyW=json({});
    return serialize_uint64_t(name.descriptorBufferAddressSpaceSize);}();return return_nnCWmXV;}();
return result;}

    VkPhysicalDeviceDescriptorBufferPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.combinedImageSamplerDescriptorSingleArray=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorSingleArray"]);}();}();
[&]() {
[&]() {
result.bufferlessPushDescriptors=deserialize_uint32_t(name["members"]["bufferlessPushDescriptors"]);}();}();
[&]() {
[&]() {
result.allowSamplerImageViewPostSubmitCreation=deserialize_uint32_t(name["members"]["allowSamplerImageViewPostSubmitCreation"]);}();}();
[&]() {
[&]() {
result.descriptorBufferOffsetAlignment=deserialize_uint64_t(name["members"]["descriptorBufferOffsetAlignment"]);}();}();
[&]() {
result.maxDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxDescriptorBufferBindings"]);}();
[&]() {
result.maxResourceDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxResourceDescriptorBufferBindings"]);}();
[&]() {
result.maxSamplerDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxSamplerDescriptorBufferBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplerBindings=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplerBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplers=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplers"]);}();
[&]() {
result.bufferCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["bufferCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageViewCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageViewCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["samplerCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.accelerationStructureCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerDescriptorSize=deserialize_size_t(name["members"]["samplerDescriptorSize"]);}();
[&]() {
result.combinedImageSamplerDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDescriptorSize"]);}();
[&]() {
result.sampledImageDescriptorSize=deserialize_size_t(name["members"]["sampledImageDescriptorSize"]);}();
[&]() {
result.storageImageDescriptorSize=deserialize_size_t(name["members"]["storageImageDescriptorSize"]);}();
[&]() {
result.uniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["uniformTexelBufferDescriptorSize"]);}();
[&]() {
result.robustUniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformTexelBufferDescriptorSize"]);}();
[&]() {
result.storageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["storageTexelBufferDescriptorSize"]);}();
[&]() {
result.robustStorageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageTexelBufferDescriptorSize"]);}();
[&]() {
result.uniformBufferDescriptorSize=deserialize_size_t(name["members"]["uniformBufferDescriptorSize"]);}();
[&]() {
result.robustUniformBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformBufferDescriptorSize"]);}();
[&]() {
result.storageBufferDescriptorSize=deserialize_size_t(name["members"]["storageBufferDescriptorSize"]);}();
[&]() {
result.robustStorageBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageBufferDescriptorSize"]);}();
[&]() {
result.inputAttachmentDescriptorSize=deserialize_size_t(name["members"]["inputAttachmentDescriptorSize"]);}();
[&]() {
result.accelerationStructureDescriptorSize=deserialize_size_t(name["members"]["accelerationStructureDescriptorSize"]);}();
[&]() {
[&]() {
result.maxSamplerDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxSamplerDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.maxResourceDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxResourceDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.samplerDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["samplerDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.resourceDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["resourceDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.descriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["descriptorBufferAddressSpaceSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDensityMapDescriptorSize"]=[&]() {
    json return_jWCAfuE=json({});
    return serialize_size_t(name.combinedImageSamplerDensityMapDescriptorSize);}();
return result;}

    VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDensityMapDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDensityMapDescriptorSize"]);}();
return result;}

    json serialize_VkDescriptorAddressInfoEXT(VkDescriptorAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_CFmEquG=json({});
    return_CFmEquG=[&]() {
    json return_iXNOzrK=json({});
    return serialize_uint64_t(name.address);}();return return_CFmEquG;}();
result["members"]["range"]=[&]() {
    json return_MgrzvYV=json({});
    return_MgrzvYV=[&]() {
    json return_QywazbL=json({});
    return serialize_uint64_t(name.range);}();return return_MgrzvYV;}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkDescriptorAddressInfoEXT deserialize_VkDescriptorAddressInfoEXT(json name){
        auto result=VkDescriptorAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingInfoEXT(VkDescriptorBufferBindingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_CFmEquG=json({});
    return_CFmEquG=[&]() {
    json return_iXNOzrK=json({});
    return serialize_uint64_t(name.address);}();return return_CFmEquG;}();
result["members"]["usage"]=[&]() {
    json return_ehpSOyF=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
return result;}

    VkDescriptorBufferBindingInfoEXT deserialize_VkDescriptorBufferBindingInfoEXT(json name){
        auto result=VkDescriptorBufferBindingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDescriptorBufferBindingPushDescriptorBufferHandleEXT deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(json name){
        auto result=VkDescriptorBufferBindingPushDescriptorBufferHandleEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDescriptorDataEXT(VkDescriptorDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pSampler"]=[&]() {
    json return_hDcbIvD=json({});
    
        if (name.pSampler==NULL){
            return_hDcbIvD["null"]=true;
            return return_hDcbIvD;
        }
        return_hDcbIvD=[&]() {
    json return_gWDEfUl=json({});
    return serialize_VkSampler(*name.pSampler);}();
return return_hDcbIvD;}();
result["members"]["pCombinedImageSampler"]=[&]() {
    json return_qeqrpFB=json({});
    
        if (name.pCombinedImageSampler==NULL){
            return_qeqrpFB["null"]=true;
            return return_qeqrpFB;
        }
        return_qeqrpFB=[&]() {
    json return_xzTAQCc=json({});
    return serialize_VkDescriptorImageInfo(*name.pCombinedImageSampler);}();
return return_qeqrpFB;}();
result["members"]["pInputAttachmentImage"]=[&]() {
    json return_NvtVjQD=json({});
    
        if (name.pInputAttachmentImage==NULL){
            return_NvtVjQD["null"]=true;
            return return_NvtVjQD;
        }
        return_NvtVjQD=[&]() {
    json return_zQQGbbK=json({});
    return serialize_VkDescriptorImageInfo(*name.pInputAttachmentImage);}();
return return_NvtVjQD;}();
result["members"]["pSampledImage"]=[&]() {
    json return_LNoTtiT=json({});
    
        if (name.pSampledImage==NULL){
            return_LNoTtiT["null"]=true;
            return return_LNoTtiT;
        }
        return_LNoTtiT=[&]() {
    json return_wwTnfOF=json({});
    return serialize_VkDescriptorImageInfo(*name.pSampledImage);}();
return return_LNoTtiT;}();
result["members"]["pStorageImage"]=[&]() {
    json return_aVAVAzb=json({});
    
        if (name.pStorageImage==NULL){
            return_aVAVAzb["null"]=true;
            return return_aVAVAzb;
        }
        return_aVAVAzb=[&]() {
    json return_cYuCqvR=json({});
    return serialize_VkDescriptorImageInfo(*name.pStorageImage);}();
return return_aVAVAzb;}();
result["members"]["pUniformTexelBuffer"]=[&]() {
    json return_AtRCLYM=json({});
    
        if (name.pUniformTexelBuffer==NULL){
            return_AtRCLYM["null"]=true;
            return return_AtRCLYM;
        }
        return_AtRCLYM=[&]() {
    json return_kJXoJnt=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformTexelBuffer);}();
return return_AtRCLYM;}();
result["members"]["pStorageTexelBuffer"]=[&]() {
    json return_qGtvTFi=json({});
    
        if (name.pStorageTexelBuffer==NULL){
            return_qGtvTFi["null"]=true;
            return return_qGtvTFi;
        }
        return_qGtvTFi=[&]() {
    json return_IIaCgmE=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageTexelBuffer);}();
return return_qGtvTFi;}();
result["members"]["pUniformBuffer"]=[&]() {
    json return_ThCmLms=json({});
    
        if (name.pUniformBuffer==NULL){
            return_ThCmLms["null"]=true;
            return return_ThCmLms;
        }
        return_ThCmLms=[&]() {
    json return_DuDavlH=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformBuffer);}();
return return_ThCmLms;}();
result["members"]["pStorageBuffer"]=[&]() {
    json return_PjPuita=json({});
    
        if (name.pStorageBuffer==NULL){
            return_PjPuita["null"]=true;
            return return_PjPuita;
        }
        return_PjPuita=[&]() {
    json return_IgxnECB=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageBuffer);}();
return return_PjPuita;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_hBMgcuk=json({});
    return_hBMgcuk=[&]() {
    json return_CUZHwPJ=json({});
    return serialize_uint64_t(name.accelerationStructure);}();return return_hBMgcuk;}();
return result;}

    VkDescriptorDataEXT deserialize_VkDescriptorDataEXT(json name){
        auto result=VkDescriptorDataEXT();
    
[&]() {
VkSampler* temp_PbQkdgL;[&]() {

        if (name["members"]["pSampler"].contains("null")){
        temp_PbQkdgL=NULL;
        }
    [&]() {
*(temp_PbQkdgL)=deserialize_VkSampler(name["members"]["pSampler"]);}();
}();result.pSampler=temp_PbQkdgL;}();
[&]() {
VkDescriptorImageInfo* temp_TkKhfQH;[&]() {

        if (name["members"]["pCombinedImageSampler"].contains("null")){
        temp_TkKhfQH=NULL;
        }
    [&]() {
*(temp_TkKhfQH)=deserialize_VkDescriptorImageInfo(name["members"]["pCombinedImageSampler"]);}();
}();result.pCombinedImageSampler=temp_TkKhfQH;}();
[&]() {
VkDescriptorImageInfo* temp_CWpdsrb;[&]() {

        if (name["members"]["pInputAttachmentImage"].contains("null")){
        temp_CWpdsrb=NULL;
        }
    [&]() {
*(temp_CWpdsrb)=deserialize_VkDescriptorImageInfo(name["members"]["pInputAttachmentImage"]);}();
}();result.pInputAttachmentImage=temp_CWpdsrb;}();
[&]() {
VkDescriptorImageInfo* temp_vSoVLoB;[&]() {

        if (name["members"]["pSampledImage"].contains("null")){
        temp_vSoVLoB=NULL;
        }
    [&]() {
*(temp_vSoVLoB)=deserialize_VkDescriptorImageInfo(name["members"]["pSampledImage"]);}();
}();result.pSampledImage=temp_vSoVLoB;}();
[&]() {
VkDescriptorImageInfo* temp_DapPYZF;[&]() {

        if (name["members"]["pStorageImage"].contains("null")){
        temp_DapPYZF=NULL;
        }
    [&]() {
*(temp_DapPYZF)=deserialize_VkDescriptorImageInfo(name["members"]["pStorageImage"]);}();
}();result.pStorageImage=temp_DapPYZF;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_qKEVRgh;[&]() {

        if (name["members"]["pUniformTexelBuffer"].contains("null")){
        temp_qKEVRgh=NULL;
        }
    [&]() {
*(temp_qKEVRgh)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformTexelBuffer"]);}();
}();result.pUniformTexelBuffer=temp_qKEVRgh;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_mIStbbS;[&]() {

        if (name["members"]["pStorageTexelBuffer"].contains("null")){
        temp_mIStbbS=NULL;
        }
    [&]() {
*(temp_mIStbbS)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageTexelBuffer"]);}();
}();result.pStorageTexelBuffer=temp_mIStbbS;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_pUDPkuV;[&]() {

        if (name["members"]["pUniformBuffer"].contains("null")){
        temp_pUDPkuV=NULL;
        }
    [&]() {
*(temp_pUDPkuV)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformBuffer"]);}();
}();result.pUniformBuffer=temp_pUDPkuV;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_DRnNGlC;[&]() {

        if (name["members"]["pStorageBuffer"].contains("null")){
        temp_DRnNGlC=NULL;
        }
    [&]() {
*(temp_DRnNGlC)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageBuffer"]);}();
}();result.pStorageBuffer=temp_DRnNGlC;}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint64_t(name["members"]["accelerationStructure"]);}();}();
return result;}

    json serialize_VkDescriptorGetInfoEXT(VkDescriptorGetInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_nUqbsfK=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["data"]=[&]() {
    json return_FUiplOb=json({});
    return serialize_VkDescriptorDataEXT(name.data);}();
return result;}

    VkDescriptorGetInfoEXT deserialize_VkDescriptorGetInfoEXT(json name){
        auto result=VkDescriptorGetInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkDescriptorDataEXT(name["members"]["data"]);}();
return result;}

    json serialize_VkBufferCaptureDescriptorDataInfoEXT(VkBufferCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferCaptureDescriptorDataInfoEXT deserialize_VkBufferCaptureDescriptorDataInfoEXT(json name){
        auto result=VkBufferCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageCaptureDescriptorDataInfoEXT(VkImageCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_MQCvgNp=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageCaptureDescriptorDataInfoEXT deserialize_VkImageCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageViewCaptureDescriptorDataInfoEXT(VkImageViewCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_qadnqHU=json({});
    return serialize_VkImageView(name.imageView);}();
return result;}

    VkImageViewCaptureDescriptorDataInfoEXT deserialize_VkImageViewCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageViewCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
return result;}

    json serialize_VkSamplerCaptureDescriptorDataInfoEXT(VkSamplerCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampler"]=[&]() {
    json return_qujTsSt=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkSamplerCaptureDescriptorDataInfoEXT deserialize_VkSamplerCaptureDescriptorDataInfoEXT(json name){
        auto result=VkSamplerCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkAccelerationStructureCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_Kbuffsb=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
result["members"]["accelerationStructureNV"]=[&]() {
    json return_tNKChOp=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructureNV);}();
return result;}

    VkAccelerationStructureCaptureDescriptorDataInfoEXT deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(json name){
        auto result=VkAccelerationStructureCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
[&]() {
result.accelerationStructureNV=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructureNV"]);}();
return result;}

    json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkOpaqueCaptureDescriptorDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureDescriptorData"]=[&]() {
    json return_VrMRbwF=json({});
    
        if (name.opaqueCaptureDescriptorData==NULL){
            return_VrMRbwF["null"]=true;
            return return_VrMRbwF;
        }
        return serialize_void_p(name.opaqueCaptureDescriptorData);
}();
return result;}

    VkOpaqueCaptureDescriptorDataCreateInfoEXT deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(json name){
        auto result=VkOpaqueCaptureDescriptorDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
void* temp_EYFqICr;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_EYFqICr=NULL;
        }
    temp_EYFqICr=deserialize_void_p(name["members"]["opaqueCaptureDescriptorData"]);
}();result.opaqueCaptureDescriptorData=temp_EYFqICr;}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(VkPhysicalDeviceShaderIntegerDotProductFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_QeSOizG=json({});
    return_QeSOizG=[&]() {
    json return_VKLuNmN=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_QeSOizG;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeatures deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_QeSOizG=json({});
    return_QeSOizG=[&]() {
    json return_VKLuNmN=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_QeSOizG;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(VkPhysicalDeviceShaderIntegerDotProductProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_HschYFM=json({});
    return_HschYFM=[&]() {
    json return_PfeaXxo=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_HschYFM;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_qFnkeyv=json({});
    return_qFnkeyv=[&]() {
    json return_SVdyPLV=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_qFnkeyv;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_VuNPfgs=json({});
    return_VuNPfgs=[&]() {
    json return_dtxuLRi=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_VuNPfgs;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_JcfFHpA=json({});
    return_JcfFHpA=[&]() {
    json return_LxuNeSj=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_JcfFHpA;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_InQPDLg=json({});
    return_InQPDLg=[&]() {
    json return_IAnsXxq=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_InQPDLg;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_HfcKJGj=json({});
    return_HfcKJGj=[&]() {
    json return_bPaYdlR=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_HfcKJGj;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_gcNNWlF=json({});
    return_gcNNWlF=[&]() {
    json return_fioeLkA=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_gcNNWlF;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_OSNiUmH=json({});
    return_OSNiUmH=[&]() {
    json return_aCxdHsL=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_OSNiUmH;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_WBSSzAM=json({});
    return_WBSSzAM=[&]() {
    json return_KpfDxFu=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_WBSSzAM;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_ZtOlqHA=json({});
    return_ZtOlqHA=[&]() {
    json return_owQYWvU=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_ZtOlqHA;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_fxNeKcj=json({});
    return_fxNeKcj=[&]() {
    json return_rhpfVIe=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_fxNeKcj;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_LzYrcYD=json({});
    return_LzYrcYD=[&]() {
    json return_WXpDGKI=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_LzYrcYD;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_QAPMrBP=json({});
    return_QAPMrBP=[&]() {
    json return_EYHlQRN=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_QAPMrBP;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_dwTKyfI=json({});
    return_dwTKyfI=[&]() {
    json return_WcbpVhV=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_dwTKyfI;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_xFHWhKK=json({});
    return_xFHWhKK=[&]() {
    json return_IfWrwwW=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_xFHWhKK;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_XmoeSPd=json({});
    return_XmoeSPd=[&]() {
    json return_dQBqDbJ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_XmoeSPd;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_HFQAJHZ=json({});
    return_HFQAJHZ=[&]() {
    json return_IChMiiP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_HFQAJHZ;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_AKNjIAf=json({});
    return_AKNjIAf=[&]() {
    json return_uCbLVBo=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_AKNjIAf;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_Asrnpbv=json({});
    return_Asrnpbv=[&]() {
    json return_VcKRtTX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_Asrnpbv;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_LQeMEDr=json({});
    return_LQeMEDr=[&]() {
    json return_IkuTnpM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_LQeMEDr;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_LekwbJy=json({});
    return_LekwbJy=[&]() {
    json return_tWfHMuz=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_LekwbJy;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_HoKYYXh=json({});
    return_HoKYYXh=[&]() {
    json return_SJPnxuL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_HoKYYXh;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_ZSLBigN=json({});
    return_ZSLBigN=[&]() {
    json return_xAiHLAW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_ZSLBigN;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_TPLORKo=json({});
    return_TPLORKo=[&]() {
    json return_vLYZnTf=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_TPLORKo;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_KwFGTBW=json({});
    return_KwFGTBW=[&]() {
    json return_wDUnMRb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_KwFGTBW;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_FgLiBEe=json({});
    return_FgLiBEe=[&]() {
    json return_JxVasNC=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_FgLiBEe;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_rCAXduj=json({});
    return_rCAXduj=[&]() {
    json return_LJjqkRV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_rCAXduj;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_htfRqcR=json({});
    return_htfRqcR=[&]() {
    json return_VQGoiIW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_htfRqcR;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_RRiocEE=json({});
    return_RRiocEE=[&]() {
    json return_bwMvKZM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_RRiocEE;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_bpqDsBZ=json({});
    return_bpqDsBZ=[&]() {
    json return_aVTQjny=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_bpqDsBZ;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductProperties deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_HschYFM=json({});
    return_HschYFM=[&]() {
    json return_PfeaXxo=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_HschYFM;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_qFnkeyv=json({});
    return_qFnkeyv=[&]() {
    json return_SVdyPLV=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_qFnkeyv;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_VuNPfgs=json({});
    return_VuNPfgs=[&]() {
    json return_dtxuLRi=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_VuNPfgs;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_JcfFHpA=json({});
    return_JcfFHpA=[&]() {
    json return_LxuNeSj=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_JcfFHpA;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_InQPDLg=json({});
    return_InQPDLg=[&]() {
    json return_IAnsXxq=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_InQPDLg;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_HfcKJGj=json({});
    return_HfcKJGj=[&]() {
    json return_bPaYdlR=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_HfcKJGj;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_gcNNWlF=json({});
    return_gcNNWlF=[&]() {
    json return_fioeLkA=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_gcNNWlF;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_OSNiUmH=json({});
    return_OSNiUmH=[&]() {
    json return_aCxdHsL=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_OSNiUmH;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_WBSSzAM=json({});
    return_WBSSzAM=[&]() {
    json return_KpfDxFu=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_WBSSzAM;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_ZtOlqHA=json({});
    return_ZtOlqHA=[&]() {
    json return_owQYWvU=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_ZtOlqHA;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_fxNeKcj=json({});
    return_fxNeKcj=[&]() {
    json return_rhpfVIe=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_fxNeKcj;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_LzYrcYD=json({});
    return_LzYrcYD=[&]() {
    json return_WXpDGKI=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_LzYrcYD;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_QAPMrBP=json({});
    return_QAPMrBP=[&]() {
    json return_EYHlQRN=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_QAPMrBP;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_dwTKyfI=json({});
    return_dwTKyfI=[&]() {
    json return_WcbpVhV=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_dwTKyfI;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_xFHWhKK=json({});
    return_xFHWhKK=[&]() {
    json return_IfWrwwW=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_xFHWhKK;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_XmoeSPd=json({});
    return_XmoeSPd=[&]() {
    json return_dQBqDbJ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_XmoeSPd;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_HFQAJHZ=json({});
    return_HFQAJHZ=[&]() {
    json return_IChMiiP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_HFQAJHZ;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_AKNjIAf=json({});
    return_AKNjIAf=[&]() {
    json return_uCbLVBo=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_AKNjIAf;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_Asrnpbv=json({});
    return_Asrnpbv=[&]() {
    json return_VcKRtTX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_Asrnpbv;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_LQeMEDr=json({});
    return_LQeMEDr=[&]() {
    json return_IkuTnpM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_LQeMEDr;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_LekwbJy=json({});
    return_LekwbJy=[&]() {
    json return_tWfHMuz=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_LekwbJy;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_HoKYYXh=json({});
    return_HoKYYXh=[&]() {
    json return_SJPnxuL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_HoKYYXh;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_ZSLBigN=json({});
    return_ZSLBigN=[&]() {
    json return_xAiHLAW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_ZSLBigN;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_TPLORKo=json({});
    return_TPLORKo=[&]() {
    json return_vLYZnTf=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_TPLORKo;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_KwFGTBW=json({});
    return_KwFGTBW=[&]() {
    json return_wDUnMRb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_KwFGTBW;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_FgLiBEe=json({});
    return_FgLiBEe=[&]() {
    json return_JxVasNC=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_FgLiBEe;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_rCAXduj=json({});
    return_rCAXduj=[&]() {
    json return_LJjqkRV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_rCAXduj;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_htfRqcR=json({});
    return_htfRqcR=[&]() {
    json return_VQGoiIW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_htfRqcR;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_RRiocEE=json({});
    return_RRiocEE=[&]() {
    json return_bwMvKZM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_RRiocEE;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_bpqDsBZ=json({});
    return_bpqDsBZ=[&]() {
    json return_aVTQjny=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_bpqDsBZ;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDrmPropertiesEXT(VkPhysicalDeviceDrmPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hasPrimary"]=[&]() {
    json return_DtzNLgg=json({});
    return_DtzNLgg=[&]() {
    json return_MceClvm=json({});
    return serialize_uint32_t(name.hasPrimary);}();return return_DtzNLgg;}();
result["members"]["hasRender"]=[&]() {
    json return_zOsEzmG=json({});
    return_zOsEzmG=[&]() {
    json return_YvPrKin=json({});
    return serialize_uint32_t(name.hasRender);}();return return_zOsEzmG;}();
result["members"]["primaryMajor"]=[&]() {
    json return_DPrNVAx=json({});
    return serialize_int64_t(name.primaryMajor);}();
result["members"]["primaryMinor"]=[&]() {
    json return_jHLBczH=json({});
    return serialize_int64_t(name.primaryMinor);}();
result["members"]["renderMajor"]=[&]() {
    json return_xOEXpxj=json({});
    return serialize_int64_t(name.renderMajor);}();
result["members"]["renderMinor"]=[&]() {
    json return_IcJdnJP=json({});
    return serialize_int64_t(name.renderMinor);}();
return result;}

    VkPhysicalDeviceDrmPropertiesEXT deserialize_VkPhysicalDeviceDrmPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDrmPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hasPrimary=deserialize_uint32_t(name["members"]["hasPrimary"]);}();}();
[&]() {
[&]() {
result.hasRender=deserialize_uint32_t(name["members"]["hasRender"]);}();}();
[&]() {
result.primaryMajor=deserialize_int64_t(name["members"]["primaryMajor"]);}();
[&]() {
result.primaryMinor=deserialize_int64_t(name["members"]["primaryMinor"]);}();
[&]() {
result.renderMajor=deserialize_int64_t(name["members"]["renderMajor"]);}();
[&]() {
result.renderMinor=deserialize_int64_t(name["members"]["renderMinor"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_BLPWScD=json({});
    return_BLPWScD=[&]() {
    json return_mNLUdvT=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_BLPWScD;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_BLPWScD=json({});
    return_BLPWScD=[&]() {
    json return_mNLUdvT=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_BLPWScD;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["triStripVertexOrderIndependentOfProvokingVertex"]=[&]() {
    json return_AqLDXyL=json({});
    return_AqLDXyL=[&]() {
    json return_UtlADqI=json({});
    return serialize_uint32_t(name.triStripVertexOrderIndependentOfProvokingVertex);}();return return_AqLDXyL;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.triStripVertexOrderIndependentOfProvokingVertex=deserialize_uint32_t(name["members"]["triStripVertexOrderIndependentOfProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMotionBlur"]=[&]() {
    json return_AwOlskV=json({});
    return_AwOlskV=[&]() {
    json return_xWIMAKg=json({});
    return serialize_uint32_t(name.rayTracingMotionBlur);}();return return_AwOlskV;}();
result["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]=[&]() {
    json return_WWqfvHl=json({});
    return_WWqfvHl=[&]() {
    json return_qACheJO=json({});
    return serialize_uint32_t(name.rayTracingMotionBlurPipelineTraceRaysIndirect);}();return return_WWqfvHl;}();
return result;}

    VkPhysicalDeviceRayTracingMotionBlurFeaturesNV deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingMotionBlurFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMotionBlur=deserialize_uint32_t(name["members"]["rayTracingMotionBlur"]);}();}();
[&]() {
[&]() {
result.rayTracingMotionBlurPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(VkAccelerationStructureGeometryMotionTrianglesDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_UwHxkbR=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
return result;}

    VkAccelerationStructureGeometryMotionTrianglesDataNV deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(json name){
        auto result=VkAccelerationStructureGeometryMotionTrianglesDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInfoNV(VkAccelerationStructureMotionInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInstances"]=[&]() {
    json return_BcAsRpp=json({});
    return serialize_uint32_t(name.maxInstances);}();
result["members"]["flags"]=[&]() {
    json return_QwxKWKM=json({});
    return serialize_VkAccelerationStructureMotionInfoFlagsNV(name.flags);}();
return result;}

    VkAccelerationStructureMotionInfoNV deserialize_VkAccelerationStructureMotionInfoNV(json name){
        auto result=VkAccelerationStructureMotionInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.maxInstances=deserialize_uint32_t(name["members"]["maxInstances"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInfoFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkSRTDataNV(VkSRTDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sx"]=[&]() {
    json return_emScdtc=json({});
    return serialize_float(name.sx);}();
result["members"]["a"]=[&]() {
    json return_VMDhQHu=json({});
    return serialize_float(name.a);}();
result["members"]["b"]=[&]() {
    json return_jzKijDJ=json({});
    return serialize_float(name.b);}();
result["members"]["pvx"]=[&]() {
    json return_NqarOLg=json({});
    return serialize_float(name.pvx);}();
result["members"]["sy"]=[&]() {
    json return_wZfzMXH=json({});
    return serialize_float(name.sy);}();
result["members"]["c"]=[&]() {
    json return_ArTAtlt=json({});
    return serialize_float(name.c);}();
result["members"]["pvy"]=[&]() {
    json return_XOBBVjo=json({});
    return serialize_float(name.pvy);}();
result["members"]["sz"]=[&]() {
    json return_PvnXQvG=json({});
    return serialize_float(name.sz);}();
result["members"]["pvz"]=[&]() {
    json return_tdOUpYL=json({});
    return serialize_float(name.pvz);}();
result["members"]["qx"]=[&]() {
    json return_wklvjWE=json({});
    return serialize_float(name.qx);}();
result["members"]["qy"]=[&]() {
    json return_xQgbXad=json({});
    return serialize_float(name.qy);}();
result["members"]["qz"]=[&]() {
    json return_qczWgNI=json({});
    return serialize_float(name.qz);}();
result["members"]["qw"]=[&]() {
    json return_gkuxZhT=json({});
    return serialize_float(name.qw);}();
result["members"]["tx"]=[&]() {
    json return_CpoJDKf=json({});
    return serialize_float(name.tx);}();
result["members"]["ty"]=[&]() {
    json return_QFYFxjc=json({});
    return serialize_float(name.ty);}();
result["members"]["tz"]=[&]() {
    json return_vzZIejX=json({});
    return serialize_float(name.tz);}();
return result;}

    VkSRTDataNV deserialize_VkSRTDataNV(json name){
        auto result=VkSRTDataNV();
    
[&]() {
result.sx=deserialize_float(name["members"]["sx"]);}();
[&]() {
result.a=deserialize_float(name["members"]["a"]);}();
[&]() {
result.b=deserialize_float(name["members"]["b"]);}();
[&]() {
result.pvx=deserialize_float(name["members"]["pvx"]);}();
[&]() {
result.sy=deserialize_float(name["members"]["sy"]);}();
[&]() {
result.c=deserialize_float(name["members"]["c"]);}();
[&]() {
result.pvy=deserialize_float(name["members"]["pvy"]);}();
[&]() {
result.sz=deserialize_float(name["members"]["sz"]);}();
[&]() {
result.pvz=deserialize_float(name["members"]["pvz"]);}();
[&]() {
result.qx=deserialize_float(name["members"]["qx"]);}();
[&]() {
result.qy=deserialize_float(name["members"]["qy"]);}();
[&]() {
result.qz=deserialize_float(name["members"]["qz"]);}();
[&]() {
result.qw=deserialize_float(name["members"]["qw"]);}();
[&]() {
result.tx=deserialize_float(name["members"]["tx"]);}();
[&]() {
result.ty=deserialize_float(name["members"]["ty"]);}();
[&]() {
result.tz=deserialize_float(name["members"]["tz"]);}();
return result;}

    json serialize_VkAccelerationStructureSRTMotionInstanceNV(VkAccelerationStructureSRTMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_BdNzxLg=json({});
    return serialize_VkSRTDataNV(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_CzyIHip=json({});
    return serialize_VkSRTDataNV(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_jVJvUMc=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_eaEYHJF=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_KxgBRrn=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_ltIoDJR=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_oBjKoLD=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureSRTMotionInstanceNV deserialize_VkAccelerationStructureSRTMotionInstanceNV(json name){
        auto result=VkAccelerationStructureSRTMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkSRTDataNV(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkSRTDataNV(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMatrixMotionInstanceNV(VkAccelerationStructureMatrixMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_WffAUKn=json({});
    return serialize_VkTransformMatrixKHR(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_IHvkrqR=json({});
    return serialize_VkTransformMatrixKHR(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_jVJvUMc=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_eaEYHJF=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_KxgBRrn=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_ltIoDJR=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_oBjKoLD=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureMatrixMotionInstanceNV deserialize_VkAccelerationStructureMatrixMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMatrixMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkTransformMatrixKHR(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkTransformMatrixKHR(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureMotionInstanceDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["staticInstance"]=[&]() {
    json return_VHALnXK=json({});
    return serialize_VkAccelerationStructureInstanceKHR(name.staticInstance);}();
result["members"]["matrixMotionInstance"]=[&]() {
    json return_vmZDZid=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(name.matrixMotionInstance);}();
result["members"]["srtMotionInstance"]=[&]() {
    json return_atHLYpY=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(name.srtMotionInstance);}();
return result;}

    VkAccelerationStructureMotionInstanceDataNV deserialize_VkAccelerationStructureMotionInstanceDataNV(json name){
        auto result=VkAccelerationStructureMotionInstanceDataNV();
    
[&]() {
result.staticInstance=deserialize_VkAccelerationStructureInstanceKHR(name["members"]["staticInstance"]);}();
[&]() {
result.matrixMotionInstance=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name["members"]["matrixMotionInstance"]);}();
[&]() {
result.srtMotionInstance=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name["members"]["srtMotionInstance"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_YTNHaEg=json({});
    return serialize_VkAccelerationStructureMotionInstanceTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_xGAmwbX=json({});
    return serialize_VkAccelerationStructureMotionInstanceFlagsNV(name.flags);}();
result["members"]["data"]=[&]() {
    json return_KNsJDkU=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(name.data);}();
return result;}

    VkAccelerationStructureMotionInstanceNV deserialize_VkAccelerationStructureMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMotionInstanceNV();
    
[&]() {
result.type=deserialize_VkAccelerationStructureMotionInstanceTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInstanceFlagsNV(name["members"]["flags"]);}();
[&]() {
result.data=deserialize_VkAccelerationStructureMotionInstanceDataNV(name["members"]["data"]);}();
return result;}

    json serialize_VkMemoryGetRemoteAddressInfoNV(VkMemoryGetRemoteAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_LHhBfrL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetRemoteAddressInfoNV deserialize_VkMemoryGetRemoteAddressInfoNV(json name){
        auto result=VkMemoryGetRemoteAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatRgba10x6WithoutYCbCrSampler"]=[&]() {
    json return_AihwewE=json({});
    return_AihwewE=[&]() {
    json return_NbZkpeS=json({});
    return serialize_uint32_t(name.formatRgba10x6WithoutYCbCrSampler);}();return return_AihwewE;}();
return result;}

    VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatRgba10x6WithoutYCbCrSampler=deserialize_uint32_t(name["members"]["formatRgba10x6WithoutYCbCrSampler"]);}();}();
return result;}

    json serialize_VkFormatProperties3(VkFormatProperties3 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_fSJueqo=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_zUHXOmM=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_dwDBSPe=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3 deserialize_VkFormatProperties3(json name){
        auto result=VkFormatProperties3();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkFormatProperties3KHR(VkFormatProperties3KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_fSJueqo=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_zUHXOmM=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_dwDBSPe=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3KHR deserialize_VkFormatProperties3KHR(json name){
        auto result=VkFormatProperties3KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesList2EXT(VkDrmFormatModifierPropertiesList2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_PYUYDJw=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_mxjdNsy=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_mxjdNsy["null"]=true;
            return return_mxjdNsy;
        }
        
        return_mxjdNsy["members"]={};
        for(int mxjdNsy=0; mxjdNsy < name.drmFormatModifierCount; mxjdNsy++){
            json temp;
            temp=[&]() {
    json return_dtMkoBT=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(name.pDrmFormatModifierProperties[mxjdNsy]);}();
            return_mxjdNsy["members"][std::to_string(mxjdNsy)].push_back(temp);
        }
        return return_mxjdNsy;
        }();
return result;}

    VkDrmFormatModifierPropertiesList2EXT deserialize_VkDrmFormatModifierPropertiesList2EXT(json name){
        auto result=VkDrmFormatModifierPropertiesList2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierProperties2EXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierProperties2EXT));
        for (int fldfCEy=0; fldfCEy < result.drmFormatModifierCount; fldfCEy++){
            [&]() {
result.pDrmFormatModifierProperties[fldfCEy]=deserialize_VkDrmFormatModifierProperties2EXT(name["members"]["pDrmFormatModifierProperties"]["members"][fldfCEy]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierProperties2EXT(VkDrmFormatModifierProperties2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_PrrVGoe=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_BGuXzDo=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_WTNxvrS=json({});
    return serialize_VkFormatFeatureFlags2(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierProperties2EXT deserialize_VkDrmFormatModifierProperties2EXT(json name){
        auto result=VkDrmFormatModifierProperties2EXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfo(VkPipelineRenderingCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_scWJVih=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_scWJVih["null"]=true;
            return return_scWJVih;
        }
        
        return_scWJVih["members"]={};
        for(int scWJVih=0; scWJVih < name.colorAttachmentCount; scWJVih++){
            json temp;
            temp=[&]() {
    json return_iUPgkxH=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[scWJVih]);}();
            return_scWJVih["members"][std::to_string(scWJVih)].push_back(temp);
        }
        return return_scWJVih;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_fsCuorL=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_DKIpMHJ=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfo deserialize_VkPipelineRenderingCreateInfo(json name){
        auto result=VkPipelineRenderingCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_mGsBzRq;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_mGsBzRq=NULL;
        }
    temp_mGsBzRq=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int YGTKgra=0; YGTKgra < result.colorAttachmentCount; YGTKgra++){
            [&]() {
temp_mGsBzRq[YGTKgra]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][YGTKgra]);}();;
        }
        }();result.pColorAttachmentFormats=temp_mGsBzRq;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfoKHR(VkPipelineRenderingCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_scWJVih=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_scWJVih["null"]=true;
            return return_scWJVih;
        }
        
        return_scWJVih["members"]={};
        for(int scWJVih=0; scWJVih < name.colorAttachmentCount; scWJVih++){
            json temp;
            temp=[&]() {
    json return_iUPgkxH=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[scWJVih]);}();
            return_scWJVih["members"][std::to_string(scWJVih)].push_back(temp);
        }
        return return_scWJVih;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_fsCuorL=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_DKIpMHJ=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfoKHR deserialize_VkPipelineRenderingCreateInfoKHR(json name){
        auto result=VkPipelineRenderingCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_mGsBzRq;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_mGsBzRq=NULL;
        }
    temp_mGsBzRq=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int YGTKgra=0; YGTKgra < result.colorAttachmentCount; YGTKgra++){
            [&]() {
temp_mGsBzRq[YGTKgra]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][YGTKgra]);}();;
        }
        }();result.pColorAttachmentFormats=temp_mGsBzRq;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkRenderingInfo(VkRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cYgCpIV=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_WGwTgag=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_NOQkDfJ=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_MuBlzWi=json({});
    
        if (name.pColorAttachments==NULL){
            return_MuBlzWi["null"]=true;
            return return_MuBlzWi;
        }
        
        return_MuBlzWi["members"]={};
        for(int MuBlzWi=0; MuBlzWi < name.colorAttachmentCount; MuBlzWi++){
            json temp;
            temp=[&]() {
    json return_urJDzyp=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[MuBlzWi]);}();
            return_MuBlzWi["members"][std::to_string(MuBlzWi)].push_back(temp);
        }
        return return_MuBlzWi;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_gXQazAJ=json({});
    
        if (name.pDepthAttachment==NULL){
            return_gXQazAJ["null"]=true;
            return return_gXQazAJ;
        }
        return_gXQazAJ=[&]() {
    json return_slFzdNq=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_gXQazAJ;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_sxAJHvY=json({});
    
        if (name.pStencilAttachment==NULL){
            return_sxAJHvY["null"]=true;
            return return_sxAJHvY;
        }
        return_sxAJHvY=[&]() {
    json return_aZxPgxW=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_sxAJHvY;}();
return result;}

    VkRenderingInfo deserialize_VkRenderingInfo(json name){
        auto result=VkRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_vHGZYnQ;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_vHGZYnQ=NULL;
        }
    temp_vHGZYnQ=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int AKluABy=0; AKluABy < result.colorAttachmentCount; AKluABy++){
            [&]() {
temp_vHGZYnQ[AKluABy]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][AKluABy]);}();;
        }
        }();result.pColorAttachments=temp_vHGZYnQ;}();
[&]() {
VkRenderingAttachmentInfo* temp_tzDBdGW;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_tzDBdGW=NULL;
        }
    [&]() {
*(temp_tzDBdGW)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_tzDBdGW;}();
[&]() {
VkRenderingAttachmentInfo* temp_cBEHwhU;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_cBEHwhU=NULL;
        }
    [&]() {
*(temp_cBEHwhU)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_cBEHwhU;}();
return result;}

    json serialize_VkRenderingInfoKHR(VkRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cYgCpIV=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_WGwTgag=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_NOQkDfJ=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_MuBlzWi=json({});
    
        if (name.pColorAttachments==NULL){
            return_MuBlzWi["null"]=true;
            return return_MuBlzWi;
        }
        
        return_MuBlzWi["members"]={};
        for(int MuBlzWi=0; MuBlzWi < name.colorAttachmentCount; MuBlzWi++){
            json temp;
            temp=[&]() {
    json return_urJDzyp=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[MuBlzWi]);}();
            return_MuBlzWi["members"][std::to_string(MuBlzWi)].push_back(temp);
        }
        return return_MuBlzWi;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_gXQazAJ=json({});
    
        if (name.pDepthAttachment==NULL){
            return_gXQazAJ["null"]=true;
            return return_gXQazAJ;
        }
        return_gXQazAJ=[&]() {
    json return_slFzdNq=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_gXQazAJ;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_sxAJHvY=json({});
    
        if (name.pStencilAttachment==NULL){
            return_sxAJHvY["null"]=true;
            return return_sxAJHvY;
        }
        return_sxAJHvY=[&]() {
    json return_aZxPgxW=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_sxAJHvY;}();
return result;}

    VkRenderingInfoKHR deserialize_VkRenderingInfoKHR(json name){
        auto result=VkRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_vHGZYnQ;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_vHGZYnQ=NULL;
        }
    temp_vHGZYnQ=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int AKluABy=0; AKluABy < result.colorAttachmentCount; AKluABy++){
            [&]() {
temp_vHGZYnQ[AKluABy]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][AKluABy]);}();;
        }
        }();result.pColorAttachments=temp_vHGZYnQ;}();
[&]() {
VkRenderingAttachmentInfo* temp_tzDBdGW;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_tzDBdGW=NULL;
        }
    [&]() {
*(temp_tzDBdGW)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_tzDBdGW;}();
[&]() {
VkRenderingAttachmentInfo* temp_cBEHwhU;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_cBEHwhU=NULL;
        }
    [&]() {
*(temp_cBEHwhU)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_cBEHwhU;}();
return result;}

    json serialize_VkRenderingAttachmentInfo(VkRenderingAttachmentInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_qadnqHU=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_UcyZFMG=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_xtaGBcV=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_xlanBXg=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_PrFLvqd=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_iZpanIw=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_XEUhenX=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_fpFSfcs=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfo deserialize_VkRenderingAttachmentInfo(json name){
        auto result=VkRenderingAttachmentInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingAttachmentInfoKHR(VkRenderingAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_qadnqHU=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_UcyZFMG=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_xtaGBcV=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_xlanBXg=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_PrFLvqd=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_iZpanIw=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_XEUhenX=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_fpFSfcs=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfoKHR deserialize_VkRenderingAttachmentInfoKHR(json name){
        auto result=VkRenderingAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(VkRenderingFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_qadnqHU=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_UcyZFMG=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_TYmHWqn=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkRenderingFragmentShadingRateAttachmentInfoKHR deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkRenderingFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(VkRenderingFragmentDensityMapAttachmentInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_qadnqHU=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_UcyZFMG=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkRenderingFragmentDensityMapAttachmentInfoEXT deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(json name){
        auto result=VkRenderingFragmentDensityMapAttachmentInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeatures(VkPhysicalDeviceDynamicRenderingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_HyJEZse=json({});
    return_HyJEZse=[&]() {
    json return_lHytIYu=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_HyJEZse;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeatures deserialize_VkPhysicalDeviceDynamicRenderingFeatures(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(VkPhysicalDeviceDynamicRenderingFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_HyJEZse=json({});
    return_HyJEZse=[&]() {
    json return_lHytIYu=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_HyJEZse;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeaturesKHR deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfo(VkCommandBufferInheritanceRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cYgCpIV=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_scWJVih=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_scWJVih["null"]=true;
            return return_scWJVih;
        }
        
        return_scWJVih["members"]={};
        for(int scWJVih=0; scWJVih < name.colorAttachmentCount; scWJVih++){
            json temp;
            temp=[&]() {
    json return_iUPgkxH=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[scWJVih]);}();
            return_scWJVih["members"][std::to_string(scWJVih)].push_back(temp);
        }
        return return_scWJVih;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_fsCuorL=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_DKIpMHJ=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_solYlXE=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfo deserialize_VkCommandBufferInheritanceRenderingInfo(json name){
        auto result=VkCommandBufferInheritanceRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_mGsBzRq;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_mGsBzRq=NULL;
        }
    temp_mGsBzRq=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int YGTKgra=0; YGTKgra < result.colorAttachmentCount; YGTKgra++){
            [&]() {
temp_mGsBzRq[YGTKgra]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][YGTKgra]);}();;
        }
        }();result.pColorAttachmentFormats=temp_mGsBzRq;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfoKHR(VkCommandBufferInheritanceRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cYgCpIV=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_ejJftjZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_scWJVih=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_scWJVih["null"]=true;
            return return_scWJVih;
        }
        
        return_scWJVih["members"]={};
        for(int scWJVih=0; scWJVih < name.colorAttachmentCount; scWJVih++){
            json temp;
            temp=[&]() {
    json return_iUPgkxH=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[scWJVih]);}();
            return_scWJVih["members"][std::to_string(scWJVih)].push_back(temp);
        }
        return return_scWJVih;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_fsCuorL=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_DKIpMHJ=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_solYlXE=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfoKHR deserialize_VkCommandBufferInheritanceRenderingInfoKHR(json name){
        auto result=VkCommandBufferInheritanceRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_mGsBzRq;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_mGsBzRq=NULL;
        }
    temp_mGsBzRq=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int YGTKgra=0; YGTKgra < result.colorAttachmentCount; YGTKgra++){
            [&]() {
temp_mGsBzRq[YGTKgra]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][YGTKgra]);}();;
        }
        }();result.pColorAttachmentFormats=temp_mGsBzRq;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoAMD(VkAttachmentSampleCountInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_bLhWHBf=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_bLhWHBf["null"]=true;
            return return_bLhWHBf;
        }
        
        return_bLhWHBf["members"]={};
        for(int bLhWHBf=0; bLhWHBf < name.colorAttachmentCount; bLhWHBf++){
            json temp;
            temp=[&]() {
    json return_wprZucw=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[bLhWHBf]);}();
            return_bLhWHBf["members"][std::to_string(bLhWHBf)].push_back(temp);
        }
        return return_bLhWHBf;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_NhwmVdI=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoAMD deserialize_VkAttachmentSampleCountInfoAMD(json name){
        auto result=VkAttachmentSampleCountInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_UFjeMya;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_UFjeMya=NULL;
        }
    temp_UFjeMya=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int NHLTazf=0; NHLTazf < result.colorAttachmentCount; NHLTazf++){
            [&]() {
temp_UFjeMya[NHLTazf]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][NHLTazf]);}();;
        }
        }();result.pColorAttachmentSamples=temp_UFjeMya;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoNV(VkAttachmentSampleCountInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_saGzROx=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_bLhWHBf=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_bLhWHBf["null"]=true;
            return return_bLhWHBf;
        }
        
        return_bLhWHBf["members"]={};
        for(int bLhWHBf=0; bLhWHBf < name.colorAttachmentCount; bLhWHBf++){
            json temp;
            temp=[&]() {
    json return_wprZucw=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[bLhWHBf]);}();
            return_bLhWHBf["members"][std::to_string(bLhWHBf)].push_back(temp);
        }
        return return_bLhWHBf;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_NhwmVdI=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoNV deserialize_VkAttachmentSampleCountInfoNV(json name){
        auto result=VkAttachmentSampleCountInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_UFjeMya;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_UFjeMya=NULL;
        }
    temp_UFjeMya=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int NHLTazf=0; NHLTazf < result.colorAttachmentCount; NHLTazf++){
            [&]() {
temp_UFjeMya[NHLTazf]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][NHLTazf]);}();;
        }
        }();result.pColorAttachmentSamples=temp_UFjeMya;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkMultiviewPerViewAttributesInfoNVX(VkMultiviewPerViewAttributesInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewAttributes"]=[&]() {
    json return_HIzlvJF=json({});
    return_HIzlvJF=[&]() {
    json return_sMwYvYD=json({});
    return serialize_uint32_t(name.perViewAttributes);}();return return_HIzlvJF;}();
result["members"]["perViewAttributesPositionXOnly"]=[&]() {
    json return_aAZXarS=json({});
    return_aAZXarS=[&]() {
    json return_FojdpuL=json({});
    return serialize_uint32_t(name.perViewAttributesPositionXOnly);}();return return_aAZXarS;}();
return result;}

    VkMultiviewPerViewAttributesInfoNVX deserialize_VkMultiviewPerViewAttributesInfoNVX(json name){
        auto result=VkMultiviewPerViewAttributesInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.perViewAttributes=deserialize_uint32_t(name["members"]["perViewAttributes"]);}();}();
[&]() {
[&]() {
result.perViewAttributesPositionXOnly=deserialize_uint32_t(name["members"]["perViewAttributesPositionXOnly"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(VkPhysicalDeviceImageViewMinLodFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_pUdMnIU=json({});
    return_pUdMnIU=[&]() {
    json return_JVpwaWs=json({});
    return serialize_uint32_t(name.minLod);}();return return_pUdMnIU;}();
return result;}

    VkPhysicalDeviceImageViewMinLodFeaturesEXT deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageViewMinLodFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minLod=deserialize_uint32_t(name["members"]["minLod"]);}();}();
return result;}

    json serialize_VkImageViewMinLodCreateInfoEXT(VkImageViewMinLodCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_jnBgYmL=json({});
    return serialize_float(name.minLod);}();
return result;}

    VkImageViewMinLodCreateInfoEXT deserialize_VkImageViewMinLodCreateInfoEXT(json name){
        auto result=VkImageViewMinLodCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_nqguhJE=json({});
    return_nqguhJE=[&]() {
    json return_yrcLhFn=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_nqguhJE;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_wATTSeo=json({});
    return_wATTSeo=[&]() {
    json return_ntpbHhO=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_wATTSeo;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_bCUJIHn=json({});
    return_bCUJIHn=[&]() {
    json return_ecgQjGG=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_bCUJIHn;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_nqguhJE=json({});
    return_nqguhJE=[&]() {
    json return_yrcLhFn=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_nqguhJE;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_wATTSeo=json({});
    return_wATTSeo=[&]() {
    json return_ntpbHhO=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_wATTSeo;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_bCUJIHn=json({});
    return_bCUJIHn=[&]() {
    json return_ecgQjGG=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_bCUJIHn;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(VkPhysicalDeviceLinearColorAttachmentFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearColorAttachment"]=[&]() {
    json return_zppONie=json({});
    return_zppONie=[&]() {
    json return_IDHsjHW=json({});
    return serialize_uint32_t(name.linearColorAttachment);}();return return_zppONie;}();
return result;}

    VkPhysicalDeviceLinearColorAttachmentFeaturesNV deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(json name){
        auto result=VkPhysicalDeviceLinearColorAttachmentFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.linearColorAttachment=deserialize_uint32_t(name["members"]["linearColorAttachment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibrary"]=[&]() {
    json return_FsTtIVr=json({});
    return_FsTtIVr=[&]() {
    json return_ksujuIQ=json({});
    return serialize_uint32_t(name.graphicsPipelineLibrary);}();return return_FsTtIVr;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibrary=deserialize_uint32_t(name["members"]["graphicsPipelineLibrary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibraryFastLinking"]=[&]() {
    json return_fRYCoKr=json({});
    return_fRYCoKr=[&]() {
    json return_iaCdNdR=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryFastLinking);}();return return_fRYCoKr;}();
result["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]=[&]() {
    json return_NvzIZEF=json({});
    return_NvzIZEF=[&]() {
    json return_kcGRuFh=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryIndependentInterpolationDecoration);}();return return_NvzIZEF;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibraryFastLinking=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryFastLinking"]);}();}();
[&]() {
[&]() {
result.graphicsPipelineLibraryIndependentInterpolationDecoration=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]);}();}();
return result;}

    json serialize_VkGraphicsPipelineLibraryCreateInfoEXT(VkGraphicsPipelineLibraryCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_QgyOUZy=json({});
    return serialize_VkGraphicsPipelineLibraryFlagsEXT(name.flags);}();
return result;}

    VkGraphicsPipelineLibraryCreateInfoEXT deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(json name){
        auto result=VkGraphicsPipelineLibraryCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkGraphicsPipelineLibraryFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetHostMapping"]=[&]() {
    json return_VmsTqLW=json({});
    return_VmsTqLW=[&]() {
    json return_DMZubdH=json({});
    return serialize_uint32_t(name.descriptorSetHostMapping);}();return return_VmsTqLW;}();
return result;}

    VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorSetHostMapping=deserialize_uint32_t(name["members"]["descriptorSetHostMapping"]);}();}();
return result;}

    json serialize_VkDescriptorSetBindingReferenceVALVE(VkDescriptorSetBindingReferenceVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_WzTdeDA=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["binding"]=[&]() {
    json return_BpBrDUS=json({});
    return serialize_uint32_t(name.binding);}();
return result;}

    VkDescriptorSetBindingReferenceVALVE deserialize_VkDescriptorSetBindingReferenceVALVE(json name){
        auto result=VkDescriptorSetBindingReferenceVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(VkDescriptorSetLayoutHostMappingInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorOffset"]=[&]() {
    json return_ztlPKTD=json({});
    return serialize_size_t(name.descriptorOffset);}();
result["members"]["descriptorSize"]=[&]() {
    json return_VPpntFa=json({});
    return serialize_uint32_t(name.descriptorSize);}();
return result;}

    VkDescriptorSetLayoutHostMappingInfoVALVE deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(json name){
        auto result=VkDescriptorSetLayoutHostMappingInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.descriptorOffset=deserialize_size_t(name["members"]["descriptorOffset"]);}();
[&]() {
result.descriptorSize=deserialize_uint32_t(name["members"]["descriptorSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifier"]=[&]() {
    json return_xHYANXj=json({});
    return_xHYANXj=[&]() {
    json return_dYakEHg=json({});
    return serialize_uint32_t(name.shaderModuleIdentifier);}();return return_xHYANXj;}();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderModuleIdentifier=deserialize_uint32_t(name["members"]["shaderModuleIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifierAlgorithmUUID"]=[&]() {
    json return_IHvFQoi=json({});
    
        return_IHvFQoi["members"]={};
        for(int IHvFQoi=0; IHvFQoi < VK_UUID_SIZE; IHvFQoi++){
            json temp;
            temp=[&]() {
    json return_DTvBRgi=json({});
    return serialize_uint8_t(name.shaderModuleIdentifierAlgorithmUUID[IHvFQoi]);}();
            return_IHvFQoi["members"][std::to_string(IHvFQoi)].push_back(temp);
        }
        return return_IHvFQoi;
        }();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int tuCwLlE=0; tuCwLlE < VK_UUID_SIZE; tuCwLlE++){
            [&]() {
result.shaderModuleIdentifierAlgorithmUUID[tuCwLlE]=deserialize_uint8_t(name["members"]["shaderModuleIdentifierAlgorithmUUID"]["members"][tuCwLlE]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(VkPipelineShaderStageModuleIdentifierCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_SGuqcjC=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["pIdentifier"]=[&]() {
    json return_RXjNGLT=json({});
    
        if (name.pIdentifier==NULL){
            return_RXjNGLT["null"]=true;
            return return_RXjNGLT;
        }
        
        return_RXjNGLT["members"]={};
        for(int RXjNGLT=0; RXjNGLT < name.identifierSize; RXjNGLT++){
            json temp;
            temp=[&]() {
    json return_LahMODi=json({});
    return serialize_uint8_t(name.pIdentifier[RXjNGLT]);}();
            return_RXjNGLT["members"][std::to_string(RXjNGLT)].push_back(temp);
        }
        return return_RXjNGLT;
        }();
return result;}

    VkPipelineShaderStageModuleIdentifierCreateInfoEXT deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageModuleIdentifierCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {
uint8_t* temp_PVfRpRf;[&]() {

        if (name["members"]["pIdentifier"].contains("null")){
        temp_PVfRpRf=NULL;
        }
    temp_PVfRpRf=(uint8_t*)malloc(result.identifierSize*sizeof(uint8_t));
        for (int wThCGpf=0; wThCGpf < result.identifierSize; wThCGpf++){
            [&]() {
temp_PVfRpRf[wThCGpf]=deserialize_uint8_t(name["members"]["pIdentifier"]["members"][wThCGpf]);}();;
        }
        }();result.pIdentifier=temp_PVfRpRf;}();
return result;}

    json serialize_VkShaderModuleIdentifierEXT(VkShaderModuleIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_SGuqcjC=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["identifier"]=[&]() {
    json return_aurTVrh=json({});
    
        return_aurTVrh["members"]={};
        for(int aurTVrh=0; aurTVrh < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; aurTVrh++){
            json temp;
            temp=[&]() {
    json return_GQifOCO=json({});
    return serialize_uint8_t(name.identifier[aurTVrh]);}();
            return_aurTVrh["members"][std::to_string(aurTVrh)].push_back(temp);
        }
        return return_aurTVrh;
        }();
return result;}

    VkShaderModuleIdentifierEXT deserialize_VkShaderModuleIdentifierEXT(json name){
        auto result=VkShaderModuleIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {

        for (int nIVNWRx=0; nIVNWRx < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; nIVNWRx++){
            [&]() {
result.identifier[nIVNWRx]=deserialize_uint8_t(name["members"]["identifier"]["members"][nIVNWRx]);}();;
        }
        }();
return result;}

    json serialize_VkImageCompressionControlEXT(VkImageCompressionControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qhwYqLE=json({});
    return serialize_VkImageCompressionFlagsEXT(name.flags);}();
result["members"]["compressionControlPlaneCount"]=[&]() {
    json return_zUeLOEF=json({});
    return serialize_uint32_t(name.compressionControlPlaneCount);}();
result["members"]["pFixedRateFlags"]=[&]() {
    json return_PozvVCx=json({});
    
        if (name.pFixedRateFlags==NULL){
            return_PozvVCx["null"]=true;
            return return_PozvVCx;
        }
        
        return_PozvVCx["members"]={};
        for(int PozvVCx=0; PozvVCx < name.compressionControlPlaneCount; PozvVCx++){
            json temp;
            temp=[&]() {
    json return_KVQftBd=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.pFixedRateFlags[PozvVCx]);}();
            return_PozvVCx["members"][std::to_string(PozvVCx)].push_back(temp);
        }
        return return_PozvVCx;
        }();
return result;}

    VkImageCompressionControlEXT deserialize_VkImageCompressionControlEXT(json name){
        auto result=VkImageCompressionControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkImageCompressionFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.compressionControlPlaneCount=deserialize_uint32_t(name["members"]["compressionControlPlaneCount"]);}();
[&]() {

        if (name["members"]["pFixedRateFlags"].contains("null")){
        result.pFixedRateFlags=NULL;
        }
    result.pFixedRateFlags=(VkImageCompressionFixedRateFlagsEXT*)malloc(result.compressionControlPlaneCount*sizeof(VkImageCompressionFixedRateFlagsEXT));
        for (int UNmSbaZ=0; UNmSbaZ < result.compressionControlPlaneCount; UNmSbaZ++){
            [&]() {
result.pFixedRateFlags[UNmSbaZ]=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["pFixedRateFlags"]["members"][UNmSbaZ]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkPhysicalDeviceImageCompressionControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControl"]=[&]() {
    json return_uGqkTrs=json({});
    return_uGqkTrs=[&]() {
    json return_sUsjljX=json({});
    return serialize_uint32_t(name.imageCompressionControl);}();return return_uGqkTrs;}();
return result;}

    VkPhysicalDeviceImageCompressionControlFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControl=deserialize_uint32_t(name["members"]["imageCompressionControl"]);}();}();
return result;}

    json serialize_VkImageCompressionPropertiesEXT(VkImageCompressionPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionFlags"]=[&]() {
    json return_EQNHibB=json({});
    return serialize_VkImageCompressionFlagsEXT(name.imageCompressionFlags);}();
result["members"]["imageCompressionFixedRateFlags"]=[&]() {
    json return_VHHzzWf=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.imageCompressionFixedRateFlags);}();
return result;}

    VkImageCompressionPropertiesEXT deserialize_VkImageCompressionPropertiesEXT(json name){
        auto result=VkImageCompressionPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageCompressionFlags=deserialize_VkImageCompressionFlagsEXT(name["members"]["imageCompressionFlags"]);}();
[&]() {
result.imageCompressionFixedRateFlags=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["imageCompressionFixedRateFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControlSwapchain"]=[&]() {
    json return_eLjGXGD=json({});
    return_eLjGXGD=[&]() {
    json return_shlIVJi=json({});
    return serialize_uint32_t(name.imageCompressionControlSwapchain);}();return return_eLjGXGD;}();
return result;}

    VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControlSwapchain=deserialize_uint32_t(name["members"]["imageCompressionControlSwapchain"]);}();}();
return result;}

    json serialize_VkImageSubresource2KHR(VkImageSubresource2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_QwgymAe=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2KHR deserialize_VkImageSubresource2KHR(json name){
        auto result=VkImageSubresource2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkImageSubresource2EXT(VkImageSubresource2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_QwgymAe=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2EXT deserialize_VkImageSubresource2EXT(json name){
        auto result=VkImageSubresource2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkSubresourceLayout2KHR(VkSubresourceLayout2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_jyVVFYg=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2KHR deserialize_VkSubresourceLayout2KHR(json name){
        auto result=VkSubresourceLayout2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout2EXT(VkSubresourceLayout2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_jyVVFYg=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2EXT deserialize_VkSubresourceLayout2EXT(json name){
        auto result=VkSubresourceLayout2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkRenderPassCreationControlEXT(VkRenderPassCreationControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disallowMerging"]=[&]() {
    json return_cCuOUKn=json({});
    return_cCuOUKn=[&]() {
    json return_vTexDtt=json({});
    return serialize_uint32_t(name.disallowMerging);}();return return_cCuOUKn;}();
return result;}

    VkRenderPassCreationControlEXT deserialize_VkRenderPassCreationControlEXT(json name){
        auto result=VkRenderPassCreationControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.disallowMerging=deserialize_uint32_t(name["members"]["disallowMerging"]);}();}();
return result;}

    json serialize_VkRenderPassCreationFeedbackInfoEXT(VkRenderPassCreationFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["postMergeSubpassCount"]=[&]() {
    json return_DVuFDbF=json({});
    return serialize_uint32_t(name.postMergeSubpassCount);}();
return result;}

    VkRenderPassCreationFeedbackInfoEXT deserialize_VkRenderPassCreationFeedbackInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackInfoEXT();
    
[&]() {
result.postMergeSubpassCount=deserialize_uint32_t(name["members"]["postMergeSubpassCount"]);}();
return result;}

    json serialize_VkRenderPassCreationFeedbackCreateInfoEXT(VkRenderPassCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pRenderPassFeedback"]=[&]() {
    json return_sdrObfL=json({});
    
        if (name.pRenderPassFeedback==NULL){
            return_sdrObfL["null"]=true;
            return return_sdrObfL;
        }
        return_sdrObfL=[&]() {
    json return_XlTmpfE=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*name.pRenderPassFeedback);}();
return return_sdrObfL;}();
return result;}

    VkRenderPassCreationFeedbackCreateInfoEXT deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {

        if (name["members"]["pRenderPassFeedback"].contains("null")){
        result.pRenderPassFeedback=NULL;
        }
    [&]() {
*(result.pRenderPassFeedback)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name["members"]["pRenderPassFeedback"]);}();
}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackInfoEXT(VkRenderPassSubpassFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassMergeStatus"]=[&]() {
    json return_mhRyLoA=json({});
    return serialize_VkSubpassMergeStatusEXT(name.subpassMergeStatus);}();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["postMergeIndex"]=[&]() {
    json return_UYSkOrO=json({});
    return serialize_uint32_t(name.postMergeIndex);}();
return result;}

    VkRenderPassSubpassFeedbackInfoEXT deserialize_VkRenderPassSubpassFeedbackInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackInfoEXT();
    
[&]() {
result.subpassMergeStatus=deserialize_VkSubpassMergeStatusEXT(name["members"]["subpassMergeStatus"]);}();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {
result.postMergeIndex=deserialize_uint32_t(name["members"]["postMergeIndex"]);}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(VkRenderPassSubpassFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pSubpassFeedback"]=[&]() {
    json return_NmziqmQ=json({});
    
        if (name.pSubpassFeedback==NULL){
            return_NmziqmQ["null"]=true;
            return return_NmziqmQ;
        }
        return_NmziqmQ=[&]() {
    json return_mgLqPmH=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*name.pSubpassFeedback);}();
return return_NmziqmQ;}();
return result;}

    VkRenderPassSubpassFeedbackCreateInfoEXT deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {

        if (name["members"]["pSubpassFeedback"].contains("null")){
        result.pSubpassFeedback=NULL;
        }
    [&]() {
*(result.pSubpassFeedback)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name["members"]["pSubpassFeedback"]);}();
}();
return result;}

    json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassMergeFeedback"]=[&]() {
    json return_gRHgSNv=json({});
    return_gRHgSNv=[&]() {
    json return_lNnorIo=json({});
    return serialize_uint32_t(name.subpassMergeFeedback);}();return return_gRHgSNv;}();
return result;}

    VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassMergeFeedback=deserialize_uint32_t(name["members"]["subpassMergeFeedback"]);}();}();
return result;}

    json serialize_VkMicromapBuildInfoEXT(VkMicromapBuildInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_GasFEvX=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["flags"]=[&]() {
    json return_YBOzgBq=json({});
    return serialize_VkBuildMicromapFlagsEXT(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_IMjyusG=json({});
    return serialize_VkBuildMicromapModeEXT(name.mode);}();
result["members"]["dstMicromap"]=[&]() {
    json return_bsAaDfh=json({});
    return serialize_VkMicromapEXT(name.dstMicromap);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_JLgmEGn=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_ysZlbWc=json({});
    
        if (name.pUsageCounts==NULL){
            return_ysZlbWc["null"]=true;
            return return_ysZlbWc;
        }
        
        return_ysZlbWc["members"]={};
        for(int ysZlbWc=0; ysZlbWc < name.usageCountsCount; ysZlbWc++){
            json temp;
            temp=[&]() {
    json return_lnKWuGP=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[ysZlbWc]);}();
            return_ysZlbWc["members"][std::to_string(ysZlbWc)].push_back(temp);
        }
        return return_ysZlbWc;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_ggUFhCe=json({});
    
        if (name.ppUsageCounts==NULL){
            return_ggUFhCe["null"]=true;
            return return_ggUFhCe;
        }
        
        return_ggUFhCe["members"]={};
        for(int ggUFhCe=0; ggUFhCe < name.usageCountsCount; ggUFhCe++){
            json temp;
            temp=[&]() {
    json return_HQCsAUs=json({});
    
        if (name.ppUsageCounts[ggUFhCe]==NULL){
            return_HQCsAUs["null"]=true;
            return return_HQCsAUs;
        }
        
        return_HQCsAUs["members"]={};
        for(int HQCsAUs=0; HQCsAUs < 1; HQCsAUs++){
            json temp;
            temp=[&]() {
    json return_evOwEEj=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[ggUFhCe][HQCsAUs]);}();
            return_HQCsAUs["members"][std::to_string(HQCsAUs)].push_back(temp);
        }
        return return_HQCsAUs;
        }();
            return_ggUFhCe["members"][std::to_string(ggUFhCe)].push_back(temp);
        }
        return return_ggUFhCe;
        }();
result["members"]["data"]=[&]() {
    json return_lmUVUgX=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["scratchData"]=[&]() {
    json return_WENpoKK=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
result["members"]["triangleArray"]=[&]() {
    json return_IeBkrqj=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.triangleArray);}();
result["members"]["triangleArrayStride"]=[&]() {
    json return_vwJhWiL=json({});
    return_vwJhWiL=[&]() {
    json return_SOGvxWX=json({});
    return serialize_uint64_t(name.triangleArrayStride);}();return return_vwJhWiL;}();
return result;}

    VkMicromapBuildInfoEXT deserialize_VkMicromapBuildInfoEXT(json name){
        auto result=VkMicromapBuildInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildMicromapFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildMicromapModeEXT(name["members"]["mode"]);}();
[&]() {
result.dstMicromap=deserialize_VkMicromapEXT(name["members"]["dstMicromap"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_VdVriSl;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_VdVriSl=NULL;
        }
    temp_VdVriSl=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int ZJwRell=0; ZJwRell < result.usageCountsCount; ZJwRell++){
            [&]() {
temp_VdVriSl[ZJwRell]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][ZJwRell]);}();;
        }
        }();result.pUsageCounts=temp_VdVriSl;}();
[&]() {
VkMicromapUsageEXT** temp_xkyyUiX;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_xkyyUiX=NULL;
        }
    temp_xkyyUiX=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int GGXbqFb=0; GGXbqFb < result.usageCountsCount; GGXbqFb++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][GGXbqFb].contains("null")){
        temp_xkyyUiX[GGXbqFb]=NULL;
        }
    temp_xkyyUiX[GGXbqFb]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int YOXhXfs=0; YOXhXfs < 1; YOXhXfs++){
            [&]() {
temp_xkyyUiX[GGXbqFb][YOXhXfs]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][GGXbqFb]["members"][YOXhXfs]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_xkyyUiX;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
[&]() {
result.triangleArray=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["triangleArray"]);}();
[&]() {
[&]() {
result.triangleArrayStride=deserialize_uint64_t(name["members"]["triangleArrayStride"]);}();}();
return result;}

    json serialize_VkMicromapCreateInfoEXT(VkMicromapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_LcMNjuk=json({});
    return serialize_VkMicromapCreateFlagsEXT(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_VfsgVvg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["type"]=[&]() {
    json return_GasFEvX=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_PYRuuDW=json({});
    return_PYRuuDW=[&]() {
    json return_IuDUgSj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PYRuuDW;}();
return result;}

    VkMicromapCreateInfoEXT deserialize_VkMicromapCreateInfoEXT(json name){
        auto result=VkMicromapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.createFlags=deserialize_VkMicromapCreateFlagsEXT(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkMicromapVersionInfoEXT(VkMicromapVersionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_GGeTZVn=json({});
    
        if (name.pVersionData==NULL){
            return_GGeTZVn["null"]=true;
            return return_GGeTZVn;
        }
        
        return_GGeTZVn["members"]={};
        for(int GGeTZVn=0; GGeTZVn < 2*VK_UUID_SIZE; GGeTZVn++){
            json temp;
            temp=[&]() {
    json return_hjuCTya=json({});
    return serialize_uint8_t(name.pVersionData[GGeTZVn]);}();
            return_GGeTZVn["members"][std::to_string(GGeTZVn)].push_back(temp);
        }
        return return_GGeTZVn;
        }();
return result;}

    VkMicromapVersionInfoEXT deserialize_VkMicromapVersionInfoEXT(json name){
        auto result=VkMicromapVersionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
uint8_t* temp_UUssyJJ;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_UUssyJJ=NULL;
        }
    temp_UUssyJJ=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int UcycriX=0; UcycriX < 2*VK_UUID_SIZE; UcycriX++){
            [&]() {
temp_UUssyJJ[UcycriX]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][UcycriX]);}();;
        }
        }();result.pVersionData=temp_UUssyJJ;}();
return result;}

    json serialize_VkCopyMicromapInfoEXT(VkCopyMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_QibhVEO=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_ojFzcDy=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_eTxMZxA=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapInfoEXT deserialize_VkCopyMicromapInfoEXT(json name){
        auto result=VkCopyMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMicromapToMemoryInfoEXT(VkCopyMicromapToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_QibhVEO=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_gGOVJcV=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_eTxMZxA=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapToMemoryInfoEXT deserialize_VkCopyMicromapToMemoryInfoEXT(json name){
        auto result=VkCopyMicromapToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToMicromapInfoEXT(VkCopyMemoryToMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_kHUjpnP=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_ojFzcDy=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_eTxMZxA=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMemoryToMicromapInfoEXT deserialize_VkCopyMemoryToMicromapInfoEXT(json name){
        auto result=VkCopyMemoryToMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkMicromapBuildSizesInfoEXT(VkMicromapBuildSizesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromapSize"]=[&]() {
    json return_JjJqHUn=json({});
    return_JjJqHUn=[&]() {
    json return_urTFnTL=json({});
    return serialize_uint64_t(name.micromapSize);}();return return_JjJqHUn;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_UAFAgJT=json({});
    return_UAFAgJT=[&]() {
    json return_JlHCvHE=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_UAFAgJT;}();
result["members"]["discardable"]=[&]() {
    json return_taGoALB=json({});
    return_taGoALB=[&]() {
    json return_QNgtOhn=json({});
    return serialize_uint32_t(name.discardable);}();return return_taGoALB;}();
return result;}

    VkMicromapBuildSizesInfoEXT deserialize_VkMicromapBuildSizesInfoEXT(json name){
        auto result=VkMicromapBuildSizesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.micromapSize=deserialize_uint64_t(name["members"]["micromapSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
[&]() {
[&]() {
result.discardable=deserialize_uint32_t(name["members"]["discardable"]);}();}();
return result;}

    json serialize_VkMicromapUsageEXT(VkMicromapUsageEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["count"]=[&]() {
    json return_pEDyiEP=json({});
    return serialize_uint32_t(name.count);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_eAqXwgj=json({});
    return serialize_uint32_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_TzGLlDa=json({});
    return serialize_uint32_t(name.format);}();
return result;}

    VkMicromapUsageEXT deserialize_VkMicromapUsageEXT(json name){
        auto result=VkMicromapUsageEXT();
    
[&]() {
result.count=deserialize_uint32_t(name["members"]["count"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint32_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint32_t(name["members"]["format"]);}();
return result;}

    json serialize_VkMicromapTriangleEXT(VkMicromapTriangleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dataOffset"]=[&]() {
    json return_KZnoLRf=json({});
    return serialize_uint32_t(name.dataOffset);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_fsCeMMH=json({});
    return serialize_uint16_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_mQoOXib=json({});
    return serialize_uint16_t(name.format);}();
return result;}

    VkMicromapTriangleEXT deserialize_VkMicromapTriangleEXT(json name){
        auto result=VkMicromapTriangleEXT();
    
[&]() {
result.dataOffset=deserialize_uint32_t(name["members"]["dataOffset"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint16_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint16_t(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(VkPhysicalDeviceOpacityMicromapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromap"]=[&]() {
    json return_bSaBrxb=json({});
    return_bSaBrxb=[&]() {
    json return_jLCYgnG=json({});
    return serialize_uint32_t(name.micromap);}();return return_bSaBrxb;}();
result["members"]["micromapCaptureReplay"]=[&]() {
    json return_qYGLvqQ=json({});
    return_qYGLvqQ=[&]() {
    json return_kwnkOHT=json({});
    return serialize_uint32_t(name.micromapCaptureReplay);}();return return_qYGLvqQ;}();
result["members"]["micromapHostCommands"]=[&]() {
    json return_ePXraYM=json({});
    return_ePXraYM=[&]() {
    json return_kNKUsbt=json({});
    return serialize_uint32_t(name.micromapHostCommands);}();return return_ePXraYM;}();
return result;}

    VkPhysicalDeviceOpacityMicromapFeaturesEXT deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.micromap=deserialize_uint32_t(name["members"]["micromap"]);}();}();
[&]() {
[&]() {
result.micromapCaptureReplay=deserialize_uint32_t(name["members"]["micromapCaptureReplay"]);}();}();
[&]() {
[&]() {
result.micromapHostCommands=deserialize_uint32_t(name["members"]["micromapHostCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(VkPhysicalDeviceOpacityMicromapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxOpacity2StateSubdivisionLevel"]=[&]() {
    json return_eUcemPZ=json({});
    return serialize_uint32_t(name.maxOpacity2StateSubdivisionLevel);}();
result["members"]["maxOpacity4StateSubdivisionLevel"]=[&]() {
    json return_VznjtkQ=json({});
    return serialize_uint32_t(name.maxOpacity4StateSubdivisionLevel);}();
return result;}

    VkPhysicalDeviceOpacityMicromapPropertiesEXT deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxOpacity2StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity2StateSubdivisionLevel"]);}();
[&]() {
result.maxOpacity4StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity4StateSubdivisionLevel"]);}();
return result;}

    json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(VkAccelerationStructureTrianglesOpacityMicromapEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexType"]=[&]() {
    json return_cWCOLYT=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexBuffer"]=[&]() {
    json return_ijfysop=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexBuffer);}();
result["members"]["indexStride"]=[&]() {
    json return_yZyJqpk=json({});
    return_yZyJqpk=[&]() {
    json return_zNfRSKM=json({});
    return serialize_uint64_t(name.indexStride);}();return return_yZyJqpk;}();
result["members"]["baseTriangle"]=[&]() {
    json return_eJFAytZ=json({});
    return serialize_uint32_t(name.baseTriangle);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_JLgmEGn=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_ysZlbWc=json({});
    
        if (name.pUsageCounts==NULL){
            return_ysZlbWc["null"]=true;
            return return_ysZlbWc;
        }
        
        return_ysZlbWc["members"]={};
        for(int ysZlbWc=0; ysZlbWc < name.usageCountsCount; ysZlbWc++){
            json temp;
            temp=[&]() {
    json return_lnKWuGP=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[ysZlbWc]);}();
            return_ysZlbWc["members"][std::to_string(ysZlbWc)].push_back(temp);
        }
        return return_ysZlbWc;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_ggUFhCe=json({});
    
        if (name.ppUsageCounts==NULL){
            return_ggUFhCe["null"]=true;
            return return_ggUFhCe;
        }
        
        return_ggUFhCe["members"]={};
        for(int ggUFhCe=0; ggUFhCe < name.usageCountsCount; ggUFhCe++){
            json temp;
            temp=[&]() {
    json return_HQCsAUs=json({});
    
        if (name.ppUsageCounts[ggUFhCe]==NULL){
            return_HQCsAUs["null"]=true;
            return return_HQCsAUs;
        }
        
        return_HQCsAUs["members"]={};
        for(int HQCsAUs=0; HQCsAUs < 1; HQCsAUs++){
            json temp;
            temp=[&]() {
    json return_evOwEEj=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[ggUFhCe][HQCsAUs]);}();
            return_HQCsAUs["members"][std::to_string(HQCsAUs)].push_back(temp);
        }
        return return_HQCsAUs;
        }();
            return_ggUFhCe["members"][std::to_string(ggUFhCe)].push_back(temp);
        }
        return return_ggUFhCe;
        }();
result["members"]["micromap"]=[&]() {
    json return_WchnYrJ=json({});
    return serialize_VkMicromapEXT(name.micromap);}();
return result;}

    VkAccelerationStructureTrianglesOpacityMicromapEXT deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(json name){
        auto result=VkAccelerationStructureTrianglesOpacityMicromapEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexBuffer=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexBuffer"]);}();
[&]() {
[&]() {
result.indexStride=deserialize_uint64_t(name["members"]["indexStride"]);}();}();
[&]() {
result.baseTriangle=deserialize_uint32_t(name["members"]["baseTriangle"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_VdVriSl;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_VdVriSl=NULL;
        }
    temp_VdVriSl=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int ZJwRell=0; ZJwRell < result.usageCountsCount; ZJwRell++){
            [&]() {
temp_VdVriSl[ZJwRell]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][ZJwRell]);}();;
        }
        }();result.pUsageCounts=temp_VdVriSl;}();
[&]() {
VkMicromapUsageEXT** temp_xkyyUiX;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_xkyyUiX=NULL;
        }
    temp_xkyyUiX=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int GGXbqFb=0; GGXbqFb < result.usageCountsCount; GGXbqFb++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][GGXbqFb].contains("null")){
        temp_xkyyUiX[GGXbqFb]=NULL;
        }
    temp_xkyyUiX[GGXbqFb]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int YOXhXfs=0; YOXhXfs < 1; YOXhXfs++){
            [&]() {
temp_xkyyUiX[GGXbqFb][YOXhXfs]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][GGXbqFb]["members"][YOXhXfs]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_xkyyUiX;}();
[&]() {
result.micromap=deserialize_VkMicromapEXT(name["members"]["micromap"]);}();
return result;}

    json serialize_VkPipelinePropertiesIdentifierEXT(VkPipelinePropertiesIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineIdentifier"]=[&]() {
    json return_WlxHUXd=json({});
    
        return_WlxHUXd["members"]={};
        for(int WlxHUXd=0; WlxHUXd < VK_UUID_SIZE; WlxHUXd++){
            json temp;
            temp=[&]() {
    json return_jyExRgu=json({});
    return serialize_uint8_t(name.pipelineIdentifier[WlxHUXd]);}();
            return_WlxHUXd["members"][std::to_string(WlxHUXd)].push_back(temp);
        }
        return return_WlxHUXd;
        }();
return result;}

    VkPipelinePropertiesIdentifierEXT deserialize_VkPipelinePropertiesIdentifierEXT(json name){
        auto result=VkPipelinePropertiesIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int QwMttjt=0; QwMttjt < VK_UUID_SIZE; QwMttjt++){
            [&]() {
result.pipelineIdentifier[QwMttjt]=deserialize_uint8_t(name["members"]["pipelineIdentifier"]["members"][QwMttjt]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(VkPhysicalDevicePipelinePropertiesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelinePropertiesIdentifier"]=[&]() {
    json return_OXkwKCP=json({});
    return_OXkwKCP=[&]() {
    json return_rMAoECY=json({});
    return serialize_uint32_t(name.pipelinePropertiesIdentifier);}();return return_OXkwKCP;}();
return result;}

    VkPhysicalDevicePipelinePropertiesFeaturesEXT deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelinePropertiesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelinePropertiesIdentifier=deserialize_uint32_t(name["members"]["pipelinePropertiesIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEarlyAndLateFragmentTests"]=[&]() {
    json return_xiUIrfz=json({});
    return_xiUIrfz=[&]() {
    json return_SUrhqij=json({});
    return serialize_uint32_t(name.shaderEarlyAndLateFragmentTests);}();return return_xiUIrfz;}();
return result;}

    VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(json name){
        auto result=VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderEarlyAndLateFragmentTests=deserialize_uint32_t(name["members"]["shaderEarlyAndLateFragmentTests"]);}();}();
return result;}

    json serialize_VkExternalMemoryAcquireUnmodifiedEXT(VkExternalMemoryAcquireUnmodifiedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["acquireUnmodifiedMemory"]=[&]() {
    json return_IJykiLJ=json({});
    return_IJykiLJ=[&]() {
    json return_mhUdXdT=json({});
    return serialize_uint32_t(name.acquireUnmodifiedMemory);}();return return_IJykiLJ;}();
return result;}

    VkExternalMemoryAcquireUnmodifiedEXT deserialize_VkExternalMemoryAcquireUnmodifiedEXT(json name){
        auto result=VkExternalMemoryAcquireUnmodifiedEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
[&]() {
result.acquireUnmodifiedMemory=deserialize_uint32_t(name["members"]["acquireUnmodifiedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["nonSeamlessCubeMap"]=[&]() {
    json return_NnbVMZR=json({});
    return_NnbVMZR=[&]() {
    json return_MVCrDem=json({});
    return serialize_uint32_t(name.nonSeamlessCubeMap);}();return return_NnbVMZR;}();
return result;}

    VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.nonSeamlessCubeMap=deserialize_uint32_t(name["members"]["nonSeamlessCubeMap"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkPhysicalDevicePipelineRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineRobustness"]=[&]() {
    json return_eFYltIT=json({});
    return_eFYltIT=[&]() {
    json return_tnZhtDl=json({});
    return serialize_uint32_t(name.pipelineRobustness);}();return return_eFYltIT;}();
return result;}

    VkPhysicalDevicePipelineRobustnessFeaturesEXT deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineRobustness=deserialize_uint32_t(name["members"]["pipelineRobustness"]);}();}();
return result;}

    json serialize_VkPipelineRobustnessCreateInfoEXT(VkPipelineRobustnessCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffers"]=[&]() {
    json return_ApUvcxc=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.storageBuffers);}();
result["members"]["uniformBuffers"]=[&]() {
    json return_SLuCaLn=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.uniformBuffers);}();
result["members"]["vertexInputs"]=[&]() {
    json return_NPzhDOy=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.vertexInputs);}();
result["members"]["images"]=[&]() {
    json return_gRCstSI=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.images);}();
return result;}

    VkPipelineRobustnessCreateInfoEXT deserialize_VkPipelineRobustnessCreateInfoEXT(json name){
        auto result=VkPipelineRobustnessCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.storageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["storageBuffers"]);}();
[&]() {
result.uniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["uniformBuffers"]);}();
[&]() {
result.vertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["vertexInputs"]);}();
[&]() {
result.images=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["images"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkPhysicalDevicePipelineRobustnessPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["defaultRobustnessStorageBuffers"]=[&]() {
    json return_PMuhFbl=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessStorageBuffers);}();
result["members"]["defaultRobustnessUniformBuffers"]=[&]() {
    json return_MIswHgm=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessUniformBuffers);}();
result["members"]["defaultRobustnessVertexInputs"]=[&]() {
    json return_zKSNkPo=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessVertexInputs);}();
result["members"]["defaultRobustnessImages"]=[&]() {
    json return_RcZyiHc=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.defaultRobustnessImages);}();
return result;}

    VkPhysicalDevicePipelineRobustnessPropertiesEXT deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.defaultRobustnessStorageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessStorageBuffers"]);}();
[&]() {
result.defaultRobustnessUniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessUniformBuffers"]);}();
[&]() {
result.defaultRobustnessVertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessVertexInputs"]);}();
[&]() {
result.defaultRobustnessImages=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["defaultRobustnessImages"]);}();
return result;}

    json serialize_VkImageViewSampleWeightCreateInfoQCOM(VkImageViewSampleWeightCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCenter"]=[&]() {
    json return_TPzGoSi=json({});
    return serialize_VkOffset2D(name.filterCenter);}();
result["members"]["filterSize"]=[&]() {
    json return_awWswVR=json({});
    return serialize_VkExtent2D(name.filterSize);}();
result["members"]["numPhases"]=[&]() {
    json return_LQSYQwc=json({});
    return serialize_uint32_t(name.numPhases);}();
return result;}

    VkImageViewSampleWeightCreateInfoQCOM deserialize_VkImageViewSampleWeightCreateInfoQCOM(json name){
        auto result=VkImageViewSampleWeightCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.filterCenter=deserialize_VkOffset2D(name["members"]["filterCenter"]);}();
[&]() {
result.filterSize=deserialize_VkExtent2D(name["members"]["filterSize"]);}();
[&]() {
result.numPhases=deserialize_uint32_t(name["members"]["numPhases"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(VkPhysicalDeviceImageProcessingFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureSampleWeighted"]=[&]() {
    json return_zgtOBRF=json({});
    return_zgtOBRF=[&]() {
    json return_ydcshRt=json({});
    return serialize_uint32_t(name.textureSampleWeighted);}();return return_zgtOBRF;}();
result["members"]["textureBoxFilter"]=[&]() {
    json return_vlmqzmI=json({});
    return_vlmqzmI=[&]() {
    json return_kaWiSJC=json({});
    return serialize_uint32_t(name.textureBoxFilter);}();return return_vlmqzmI;}();
result["members"]["textureBlockMatch"]=[&]() {
    json return_QjdqURs=json({});
    return_QjdqURs=[&]() {
    json return_FwgZvdW=json({});
    return serialize_uint32_t(name.textureBlockMatch);}();return return_QjdqURs;}();
return result;}

    VkPhysicalDeviceImageProcessingFeaturesQCOM deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureSampleWeighted=deserialize_uint32_t(name["members"]["textureSampleWeighted"]);}();}();
[&]() {
[&]() {
result.textureBoxFilter=deserialize_uint32_t(name["members"]["textureBoxFilter"]);}();}();
[&]() {
[&]() {
result.textureBlockMatch=deserialize_uint32_t(name["members"]["textureBlockMatch"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(VkPhysicalDeviceImageProcessingPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWeightFilterPhases"]=[&]() {
    json return_nVaCROB=json({});
    return serialize_uint32_t(name.maxWeightFilterPhases);}();
result["members"]["maxWeightFilterDimension"]=[&]() {
    json return_qqAGdlV=json({});
    return serialize_VkExtent2D(name.maxWeightFilterDimension);}();
result["members"]["maxBlockMatchRegion"]=[&]() {
    json return_QSTqQlg=json({});
    return serialize_VkExtent2D(name.maxBlockMatchRegion);}();
result["members"]["maxBoxFilterBlockSize"]=[&]() {
    json return_thBJamT=json({});
    return serialize_VkExtent2D(name.maxBoxFilterBlockSize);}();
return result;}

    VkPhysicalDeviceImageProcessingPropertiesQCOM deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxWeightFilterPhases=deserialize_uint32_t(name["members"]["maxWeightFilterPhases"]);}();
[&]() {
result.maxWeightFilterDimension=deserialize_VkExtent2D(name["members"]["maxWeightFilterDimension"]);}();
[&]() {
result.maxBlockMatchRegion=deserialize_VkExtent2D(name["members"]["maxBlockMatchRegion"]);}();
[&]() {
result.maxBoxFilterBlockSize=deserialize_VkExtent2D(name["members"]["maxBoxFilterBlockSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(VkPhysicalDeviceTilePropertiesFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileProperties"]=[&]() {
    json return_HbbYJPw=json({});
    return_HbbYJPw=[&]() {
    json return_eSeMccA=json({});
    return serialize_uint32_t(name.tileProperties);}();return return_HbbYJPw;}();
return result;}

    VkPhysicalDeviceTilePropertiesFeaturesQCOM deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceTilePropertiesFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.tileProperties=deserialize_uint32_t(name["members"]["tileProperties"]);}();}();
return result;}

    json serialize_VkTilePropertiesQCOM(VkTilePropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileSize"]=[&]() {
    json return_gMFiXCB=json({});
    return serialize_VkExtent3D(name.tileSize);}();
result["members"]["apronSize"]=[&]() {
    json return_AZyyUgV=json({});
    return serialize_VkExtent2D(name.apronSize);}();
result["members"]["origin"]=[&]() {
    json return_gKjdqLv=json({});
    return serialize_VkOffset2D(name.origin);}();
return result;}

    VkTilePropertiesQCOM deserialize_VkTilePropertiesQCOM(json name){
        auto result=VkTilePropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.tileSize=deserialize_VkExtent3D(name["members"]["tileSize"]);}();
[&]() {
result.apronSize=deserialize_VkExtent2D(name["members"]["apronSize"]);}();
[&]() {
result.origin=deserialize_VkOffset2D(name["members"]["origin"]);}();
return result;}

    json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(VkPhysicalDeviceAmigoProfilingFeaturesSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["amigoProfiling"]=[&]() {
    json return_wAruZeg=json({});
    return_wAruZeg=[&]() {
    json return_fNEylrF=json({});
    return serialize_uint32_t(name.amigoProfiling);}();return return_wAruZeg;}();
return result;}

    VkPhysicalDeviceAmigoProfilingFeaturesSEC deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(json name){
        auto result=VkPhysicalDeviceAmigoProfilingFeaturesSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.amigoProfiling=deserialize_uint32_t(name["members"]["amigoProfiling"]);}();}();
return result;}

    json serialize_VkAmigoProfilingSubmitInfoSEC(VkAmigoProfilingSubmitInfoSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["firstDrawTimestamp"]=[&]() {
    json return_sXDODtV=json({});
    return serialize_uint64_t(name.firstDrawTimestamp);}();
result["members"]["swapBufferTimestamp"]=[&]() {
    json return_svbFwEh=json({});
    return serialize_uint64_t(name.swapBufferTimestamp);}();
return result;}

    VkAmigoProfilingSubmitInfoSEC deserialize_VkAmigoProfilingSubmitInfoSEC(json name){
        auto result=VkAmigoProfilingSubmitInfoSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.firstDrawTimestamp=deserialize_uint64_t(name["members"]["firstDrawTimestamp"]);}();
[&]() {
result.swapBufferTimestamp=deserialize_uint64_t(name["members"]["swapBufferTimestamp"]);}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopLayout"]=[&]() {
    json return_HNcctZt=json({});
    return_HNcctZt=[&]() {
    json return_KvMfvKi=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopLayout);}();return return_HNcctZt;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopLayout=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClampZeroOne"]=[&]() {
    json return_ylPQspK=json({});
    return_ylPQspK=[&]() {
    json return_xSfrOzM=json({});
    return serialize_uint32_t(name.depthClampZeroOne);}();return return_ylPQspK;}();
return result;}

    VkPhysicalDeviceDepthClampZeroOneFeaturesEXT deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClampZeroOneFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClampZeroOne=deserialize_uint32_t(name["members"]["depthClampZeroOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(VkPhysicalDeviceAddressBindingReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reportAddressBinding"]=[&]() {
    json return_CVzMuMz=json({});
    return_CVzMuMz=[&]() {
    json return_JLsWLtx=json({});
    return serialize_uint32_t(name.reportAddressBinding);}();return return_CVzMuMz;}();
return result;}

    VkPhysicalDeviceAddressBindingReportFeaturesEXT deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAddressBindingReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.reportAddressBinding=deserialize_uint32_t(name["members"]["reportAddressBinding"]);}();}();
return result;}

    json serialize_VkDeviceAddressBindingCallbackDataEXT(VkDeviceAddressBindingCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_okiURcI=json({});
    return serialize_VkDeviceAddressBindingFlagsEXT(name.flags);}();
result["members"]["baseAddress"]=[&]() {
    json return_bLqzvbg=json({});
    return_bLqzvbg=[&]() {
    json return_HfbNLrr=json({});
    return serialize_uint64_t(name.baseAddress);}();return return_bLqzvbg;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
result["members"]["bindingType"]=[&]() {
    json return_FyTAmqu=json({});
    return serialize_VkDeviceAddressBindingTypeEXT(name.bindingType);}();
return result;}

    VkDeviceAddressBindingCallbackDataEXT deserialize_VkDeviceAddressBindingCallbackDataEXT(json name){
        auto result=VkDeviceAddressBindingCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceAddressBindingFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.baseAddress=deserialize_uint64_t(name["members"]["baseAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.bindingType=deserialize_VkDeviceAddressBindingTypeEXT(name["members"]["bindingType"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(VkPhysicalDeviceOpticalFlowFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opticalFlow"]=[&]() {
    json return_skMeOKE=json({});
    return_skMeOKE=[&]() {
    json return_fBMezAa=json({});
    return serialize_uint32_t(name.opticalFlow);}();return return_skMeOKE;}();
return result;}

    VkPhysicalDeviceOpticalFlowFeaturesNV deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.opticalFlow=deserialize_uint32_t(name["members"]["opticalFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(VkPhysicalDeviceOpticalFlowPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedOutputGridSizes"]=[&]() {
    json return_mrqDQHZ=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedOutputGridSizes);}();
result["members"]["supportedHintGridSizes"]=[&]() {
    json return_lLoHXSr=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedHintGridSizes);}();
result["members"]["hintSupported"]=[&]() {
    json return_lwIhJug=json({});
    return_lwIhJug=[&]() {
    json return_PtRvNJX=json({});
    return serialize_uint32_t(name.hintSupported);}();return return_lwIhJug;}();
result["members"]["costSupported"]=[&]() {
    json return_FmdNmmP=json({});
    return_FmdNmmP=[&]() {
    json return_aganYEJ=json({});
    return serialize_uint32_t(name.costSupported);}();return return_FmdNmmP;}();
result["members"]["bidirectionalFlowSupported"]=[&]() {
    json return_ApnRAYq=json({});
    return_ApnRAYq=[&]() {
    json return_jlKzQjj=json({});
    return serialize_uint32_t(name.bidirectionalFlowSupported);}();return return_ApnRAYq;}();
result["members"]["globalFlowSupported"]=[&]() {
    json return_IPupgtG=json({});
    return_IPupgtG=[&]() {
    json return_mtDDIWF=json({});
    return serialize_uint32_t(name.globalFlowSupported);}();return return_IPupgtG;}();
result["members"]["minWidth"]=[&]() {
    json return_OUIXqgc=json({});
    return serialize_uint32_t(name.minWidth);}();
result["members"]["minHeight"]=[&]() {
    json return_GeSmbWQ=json({});
    return serialize_uint32_t(name.minHeight);}();
result["members"]["maxWidth"]=[&]() {
    json return_dqUDqAJ=json({});
    return serialize_uint32_t(name.maxWidth);}();
result["members"]["maxHeight"]=[&]() {
    json return_BOZofGz=json({});
    return serialize_uint32_t(name.maxHeight);}();
result["members"]["maxNumRegionsOfInterest"]=[&]() {
    json return_LQpCTaX=json({});
    return serialize_uint32_t(name.maxNumRegionsOfInterest);}();
return result;}

    VkPhysicalDeviceOpticalFlowPropertiesNV deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedOutputGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedOutputGridSizes"]);}();
[&]() {
result.supportedHintGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedHintGridSizes"]);}();
[&]() {
[&]() {
result.hintSupported=deserialize_uint32_t(name["members"]["hintSupported"]);}();}();
[&]() {
[&]() {
result.costSupported=deserialize_uint32_t(name["members"]["costSupported"]);}();}();
[&]() {
[&]() {
result.bidirectionalFlowSupported=deserialize_uint32_t(name["members"]["bidirectionalFlowSupported"]);}();}();
[&]() {
[&]() {
result.globalFlowSupported=deserialize_uint32_t(name["members"]["globalFlowSupported"]);}();}();
[&]() {
result.minWidth=deserialize_uint32_t(name["members"]["minWidth"]);}();
[&]() {
result.minHeight=deserialize_uint32_t(name["members"]["minHeight"]);}();
[&]() {
result.maxWidth=deserialize_uint32_t(name["members"]["maxWidth"]);}();
[&]() {
result.maxHeight=deserialize_uint32_t(name["members"]["maxHeight"]);}();
[&]() {
result.maxNumRegionsOfInterest=deserialize_uint32_t(name["members"]["maxNumRegionsOfInterest"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatInfoNV(VkOpticalFlowImageFormatInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_FoloHcX=json({});
    return serialize_VkOpticalFlowUsageFlagsNV(name.usage);}();
return result;}

    VkOpticalFlowImageFormatInfoNV deserialize_VkOpticalFlowImageFormatInfoNV(json name){
        auto result=VkOpticalFlowImageFormatInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.usage=deserialize_VkOpticalFlowUsageFlagsNV(name["members"]["usage"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatPropertiesNV(VkOpticalFlowImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hDJRFOl=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkOpticalFlowImageFormatPropertiesNV deserialize_VkOpticalFlowImageFormatPropertiesNV(json name){
        auto result=VkOpticalFlowImageFormatPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreateInfoNV(VkOpticalFlowSessionCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["width"]=[&]() {
    json return_aHnOOaq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hwrfdWL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["imageFormat"]=[&]() {
    json return_AlzIijQ=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["flowVectorFormat"]=[&]() {
    json return_OffRsyo=json({});
    return serialize_VkFormat(name.flowVectorFormat);}();
result["members"]["costFormat"]=[&]() {
    json return_skzALZP=json({});
    return serialize_VkFormat(name.costFormat);}();
result["members"]["outputGridSize"]=[&]() {
    json return_EvxVlWg=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.outputGridSize);}();
result["members"]["hintGridSize"]=[&]() {
    json return_SJwvidL=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.hintGridSize);}();
result["members"]["performanceLevel"]=[&]() {
    json return_GKNMiWW=json({});
    return serialize_VkOpticalFlowPerformanceLevelNV(name.performanceLevel);}();
result["members"]["flags"]=[&]() {
    json return_VyOtDZg=json({});
    return serialize_VkOpticalFlowSessionCreateFlagsNV(name.flags);}();
return result;}

    VkOpticalFlowSessionCreateInfoNV deserialize_VkOpticalFlowSessionCreateInfoNV(json name){
        auto result=VkOpticalFlowSessionCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.flowVectorFormat=deserialize_VkFormat(name["members"]["flowVectorFormat"]);}();
[&]() {
result.costFormat=deserialize_VkFormat(name["members"]["costFormat"]);}();
[&]() {
result.outputGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["outputGridSize"]);}();
[&]() {
result.hintGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["hintGridSize"]);}();
[&]() {
result.performanceLevel=deserialize_VkOpticalFlowPerformanceLevelNV(name["members"]["performanceLevel"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowSessionCreateFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(VkOpticalFlowSessionCreatePrivateDataInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["id"]=[&]() {
    json return_kSjwsEq=json({});
    return serialize_uint32_t(name.id);}();
result["members"]["size"]=[&]() {
    json return_jmzVtiR=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["pPrivateData"]=[&]() {
    json return_GYVZVMG=json({});
    
        if (name.pPrivateData==NULL){
            return_GYVZVMG["null"]=true;
            return return_GYVZVMG;
        }
        return serialize_void_p(name.pPrivateData);
}();
return result;}

    VkOpticalFlowSessionCreatePrivateDataInfoNV deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(json name){
        auto result=VkOpticalFlowSessionCreatePrivateDataInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.id=deserialize_uint32_t(name["members"]["id"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
void* temp_HpBmXXo;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_HpBmXXo=NULL;
        }
    temp_HpBmXXo=deserialize_void_p(name["members"]["pPrivateData"]);
}();result.pPrivateData=temp_HpBmXXo;}();
return result;}

    json serialize_VkOpticalFlowExecuteInfoNV(VkOpticalFlowExecuteInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gCLxDmT=json({});
    return serialize_VkOpticalFlowExecuteFlagsNV(name.flags);}();
result["members"]["regionCount"]=[&]() {
    json return_mLVNIUC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_JFZHXnG=json({});
    
        if (name.pRegions==NULL){
            return_JFZHXnG["null"]=true;
            return return_JFZHXnG;
        }
        
        return_JFZHXnG["members"]={};
        for(int JFZHXnG=0; JFZHXnG < name.regionCount; JFZHXnG++){
            json temp;
            temp=[&]() {
    json return_CpjOwcn=json({});
    return serialize_VkRect2D(name.pRegions[JFZHXnG]);}();
            return_JFZHXnG["members"][std::to_string(JFZHXnG)].push_back(temp);
        }
        return return_JFZHXnG;
        }();
return result;}

    VkOpticalFlowExecuteInfoNV deserialize_VkOpticalFlowExecuteInfoNV(json name){
        auto result=VkOpticalFlowExecuteInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkOpticalFlowExecuteFlagsNV(name["members"]["flags"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkRect2D* temp_gvrqXHq;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_gvrqXHq=NULL;
        }
    temp_gvrqXHq=(VkRect2D*)malloc(result.regionCount*sizeof(VkRect2D));
        for (int gwAQRHq=0; gwAQRHq < result.regionCount; gwAQRHq++){
            [&]() {
temp_gvrqXHq[gwAQRHq]=deserialize_VkRect2D(name["members"]["pRegions"]["members"][gwAQRHq]);}();;
        }
        }();result.pRegions=temp_gvrqXHq;}();
return result;}

    json serialize_VkPhysicalDeviceFaultFeaturesEXT(VkPhysicalDeviceFaultFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceFault"]=[&]() {
    json return_NVfcoKp=json({});
    return_NVfcoKp=[&]() {
    json return_looVyqE=json({});
    return serialize_uint32_t(name.deviceFault);}();return return_NVfcoKp;}();
result["members"]["deviceFaultVendorBinary"]=[&]() {
    json return_HwDAjVD=json({});
    return_HwDAjVD=[&]() {
    json return_LnizkiH=json({});
    return serialize_uint32_t(name.deviceFaultVendorBinary);}();return return_HwDAjVD;}();
return result;}

    VkPhysicalDeviceFaultFeaturesEXT deserialize_VkPhysicalDeviceFaultFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFaultFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceFault=deserialize_uint32_t(name["members"]["deviceFault"]);}();}();
[&]() {
[&]() {
result.deviceFaultVendorBinary=deserialize_uint32_t(name["members"]["deviceFaultVendorBinary"]);}();}();
return result;}

    json serialize_VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["addressType"]=[&]() {
    json return_kpCowiR=json({});
    return serialize_VkDeviceFaultAddressTypeEXT(name.addressType);}();
result["members"]["reportedAddress"]=[&]() {
    json return_rLRXgPP=json({});
    return_rLRXgPP=[&]() {
    json return_jUcIdWz=json({});
    return serialize_uint64_t(name.reportedAddress);}();return return_rLRXgPP;}();
result["members"]["addressPrecision"]=[&]() {
    json return_vtvLXmv=json({});
    return_vtvLXmv=[&]() {
    json return_qJJBhIl=json({});
    return serialize_uint64_t(name.addressPrecision);}();return return_vtvLXmv;}();
return result;}

    VkDeviceFaultAddressInfoEXT deserialize_VkDeviceFaultAddressInfoEXT(json name){
        auto result=VkDeviceFaultAddressInfoEXT();
    
[&]() {
result.addressType=deserialize_VkDeviceFaultAddressTypeEXT(name["members"]["addressType"]);}();
[&]() {
[&]() {
result.reportedAddress=deserialize_uint64_t(name["members"]["reportedAddress"]);}();}();
[&]() {
[&]() {
result.addressPrecision=deserialize_uint64_t(name["members"]["addressPrecision"]);}();}();
return result;}

    json serialize_VkDeviceFaultVendorInfoEXT(VkDeviceFaultVendorInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["vendorFaultCode"]=[&]() {
    json return_wsPQuCJ=json({});
    return serialize_uint64_t(name.vendorFaultCode);}();
result["members"]["vendorFaultData"]=[&]() {
    json return_YBlsodJ=json({});
    return serialize_uint64_t(name.vendorFaultData);}();
return result;}

    VkDeviceFaultVendorInfoEXT deserialize_VkDeviceFaultVendorInfoEXT(json name){
        auto result=VkDeviceFaultVendorInfoEXT();
    
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {
result.vendorFaultCode=deserialize_uint64_t(name["members"]["vendorFaultCode"]);}();
[&]() {
result.vendorFaultData=deserialize_uint64_t(name["members"]["vendorFaultData"]);}();
return result;}

    json serialize_VkDeviceFaultCountsEXT(VkDeviceFaultCountsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["addressInfoCount"]=[&]() {
    json return_ZjObdGf=json({});
    return serialize_uint32_t(name.addressInfoCount);}();
result["members"]["vendorInfoCount"]=[&]() {
    json return_vVHQXuT=json({});
    return serialize_uint32_t(name.vendorInfoCount);}();
result["members"]["vendorBinarySize"]=[&]() {
    json return_QGHkACm=json({});
    return_QGHkACm=[&]() {
    json return_yvxHvCT=json({});
    return serialize_uint64_t(name.vendorBinarySize);}();return return_QGHkACm;}();
return result;}

    VkDeviceFaultCountsEXT deserialize_VkDeviceFaultCountsEXT(json name){
        auto result=VkDeviceFaultCountsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.addressInfoCount=deserialize_uint32_t(name["members"]["addressInfoCount"]);}();
[&]() {
result.vendorInfoCount=deserialize_uint32_t(name["members"]["vendorInfoCount"]);}();
[&]() {
[&]() {
result.vendorBinarySize=deserialize_uint64_t(name["members"]["vendorBinarySize"]);}();}();
return result;}

    json serialize_VkDeviceFaultInfoEXT(VkDeviceFaultInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["description"]=[&]() {
    json return_xwRVAnG=json({});
    
        return_xwRVAnG["members"]={};
        for(int xwRVAnG=0; xwRVAnG < VK_MAX_DESCRIPTION_SIZE; xwRVAnG++){
            json temp;
            temp=[&]() {
    json return_rARKLLH=json({});
    return serialize_char(name.description[xwRVAnG]);}();
            return_xwRVAnG["members"][std::to_string(xwRVAnG)].push_back(temp);
        }
        return return_xwRVAnG;
        }();
result["members"]["pAddressInfos"]=[&]() {
    json return_QuPwzGM=json({});
    
        if (name.pAddressInfos==NULL){
            return_QuPwzGM["null"]=true;
            return return_QuPwzGM;
        }
        return_QuPwzGM=[&]() {
    json return_QPoptWi=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*name.pAddressInfos);}();
return return_QuPwzGM;}();
result["members"]["pVendorInfos"]=[&]() {
    json return_VEGAFMb=json({});
    
        if (name.pVendorInfos==NULL){
            return_VEGAFMb["null"]=true;
            return return_VEGAFMb;
        }
        return_VEGAFMb=[&]() {
    json return_dPoQiKn=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*name.pVendorInfos);}();
return return_VEGAFMb;}();
result["members"]["pVendorBinaryData"]=[&]() {
    json return_RmmlIUG=json({});
    
        if (name.pVendorBinaryData==NULL){
            return_RmmlIUG["null"]=true;
            return return_RmmlIUG;
        }
        return serialize_void_p(name.pVendorBinaryData);
}();
return result;}

    VkDeviceFaultInfoEXT deserialize_VkDeviceFaultInfoEXT(json name){
        auto result=VkDeviceFaultInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int wuHqSuL=0; wuHqSuL < VK_MAX_DESCRIPTION_SIZE; wuHqSuL++){
            [&]() {
result.description[wuHqSuL]=deserialize_char(name["members"]["description"]["members"][wuHqSuL]);}();;
        }
        }();
[&]() {

        if (name["members"]["pAddressInfos"].contains("null")){
        result.pAddressInfos=NULL;
        }
    [&]() {
*(result.pAddressInfos)=deserialize_VkDeviceFaultAddressInfoEXT(name["members"]["pAddressInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorInfos"].contains("null")){
        result.pVendorInfos=NULL;
        }
    [&]() {
*(result.pVendorInfos)=deserialize_VkDeviceFaultVendorInfoEXT(name["members"]["pVendorInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        result.pVendorBinaryData=NULL;
        }
    result.pVendorBinaryData=deserialize_void_p(name["members"]["pVendorBinaryData"]);
}();
return result;}

    json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(VkDeviceFaultVendorBinaryHeaderVersionOneEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_FtATKYA=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_jkeXgxK=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_buNXFan=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_MQsAsRj=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["driverVersion"]=[&]() {
    json return_AtwUTJR=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_VrGSmxY=json({});
    
        return_VrGSmxY["members"]={};
        for(int VrGSmxY=0; VrGSmxY < VK_UUID_SIZE; VrGSmxY++){
            json temp;
            temp=[&]() {
    json return_JfHjXIm=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[VrGSmxY]);}();
            return_VrGSmxY["members"][std::to_string(VrGSmxY)].push_back(temp);
        }
        return return_VrGSmxY;
        }();
result["members"]["applicationNameOffset"]=[&]() {
    json return_xMAjTqt=json({});
    return serialize_uint32_t(name.applicationNameOffset);}();
result["members"]["applicationVersion"]=[&]() {
    json return_zIyymPm=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["engineNameOffset"]=[&]() {
    json return_mtXEocP=json({});
    return serialize_uint32_t(name.engineNameOffset);}();
result["members"]["engineVersion"]=[&]() {
    json return_xoEodnq=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_BPpCOEn=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkDeviceFaultVendorBinaryHeaderVersionOneEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(json name){
        auto result=VkDeviceFaultVendorBinaryHeaderVersionOneEXT();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {

        for (int KuCUrkQ=0; KuCUrkQ < VK_UUID_SIZE; KuCUrkQ++){
            [&]() {
result.pipelineCacheUUID[KuCUrkQ]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][KuCUrkQ]);}();;
        }
        }();
[&]() {
result.applicationNameOffset=deserialize_uint32_t(name["members"]["applicationNameOffset"]);}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
result.engineNameOffset=deserialize_uint32_t(name["members"]["engineNameOffset"]);}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineLibraryGroupHandles"]=[&]() {
    json return_dVHVXXu=json({});
    return_dVHVXXu=[&]() {
    json return_guCVXPo=json({});
    return serialize_uint32_t(name.pipelineLibraryGroupHandles);}();return return_dVHVXXu;}();
return result;}

    VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineLibraryGroupHandles=deserialize_uint32_t(name["members"]["pipelineLibraryGroupHandles"]);}();}();
return result;}

    json serialize_VkDepthBiasInfoEXT(VkDepthBiasInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_HYhiYxz=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_VfNOlUW=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_SobABbg=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
return result;}

    VkDepthBiasInfoEXT deserialize_VkDepthBiasInfoEXT(json name){
        auto result=VkDepthBiasInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
return result;}

    json serialize_VkDepthBiasRepresentationInfoEXT(VkDepthBiasRepresentationInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasRepresentation"]=[&]() {
    json return_MzMyyez=json({});
    return serialize_VkDepthBiasRepresentationEXT(name.depthBiasRepresentation);}();
result["members"]["depthBiasExact"]=[&]() {
    json return_yEhIUYQ=json({});
    return_yEhIUYQ=[&]() {
    json return_VhonMmF=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_yEhIUYQ;}();
return result;}

    VkDepthBiasRepresentationInfoEXT deserialize_VkDepthBiasRepresentationInfoEXT(json name){
        auto result=VkDepthBiasRepresentationInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.depthBiasRepresentation=deserialize_VkDepthBiasRepresentationEXT(name["members"]["depthBiasRepresentation"]);}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkDecompressMemoryRegionNV(VkDecompressMemoryRegionNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_VyVTNdq=json({});
    return_VyVTNdq=[&]() {
    json return_nzCkBvt=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_VyVTNdq;}();
result["members"]["dstAddress"]=[&]() {
    json return_rXOxCoj=json({});
    return_rXOxCoj=[&]() {
    json return_BEXAKEx=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_rXOxCoj;}();
result["members"]["compressedSize"]=[&]() {
    json return_aywReti=json({});
    return_aywReti=[&]() {
    json return_kseLkNd=json({});
    return serialize_uint64_t(name.compressedSize);}();return return_aywReti;}();
result["members"]["decompressedSize"]=[&]() {
    json return_ZKPUNfU=json({});
    return_ZKPUNfU=[&]() {
    json return_BWkaYvZ=json({});
    return serialize_uint64_t(name.decompressedSize);}();return return_ZKPUNfU;}();
result["members"]["decompressionMethod"]=[&]() {
    json return_kRcRqRd=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethod);}();
return result;}

    VkDecompressMemoryRegionNV deserialize_VkDecompressMemoryRegionNV(json name){
        auto result=VkDecompressMemoryRegionNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.compressedSize=deserialize_uint64_t(name["members"]["compressedSize"]);}();}();
[&]() {
[&]() {
result.decompressedSize=deserialize_uint64_t(name["members"]["decompressedSize"]);}();}();
[&]() {
result.decompressionMethod=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethod"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreMask"]=[&]() {
    json return_agcbnNw=json({});
    return serialize_uint64_t(name.shaderCoreMask);}();
result["members"]["shaderCoreCount"]=[&]() {
    json return_gavleqi=json({});
    return serialize_uint32_t(name.shaderCoreCount);}();
result["members"]["shaderWarpsPerCore"]=[&]() {
    json return_STOcLnu=json({});
    return serialize_uint32_t(name.shaderWarpsPerCore);}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreMask=deserialize_uint64_t(name["members"]["shaderCoreMask"]);}();
[&]() {
result.shaderCoreCount=deserialize_uint32_t(name["members"]["shaderCoreCount"]);}();
[&]() {
result.shaderWarpsPerCore=deserialize_uint32_t(name["members"]["shaderWarpsPerCore"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreBuiltins"]=[&]() {
    json return_TFEfMvh=json({});
    return_TFEfMvh=[&]() {
    json return_NUbwsmd=json({});
    return serialize_uint32_t(name.shaderCoreBuiltins);}();return return_TFEfMvh;}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderCoreBuiltins=deserialize_uint32_t(name["members"]["shaderCoreBuiltins"]);}();}();
return result;}

    json serialize_VkFrameBoundaryEXT(VkFrameBoundaryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jsCITqo=json({});
    return serialize_VkFrameBoundaryFlagsEXT(name.flags);}();
result["members"]["frameID"]=[&]() {
    json return_AuJzZSF=json({});
    return serialize_uint64_t(name.frameID);}();
result["members"]["imageCount"]=[&]() {
    json return_dqPyOVF=json({});
    return serialize_uint32_t(name.imageCount);}();
result["members"]["pImages"]=[&]() {
    json return_ZOTNshK=json({});
    
        if (name.pImages==NULL){
            return_ZOTNshK["null"]=true;
            return return_ZOTNshK;
        }
        
        return_ZOTNshK["members"]={};
        for(int ZOTNshK=0; ZOTNshK < name.imageCount; ZOTNshK++){
            json temp;
            temp=[&]() {
    json return_TPpZMQT=json({});
    return serialize_VkImage(name.pImages[ZOTNshK]);}();
            return_ZOTNshK["members"][std::to_string(ZOTNshK)].push_back(temp);
        }
        return return_ZOTNshK;
        }();
result["members"]["bufferCount"]=[&]() {
    json return_rhGVntI=json({});
    return serialize_uint32_t(name.bufferCount);}();
result["members"]["pBuffers"]=[&]() {
    json return_iuRNqBu=json({});
    
        if (name.pBuffers==NULL){
            return_iuRNqBu["null"]=true;
            return return_iuRNqBu;
        }
        
        return_iuRNqBu["members"]={};
        for(int iuRNqBu=0; iuRNqBu < name.bufferCount; iuRNqBu++){
            json temp;
            temp=[&]() {
    json return_iPwPcZT=json({});
    return serialize_VkBuffer(name.pBuffers[iuRNqBu]);}();
            return_iuRNqBu["members"][std::to_string(iuRNqBu)].push_back(temp);
        }
        return return_iuRNqBu;
        }();
result["members"]["tagName"]=[&]() {
    json return_IuRXkCY=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_bKbgEFD=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_FfOfNAn=json({});
    
        if (name.pTag==NULL){
            return_FfOfNAn["null"]=true;
            return return_FfOfNAn;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkFrameBoundaryEXT deserialize_VkFrameBoundaryEXT(json name){
        auto result=VkFrameBoundaryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkFrameBoundaryFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.frameID=deserialize_uint64_t(name["members"]["frameID"]);}();
[&]() {
result.imageCount=deserialize_uint32_t(name["members"]["imageCount"]);}();
[&]() {
VkImage* temp_JVhAfGu;[&]() {

        if (name["members"]["pImages"].contains("null")){
        temp_JVhAfGu=NULL;
        }
    temp_JVhAfGu=(VkImage*)malloc(result.imageCount*sizeof(VkImage));
        for (int IXvRAkY=0; IXvRAkY < result.imageCount; IXvRAkY++){
            [&]() {
temp_JVhAfGu[IXvRAkY]=deserialize_VkImage(name["members"]["pImages"]["members"][IXvRAkY]);}();;
        }
        }();result.pImages=temp_JVhAfGu;}();
[&]() {
result.bufferCount=deserialize_uint32_t(name["members"]["bufferCount"]);}();
[&]() {
VkBuffer* temp_ZFauvIx;[&]() {

        if (name["members"]["pBuffers"].contains("null")){
        temp_ZFauvIx=NULL;
        }
    temp_ZFauvIx=(VkBuffer*)malloc(result.bufferCount*sizeof(VkBuffer));
        for (int xMpgFik=0; xMpgFik < result.bufferCount; xMpgFik++){
            [&]() {
temp_ZFauvIx[xMpgFik]=deserialize_VkBuffer(name["members"]["pBuffers"]["members"][xMpgFik]);}();;
        }
        }();result.pBuffers=temp_ZFauvIx;}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_EQhEVzC;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_EQhEVzC=NULL;
        }
    temp_EQhEVzC=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_EQhEVzC;}();
return result;}

    json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(VkPhysicalDeviceFrameBoundaryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["frameBoundary"]=[&]() {
    json return_qdmldHy=json({});
    return_qdmldHy=[&]() {
    json return_fbjVLIU=json({});
    return serialize_uint32_t(name.frameBoundary);}();return return_qdmldHy;}();
return result;}

    VkPhysicalDeviceFrameBoundaryFeaturesEXT deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFrameBoundaryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.frameBoundary=deserialize_uint32_t(name["members"]["frameBoundary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRenderingUnusedAttachments"]=[&]() {
    json return_BgaKBwB=json({});
    return_BgaKBwB=[&]() {
    json return_pWqmLbj=json({});
    return serialize_uint32_t(name.dynamicRenderingUnusedAttachments);}();return return_BgaKBwB;}();
return result;}

    VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRenderingUnusedAttachments=deserialize_uint32_t(name["members"]["dynamicRenderingUnusedAttachments"]);}();}();
return result;}

    json serialize_VkSurfacePresentModeEXT(VkSurfacePresentModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMode"]=[&]() {
    json return_ICDTogd=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
return result;}

    VkSurfacePresentModeEXT deserialize_VkSurfacePresentModeEXT(json name){
        auto result=VkSurfacePresentModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
return result;}

    json serialize_VkSurfacePresentScalingCapabilitiesEXT(VkSurfacePresentScalingCapabilitiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedPresentScaling"]=[&]() {
    json return_OjqSXKW=json({});
    return serialize_VkPresentScalingFlagsEXT(name.supportedPresentScaling);}();
result["members"]["supportedPresentGravityX"]=[&]() {
    json return_kWxUyJd=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityX);}();
result["members"]["supportedPresentGravityY"]=[&]() {
    json return_bNFwiKL=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityY);}();
result["members"]["minScaledImageExtent"]=[&]() {
    json return_UtbkRYn=json({});
    return serialize_VkExtent2D(name.minScaledImageExtent);}();
result["members"]["maxScaledImageExtent"]=[&]() {
    json return_pRoagfU=json({});
    return serialize_VkExtent2D(name.maxScaledImageExtent);}();
return result;}

    VkSurfacePresentScalingCapabilitiesEXT deserialize_VkSurfacePresentScalingCapabilitiesEXT(json name){
        auto result=VkSurfacePresentScalingCapabilitiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedPresentScaling=deserialize_VkPresentScalingFlagsEXT(name["members"]["supportedPresentScaling"]);}();
[&]() {
result.supportedPresentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityX"]);}();
[&]() {
result.supportedPresentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityY"]);}();
[&]() {
result.minScaledImageExtent=deserialize_VkExtent2D(name["members"]["minScaledImageExtent"]);}();
[&]() {
result.maxScaledImageExtent=deserialize_VkExtent2D(name["members"]["maxScaledImageExtent"]);}();
return result;}

    json serialize_VkSurfacePresentModeCompatibilityEXT(VkSurfacePresentModeCompatibilityEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_rouomvN=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_XLeCPrE=json({});
    
        if (name.pPresentModes==NULL){
            return_XLeCPrE["null"]=true;
            return return_XLeCPrE;
        }
        
        return_XLeCPrE["members"]={};
        for(int XLeCPrE=0; XLeCPrE < name.presentModeCount; XLeCPrE++){
            json temp;
            temp=[&]() {
    json return_pYclNJq=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[XLeCPrE]);}();
            return_XLeCPrE["members"][std::to_string(XLeCPrE)].push_back(temp);
        }
        return return_XLeCPrE;
        }();
return result;}

    VkSurfacePresentModeCompatibilityEXT deserialize_VkSurfacePresentModeCompatibilityEXT(json name){
        auto result=VkSurfacePresentModeCompatibilityEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        result.pPresentModes=NULL;
        }
    result.pPresentModes=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int aWBtNNK=0; aWBtNNK < result.presentModeCount; aWBtNNK++){
            [&]() {
result.pPresentModes[aWBtNNK]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][aWBtNNK]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainMaintenance1"]=[&]() {
    json return_KWZJDHK=json({});
    return_KWZJDHK=[&]() {
    json return_COxSirk=json({});
    return serialize_uint32_t(name.swapchainMaintenance1);}();return return_KWZJDHK;}();
return result;}

    VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(json name){
        auto result=VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.swapchainMaintenance1=deserialize_uint32_t(name["members"]["swapchainMaintenance1"]);}();}();
return result;}

    json serialize_VkSwapchainPresentFenceInfoEXT(VkSwapchainPresentFenceInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_eQuTgzd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pFences"]=[&]() {
    json return_cLscEpZ=json({});
    
        if (name.pFences==NULL){
            return_cLscEpZ["null"]=true;
            return return_cLscEpZ;
        }
        
        return_cLscEpZ["members"]={};
        for(int cLscEpZ=0; cLscEpZ < name.swapchainCount; cLscEpZ++){
            json temp;
            temp=[&]() {
    json return_vdfNMvX=json({});
    return serialize_VkFence(name.pFences[cLscEpZ]);}();
            return_cLscEpZ["members"][std::to_string(cLscEpZ)].push_back(temp);
        }
        return return_cLscEpZ;
        }();
return result;}

    VkSwapchainPresentFenceInfoEXT deserialize_VkSwapchainPresentFenceInfoEXT(json name){
        auto result=VkSwapchainPresentFenceInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkFence* temp_zirtqsy;[&]() {

        if (name["members"]["pFences"].contains("null")){
        temp_zirtqsy=NULL;
        }
    temp_zirtqsy=(VkFence*)malloc(result.swapchainCount*sizeof(VkFence));
        for (int aLsumKA=0; aLsumKA < result.swapchainCount; aLsumKA++){
            [&]() {
temp_zirtqsy[aLsumKA]=deserialize_VkFence(name["members"]["pFences"]["members"][aLsumKA]);}();;
        }
        }();result.pFences=temp_zirtqsy;}();
return result;}

    json serialize_VkSwapchainPresentModesCreateInfoEXT(VkSwapchainPresentModesCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_rouomvN=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_fXjwdXV=json({});
    
        if (name.pPresentModes==NULL){
            return_fXjwdXV["null"]=true;
            return return_fXjwdXV;
        }
        
        return_fXjwdXV["members"]={};
        for(int fXjwdXV=0; fXjwdXV < name.presentModeCount; fXjwdXV++){
            json temp;
            temp=[&]() {
    json return_cEJwLsW=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[fXjwdXV]);}();
            return_fXjwdXV["members"][std::to_string(fXjwdXV)].push_back(temp);
        }
        return return_fXjwdXV;
        }();
return result;}

    VkSwapchainPresentModesCreateInfoEXT deserialize_VkSwapchainPresentModesCreateInfoEXT(json name){
        auto result=VkSwapchainPresentModesCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {
VkPresentModeKHR* temp_STksaIb;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_STksaIb=NULL;
        }
    temp_STksaIb=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int aWBtNNK=0; aWBtNNK < result.presentModeCount; aWBtNNK++){
            [&]() {
temp_STksaIb[aWBtNNK]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][aWBtNNK]);}();;
        }
        }();result.pPresentModes=temp_STksaIb;}();
return result;}

    json serialize_VkSwapchainPresentModeInfoEXT(VkSwapchainPresentModeInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_eQuTgzd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_SEnPBUB=json({});
    
        if (name.pPresentModes==NULL){
            return_SEnPBUB["null"]=true;
            return return_SEnPBUB;
        }
        
        return_SEnPBUB["members"]={};
        for(int SEnPBUB=0; SEnPBUB < name.swapchainCount; SEnPBUB++){
            json temp;
            temp=[&]() {
    json return_gKQQHct=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[SEnPBUB]);}();
            return_SEnPBUB["members"][std::to_string(SEnPBUB)].push_back(temp);
        }
        return return_SEnPBUB;
        }();
return result;}

    VkSwapchainPresentModeInfoEXT deserialize_VkSwapchainPresentModeInfoEXT(json name){
        auto result=VkSwapchainPresentModeInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentModeKHR* temp_grtPgKr;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_grtPgKr=NULL;
        }
    temp_grtPgKr=(VkPresentModeKHR*)malloc(result.swapchainCount*sizeof(VkPresentModeKHR));
        for (int mFkElJa=0; mFkElJa < result.swapchainCount; mFkElJa++){
            [&]() {
temp_grtPgKr[mFkElJa]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][mFkElJa]);}();;
        }
        }();result.pPresentModes=temp_grtPgKr;}();
return result;}

    json serialize_VkSwapchainPresentScalingCreateInfoEXT(VkSwapchainPresentScalingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalingBehavior"]=[&]() {
    json return_MIFyzXK=json({});
    return serialize_VkPresentScalingFlagsEXT(name.scalingBehavior);}();
result["members"]["presentGravityX"]=[&]() {
    json return_ukNVtOj=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityX);}();
result["members"]["presentGravityY"]=[&]() {
    json return_rTvHYZk=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityY);}();
return result;}

    VkSwapchainPresentScalingCreateInfoEXT deserialize_VkSwapchainPresentScalingCreateInfoEXT(json name){
        auto result=VkSwapchainPresentScalingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.scalingBehavior=deserialize_VkPresentScalingFlagsEXT(name["members"]["scalingBehavior"]);}();
[&]() {
result.presentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityX"]);}();
[&]() {
result.presentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityY"]);}();
return result;}

    json serialize_VkReleaseSwapchainImagesInfoEXT(VkReleaseSwapchainImagesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_UhgbclQ=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndexCount"]=[&]() {
    json return_cByPplQ=json({});
    return serialize_uint32_t(name.imageIndexCount);}();
result["members"]["pImageIndices"]=[&]() {
    json return_nsukKVs=json({});
    
        if (name.pImageIndices==NULL){
            return_nsukKVs["null"]=true;
            return return_nsukKVs;
        }
        
        return_nsukKVs["members"]={};
        for(int nsukKVs=0; nsukKVs < name.imageIndexCount; nsukKVs++){
            json temp;
            temp=[&]() {
    json return_GyCKFVV=json({});
    return serialize_uint32_t(name.pImageIndices[nsukKVs]);}();
            return_nsukKVs["members"][std::to_string(nsukKVs)].push_back(temp);
        }
        return return_nsukKVs;
        }();
return result;}

    VkReleaseSwapchainImagesInfoEXT deserialize_VkReleaseSwapchainImagesInfoEXT(json name){
        auto result=VkReleaseSwapchainImagesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndexCount=deserialize_uint32_t(name["members"]["imageIndexCount"]);}();
[&]() {
uint32_t* temp_umyVHZE;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_umyVHZE=NULL;
        }
    temp_umyVHZE=(uint32_t*)malloc(result.imageIndexCount*sizeof(uint32_t));
        for (int TgJpnds=0; TgJpnds < result.imageIndexCount; TgJpnds++){
            [&]() {
temp_umyVHZE[TgJpnds]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][TgJpnds]);}();;
        }
        }();result.pImageIndices=temp_umyVHZE;}();
return result;}

    json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(VkPhysicalDeviceDepthBiasControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasControl"]=[&]() {
    json return_fATyBHQ=json({});
    return_fATyBHQ=[&]() {
    json return_epLeTAc=json({});
    return serialize_uint32_t(name.depthBiasControl);}();return return_fATyBHQ;}();
result["members"]["leastRepresentableValueForceUnormRepresentation"]=[&]() {
    json return_MTkRwbV=json({});
    return_MTkRwbV=[&]() {
    json return_zflqIMx=json({});
    return serialize_uint32_t(name.leastRepresentableValueForceUnormRepresentation);}();return return_MTkRwbV;}();
result["members"]["floatRepresentation"]=[&]() {
    json return_GRivoRA=json({});
    return_GRivoRA=[&]() {
    json return_XUsevfd=json({});
    return serialize_uint32_t(name.floatRepresentation);}();return return_GRivoRA;}();
result["members"]["depthBiasExact"]=[&]() {
    json return_yEhIUYQ=json({});
    return_yEhIUYQ=[&]() {
    json return_VhonMmF=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_yEhIUYQ;}();
return result;}

    VkPhysicalDeviceDepthBiasControlFeaturesEXT deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthBiasControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthBiasControl=deserialize_uint32_t(name["members"]["depthBiasControl"]);}();}();
[&]() {
[&]() {
result.leastRepresentableValueForceUnormRepresentation=deserialize_uint32_t(name["members"]["leastRepresentableValueForceUnormRepresentation"]);}();}();
[&]() {
[&]() {
result.floatRepresentation=deserialize_uint32_t(name["members"]["floatRepresentation"]);}();}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorder"]=[&]() {
    json return_UxOicZD=json({});
    return_UxOicZD=[&]() {
    json return_SYVycYc=json({});
    return serialize_uint32_t(name.rayTracingInvocationReorder);}();return return_UxOicZD;}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingInvocationReorder=deserialize_uint32_t(name["members"]["rayTracingInvocationReorder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorderReorderingHint"]=[&]() {
    json return_TMwwngT=json({});
    return serialize_VkRayTracingInvocationReorderModeNV(name.rayTracingInvocationReorderReorderingHint);}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.rayTracingInvocationReorderReorderingHint=deserialize_VkRayTracingInvocationReorderModeNV(name["members"]["rayTracingInvocationReorderReorderingHint"]);}();
return result;}

    json serialize_VkDirectDriverLoadingInfoLUNARG(VkDirectDriverLoadingInfoLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_TgWkdOs=json({});
    return serialize_VkDirectDriverLoadingFlagsLUNARG(name.flags);}();
result["members"]["pfnGetInstanceProcAddr"]=[&]() {
    json return_bkUbfSP=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkGetInstanceProcAddrLUNARG(name.pfnGetInstanceProcAddr);
        #endif
        }();
return result;}

    VkDirectDriverLoadingInfoLUNARG deserialize_VkDirectDriverLoadingInfoLUNARG(json name){
        auto result=VkDirectDriverLoadingInfoLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDirectDriverLoadingFlagsLUNARG(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnGetInstanceProcAddr=deserialize_PFN_vkGetInstanceProcAddrLUNARG(name["members"]["pfnGetInstanceProcAddr"]);
        #endif
        }();
return result;}

    json serialize_VkDirectDriverLoadingListLUNARG(VkDirectDriverLoadingListLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_IgydCCz=json({});
    return serialize_VkDirectDriverLoadingModeLUNARG(name.mode);}();
result["members"]["driverCount"]=[&]() {
    json return_UiDeEPU=json({});
    return serialize_uint32_t(name.driverCount);}();
result["members"]["pDrivers"]=[&]() {
    json return_KvZUszq=json({});
    
        if (name.pDrivers==NULL){
            return_KvZUszq["null"]=true;
            return return_KvZUszq;
        }
        
        return_KvZUszq["members"]={};
        for(int KvZUszq=0; KvZUszq < name.driverCount; KvZUszq++){
            json temp;
            temp=[&]() {
    json return_VozaUVb=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(name.pDrivers[KvZUszq]);}();
            return_KvZUszq["members"][std::to_string(KvZUszq)].push_back(temp);
        }
        return return_KvZUszq;
        }();
return result;}

    VkDirectDriverLoadingListLUNARG deserialize_VkDirectDriverLoadingListLUNARG(json name){
        auto result=VkDirectDriverLoadingListLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.mode=deserialize_VkDirectDriverLoadingModeLUNARG(name["members"]["mode"]);}();
[&]() {
result.driverCount=deserialize_uint32_t(name["members"]["driverCount"]);}();
[&]() {
VkDirectDriverLoadingInfoLUNARG* temp_OoAtzSx;[&]() {

        if (name["members"]["pDrivers"].contains("null")){
        temp_OoAtzSx=NULL;
        }
    temp_OoAtzSx=(VkDirectDriverLoadingInfoLUNARG*)malloc(result.driverCount*sizeof(VkDirectDriverLoadingInfoLUNARG));
        for (int GFEwLRM=0; GFEwLRM < result.driverCount; GFEwLRM++){
            [&]() {
temp_OoAtzSx[GFEwLRM]=deserialize_VkDirectDriverLoadingInfoLUNARG(name["members"]["pDrivers"]["members"][GFEwLRM]);}();;
        }
        }();result.pDrivers=temp_OoAtzSx;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewViewports"]=[&]() {
    json return_mftlrcs=json({});
    return_mftlrcs=[&]() {
    json return_CzsRiTh=json({});
    return serialize_uint32_t(name.multiviewPerViewViewports);}();return return_mftlrcs;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewViewports=deserialize_uint32_t(name["members"]["multiviewPerViewViewports"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPositionFetch"]=[&]() {
    json return_XBERaMc=json({});
    return_XBERaMc=[&]() {
    json return_yRlnOmL=json({});
    return serialize_uint32_t(name.rayTracingPositionFetch);}();return return_XBERaMc;}();
return result;}

    VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPositionFetch=deserialize_uint32_t(name["members"]["rayTracingPositionFetch"]);}();}();
return result;}

    json serialize_VkDeviceImageSubresourceInfoKHR(VkDeviceImageSubresourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_hodHPwJ=json({});
    
        if (name.pCreateInfo==NULL){
            return_hodHPwJ["null"]=true;
            return return_hodHPwJ;
        }
        return_hodHPwJ=[&]() {
    json return_MFWMyog=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_hodHPwJ;}();
result["members"]["pSubresource"]=[&]() {
    json return_DygqxsI=json({});
    
        if (name.pSubresource==NULL){
            return_DygqxsI["null"]=true;
            return return_DygqxsI;
        }
        return_DygqxsI=[&]() {
    json return_YmoKtAJ=json({});
    return serialize_VkImageSubresource2KHR(*name.pSubresource);}();
return return_DygqxsI;}();
return result;}

    VkDeviceImageSubresourceInfoKHR deserialize_VkDeviceImageSubresourceInfoKHR(json name){
        auto result=VkDeviceImageSubresourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
VkImageCreateInfo* temp_UEuUimT;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_UEuUimT=NULL;
        }
    [&]() {
*(temp_UEuUimT)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_UEuUimT;}();
[&]() {
VkImageSubresource2KHR* temp_YdAHBfr;[&]() {

        if (name["members"]["pSubresource"].contains("null")){
        temp_YdAHBfr=NULL;
        }
    [&]() {
*(temp_YdAHBfr)=deserialize_VkImageSubresource2KHR(name["members"]["pSubresource"]);}();
}();result.pSubresource=temp_YdAHBfr;}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesARM(VkPhysicalDeviceShaderCorePropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pixelRate"]=[&]() {
    json return_iPSjCZU=json({});
    return serialize_uint32_t(name.pixelRate);}();
result["members"]["texelRate"]=[&]() {
    json return_cHprQjg=json({});
    return serialize_uint32_t(name.texelRate);}();
result["members"]["fmaRate"]=[&]() {
    json return_mFPgnxt=json({});
    return serialize_uint32_t(name.fmaRate);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesARM deserialize_VkPhysicalDeviceShaderCorePropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pixelRate=deserialize_uint32_t(name["members"]["pixelRate"]);}();
[&]() {
result.texelRate=deserialize_uint32_t(name["members"]["texelRate"]);}();
[&]() {
result.fmaRate=deserialize_uint32_t(name["members"]["fmaRate"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewRenderAreas"]=[&]() {
    json return_GJZQCCc=json({});
    return_GJZQCCc=[&]() {
    json return_melRVDM=json({});
    return serialize_uint32_t(name.multiviewPerViewRenderAreas);}();return return_GJZQCCc;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewRenderAreas=deserialize_uint32_t(name["members"]["multiviewPerViewRenderAreas"]);}();}();
return result;}

    json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewRenderAreaCount"]=[&]() {
    json return_yDEtBMD=json({});
    return serialize_uint32_t(name.perViewRenderAreaCount);}();
result["members"]["pPerViewRenderAreas"]=[&]() {
    json return_cSpxnBY=json({});
    
        if (name.pPerViewRenderAreas==NULL){
            return_cSpxnBY["null"]=true;
            return return_cSpxnBY;
        }
        
        return_cSpxnBY["members"]={};
        for(int cSpxnBY=0; cSpxnBY < name.perViewRenderAreaCount; cSpxnBY++){
            json temp;
            temp=[&]() {
    json return_MfsUmFp=json({});
    return serialize_VkRect2D(name.pPerViewRenderAreas[cSpxnBY]);}();
            return_cSpxnBY["members"][std::to_string(cSpxnBY)].push_back(temp);
        }
        return return_cSpxnBY;
        }();
return result;}

    VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(json name){
        auto result=VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.perViewRenderAreaCount=deserialize_uint32_t(name["members"]["perViewRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_AtvfqtB;[&]() {

        if (name["members"]["pPerViewRenderAreas"].contains("null")){
        temp_AtvfqtB=NULL;
        }
    temp_AtvfqtB=(VkRect2D*)malloc(result.perViewRenderAreaCount*sizeof(VkRect2D));
        for (int QvPxwwQ=0; QvPxwwQ < result.perViewRenderAreaCount; QvPxwwQ++){
            [&]() {
temp_AtvfqtB[QvPxwwQ]=deserialize_VkRect2D(name["members"]["pPerViewRenderAreas"]["members"][QvPxwwQ]);}();;
        }
        }();result.pPerViewRenderAreas=temp_AtvfqtB;}();
return result;}

    json serialize_VkQueryLowLatencySupportNV(VkQueryLowLatencySupportNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pQueriedLowLatencyData"]=[&]() {
    json return_FicPVOh=json({});
    
        if (name.pQueriedLowLatencyData==NULL){
            return_FicPVOh["null"]=true;
            return return_FicPVOh;
        }
        return serialize_void_p(name.pQueriedLowLatencyData);
}();
return result;}

    VkQueryLowLatencySupportNV deserialize_VkQueryLowLatencySupportNV(json name){
        auto result=VkQueryLowLatencySupportNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        result.pQueriedLowLatencyData=NULL;
        }
    result.pQueriedLowLatencyData=deserialize_void_p(name["members"]["pQueriedLowLatencyData"]);
}();
return result;}

    json serialize_VkMemoryMapInfoKHR(VkMemoryMapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_guyanYZ=json({});
    return serialize_VkMemoryMapFlags(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_tQaagqI=json({});
    return_tQaagqI=[&]() {
    json return_afDnCvM=json({});
    return serialize_uint64_t(name.offset);}();return return_tQaagqI;}();
result["members"]["size"]=[&]() {
    json return_DuFSzQp=json({});
    return_DuFSzQp=[&]() {
    json return_uSVJDBr=json({});
    return serialize_uint64_t(name.size);}();return return_DuFSzQp;}();
return result;}

    VkMemoryMapInfoKHR deserialize_VkMemoryMapInfoKHR(json name){
        auto result=VkMemoryMapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkMemoryMapFlags(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkMemoryUnmapInfoKHR(VkMemoryUnmapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OMbSzHr=json({});
    return serialize_VkMemoryUnmapFlagsKHR(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_bSEBXsY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkMemoryUnmapInfoKHR deserialize_VkMemoryUnmapInfoKHR(json name){
        auto result=VkMemoryUnmapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkMemoryUnmapFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(VkPhysicalDeviceShaderObjectFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderObject"]=[&]() {
    json return_pxJAhmI=json({});
    return_pxJAhmI=[&]() {
    json return_ViknWgz=json({});
    return serialize_uint32_t(name.shaderObject);}();return return_pxJAhmI;}();
return result;}

    VkPhysicalDeviceShaderObjectFeaturesEXT deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderObject=deserialize_uint32_t(name["members"]["shaderObject"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(VkPhysicalDeviceShaderObjectPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBinaryUUID"]=[&]() {
    json return_iBgtPKk=json({});
    
        return_iBgtPKk["members"]={};
        for(int iBgtPKk=0; iBgtPKk < VK_UUID_SIZE; iBgtPKk++){
            json temp;
            temp=[&]() {
    json return_RkcPJeV=json({});
    return serialize_uint8_t(name.shaderBinaryUUID[iBgtPKk]);}();
            return_iBgtPKk["members"][std::to_string(iBgtPKk)].push_back(temp);
        }
        return return_iBgtPKk;
        }();
result["members"]["shaderBinaryVersion"]=[&]() {
    json return_DObjEHS=json({});
    return serialize_uint32_t(name.shaderBinaryVersion);}();
return result;}

    VkPhysicalDeviceShaderObjectPropertiesEXT deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int WBVEfXv=0; WBVEfXv < VK_UUID_SIZE; WBVEfXv++){
            [&]() {
result.shaderBinaryUUID[WBVEfXv]=deserialize_uint8_t(name["members"]["shaderBinaryUUID"]["members"][WBVEfXv]);}();;
        }
        }();
[&]() {
result.shaderBinaryVersion=deserialize_uint32_t(name["members"]["shaderBinaryVersion"]);}();
return result;}

    json serialize_VkShaderCreateInfoEXT(VkShaderCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AfPPHWq=json({});
    return serialize_VkShaderCreateFlagsEXT(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_FQCAGvf=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["nextStage"]=[&]() {
    json return_VIMDYjg=json({});
    return serialize_VkShaderStageFlags(name.nextStage);}();
result["members"]["codeType"]=[&]() {
    json return_eRbmjyQ=json({});
    return serialize_VkShaderCodeTypeEXT(name.codeType);}();
result["members"]["codeSize"]=[&]() {
    json return_QjmrVYD=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_TInHayC=json({});
    
        if (name.pCode==NULL){
            return_TInHayC["null"]=true;
            return return_TInHayC;
        }
        return serialize_void_p(name.pCode);
}();
result["members"]["pName"]=[&]() {
    json return_fydPvmv=json({});
    
        if (name.pName==NULL){
            return_fydPvmv["null"]=true;
            return return_fydPvmv;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["setLayoutCount"]=[&]() {
    json return_YRrdYtD=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_ZsgayCy=json({});
    
        if (name.pSetLayouts==NULL){
            return_ZsgayCy["null"]=true;
            return return_ZsgayCy;
        }
        
        return_ZsgayCy["members"]={};
        for(int ZsgayCy=0; ZsgayCy < name.setLayoutCount; ZsgayCy++){
            json temp;
            temp=[&]() {
    json return_BmyPkLF=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[ZsgayCy]);}();
            return_ZsgayCy["members"][std::to_string(ZsgayCy)].push_back(temp);
        }
        return return_ZsgayCy;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_NJcDMQa=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_fbtPAWc=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_fbtPAWc["null"]=true;
            return return_fbtPAWc;
        }
        
        return_fbtPAWc["members"]={};
        for(int fbtPAWc=0; fbtPAWc < name.pushConstantRangeCount; fbtPAWc++){
            json temp;
            temp=[&]() {
    json return_ijJiYJG=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[fbtPAWc]);}();
            return_fbtPAWc["members"][std::to_string(fbtPAWc)].push_back(temp);
        }
        return return_fbtPAWc;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_aeuPZoZ=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_aeuPZoZ["null"]=true;
            return return_aeuPZoZ;
        }
        return_aeuPZoZ=[&]() {
    json return_fnqaudl=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_aeuPZoZ;}();
return result;}

    VkShaderCreateInfoEXT deserialize_VkShaderCreateInfoEXT(json name){
        auto result=VkShaderCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.flags=deserialize_VkShaderCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.nextStage=deserialize_VkShaderStageFlags(name["members"]["nextStage"]);}();
[&]() {
result.codeType=deserialize_VkShaderCodeTypeEXT(name["members"]["codeType"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
void* temp_BOgMVuJ;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_BOgMVuJ=NULL;
        }
    temp_BOgMVuJ=deserialize_void_p(name["members"]["pCode"]);
}();result.pCode=temp_BOgMVuJ;}();
[&]() {
char* temp_uaicPga;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_uaicPga=NULL;
        }
    temp_uaicPga=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_uaicPga;}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_mZYzMaz;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_mZYzMaz=NULL;
        }
    temp_mZYzMaz=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int UWvCHBq=0; UWvCHBq < result.setLayoutCount; UWvCHBq++){
            [&]() {
temp_mZYzMaz[UWvCHBq]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][UWvCHBq]);}();;
        }
        }();result.pSetLayouts=temp_mZYzMaz;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_xozEiSl;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_xozEiSl=NULL;
        }
    temp_xozEiSl=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int CzPpuGM=0; CzPpuGM < result.pushConstantRangeCount; CzPpuGM++){
            [&]() {
temp_xozEiSl[CzPpuGM]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][CzPpuGM]);}();;
        }
        }();result.pPushConstantRanges=temp_xozEiSl;}();
[&]() {
VkSpecializationInfo* temp_qhoLDqw;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_qhoLDqw=NULL;
        }
    [&]() {
*(temp_qhoLDqw)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_qhoLDqw;}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(VkPhysicalDeviceShaderTileImageFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageColorReadAccess"]=[&]() {
    json return_WSLKdTb=json({});
    return_WSLKdTb=[&]() {
    json return_bKzwgKq=json({});
    return serialize_uint32_t(name.shaderTileImageColorReadAccess);}();return return_WSLKdTb;}();
result["members"]["shaderTileImageDepthReadAccess"]=[&]() {
    json return_QjKNDRu=json({});
    return_QjKNDRu=[&]() {
    json return_QyPyRoz=json({});
    return serialize_uint32_t(name.shaderTileImageDepthReadAccess);}();return return_QjKNDRu;}();
result["members"]["shaderTileImageStencilReadAccess"]=[&]() {
    json return_axxuuao=json({});
    return_axxuuao=[&]() {
    json return_zbyAIcN=json({});
    return serialize_uint32_t(name.shaderTileImageStencilReadAccess);}();return return_axxuuao;}();
return result;}

    VkPhysicalDeviceShaderTileImageFeaturesEXT deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImageFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageColorReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageColorReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageDepthReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageDepthReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageStencilReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageStencilReadAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(VkPhysicalDeviceShaderTileImagePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageCoherentReadAccelerated"]=[&]() {
    json return_WlmcFlz=json({});
    return_WlmcFlz=[&]() {
    json return_CeSlwkX=json({});
    return serialize_uint32_t(name.shaderTileImageCoherentReadAccelerated);}();return return_WlmcFlz;}();
result["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]=[&]() {
    json return_OlcVvDm=json({});
    return_OlcVvDm=[&]() {
    json return_dPtvQtY=json({});
    return serialize_uint32_t(name.shaderTileImageReadSampleFromPixelRateInvocation);}();return return_OlcVvDm;}();
result["members"]["shaderTileImageReadFromHelperInvocation"]=[&]() {
    json return_jaqIPSs=json({});
    return_jaqIPSs=[&]() {
    json return_DxoAiKU=json({});
    return serialize_uint32_t(name.shaderTileImageReadFromHelperInvocation);}();return return_jaqIPSs;}();
return result;}

    VkPhysicalDeviceShaderTileImagePropertiesEXT deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImagePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageCoherentReadAccelerated=deserialize_uint32_t(name["members"]["shaderTileImageCoherentReadAccelerated"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadSampleFromPixelRateInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadFromHelperInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadFromHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(VkPhysicalDeviceCooperativeMatrixFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_bybNXea=json({});
    return_bybNXea=[&]() {
    json return_EKANyvT=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_bybNXea;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_MiIfomY=json({});
    return_MiIfomY=[&]() {
    json return_IyDUfwO=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_MiIfomY;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesKHR deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesKHR(VkCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_Mqalifm=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_qNcqYfl=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_xmzXEtX=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_cMxnfKm=json({});
    return serialize_VkComponentTypeKHR(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_umaIakM=json({});
    return serialize_VkComponentTypeKHR(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_TVtlspE=json({});
    return serialize_VkComponentTypeKHR(name.CType);}();
result["members"]["ResultType"]=[&]() {
    json return_Mnsagkz=json({});
    return serialize_VkComponentTypeKHR(name.ResultType);}();
result["members"]["saturatingAccumulation"]=[&]() {
    json return_FBkGRiv=json({});
    return_FBkGRiv=[&]() {
    json return_sQjVwcb=json({});
    return serialize_uint32_t(name.saturatingAccumulation);}();return return_FBkGRiv;}();
result["members"]["scope"]=[&]() {
    json return_iUXawUB=json({});
    return serialize_VkScopeKHR(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesKHR deserialize_VkCooperativeMatrixPropertiesKHR(json name){
        auto result=VkCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeKHR(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeKHR(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeKHR(name["members"]["CType"]);}();
[&]() {
result.ResultType=deserialize_VkComponentTypeKHR(name["members"]["ResultType"]);}();
[&]() {
[&]() {
result.saturatingAccumulation=deserialize_uint32_t(name["members"]["saturatingAccumulation"]);}();}();
[&]() {
result.scope=deserialize_VkScopeKHR(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDeviceCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_jIxxlcr=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesKHR deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(VkPhysicalDeviceCubicClampFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicRangeClamp"]=[&]() {
    json return_ZbgHPzS=json({});
    return_ZbgHPzS=[&]() {
    json return_hBVXNRd=json({});
    return serialize_uint32_t(name.cubicRangeClamp);}();return return_ZbgHPzS;}();
return result;}

    VkPhysicalDeviceCubicClampFeaturesQCOM deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicClampFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cubicRangeClamp=deserialize_uint32_t(name["members"]["cubicRangeClamp"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrDegamma"]=[&]() {
    json return_TiwKIso=json({});
    return_TiwKIso=[&]() {
    json return_OWSNTkX=json({});
    return serialize_uint32_t(name.ycbcrDegamma);}();return return_TiwKIso;}();
return result;}

    VkPhysicalDeviceYcbcrDegammaFeaturesQCOM deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceYcbcrDegammaFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrDegamma=deserialize_uint32_t(name["members"]["ycbcrDegamma"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enableYDegamma"]=[&]() {
    json return_eIxHgoN=json({});
    return_eIxHgoN=[&]() {
    json return_UySDpJO=json({});
    return serialize_uint32_t(name.enableYDegamma);}();return return_eIxHgoN;}();
result["members"]["enableCbCrDegamma"]=[&]() {
    json return_pYxvjNM=json({});
    return_pYxvjNM=[&]() {
    json return_kWXABYs=json({});
    return serialize_uint32_t(name.enableCbCrDegamma);}();return return_pYxvjNM;}();
return result;}

    VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(json name){
        auto result=VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.enableYDegamma=deserialize_uint32_t(name["members"]["enableYDegamma"]);}();}();
[&]() {
[&]() {
result.enableCbCrDegamma=deserialize_uint32_t(name["members"]["enableCbCrDegamma"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(VkPhysicalDeviceCubicWeightsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["selectableCubicWeights"]=[&]() {
    json return_JuXWzpk=json({});
    return_JuXWzpk=[&]() {
    json return_xtQGEFR=json({});
    return serialize_uint32_t(name.selectableCubicWeights);}();return return_JuXWzpk;}();
return result;}

    VkPhysicalDeviceCubicWeightsFeaturesQCOM deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicWeightsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.selectableCubicWeights=deserialize_uint32_t(name["members"]["selectableCubicWeights"]);}();}();
return result;}

    json serialize_VkSamplerCubicWeightsCreateInfoQCOM(VkSamplerCubicWeightsCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_MnpVcEb=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkSamplerCubicWeightsCreateInfoQCOM deserialize_VkSamplerCubicWeightsCreateInfoQCOM(json name){
        auto result=VkSamplerCubicWeightsCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkBlitImageCubicWeightsInfoQCOM(VkBlitImageCubicWeightsInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_MnpVcEb=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkBlitImageCubicWeightsInfoQCOM deserialize_VkBlitImageCubicWeightsInfoQCOM(json name){
        auto result=VkBlitImageCubicWeightsInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(VkPhysicalDeviceImageProcessing2FeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureBlockMatch2"]=[&]() {
    json return_HrCFXec=json({});
    return_HrCFXec=[&]() {
    json return_mxLsEut=json({});
    return serialize_uint32_t(name.textureBlockMatch2);}();return return_HrCFXec;}();
return result;}

    VkPhysicalDeviceImageProcessing2FeaturesQCOM deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2FeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureBlockMatch2=deserialize_uint32_t(name["members"]["textureBlockMatch2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(VkPhysicalDeviceImageProcessing2PropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBlockMatchWindow"]=[&]() {
    json return_sAYiIRW=json({});
    return serialize_VkExtent2D(name.maxBlockMatchWindow);}();
return result;}

    VkPhysicalDeviceImageProcessing2PropertiesQCOM deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2PropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxBlockMatchWindow=deserialize_VkExtent2D(name["members"]["maxBlockMatchWindow"]);}();
return result;}

    json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(VkSamplerBlockMatchWindowCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMfvxOc=json({});
    
        if (name.pNext==NULL){
            return_xMfvxOc["null"]=true;
            return return_xMfvxOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["windowExtent"]=[&]() {
    json return_BEUIheY=json({});
    return serialize_VkExtent2D(name.windowExtent);}();
result["members"]["windowCompareMode"]=[&]() {
    json return_wHHewRU=json({});
    return serialize_VkBlockMatchWindowCompareModeQCOM(name.windowCompareMode);}();
return result;}

    VkSamplerBlockMatchWindowCreateInfoQCOM deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(json name){
        auto result=VkSamplerBlockMatchWindowCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoPzilh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoPzilh=NULL;
        }
    temp_YoPzilh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoPzilh;}();
[&]() {
result.windowExtent=deserialize_VkExtent2D(name["members"]["windowExtent"]);}();
[&]() {
result.windowCompareMode=deserialize_VkBlockMatchWindowCompareModeQCOM(name["members"]["windowCompareMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPoolOverallocation"]=[&]() {
    json return_OpfFAIe=json({});
    return_OpfFAIe=[&]() {
    json return_ZPKuKQV=json({});
    return serialize_uint32_t(name.descriptorPoolOverallocation);}();return return_OpfFAIe;}();
return result;}

    VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(json name){
        auto result=VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorPoolOverallocation=deserialize_uint32_t(name["members"]["descriptorPoolOverallocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(VkPhysicalDeviceLayeredDriverPropertiesMSFT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvxCMcv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqZJFFf=json({});
    
        if (name.pNext==NULL){
            return_EqZJFFf["null"]=true;
            return return_EqZJFFf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["underlyingAPI"]=[&]() {
    json return_PJjDwRe=json({});
    return serialize_VkLayeredDriverUnderlyingApiMSFT(name.underlyingAPI);}();
return result;}

    VkPhysicalDeviceLayeredDriverPropertiesMSFT deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(json name){
        auto result=VkPhysicalDeviceLayeredDriverPropertiesMSFT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.underlyingAPI=deserialize_VkLayeredDriverUnderlyingApiMSFT(name["members"]["underlyingAPI"]);}();
return result;}

            json serialize_int(int name){
                return json::object({{"value",name}});
            };
        

            int deserialize_int(json name){
                return name["value"].get<int>();
            };
        

            json serialize_void_p(const void* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            void* deserialize_void_p(json name){
                return (void*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char_p(const char* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            char* deserialize_char_p(json name){
                return (char*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char(char name){
                return json::object({{"value",name}});
            };
        

            char deserialize_char(json name){
                return name["value"].get<char>();
            };
        

            json serialize_float(float name){
                return json::object({{"value",name}});
            };
        

            float deserialize_float(json name){
                return name["value"].get<float>();
            };
        

            json serialize_double(double name){
                return json::object({{"value",name}});
            };
        

            double deserialize_double(json name){
                return name["value"].get<double>();
            };
        

            json serialize_int8_t(int8_t name){
                return json::object({{"value",name}});
            };
        

            int8_t deserialize_int8_t(json name){
                return name["value"].get<int8_t>();
            };
        

            json serialize_uint8_t(uint8_t name){
                return json::object({{"value",name}});
            };
        

            uint8_t deserialize_uint8_t(json name){
                return name["value"].get<uint8_t>();
            };
        

            json serialize_int16_t(int16_t name){
                return json::object({{"value",name}});
            };
        

            int16_t deserialize_int16_t(json name){
                return name["value"].get<int16_t>();
            };
        

            json serialize_uint16_t(uint16_t name){
                return json::object({{"value",name}});
            };
        

            uint16_t deserialize_uint16_t(json name){
                return name["value"].get<uint16_t>();
            };
        

            json serialize_uint32_t(uint32_t name){
                return json::object({{"value",name}});
            };
        

            uint32_t deserialize_uint32_t(json name){
                return name["value"].get<uint32_t>();
            };
        

            json serialize_uint64_t(uint64_t name){
                return json::object({{"value",name}});
            };
        

            uint64_t deserialize_uint64_t(json name){
                return name["value"].get<uint64_t>();
            };
        

            json serialize_int32_t(int32_t name){
                return json::object({{"value",name}});
            };
        

            int32_t deserialize_int32_t(json name){
                return name["value"].get<int32_t>();
            };
        

            json serialize_int64_t(int64_t name){
                return json::object({{"value",name}});
            };
        

            int64_t deserialize_int64_t(json name){
                return name["value"].get<int64_t>();
            };
        

            json serialize_size_t(size_t name){
                return json::object({{"value",name}});
            };
        

            size_t deserialize_size_t(json name){
                return name["value"].get<size_t>();
            };
        

            json serialize_VkFramebufferCreateFlags(VkFramebufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlags deserialize_VkFramebufferCreateFlags(json name){
                return name["value"].get<VkFramebufferCreateFlags>();
            };
        

            json serialize_VkQueryPoolCreateFlags(VkQueryPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolCreateFlags deserialize_VkQueryPoolCreateFlags(json name){
                return name["value"].get<VkQueryPoolCreateFlags>();
            };
        

            json serialize_VkRenderPassCreateFlags(VkRenderPassCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlags deserialize_VkRenderPassCreateFlags(json name){
                return name["value"].get<VkRenderPassCreateFlags>();
            };
        

            json serialize_VkSamplerCreateFlags(VkSamplerCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlags deserialize_VkSamplerCreateFlags(json name){
                return name["value"].get<VkSamplerCreateFlags>();
            };
        

            json serialize_VkPipelineLayoutCreateFlags(VkPipelineLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlags deserialize_VkPipelineLayoutCreateFlags(json name){
                return name["value"].get<VkPipelineLayoutCreateFlags>();
            };
        

            json serialize_VkPipelineCacheCreateFlags(VkPipelineCacheCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlags deserialize_VkPipelineCacheCreateFlags(json name){
                return name["value"].get<VkPipelineCacheCreateFlags>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlags(VkPipelineDepthStencilStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlags deserialize_VkPipelineDepthStencilStateCreateFlags(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlags>();
            };
        

            json serialize_VkPipelineDynamicStateCreateFlags(VkPipelineDynamicStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDynamicStateCreateFlags deserialize_VkPipelineDynamicStateCreateFlags(json name){
                return name["value"].get<VkPipelineDynamicStateCreateFlags>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlags(VkPipelineColorBlendStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlags deserialize_VkPipelineColorBlendStateCreateFlags(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlags>();
            };
        

            json serialize_VkPipelineMultisampleStateCreateFlags(VkPipelineMultisampleStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineMultisampleStateCreateFlags deserialize_VkPipelineMultisampleStateCreateFlags(json name){
                return name["value"].get<VkPipelineMultisampleStateCreateFlags>();
            };
        

            json serialize_VkPipelineRasterizationStateCreateFlags(VkPipelineRasterizationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateCreateFlags deserialize_VkPipelineRasterizationStateCreateFlags(json name){
                return name["value"].get<VkPipelineRasterizationStateCreateFlags>();
            };
        

            json serialize_VkPipelineViewportStateCreateFlags(VkPipelineViewportStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportStateCreateFlags deserialize_VkPipelineViewportStateCreateFlags(json name){
                return name["value"].get<VkPipelineViewportStateCreateFlags>();
            };
        

            json serialize_VkPipelineTessellationStateCreateFlags(VkPipelineTessellationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineTessellationStateCreateFlags deserialize_VkPipelineTessellationStateCreateFlags(json name){
                return name["value"].get<VkPipelineTessellationStateCreateFlags>();
            };
        

            json serialize_VkPipelineInputAssemblyStateCreateFlags(VkPipelineInputAssemblyStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineInputAssemblyStateCreateFlags deserialize_VkPipelineInputAssemblyStateCreateFlags(json name){
                return name["value"].get<VkPipelineInputAssemblyStateCreateFlags>();
            };
        

            json serialize_VkPipelineVertexInputStateCreateFlags(VkPipelineVertexInputStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineVertexInputStateCreateFlags deserialize_VkPipelineVertexInputStateCreateFlags(json name){
                return name["value"].get<VkPipelineVertexInputStateCreateFlags>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlags(VkPipelineShaderStageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlags deserialize_VkPipelineShaderStageCreateFlags(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlags>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlags(VkDescriptorSetLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlags deserialize_VkDescriptorSetLayoutCreateFlags(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlags>();
            };
        

            json serialize_VkBufferViewCreateFlags(VkBufferViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferViewCreateFlags deserialize_VkBufferViewCreateFlags(json name){
                return name["value"].get<VkBufferViewCreateFlags>();
            };
        

            json serialize_VkInstanceCreateFlags(VkInstanceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlags deserialize_VkInstanceCreateFlags(json name){
                return name["value"].get<VkInstanceCreateFlags>();
            };
        

            json serialize_VkDeviceCreateFlags(VkDeviceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceCreateFlags deserialize_VkDeviceCreateFlags(json name){
                return name["value"].get<VkDeviceCreateFlags>();
            };
        

            json serialize_VkDeviceQueueCreateFlags(VkDeviceQueueCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlags deserialize_VkDeviceQueueCreateFlags(json name){
                return name["value"].get<VkDeviceQueueCreateFlags>();
            };
        

            json serialize_VkQueueFlags(VkQueueFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlags deserialize_VkQueueFlags(json name){
                return name["value"].get<VkQueueFlags>();
            };
        

            json serialize_VkMemoryPropertyFlags(VkMemoryPropertyFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlags deserialize_VkMemoryPropertyFlags(json name){
                return name["value"].get<VkMemoryPropertyFlags>();
            };
        

            json serialize_VkMemoryHeapFlags(VkMemoryHeapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlags deserialize_VkMemoryHeapFlags(json name){
                return name["value"].get<VkMemoryHeapFlags>();
            };
        

            json serialize_VkAccessFlags(VkAccessFlags name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags deserialize_VkAccessFlags(json name){
                return name["value"].get<VkAccessFlags>();
            };
        

            json serialize_VkBufferUsageFlags(VkBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags deserialize_VkBufferUsageFlags(json name){
                return name["value"].get<VkBufferUsageFlags>();
            };
        

            json serialize_VkBufferCreateFlags(VkBufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlags deserialize_VkBufferCreateFlags(json name){
                return name["value"].get<VkBufferCreateFlags>();
            };
        

            json serialize_VkShaderStageFlags(VkShaderStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlags deserialize_VkShaderStageFlags(json name){
                return name["value"].get<VkShaderStageFlags>();
            };
        

            json serialize_VkImageUsageFlags(VkImageUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlags deserialize_VkImageUsageFlags(json name){
                return name["value"].get<VkImageUsageFlags>();
            };
        

            json serialize_VkImageCreateFlags(VkImageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlags deserialize_VkImageCreateFlags(json name){
                return name["value"].get<VkImageCreateFlags>();
            };
        

            json serialize_VkImageViewCreateFlags(VkImageViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlags deserialize_VkImageViewCreateFlags(json name){
                return name["value"].get<VkImageViewCreateFlags>();
            };
        

            json serialize_VkPipelineCreateFlags(VkPipelineCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags deserialize_VkPipelineCreateFlags(json name){
                return name["value"].get<VkPipelineCreateFlags>();
            };
        

            json serialize_VkColorComponentFlags(VkColorComponentFlags name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlags deserialize_VkColorComponentFlags(json name){
                return name["value"].get<VkColorComponentFlags>();
            };
        

            json serialize_VkFenceCreateFlags(VkFenceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlags deserialize_VkFenceCreateFlags(json name){
                return name["value"].get<VkFenceCreateFlags>();
            };
        

            json serialize_VkSemaphoreCreateFlags(VkSemaphoreCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreCreateFlags deserialize_VkSemaphoreCreateFlags(json name){
                return name["value"].get<VkSemaphoreCreateFlags>();
            };
        

            json serialize_VkFormatFeatureFlags(VkFormatFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags deserialize_VkFormatFeatureFlags(json name){
                return name["value"].get<VkFormatFeatureFlags>();
            };
        

            json serialize_VkQueryControlFlags(VkQueryControlFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlags deserialize_VkQueryControlFlags(json name){
                return name["value"].get<VkQueryControlFlags>();
            };
        

            json serialize_VkQueryResultFlags(VkQueryResultFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlags deserialize_VkQueryResultFlags(json name){
                return name["value"].get<VkQueryResultFlags>();
            };
        

            json serialize_VkShaderModuleCreateFlags(VkShaderModuleCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderModuleCreateFlags deserialize_VkShaderModuleCreateFlags(json name){
                return name["value"].get<VkShaderModuleCreateFlags>();
            };
        

            json serialize_VkEventCreateFlags(VkEventCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlags deserialize_VkEventCreateFlags(json name){
                return name["value"].get<VkEventCreateFlags>();
            };
        

            json serialize_VkCommandPoolCreateFlags(VkCommandPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlags deserialize_VkCommandPoolCreateFlags(json name){
                return name["value"].get<VkCommandPoolCreateFlags>();
            };
        

            json serialize_VkCommandPoolResetFlags(VkCommandPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlags deserialize_VkCommandPoolResetFlags(json name){
                return name["value"].get<VkCommandPoolResetFlags>();
            };
        

            json serialize_VkCommandBufferResetFlags(VkCommandBufferResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlags deserialize_VkCommandBufferResetFlags(json name){
                return name["value"].get<VkCommandBufferResetFlags>();
            };
        

            json serialize_VkCommandBufferUsageFlags(VkCommandBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlags deserialize_VkCommandBufferUsageFlags(json name){
                return name["value"].get<VkCommandBufferUsageFlags>();
            };
        

            json serialize_VkQueryPipelineStatisticFlags(VkQueryPipelineStatisticFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlags deserialize_VkQueryPipelineStatisticFlags(json name){
                return name["value"].get<VkQueryPipelineStatisticFlags>();
            };
        

            json serialize_VkMemoryMapFlags(VkMemoryMapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryMapFlags deserialize_VkMemoryMapFlags(json name){
                return name["value"].get<VkMemoryMapFlags>();
            };
        

            json serialize_VkMemoryUnmapFlagsKHR(VkMemoryUnmapFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryUnmapFlagsKHR deserialize_VkMemoryUnmapFlagsKHR(json name){
                return name["value"].get<VkMemoryUnmapFlagsKHR>();
            };
        

            json serialize_VkImageAspectFlags(VkImageAspectFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlags deserialize_VkImageAspectFlags(json name){
                return name["value"].get<VkImageAspectFlags>();
            };
        

            json serialize_VkSparseMemoryBindFlags(VkSparseMemoryBindFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlags deserialize_VkSparseMemoryBindFlags(json name){
                return name["value"].get<VkSparseMemoryBindFlags>();
            };
        

            json serialize_VkSparseImageFormatFlags(VkSparseImageFormatFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlags deserialize_VkSparseImageFormatFlags(json name){
                return name["value"].get<VkSparseImageFormatFlags>();
            };
        

            json serialize_VkSubpassDescriptionFlags(VkSubpassDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlags deserialize_VkSubpassDescriptionFlags(json name){
                return name["value"].get<VkSubpassDescriptionFlags>();
            };
        

            json serialize_VkPipelineStageFlags(VkPipelineStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags deserialize_VkPipelineStageFlags(json name){
                return name["value"].get<VkPipelineStageFlags>();
            };
        

            json serialize_VkSampleCountFlags(VkSampleCountFlags name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlags deserialize_VkSampleCountFlags(json name){
                return name["value"].get<VkSampleCountFlags>();
            };
        

            json serialize_VkAttachmentDescriptionFlags(VkAttachmentDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlags deserialize_VkAttachmentDescriptionFlags(json name){
                return name["value"].get<VkAttachmentDescriptionFlags>();
            };
        

            json serialize_VkStencilFaceFlags(VkStencilFaceFlags name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlags deserialize_VkStencilFaceFlags(json name){
                return name["value"].get<VkStencilFaceFlags>();
            };
        

            json serialize_VkCullModeFlags(VkCullModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlags deserialize_VkCullModeFlags(json name){
                return name["value"].get<VkCullModeFlags>();
            };
        

            json serialize_VkDescriptorPoolCreateFlags(VkDescriptorPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlags deserialize_VkDescriptorPoolCreateFlags(json name){
                return name["value"].get<VkDescriptorPoolCreateFlags>();
            };
        

            json serialize_VkDescriptorPoolResetFlags(VkDescriptorPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolResetFlags deserialize_VkDescriptorPoolResetFlags(json name){
                return name["value"].get<VkDescriptorPoolResetFlags>();
            };
        

            json serialize_VkDependencyFlags(VkDependencyFlags name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlags deserialize_VkDependencyFlags(json name){
                return name["value"].get<VkDependencyFlags>();
            };
        

            json serialize_VkSubgroupFeatureFlags(VkSubgroupFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlags deserialize_VkSubgroupFeatureFlags(json name){
                return name["value"].get<VkSubgroupFeatureFlags>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagsNV(VkIndirectCommandsLayoutUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagsNV deserialize_VkIndirectCommandsLayoutUsageFlagsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagsNV>();
            };
        

            json serialize_VkIndirectStateFlagsNV(VkIndirectStateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagsNV deserialize_VkIndirectStateFlagsNV(json name){
                return name["value"].get<VkIndirectStateFlagsNV>();
            };
        

            json serialize_VkGeometryFlagsKHR(VkGeometryFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsKHR deserialize_VkGeometryFlagsKHR(json name){
                return name["value"].get<VkGeometryFlagsKHR>();
            };
        

            json serialize_VkGeometryFlagsNV(VkGeometryFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsNV deserialize_VkGeometryFlagsNV(json name){
                return name["value"].get<VkGeometryFlagsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagsKHR(VkGeometryInstanceFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsKHR deserialize_VkGeometryInstanceFlagsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagsNV(VkGeometryInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsNV deserialize_VkGeometryInstanceFlagsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsKHR(VkBuildAccelerationStructureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsKHR deserialize_VkBuildAccelerationStructureFlagsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsNV(VkBuildAccelerationStructureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsNV deserialize_VkBuildAccelerationStructureFlagsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsNV>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlags(VkPrivateDataSlotCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlags deserialize_VkPrivateDataSlotCreateFlags(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlags>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlagsEXT(VkPrivateDataSlotCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlagsEXT deserialize_VkPrivateDataSlotCreateFlagsEXT(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlagsEXT>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagsKHR(VkAccelerationStructureCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagsKHR deserialize_VkAccelerationStructureCreateFlagsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagsKHR>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlags(VkDescriptorUpdateTemplateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlags deserialize_VkDescriptorUpdateTemplateCreateFlags(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlags>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlagsKHR(VkDescriptorUpdateTemplateCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlagsKHR deserialize_VkDescriptorUpdateTemplateCreateFlagsKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlagsKHR>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlags(VkPipelineCreationFeedbackFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlags deserialize_VkPipelineCreationFeedbackFlags(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlags>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagsEXT(VkPipelineCreationFeedbackFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagsEXT deserialize_VkPipelineCreationFeedbackFlagsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagsEXT>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagsKHR(VkPerformanceCounterDescriptionFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagsKHR deserialize_VkPerformanceCounterDescriptionFlagsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagsKHR(VkAcquireProfilingLockFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagsKHR deserialize_VkAcquireProfilingLockFlagsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlags(VkSemaphoreWaitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlags deserialize_VkSemaphoreWaitFlags(json name){
                return name["value"].get<VkSemaphoreWaitFlags>();
            };
        

            json serialize_VkSemaphoreWaitFlagsKHR(VkSemaphoreWaitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagsKHR deserialize_VkSemaphoreWaitFlagsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagsKHR>();
            };
        

            json serialize_VkPipelineCompilerControlFlagsAMD(VkPipelineCompilerControlFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagsAMD deserialize_VkPipelineCompilerControlFlagsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagsAMD(VkShaderCorePropertiesFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagsAMD deserialize_VkShaderCorePropertiesFlagsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagsAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagsNV(VkDeviceDiagnosticsConfigFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagsNV deserialize_VkDeviceDiagnosticsConfigFlagsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagsNV>();
            };
        

            json serialize_VkAccessFlags2(VkAccessFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2 deserialize_VkAccessFlags2(json name){
                return name["value"].get<VkAccessFlags2>();
            };
        

            json serialize_VkAccessFlags2KHR(VkAccessFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2KHR deserialize_VkAccessFlags2KHR(json name){
                return name["value"].get<VkAccessFlags2KHR>();
            };
        

            json serialize_VkPipelineStageFlags2(VkPipelineStageFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2 deserialize_VkPipelineStageFlags2(json name){
                return name["value"].get<VkPipelineStageFlags2>();
            };
        

            json serialize_VkPipelineStageFlags2KHR(VkPipelineStageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2KHR deserialize_VkPipelineStageFlags2KHR(json name){
                return name["value"].get<VkPipelineStageFlags2KHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInfoFlagsNV(VkAccelerationStructureMotionInfoFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInfoFlagsNV deserialize_VkAccelerationStructureMotionInfoFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInfoFlagsNV>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceFlagsNV(VkAccelerationStructureMotionInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceFlagsNV deserialize_VkAccelerationStructureMotionInstanceFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceFlagsNV>();
            };
        

            json serialize_VkFormatFeatureFlags2(VkFormatFeatureFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2 deserialize_VkFormatFeatureFlags2(json name){
                return name["value"].get<VkFormatFeatureFlags2>();
            };
        

            json serialize_VkFormatFeatureFlags2KHR(VkFormatFeatureFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2KHR deserialize_VkFormatFeatureFlags2KHR(json name){
                return name["value"].get<VkFormatFeatureFlags2KHR>();
            };
        

            json serialize_VkRenderingFlags(VkRenderingFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlags deserialize_VkRenderingFlags(json name){
                return name["value"].get<VkRenderingFlags>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagsNV(VkMemoryDecompressionMethodFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagsNV deserialize_VkMemoryDecompressionMethodFlagsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagsNV>();
            };
        

            json serialize_VkRenderingFlagsKHR(VkRenderingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagsKHR deserialize_VkRenderingFlagsKHR(json name){
                return name["value"].get<VkRenderingFlagsKHR>();
            };
        

            json serialize_VkBuildMicromapFlagsEXT(VkBuildMicromapFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagsEXT deserialize_VkBuildMicromapFlagsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagsEXT(VkMicromapCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagsEXT deserialize_VkMicromapCreateFlagsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagsEXT>();
            };
        

            json serialize_VkDirectDriverLoadingFlagsLUNARG(VkDirectDriverLoadingFlagsLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingFlagsLUNARG deserialize_VkDirectDriverLoadingFlagsLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingFlagsLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlags2KHR(VkPipelineCreateFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags2KHR deserialize_VkPipelineCreateFlags2KHR(json name){
                return name["value"].get<VkPipelineCreateFlags2KHR>();
            };
        

            json serialize_VkBufferUsageFlags2KHR(VkBufferUsageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags2KHR deserialize_VkBufferUsageFlags2KHR(json name){
                return name["value"].get<VkBufferUsageFlags2KHR>();
            };
        

            json serialize_VkCompositeAlphaFlagsKHR(VkCompositeAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagsKHR deserialize_VkCompositeAlphaFlagsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagsKHR(VkDisplayPlaneAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagsKHR deserialize_VkDisplayPlaneAlphaFlagsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagsKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagsKHR(VkSurfaceTransformFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagsKHR deserialize_VkSurfaceTransformFlagsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagsKHR(VkSwapchainCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagsKHR deserialize_VkSwapchainCreateFlagsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagsKHR>();
            };
        

            json serialize_VkDisplayModeCreateFlagsKHR(VkDisplayModeCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayModeCreateFlagsKHR deserialize_VkDisplayModeCreateFlagsKHR(json name){
                return name["value"].get<VkDisplayModeCreateFlagsKHR>();
            };
        

            json serialize_VkDisplaySurfaceCreateFlagsKHR(VkDisplaySurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplaySurfaceCreateFlagsKHR deserialize_VkDisplaySurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkDisplaySurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXlibSurfaceCreateFlagsKHR(VkXlibSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXlibSurfaceCreateFlagsKHR deserialize_VkXlibSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXlibSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXcbSurfaceCreateFlagsKHR(VkXcbSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXcbSurfaceCreateFlagsKHR deserialize_VkXcbSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXcbSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkHeadlessSurfaceCreateFlagsEXT(VkHeadlessSurfaceCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHeadlessSurfaceCreateFlagsEXT deserialize_VkHeadlessSurfaceCreateFlagsEXT(json name){
                return name["value"].get<VkHeadlessSurfaceCreateFlagsEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlags(VkPeerMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlags deserialize_VkPeerMemoryFeatureFlags(json name){
                return name["value"].get<VkPeerMemoryFeatureFlags>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagsKHR(VkPeerMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagsKHR deserialize_VkPeerMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlags(VkMemoryAllocateFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlags deserialize_VkMemoryAllocateFlags(json name){
                return name["value"].get<VkMemoryAllocateFlags>();
            };
        

            json serialize_VkMemoryAllocateFlagsKHR(VkMemoryAllocateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagsKHR deserialize_VkMemoryAllocateFlagsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagsKHR(VkDeviceGroupPresentModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagsKHR deserialize_VkDeviceGroupPresentModeFlagsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagsKHR>();
            };
        

            json serialize_VkDebugReportFlagsEXT(VkDebugReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagsEXT deserialize_VkDebugReportFlagsEXT(json name){
                return name["value"].get<VkDebugReportFlagsEXT>();
            };
        

            json serialize_VkCommandPoolTrimFlags(VkCommandPoolTrimFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlags deserialize_VkCommandPoolTrimFlags(json name){
                return name["value"].get<VkCommandPoolTrimFlags>();
            };
        

            json serialize_VkCommandPoolTrimFlagsKHR(VkCommandPoolTrimFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlagsKHR deserialize_VkCommandPoolTrimFlagsKHR(json name){
                return name["value"].get<VkCommandPoolTrimFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsNV(VkExternalMemoryHandleTypeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsNV deserialize_VkExternalMemoryHandleTypeFlagsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsNV(VkExternalMemoryFeatureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsNV deserialize_VkExternalMemoryFeatureFlagsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsNV>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlags(VkExternalMemoryHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlags deserialize_VkExternalMemoryHandleTypeFlags(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlags>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsKHR(VkExternalMemoryHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsKHR deserialize_VkExternalMemoryHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlags(VkExternalMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlags deserialize_VkExternalMemoryFeatureFlags(json name){
                return name["value"].get<VkExternalMemoryFeatureFlags>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsKHR(VkExternalMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsKHR deserialize_VkExternalMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlags(VkExternalSemaphoreHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlags deserialize_VkExternalSemaphoreHandleTypeFlags(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlags>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagsKHR(VkExternalSemaphoreHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagsKHR deserialize_VkExternalSemaphoreHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlags(VkExternalSemaphoreFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlags deserialize_VkExternalSemaphoreFeatureFlags(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlags>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagsKHR(VkExternalSemaphoreFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagsKHR deserialize_VkExternalSemaphoreFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlags(VkSemaphoreImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlags deserialize_VkSemaphoreImportFlags(json name){
                return name["value"].get<VkSemaphoreImportFlags>();
            };
        

            json serialize_VkSemaphoreImportFlagsKHR(VkSemaphoreImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagsKHR deserialize_VkSemaphoreImportFlagsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlags(VkExternalFenceHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlags deserialize_VkExternalFenceHandleTypeFlags(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlags>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagsKHR(VkExternalFenceHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagsKHR deserialize_VkExternalFenceHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlags(VkExternalFenceFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlags deserialize_VkExternalFenceFeatureFlags(json name){
                return name["value"].get<VkExternalFenceFeatureFlags>();
            };
        

            json serialize_VkExternalFenceFeatureFlagsKHR(VkExternalFenceFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagsKHR deserialize_VkExternalFenceFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagsKHR>();
            };
        

            json serialize_VkFenceImportFlags(VkFenceImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlags deserialize_VkFenceImportFlags(json name){
                return name["value"].get<VkFenceImportFlags>();
            };
        

            json serialize_VkFenceImportFlagsKHR(VkFenceImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagsKHR deserialize_VkFenceImportFlagsKHR(json name){
                return name["value"].get<VkFenceImportFlagsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagsEXT(VkSurfaceCounterFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagsEXT deserialize_VkSurfaceCounterFlagsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagsEXT>();
            };
        

            json serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(VkPipelineViewportSwizzleStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportSwizzleStateCreateFlagsNV deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineViewportSwizzleStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(VkPipelineDiscardRectangleStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDiscardRectangleStateCreateFlagsEXT deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineDiscardRectangleStateCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineCoverageToColorStateCreateFlagsNV(VkPipelineCoverageToColorStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageToColorStateCreateFlagsNV deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageToColorStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageModulationStateCreateFlagsNV(VkPipelineCoverageModulationStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageModulationStateCreateFlagsNV deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageModulationStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageReductionStateCreateFlagsNV(VkPipelineCoverageReductionStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageReductionStateCreateFlagsNV deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageReductionStateCreateFlagsNV>();
            };
        

            json serialize_VkValidationCacheCreateFlagsEXT(VkValidationCacheCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheCreateFlagsEXT deserialize_VkValidationCacheCreateFlagsEXT(json name){
                return name["value"].get<VkValidationCacheCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagsEXT(VkDebugUtilsMessageSeverityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagsEXT deserialize_VkDebugUtilsMessageSeverityFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagsEXT(VkDebugUtilsMessageTypeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagsEXT deserialize_VkDebugUtilsMessageTypeFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCreateFlagsEXT(VkDebugUtilsMessengerCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCreateFlagsEXT deserialize_VkDebugUtilsMessengerCreateFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(VkDebugUtilsMessengerCallbackDataFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCallbackDataFlagsEXT deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCallbackDataFlagsEXT>();
            };
        

            json serialize_VkDeviceMemoryReportFlagsEXT(VkDeviceMemoryReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportFlagsEXT deserialize_VkDeviceMemoryReportFlagsEXT(json name){
                return name["value"].get<VkDeviceMemoryReportFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(VkPipelineRasterizationConservativeStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationConservativeStateCreateFlagsEXT deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationConservativeStateCreateFlagsEXT>();
            };
        

            json serialize_VkDescriptorBindingFlags(VkDescriptorBindingFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlags deserialize_VkDescriptorBindingFlags(json name){
                return name["value"].get<VkDescriptorBindingFlags>();
            };
        

            json serialize_VkDescriptorBindingFlagsEXT(VkDescriptorBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagsEXT deserialize_VkDescriptorBindingFlagsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagsEXT(VkConditionalRenderingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagsEXT deserialize_VkConditionalRenderingFlagsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagsEXT>();
            };
        

            json serialize_VkResolveModeFlags(VkResolveModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlags deserialize_VkResolveModeFlags(json name){
                return name["value"].get<VkResolveModeFlags>();
            };
        

            json serialize_VkResolveModeFlagsKHR(VkResolveModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagsKHR deserialize_VkResolveModeFlagsKHR(json name){
                return name["value"].get<VkResolveModeFlagsKHR>();
            };
        

            json serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(VkPipelineRasterizationStateStreamCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateStreamCreateFlagsEXT deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationStateStreamCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(VkPipelineRasterizationDepthClipStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationDepthClipStateCreateFlagsEXT deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationDepthClipStateCreateFlagsEXT>();
            };
        

            json serialize_VkToolPurposeFlags(VkToolPurposeFlags name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlags deserialize_VkToolPurposeFlags(json name){
                return name["value"].get<VkToolPurposeFlags>();
            };
        

            json serialize_VkToolPurposeFlagsEXT(VkToolPurposeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagsEXT deserialize_VkToolPurposeFlagsEXT(json name){
                return name["value"].get<VkToolPurposeFlagsEXT>();
            };
        

            json serialize_VkSubmitFlags(VkSubmitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlags deserialize_VkSubmitFlags(json name){
                return name["value"].get<VkSubmitFlags>();
            };
        

            json serialize_VkSubmitFlagsKHR(VkSubmitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagsKHR deserialize_VkSubmitFlagsKHR(json name){
                return name["value"].get<VkSubmitFlagsKHR>();
            };
        

            json serialize_VkHostImageCopyFlagsEXT(VkHostImageCopyFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagsEXT deserialize_VkHostImageCopyFlagsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagsEXT>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagsEXT(VkGraphicsPipelineLibraryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagsEXT deserialize_VkGraphicsPipelineLibraryFlagsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFlagsEXT(VkImageCompressionFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagsEXT deserialize_VkImageCompressionFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagsEXT(VkImageCompressionFixedRateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagsEXT deserialize_VkImageCompressionFixedRateFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagsEXT(VkDeviceAddressBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagsEXT deserialize_VkDeviceAddressBindingFlagsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagsNV(VkOpticalFlowGridSizeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagsNV deserialize_VkOpticalFlowGridSizeFlagsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagsNV(VkOpticalFlowUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagsNV deserialize_VkOpticalFlowUsageFlagsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagsNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagsNV(VkOpticalFlowSessionCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagsNV deserialize_VkOpticalFlowSessionCreateFlagsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagsNV(VkOpticalFlowExecuteFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagsNV deserialize_VkOpticalFlowExecuteFlagsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagsNV>();
            };
        

            json serialize_VkFrameBoundaryFlagsEXT(VkFrameBoundaryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagsEXT deserialize_VkFrameBoundaryFlagsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagsEXT>();
            };
        

            json serialize_VkPresentScalingFlagsEXT(VkPresentScalingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagsEXT deserialize_VkPresentScalingFlagsEXT(json name){
                return name["value"].get<VkPresentScalingFlagsEXT>();
            };
        

            json serialize_VkPresentGravityFlagsEXT(VkPresentGravityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagsEXT deserialize_VkPresentGravityFlagsEXT(json name){
                return name["value"].get<VkPresentGravityFlagsEXT>();
            };
        

            json serialize_VkShaderCreateFlagsEXT(VkShaderCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagsEXT deserialize_VkShaderCreateFlagsEXT(json name){
                return name["value"].get<VkShaderCreateFlagsEXT>();
            };
        

            json serialize_VkVideoCodecOperationFlagsKHR(VkVideoCodecOperationFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagsKHR deserialize_VkVideoCodecOperationFlagsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagsKHR(VkVideoCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagsKHR deserialize_VkVideoCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagsKHR(VkVideoSessionCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagsKHR deserialize_VkVideoSessionCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagsKHR>();
            };
        

            json serialize_VkVideoSessionParametersCreateFlagsKHR(VkVideoSessionParametersCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionParametersCreateFlagsKHR deserialize_VkVideoSessionParametersCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionParametersCreateFlagsKHR>();
            };
        

            json serialize_VkVideoBeginCodingFlagsKHR(VkVideoBeginCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoBeginCodingFlagsKHR deserialize_VkVideoBeginCodingFlagsKHR(json name){
                return name["value"].get<VkVideoBeginCodingFlagsKHR>();
            };
        

            json serialize_VkVideoEndCodingFlagsKHR(VkVideoEndCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoEndCodingFlagsKHR deserialize_VkVideoEndCodingFlagsKHR(json name){
                return name["value"].get<VkVideoEndCodingFlagsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagsKHR(VkVideoCodingControlFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagsKHR deserialize_VkVideoCodingControlFlagsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagsKHR(VkVideoDecodeUsageFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagsKHR deserialize_VkVideoDecodeUsageFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagsKHR(VkVideoDecodeCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagsKHR deserialize_VkVideoDecodeCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeFlagsKHR(VkVideoDecodeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeFlagsKHR deserialize_VkVideoDecodeFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagsKHR(VkVideoDecodeH264PictureLayoutFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagsKHR(VkVideoChromaSubsamplingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagsKHR deserialize_VkVideoChromaSubsamplingFlagsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagsKHR(VkVideoComponentBitDepthFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagsKHR deserialize_VkVideoComponentBitDepthFlagsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagsKHR>();
            };
        

            json serialize_VkAttachmentLoadOp(VkAttachmentLoadOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentLoadOp deserialize_VkAttachmentLoadOp(json name){
                return name["value"].get<VkAttachmentLoadOp>();
            };
        

            json serialize_VkAttachmentStoreOp(VkAttachmentStoreOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentStoreOp deserialize_VkAttachmentStoreOp(json name){
                return name["value"].get<VkAttachmentStoreOp>();
            };
        

            json serialize_VkBlendFactor(VkBlendFactor name){
                return json::object({{"value",name}});
            };
        

            VkBlendFactor deserialize_VkBlendFactor(json name){
                return name["value"].get<VkBlendFactor>();
            };
        

            json serialize_VkBlendOp(VkBlendOp name){
                return json::object({{"value",name}});
            };
        

            VkBlendOp deserialize_VkBlendOp(json name){
                return name["value"].get<VkBlendOp>();
            };
        

            json serialize_VkBorderColor(VkBorderColor name){
                return json::object({{"value",name}});
            };
        

            VkBorderColor deserialize_VkBorderColor(json name){
                return name["value"].get<VkBorderColor>();
            };
        

            json serialize_VkFramebufferCreateFlagBits(VkFramebufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlagBits deserialize_VkFramebufferCreateFlagBits(json name){
                return name["value"].get<VkFramebufferCreateFlagBits>();
            };
        

            json serialize_VkRenderPassCreateFlagBits(VkRenderPassCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlagBits deserialize_VkRenderPassCreateFlagBits(json name){
                return name["value"].get<VkRenderPassCreateFlagBits>();
            };
        

            json serialize_VkSamplerCreateFlagBits(VkSamplerCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlagBits deserialize_VkSamplerCreateFlagBits(json name){
                return name["value"].get<VkSamplerCreateFlagBits>();
            };
        

            json serialize_VkPipelineCacheHeaderVersion(VkPipelineCacheHeaderVersion name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheHeaderVersion deserialize_VkPipelineCacheHeaderVersion(json name){
                return name["value"].get<VkPipelineCacheHeaderVersion>();
            };
        

            json serialize_VkPipelineCacheCreateFlagBits(VkPipelineCacheCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlagBits deserialize_VkPipelineCacheCreateFlagBits(json name){
                return name["value"].get<VkPipelineCacheCreateFlagBits>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlagBits(VkPipelineShaderStageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlagBits deserialize_VkPipelineShaderStageCreateFlagBits(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlagBits>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlagBits(VkDescriptorSetLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlagBits deserialize_VkDescriptorSetLayoutCreateFlagBits(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlagBits>();
            };
        

            json serialize_VkInstanceCreateFlagBits(VkInstanceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlagBits deserialize_VkInstanceCreateFlagBits(json name){
                return name["value"].get<VkInstanceCreateFlagBits>();
            };
        

            json serialize_VkDeviceQueueCreateFlagBits(VkDeviceQueueCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlagBits deserialize_VkDeviceQueueCreateFlagBits(json name){
                return name["value"].get<VkDeviceQueueCreateFlagBits>();
            };
        

            json serialize_VkBufferCreateFlagBits(VkBufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlagBits deserialize_VkBufferCreateFlagBits(json name){
                return name["value"].get<VkBufferCreateFlagBits>();
            };
        

            json serialize_VkBufferUsageFlagBits(VkBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits deserialize_VkBufferUsageFlagBits(json name){
                return name["value"].get<VkBufferUsageFlagBits>();
            };
        

            json serialize_VkColorComponentFlagBits(VkColorComponentFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlagBits deserialize_VkColorComponentFlagBits(json name){
                return name["value"].get<VkColorComponentFlagBits>();
            };
        

            json serialize_VkComponentSwizzle(VkComponentSwizzle name){
                return json::object({{"value",name}});
            };
        

            VkComponentSwizzle deserialize_VkComponentSwizzle(json name){
                return name["value"].get<VkComponentSwizzle>();
            };
        

            json serialize_VkCommandPoolCreateFlagBits(VkCommandPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlagBits deserialize_VkCommandPoolCreateFlagBits(json name){
                return name["value"].get<VkCommandPoolCreateFlagBits>();
            };
        

            json serialize_VkCommandPoolResetFlagBits(VkCommandPoolResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlagBits deserialize_VkCommandPoolResetFlagBits(json name){
                return name["value"].get<VkCommandPoolResetFlagBits>();
            };
        

            json serialize_VkCommandBufferResetFlagBits(VkCommandBufferResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlagBits deserialize_VkCommandBufferResetFlagBits(json name){
                return name["value"].get<VkCommandBufferResetFlagBits>();
            };
        

            json serialize_VkCommandBufferLevel(VkCommandBufferLevel name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferLevel deserialize_VkCommandBufferLevel(json name){
                return name["value"].get<VkCommandBufferLevel>();
            };
        

            json serialize_VkCommandBufferUsageFlagBits(VkCommandBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlagBits deserialize_VkCommandBufferUsageFlagBits(json name){
                return name["value"].get<VkCommandBufferUsageFlagBits>();
            };
        

            json serialize_VkCompareOp(VkCompareOp name){
                return json::object({{"value",name}});
            };
        

            VkCompareOp deserialize_VkCompareOp(json name){
                return name["value"].get<VkCompareOp>();
            };
        

            json serialize_VkCullModeFlagBits(VkCullModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlagBits deserialize_VkCullModeFlagBits(json name){
                return name["value"].get<VkCullModeFlagBits>();
            };
        

            json serialize_VkDescriptorType(VkDescriptorType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorType deserialize_VkDescriptorType(json name){
                return name["value"].get<VkDescriptorType>();
            };
        

            json serialize_VkDynamicState(VkDynamicState name){
                return json::object({{"value",name}});
            };
        

            VkDynamicState deserialize_VkDynamicState(json name){
                return name["value"].get<VkDynamicState>();
            };
        

            json serialize_VkFenceCreateFlagBits(VkFenceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlagBits deserialize_VkFenceCreateFlagBits(json name){
                return name["value"].get<VkFenceCreateFlagBits>();
            };
        

            json serialize_VkPolygonMode(VkPolygonMode name){
                return json::object({{"value",name}});
            };
        

            VkPolygonMode deserialize_VkPolygonMode(json name){
                return name["value"].get<VkPolygonMode>();
            };
        

            json serialize_VkFormat(VkFormat name){
                return json::object({{"value",name}});
            };
        

            VkFormat deserialize_VkFormat(json name){
                return name["value"].get<VkFormat>();
            };
        

            json serialize_VkFormatFeatureFlagBits(VkFormatFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits deserialize_VkFormatFeatureFlagBits(json name){
                return name["value"].get<VkFormatFeatureFlagBits>();
            };
        

            json serialize_VkFrontFace(VkFrontFace name){
                return json::object({{"value",name}});
            };
        

            VkFrontFace deserialize_VkFrontFace(json name){
                return name["value"].get<VkFrontFace>();
            };
        

            json serialize_VkImageAspectFlagBits(VkImageAspectFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlagBits deserialize_VkImageAspectFlagBits(json name){
                return name["value"].get<VkImageAspectFlagBits>();
            };
        

            json serialize_VkImageCreateFlagBits(VkImageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlagBits deserialize_VkImageCreateFlagBits(json name){
                return name["value"].get<VkImageCreateFlagBits>();
            };
        

            json serialize_VkImageLayout(VkImageLayout name){
                return json::object({{"value",name}});
            };
        

            VkImageLayout deserialize_VkImageLayout(json name){
                return name["value"].get<VkImageLayout>();
            };
        

            json serialize_VkImageTiling(VkImageTiling name){
                return json::object({{"value",name}});
            };
        

            VkImageTiling deserialize_VkImageTiling(json name){
                return name["value"].get<VkImageTiling>();
            };
        

            json serialize_VkImageType(VkImageType name){
                return json::object({{"value",name}});
            };
        

            VkImageType deserialize_VkImageType(json name){
                return name["value"].get<VkImageType>();
            };
        

            json serialize_VkImageUsageFlagBits(VkImageUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlagBits deserialize_VkImageUsageFlagBits(json name){
                return name["value"].get<VkImageUsageFlagBits>();
            };
        

            json serialize_VkImageViewCreateFlagBits(VkImageViewCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlagBits deserialize_VkImageViewCreateFlagBits(json name){
                return name["value"].get<VkImageViewCreateFlagBits>();
            };
        

            json serialize_VkImageViewType(VkImageViewType name){
                return json::object({{"value",name}});
            };
        

            VkImageViewType deserialize_VkImageViewType(json name){
                return name["value"].get<VkImageViewType>();
            };
        

            json serialize_VkSharingMode(VkSharingMode name){
                return json::object({{"value",name}});
            };
        

            VkSharingMode deserialize_VkSharingMode(json name){
                return name["value"].get<VkSharingMode>();
            };
        

            json serialize_VkIndexType(VkIndexType name){
                return json::object({{"value",name}});
            };
        

            VkIndexType deserialize_VkIndexType(json name){
                return name["value"].get<VkIndexType>();
            };
        

            json serialize_VkLogicOp(VkLogicOp name){
                return json::object({{"value",name}});
            };
        

            VkLogicOp deserialize_VkLogicOp(json name){
                return name["value"].get<VkLogicOp>();
            };
        

            json serialize_VkMemoryHeapFlagBits(VkMemoryHeapFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlagBits deserialize_VkMemoryHeapFlagBits(json name){
                return name["value"].get<VkMemoryHeapFlagBits>();
            };
        

            json serialize_VkAccessFlagBits(VkAccessFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits deserialize_VkAccessFlagBits(json name){
                return name["value"].get<VkAccessFlagBits>();
            };
        

            json serialize_VkMemoryPropertyFlagBits(VkMemoryPropertyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlagBits deserialize_VkMemoryPropertyFlagBits(json name){
                return name["value"].get<VkMemoryPropertyFlagBits>();
            };
        

            json serialize_VkPhysicalDeviceType(VkPhysicalDeviceType name){
                return json::object({{"value",name}});
            };
        

            VkPhysicalDeviceType deserialize_VkPhysicalDeviceType(json name){
                return name["value"].get<VkPhysicalDeviceType>();
            };
        

            json serialize_VkPipelineBindPoint(VkPipelineBindPoint name){
                return json::object({{"value",name}});
            };
        

            VkPipelineBindPoint deserialize_VkPipelineBindPoint(json name){
                return name["value"].get<VkPipelineBindPoint>();
            };
        

            json serialize_VkPipelineCreateFlagBits(VkPipelineCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits deserialize_VkPipelineCreateFlagBits(json name){
                return name["value"].get<VkPipelineCreateFlagBits>();
            };
        

            json serialize_VkPrimitiveTopology(VkPrimitiveTopology name){
                return json::object({{"value",name}});
            };
        

            VkPrimitiveTopology deserialize_VkPrimitiveTopology(json name){
                return name["value"].get<VkPrimitiveTopology>();
            };
        

            json serialize_VkQueryControlFlagBits(VkQueryControlFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlagBits deserialize_VkQueryControlFlagBits(json name){
                return name["value"].get<VkQueryControlFlagBits>();
            };
        

            json serialize_VkQueryPipelineStatisticFlagBits(VkQueryPipelineStatisticFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlagBits deserialize_VkQueryPipelineStatisticFlagBits(json name){
                return name["value"].get<VkQueryPipelineStatisticFlagBits>();
            };
        

            json serialize_VkQueryResultFlagBits(VkQueryResultFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlagBits deserialize_VkQueryResultFlagBits(json name){
                return name["value"].get<VkQueryResultFlagBits>();
            };
        

            json serialize_VkQueryType(VkQueryType name){
                return json::object({{"value",name}});
            };
        

            VkQueryType deserialize_VkQueryType(json name){
                return name["value"].get<VkQueryType>();
            };
        

            json serialize_VkQueueFlagBits(VkQueueFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlagBits deserialize_VkQueueFlagBits(json name){
                return name["value"].get<VkQueueFlagBits>();
            };
        

            json serialize_VkSubpassContents(VkSubpassContents name){
                return json::object({{"value",name}});
            };
        

            VkSubpassContents deserialize_VkSubpassContents(json name){
                return name["value"].get<VkSubpassContents>();
            };
        

            json serialize_VkResult(VkResult name){
                return json::object({{"value",name}});
            };
        

            VkResult deserialize_VkResult(json name){
                return name["value"].get<VkResult>();
            };
        

            json serialize_VkShaderStageFlagBits(VkShaderStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlagBits deserialize_VkShaderStageFlagBits(json name){
                return name["value"].get<VkShaderStageFlagBits>();
            };
        

            json serialize_VkSparseMemoryBindFlagBits(VkSparseMemoryBindFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlagBits deserialize_VkSparseMemoryBindFlagBits(json name){
                return name["value"].get<VkSparseMemoryBindFlagBits>();
            };
        

            json serialize_VkStencilFaceFlagBits(VkStencilFaceFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlagBits deserialize_VkStencilFaceFlagBits(json name){
                return name["value"].get<VkStencilFaceFlagBits>();
            };
        

            json serialize_VkStencilOp(VkStencilOp name){
                return json::object({{"value",name}});
            };
        

            VkStencilOp deserialize_VkStencilOp(json name){
                return name["value"].get<VkStencilOp>();
            };
        

            json serialize_VkStructureType(VkStructureType name){
                return json::object({{"value",name}});
            };
        

            VkStructureType deserialize_VkStructureType(json name){
                return name["value"].get<VkStructureType>();
            };
        

            json serialize_VkSystemAllocationScope(VkSystemAllocationScope name){
                return json::object({{"value",name}});
            };
        

            VkSystemAllocationScope deserialize_VkSystemAllocationScope(json name){
                return name["value"].get<VkSystemAllocationScope>();
            };
        

            json serialize_VkInternalAllocationType(VkInternalAllocationType name){
                return json::object({{"value",name}});
            };
        

            VkInternalAllocationType deserialize_VkInternalAllocationType(json name){
                return name["value"].get<VkInternalAllocationType>();
            };
        

            json serialize_VkSamplerAddressMode(VkSamplerAddressMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerAddressMode deserialize_VkSamplerAddressMode(json name){
                return name["value"].get<VkSamplerAddressMode>();
            };
        

            json serialize_VkFilter(VkFilter name){
                return json::object({{"value",name}});
            };
        

            VkFilter deserialize_VkFilter(json name){
                return name["value"].get<VkFilter>();
            };
        

            json serialize_VkSamplerMipmapMode(VkSamplerMipmapMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerMipmapMode deserialize_VkSamplerMipmapMode(json name){
                return name["value"].get<VkSamplerMipmapMode>();
            };
        

            json serialize_VkVertexInputRate(VkVertexInputRate name){
                return json::object({{"value",name}});
            };
        

            VkVertexInputRate deserialize_VkVertexInputRate(json name){
                return name["value"].get<VkVertexInputRate>();
            };
        

            json serialize_VkPipelineStageFlagBits(VkPipelineStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits deserialize_VkPipelineStageFlagBits(json name){
                return name["value"].get<VkPipelineStageFlagBits>();
            };
        

            json serialize_VkSparseImageFormatFlagBits(VkSparseImageFormatFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlagBits deserialize_VkSparseImageFormatFlagBits(json name){
                return name["value"].get<VkSparseImageFormatFlagBits>();
            };
        

            json serialize_VkSampleCountFlagBits(VkSampleCountFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlagBits deserialize_VkSampleCountFlagBits(json name){
                return name["value"].get<VkSampleCountFlagBits>();
            };
        

            json serialize_VkAttachmentDescriptionFlagBits(VkAttachmentDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlagBits deserialize_VkAttachmentDescriptionFlagBits(json name){
                return name["value"].get<VkAttachmentDescriptionFlagBits>();
            };
        

            json serialize_VkDescriptorPoolCreateFlagBits(VkDescriptorPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlagBits deserialize_VkDescriptorPoolCreateFlagBits(json name){
                return name["value"].get<VkDescriptorPoolCreateFlagBits>();
            };
        

            json serialize_VkDependencyFlagBits(VkDependencyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlagBits deserialize_VkDependencyFlagBits(json name){
                return name["value"].get<VkDependencyFlagBits>();
            };
        

            json serialize_VkObjectType(VkObjectType name){
                return json::object({{"value",name}});
            };
        

            VkObjectType deserialize_VkObjectType(json name){
                return name["value"].get<VkObjectType>();
            };
        

            json serialize_VkEventCreateFlagBits(VkEventCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlagBits deserialize_VkEventCreateFlagBits(json name){
                return name["value"].get<VkEventCreateFlagBits>();
            };
        

            json serialize_VkPipelineLayoutCreateFlagBits(VkPipelineLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlagBits deserialize_VkPipelineLayoutCreateFlagBits(json name){
                return name["value"].get<VkPipelineLayoutCreateFlagBits>();
            };
        

            json serialize_VkRayTracingInvocationReorderModeNV(VkRayTracingInvocationReorderModeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingInvocationReorderModeNV deserialize_VkRayTracingInvocationReorderModeNV(json name){
                return name["value"].get<VkRayTracingInvocationReorderModeNV>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagBitsNV(VkIndirectCommandsLayoutUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagBitsNV deserialize_VkIndirectCommandsLayoutUsageFlagBitsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagBitsNV>();
            };
        

            json serialize_VkIndirectCommandsTokenTypeNV(VkIndirectCommandsTokenTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsTokenTypeNV deserialize_VkIndirectCommandsTokenTypeNV(json name){
                return name["value"].get<VkIndirectCommandsTokenTypeNV>();
            };
        

            json serialize_VkIndirectStateFlagBitsNV(VkIndirectStateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagBitsNV deserialize_VkIndirectStateFlagBitsNV(json name){
                return name["value"].get<VkIndirectStateFlagBitsNV>();
            };
        

            json serialize_VkDescriptorUpdateTemplateType(VkDescriptorUpdateTemplateType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateType deserialize_VkDescriptorUpdateTemplateType(json name){
                return name["value"].get<VkDescriptorUpdateTemplateType>();
            };
        

            json serialize_VkDescriptorUpdateTemplateTypeKHR(VkDescriptorUpdateTemplateTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateTypeKHR deserialize_VkDescriptorUpdateTemplateTypeKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateTypeKHR>();
            };
        

            json serialize_VkViewportCoordinateSwizzleNV(VkViewportCoordinateSwizzleNV name){
                return json::object({{"value",name}});
            };
        

            VkViewportCoordinateSwizzleNV deserialize_VkViewportCoordinateSwizzleNV(json name){
                return name["value"].get<VkViewportCoordinateSwizzleNV>();
            };
        

            json serialize_VkDiscardRectangleModeEXT(VkDiscardRectangleModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDiscardRectangleModeEXT deserialize_VkDiscardRectangleModeEXT(json name){
                return name["value"].get<VkDiscardRectangleModeEXT>();
            };
        

            json serialize_VkSubpassDescriptionFlagBits(VkSubpassDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlagBits deserialize_VkSubpassDescriptionFlagBits(json name){
                return name["value"].get<VkSubpassDescriptionFlagBits>();
            };
        

            json serialize_VkPointClippingBehavior(VkPointClippingBehavior name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehavior deserialize_VkPointClippingBehavior(json name){
                return name["value"].get<VkPointClippingBehavior>();
            };
        

            json serialize_VkPointClippingBehaviorKHR(VkPointClippingBehaviorKHR name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehaviorKHR deserialize_VkPointClippingBehaviorKHR(json name){
                return name["value"].get<VkPointClippingBehaviorKHR>();
            };
        

            json serialize_VkCoverageModulationModeNV(VkCoverageModulationModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageModulationModeNV deserialize_VkCoverageModulationModeNV(json name){
                return name["value"].get<VkCoverageModulationModeNV>();
            };
        

            json serialize_VkCoverageReductionModeNV(VkCoverageReductionModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageReductionModeNV deserialize_VkCoverageReductionModeNV(json name){
                return name["value"].get<VkCoverageReductionModeNV>();
            };
        

            json serialize_VkValidationCacheHeaderVersionEXT(VkValidationCacheHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheHeaderVersionEXT deserialize_VkValidationCacheHeaderVersionEXT(json name){
                return name["value"].get<VkValidationCacheHeaderVersionEXT>();
            };
        

            json serialize_VkShaderInfoTypeAMD(VkShaderInfoTypeAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderInfoTypeAMD deserialize_VkShaderInfoTypeAMD(json name){
                return name["value"].get<VkShaderInfoTypeAMD>();
            };
        

            json serialize_VkQueueGlobalPriorityKHR(VkQueueGlobalPriorityKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityKHR deserialize_VkQueueGlobalPriorityKHR(json name){
                return name["value"].get<VkQueueGlobalPriorityKHR>();
            };
        

            json serialize_VkQueueGlobalPriorityEXT(VkQueueGlobalPriorityEXT name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityEXT deserialize_VkQueueGlobalPriorityEXT(json name){
                return name["value"].get<VkQueueGlobalPriorityEXT>();
            };
        

            json serialize_VkTimeDomainEXT(VkTimeDomainEXT name){
                return json::object({{"value",name}});
            };
        

            VkTimeDomainEXT deserialize_VkTimeDomainEXT(json name){
                return name["value"].get<VkTimeDomainEXT>();
            };
        

            json serialize_VkConservativeRasterizationModeEXT(VkConservativeRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkConservativeRasterizationModeEXT deserialize_VkConservativeRasterizationModeEXT(json name){
                return name["value"].get<VkConservativeRasterizationModeEXT>();
            };
        

            json serialize_VkResolveModeFlagBits(VkResolveModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBits deserialize_VkResolveModeFlagBits(json name){
                return name["value"].get<VkResolveModeFlagBits>();
            };
        

            json serialize_VkResolveModeFlagBitsKHR(VkResolveModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBitsKHR deserialize_VkResolveModeFlagBitsKHR(json name){
                return name["value"].get<VkResolveModeFlagBitsKHR>();
            };
        

            json serialize_VkDescriptorBindingFlagBits(VkDescriptorBindingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBits deserialize_VkDescriptorBindingFlagBits(json name){
                return name["value"].get<VkDescriptorBindingFlagBits>();
            };
        

            json serialize_VkDescriptorBindingFlagBitsEXT(VkDescriptorBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBitsEXT deserialize_VkDescriptorBindingFlagBitsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagBitsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagBitsEXT(VkConditionalRenderingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagBitsEXT deserialize_VkConditionalRenderingFlagBitsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagBitsEXT>();
            };
        

            json serialize_VkSemaphoreType(VkSemaphoreType name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreType deserialize_VkSemaphoreType(json name){
                return name["value"].get<VkSemaphoreType>();
            };
        

            json serialize_VkSemaphoreTypeKHR(VkSemaphoreTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreTypeKHR deserialize_VkSemaphoreTypeKHR(json name){
                return name["value"].get<VkSemaphoreTypeKHR>();
            };
        

            json serialize_VkGeometryFlagBitsKHR(VkGeometryFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsKHR deserialize_VkGeometryFlagBitsKHR(json name){
                return name["value"].get<VkGeometryFlagBitsKHR>();
            };
        

            json serialize_VkGeometryFlagBitsNV(VkGeometryFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsNV deserialize_VkGeometryFlagBitsNV(json name){
                return name["value"].get<VkGeometryFlagBitsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsKHR(VkGeometryInstanceFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsKHR deserialize_VkGeometryInstanceFlagBitsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsNV(VkGeometryInstanceFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsNV deserialize_VkGeometryInstanceFlagBitsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsKHR(VkBuildAccelerationStructureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsKHR deserialize_VkBuildAccelerationStructureFlagBitsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsNV(VkBuildAccelerationStructureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsNV deserialize_VkBuildAccelerationStructureFlagBitsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsNV>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagBitsKHR(VkAccelerationStructureCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagBitsKHR deserialize_VkAccelerationStructureCreateFlagBitsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureModeKHR(VkBuildAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureModeKHR deserialize_VkBuildAccelerationStructureModeKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeKHR(VkCopyAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeKHR deserialize_VkCopyAccelerationStructureModeKHR(json name){
                return name["value"].get<VkCopyAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeNV(VkCopyAccelerationStructureModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeNV deserialize_VkCopyAccelerationStructureModeNV(json name){
                return name["value"].get<VkCopyAccelerationStructureModeNV>();
            };
        

            json serialize_VkAccelerationStructureTypeKHR(VkAccelerationStructureTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeKHR deserialize_VkAccelerationStructureTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureTypeNV(VkAccelerationStructureTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeNV deserialize_VkAccelerationStructureTypeNV(json name){
                return name["value"].get<VkAccelerationStructureTypeNV>();
            };
        

            json serialize_VkGeometryTypeKHR(VkGeometryTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeKHR deserialize_VkGeometryTypeKHR(json name){
                return name["value"].get<VkGeometryTypeKHR>();
            };
        

            json serialize_VkGeometryTypeNV(VkGeometryTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeNV deserialize_VkGeometryTypeNV(json name){
                return name["value"].get<VkGeometryTypeNV>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeKHR(VkRayTracingShaderGroupTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeKHR deserialize_VkRayTracingShaderGroupTypeKHR(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeKHR>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeNV(VkRayTracingShaderGroupTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeNV deserialize_VkRayTracingShaderGroupTypeNV(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeNV>();
            };
        

            json serialize_VkAccelerationStructureMemoryRequirementsTypeNV(VkAccelerationStructureMemoryRequirementsTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMemoryRequirementsTypeNV deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMemoryRequirementsTypeNV>();
            };
        

            json serialize_VkAccelerationStructureBuildTypeKHR(VkAccelerationStructureBuildTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureBuildTypeKHR deserialize_VkAccelerationStructureBuildTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureBuildTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureCompatibilityKHR(VkAccelerationStructureCompatibilityKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCompatibilityKHR deserialize_VkAccelerationStructureCompatibilityKHR(json name){
                return name["value"].get<VkAccelerationStructureCompatibilityKHR>();
            };
        

            json serialize_VkShaderGroupShaderKHR(VkShaderGroupShaderKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderGroupShaderKHR deserialize_VkShaderGroupShaderKHR(json name){
                return name["value"].get<VkShaderGroupShaderKHR>();
            };
        

            json serialize_VkMemoryOverallocationBehaviorAMD(VkMemoryOverallocationBehaviorAMD name){
                return json::object({{"value",name}});
            };
        

            VkMemoryOverallocationBehaviorAMD deserialize_VkMemoryOverallocationBehaviorAMD(json name){
                return name["value"].get<VkMemoryOverallocationBehaviorAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagBitsNV(VkDeviceDiagnosticsConfigFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagBitsNV deserialize_VkDeviceDiagnosticsConfigFlagBitsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagBitsNV>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBits(VkPipelineCreationFeedbackFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBits deserialize_VkPipelineCreationFeedbackFlagBits(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBits>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBitsEXT(VkPipelineCreationFeedbackFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBitsEXT deserialize_VkPipelineCreationFeedbackFlagBitsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBitsEXT>();
            };
        

            json serialize_VkPerformanceCounterScopeKHR(VkPerformanceCounterScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterScopeKHR deserialize_VkPerformanceCounterScopeKHR(json name){
                return name["value"].get<VkPerformanceCounterScopeKHR>();
            };
        

            json serialize_VkPerformanceCounterUnitKHR(VkPerformanceCounterUnitKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterUnitKHR deserialize_VkPerformanceCounterUnitKHR(json name){
                return name["value"].get<VkPerformanceCounterUnitKHR>();
            };
        

            json serialize_VkPerformanceCounterStorageKHR(VkPerformanceCounterStorageKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterStorageKHR deserialize_VkPerformanceCounterStorageKHR(json name){
                return name["value"].get<VkPerformanceCounterStorageKHR>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagBitsKHR(VkPerformanceCounterDescriptionFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagBitsKHR deserialize_VkPerformanceCounterDescriptionFlagBitsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagBitsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagBitsKHR(VkAcquireProfilingLockFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagBitsKHR deserialize_VkAcquireProfilingLockFlagBitsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlagBits(VkSemaphoreWaitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBits deserialize_VkSemaphoreWaitFlagBits(json name){
                return name["value"].get<VkSemaphoreWaitFlagBits>();
            };
        

            json serialize_VkSemaphoreWaitFlagBitsKHR(VkSemaphoreWaitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBitsKHR deserialize_VkSemaphoreWaitFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagBitsKHR>();
            };
        

            json serialize_VkPerformanceConfigurationTypeINTEL(VkPerformanceConfigurationTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceConfigurationTypeINTEL deserialize_VkPerformanceConfigurationTypeINTEL(json name){
                return name["value"].get<VkPerformanceConfigurationTypeINTEL>();
            };
        

            json serialize_VkQueryPoolSamplingModeINTEL(VkQueryPoolSamplingModeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolSamplingModeINTEL deserialize_VkQueryPoolSamplingModeINTEL(json name){
                return name["value"].get<VkQueryPoolSamplingModeINTEL>();
            };
        

            json serialize_VkPerformanceOverrideTypeINTEL(VkPerformanceOverrideTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceOverrideTypeINTEL deserialize_VkPerformanceOverrideTypeINTEL(json name){
                return name["value"].get<VkPerformanceOverrideTypeINTEL>();
            };
        

            json serialize_VkPerformanceParameterTypeINTEL(VkPerformanceParameterTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceParameterTypeINTEL deserialize_VkPerformanceParameterTypeINTEL(json name){
                return name["value"].get<VkPerformanceParameterTypeINTEL>();
            };
        

            json serialize_VkPerformanceValueTypeINTEL(VkPerformanceValueTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceValueTypeINTEL deserialize_VkPerformanceValueTypeINTEL(json name){
                return name["value"].get<VkPerformanceValueTypeINTEL>();
            };
        

            json serialize_VkLineRasterizationModeEXT(VkLineRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkLineRasterizationModeEXT deserialize_VkLineRasterizationModeEXT(json name){
                return name["value"].get<VkLineRasterizationModeEXT>();
            };
        

            json serialize_VkPipelineCompilerControlFlagBitsAMD(VkPipelineCompilerControlFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagBitsAMD deserialize_VkPipelineCompilerControlFlagBitsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagBitsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagBitsAMD(VkShaderCorePropertiesFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagBitsAMD deserialize_VkShaderCorePropertiesFlagBitsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagBitsAMD>();
            };
        

            json serialize_VkToolPurposeFlagBits(VkToolPurposeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBits deserialize_VkToolPurposeFlagBits(json name){
                return name["value"].get<VkToolPurposeFlagBits>();
            };
        

            json serialize_VkToolPurposeFlagBitsEXT(VkToolPurposeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBitsEXT deserialize_VkToolPurposeFlagBitsEXT(json name){
                return name["value"].get<VkToolPurposeFlagBitsEXT>();
            };
        

            json serialize_VkFragmentShadingRateNV(VkFragmentShadingRateNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateNV deserialize_VkFragmentShadingRateNV(json name){
                return name["value"].get<VkFragmentShadingRateNV>();
            };
        

            json serialize_VkFragmentShadingRateTypeNV(VkFragmentShadingRateTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateTypeNV deserialize_VkFragmentShadingRateTypeNV(json name){
                return name["value"].get<VkFragmentShadingRateTypeNV>();
            };
        

            json serialize_VkSubpassMergeStatusEXT(VkSubpassMergeStatusEXT name){
                return json::object({{"value",name}});
            };
        

            VkSubpassMergeStatusEXT deserialize_VkSubpassMergeStatusEXT(json name){
                return name["value"].get<VkSubpassMergeStatusEXT>();
            };
        

            json serialize_VkAccessFlagBits2(VkAccessFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2 deserialize_VkAccessFlagBits2(json name){
                return name["value"].get<VkAccessFlagBits2>();
            };
        

            json serialize_VkAccessFlagBits2KHR(VkAccessFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2KHR deserialize_VkAccessFlagBits2KHR(json name){
                return name["value"].get<VkAccessFlagBits2KHR>();
            };
        

            json serialize_VkPipelineStageFlagBits2(VkPipelineStageFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2 deserialize_VkPipelineStageFlagBits2(json name){
                return name["value"].get<VkPipelineStageFlagBits2>();
            };
        

            json serialize_VkPipelineStageFlagBits2KHR(VkPipelineStageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2KHR deserialize_VkPipelineStageFlagBits2KHR(json name){
                return name["value"].get<VkPipelineStageFlagBits2KHR>();
            };
        

            json serialize_VkProvokingVertexModeEXT(VkProvokingVertexModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkProvokingVertexModeEXT deserialize_VkProvokingVertexModeEXT(json name){
                return name["value"].get<VkProvokingVertexModeEXT>();
            };
        

            json serialize_VkHostImageCopyFlagBitsEXT(VkHostImageCopyFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagBitsEXT deserialize_VkHostImageCopyFlagBitsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagBitsEXT>();
            };
        

            json serialize_VkFormatFeatureFlagBits2(VkFormatFeatureFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2 deserialize_VkFormatFeatureFlagBits2(json name){
                return name["value"].get<VkFormatFeatureFlagBits2>();
            };
        

            json serialize_VkFormatFeatureFlagBits2KHR(VkFormatFeatureFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2KHR deserialize_VkFormatFeatureFlagBits2KHR(json name){
                return name["value"].get<VkFormatFeatureFlagBits2KHR>();
            };
        

            json serialize_VkRenderingFlagBits(VkRenderingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBits deserialize_VkRenderingFlagBits(json name){
                return name["value"].get<VkRenderingFlagBits>();
            };
        

            json serialize_VkRenderingFlagBitsKHR(VkRenderingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBitsKHR deserialize_VkRenderingFlagBitsKHR(json name){
                return name["value"].get<VkRenderingFlagBitsKHR>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlagBits(VkPipelineDepthStencilStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlagBits deserialize_VkPipelineDepthStencilStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlagBits>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlagBits(VkPipelineColorBlendStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlagBits deserialize_VkPipelineColorBlendStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlagBits>();
            };
        

            json serialize_VkImageCompressionFlagBitsEXT(VkImageCompressionFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagBitsEXT deserialize_VkImageCompressionFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFlagBitsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagBitsEXT(VkImageCompressionFixedRateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagBitsEXT deserialize_VkImageCompressionFixedRateFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagBitsEXT>();
            };
        

            json serialize_VkPipelineRobustnessBufferBehaviorEXT(VkPipelineRobustnessBufferBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessBufferBehaviorEXT deserialize_VkPipelineRobustnessBufferBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessBufferBehaviorEXT>();
            };
        

            json serialize_VkPipelineRobustnessImageBehaviorEXT(VkPipelineRobustnessImageBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessImageBehaviorEXT deserialize_VkPipelineRobustnessImageBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessImageBehaviorEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagBitsEXT(VkDeviceAddressBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagBitsEXT deserialize_VkDeviceAddressBindingFlagBitsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagBitsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingTypeEXT(VkDeviceAddressBindingTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingTypeEXT deserialize_VkDeviceAddressBindingTypeEXT(json name){
                return name["value"].get<VkDeviceAddressBindingTypeEXT>();
            };
        

            json serialize_VkMicromapTypeEXT(VkMicromapTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapTypeEXT deserialize_VkMicromapTypeEXT(json name){
                return name["value"].get<VkMicromapTypeEXT>();
            };
        

            json serialize_VkBuildMicromapModeEXT(VkBuildMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapModeEXT deserialize_VkBuildMicromapModeEXT(json name){
                return name["value"].get<VkBuildMicromapModeEXT>();
            };
        

            json serialize_VkCopyMicromapModeEXT(VkCopyMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkCopyMicromapModeEXT deserialize_VkCopyMicromapModeEXT(json name){
                return name["value"].get<VkCopyMicromapModeEXT>();
            };
        

            json serialize_VkBuildMicromapFlagBitsEXT(VkBuildMicromapFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagBitsEXT deserialize_VkBuildMicromapFlagBitsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagBitsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagBitsEXT(VkMicromapCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagBitsEXT deserialize_VkMicromapCreateFlagBitsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagBitsEXT>();
            };
        

            json serialize_VkOpacityMicromapFormatEXT(VkOpacityMicromapFormatEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapFormatEXT deserialize_VkOpacityMicromapFormatEXT(json name){
                return name["value"].get<VkOpacityMicromapFormatEXT>();
            };
        

            json serialize_VkOpacityMicromapSpecialIndexEXT(VkOpacityMicromapSpecialIndexEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapSpecialIndexEXT deserialize_VkOpacityMicromapSpecialIndexEXT(json name){
                return name["value"].get<VkOpacityMicromapSpecialIndexEXT>();
            };
        

            json serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(VkDeviceFaultVendorBinaryHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultVendorBinaryHeaderVersionEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(json name){
                return name["value"].get<VkDeviceFaultVendorBinaryHeaderVersionEXT>();
            };
        

            json serialize_VkFrameBoundaryFlagBitsEXT(VkFrameBoundaryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagBitsEXT deserialize_VkFrameBoundaryFlagBitsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagBitsEXT>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagBitsNV(VkMemoryDecompressionMethodFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagBitsNV deserialize_VkMemoryDecompressionMethodFlagBitsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagBitsNV>();
            };
        

            json serialize_VkDepthBiasRepresentationEXT(VkDepthBiasRepresentationEXT name){
                return json::object({{"value",name}});
            };
        

            VkDepthBiasRepresentationEXT deserialize_VkDepthBiasRepresentationEXT(json name){
                return name["value"].get<VkDepthBiasRepresentationEXT>();
            };
        

            json serialize_VkDirectDriverLoadingModeLUNARG(VkDirectDriverLoadingModeLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingModeLUNARG deserialize_VkDirectDriverLoadingModeLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingModeLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlagBits2KHR(VkPipelineCreateFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits2KHR deserialize_VkPipelineCreateFlagBits2KHR(json name){
                return name["value"].get<VkPipelineCreateFlagBits2KHR>();
            };
        

            json serialize_VkBufferUsageFlagBits2KHR(VkBufferUsageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits2KHR deserialize_VkBufferUsageFlagBits2KHR(json name){
                return name["value"].get<VkBufferUsageFlagBits2KHR>();
            };
        

            json serialize_VkShaderCreateFlagBitsEXT(VkShaderCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagBitsEXT deserialize_VkShaderCreateFlagBitsEXT(json name){
                return name["value"].get<VkShaderCreateFlagBitsEXT>();
            };
        

            json serialize_VkShaderCodeTypeEXT(VkShaderCodeTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCodeTypeEXT deserialize_VkShaderCodeTypeEXT(json name){
                return name["value"].get<VkShaderCodeTypeEXT>();
            };
        

            json serialize_VkScopeKHR(VkScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkScopeKHR deserialize_VkScopeKHR(json name){
                return name["value"].get<VkScopeKHR>();
            };
        

            json serialize_VkComponentTypeKHR(VkComponentTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeKHR deserialize_VkComponentTypeKHR(json name){
                return name["value"].get<VkComponentTypeKHR>();
            };
        

            json serialize_VkScopeNV(VkScopeNV name){
                return json::object({{"value",name}});
            };
        

            VkScopeNV deserialize_VkScopeNV(json name){
                return name["value"].get<VkScopeNV>();
            };
        

            json serialize_VkComponentTypeNV(VkComponentTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeNV deserialize_VkComponentTypeNV(json name){
                return name["value"].get<VkComponentTypeNV>();
            };
        

            json serialize_VkCubicFilterWeightsQCOM(VkCubicFilterWeightsQCOM name){
                return json::object({{"value",name}});
            };
        

            VkCubicFilterWeightsQCOM deserialize_VkCubicFilterWeightsQCOM(json name){
                return name["value"].get<VkCubicFilterWeightsQCOM>();
            };
        

            json serialize_VkBlockMatchWindowCompareModeQCOM(VkBlockMatchWindowCompareModeQCOM name){
                return json::object({{"value",name}});
            };
        

            VkBlockMatchWindowCompareModeQCOM deserialize_VkBlockMatchWindowCompareModeQCOM(json name){
                return name["value"].get<VkBlockMatchWindowCompareModeQCOM>();
            };
        

            json serialize_VkLayeredDriverUnderlyingApiMSFT(VkLayeredDriverUnderlyingApiMSFT name){
                return json::object({{"value",name}});
            };
        

            VkLayeredDriverUnderlyingApiMSFT deserialize_VkLayeredDriverUnderlyingApiMSFT(json name){
                return name["value"].get<VkLayeredDriverUnderlyingApiMSFT>();
            };
        

            json serialize_VkColorSpaceKHR(VkColorSpaceKHR name){
                return json::object({{"value",name}});
            };
        

            VkColorSpaceKHR deserialize_VkColorSpaceKHR(json name){
                return name["value"].get<VkColorSpaceKHR>();
            };
        

            json serialize_VkCompositeAlphaFlagBitsKHR(VkCompositeAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagBitsKHR deserialize_VkCompositeAlphaFlagBitsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagBitsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagBitsKHR(VkDisplayPlaneAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagBitsKHR deserialize_VkDisplayPlaneAlphaFlagBitsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagBitsKHR>();
            };
        

            json serialize_VkPresentModeKHR(VkPresentModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPresentModeKHR deserialize_VkPresentModeKHR(json name){
                return name["value"].get<VkPresentModeKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagBitsKHR(VkSurfaceTransformFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagBitsKHR deserialize_VkSurfaceTransformFlagBitsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagBitsKHR>();
            };
        

            json serialize_VkDebugReportFlagBitsEXT(VkDebugReportFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagBitsEXT deserialize_VkDebugReportFlagBitsEXT(json name){
                return name["value"].get<VkDebugReportFlagBitsEXT>();
            };
        

            json serialize_VkDebugReportObjectTypeEXT(VkDebugReportObjectTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportObjectTypeEXT deserialize_VkDebugReportObjectTypeEXT(json name){
                return name["value"].get<VkDebugReportObjectTypeEXT>();
            };
        

            json serialize_VkDeviceMemoryReportEventTypeEXT(VkDeviceMemoryReportEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportEventTypeEXT deserialize_VkDeviceMemoryReportEventTypeEXT(json name){
                return name["value"].get<VkDeviceMemoryReportEventTypeEXT>();
            };
        

            json serialize_VkRasterizationOrderAMD(VkRasterizationOrderAMD name){
                return json::object({{"value",name}});
            };
        

            VkRasterizationOrderAMD deserialize_VkRasterizationOrderAMD(json name){
                return name["value"].get<VkRasterizationOrderAMD>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsNV(VkExternalMemoryHandleTypeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsNV deserialize_VkExternalMemoryHandleTypeFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsNV(VkExternalMemoryFeatureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsNV deserialize_VkExternalMemoryFeatureFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsNV>();
            };
        

            json serialize_VkValidationCheckEXT(VkValidationCheckEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCheckEXT deserialize_VkValidationCheckEXT(json name){
                return name["value"].get<VkValidationCheckEXT>();
            };
        

            json serialize_VkValidationFeatureEnableEXT(VkValidationFeatureEnableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureEnableEXT deserialize_VkValidationFeatureEnableEXT(json name){
                return name["value"].get<VkValidationFeatureEnableEXT>();
            };
        

            json serialize_VkValidationFeatureDisableEXT(VkValidationFeatureDisableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureDisableEXT deserialize_VkValidationFeatureDisableEXT(json name){
                return name["value"].get<VkValidationFeatureDisableEXT>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBits(VkExternalMemoryHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBits deserialize_VkExternalMemoryHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsKHR(VkExternalMemoryHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsKHR deserialize_VkExternalMemoryHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBits(VkExternalMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBits deserialize_VkExternalMemoryFeatureFlagBits(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBits>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsKHR(VkExternalMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsKHR deserialize_VkExternalMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBits(VkExternalSemaphoreHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBits deserialize_VkExternalSemaphoreHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(VkExternalSemaphoreHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBitsKHR deserialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBits(VkExternalSemaphoreFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBits deserialize_VkExternalSemaphoreFeatureFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBitsKHR(VkExternalSemaphoreFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBitsKHR deserialize_VkExternalSemaphoreFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlagBits(VkSemaphoreImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBits deserialize_VkSemaphoreImportFlagBits(json name){
                return name["value"].get<VkSemaphoreImportFlagBits>();
            };
        

            json serialize_VkSemaphoreImportFlagBitsKHR(VkSemaphoreImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBitsKHR deserialize_VkSemaphoreImportFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBits(VkExternalFenceHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBits deserialize_VkExternalFenceHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBitsKHR(VkExternalFenceHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBitsKHR deserialize_VkExternalFenceHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBits(VkExternalFenceFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBits deserialize_VkExternalFenceFeatureFlagBits(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBits>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBitsKHR(VkExternalFenceFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBitsKHR deserialize_VkExternalFenceFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBitsKHR>();
            };
        

            json serialize_VkFenceImportFlagBits(VkFenceImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBits deserialize_VkFenceImportFlagBits(json name){
                return name["value"].get<VkFenceImportFlagBits>();
            };
        

            json serialize_VkFenceImportFlagBitsKHR(VkFenceImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBitsKHR deserialize_VkFenceImportFlagBitsKHR(json name){
                return name["value"].get<VkFenceImportFlagBitsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagBitsEXT(VkSurfaceCounterFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagBitsEXT deserialize_VkSurfaceCounterFlagBitsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagBitsEXT>();
            };
        

            json serialize_VkDisplayPowerStateEXT(VkDisplayPowerStateEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPowerStateEXT deserialize_VkDisplayPowerStateEXT(json name){
                return name["value"].get<VkDisplayPowerStateEXT>();
            };
        

            json serialize_VkDeviceEventTypeEXT(VkDeviceEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceEventTypeEXT deserialize_VkDeviceEventTypeEXT(json name){
                return name["value"].get<VkDeviceEventTypeEXT>();
            };
        

            json serialize_VkDisplayEventTypeEXT(VkDisplayEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayEventTypeEXT deserialize_VkDisplayEventTypeEXT(json name){
                return name["value"].get<VkDisplayEventTypeEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBits(VkPeerMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBits deserialize_VkPeerMemoryFeatureFlagBits(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBits>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBitsKHR(VkPeerMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBitsKHR deserialize_VkPeerMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlagBits(VkMemoryAllocateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBits deserialize_VkMemoryAllocateFlagBits(json name){
                return name["value"].get<VkMemoryAllocateFlagBits>();
            };
        

            json serialize_VkMemoryAllocateFlagBitsKHR(VkMemoryAllocateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBitsKHR deserialize_VkMemoryAllocateFlagBitsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagBitsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagBitsKHR(VkDeviceGroupPresentModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagBitsKHR deserialize_VkDeviceGroupPresentModeFlagBitsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagBitsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagBitsKHR(VkSwapchainCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagBitsKHR deserialize_VkSwapchainCreateFlagBitsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagBitsKHR>();
            };
        

            json serialize_VkSubgroupFeatureFlagBits(VkSubgroupFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlagBits deserialize_VkSubgroupFeatureFlagBits(json name){
                return name["value"].get<VkSubgroupFeatureFlagBits>();
            };
        

            json serialize_VkTessellationDomainOrigin(VkTessellationDomainOrigin name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOrigin deserialize_VkTessellationDomainOrigin(json name){
                return name["value"].get<VkTessellationDomainOrigin>();
            };
        

            json serialize_VkTessellationDomainOriginKHR(VkTessellationDomainOriginKHR name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOriginKHR deserialize_VkTessellationDomainOriginKHR(json name){
                return name["value"].get<VkTessellationDomainOriginKHR>();
            };
        

            json serialize_VkSamplerYcbcrModelConversion(VkSamplerYcbcrModelConversion name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversion deserialize_VkSamplerYcbcrModelConversion(json name){
                return name["value"].get<VkSamplerYcbcrModelConversion>();
            };
        

            json serialize_VkSamplerYcbcrModelConversionKHR(VkSamplerYcbcrModelConversionKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversionKHR deserialize_VkSamplerYcbcrModelConversionKHR(json name){
                return name["value"].get<VkSamplerYcbcrModelConversionKHR>();
            };
        

            json serialize_VkSamplerYcbcrRange(VkSamplerYcbcrRange name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRange deserialize_VkSamplerYcbcrRange(json name){
                return name["value"].get<VkSamplerYcbcrRange>();
            };
        

            json serialize_VkSamplerYcbcrRangeKHR(VkSamplerYcbcrRangeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRangeKHR deserialize_VkSamplerYcbcrRangeKHR(json name){
                return name["value"].get<VkSamplerYcbcrRangeKHR>();
            };
        

            json serialize_VkChromaLocation(VkChromaLocation name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocation deserialize_VkChromaLocation(json name){
                return name["value"].get<VkChromaLocation>();
            };
        

            json serialize_VkChromaLocationKHR(VkChromaLocationKHR name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocationKHR deserialize_VkChromaLocationKHR(json name){
                return name["value"].get<VkChromaLocationKHR>();
            };
        

            json serialize_VkSamplerReductionMode(VkSamplerReductionMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionMode deserialize_VkSamplerReductionMode(json name){
                return name["value"].get<VkSamplerReductionMode>();
            };
        

            json serialize_VkSamplerReductionModeEXT(VkSamplerReductionModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionModeEXT deserialize_VkSamplerReductionModeEXT(json name){
                return name["value"].get<VkSamplerReductionModeEXT>();
            };
        

            json serialize_VkBlendOverlapEXT(VkBlendOverlapEXT name){
                return json::object({{"value",name}});
            };
        

            VkBlendOverlapEXT deserialize_VkBlendOverlapEXT(json name){
                return name["value"].get<VkBlendOverlapEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(VkDebugUtilsMessageSeverityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagBitsEXT deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagBitsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagBitsEXT(VkDebugUtilsMessageTypeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagBitsEXT deserialize_VkDebugUtilsMessageTypeFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagBitsEXT>();
            };
        

            json serialize_VkShaderFloatControlsIndependence(VkShaderFloatControlsIndependence name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependence deserialize_VkShaderFloatControlsIndependence(json name){
                return name["value"].get<VkShaderFloatControlsIndependence>();
            };
        

            json serialize_VkShaderFloatControlsIndependenceKHR(VkShaderFloatControlsIndependenceKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependenceKHR deserialize_VkShaderFloatControlsIndependenceKHR(json name){
                return name["value"].get<VkShaderFloatControlsIndependenceKHR>();
            };
        

            json serialize_VkFragmentShadingRateCombinerOpKHR(VkFragmentShadingRateCombinerOpKHR name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateCombinerOpKHR deserialize_VkFragmentShadingRateCombinerOpKHR(json name){
                return name["value"].get<VkFragmentShadingRateCombinerOpKHR>();
            };
        

            json serialize_VkSubmitFlagBits(VkSubmitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBits deserialize_VkSubmitFlagBits(json name){
                return name["value"].get<VkSubmitFlagBits>();
            };
        

            json serialize_VkSubmitFlagBitsKHR(VkSubmitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBitsKHR deserialize_VkSubmitFlagBitsKHR(json name){
                return name["value"].get<VkSubmitFlagBitsKHR>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagBitsEXT(VkGraphicsPipelineLibraryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagBitsEXT deserialize_VkGraphicsPipelineLibraryFlagBitsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagBitsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagBitsNV(VkOpticalFlowGridSizeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagBitsNV deserialize_VkOpticalFlowGridSizeFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagBitsNV(VkOpticalFlowUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagBitsNV deserialize_VkOpticalFlowUsageFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowPerformanceLevelNV(VkOpticalFlowPerformanceLevelNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowPerformanceLevelNV deserialize_VkOpticalFlowPerformanceLevelNV(json name){
                return name["value"].get<VkOpticalFlowPerformanceLevelNV>();
            };
        

            json serialize_VkOpticalFlowSessionBindingPointNV(VkOpticalFlowSessionBindingPointNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionBindingPointNV deserialize_VkOpticalFlowSessionBindingPointNV(json name){
                return name["value"].get<VkOpticalFlowSessionBindingPointNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagBitsNV(VkOpticalFlowSessionCreateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagBitsNV deserialize_VkOpticalFlowSessionCreateFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagBitsNV(VkOpticalFlowExecuteFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagBitsNV deserialize_VkOpticalFlowExecuteFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagBitsNV>();
            };
        

            json serialize_VkDeviceFaultAddressTypeEXT(VkDeviceFaultAddressTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultAddressTypeEXT deserialize_VkDeviceFaultAddressTypeEXT(json name){
                return name["value"].get<VkDeviceFaultAddressTypeEXT>();
            };
        

            json serialize_VkPresentScalingFlagBitsEXT(VkPresentScalingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagBitsEXT deserialize_VkPresentScalingFlagBitsEXT(json name){
                return name["value"].get<VkPresentScalingFlagBitsEXT>();
            };
        

            json serialize_VkPresentGravityFlagBitsEXT(VkPresentGravityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagBitsEXT deserialize_VkPresentGravityFlagBitsEXT(json name){
                return name["value"].get<VkPresentGravityFlagBitsEXT>();
            };
        

            json serialize_VkVendorId(VkVendorId name){
                return json::object({{"value",name}});
            };
        

            VkVendorId deserialize_VkVendorId(json name){
                return name["value"].get<VkVendorId>();
            };
        

            json serialize_VkDriverId(VkDriverId name){
                return json::object({{"value",name}});
            };
        

            VkDriverId deserialize_VkDriverId(json name){
                return name["value"].get<VkDriverId>();
            };
        

            json serialize_VkDriverIdKHR(VkDriverIdKHR name){
                return json::object({{"value",name}});
            };
        

            VkDriverIdKHR deserialize_VkDriverIdKHR(json name){
                return name["value"].get<VkDriverIdKHR>();
            };
        

            json serialize_VkShadingRatePaletteEntryNV(VkShadingRatePaletteEntryNV name){
                return json::object({{"value",name}});
            };
        

            VkShadingRatePaletteEntryNV deserialize_VkShadingRatePaletteEntryNV(json name){
                return name["value"].get<VkShadingRatePaletteEntryNV>();
            };
        

            json serialize_VkCoarseSampleOrderTypeNV(VkCoarseSampleOrderTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoarseSampleOrderTypeNV deserialize_VkCoarseSampleOrderTypeNV(json name){
                return name["value"].get<VkCoarseSampleOrderTypeNV>();
            };
        

            json serialize_VkPipelineExecutableStatisticFormatKHR(VkPipelineExecutableStatisticFormatKHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineExecutableStatisticFormatKHR deserialize_VkPipelineExecutableStatisticFormatKHR(json name){
                return name["value"].get<VkPipelineExecutableStatisticFormatKHR>();
            };
        

            json serialize_VkVideoCodecOperationFlagBitsKHR(VkVideoCodecOperationFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagBitsKHR deserialize_VkVideoCodecOperationFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagBitsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagBitsKHR(VkVideoChromaSubsamplingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagBitsKHR deserialize_VkVideoChromaSubsamplingFlagBitsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagBitsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagBitsKHR(VkVideoComponentBitDepthFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagBitsKHR deserialize_VkVideoComponentBitDepthFlagBitsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagBitsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagBitsKHR(VkVideoCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagBitsKHR deserialize_VkVideoCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagBitsKHR(VkVideoSessionCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagBitsKHR deserialize_VkVideoSessionCreateFlagBitsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagBitsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagBitsKHR(VkVideoCodingControlFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagBitsKHR deserialize_VkVideoCodingControlFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagBitsKHR>();
            };
        

            json serialize_VkQueryResultStatusKHR(VkQueryResultStatusKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultStatusKHR deserialize_VkQueryResultStatusKHR(json name){
                return name["value"].get<VkQueryResultStatusKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagBitsKHR(VkVideoDecodeUsageFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagBitsKHR deserialize_VkVideoDecodeUsageFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagBitsKHR(VkVideoDecodeCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagBitsKHR deserialize_VkVideoDecodeCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(VkVideoDecodeH264PictureLayoutFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagBitsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagBitsKHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceTypeNV(VkAccelerationStructureMotionInstanceTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceTypeNV deserialize_VkAccelerationStructureMotionInstanceTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceTypeNV>();
            };
        

        json serialize_Display_p(const Display* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Display* deserialize_Display_p(json name){
            return (Display*) (uintptr_t)name["value"];
        };
    

        json serialize_VisualID_p(const VisualID* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        VisualID* deserialize_VisualID_p(json name){
            return (VisualID*) (uintptr_t)name["value"];
        };
    

            json serialize_VisualID(const VisualID name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            VisualID deserialize_VisualID(json name){
                return (VisualID) name["value"];
            };
        

        json serialize_Window_p(const Window* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Window* deserialize_Window_p(json name){
            return (Window*) (uintptr_t)name["value"];
        };
    

            json serialize_Window(const Window name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            Window deserialize_Window(json name){
                return (Window) name["value"];
            };
        

        json serialize_xcb_connection_t_p(const xcb_connection_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_connection_t* deserialize_xcb_connection_t_p(json name){
            return (xcb_connection_t*) (uintptr_t)name["value"];
        };
    

        json serialize_xcb_visualid_t_p(const xcb_visualid_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_visualid_t* deserialize_xcb_visualid_t_p(json name){
            return (xcb_visualid_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_visualid_t(const xcb_visualid_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_visualid_t deserialize_xcb_visualid_t(json name){
                return (xcb_visualid_t) name["value"];
            };
        

        json serialize_xcb_window_t_p(const xcb_window_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_window_t* deserialize_xcb_window_t_p(json name){
            return (xcb_window_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_window_t(const xcb_window_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_window_t deserialize_xcb_window_t(json name){
                return (xcb_window_t) name["value"];
            };
        

        json serialize_StdVideoH264ProfileIdc_p(const StdVideoH264ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ProfileIdc* deserialize_StdVideoH264ProfileIdc_p(json name){
            return (StdVideoH264ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264ProfileIdc(const StdVideoH264ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264ProfileIdc deserialize_StdVideoH264ProfileIdc(json name){
                return (StdVideoH264ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH264LevelIdc_p(const StdVideoH264LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264LevelIdc* deserialize_StdVideoH264LevelIdc_p(json name){
            return (StdVideoH264LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264LevelIdc(const StdVideoH264LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264LevelIdc deserialize_StdVideoH264LevelIdc(json name){
                return (StdVideoH264LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH264ChromaFormatIdc_p(const StdVideoH264ChromaFormatIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ChromaFormatIdc* deserialize_StdVideoH264ChromaFormatIdc_p(json name){
            return (StdVideoH264ChromaFormatIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PocType_p(const StdVideoH264PocType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PocType* deserialize_StdVideoH264PocType_p(json name){
            return (StdVideoH264PocType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsFlags_p(const StdVideoH264SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsFlags* deserialize_StdVideoH264SpsFlags_p(json name){
            return (StdVideoH264SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ScalingLists_p(const StdVideoH264ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ScalingLists* deserialize_StdVideoH264ScalingLists_p(json name){
            return (StdVideoH264ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSetVui_p(const StdVideoH264SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSetVui* deserialize_StdVideoH264SequenceParameterSetVui_p(json name){
            return (StdVideoH264SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264AspectRatioIdc_p(const StdVideoH264AspectRatioIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264AspectRatioIdc* deserialize_StdVideoH264AspectRatioIdc_p(json name){
            return (StdVideoH264AspectRatioIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264HrdParameters_p(const StdVideoH264HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264HrdParameters* deserialize_StdVideoH264HrdParameters_p(json name){
            return (StdVideoH264HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsVuiFlags_p(const StdVideoH264SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsVuiFlags* deserialize_StdVideoH264SpsVuiFlags_p(json name){
            return (StdVideoH264SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264WeightedBipredIdc_p(const StdVideoH264WeightedBipredIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264WeightedBipredIdc* deserialize_StdVideoH264WeightedBipredIdc_p(json name){
            return (StdVideoH264WeightedBipredIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PpsFlags_p(const StdVideoH264PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PpsFlags* deserialize_StdVideoH264PpsFlags_p(json name){
            return (StdVideoH264PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SliceType_p(const StdVideoH264SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SliceType* deserialize_StdVideoH264SliceType_p(json name){
            return (StdVideoH264SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264CabacInitIdc_p(const StdVideoH264CabacInitIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264CabacInitIdc* deserialize_StdVideoH264CabacInitIdc_p(json name){
            return (StdVideoH264CabacInitIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264DisableDeblockingFilterIdc_p(const StdVideoH264DisableDeblockingFilterIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264DisableDeblockingFilterIdc* deserialize_StdVideoH264DisableDeblockingFilterIdc_p(json name){
            return (StdVideoH264DisableDeblockingFilterIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureType_p(const StdVideoH264PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureType* deserialize_StdVideoH264PictureType_p(json name){
            return (StdVideoH264PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ModificationOfPicNumsIdc_p(const StdVideoH264ModificationOfPicNumsIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ModificationOfPicNumsIdc* deserialize_StdVideoH264ModificationOfPicNumsIdc_p(json name){
            return (StdVideoH264ModificationOfPicNumsIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264MemMgmtControlOp_p(const StdVideoH264MemMgmtControlOp* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264MemMgmtControlOp* deserialize_StdVideoH264MemMgmtControlOp_p(json name){
            return (StdVideoH264MemMgmtControlOp*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfo_p(const StdVideoDecodeH264PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfo* deserialize_StdVideoDecodeH264PictureInfo_p(json name){
            return (StdVideoDecodeH264PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfo_p(const StdVideoDecodeH264ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfo* deserialize_StdVideoDecodeH264ReferenceInfo_p(json name){
            return (StdVideoDecodeH264ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfoFlags_p(const StdVideoDecodeH264PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfoFlags* deserialize_StdVideoDecodeH264PictureInfoFlags_p(json name){
            return (StdVideoDecodeH264PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfoFlags_p(const StdVideoDecodeH264ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfoFlags* deserialize_StdVideoDecodeH264ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH264ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSet_p(const StdVideoH264SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSet* deserialize_StdVideoH264SequenceParameterSet_p(json name){
            return (StdVideoH264SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureParameterSet_p(const StdVideoH264PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureParameterSet* deserialize_StdVideoH264PictureParameterSet_p(json name){
            return (StdVideoH264PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ProfileIdc_p(const StdVideoH265ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ProfileIdc* deserialize_StdVideoH265ProfileIdc_p(json name){
            return (StdVideoH265ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265ProfileIdc(const StdVideoH265ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265ProfileIdc deserialize_StdVideoH265ProfileIdc(json name){
                return (StdVideoH265ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH265VideoParameterSet_p(const StdVideoH265VideoParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VideoParameterSet* deserialize_StdVideoH265VideoParameterSet_p(json name){
            return (StdVideoH265VideoParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSet_p(const StdVideoH265SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSet* deserialize_StdVideoH265SequenceParameterSet_p(json name){
            return (StdVideoH265SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureParameterSet_p(const StdVideoH265PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureParameterSet* deserialize_StdVideoH265PictureParameterSet_p(json name){
            return (StdVideoH265PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265DecPicBufMgr_p(const StdVideoH265DecPicBufMgr* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265DecPicBufMgr* deserialize_StdVideoH265DecPicBufMgr_p(json name){
            return (StdVideoH265DecPicBufMgr*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdParameters_p(const StdVideoH265HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdParameters* deserialize_StdVideoH265HrdParameters_p(json name){
            return (StdVideoH265HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265VpsFlags_p(const StdVideoH265VpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VpsFlags* deserialize_StdVideoH265VpsFlags_p(json name){
            return (StdVideoH265VpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265LevelIdc_p(const StdVideoH265LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265LevelIdc* deserialize_StdVideoH265LevelIdc_p(json name){
            return (StdVideoH265LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265LevelIdc(const StdVideoH265LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265LevelIdc deserialize_StdVideoH265LevelIdc(json name){
                return (StdVideoH265LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH265SpsFlags_p(const StdVideoH265SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsFlags* deserialize_StdVideoH265SpsFlags_p(json name){
            return (StdVideoH265SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ScalingLists_p(const StdVideoH265ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ScalingLists* deserialize_StdVideoH265ScalingLists_p(json name){
            return (StdVideoH265ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSetVui_p(const StdVideoH265SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSetVui* deserialize_StdVideoH265SequenceParameterSetVui_p(json name){
            return (StdVideoH265SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PredictorPaletteEntries_p(const StdVideoH265PredictorPaletteEntries* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PredictorPaletteEntries* deserialize_StdVideoH265PredictorPaletteEntries_p(json name){
            return (StdVideoH265PredictorPaletteEntries*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PpsFlags_p(const StdVideoH265PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PpsFlags* deserialize_StdVideoH265PpsFlags_p(json name){
            return (StdVideoH265PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SubLayerHrdParameters_p(const StdVideoH265SubLayerHrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SubLayerHrdParameters* deserialize_StdVideoH265SubLayerHrdParameters_p(json name){
            return (StdVideoH265SubLayerHrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdFlags_p(const StdVideoH265HrdFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdFlags* deserialize_StdVideoH265HrdFlags_p(json name){
            return (StdVideoH265HrdFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SpsVuiFlags_p(const StdVideoH265SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsVuiFlags* deserialize_StdVideoH265SpsVuiFlags_p(json name){
            return (StdVideoH265SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SliceType_p(const StdVideoH265SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SliceType* deserialize_StdVideoH265SliceType_p(json name){
            return (StdVideoH265SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureType_p(const StdVideoH265PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureType* deserialize_StdVideoH265PictureType_p(json name){
            return (StdVideoH265PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfo_p(const StdVideoDecodeH265PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfo* deserialize_StdVideoDecodeH265PictureInfo_p(json name){
            return (StdVideoDecodeH265PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfo_p(const StdVideoDecodeH265ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfo* deserialize_StdVideoDecodeH265ReferenceInfo_p(json name){
            return (StdVideoDecodeH265ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfoFlags_p(const StdVideoDecodeH265PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfoFlags* deserialize_StdVideoDecodeH265PictureInfoFlags_p(json name){
            return (StdVideoDecodeH265PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfoFlags_p(const StdVideoDecodeH265ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfoFlags* deserialize_StdVideoDecodeH265ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH265ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    
std::map<uintptr_t,PFN_vkInternalAllocationNotification> id_to_PFN_vkInternalAllocationNotification;

    json serialize_PFN_vkInternalAllocationNotification(PFN_vkInternalAllocationNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalAllocationNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalAllocationNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalAllocationNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalAllocationNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalAllocationNotification_response"){
        
handle_PFN_vkInternalAllocationNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalAllocationNotification deserialize_PFN_vkInternalAllocationNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalAllocationNotification_wrapper;
            };
        

            void handle_PFN_vkInternalAllocationNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalAllocationNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalAllocationNotification[data["id"]];
            
            result["type"]="PFN_vkInternalAllocationNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalAllocationNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalAllocationNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkInternalFreeNotification> id_to_PFN_vkInternalFreeNotification;

    json serialize_PFN_vkInternalFreeNotification(PFN_vkInternalFreeNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalFreeNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalFreeNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalFreeNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalFreeNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalFreeNotification_response"){
        
handle_PFN_vkInternalFreeNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalFreeNotification deserialize_PFN_vkInternalFreeNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalFreeNotification_wrapper;
            };
        

            void handle_PFN_vkInternalFreeNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalFreeNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalFreeNotification[data["id"]];
            
            result["type"]="PFN_vkInternalFreeNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalFreeNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalFreeNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkReallocationFunction> id_to_PFN_vkReallocationFunction;

    json serialize_PFN_vkReallocationFunction(PFN_vkReallocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkReallocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkReallocationFunction_wrapper(
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkReallocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkReallocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pOriginal"]=[&]() {
    json return_qUMsCyj=json({});
    
        if (pOriginal==NULL){
            return_qUMsCyj["null"]=true;
            return return_qUMsCyj;
        }
        return serialize_void_p(pOriginal);
}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkReallocationFunction_response"){
        
auto result= handle_PFN_vkReallocationFunction_response(data, _struct->pUserData, pOriginal, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkReallocationFunction deserialize_PFN_vkReallocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkReallocationFunction_wrapper;
            };
        

            void handle_PFN_vkReallocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkReallocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkReallocationFunction[data["id"]];
            
            result["type"]="PFN_vkReallocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pOriginal;
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,pOriginal,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_Arllkwk=json({});
    
        if (result_temp==NULL){
            return_Arllkwk["null"]=true;
            return return_Arllkwk;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pOriginal"]=[&]() {
    json return_qUMsCyj=json({});
    
        if (pOriginal==NULL){
            return_qUMsCyj["null"]=true;
            return return_qUMsCyj;
        }
        return serialize_void_p(pOriginal);
}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkReallocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkReallocationFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkReallocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkReallocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkAllocationFunction> id_to_PFN_vkAllocationFunction;

    json serialize_PFN_vkAllocationFunction(PFN_vkAllocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkAllocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkAllocationFunction_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkAllocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkAllocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkAllocationFunction_response"){
        
auto result= handle_PFN_vkAllocationFunction_response(data, _struct->pUserData, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkAllocationFunction deserialize_PFN_vkAllocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkAllocationFunction_wrapper;
            };
        

            void handle_PFN_vkAllocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkAllocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkAllocationFunction[data["id"]];
            
            result["type"]="PFN_vkAllocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_CaWjkee=json({});
    
        if (result_temp==NULL){
            return_CaWjkee["null"]=true;
            return return_CaWjkee;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkAllocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkAllocationFunction_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkAllocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkAllocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkFreeFunction> id_to_PFN_vkFreeFunction;

    json serialize_PFN_vkFreeFunction(PFN_vkFreeFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkFreeFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkFreeFunction_wrapper(
    void*                                       pUserData,
    void*                                       pMemory){
            json data=json({});
            data["type"]="PFN_vkFreeFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkFreeFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pMemory"]=[&]() {
    json return_sFERVwr=json({});
    
        if (pMemory==NULL){
            return_sFERVwr["null"]=true;
            return return_sFERVwr;
        }
        return serialize_void_p(pMemory);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkFreeFunction_response"){
        
handle_PFN_vkFreeFunction_response(data, _struct->pUserData, pMemory);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkFreeFunction deserialize_PFN_vkFreeFunction(json name){
            //Will only be called by the server
            
            return PFN_vkFreeFunction_wrapper;
            };
        

            void handle_PFN_vkFreeFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkFreeFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkFreeFunction[data["id"]];
            
            result["type"]="PFN_vkFreeFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pMemory;
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();
funcpointer(pUserData,pMemory);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pMemory"]=[&]() {
    json return_sFERVwr=json({});
    
        if (pMemory==NULL){
            return_sFERVwr["null"]=true;
            return return_sFERVwr;
        }
        return serialize_void_p(pMemory);
}();
writeToConn(result);
};

        void handle_PFN_vkFreeFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pMemory) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkFreeFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();

}
std::map<uintptr_t,PFN_vkDebugReportCallbackEXT> id_to_PFN_vkDebugReportCallbackEXT;

    json serialize_PFN_vkDebugReportCallbackEXT(PFN_vkDebugReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugReportCallbackEXT_wrapper(
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugReportCallbackCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugReportCallbackEXT_id;
            
data["members"]["flags"]=[&]() {
    json return_XSZRFnv=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
data["members"]["objectType"]=[&]() {
    json return_KZUYZEp=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
data["members"]["object"]=[&]() {
    json return_ePswGlN=json({});
    return serialize_uint64_t(object);}();
data["members"]["location"]=[&]() {
    json return_MfvLciZ=json({});
    return serialize_size_t(location);}();
data["members"]["messageCode"]=[&]() {
    json return_YoGUCPx=json({});
    return serialize_int32_t(messageCode);}();
data["members"]["pLayerPrefix"]=[&]() {
    json return_dAeRyOC=json({});
    
        if (pLayerPrefix==NULL){
            return_dAeRyOC["null"]=true;
            return return_dAeRyOC;
        }
        return serialize_char_p(pLayerPrefix);
}();
data["members"]["pMessage"]=[&]() {
    json return_bPCQekx=json({});
    
        if (pMessage==NULL){
            return_bPCQekx["null"]=true;
            return return_bPCQekx;
        }
        return serialize_char_p(pMessage);
}();
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugReportCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugReportCallbackEXT_response(data, flags, objectType, object, location, messageCode, pLayerPrefix, pMessage, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugReportCallbackEXT deserialize_PFN_vkDebugReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugReportCallbackEXT_response";
            
        
 VkDebugReportFlagsEXT                       flags;
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
 VkDebugReportObjectTypeEXT                  objectType;
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
 uint64_t                                    object;
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
 size_t                                      location;
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
 int32_t                                     messageCode;
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();
const char*                                 pLayerPrefix;
[&]() {
char* temp_BwfBQOH;[&]() {

        if (data["members"]["pLayerPrefix"].contains("null")){
        temp_BwfBQOH=NULL;
        }
    temp_BwfBQOH=deserialize_char_p(data["members"]["pLayerPrefix"]);
}();pLayerPrefix=temp_BwfBQOH;}();
const char*                                 pMessage;
[&]() {
char* temp_iHizcpU;[&]() {

        if (data["members"]["pMessage"].contains("null")){
        temp_iHizcpU=NULL;
        }
    temp_iHizcpU=deserialize_char_p(data["members"]["pMessage"]);
}();pMessage=temp_iHizcpU;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(flags,objectType,object,location,messageCode,pLayerPrefix,pMessage,pUserData);
result["result"]=[&]() {
    json return_zpvJyFZ=json({});
    return_zpvJyFZ=[&]() {
    json return_YcIYsel=json({});
    return serialize_uint32_t(result_temp);}();return return_zpvJyFZ;}();
result["params"]["flags"]=[&]() {
    json return_XSZRFnv=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
result["params"]["objectType"]=[&]() {
    json return_KZUYZEp=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
result["params"]["object"]=[&]() {
    json return_ePswGlN=json({});
    return serialize_uint64_t(object);}();
result["params"]["location"]=[&]() {
    json return_MfvLciZ=json({});
    return serialize_size_t(location);}();
result["params"]["messageCode"]=[&]() {
    json return_YoGUCPx=json({});
    return serialize_int32_t(messageCode);}();
result["params"]["pLayerPrefix"]=[&]() {
    json return_dAeRyOC=json({});
    
        if (pLayerPrefix==NULL){
            return_dAeRyOC["null"]=true;
            return return_dAeRyOC;
        }
        return serialize_char_p(pLayerPrefix);
}();
result["params"]["pMessage"]=[&]() {
    json return_bPCQekx=json({});
    
        if (pMessage==NULL){
            return_bPCQekx["null"]=true;
            return return_bPCQekx;
        }
        return serialize_char_p(pMessage);
}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugReportCallbackEXT_response(json data, 
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();


[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDebugUtilsMessengerCallbackEXT> id_to_PFN_vkDebugUtilsMessengerCallbackEXT;

    json serialize_PFN_vkDebugUtilsMessengerCallbackEXT(PFN_vkDebugUtilsMessengerCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugUtilsMessengerCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugUtilsMessengerCallbackEXT_wrapper(
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugUtilsMessengerCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id;
            
data["members"]["messageSeverity"]=[&]() {
    json return_sNxtKmA=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
data["members"]["messageTypes"]=[&]() {
    json return_vagGLtM=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
data["members"]["pCallbackData"]=[&]() {
    json return_oJOcfsX=json({});
    
        if (pCallbackData==NULL){
            return_oJOcfsX["null"]=true;
            return return_oJOcfsX;
        }
        return_oJOcfsX=[&]() {
    json return_FPrcMto=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_oJOcfsX;}();
data["members"]["pUserData"]=[&]() {
    json return_dHTULNO=json({});
    
        if (_struct->pUserData==NULL){
            return_dHTULNO["null"]=true;
            return return_dHTULNO;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugUtilsMessengerCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(data, messageSeverity, messageTypes, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugUtilsMessengerCallbackEXT deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugUtilsMessengerCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugUtilsMessengerCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugUtilsMessengerCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugUtilsMessengerCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_response";
            
        
 VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity;
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
 VkDebugUtilsMessageTypeFlagsEXT                  messageTypes;
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();
const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData;
[&]() {
VkDebugUtilsMessengerCallbackDataEXT* temp_xGrGtVB;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_xGrGtVB=NULL;
        }
    [&]() {
*(temp_xGrGtVB)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_xGrGtVB;}();
 void*                                            pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(messageSeverity,messageTypes,pCallbackData,pUserData);
result["result"]=[&]() {
    json return_eplspvb=json({});
    return_eplspvb=[&]() {
    json return_qXBGUnK=json({});
    return serialize_uint32_t(result_temp);}();return return_eplspvb;}();
result["params"]["messageSeverity"]=[&]() {
    json return_sNxtKmA=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
result["params"]["messageTypes"]=[&]() {
    json return_vagGLtM=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
result["params"]["pCallbackData"]=[&]() {
    json return_oJOcfsX=json({});
    
        if (pCallbackData==NULL){
            return_oJOcfsX["null"]=true;
            return return_oJOcfsX;
        }
        return_oJOcfsX=[&]() {
    json return_FPrcMto=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_oJOcfsX;}();
result["params"]["pUserData"]=[&]() {
    json return_fZfXUrt=json({});
    
        if (pUserData==NULL){
            return_fZfXUrt["null"]=true;
            return return_fZfXUrt;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(json data, 
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugUtilsMessengerCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDeviceMemoryReportCallbackEXT> id_to_PFN_vkDeviceMemoryReportCallbackEXT;

    json serialize_PFN_vkDeviceMemoryReportCallbackEXT(PFN_vkDeviceMemoryReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDeviceMemoryReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDeviceMemoryReportCallbackEXT_wrapper(
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDeviceMemoryReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDeviceDeviceMemoryReportCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDeviceMemoryReportCallbackEXT_id;
            
data["members"]["pCallbackData"]=[&]() {
    json return_lDVRiGB=json({});
    
        if (pCallbackData==NULL){
            return_lDVRiGB["null"]=true;
            return return_lDVRiGB;
        }
        return_lDVRiGB=[&]() {
    json return_bRBLRaq=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_lDVRiGB;}();
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDeviceMemoryReportCallbackEXT_response"){
        
handle_PFN_vkDeviceMemoryReportCallbackEXT_response(data, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkDeviceMemoryReportCallbackEXT deserialize_PFN_vkDeviceMemoryReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDeviceMemoryReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDeviceMemoryReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDeviceMemoryReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDeviceMemoryReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDeviceMemoryReportCallbackEXT_response";
            
        
const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData;
[&]() {
VkDeviceMemoryReportCallbackDataEXT* temp_NmJlCaN;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_NmJlCaN=NULL;
        }
    [&]() {
*(temp_NmJlCaN)=deserialize_VkDeviceMemoryReportCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_NmJlCaN;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
funcpointer(pCallbackData,pUserData);
result["params"]["pCallbackData"]=[&]() {
    json return_lDVRiGB=json({});
    
        if (pCallbackData==NULL){
            return_lDVRiGB["null"]=true;
            return return_lDVRiGB;
        }
        return_lDVRiGB=[&]() {
    json return_bRBLRaq=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_lDVRiGB;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        void handle_PFN_vkDeviceMemoryReportCallbackEXT_response(json data, 
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDeviceMemoryReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();

}
std::map<uintptr_t,PFN_vkGetInstanceProcAddrLUNARG> id_to_PFN_vkGetInstanceProcAddrLUNARG;

    json serialize_PFN_vkGetInstanceProcAddrLUNARG(PFN_vkGetInstanceProcAddrLUNARG name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkGetInstanceProcAddrLUNARG[(uintptr_t)name]=name;
        return result;
    }
    

        PFN_vkGetInstanceProcAddrLUNARG deserialize_PFN_vkGetInstanceProcAddrLUNARG(json name){
            //Will only be called by the server
            
            return vkGetInstanceProcAddr;
            };
        

        json serialize_VkInstance(VkInstance data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkInstance deserialize_VkInstance(json data){
               return (VkInstance)data["value"].get<uintptr_t>();
       }

        json serialize_VkPhysicalDevice(VkPhysicalDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPhysicalDevice deserialize_VkPhysicalDevice(json data){
               return (VkPhysicalDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkDevice(VkDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDevice deserialize_VkDevice(json data){
               return (VkDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueue(VkQueue data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueue deserialize_VkQueue(json data){
               return (VkQueue)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandBuffer(VkCommandBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandBuffer deserialize_VkCommandBuffer(json data){
               return (VkCommandBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeviceMemory(VkDeviceMemory data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            #ifdef CLIENT
                currStruct()->mem_to_sync->insert((uintptr_t)data);
            #endif
            

            return result;
        }
       

       VkDeviceMemory deserialize_VkDeviceMemory(json data){
               return (VkDeviceMemory)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandPool(VkCommandPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandPool deserialize_VkCommandPool(json data){
               return (VkCommandPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkBuffer(VkBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBuffer deserialize_VkBuffer(json data){
               return (VkBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkBufferView(VkBufferView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBufferView deserialize_VkBufferView(json data){
               return (VkBufferView)data["value"].get<uintptr_t>();
       }

        json serialize_VkImage(VkImage data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImage deserialize_VkImage(json data){
               return (VkImage)data["value"].get<uintptr_t>();
       }

        json serialize_VkImageView(VkImageView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImageView deserialize_VkImageView(json data){
               return (VkImageView)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderModule(VkShaderModule data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderModule deserialize_VkShaderModule(json data){
               return (VkShaderModule)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipeline(VkPipeline data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipeline deserialize_VkPipeline(json data){
               return (VkPipeline)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineLayout(VkPipelineLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineLayout deserialize_VkPipelineLayout(json data){
               return (VkPipelineLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkSampler(VkSampler data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSampler deserialize_VkSampler(json data){
               return (VkSampler)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSet(VkDescriptorSet data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSet deserialize_VkDescriptorSet(json data){
               return (VkDescriptorSet)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSetLayout(VkDescriptorSetLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSetLayout deserialize_VkDescriptorSetLayout(json data){
               return (VkDescriptorSetLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorPool(VkDescriptorPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorPool deserialize_VkDescriptorPool(json data){
               return (VkDescriptorPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFence(VkFence data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFence deserialize_VkFence(json data){
               return (VkFence)data["value"].get<uintptr_t>();
       }

        json serialize_VkSemaphore(VkSemaphore data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSemaphore deserialize_VkSemaphore(json data){
               return (VkSemaphore)data["value"].get<uintptr_t>();
       }

        json serialize_VkEvent(VkEvent data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkEvent deserialize_VkEvent(json data){
               return (VkEvent)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueryPool(VkQueryPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueryPool deserialize_VkQueryPool(json data){
               return (VkQueryPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFramebuffer(VkFramebuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFramebuffer deserialize_VkFramebuffer(json data){
               return (VkFramebuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkRenderPass(VkRenderPass data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkRenderPass deserialize_VkRenderPass(json data){
               return (VkRenderPass)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineCache(VkPipelineCache data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineCache deserialize_VkPipelineCache(json data){
               return (VkPipelineCache)data["value"].get<uintptr_t>();
       }

        json serialize_VkIndirectCommandsLayoutNV(VkIndirectCommandsLayoutNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkIndirectCommandsLayoutNV deserialize_VkIndirectCommandsLayoutNV(json data){
               return (VkIndirectCommandsLayoutNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplate(VkDescriptorUpdateTemplate data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplate deserialize_VkDescriptorUpdateTemplate(json data){
               return (VkDescriptorUpdateTemplate)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplateKHR(VkDescriptorUpdateTemplateKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplateKHR deserialize_VkDescriptorUpdateTemplateKHR(json data){
               return (VkDescriptorUpdateTemplateKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversion(VkSamplerYcbcrConversion data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversion deserialize_VkSamplerYcbcrConversion(json data){
               return (VkSamplerYcbcrConversion)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversionKHR(VkSamplerYcbcrConversionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversionKHR deserialize_VkSamplerYcbcrConversionKHR(json data){
               return (VkSamplerYcbcrConversionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkValidationCacheEXT(VkValidationCacheEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkValidationCacheEXT deserialize_VkValidationCacheEXT(json data){
               return (VkValidationCacheEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureKHR(VkAccelerationStructureKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureKHR deserialize_VkAccelerationStructureKHR(json data){
               return (VkAccelerationStructureKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureNV(VkAccelerationStructureNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureNV deserialize_VkAccelerationStructureNV(json data){
               return (VkAccelerationStructureNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkPerformanceConfigurationINTEL(VkPerformanceConfigurationINTEL data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPerformanceConfigurationINTEL deserialize_VkPerformanceConfigurationINTEL(json data){
               return (VkPerformanceConfigurationINTEL)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeferredOperationKHR(VkDeferredOperationKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDeferredOperationKHR deserialize_VkDeferredOperationKHR(json data){
               return (VkDeferredOperationKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlot(VkPrivateDataSlot data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlot deserialize_VkPrivateDataSlot(json data){
               return (VkPrivateDataSlot)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlotEXT(VkPrivateDataSlotEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlotEXT deserialize_VkPrivateDataSlotEXT(json data){
               return (VkPrivateDataSlotEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuModuleNVX(VkCuModuleNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuModuleNVX deserialize_VkCuModuleNVX(json data){
               return (VkCuModuleNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuFunctionNVX(VkCuFunctionNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuFunctionNVX deserialize_VkCuFunctionNVX(json data){
               return (VkCuFunctionNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkOpticalFlowSessionNV(VkOpticalFlowSessionNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkOpticalFlowSessionNV deserialize_VkOpticalFlowSessionNV(json data){
               return (VkOpticalFlowSessionNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkMicromapEXT(VkMicromapEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkMicromapEXT deserialize_VkMicromapEXT(json data){
               return (VkMicromapEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderEXT(VkShaderEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderEXT deserialize_VkShaderEXT(json data){
               return (VkShaderEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayKHR(VkDisplayKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayKHR deserialize_VkDisplayKHR(json data){
               return (VkDisplayKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayModeKHR(VkDisplayModeKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayModeKHR deserialize_VkDisplayModeKHR(json data){
               return (VkDisplayModeKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSurfaceKHR(VkSurfaceKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSurfaceKHR deserialize_VkSurfaceKHR(json data){
               return (VkSurfaceKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSwapchainKHR(VkSwapchainKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSwapchainKHR deserialize_VkSwapchainKHR(json data){
               return (VkSwapchainKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugReportCallbackEXT(VkDebugReportCallbackEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugReportCallbackEXT deserialize_VkDebugReportCallbackEXT(json data){
               return (VkDebugReportCallbackEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugUtilsMessengerEXT(VkDebugUtilsMessengerEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugUtilsMessengerEXT deserialize_VkDebugUtilsMessengerEXT(json data){
               return (VkDebugUtilsMessengerEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionKHR(VkVideoSessionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionKHR deserialize_VkVideoSessionKHR(json data){
               return (VkVideoSessionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionParametersKHR(VkVideoSessionParametersKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionParametersKHR deserialize_VkVideoSessionParametersKHR(json data){
               return (VkVideoSessionParametersKHR)data["value"].get<uintptr_t>();
       }
