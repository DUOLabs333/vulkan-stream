
#include <ThreadStruct.hpp>
#include <nlohmann/json.hpp>

// for convenience
using json = nlohmann::json;

#include <Serialization.hpp>
#include <Server.hpp>
#include <Synchronization.hpp>


        json serialize_VkBaseOutStructure_pNext(const void* name){
        printf("Serializing VkBaseOutStructure...\n");
        json result;
        result=[&]() {
    json return_NXSgfQF=json({});
    
        if (((VkBaseOutStructure*)(name))==NULL){
            return_NXSgfQF["null"]=true;
            return return_NXSgfQF;
        }
        return_NXSgfQF=[&]() {
    json return_MaYWLEs=json({});
    return serialize_VkBaseOutStructure(*((VkBaseOutStructure*)(name)));}();
return return_NXSgfQF;}();
        return result;
        }
    

        json serialize_VkBaseInStructure_pNext(const void* name){
        printf("Serializing VkBaseInStructure...\n");
        json result;
        result=[&]() {
    json return_YREqsbl=json({});
    
        if (((VkBaseInStructure*)(name))==NULL){
            return_YREqsbl["null"]=true;
            return return_YREqsbl;
        }
        return_YREqsbl=[&]() {
    json return_tpFYsKP=json({});
    return serialize_VkBaseInStructure(*((VkBaseInStructure*)(name)));}();
return return_YREqsbl;}();
        return result;
        }
    

        json serialize_VkOffset2D_pNext(const void* name){
        printf("Serializing VkOffset2D...\n");
        json result;
        result=[&]() {
    json return_gMoTbYS=json({});
    
        if (((VkOffset2D*)(name))==NULL){
            return_gMoTbYS["null"]=true;
            return return_gMoTbYS;
        }
        return_gMoTbYS=[&]() {
    json return_xKONQbs=json({});
    return serialize_VkOffset2D(*((VkOffset2D*)(name)));}();
return return_gMoTbYS;}();
        return result;
        }
    

        json serialize_VkOffset3D_pNext(const void* name){
        printf("Serializing VkOffset3D...\n");
        json result;
        result=[&]() {
    json return_DuUvebI=json({});
    
        if (((VkOffset3D*)(name))==NULL){
            return_DuUvebI["null"]=true;
            return return_DuUvebI;
        }
        return_DuUvebI=[&]() {
    json return_xbJhivk=json({});
    return serialize_VkOffset3D(*((VkOffset3D*)(name)));}();
return return_DuUvebI;}();
        return result;
        }
    

        json serialize_VkExtent2D_pNext(const void* name){
        printf("Serializing VkExtent2D...\n");
        json result;
        result=[&]() {
    json return_ZEeYLrg=json({});
    
        if (((VkExtent2D*)(name))==NULL){
            return_ZEeYLrg["null"]=true;
            return return_ZEeYLrg;
        }
        return_ZEeYLrg=[&]() {
    json return_sKDTPqb=json({});
    return serialize_VkExtent2D(*((VkExtent2D*)(name)));}();
return return_ZEeYLrg;}();
        return result;
        }
    

        json serialize_VkExtent3D_pNext(const void* name){
        printf("Serializing VkExtent3D...\n");
        json result;
        result=[&]() {
    json return_jfMWqWj=json({});
    
        if (((VkExtent3D*)(name))==NULL){
            return_jfMWqWj["null"]=true;
            return return_jfMWqWj;
        }
        return_jfMWqWj=[&]() {
    json return_JKAtNOs=json({});
    return serialize_VkExtent3D(*((VkExtent3D*)(name)));}();
return return_jfMWqWj;}();
        return result;
        }
    

        json serialize_VkViewport_pNext(const void* name){
        printf("Serializing VkViewport...\n");
        json result;
        result=[&]() {
    json return_OYMQFvp=json({});
    
        if (((VkViewport*)(name))==NULL){
            return_OYMQFvp["null"]=true;
            return return_OYMQFvp;
        }
        return_OYMQFvp=[&]() {
    json return_nyeSzpJ=json({});
    return serialize_VkViewport(*((VkViewport*)(name)));}();
return return_OYMQFvp;}();
        return result;
        }
    

        json serialize_VkRect2D_pNext(const void* name){
        printf("Serializing VkRect2D...\n");
        json result;
        result=[&]() {
    json return_IiZUbrn=json({});
    
        if (((VkRect2D*)(name))==NULL){
            return_IiZUbrn["null"]=true;
            return return_IiZUbrn;
        }
        return_IiZUbrn=[&]() {
    json return_ogQUbVc=json({});
    return serialize_VkRect2D(*((VkRect2D*)(name)));}();
return return_IiZUbrn;}();
        return result;
        }
    

        json serialize_VkClearRect_pNext(const void* name){
        printf("Serializing VkClearRect...\n");
        json result;
        result=[&]() {
    json return_ubiJpRf=json({});
    
        if (((VkClearRect*)(name))==NULL){
            return_ubiJpRf["null"]=true;
            return return_ubiJpRf;
        }
        return_ubiJpRf=[&]() {
    json return_DNZVjDv=json({});
    return serialize_VkClearRect(*((VkClearRect*)(name)));}();
return return_ubiJpRf;}();
        return result;
        }
    

        json serialize_VkComponentMapping_pNext(const void* name){
        printf("Serializing VkComponentMapping...\n");
        json result;
        result=[&]() {
    json return_SKghmdY=json({});
    
        if (((VkComponentMapping*)(name))==NULL){
            return_SKghmdY["null"]=true;
            return return_SKghmdY;
        }
        return_SKghmdY=[&]() {
    json return_xySlrWr=json({});
    return serialize_VkComponentMapping(*((VkComponentMapping*)(name)));}();
return return_SKghmdY;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceProperties...\n");
        json result;
        result=[&]() {
    json return_SOLChBx=json({});
    
        if (((VkPhysicalDeviceProperties*)(name))==NULL){
            return_SOLChBx["null"]=true;
            return return_SOLChBx;
        }
        return_SOLChBx=[&]() {
    json return_BTKNlqv=json({});
    return serialize_VkPhysicalDeviceProperties(*((VkPhysicalDeviceProperties*)(name)));}();
return return_SOLChBx;}();
        return result;
        }
    

        json serialize_VkExtensionProperties_pNext(const void* name){
        printf("Serializing VkExtensionProperties...\n");
        json result;
        result=[&]() {
    json return_VDIkpnc=json({});
    
        if (((VkExtensionProperties*)(name))==NULL){
            return_VDIkpnc["null"]=true;
            return return_VDIkpnc;
        }
        return_VDIkpnc=[&]() {
    json return_OMbVLlD=json({});
    return serialize_VkExtensionProperties(*((VkExtensionProperties*)(name)));}();
return return_VDIkpnc;}();
        return result;
        }
    

        json serialize_VkLayerProperties_pNext(const void* name){
        printf("Serializing VkLayerProperties...\n");
        json result;
        result=[&]() {
    json return_MHLIjUL=json({});
    
        if (((VkLayerProperties*)(name))==NULL){
            return_MHLIjUL["null"]=true;
            return return_MHLIjUL;
        }
        return_MHLIjUL=[&]() {
    json return_sHmtsUS=json({});
    return serialize_VkLayerProperties(*((VkLayerProperties*)(name)));}();
return return_MHLIjUL;}();
        return result;
        }
    

        json serialize_VkApplicationInfo_pNext(const void* name){
        printf("Serializing VkApplicationInfo...\n");
        json result;
        result=[&]() {
    json return_MnDirxf=json({});
    
        if (((VkApplicationInfo*)(name))==NULL){
            return_MnDirxf["null"]=true;
            return return_MnDirxf;
        }
        return_MnDirxf=[&]() {
    json return_KUcdPSU=json({});
    return serialize_VkApplicationInfo(*((VkApplicationInfo*)(name)));}();
return return_MnDirxf;}();
        return result;
        }
    

        json serialize_VkAllocationCallbacks_pNext(const void* name){
        printf("Serializing VkAllocationCallbacks...\n");
        json result;
        result=[&]() {
    json return_qZGSDvO=json({});
    
        if (((VkAllocationCallbacks*)(name))==NULL){
            return_qZGSDvO["null"]=true;
            return return_qZGSDvO;
        }
        return_qZGSDvO=[&]() {
    json return_YtHNuJl=json({});
    return serialize_VkAllocationCallbacks(*((VkAllocationCallbacks*)(name)));}();
return return_qZGSDvO;}();
        return result;
        }
    

        json serialize_VkDeviceQueueCreateInfo_pNext(const void* name){
        printf("Serializing VkDeviceQueueCreateInfo...\n");
        json result;
        result=[&]() {
    json return_FsKpTvh=json({});
    
        if (((VkDeviceQueueCreateInfo*)(name))==NULL){
            return_FsKpTvh["null"]=true;
            return return_FsKpTvh;
        }
        return_FsKpTvh=[&]() {
    json return_xUrHPUa=json({});
    return serialize_VkDeviceQueueCreateInfo(*((VkDeviceQueueCreateInfo*)(name)));}();
return return_FsKpTvh;}();
        return result;
        }
    

        json serialize_VkDeviceCreateInfo_pNext(const void* name){
        printf("Serializing VkDeviceCreateInfo...\n");
        json result;
        result=[&]() {
    json return_rFTumXh=json({});
    
        if (((VkDeviceCreateInfo*)(name))==NULL){
            return_rFTumXh["null"]=true;
            return return_rFTumXh;
        }
        return_rFTumXh=[&]() {
    json return_OqFagxD=json({});
    return serialize_VkDeviceCreateInfo(*((VkDeviceCreateInfo*)(name)));}();
return return_rFTumXh;}();
        return result;
        }
    

        json serialize_VkInstanceCreateInfo_pNext(const void* name){
        printf("Serializing VkInstanceCreateInfo...\n");
        json result;
        result=[&]() {
    json return_GAHRyOM=json({});
    
        if (((VkInstanceCreateInfo*)(name))==NULL){
            return_GAHRyOM["null"]=true;
            return return_GAHRyOM;
        }
        return_GAHRyOM=[&]() {
    json return_octAxqh=json({});
    return serialize_VkInstanceCreateInfo(*((VkInstanceCreateInfo*)(name)));}();
return return_GAHRyOM;}();
        return result;
        }
    

        json serialize_VkQueueFamilyProperties_pNext(const void* name){
        printf("Serializing VkQueueFamilyProperties...\n");
        json result;
        result=[&]() {
    json return_cwfsFjI=json({});
    
        if (((VkQueueFamilyProperties*)(name))==NULL){
            return_cwfsFjI["null"]=true;
            return return_cwfsFjI;
        }
        return_cwfsFjI=[&]() {
    json return_tJryQec=json({});
    return serialize_VkQueueFamilyProperties(*((VkQueueFamilyProperties*)(name)));}();
return return_cwfsFjI;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMemoryProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMemoryProperties...\n");
        json result;
        result=[&]() {
    json return_rsVyigp=json({});
    
        if (((VkPhysicalDeviceMemoryProperties*)(name))==NULL){
            return_rsVyigp["null"]=true;
            return return_rsVyigp;
        }
        return_rsVyigp=[&]() {
    json return_tQcVCsF=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(*((VkPhysicalDeviceMemoryProperties*)(name)));}();
return return_rsVyigp;}();
        return result;
        }
    

        json serialize_VkMemoryAllocateInfo_pNext(const void* name){
        printf("Serializing VkMemoryAllocateInfo...\n");
        json result;
        result=[&]() {
    json return_IahRuRW=json({});
    
        if (((VkMemoryAllocateInfo*)(name))==NULL){
            return_IahRuRW["null"]=true;
            return return_IahRuRW;
        }
        return_IahRuRW=[&]() {
    json return_uzjomch=json({});
    return serialize_VkMemoryAllocateInfo(*((VkMemoryAllocateInfo*)(name)));}();
return return_IahRuRW;}();
        return result;
        }
    

        json serialize_VkMemoryRequirements_pNext(const void* name){
        printf("Serializing VkMemoryRequirements...\n");
        json result;
        result=[&]() {
    json return_hnVYqIY=json({});
    
        if (((VkMemoryRequirements*)(name))==NULL){
            return_hnVYqIY["null"]=true;
            return return_hnVYqIY;
        }
        return_hnVYqIY=[&]() {
    json return_dwPPInw=json({});
    return serialize_VkMemoryRequirements(*((VkMemoryRequirements*)(name)));}();
return return_hnVYqIY;}();
        return result;
        }
    

        json serialize_VkSparseImageFormatProperties_pNext(const void* name){
        printf("Serializing VkSparseImageFormatProperties...\n");
        json result;
        result=[&]() {
    json return_ZMpGJLC=json({});
    
        if (((VkSparseImageFormatProperties*)(name))==NULL){
            return_ZMpGJLC["null"]=true;
            return return_ZMpGJLC;
        }
        return_ZMpGJLC=[&]() {
    json return_tGiqRsG=json({});
    return serialize_VkSparseImageFormatProperties(*((VkSparseImageFormatProperties*)(name)));}();
return return_ZMpGJLC;}();
        return result;
        }
    

        json serialize_VkSparseImageMemoryRequirements_pNext(const void* name){
        printf("Serializing VkSparseImageMemoryRequirements...\n");
        json result;
        result=[&]() {
    json return_hICliiY=json({});
    
        if (((VkSparseImageMemoryRequirements*)(name))==NULL){
            return_hICliiY["null"]=true;
            return return_hICliiY;
        }
        return_hICliiY=[&]() {
    json return_hUOZesY=json({});
    return serialize_VkSparseImageMemoryRequirements(*((VkSparseImageMemoryRequirements*)(name)));}();
return return_hICliiY;}();
        return result;
        }
    

        json serialize_VkMemoryType_pNext(const void* name){
        printf("Serializing VkMemoryType...\n");
        json result;
        result=[&]() {
    json return_ruTYJNg=json({});
    
        if (((VkMemoryType*)(name))==NULL){
            return_ruTYJNg["null"]=true;
            return return_ruTYJNg;
        }
        return_ruTYJNg=[&]() {
    json return_NBlrqqb=json({});
    return serialize_VkMemoryType(*((VkMemoryType*)(name)));}();
return return_ruTYJNg;}();
        return result;
        }
    

        json serialize_VkMemoryHeap_pNext(const void* name){
        printf("Serializing VkMemoryHeap...\n");
        json result;
        result=[&]() {
    json return_LbbuJSo=json({});
    
        if (((VkMemoryHeap*)(name))==NULL){
            return_LbbuJSo["null"]=true;
            return return_LbbuJSo;
        }
        return_LbbuJSo=[&]() {
    json return_fmVDJkx=json({});
    return serialize_VkMemoryHeap(*((VkMemoryHeap*)(name)));}();
return return_LbbuJSo;}();
        return result;
        }
    

        json serialize_VkMappedMemoryRange_pNext(const void* name){
        printf("Serializing VkMappedMemoryRange...\n");
        json result;
        result=[&]() {
    json return_uQFoiAB=json({});
    
        if (((VkMappedMemoryRange*)(name))==NULL){
            return_uQFoiAB["null"]=true;
            return return_uQFoiAB;
        }
        return_uQFoiAB=[&]() {
    json return_TkjVRfh=json({});
    return serialize_VkMappedMemoryRange(*((VkMappedMemoryRange*)(name)));}();
return return_uQFoiAB;}();
        return result;
        }
    

        json serialize_VkFormatProperties_pNext(const void* name){
        printf("Serializing VkFormatProperties...\n");
        json result;
        result=[&]() {
    json return_enHEhYw=json({});
    
        if (((VkFormatProperties*)(name))==NULL){
            return_enHEhYw["null"]=true;
            return return_enHEhYw;
        }
        return_enHEhYw=[&]() {
    json return_yLWOQoX=json({});
    return serialize_VkFormatProperties(*((VkFormatProperties*)(name)));}();
return return_enHEhYw;}();
        return result;
        }
    

        json serialize_VkImageFormatProperties_pNext(const void* name){
        printf("Serializing VkImageFormatProperties...\n");
        json result;
        result=[&]() {
    json return_YTIEhbL=json({});
    
        if (((VkImageFormatProperties*)(name))==NULL){
            return_YTIEhbL["null"]=true;
            return return_YTIEhbL;
        }
        return_YTIEhbL=[&]() {
    json return_rfDbsnh=json({});
    return serialize_VkImageFormatProperties(*((VkImageFormatProperties*)(name)));}();
return return_YTIEhbL;}();
        return result;
        }
    

        json serialize_VkDescriptorBufferInfo_pNext(const void* name){
        printf("Serializing VkDescriptorBufferInfo...\n");
        json result;
        result=[&]() {
    json return_MgKqcJE=json({});
    
        if (((VkDescriptorBufferInfo*)(name))==NULL){
            return_MgKqcJE["null"]=true;
            return return_MgKqcJE;
        }
        return_MgKqcJE=[&]() {
    json return_leeeivO=json({});
    return serialize_VkDescriptorBufferInfo(*((VkDescriptorBufferInfo*)(name)));}();
return return_MgKqcJE;}();
        return result;
        }
    

        json serialize_VkDescriptorImageInfo_pNext(const void* name){
        printf("Serializing VkDescriptorImageInfo...\n");
        json result;
        result=[&]() {
    json return_mlJklSz=json({});
    
        if (((VkDescriptorImageInfo*)(name))==NULL){
            return_mlJklSz["null"]=true;
            return return_mlJklSz;
        }
        return_mlJklSz=[&]() {
    json return_bvNEstJ=json({});
    return serialize_VkDescriptorImageInfo(*((VkDescriptorImageInfo*)(name)));}();
return return_mlJklSz;}();
        return result;
        }
    

        json serialize_VkWriteDescriptorSet_pNext(const void* name){
        printf("Serializing VkWriteDescriptorSet...\n");
        json result;
        result=[&]() {
    json return_YRlLjhc=json({});
    
        if (((VkWriteDescriptorSet*)(name))==NULL){
            return_YRlLjhc["null"]=true;
            return return_YRlLjhc;
        }
        return_YRlLjhc=[&]() {
    json return_nQDoHAi=json({});
    return serialize_VkWriteDescriptorSet(*((VkWriteDescriptorSet*)(name)));}();
return return_YRlLjhc;}();
        return result;
        }
    

        json serialize_VkCopyDescriptorSet_pNext(const void* name){
        printf("Serializing VkCopyDescriptorSet...\n");
        json result;
        result=[&]() {
    json return_nQEKrPY=json({});
    
        if (((VkCopyDescriptorSet*)(name))==NULL){
            return_nQEKrPY["null"]=true;
            return return_nQEKrPY;
        }
        return_nQEKrPY=[&]() {
    json return_hdoJrmd=json({});
    return serialize_VkCopyDescriptorSet(*((VkCopyDescriptorSet*)(name)));}();
return return_nQEKrPY;}();
        return result;
        }
    

        json serialize_VkBufferUsageFlags2CreateInfoKHR_pNext(const void* name){
        printf("Serializing VkBufferUsageFlags2CreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_TWzABul=json({});
    
        if (((VkBufferUsageFlags2CreateInfoKHR*)(name))==NULL){
            return_TWzABul["null"]=true;
            return return_TWzABul;
        }
        return_TWzABul=[&]() {
    json return_aqyzwPq=json({});
    return serialize_VkBufferUsageFlags2CreateInfoKHR(*((VkBufferUsageFlags2CreateInfoKHR*)(name)));}();
return return_TWzABul;}();
        return result;
        }
    

        json serialize_VkBufferCreateInfo_pNext(const void* name){
        printf("Serializing VkBufferCreateInfo...\n");
        json result;
        result=[&]() {
    json return_vlTdBFX=json({});
    
        if (((VkBufferCreateInfo*)(name))==NULL){
            return_vlTdBFX["null"]=true;
            return return_vlTdBFX;
        }
        return_vlTdBFX=[&]() {
    json return_Ekcjcbv=json({});
    return serialize_VkBufferCreateInfo(*((VkBufferCreateInfo*)(name)));}();
return return_vlTdBFX;}();
        return result;
        }
    

        json serialize_VkBufferViewCreateInfo_pNext(const void* name){
        printf("Serializing VkBufferViewCreateInfo...\n");
        json result;
        result=[&]() {
    json return_KPyhtZh=json({});
    
        if (((VkBufferViewCreateInfo*)(name))==NULL){
            return_KPyhtZh["null"]=true;
            return return_KPyhtZh;
        }
        return_KPyhtZh=[&]() {
    json return_ePGjJzW=json({});
    return serialize_VkBufferViewCreateInfo(*((VkBufferViewCreateInfo*)(name)));}();
return return_KPyhtZh;}();
        return result;
        }
    

        json serialize_VkImageSubresource_pNext(const void* name){
        printf("Serializing VkImageSubresource...\n");
        json result;
        result=[&]() {
    json return_ZYgKcLl=json({});
    
        if (((VkImageSubresource*)(name))==NULL){
            return_ZYgKcLl["null"]=true;
            return return_ZYgKcLl;
        }
        return_ZYgKcLl=[&]() {
    json return_LMXUwXr=json({});
    return serialize_VkImageSubresource(*((VkImageSubresource*)(name)));}();
return return_ZYgKcLl;}();
        return result;
        }
    

        json serialize_VkImageSubresourceLayers_pNext(const void* name){
        printf("Serializing VkImageSubresourceLayers...\n");
        json result;
        result=[&]() {
    json return_WYKnqjW=json({});
    
        if (((VkImageSubresourceLayers*)(name))==NULL){
            return_WYKnqjW["null"]=true;
            return return_WYKnqjW;
        }
        return_WYKnqjW=[&]() {
    json return_zfjnawq=json({});
    return serialize_VkImageSubresourceLayers(*((VkImageSubresourceLayers*)(name)));}();
return return_WYKnqjW;}();
        return result;
        }
    

        json serialize_VkImageSubresourceRange_pNext(const void* name){
        printf("Serializing VkImageSubresourceRange...\n");
        json result;
        result=[&]() {
    json return_djSXTRR=json({});
    
        if (((VkImageSubresourceRange*)(name))==NULL){
            return_djSXTRR["null"]=true;
            return return_djSXTRR;
        }
        return_djSXTRR=[&]() {
    json return_RcVEqXl=json({});
    return serialize_VkImageSubresourceRange(*((VkImageSubresourceRange*)(name)));}();
return return_djSXTRR;}();
        return result;
        }
    

        json serialize_VkMemoryBarrier_pNext(const void* name){
        printf("Serializing VkMemoryBarrier...\n");
        json result;
        result=[&]() {
    json return_EskuKMO=json({});
    
        if (((VkMemoryBarrier*)(name))==NULL){
            return_EskuKMO["null"]=true;
            return return_EskuKMO;
        }
        return_EskuKMO=[&]() {
    json return_MQesaCs=json({});
    return serialize_VkMemoryBarrier(*((VkMemoryBarrier*)(name)));}();
return return_EskuKMO;}();
        return result;
        }
    

        json serialize_VkBufferMemoryBarrier_pNext(const void* name){
        printf("Serializing VkBufferMemoryBarrier...\n");
        json result;
        result=[&]() {
    json return_baOmLGR=json({});
    
        if (((VkBufferMemoryBarrier*)(name))==NULL){
            return_baOmLGR["null"]=true;
            return return_baOmLGR;
        }
        return_baOmLGR=[&]() {
    json return_oStfKfx=json({});
    return serialize_VkBufferMemoryBarrier(*((VkBufferMemoryBarrier*)(name)));}();
return return_baOmLGR;}();
        return result;
        }
    

        json serialize_VkImageMemoryBarrier_pNext(const void* name){
        printf("Serializing VkImageMemoryBarrier...\n");
        json result;
        result=[&]() {
    json return_yGtkcms=json({});
    
        if (((VkImageMemoryBarrier*)(name))==NULL){
            return_yGtkcms["null"]=true;
            return return_yGtkcms;
        }
        return_yGtkcms=[&]() {
    json return_smiDvyg=json({});
    return serialize_VkImageMemoryBarrier(*((VkImageMemoryBarrier*)(name)));}();
return return_yGtkcms;}();
        return result;
        }
    

        json serialize_VkImageCreateInfo_pNext(const void* name){
        printf("Serializing VkImageCreateInfo...\n");
        json result;
        result=[&]() {
    json return_HmecbDF=json({});
    
        if (((VkImageCreateInfo*)(name))==NULL){
            return_HmecbDF["null"]=true;
            return return_HmecbDF;
        }
        return_HmecbDF=[&]() {
    json return_cOjmjno=json({});
    return serialize_VkImageCreateInfo(*((VkImageCreateInfo*)(name)));}();
return return_HmecbDF;}();
        return result;
        }
    

        json serialize_VkSubresourceLayout_pNext(const void* name){
        printf("Serializing VkSubresourceLayout...\n");
        json result;
        result=[&]() {
    json return_riTXtAA=json({});
    
        if (((VkSubresourceLayout*)(name))==NULL){
            return_riTXtAA["null"]=true;
            return return_riTXtAA;
        }
        return_riTXtAA=[&]() {
    json return_uFZfzSk=json({});
    return serialize_VkSubresourceLayout(*((VkSubresourceLayout*)(name)));}();
return return_riTXtAA;}();
        return result;
        }
    

        json serialize_VkImageViewCreateInfo_pNext(const void* name){
        printf("Serializing VkImageViewCreateInfo...\n");
        json result;
        result=[&]() {
    json return_mURgdLf=json({});
    
        if (((VkImageViewCreateInfo*)(name))==NULL){
            return_mURgdLf["null"]=true;
            return return_mURgdLf;
        }
        return_mURgdLf=[&]() {
    json return_buTvNVG=json({});
    return serialize_VkImageViewCreateInfo(*((VkImageViewCreateInfo*)(name)));}();
return return_mURgdLf;}();
        return result;
        }
    

        json serialize_VkBufferCopy_pNext(const void* name){
        printf("Serializing VkBufferCopy...\n");
        json result;
        result=[&]() {
    json return_FuquXmS=json({});
    
        if (((VkBufferCopy*)(name))==NULL){
            return_FuquXmS["null"]=true;
            return return_FuquXmS;
        }
        return_FuquXmS=[&]() {
    json return_gmHkCUf=json({});
    return serialize_VkBufferCopy(*((VkBufferCopy*)(name)));}();
return return_FuquXmS;}();
        return result;
        }
    

        json serialize_VkSparseMemoryBind_pNext(const void* name){
        printf("Serializing VkSparseMemoryBind...\n");
        json result;
        result=[&]() {
    json return_yxLkgct=json({});
    
        if (((VkSparseMemoryBind*)(name))==NULL){
            return_yxLkgct["null"]=true;
            return return_yxLkgct;
        }
        return_yxLkgct=[&]() {
    json return_ajSTRkq=json({});
    return serialize_VkSparseMemoryBind(*((VkSparseMemoryBind*)(name)));}();
return return_yxLkgct;}();
        return result;
        }
    

        json serialize_VkSparseImageMemoryBind_pNext(const void* name){
        printf("Serializing VkSparseImageMemoryBind...\n");
        json result;
        result=[&]() {
    json return_eccUZax=json({});
    
        if (((VkSparseImageMemoryBind*)(name))==NULL){
            return_eccUZax["null"]=true;
            return return_eccUZax;
        }
        return_eccUZax=[&]() {
    json return_GzIVJaI=json({});
    return serialize_VkSparseImageMemoryBind(*((VkSparseImageMemoryBind*)(name)));}();
return return_eccUZax;}();
        return result;
        }
    

        json serialize_VkSparseBufferMemoryBindInfo_pNext(const void* name){
        printf("Serializing VkSparseBufferMemoryBindInfo...\n");
        json result;
        result=[&]() {
    json return_cshjNfM=json({});
    
        if (((VkSparseBufferMemoryBindInfo*)(name))==NULL){
            return_cshjNfM["null"]=true;
            return return_cshjNfM;
        }
        return_cshjNfM=[&]() {
    json return_RBeTCvf=json({});
    return serialize_VkSparseBufferMemoryBindInfo(*((VkSparseBufferMemoryBindInfo*)(name)));}();
return return_cshjNfM;}();
        return result;
        }
    

        json serialize_VkSparseImageOpaqueMemoryBindInfo_pNext(const void* name){
        printf("Serializing VkSparseImageOpaqueMemoryBindInfo...\n");
        json result;
        result=[&]() {
    json return_GdPKmqb=json({});
    
        if (((VkSparseImageOpaqueMemoryBindInfo*)(name))==NULL){
            return_GdPKmqb["null"]=true;
            return return_GdPKmqb;
        }
        return_GdPKmqb=[&]() {
    json return_okpyxPD=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(*((VkSparseImageOpaqueMemoryBindInfo*)(name)));}();
return return_GdPKmqb;}();
        return result;
        }
    

        json serialize_VkSparseImageMemoryBindInfo_pNext(const void* name){
        printf("Serializing VkSparseImageMemoryBindInfo...\n");
        json result;
        result=[&]() {
    json return_nMmaZJR=json({});
    
        if (((VkSparseImageMemoryBindInfo*)(name))==NULL){
            return_nMmaZJR["null"]=true;
            return return_nMmaZJR;
        }
        return_nMmaZJR=[&]() {
    json return_XMHSTfY=json({});
    return serialize_VkSparseImageMemoryBindInfo(*((VkSparseImageMemoryBindInfo*)(name)));}();
return return_nMmaZJR;}();
        return result;
        }
    

        json serialize_VkBindSparseInfo_pNext(const void* name){
        printf("Serializing VkBindSparseInfo...\n");
        json result;
        result=[&]() {
    json return_nBjhVaG=json({});
    
        if (((VkBindSparseInfo*)(name))==NULL){
            return_nBjhVaG["null"]=true;
            return return_nBjhVaG;
        }
        return_nBjhVaG=[&]() {
    json return_ngGxYRe=json({});
    return serialize_VkBindSparseInfo(*((VkBindSparseInfo*)(name)));}();
return return_nBjhVaG;}();
        return result;
        }
    

        json serialize_VkImageCopy_pNext(const void* name){
        printf("Serializing VkImageCopy...\n");
        json result;
        result=[&]() {
    json return_fSEtuna=json({});
    
        if (((VkImageCopy*)(name))==NULL){
            return_fSEtuna["null"]=true;
            return return_fSEtuna;
        }
        return_fSEtuna=[&]() {
    json return_hjEstOT=json({});
    return serialize_VkImageCopy(*((VkImageCopy*)(name)));}();
return return_fSEtuna;}();
        return result;
        }
    

        json serialize_VkImageBlit_pNext(const void* name){
        printf("Serializing VkImageBlit...\n");
        json result;
        result=[&]() {
    json return_XnBxZtK=json({});
    
        if (((VkImageBlit*)(name))==NULL){
            return_XnBxZtK["null"]=true;
            return return_XnBxZtK;
        }
        return_XnBxZtK=[&]() {
    json return_DYUSNmK=json({});
    return serialize_VkImageBlit(*((VkImageBlit*)(name)));}();
return return_XnBxZtK;}();
        return result;
        }
    

        json serialize_VkBufferImageCopy_pNext(const void* name){
        printf("Serializing VkBufferImageCopy...\n");
        json result;
        result=[&]() {
    json return_ZEaDpSC=json({});
    
        if (((VkBufferImageCopy*)(name))==NULL){
            return_ZEaDpSC["null"]=true;
            return return_ZEaDpSC;
        }
        return_ZEaDpSC=[&]() {
    json return_oArXCOw=json({});
    return serialize_VkBufferImageCopy(*((VkBufferImageCopy*)(name)));}();
return return_ZEaDpSC;}();
        return result;
        }
    

        json serialize_VkCopyMemoryIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkCopyMemoryIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_LOiiXuh=json({});
    
        if (((VkCopyMemoryIndirectCommandNV*)(name))==NULL){
            return_LOiiXuh["null"]=true;
            return return_LOiiXuh;
        }
        return_LOiiXuh=[&]() {
    json return_uXxueYe=json({});
    return serialize_VkCopyMemoryIndirectCommandNV(*((VkCopyMemoryIndirectCommandNV*)(name)));}();
return return_LOiiXuh;}();
        return result;
        }
    

        json serialize_VkCopyMemoryToImageIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkCopyMemoryToImageIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_zyBVKli=json({});
    
        if (((VkCopyMemoryToImageIndirectCommandNV*)(name))==NULL){
            return_zyBVKli["null"]=true;
            return return_zyBVKli;
        }
        return_zyBVKli=[&]() {
    json return_UhQDNys=json({});
    return serialize_VkCopyMemoryToImageIndirectCommandNV(*((VkCopyMemoryToImageIndirectCommandNV*)(name)));}();
return return_zyBVKli;}();
        return result;
        }
    

        json serialize_VkImageResolve_pNext(const void* name){
        printf("Serializing VkImageResolve...\n");
        json result;
        result=[&]() {
    json return_RYoPBeH=json({});
    
        if (((VkImageResolve*)(name))==NULL){
            return_RYoPBeH["null"]=true;
            return return_RYoPBeH;
        }
        return_RYoPBeH=[&]() {
    json return_CljqkeZ=json({});
    return serialize_VkImageResolve(*((VkImageResolve*)(name)));}();
return return_RYoPBeH;}();
        return result;
        }
    

        json serialize_VkShaderModuleCreateInfo_pNext(const void* name){
        printf("Serializing VkShaderModuleCreateInfo...\n");
        json result;
        result=[&]() {
    json return_FSrmGaS=json({});
    
        if (((VkShaderModuleCreateInfo*)(name))==NULL){
            return_FSrmGaS["null"]=true;
            return return_FSrmGaS;
        }
        return_FSrmGaS=[&]() {
    json return_ngGsfJa=json({});
    return serialize_VkShaderModuleCreateInfo(*((VkShaderModuleCreateInfo*)(name)));}();
return return_FSrmGaS;}();
        return result;
        }
    

        json serialize_VkDescriptorSetLayoutBinding_pNext(const void* name){
        printf("Serializing VkDescriptorSetLayoutBinding...\n");
        json result;
        result=[&]() {
    json return_gnSQqZk=json({});
    
        if (((VkDescriptorSetLayoutBinding*)(name))==NULL){
            return_gnSQqZk["null"]=true;
            return return_gnSQqZk;
        }
        return_gnSQqZk=[&]() {
    json return_sVWtCgH=json({});
    return serialize_VkDescriptorSetLayoutBinding(*((VkDescriptorSetLayoutBinding*)(name)));}();
return return_gnSQqZk;}();
        return result;
        }
    

        json serialize_VkDescriptorSetLayoutCreateInfo_pNext(const void* name){
        printf("Serializing VkDescriptorSetLayoutCreateInfo...\n");
        json result;
        result=[&]() {
    json return_nQtKqFk=json({});
    
        if (((VkDescriptorSetLayoutCreateInfo*)(name))==NULL){
            return_nQtKqFk["null"]=true;
            return return_nQtKqFk;
        }
        return_nQtKqFk=[&]() {
    json return_KNVJIQb=json({});
    return serialize_VkDescriptorSetLayoutCreateInfo(*((VkDescriptorSetLayoutCreateInfo*)(name)));}();
return return_nQtKqFk;}();
        return result;
        }
    

        json serialize_VkDescriptorPoolSize_pNext(const void* name){
        printf("Serializing VkDescriptorPoolSize...\n");
        json result;
        result=[&]() {
    json return_fcVLyAR=json({});
    
        if (((VkDescriptorPoolSize*)(name))==NULL){
            return_fcVLyAR["null"]=true;
            return return_fcVLyAR;
        }
        return_fcVLyAR=[&]() {
    json return_iIrUitx=json({});
    return serialize_VkDescriptorPoolSize(*((VkDescriptorPoolSize*)(name)));}();
return return_fcVLyAR;}();
        return result;
        }
    

        json serialize_VkDescriptorPoolCreateInfo_pNext(const void* name){
        printf("Serializing VkDescriptorPoolCreateInfo...\n");
        json result;
        result=[&]() {
    json return_JMTSDiy=json({});
    
        if (((VkDescriptorPoolCreateInfo*)(name))==NULL){
            return_JMTSDiy["null"]=true;
            return return_JMTSDiy;
        }
        return_JMTSDiy=[&]() {
    json return_iSOkgIA=json({});
    return serialize_VkDescriptorPoolCreateInfo(*((VkDescriptorPoolCreateInfo*)(name)));}();
return return_JMTSDiy;}();
        return result;
        }
    

        json serialize_VkDescriptorSetAllocateInfo_pNext(const void* name){
        printf("Serializing VkDescriptorSetAllocateInfo...\n");
        json result;
        result=[&]() {
    json return_sBLvfke=json({});
    
        if (((VkDescriptorSetAllocateInfo*)(name))==NULL){
            return_sBLvfke["null"]=true;
            return return_sBLvfke;
        }
        return_sBLvfke=[&]() {
    json return_Skiphwl=json({});
    return serialize_VkDescriptorSetAllocateInfo(*((VkDescriptorSetAllocateInfo*)(name)));}();
return return_sBLvfke;}();
        return result;
        }
    

        json serialize_VkSpecializationMapEntry_pNext(const void* name){
        printf("Serializing VkSpecializationMapEntry...\n");
        json result;
        result=[&]() {
    json return_ljBalIB=json({});
    
        if (((VkSpecializationMapEntry*)(name))==NULL){
            return_ljBalIB["null"]=true;
            return return_ljBalIB;
        }
        return_ljBalIB=[&]() {
    json return_JKdehrC=json({});
    return serialize_VkSpecializationMapEntry(*((VkSpecializationMapEntry*)(name)));}();
return return_ljBalIB;}();
        return result;
        }
    

        json serialize_VkSpecializationInfo_pNext(const void* name){
        printf("Serializing VkSpecializationInfo...\n");
        json result;
        result=[&]() {
    json return_AJQbXCQ=json({});
    
        if (((VkSpecializationInfo*)(name))==NULL){
            return_AJQbXCQ["null"]=true;
            return return_AJQbXCQ;
        }
        return_AJQbXCQ=[&]() {
    json return_hTArdwk=json({});
    return serialize_VkSpecializationInfo(*((VkSpecializationInfo*)(name)));}();
return return_AJQbXCQ;}();
        return result;
        }
    

        json serialize_VkPipelineShaderStageCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineShaderStageCreateInfo...\n");
        json result;
        result=[&]() {
    json return_hSSgqbR=json({});
    
        if (((VkPipelineShaderStageCreateInfo*)(name))==NULL){
            return_hSSgqbR["null"]=true;
            return return_hSSgqbR;
        }
        return_hSSgqbR=[&]() {
    json return_EevCWTm=json({});
    return serialize_VkPipelineShaderStageCreateInfo(*((VkPipelineShaderStageCreateInfo*)(name)));}();
return return_hSSgqbR;}();
        return result;
        }
    

        json serialize_VkComputePipelineCreateInfo_pNext(const void* name){
        printf("Serializing VkComputePipelineCreateInfo...\n");
        json result;
        result=[&]() {
    json return_ArKLGRB=json({});
    
        if (((VkComputePipelineCreateInfo*)(name))==NULL){
            return_ArKLGRB["null"]=true;
            return return_ArKLGRB;
        }
        return_ArKLGRB=[&]() {
    json return_gLLgnKx=json({});
    return serialize_VkComputePipelineCreateInfo(*((VkComputePipelineCreateInfo*)(name)));}();
return return_ArKLGRB;}();
        return result;
        }
    

        json serialize_VkComputePipelineIndirectBufferInfoNV_pNext(const void* name){
        printf("Serializing VkComputePipelineIndirectBufferInfoNV...\n");
        json result;
        result=[&]() {
    json return_pStdhaW=json({});
    
        if (((VkComputePipelineIndirectBufferInfoNV*)(name))==NULL){
            return_pStdhaW["null"]=true;
            return return_pStdhaW;
        }
        return_pStdhaW=[&]() {
    json return_OcOAVhU=json({});
    return serialize_VkComputePipelineIndirectBufferInfoNV(*((VkComputePipelineIndirectBufferInfoNV*)(name)));}();
return return_pStdhaW;}();
        return result;
        }
    

        json serialize_VkPipelineCreateFlags2CreateInfoKHR_pNext(const void* name){
        printf("Serializing VkPipelineCreateFlags2CreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_TjLwXPi=json({});
    
        if (((VkPipelineCreateFlags2CreateInfoKHR*)(name))==NULL){
            return_TjLwXPi["null"]=true;
            return return_TjLwXPi;
        }
        return_TjLwXPi=[&]() {
    json return_YokCFCN=json({});
    return serialize_VkPipelineCreateFlags2CreateInfoKHR(*((VkPipelineCreateFlags2CreateInfoKHR*)(name)));}();
return return_TjLwXPi;}();
        return result;
        }
    

        json serialize_VkVertexInputBindingDescription_pNext(const void* name){
        printf("Serializing VkVertexInputBindingDescription...\n");
        json result;
        result=[&]() {
    json return_CSocSsP=json({});
    
        if (((VkVertexInputBindingDescription*)(name))==NULL){
            return_CSocSsP["null"]=true;
            return return_CSocSsP;
        }
        return_CSocSsP=[&]() {
    json return_RrdZeER=json({});
    return serialize_VkVertexInputBindingDescription(*((VkVertexInputBindingDescription*)(name)));}();
return return_CSocSsP;}();
        return result;
        }
    

        json serialize_VkVertexInputAttributeDescription_pNext(const void* name){
        printf("Serializing VkVertexInputAttributeDescription...\n");
        json result;
        result=[&]() {
    json return_xgVqABG=json({});
    
        if (((VkVertexInputAttributeDescription*)(name))==NULL){
            return_xgVqABG["null"]=true;
            return return_xgVqABG;
        }
        return_xgVqABG=[&]() {
    json return_FJkwxgk=json({});
    return serialize_VkVertexInputAttributeDescription(*((VkVertexInputAttributeDescription*)(name)));}();
return return_xgVqABG;}();
        return result;
        }
    

        json serialize_VkPipelineVertexInputStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineVertexInputStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_NWHqWai=json({});
    
        if (((VkPipelineVertexInputStateCreateInfo*)(name))==NULL){
            return_NWHqWai["null"]=true;
            return return_NWHqWai;
        }
        return_NWHqWai=[&]() {
    json return_ijZXebQ=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*((VkPipelineVertexInputStateCreateInfo*)(name)));}();
return return_NWHqWai;}();
        return result;
        }
    

        json serialize_VkPipelineInputAssemblyStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineInputAssemblyStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_DQNdQTN=json({});
    
        if (((VkPipelineInputAssemblyStateCreateInfo*)(name))==NULL){
            return_DQNdQTN["null"]=true;
            return return_DQNdQTN;
        }
        return_DQNdQTN=[&]() {
    json return_gqMSKmd=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*((VkPipelineInputAssemblyStateCreateInfo*)(name)));}();
return return_DQNdQTN;}();
        return result;
        }
    

        json serialize_VkPipelineTessellationStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineTessellationStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_HuFtUoA=json({});
    
        if (((VkPipelineTessellationStateCreateInfo*)(name))==NULL){
            return_HuFtUoA["null"]=true;
            return return_HuFtUoA;
        }
        return_HuFtUoA=[&]() {
    json return_rDuSzHK=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*((VkPipelineTessellationStateCreateInfo*)(name)));}();
return return_HuFtUoA;}();
        return result;
        }
    

        json serialize_VkPipelineViewportStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineViewportStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_saElcve=json({});
    
        if (((VkPipelineViewportStateCreateInfo*)(name))==NULL){
            return_saElcve["null"]=true;
            return return_saElcve;
        }
        return_saElcve=[&]() {
    json return_PSezTpb=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*((VkPipelineViewportStateCreateInfo*)(name)));}();
return return_saElcve;}();
        return result;
        }
    

        json serialize_VkPipelineRasterizationStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineRasterizationStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_tZspbIU=json({});
    
        if (((VkPipelineRasterizationStateCreateInfo*)(name))==NULL){
            return_tZspbIU["null"]=true;
            return return_tZspbIU;
        }
        return_tZspbIU=[&]() {
    json return_hCkldTd=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*((VkPipelineRasterizationStateCreateInfo*)(name)));}();
return return_tZspbIU;}();
        return result;
        }
    

        json serialize_VkPipelineMultisampleStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineMultisampleStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_LQXNUTU=json({});
    
        if (((VkPipelineMultisampleStateCreateInfo*)(name))==NULL){
            return_LQXNUTU["null"]=true;
            return return_LQXNUTU;
        }
        return_LQXNUTU=[&]() {
    json return_WsQKqDl=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*((VkPipelineMultisampleStateCreateInfo*)(name)));}();
return return_LQXNUTU;}();
        return result;
        }
    

        json serialize_VkPipelineColorBlendAttachmentState_pNext(const void* name){
        printf("Serializing VkPipelineColorBlendAttachmentState...\n");
        json result;
        result=[&]() {
    json return_hPkfLUB=json({});
    
        if (((VkPipelineColorBlendAttachmentState*)(name))==NULL){
            return_hPkfLUB["null"]=true;
            return return_hPkfLUB;
        }
        return_hPkfLUB=[&]() {
    json return_TzgfAcT=json({});
    return serialize_VkPipelineColorBlendAttachmentState(*((VkPipelineColorBlendAttachmentState*)(name)));}();
return return_hPkfLUB;}();
        return result;
        }
    

        json serialize_VkPipelineColorBlendStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineColorBlendStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_drVqcjn=json({});
    
        if (((VkPipelineColorBlendStateCreateInfo*)(name))==NULL){
            return_drVqcjn["null"]=true;
            return return_drVqcjn;
        }
        return_drVqcjn=[&]() {
    json return_LCHaqJr=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*((VkPipelineColorBlendStateCreateInfo*)(name)));}();
return return_drVqcjn;}();
        return result;
        }
    

        json serialize_VkPipelineDynamicStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineDynamicStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_SGMOErm=json({});
    
        if (((VkPipelineDynamicStateCreateInfo*)(name))==NULL){
            return_SGMOErm["null"]=true;
            return return_SGMOErm;
        }
        return_SGMOErm=[&]() {
    json return_hkjoqZm=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*((VkPipelineDynamicStateCreateInfo*)(name)));}();
return return_SGMOErm;}();
        return result;
        }
    

        json serialize_VkStencilOpState_pNext(const void* name){
        printf("Serializing VkStencilOpState...\n");
        json result;
        result=[&]() {
    json return_qbojgOm=json({});
    
        if (((VkStencilOpState*)(name))==NULL){
            return_qbojgOm["null"]=true;
            return return_qbojgOm;
        }
        return_qbojgOm=[&]() {
    json return_QzylbEz=json({});
    return serialize_VkStencilOpState(*((VkStencilOpState*)(name)));}();
return return_qbojgOm;}();
        return result;
        }
    

        json serialize_VkPipelineDepthStencilStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineDepthStencilStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_CbXOKbm=json({});
    
        if (((VkPipelineDepthStencilStateCreateInfo*)(name))==NULL){
            return_CbXOKbm["null"]=true;
            return return_CbXOKbm;
        }
        return_CbXOKbm=[&]() {
    json return_FmoyYWS=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*((VkPipelineDepthStencilStateCreateInfo*)(name)));}();
return return_CbXOKbm;}();
        return result;
        }
    

        json serialize_VkGraphicsPipelineCreateInfo_pNext(const void* name){
        printf("Serializing VkGraphicsPipelineCreateInfo...\n");
        json result;
        result=[&]() {
    json return_GUcQRLF=json({});
    
        if (((VkGraphicsPipelineCreateInfo*)(name))==NULL){
            return_GUcQRLF["null"]=true;
            return return_GUcQRLF;
        }
        return_GUcQRLF=[&]() {
    json return_AhifhrH=json({});
    return serialize_VkGraphicsPipelineCreateInfo(*((VkGraphicsPipelineCreateInfo*)(name)));}();
return return_GUcQRLF;}();
        return result;
        }
    

        json serialize_VkPipelineCacheCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineCacheCreateInfo...\n");
        json result;
        result=[&]() {
    json return_oKpKrLn=json({});
    
        if (((VkPipelineCacheCreateInfo*)(name))==NULL){
            return_oKpKrLn["null"]=true;
            return return_oKpKrLn;
        }
        return_oKpKrLn=[&]() {
    json return_wvAxcSl=json({});
    return serialize_VkPipelineCacheCreateInfo(*((VkPipelineCacheCreateInfo*)(name)));}();
return return_oKpKrLn;}();
        return result;
        }
    

        json serialize_VkPipelineCacheHeaderVersionOne_pNext(const void* name){
        printf("Serializing VkPipelineCacheHeaderVersionOne...\n");
        json result;
        result=[&]() {
    json return_awHgJes=json({});
    
        if (((VkPipelineCacheHeaderVersionOne*)(name))==NULL){
            return_awHgJes["null"]=true;
            return return_awHgJes;
        }
        return_awHgJes=[&]() {
    json return_UwhShUb=json({});
    return serialize_VkPipelineCacheHeaderVersionOne(*((VkPipelineCacheHeaderVersionOne*)(name)));}();
return return_awHgJes;}();
        return result;
        }
    

        json serialize_VkPushConstantRange_pNext(const void* name){
        printf("Serializing VkPushConstantRange...\n");
        json result;
        result=[&]() {
    json return_EGsZPLt=json({});
    
        if (((VkPushConstantRange*)(name))==NULL){
            return_EGsZPLt["null"]=true;
            return return_EGsZPLt;
        }
        return_EGsZPLt=[&]() {
    json return_QsvWdyx=json({});
    return serialize_VkPushConstantRange(*((VkPushConstantRange*)(name)));}();
return return_EGsZPLt;}();
        return result;
        }
    

        json serialize_VkPipelineLayoutCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineLayoutCreateInfo...\n");
        json result;
        result=[&]() {
    json return_QmPWILM=json({});
    
        if (((VkPipelineLayoutCreateInfo*)(name))==NULL){
            return_QmPWILM["null"]=true;
            return return_QmPWILM;
        }
        return_QmPWILM=[&]() {
    json return_WfiWKbq=json({});
    return serialize_VkPipelineLayoutCreateInfo(*((VkPipelineLayoutCreateInfo*)(name)));}();
return return_QmPWILM;}();
        return result;
        }
    

        json serialize_VkSamplerCreateInfo_pNext(const void* name){
        printf("Serializing VkSamplerCreateInfo...\n");
        json result;
        result=[&]() {
    json return_uDXczob=json({});
    
        if (((VkSamplerCreateInfo*)(name))==NULL){
            return_uDXczob["null"]=true;
            return return_uDXczob;
        }
        return_uDXczob=[&]() {
    json return_AvijoXH=json({});
    return serialize_VkSamplerCreateInfo(*((VkSamplerCreateInfo*)(name)));}();
return return_uDXczob;}();
        return result;
        }
    

        json serialize_VkCommandPoolCreateInfo_pNext(const void* name){
        printf("Serializing VkCommandPoolCreateInfo...\n");
        json result;
        result=[&]() {
    json return_cyBqygv=json({});
    
        if (((VkCommandPoolCreateInfo*)(name))==NULL){
            return_cyBqygv["null"]=true;
            return return_cyBqygv;
        }
        return_cyBqygv=[&]() {
    json return_wzTwaQx=json({});
    return serialize_VkCommandPoolCreateInfo(*((VkCommandPoolCreateInfo*)(name)));}();
return return_cyBqygv;}();
        return result;
        }
    

        json serialize_VkCommandBufferAllocateInfo_pNext(const void* name){
        printf("Serializing VkCommandBufferAllocateInfo...\n");
        json result;
        result=[&]() {
    json return_mAGydQc=json({});
    
        if (((VkCommandBufferAllocateInfo*)(name))==NULL){
            return_mAGydQc["null"]=true;
            return return_mAGydQc;
        }
        return_mAGydQc=[&]() {
    json return_YaYbNao=json({});
    return serialize_VkCommandBufferAllocateInfo(*((VkCommandBufferAllocateInfo*)(name)));}();
return return_mAGydQc;}();
        return result;
        }
    

        json serialize_VkCommandBufferInheritanceInfo_pNext(const void* name){
        printf("Serializing VkCommandBufferInheritanceInfo...\n");
        json result;
        result=[&]() {
    json return_rYakWAD=json({});
    
        if (((VkCommandBufferInheritanceInfo*)(name))==NULL){
            return_rYakWAD["null"]=true;
            return return_rYakWAD;
        }
        return_rYakWAD=[&]() {
    json return_bEDDTVV=json({});
    return serialize_VkCommandBufferInheritanceInfo(*((VkCommandBufferInheritanceInfo*)(name)));}();
return return_rYakWAD;}();
        return result;
        }
    

        json serialize_VkCommandBufferBeginInfo_pNext(const void* name){
        printf("Serializing VkCommandBufferBeginInfo...\n");
        json result;
        result=[&]() {
    json return_VpCdGOV=json({});
    
        if (((VkCommandBufferBeginInfo*)(name))==NULL){
            return_VpCdGOV["null"]=true;
            return return_VpCdGOV;
        }
        return_VpCdGOV=[&]() {
    json return_WkggapI=json({});
    return serialize_VkCommandBufferBeginInfo(*((VkCommandBufferBeginInfo*)(name)));}();
return return_VpCdGOV;}();
        return result;
        }
    

        json serialize_VkRenderPassBeginInfo_pNext(const void* name){
        printf("Serializing VkRenderPassBeginInfo...\n");
        json result;
        result=[&]() {
    json return_LXVFFSq=json({});
    
        if (((VkRenderPassBeginInfo*)(name))==NULL){
            return_LXVFFSq["null"]=true;
            return return_LXVFFSq;
        }
        return_LXVFFSq=[&]() {
    json return_yRAJVxl=json({});
    return serialize_VkRenderPassBeginInfo(*((VkRenderPassBeginInfo*)(name)));}();
return return_LXVFFSq;}();
        return result;
        }
    

        json serialize_VkClearColorValue_pNext(const void* name){
        printf("Serializing VkClearColorValue...\n");
        json result;
        result=[&]() {
    json return_JrnGpWD=json({});
    
        if (((VkClearColorValue*)(name))==NULL){
            return_JrnGpWD["null"]=true;
            return return_JrnGpWD;
        }
        return_JrnGpWD=[&]() {
    json return_aKkmcRY=json({});
    return serialize_VkClearColorValue(*((VkClearColorValue*)(name)));}();
return return_JrnGpWD;}();
        return result;
        }
    

        json serialize_VkClearDepthStencilValue_pNext(const void* name){
        printf("Serializing VkClearDepthStencilValue...\n");
        json result;
        result=[&]() {
    json return_OgXqQQY=json({});
    
        if (((VkClearDepthStencilValue*)(name))==NULL){
            return_OgXqQQY["null"]=true;
            return return_OgXqQQY;
        }
        return_OgXqQQY=[&]() {
    json return_zvrKKmH=json({});
    return serialize_VkClearDepthStencilValue(*((VkClearDepthStencilValue*)(name)));}();
return return_OgXqQQY;}();
        return result;
        }
    

        json serialize_VkClearValue_pNext(const void* name){
        printf("Serializing VkClearValue...\n");
        json result;
        result=[&]() {
    json return_nIVPaCZ=json({});
    
        if (((VkClearValue*)(name))==NULL){
            return_nIVPaCZ["null"]=true;
            return return_nIVPaCZ;
        }
        return_nIVPaCZ=[&]() {
    json return_KsSjWZP=json({});
    return serialize_VkClearValue(*((VkClearValue*)(name)));}();
return return_nIVPaCZ;}();
        return result;
        }
    

        json serialize_VkClearAttachment_pNext(const void* name){
        printf("Serializing VkClearAttachment...\n");
        json result;
        result=[&]() {
    json return_xBNaGNL=json({});
    
        if (((VkClearAttachment*)(name))==NULL){
            return_xBNaGNL["null"]=true;
            return return_xBNaGNL;
        }
        return_xBNaGNL=[&]() {
    json return_IiDQbpe=json({});
    return serialize_VkClearAttachment(*((VkClearAttachment*)(name)));}();
return return_xBNaGNL;}();
        return result;
        }
    

        json serialize_VkAttachmentDescription_pNext(const void* name){
        printf("Serializing VkAttachmentDescription...\n");
        json result;
        result=[&]() {
    json return_BAoyIuX=json({});
    
        if (((VkAttachmentDescription*)(name))==NULL){
            return_BAoyIuX["null"]=true;
            return return_BAoyIuX;
        }
        return_BAoyIuX=[&]() {
    json return_aEmEqgc=json({});
    return serialize_VkAttachmentDescription(*((VkAttachmentDescription*)(name)));}();
return return_BAoyIuX;}();
        return result;
        }
    

        json serialize_VkAttachmentReference_pNext(const void* name){
        printf("Serializing VkAttachmentReference...\n");
        json result;
        result=[&]() {
    json return_zbXtpFO=json({});
    
        if (((VkAttachmentReference*)(name))==NULL){
            return_zbXtpFO["null"]=true;
            return return_zbXtpFO;
        }
        return_zbXtpFO=[&]() {
    json return_idWzWnA=json({});
    return serialize_VkAttachmentReference(*((VkAttachmentReference*)(name)));}();
return return_zbXtpFO;}();
        return result;
        }
    

        json serialize_VkSubpassDescription_pNext(const void* name){
        printf("Serializing VkSubpassDescription...\n");
        json result;
        result=[&]() {
    json return_wFkfSMB=json({});
    
        if (((VkSubpassDescription*)(name))==NULL){
            return_wFkfSMB["null"]=true;
            return return_wFkfSMB;
        }
        return_wFkfSMB=[&]() {
    json return_QkvjUJt=json({});
    return serialize_VkSubpassDescription(*((VkSubpassDescription*)(name)));}();
return return_wFkfSMB;}();
        return result;
        }
    

        json serialize_VkSubpassDependency_pNext(const void* name){
        printf("Serializing VkSubpassDependency...\n");
        json result;
        result=[&]() {
    json return_YNiwmcJ=json({});
    
        if (((VkSubpassDependency*)(name))==NULL){
            return_YNiwmcJ["null"]=true;
            return return_YNiwmcJ;
        }
        return_YNiwmcJ=[&]() {
    json return_BdPysDU=json({});
    return serialize_VkSubpassDependency(*((VkSubpassDependency*)(name)));}();
return return_YNiwmcJ;}();
        return result;
        }
    

        json serialize_VkRenderPassCreateInfo_pNext(const void* name){
        printf("Serializing VkRenderPassCreateInfo...\n");
        json result;
        result=[&]() {
    json return_vBCRmlk=json({});
    
        if (((VkRenderPassCreateInfo*)(name))==NULL){
            return_vBCRmlk["null"]=true;
            return return_vBCRmlk;
        }
        return_vBCRmlk=[&]() {
    json return_HpEFYDz=json({});
    return serialize_VkRenderPassCreateInfo(*((VkRenderPassCreateInfo*)(name)));}();
return return_vBCRmlk;}();
        return result;
        }
    

        json serialize_VkEventCreateInfo_pNext(const void* name){
        printf("Serializing VkEventCreateInfo...\n");
        json result;
        result=[&]() {
    json return_zZaGPlt=json({});
    
        if (((VkEventCreateInfo*)(name))==NULL){
            return_zZaGPlt["null"]=true;
            return return_zZaGPlt;
        }
        return_zZaGPlt=[&]() {
    json return_GjHohOR=json({});
    return serialize_VkEventCreateInfo(*((VkEventCreateInfo*)(name)));}();
return return_zZaGPlt;}();
        return result;
        }
    

        json serialize_VkFenceCreateInfo_pNext(const void* name){
        printf("Serializing VkFenceCreateInfo...\n");
        json result;
        result=[&]() {
    json return_MIlfdLS=json({});
    
        if (((VkFenceCreateInfo*)(name))==NULL){
            return_MIlfdLS["null"]=true;
            return return_MIlfdLS;
        }
        return_MIlfdLS=[&]() {
    json return_jivIFhh=json({});
    return serialize_VkFenceCreateInfo(*((VkFenceCreateInfo*)(name)));}();
return return_MIlfdLS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFeatures...\n");
        json result;
        result=[&]() {
    json return_lcZghIk=json({});
    
        if (((VkPhysicalDeviceFeatures*)(name))==NULL){
            return_lcZghIk["null"]=true;
            return return_lcZghIk;
        }
        return_lcZghIk=[&]() {
    json return_yFjuMwb=json({});
    return serialize_VkPhysicalDeviceFeatures(*((VkPhysicalDeviceFeatures*)(name)));}();
return return_lcZghIk;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSparseProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSparseProperties...\n");
        json result;
        result=[&]() {
    json return_QrCBhlR=json({});
    
        if (((VkPhysicalDeviceSparseProperties*)(name))==NULL){
            return_QrCBhlR["null"]=true;
            return return_QrCBhlR;
        }
        return_QrCBhlR=[&]() {
    json return_PfLRIQJ=json({});
    return serialize_VkPhysicalDeviceSparseProperties(*((VkPhysicalDeviceSparseProperties*)(name)));}();
return return_QrCBhlR;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceLimits_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceLimits...\n");
        json result;
        result=[&]() {
    json return_zJRQYJk=json({});
    
        if (((VkPhysicalDeviceLimits*)(name))==NULL){
            return_zJRQYJk["null"]=true;
            return return_zJRQYJk;
        }
        return_zJRQYJk=[&]() {
    json return_kxdEPau=json({});
    return serialize_VkPhysicalDeviceLimits(*((VkPhysicalDeviceLimits*)(name)));}();
return return_zJRQYJk;}();
        return result;
        }
    

        json serialize_VkSemaphoreCreateInfo_pNext(const void* name){
        printf("Serializing VkSemaphoreCreateInfo...\n");
        json result;
        result=[&]() {
    json return_UWFoxsc=json({});
    
        if (((VkSemaphoreCreateInfo*)(name))==NULL){
            return_UWFoxsc["null"]=true;
            return return_UWFoxsc;
        }
        return_UWFoxsc=[&]() {
    json return_LTWrJpj=json({});
    return serialize_VkSemaphoreCreateInfo(*((VkSemaphoreCreateInfo*)(name)));}();
return return_UWFoxsc;}();
        return result;
        }
    

        json serialize_VkQueryPoolCreateInfo_pNext(const void* name){
        printf("Serializing VkQueryPoolCreateInfo...\n");
        json result;
        result=[&]() {
    json return_DbRiyAZ=json({});
    
        if (((VkQueryPoolCreateInfo*)(name))==NULL){
            return_DbRiyAZ["null"]=true;
            return return_DbRiyAZ;
        }
        return_DbRiyAZ=[&]() {
    json return_ThUNISX=json({});
    return serialize_VkQueryPoolCreateInfo(*((VkQueryPoolCreateInfo*)(name)));}();
return return_DbRiyAZ;}();
        return result;
        }
    

        json serialize_VkFramebufferCreateInfo_pNext(const void* name){
        printf("Serializing VkFramebufferCreateInfo...\n");
        json result;
        result=[&]() {
    json return_KrJNCWl=json({});
    
        if (((VkFramebufferCreateInfo*)(name))==NULL){
            return_KrJNCWl["null"]=true;
            return return_KrJNCWl;
        }
        return_KrJNCWl=[&]() {
    json return_YxhXTUD=json({});
    return serialize_VkFramebufferCreateInfo(*((VkFramebufferCreateInfo*)(name)));}();
return return_KrJNCWl;}();
        return result;
        }
    

        json serialize_VkDrawIndirectCommand_pNext(const void* name){
        printf("Serializing VkDrawIndirectCommand...\n");
        json result;
        result=[&]() {
    json return_DOejkIL=json({});
    
        if (((VkDrawIndirectCommand*)(name))==NULL){
            return_DOejkIL["null"]=true;
            return return_DOejkIL;
        }
        return_DOejkIL=[&]() {
    json return_OIswsRE=json({});
    return serialize_VkDrawIndirectCommand(*((VkDrawIndirectCommand*)(name)));}();
return return_DOejkIL;}();
        return result;
        }
    

        json serialize_VkDrawIndexedIndirectCommand_pNext(const void* name){
        printf("Serializing VkDrawIndexedIndirectCommand...\n");
        json result;
        result=[&]() {
    json return_HXqWacn=json({});
    
        if (((VkDrawIndexedIndirectCommand*)(name))==NULL){
            return_HXqWacn["null"]=true;
            return return_HXqWacn;
        }
        return_HXqWacn=[&]() {
    json return_uGxveiU=json({});
    return serialize_VkDrawIndexedIndirectCommand(*((VkDrawIndexedIndirectCommand*)(name)));}();
return return_HXqWacn;}();
        return result;
        }
    

        json serialize_VkDispatchIndirectCommand_pNext(const void* name){
        printf("Serializing VkDispatchIndirectCommand...\n");
        json result;
        result=[&]() {
    json return_ZiSxYWy=json({});
    
        if (((VkDispatchIndirectCommand*)(name))==NULL){
            return_ZiSxYWy["null"]=true;
            return return_ZiSxYWy;
        }
        return_ZiSxYWy=[&]() {
    json return_iQuCaPu=json({});
    return serialize_VkDispatchIndirectCommand(*((VkDispatchIndirectCommand*)(name)));}();
return return_ZiSxYWy;}();
        return result;
        }
    

        json serialize_VkMultiDrawInfoEXT_pNext(const void* name){
        printf("Serializing VkMultiDrawInfoEXT...\n");
        json result;
        result=[&]() {
    json return_GqLJqyr=json({});
    
        if (((VkMultiDrawInfoEXT*)(name))==NULL){
            return_GqLJqyr["null"]=true;
            return return_GqLJqyr;
        }
        return_GqLJqyr=[&]() {
    json return_yrjevAL=json({});
    return serialize_VkMultiDrawInfoEXT(*((VkMultiDrawInfoEXT*)(name)));}();
return return_GqLJqyr;}();
        return result;
        }
    

        json serialize_VkMultiDrawIndexedInfoEXT_pNext(const void* name){
        printf("Serializing VkMultiDrawIndexedInfoEXT...\n");
        json result;
        result=[&]() {
    json return_JqVOVit=json({});
    
        if (((VkMultiDrawIndexedInfoEXT*)(name))==NULL){
            return_JqVOVit["null"]=true;
            return return_JqVOVit;
        }
        return_JqVOVit=[&]() {
    json return_yyxGBVC=json({});
    return serialize_VkMultiDrawIndexedInfoEXT(*((VkMultiDrawIndexedInfoEXT*)(name)));}();
return return_JqVOVit;}();
        return result;
        }
    

        json serialize_VkSubmitInfo_pNext(const void* name){
        printf("Serializing VkSubmitInfo...\n");
        json result;
        result=[&]() {
    json return_TolNPRv=json({});
    
        if (((VkSubmitInfo*)(name))==NULL){
            return_TolNPRv["null"]=true;
            return return_TolNPRv;
        }
        return_TolNPRv=[&]() {
    json return_MCegYYt=json({});
    return serialize_VkSubmitInfo(*((VkSubmitInfo*)(name)));}();
return return_TolNPRv;}();
        return result;
        }
    

        json serialize_VkDisplayPropertiesKHR_pNext(const void* name){
        printf("Serializing VkDisplayPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_SlviuKj=json({});
    
        if (((VkDisplayPropertiesKHR*)(name))==NULL){
            return_SlviuKj["null"]=true;
            return return_SlviuKj;
        }
        return_SlviuKj=[&]() {
    json return_ZpZBtwO=json({});
    return serialize_VkDisplayPropertiesKHR(*((VkDisplayPropertiesKHR*)(name)));}();
return return_SlviuKj;}();
        return result;
        }
    

        json serialize_VkDisplayPlanePropertiesKHR_pNext(const void* name){
        printf("Serializing VkDisplayPlanePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_grZwyVG=json({});
    
        if (((VkDisplayPlanePropertiesKHR*)(name))==NULL){
            return_grZwyVG["null"]=true;
            return return_grZwyVG;
        }
        return_grZwyVG=[&]() {
    json return_gDpBzBZ=json({});
    return serialize_VkDisplayPlanePropertiesKHR(*((VkDisplayPlanePropertiesKHR*)(name)));}();
return return_grZwyVG;}();
        return result;
        }
    

        json serialize_VkDisplayModeParametersKHR_pNext(const void* name){
        printf("Serializing VkDisplayModeParametersKHR...\n");
        json result;
        result=[&]() {
    json return_gOlIrIm=json({});
    
        if (((VkDisplayModeParametersKHR*)(name))==NULL){
            return_gOlIrIm["null"]=true;
            return return_gOlIrIm;
        }
        return_gOlIrIm=[&]() {
    json return_LyfOMZo=json({});
    return serialize_VkDisplayModeParametersKHR(*((VkDisplayModeParametersKHR*)(name)));}();
return return_gOlIrIm;}();
        return result;
        }
    

        json serialize_VkDisplayModePropertiesKHR_pNext(const void* name){
        printf("Serializing VkDisplayModePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_KTDfcDv=json({});
    
        if (((VkDisplayModePropertiesKHR*)(name))==NULL){
            return_KTDfcDv["null"]=true;
            return return_KTDfcDv;
        }
        return_KTDfcDv=[&]() {
    json return_KgiOhlp=json({});
    return serialize_VkDisplayModePropertiesKHR(*((VkDisplayModePropertiesKHR*)(name)));}();
return return_KTDfcDv;}();
        return result;
        }
    

        json serialize_VkDisplayModeCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkDisplayModeCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_IdHsDQe=json({});
    
        if (((VkDisplayModeCreateInfoKHR*)(name))==NULL){
            return_IdHsDQe["null"]=true;
            return return_IdHsDQe;
        }
        return_IdHsDQe=[&]() {
    json return_aPRWYFF=json({});
    return serialize_VkDisplayModeCreateInfoKHR(*((VkDisplayModeCreateInfoKHR*)(name)));}();
return return_IdHsDQe;}();
        return result;
        }
    

        json serialize_VkDisplayPlaneCapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkDisplayPlaneCapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_ARFUZfF=json({});
    
        if (((VkDisplayPlaneCapabilitiesKHR*)(name))==NULL){
            return_ARFUZfF["null"]=true;
            return return_ARFUZfF;
        }
        return_ARFUZfF=[&]() {
    json return_iFvfHZk=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(*((VkDisplayPlaneCapabilitiesKHR*)(name)));}();
return return_ARFUZfF;}();
        return result;
        }
    

        json serialize_VkDisplaySurfaceCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkDisplaySurfaceCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_myUndWr=json({});
    
        if (((VkDisplaySurfaceCreateInfoKHR*)(name))==NULL){
            return_myUndWr["null"]=true;
            return return_myUndWr;
        }
        return_myUndWr=[&]() {
    json return_HLhNbDr=json({});
    return serialize_VkDisplaySurfaceCreateInfoKHR(*((VkDisplaySurfaceCreateInfoKHR*)(name)));}();
return return_myUndWr;}();
        return result;
        }
    

        json serialize_VkDisplayPresentInfoKHR_pNext(const void* name){
        printf("Serializing VkDisplayPresentInfoKHR...\n");
        json result;
        result=[&]() {
    json return_QaWdQkG=json({});
    
        if (((VkDisplayPresentInfoKHR*)(name))==NULL){
            return_QaWdQkG["null"]=true;
            return return_QaWdQkG;
        }
        return_QaWdQkG=[&]() {
    json return_ARBeDdl=json({});
    return serialize_VkDisplayPresentInfoKHR(*((VkDisplayPresentInfoKHR*)(name)));}();
return return_QaWdQkG;}();
        return result;
        }
    

        json serialize_VkSurfaceCapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkSurfaceCapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_pANnyHq=json({});
    
        if (((VkSurfaceCapabilitiesKHR*)(name))==NULL){
            return_pANnyHq["null"]=true;
            return return_pANnyHq;
        }
        return_pANnyHq=[&]() {
    json return_PzXsxiq=json({});
    return serialize_VkSurfaceCapabilitiesKHR(*((VkSurfaceCapabilitiesKHR*)(name)));}();
return return_pANnyHq;}();
        return result;
        }
    

        json serialize_VkXlibSurfaceCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkXlibSurfaceCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_yNpXaDa=json({});
    
        if (((VkXlibSurfaceCreateInfoKHR*)(name))==NULL){
            return_yNpXaDa["null"]=true;
            return return_yNpXaDa;
        }
        return_yNpXaDa=[&]() {
    json return_zVdIQlD=json({});
    return serialize_VkXlibSurfaceCreateInfoKHR(*((VkXlibSurfaceCreateInfoKHR*)(name)));}();
return return_yNpXaDa;}();
        return result;
        }
    

        json serialize_VkXcbSurfaceCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkXcbSurfaceCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_NvkJCyW=json({});
    
        if (((VkXcbSurfaceCreateInfoKHR*)(name))==NULL){
            return_NvkJCyW["null"]=true;
            return return_NvkJCyW;
        }
        return_NvkJCyW=[&]() {
    json return_yICMawL=json({});
    return serialize_VkXcbSurfaceCreateInfoKHR(*((VkXcbSurfaceCreateInfoKHR*)(name)));}();
return return_NvkJCyW;}();
        return result;
        }
    

        json serialize_VkSurfaceFormatKHR_pNext(const void* name){
        printf("Serializing VkSurfaceFormatKHR...\n");
        json result;
        result=[&]() {
    json return_RbMyTNy=json({});
    
        if (((VkSurfaceFormatKHR*)(name))==NULL){
            return_RbMyTNy["null"]=true;
            return return_RbMyTNy;
        }
        return_RbMyTNy=[&]() {
    json return_xeQqeFg=json({});
    return serialize_VkSurfaceFormatKHR(*((VkSurfaceFormatKHR*)(name)));}();
return return_RbMyTNy;}();
        return result;
        }
    

        json serialize_VkSwapchainCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkSwapchainCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_prJDHtc=json({});
    
        if (((VkSwapchainCreateInfoKHR*)(name))==NULL){
            return_prJDHtc["null"]=true;
            return return_prJDHtc;
        }
        return_prJDHtc=[&]() {
    json return_UlrLNOB=json({});
    return serialize_VkSwapchainCreateInfoKHR(*((VkSwapchainCreateInfoKHR*)(name)));}();
return return_prJDHtc;}();
        return result;
        }
    

        json serialize_VkPresentInfoKHR_pNext(const void* name){
        printf("Serializing VkPresentInfoKHR...\n");
        json result;
        result=[&]() {
    json return_exPrSLl=json({});
    
        if (((VkPresentInfoKHR*)(name))==NULL){
            return_exPrSLl["null"]=true;
            return return_exPrSLl;
        }
        return_exPrSLl=[&]() {
    json return_yVNMwGb=json({});
    return serialize_VkPresentInfoKHR(*((VkPresentInfoKHR*)(name)));}();
return return_exPrSLl;}();
        return result;
        }
    

        json serialize_VkDebugReportCallbackCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkDebugReportCallbackCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_MZiakBK=json({});
    
        if (((VkDebugReportCallbackCreateInfoEXT*)(name))==NULL){
            return_MZiakBK["null"]=true;
            return return_MZiakBK;
        }
        return_MZiakBK=[&]() {
    json return_vxUTQhz=json({});
    return serialize_VkDebugReportCallbackCreateInfoEXT(*((VkDebugReportCallbackCreateInfoEXT*)(name)));}();
return return_MZiakBK;}();
        return result;
        }
    

        json serialize_VkValidationFlagsEXT_pNext(const void* name){
        printf("Serializing VkValidationFlagsEXT...\n");
        json result;
        result=[&]() {
    json return_NfyyEqI=json({});
    
        if (((VkValidationFlagsEXT*)(name))==NULL){
            return_NfyyEqI["null"]=true;
            return return_NfyyEqI;
        }
        return_NfyyEqI=[&]() {
    json return_tryGdsb=json({});
    return serialize_VkValidationFlagsEXT(*((VkValidationFlagsEXT*)(name)));}();
return return_NfyyEqI;}();
        return result;
        }
    

        json serialize_VkValidationFeaturesEXT_pNext(const void* name){
        printf("Serializing VkValidationFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_OIOmvHI=json({});
    
        if (((VkValidationFeaturesEXT*)(name))==NULL){
            return_OIOmvHI["null"]=true;
            return return_OIOmvHI;
        }
        return_OIOmvHI=[&]() {
    json return_lpWGUcs=json({});
    return serialize_VkValidationFeaturesEXT(*((VkValidationFeaturesEXT*)(name)));}();
return return_OIOmvHI;}();
        return result;
        }
    

        json serialize_VkPipelineRasterizationStateRasterizationOrderAMD_pNext(const void* name){
        printf("Serializing VkPipelineRasterizationStateRasterizationOrderAMD...\n");
        json result;
        result=[&]() {
    json return_bWJtNOx=json({});
    
        if (((VkPipelineRasterizationStateRasterizationOrderAMD*)(name))==NULL){
            return_bWJtNOx["null"]=true;
            return return_bWJtNOx;
        }
        return_bWJtNOx=[&]() {
    json return_NEpHFJW=json({});
    return serialize_VkPipelineRasterizationStateRasterizationOrderAMD(*((VkPipelineRasterizationStateRasterizationOrderAMD*)(name)));}();
return return_bWJtNOx;}();
        return result;
        }
    

        json serialize_VkDebugMarkerObjectNameInfoEXT_pNext(const void* name){
        printf("Serializing VkDebugMarkerObjectNameInfoEXT...\n");
        json result;
        result=[&]() {
    json return_njHTeyq=json({});
    
        if (((VkDebugMarkerObjectNameInfoEXT*)(name))==NULL){
            return_njHTeyq["null"]=true;
            return return_njHTeyq;
        }
        return_njHTeyq=[&]() {
    json return_hlzzyKe=json({});
    return serialize_VkDebugMarkerObjectNameInfoEXT(*((VkDebugMarkerObjectNameInfoEXT*)(name)));}();
return return_njHTeyq;}();
        return result;
        }
    

        json serialize_VkDebugMarkerObjectTagInfoEXT_pNext(const void* name){
        printf("Serializing VkDebugMarkerObjectTagInfoEXT...\n");
        json result;
        result=[&]() {
    json return_DkeLbeU=json({});
    
        if (((VkDebugMarkerObjectTagInfoEXT*)(name))==NULL){
            return_DkeLbeU["null"]=true;
            return return_DkeLbeU;
        }
        return_DkeLbeU=[&]() {
    json return_dDRBuaU=json({});
    return serialize_VkDebugMarkerObjectTagInfoEXT(*((VkDebugMarkerObjectTagInfoEXT*)(name)));}();
return return_DkeLbeU;}();
        return result;
        }
    

        json serialize_VkDebugMarkerMarkerInfoEXT_pNext(const void* name){
        printf("Serializing VkDebugMarkerMarkerInfoEXT...\n");
        json result;
        result=[&]() {
    json return_TeYLvlr=json({});
    
        if (((VkDebugMarkerMarkerInfoEXT*)(name))==NULL){
            return_TeYLvlr["null"]=true;
            return return_TeYLvlr;
        }
        return_TeYLvlr=[&]() {
    json return_zqkMfFc=json({});
    return serialize_VkDebugMarkerMarkerInfoEXT(*((VkDebugMarkerMarkerInfoEXT*)(name)));}();
return return_TeYLvlr;}();
        return result;
        }
    

        json serialize_VkDedicatedAllocationImageCreateInfoNV_pNext(const void* name){
        printf("Serializing VkDedicatedAllocationImageCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_gtaJuBT=json({});
    
        if (((VkDedicatedAllocationImageCreateInfoNV*)(name))==NULL){
            return_gtaJuBT["null"]=true;
            return return_gtaJuBT;
        }
        return_gtaJuBT=[&]() {
    json return_jjuWSCR=json({});
    return serialize_VkDedicatedAllocationImageCreateInfoNV(*((VkDedicatedAllocationImageCreateInfoNV*)(name)));}();
return return_gtaJuBT;}();
        return result;
        }
    

        json serialize_VkDedicatedAllocationBufferCreateInfoNV_pNext(const void* name){
        printf("Serializing VkDedicatedAllocationBufferCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_lXeTIpp=json({});
    
        if (((VkDedicatedAllocationBufferCreateInfoNV*)(name))==NULL){
            return_lXeTIpp["null"]=true;
            return return_lXeTIpp;
        }
        return_lXeTIpp=[&]() {
    json return_rLXkGbc=json({});
    return serialize_VkDedicatedAllocationBufferCreateInfoNV(*((VkDedicatedAllocationBufferCreateInfoNV*)(name)));}();
return return_lXeTIpp;}();
        return result;
        }
    

        json serialize_VkDedicatedAllocationMemoryAllocateInfoNV_pNext(const void* name){
        printf("Serializing VkDedicatedAllocationMemoryAllocateInfoNV...\n");
        json result;
        result=[&]() {
    json return_pNGHaHq=json({});
    
        if (((VkDedicatedAllocationMemoryAllocateInfoNV*)(name))==NULL){
            return_pNGHaHq["null"]=true;
            return return_pNGHaHq;
        }
        return_pNGHaHq=[&]() {
    json return_EdkvpbX=json({});
    return serialize_VkDedicatedAllocationMemoryAllocateInfoNV(*((VkDedicatedAllocationMemoryAllocateInfoNV*)(name)));}();
return return_pNGHaHq;}();
        return result;
        }
    

        json serialize_VkExternalImageFormatPropertiesNV_pNext(const void* name){
        printf("Serializing VkExternalImageFormatPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_DRQOKFC=json({});
    
        if (((VkExternalImageFormatPropertiesNV*)(name))==NULL){
            return_DRQOKFC["null"]=true;
            return return_DRQOKFC;
        }
        return_DRQOKFC=[&]() {
    json return_JVYSutA=json({});
    return serialize_VkExternalImageFormatPropertiesNV(*((VkExternalImageFormatPropertiesNV*)(name)));}();
return return_DRQOKFC;}();
        return result;
        }
    

        json serialize_VkExternalMemoryImageCreateInfoNV_pNext(const void* name){
        printf("Serializing VkExternalMemoryImageCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_ANjkPCy=json({});
    
        if (((VkExternalMemoryImageCreateInfoNV*)(name))==NULL){
            return_ANjkPCy["null"]=true;
            return return_ANjkPCy;
        }
        return_ANjkPCy=[&]() {
    json return_HbGrTxM=json({});
    return serialize_VkExternalMemoryImageCreateInfoNV(*((VkExternalMemoryImageCreateInfoNV*)(name)));}();
return return_ANjkPCy;}();
        return result;
        }
    

        json serialize_VkExportMemoryAllocateInfoNV_pNext(const void* name){
        printf("Serializing VkExportMemoryAllocateInfoNV...\n");
        json result;
        result=[&]() {
    json return_crphCee=json({});
    
        if (((VkExportMemoryAllocateInfoNV*)(name))==NULL){
            return_crphCee["null"]=true;
            return return_crphCee;
        }
        return_crphCee=[&]() {
    json return_rgYInTE=json({});
    return serialize_VkExportMemoryAllocateInfoNV(*((VkExportMemoryAllocateInfoNV*)(name)));}();
return return_crphCee;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_cvVXZyw=json({});
    
        if (((VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV*)(name))==NULL){
            return_cvVXZyw["null"]=true;
            return return_cvVXZyw;
        }
        return_cvVXZyw=[&]() {
    json return_ucoORzm=json({});
    return serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(*((VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV*)(name)));}();
return return_cvVXZyw;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_xNVnDSX=json({});
    
        if (((VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV*)(name))==NULL){
            return_xNVnDSX["null"]=true;
            return return_xNVnDSX;
        }
        return_xNVnDSX=[&]() {
    json return_rBpbKfw=json({});
    return serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(*((VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV*)(name)));}();
return return_xNVnDSX;}();
        return result;
        }
    

        json serialize_VkDevicePrivateDataCreateInfo_pNext(const void* name){
        printf("Serializing VkDevicePrivateDataCreateInfo...\n");
        json result;
        result=[&]() {
    json return_OZsKNdr=json({});
    
        if (((VkDevicePrivateDataCreateInfo*)(name))==NULL){
            return_OZsKNdr["null"]=true;
            return return_OZsKNdr;
        }
        return_OZsKNdr=[&]() {
    json return_pxoIzot=json({});
    return serialize_VkDevicePrivateDataCreateInfo(*((VkDevicePrivateDataCreateInfo*)(name)));}();
return return_OZsKNdr;}();
        return result;
        }
    

        json serialize_VkDevicePrivateDataCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkDevicePrivateDataCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_hIVVfPg=json({});
    
        if (((VkDevicePrivateDataCreateInfoEXT*)(name))==NULL){
            return_hIVVfPg["null"]=true;
            return return_hIVVfPg;
        }
        return_hIVVfPg=[&]() {
    json return_QVZcFNN=json({});
    return serialize_VkDevicePrivateDataCreateInfoEXT(*((VkDevicePrivateDataCreateInfoEXT*)(name)));}();
return return_hIVVfPg;}();
        return result;
        }
    

        json serialize_VkPrivateDataSlotCreateInfo_pNext(const void* name){
        printf("Serializing VkPrivateDataSlotCreateInfo...\n");
        json result;
        result=[&]() {
    json return_CpPpVDj=json({});
    
        if (((VkPrivateDataSlotCreateInfo*)(name))==NULL){
            return_CpPpVDj["null"]=true;
            return return_CpPpVDj;
        }
        return_CpPpVDj=[&]() {
    json return_McoOKMw=json({});
    return serialize_VkPrivateDataSlotCreateInfo(*((VkPrivateDataSlotCreateInfo*)(name)));}();
return return_CpPpVDj;}();
        return result;
        }
    

        json serialize_VkPrivateDataSlotCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPrivateDataSlotCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_WnbzrQO=json({});
    
        if (((VkPrivateDataSlotCreateInfoEXT*)(name))==NULL){
            return_WnbzrQO["null"]=true;
            return return_WnbzrQO;
        }
        return_WnbzrQO=[&]() {
    json return_IwZWUvf=json({});
    return serialize_VkPrivateDataSlotCreateInfoEXT(*((VkPrivateDataSlotCreateInfoEXT*)(name)));}();
return return_WnbzrQO;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePrivateDataFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePrivateDataFeatures...\n");
        json result;
        result=[&]() {
    json return_FiypNly=json({});
    
        if (((VkPhysicalDevicePrivateDataFeatures*)(name))==NULL){
            return_FiypNly["null"]=true;
            return return_FiypNly;
        }
        return_FiypNly=[&]() {
    json return_qyrNWoo=json({});
    return serialize_VkPhysicalDevicePrivateDataFeatures(*((VkPhysicalDevicePrivateDataFeatures*)(name)));}();
return return_FiypNly;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePrivateDataFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePrivateDataFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_QnQobDp=json({});
    
        if (((VkPhysicalDevicePrivateDataFeaturesEXT*)(name))==NULL){
            return_QnQobDp["null"]=true;
            return return_QnQobDp;
        }
        return_QnQobDp=[&]() {
    json return_LxZLpmY=json({});
    return serialize_VkPhysicalDevicePrivateDataFeaturesEXT(*((VkPhysicalDevicePrivateDataFeaturesEXT*)(name)));}();
return return_QnQobDp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_DJKxETt=json({});
    
        if (((VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV*)(name))==NULL){
            return_DJKxETt["null"]=true;
            return return_DJKxETt;
        }
        return_DJKxETt=[&]() {
    json return_oTypvMB=json({});
    return serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(*((VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV*)(name)));}();
return return_DJKxETt;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiDrawPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_BxXiVTW=json({});
    
        if (((VkPhysicalDeviceMultiDrawPropertiesEXT*)(name))==NULL){
            return_BxXiVTW["null"]=true;
            return return_BxXiVTW;
        }
        return_BxXiVTW=[&]() {
    json return_ipstRVI=json({});
    return serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(*((VkPhysicalDeviceMultiDrawPropertiesEXT*)(name)));}();
return return_BxXiVTW;}();
        return result;
        }
    

        json serialize_VkGraphicsShaderGroupCreateInfoNV_pNext(const void* name){
        printf("Serializing VkGraphicsShaderGroupCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_qYAhRMb=json({});
    
        if (((VkGraphicsShaderGroupCreateInfoNV*)(name))==NULL){
            return_qYAhRMb["null"]=true;
            return return_qYAhRMb;
        }
        return_qYAhRMb=[&]() {
    json return_CIZZMIs=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(*((VkGraphicsShaderGroupCreateInfoNV*)(name)));}();
return return_qYAhRMb;}();
        return result;
        }
    

        json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV_pNext(const void* name){
        printf("Serializing VkGraphicsPipelineShaderGroupsCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_vkmzkKk=json({});
    
        if (((VkGraphicsPipelineShaderGroupsCreateInfoNV*)(name))==NULL){
            return_vkmzkKk["null"]=true;
            return return_vkmzkKk;
        }
        return_vkmzkKk=[&]() {
    json return_BWgUpcs=json({});
    return serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(*((VkGraphicsPipelineShaderGroupsCreateInfoNV*)(name)));}();
return return_vkmzkKk;}();
        return result;
        }
    

        json serialize_VkBindShaderGroupIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkBindShaderGroupIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_JNEKsYH=json({});
    
        if (((VkBindShaderGroupIndirectCommandNV*)(name))==NULL){
            return_JNEKsYH["null"]=true;
            return return_JNEKsYH;
        }
        return_JNEKsYH=[&]() {
    json return_zdMCJCN=json({});
    return serialize_VkBindShaderGroupIndirectCommandNV(*((VkBindShaderGroupIndirectCommandNV*)(name)));}();
return return_JNEKsYH;}();
        return result;
        }
    

        json serialize_VkBindIndexBufferIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkBindIndexBufferIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_cDUxIDf=json({});
    
        if (((VkBindIndexBufferIndirectCommandNV*)(name))==NULL){
            return_cDUxIDf["null"]=true;
            return return_cDUxIDf;
        }
        return_cDUxIDf=[&]() {
    json return_vzDhHCX=json({});
    return serialize_VkBindIndexBufferIndirectCommandNV(*((VkBindIndexBufferIndirectCommandNV*)(name)));}();
return return_cDUxIDf;}();
        return result;
        }
    

        json serialize_VkBindVertexBufferIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkBindVertexBufferIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_Atdtjkz=json({});
    
        if (((VkBindVertexBufferIndirectCommandNV*)(name))==NULL){
            return_Atdtjkz["null"]=true;
            return return_Atdtjkz;
        }
        return_Atdtjkz=[&]() {
    json return_EfKcDmE=json({});
    return serialize_VkBindVertexBufferIndirectCommandNV(*((VkBindVertexBufferIndirectCommandNV*)(name)));}();
return return_Atdtjkz;}();
        return result;
        }
    

        json serialize_VkSetStateFlagsIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkSetStateFlagsIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_TXTIXez=json({});
    
        if (((VkSetStateFlagsIndirectCommandNV*)(name))==NULL){
            return_TXTIXez["null"]=true;
            return return_TXTIXez;
        }
        return_TXTIXez=[&]() {
    json return_tpsHCuK=json({});
    return serialize_VkSetStateFlagsIndirectCommandNV(*((VkSetStateFlagsIndirectCommandNV*)(name)));}();
return return_TXTIXez;}();
        return result;
        }
    

        json serialize_VkIndirectCommandsStreamNV_pNext(const void* name){
        printf("Serializing VkIndirectCommandsStreamNV...\n");
        json result;
        result=[&]() {
    json return_VnGQPUG=json({});
    
        if (((VkIndirectCommandsStreamNV*)(name))==NULL){
            return_VnGQPUG["null"]=true;
            return return_VnGQPUG;
        }
        return_VnGQPUG=[&]() {
    json return_TgOzqsl=json({});
    return serialize_VkIndirectCommandsStreamNV(*((VkIndirectCommandsStreamNV*)(name)));}();
return return_VnGQPUG;}();
        return result;
        }
    

        json serialize_VkIndirectCommandsLayoutTokenNV_pNext(const void* name){
        printf("Serializing VkIndirectCommandsLayoutTokenNV...\n");
        json result;
        result=[&]() {
    json return_dBaeaBz=json({});
    
        if (((VkIndirectCommandsLayoutTokenNV*)(name))==NULL){
            return_dBaeaBz["null"]=true;
            return return_dBaeaBz;
        }
        return_dBaeaBz=[&]() {
    json return_PGVESJm=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(*((VkIndirectCommandsLayoutTokenNV*)(name)));}();
return return_dBaeaBz;}();
        return result;
        }
    

        json serialize_VkIndirectCommandsLayoutCreateInfoNV_pNext(const void* name){
        printf("Serializing VkIndirectCommandsLayoutCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_nRlhuxO=json({});
    
        if (((VkIndirectCommandsLayoutCreateInfoNV*)(name))==NULL){
            return_nRlhuxO["null"]=true;
            return return_nRlhuxO;
        }
        return_nRlhuxO=[&]() {
    json return_RQJPDxJ=json({});
    return serialize_VkIndirectCommandsLayoutCreateInfoNV(*((VkIndirectCommandsLayoutCreateInfoNV*)(name)));}();
return return_nRlhuxO;}();
        return result;
        }
    

        json serialize_VkGeneratedCommandsInfoNV_pNext(const void* name){
        printf("Serializing VkGeneratedCommandsInfoNV...\n");
        json result;
        result=[&]() {
    json return_oUtXqUB=json({});
    
        if (((VkGeneratedCommandsInfoNV*)(name))==NULL){
            return_oUtXqUB["null"]=true;
            return return_oUtXqUB;
        }
        return_oUtXqUB=[&]() {
    json return_PpbsOsm=json({});
    return serialize_VkGeneratedCommandsInfoNV(*((VkGeneratedCommandsInfoNV*)(name)));}();
return return_oUtXqUB;}();
        return result;
        }
    

        json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV_pNext(const void* name){
        printf("Serializing VkGeneratedCommandsMemoryRequirementsInfoNV...\n");
        json result;
        result=[&]() {
    json return_VKZKrhy=json({});
    
        if (((VkGeneratedCommandsMemoryRequirementsInfoNV*)(name))==NULL){
            return_VKZKrhy["null"]=true;
            return return_VKZKrhy;
        }
        return_VKZKrhy=[&]() {
    json return_UHtngho=json({});
    return serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(*((VkGeneratedCommandsMemoryRequirementsInfoNV*)(name)));}();
return return_VKZKrhy;}();
        return result;
        }
    

        json serialize_VkPipelineIndirectDeviceAddressInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineIndirectDeviceAddressInfoNV...\n");
        json result;
        result=[&]() {
    json return_zlcLash=json({});
    
        if (((VkPipelineIndirectDeviceAddressInfoNV*)(name))==NULL){
            return_zlcLash["null"]=true;
            return return_zlcLash;
        }
        return_zlcLash=[&]() {
    json return_pHHpOQf=json({});
    return serialize_VkPipelineIndirectDeviceAddressInfoNV(*((VkPipelineIndirectDeviceAddressInfoNV*)(name)));}();
return return_zlcLash;}();
        return result;
        }
    

        json serialize_VkBindPipelineIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkBindPipelineIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_HuPFkvp=json({});
    
        if (((VkBindPipelineIndirectCommandNV*)(name))==NULL){
            return_HuPFkvp["null"]=true;
            return return_HuPFkvp;
        }
        return_HuPFkvp=[&]() {
    json return_geQQQBH=json({});
    return serialize_VkBindPipelineIndirectCommandNV(*((VkBindPipelineIndirectCommandNV*)(name)));}();
return return_HuPFkvp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFeatures2_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFeatures2...\n");
        json result;
        result=[&]() {
    json return_LgVemOB=json({});
    
        if (((VkPhysicalDeviceFeatures2*)(name))==NULL){
            return_LgVemOB["null"]=true;
            return return_LgVemOB;
        }
        return_LgVemOB=[&]() {
    json return_iRoojGo=json({});
    return serialize_VkPhysicalDeviceFeatures2(*((VkPhysicalDeviceFeatures2*)(name)));}();
return return_LgVemOB;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFeatures2KHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFeatures2KHR...\n");
        json result;
        result=[&]() {
    json return_OngRUwp=json({});
    
        if (((VkPhysicalDeviceFeatures2KHR*)(name))==NULL){
            return_OngRUwp["null"]=true;
            return return_OngRUwp;
        }
        return_OngRUwp=[&]() {
    json return_kFxXElB=json({});
    return serialize_VkPhysicalDeviceFeatures2KHR(*((VkPhysicalDeviceFeatures2KHR*)(name)));}();
return return_OngRUwp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceProperties2_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceProperties2...\n");
        json result;
        result=[&]() {
    json return_asIndyo=json({});
    
        if (((VkPhysicalDeviceProperties2*)(name))==NULL){
            return_asIndyo["null"]=true;
            return return_asIndyo;
        }
        return_asIndyo=[&]() {
    json return_aeGPxUS=json({});
    return serialize_VkPhysicalDeviceProperties2(*((VkPhysicalDeviceProperties2*)(name)));}();
return return_asIndyo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceProperties2KHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_BFPEwmb=json({});
    
        if (((VkPhysicalDeviceProperties2KHR*)(name))==NULL){
            return_BFPEwmb["null"]=true;
            return return_BFPEwmb;
        }
        return_BFPEwmb=[&]() {
    json return_OvBXeRc=json({});
    return serialize_VkPhysicalDeviceProperties2KHR(*((VkPhysicalDeviceProperties2KHR*)(name)));}();
return return_BFPEwmb;}();
        return result;
        }
    

        json serialize_VkFormatProperties2_pNext(const void* name){
        printf("Serializing VkFormatProperties2...\n");
        json result;
        result=[&]() {
    json return_axzCyiS=json({});
    
        if (((VkFormatProperties2*)(name))==NULL){
            return_axzCyiS["null"]=true;
            return return_axzCyiS;
        }
        return_axzCyiS=[&]() {
    json return_eGVNHxg=json({});
    return serialize_VkFormatProperties2(*((VkFormatProperties2*)(name)));}();
return return_axzCyiS;}();
        return result;
        }
    

        json serialize_VkFormatProperties2KHR_pNext(const void* name){
        printf("Serializing VkFormatProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_HAfOLSC=json({});
    
        if (((VkFormatProperties2KHR*)(name))==NULL){
            return_HAfOLSC["null"]=true;
            return return_HAfOLSC;
        }
        return_HAfOLSC=[&]() {
    json return_OTGIRvs=json({});
    return serialize_VkFormatProperties2KHR(*((VkFormatProperties2KHR*)(name)));}();
return return_HAfOLSC;}();
        return result;
        }
    

        json serialize_VkImageFormatProperties2_pNext(const void* name){
        printf("Serializing VkImageFormatProperties2...\n");
        json result;
        result=[&]() {
    json return_bHsYLVl=json({});
    
        if (((VkImageFormatProperties2*)(name))==NULL){
            return_bHsYLVl["null"]=true;
            return return_bHsYLVl;
        }
        return_bHsYLVl=[&]() {
    json return_qWkQeXy=json({});
    return serialize_VkImageFormatProperties2(*((VkImageFormatProperties2*)(name)));}();
return return_bHsYLVl;}();
        return result;
        }
    

        json serialize_VkImageFormatProperties2KHR_pNext(const void* name){
        printf("Serializing VkImageFormatProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_JcuLYqE=json({});
    
        if (((VkImageFormatProperties2KHR*)(name))==NULL){
            return_JcuLYqE["null"]=true;
            return return_JcuLYqE;
        }
        return_JcuLYqE=[&]() {
    json return_bGjiwzo=json({});
    return serialize_VkImageFormatProperties2KHR(*((VkImageFormatProperties2KHR*)(name)));}();
return return_JcuLYqE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageFormatInfo2_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageFormatInfo2...\n");
        json result;
        result=[&]() {
    json return_wULjtYD=json({});
    
        if (((VkPhysicalDeviceImageFormatInfo2*)(name))==NULL){
            return_wULjtYD["null"]=true;
            return return_wULjtYD;
        }
        return_wULjtYD=[&]() {
    json return_AzVJbpv=json({});
    return serialize_VkPhysicalDeviceImageFormatInfo2(*((VkPhysicalDeviceImageFormatInfo2*)(name)));}();
return return_wULjtYD;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageFormatInfo2KHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageFormatInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_AWoXkeO=json({});
    
        if (((VkPhysicalDeviceImageFormatInfo2KHR*)(name))==NULL){
            return_AWoXkeO["null"]=true;
            return return_AWoXkeO;
        }
        return_AWoXkeO=[&]() {
    json return_XBHYnkw=json({});
    return serialize_VkPhysicalDeviceImageFormatInfo2KHR(*((VkPhysicalDeviceImageFormatInfo2KHR*)(name)));}();
return return_AWoXkeO;}();
        return result;
        }
    

        json serialize_VkQueueFamilyProperties2_pNext(const void* name){
        printf("Serializing VkQueueFamilyProperties2...\n");
        json result;
        result=[&]() {
    json return_YyaQEnG=json({});
    
        if (((VkQueueFamilyProperties2*)(name))==NULL){
            return_YyaQEnG["null"]=true;
            return return_YyaQEnG;
        }
        return_YyaQEnG=[&]() {
    json return_cyihqnS=json({});
    return serialize_VkQueueFamilyProperties2(*((VkQueueFamilyProperties2*)(name)));}();
return return_YyaQEnG;}();
        return result;
        }
    

        json serialize_VkQueueFamilyProperties2KHR_pNext(const void* name){
        printf("Serializing VkQueueFamilyProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_UkKXPQl=json({});
    
        if (((VkQueueFamilyProperties2KHR*)(name))==NULL){
            return_UkKXPQl["null"]=true;
            return return_UkKXPQl;
        }
        return_UkKXPQl=[&]() {
    json return_xGkyvfc=json({});
    return serialize_VkQueueFamilyProperties2KHR(*((VkQueueFamilyProperties2KHR*)(name)));}();
return return_UkKXPQl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMemoryProperties2_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMemoryProperties2...\n");
        json result;
        result=[&]() {
    json return_PWGsaxn=json({});
    
        if (((VkPhysicalDeviceMemoryProperties2*)(name))==NULL){
            return_PWGsaxn["null"]=true;
            return return_PWGsaxn;
        }
        return_PWGsaxn=[&]() {
    json return_eaacXni=json({});
    return serialize_VkPhysicalDeviceMemoryProperties2(*((VkPhysicalDeviceMemoryProperties2*)(name)));}();
return return_PWGsaxn;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMemoryProperties2KHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMemoryProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_SWBddXQ=json({});
    
        if (((VkPhysicalDeviceMemoryProperties2KHR*)(name))==NULL){
            return_SWBddXQ["null"]=true;
            return return_SWBddXQ;
        }
        return_SWBddXQ=[&]() {
    json return_JoqZnxk=json({});
    return serialize_VkPhysicalDeviceMemoryProperties2KHR(*((VkPhysicalDeviceMemoryProperties2KHR*)(name)));}();
return return_SWBddXQ;}();
        return result;
        }
    

        json serialize_VkSparseImageFormatProperties2_pNext(const void* name){
        printf("Serializing VkSparseImageFormatProperties2...\n");
        json result;
        result=[&]() {
    json return_hGUcTYK=json({});
    
        if (((VkSparseImageFormatProperties2*)(name))==NULL){
            return_hGUcTYK["null"]=true;
            return return_hGUcTYK;
        }
        return_hGUcTYK=[&]() {
    json return_srEqlkb=json({});
    return serialize_VkSparseImageFormatProperties2(*((VkSparseImageFormatProperties2*)(name)));}();
return return_hGUcTYK;}();
        return result;
        }
    

        json serialize_VkSparseImageFormatProperties2KHR_pNext(const void* name){
        printf("Serializing VkSparseImageFormatProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_TjCeYbX=json({});
    
        if (((VkSparseImageFormatProperties2KHR*)(name))==NULL){
            return_TjCeYbX["null"]=true;
            return return_TjCeYbX;
        }
        return_TjCeYbX=[&]() {
    json return_regYmCL=json({});
    return serialize_VkSparseImageFormatProperties2KHR(*((VkSparseImageFormatProperties2KHR*)(name)));}();
return return_TjCeYbX;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSparseImageFormatInfo2_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSparseImageFormatInfo2...\n");
        json result;
        result=[&]() {
    json return_BSMhkIm=json({});
    
        if (((VkPhysicalDeviceSparseImageFormatInfo2*)(name))==NULL){
            return_BSMhkIm["null"]=true;
            return return_BSMhkIm;
        }
        return_BSMhkIm=[&]() {
    json return_wqAbkTE=json({});
    return serialize_VkPhysicalDeviceSparseImageFormatInfo2(*((VkPhysicalDeviceSparseImageFormatInfo2*)(name)));}();
return return_BSMhkIm;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSparseImageFormatInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_qykzdkX=json({});
    
        if (((VkPhysicalDeviceSparseImageFormatInfo2KHR*)(name))==NULL){
            return_qykzdkX["null"]=true;
            return return_qykzdkX;
        }
        return_qykzdkX=[&]() {
    json return_AhpELEr=json({});
    return serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(*((VkPhysicalDeviceSparseImageFormatInfo2KHR*)(name)));}();
return return_qykzdkX;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePushDescriptorPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_jyDYuNU=json({});
    
        if (((VkPhysicalDevicePushDescriptorPropertiesKHR*)(name))==NULL){
            return_jyDYuNU["null"]=true;
            return return_jyDYuNU;
        }
        return_jyDYuNU=[&]() {
    json return_rtPXmWQ=json({});
    return serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(*((VkPhysicalDevicePushDescriptorPropertiesKHR*)(name)));}();
return return_jyDYuNU;}();
        return result;
        }
    

        json serialize_VkConformanceVersion_pNext(const void* name){
        printf("Serializing VkConformanceVersion...\n");
        json result;
        result=[&]() {
    json return_RyjMBbH=json({});
    
        if (((VkConformanceVersion*)(name))==NULL){
            return_RyjMBbH["null"]=true;
            return return_RyjMBbH;
        }
        return_RyjMBbH=[&]() {
    json return_UDLVXWI=json({});
    return serialize_VkConformanceVersion(*((VkConformanceVersion*)(name)));}();
return return_RyjMBbH;}();
        return result;
        }
    

        json serialize_VkConformanceVersionKHR_pNext(const void* name){
        printf("Serializing VkConformanceVersionKHR...\n");
        json result;
        result=[&]() {
    json return_xluTtvT=json({});
    
        if (((VkConformanceVersionKHR*)(name))==NULL){
            return_xluTtvT["null"]=true;
            return return_xluTtvT;
        }
        return_xluTtvT=[&]() {
    json return_pzeAHtE=json({});
    return serialize_VkConformanceVersionKHR(*((VkConformanceVersionKHR*)(name)));}();
return return_xluTtvT;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDriverProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDriverProperties...\n");
        json result;
        result=[&]() {
    json return_LdlIxzd=json({});
    
        if (((VkPhysicalDeviceDriverProperties*)(name))==NULL){
            return_LdlIxzd["null"]=true;
            return return_LdlIxzd;
        }
        return_LdlIxzd=[&]() {
    json return_WuKaSqS=json({});
    return serialize_VkPhysicalDeviceDriverProperties(*((VkPhysicalDeviceDriverProperties*)(name)));}();
return return_LdlIxzd;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDriverPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDriverPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_AXveNHA=json({});
    
        if (((VkPhysicalDeviceDriverPropertiesKHR*)(name))==NULL){
            return_AXveNHA["null"]=true;
            return return_AXveNHA;
        }
        return_AXveNHA=[&]() {
    json return_jncQXnN=json({});
    return serialize_VkPhysicalDeviceDriverPropertiesKHR(*((VkPhysicalDeviceDriverPropertiesKHR*)(name)));}();
return return_AXveNHA;}();
        return result;
        }
    

        json serialize_VkPresentRegionsKHR_pNext(const void* name){
        printf("Serializing VkPresentRegionsKHR...\n");
        json result;
        result=[&]() {
    json return_CngvoOc=json({});
    
        if (((VkPresentRegionsKHR*)(name))==NULL){
            return_CngvoOc["null"]=true;
            return return_CngvoOc;
        }
        return_CngvoOc=[&]() {
    json return_EDfEIkW=json({});
    return serialize_VkPresentRegionsKHR(*((VkPresentRegionsKHR*)(name)));}();
return return_CngvoOc;}();
        return result;
        }
    

        json serialize_VkPresentRegionKHR_pNext(const void* name){
        printf("Serializing VkPresentRegionKHR...\n");
        json result;
        result=[&]() {
    json return_lzwWfXI=json({});
    
        if (((VkPresentRegionKHR*)(name))==NULL){
            return_lzwWfXI["null"]=true;
            return return_lzwWfXI;
        }
        return_lzwWfXI=[&]() {
    json return_AkgDpFC=json({});
    return serialize_VkPresentRegionKHR(*((VkPresentRegionKHR*)(name)));}();
return return_lzwWfXI;}();
        return result;
        }
    

        json serialize_VkRectLayerKHR_pNext(const void* name){
        printf("Serializing VkRectLayerKHR...\n");
        json result;
        result=[&]() {
    json return_sntBJGH=json({});
    
        if (((VkRectLayerKHR*)(name))==NULL){
            return_sntBJGH["null"]=true;
            return return_sntBJGH;
        }
        return_sntBJGH=[&]() {
    json return_guSCEyq=json({});
    return serialize_VkRectLayerKHR(*((VkRectLayerKHR*)(name)));}();
return return_sntBJGH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVariablePointersFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVariablePointersFeatures...\n");
        json result;
        result=[&]() {
    json return_IQsgakN=json({});
    
        if (((VkPhysicalDeviceVariablePointersFeatures*)(name))==NULL){
            return_IQsgakN["null"]=true;
            return return_IQsgakN;
        }
        return_IQsgakN=[&]() {
    json return_dMvlMXB=json({});
    return serialize_VkPhysicalDeviceVariablePointersFeatures(*((VkPhysicalDeviceVariablePointersFeatures*)(name)));}();
return return_IQsgakN;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVariablePointersFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_zjCFffA=json({});
    
        if (((VkPhysicalDeviceVariablePointersFeaturesKHR*)(name))==NULL){
            return_zjCFffA["null"]=true;
            return return_zjCFffA;
        }
        return_zjCFffA=[&]() {
    json return_mgSlbBL=json({});
    return serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(*((VkPhysicalDeviceVariablePointersFeaturesKHR*)(name)));}();
return return_zjCFffA;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVariablePointerFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_oBtrkxD=json({});
    
        if (((VkPhysicalDeviceVariablePointerFeaturesKHR*)(name))==NULL){
            return_oBtrkxD["null"]=true;
            return return_oBtrkxD;
        }
        return_oBtrkxD=[&]() {
    json return_xMrBnVs=json({});
    return serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(*((VkPhysicalDeviceVariablePointerFeaturesKHR*)(name)));}();
return return_oBtrkxD;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVariablePointerFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVariablePointerFeatures...\n");
        json result;
        result=[&]() {
    json return_qeBtBOY=json({});
    
        if (((VkPhysicalDeviceVariablePointerFeatures*)(name))==NULL){
            return_qeBtBOY["null"]=true;
            return return_qeBtBOY;
        }
        return_qeBtBOY=[&]() {
    json return_GDTPjMg=json({});
    return serialize_VkPhysicalDeviceVariablePointerFeatures(*((VkPhysicalDeviceVariablePointerFeatures*)(name)));}();
return return_qeBtBOY;}();
        return result;
        }
    

        json serialize_VkExternalMemoryProperties_pNext(const void* name){
        printf("Serializing VkExternalMemoryProperties...\n");
        json result;
        result=[&]() {
    json return_ssoXPQo=json({});
    
        if (((VkExternalMemoryProperties*)(name))==NULL){
            return_ssoXPQo["null"]=true;
            return return_ssoXPQo;
        }
        return_ssoXPQo=[&]() {
    json return_hsgovMa=json({});
    return serialize_VkExternalMemoryProperties(*((VkExternalMemoryProperties*)(name)));}();
return return_ssoXPQo;}();
        return result;
        }
    

        json serialize_VkExternalMemoryPropertiesKHR_pNext(const void* name){
        printf("Serializing VkExternalMemoryPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_lpRmEta=json({});
    
        if (((VkExternalMemoryPropertiesKHR*)(name))==NULL){
            return_lpRmEta["null"]=true;
            return return_lpRmEta;
        }
        return_lpRmEta=[&]() {
    json return_giYKkXV=json({});
    return serialize_VkExternalMemoryPropertiesKHR(*((VkExternalMemoryPropertiesKHR*)(name)));}();
return return_lpRmEta;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalImageFormatInfo_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalImageFormatInfo...\n");
        json result;
        result=[&]() {
    json return_vsgJpBB=json({});
    
        if (((VkPhysicalDeviceExternalImageFormatInfo*)(name))==NULL){
            return_vsgJpBB["null"]=true;
            return return_vsgJpBB;
        }
        return_vsgJpBB=[&]() {
    json return_yWpPDON=json({});
    return serialize_VkPhysicalDeviceExternalImageFormatInfo(*((VkPhysicalDeviceExternalImageFormatInfo*)(name)));}();
return return_vsgJpBB;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalImageFormatInfoKHR...\n");
        json result;
        result=[&]() {
    json return_AKfDUiN=json({});
    
        if (((VkPhysicalDeviceExternalImageFormatInfoKHR*)(name))==NULL){
            return_AKfDUiN["null"]=true;
            return return_AKfDUiN;
        }
        return_AKfDUiN=[&]() {
    json return_xtFTgbN=json({});
    return serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(*((VkPhysicalDeviceExternalImageFormatInfoKHR*)(name)));}();
return return_AKfDUiN;}();
        return result;
        }
    

        json serialize_VkExternalImageFormatProperties_pNext(const void* name){
        printf("Serializing VkExternalImageFormatProperties...\n");
        json result;
        result=[&]() {
    json return_UXFRGqH=json({});
    
        if (((VkExternalImageFormatProperties*)(name))==NULL){
            return_UXFRGqH["null"]=true;
            return return_UXFRGqH;
        }
        return_UXFRGqH=[&]() {
    json return_keIHbKc=json({});
    return serialize_VkExternalImageFormatProperties(*((VkExternalImageFormatProperties*)(name)));}();
return return_UXFRGqH;}();
        return result;
        }
    

        json serialize_VkExternalImageFormatPropertiesKHR_pNext(const void* name){
        printf("Serializing VkExternalImageFormatPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_hKBaBnv=json({});
    
        if (((VkExternalImageFormatPropertiesKHR*)(name))==NULL){
            return_hKBaBnv["null"]=true;
            return return_hKBaBnv;
        }
        return_hKBaBnv=[&]() {
    json return_fpzOBQP=json({});
    return serialize_VkExternalImageFormatPropertiesKHR(*((VkExternalImageFormatPropertiesKHR*)(name)));}();
return return_hKBaBnv;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalBufferInfo_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalBufferInfo...\n");
        json result;
        result=[&]() {
    json return_LcADeBW=json({});
    
        if (((VkPhysicalDeviceExternalBufferInfo*)(name))==NULL){
            return_LcADeBW["null"]=true;
            return return_LcADeBW;
        }
        return_LcADeBW=[&]() {
    json return_DxYEnQB=json({});
    return serialize_VkPhysicalDeviceExternalBufferInfo(*((VkPhysicalDeviceExternalBufferInfo*)(name)));}();
return return_LcADeBW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalBufferInfoKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalBufferInfoKHR...\n");
        json result;
        result=[&]() {
    json return_WgtHFgF=json({});
    
        if (((VkPhysicalDeviceExternalBufferInfoKHR*)(name))==NULL){
            return_WgtHFgF["null"]=true;
            return return_WgtHFgF;
        }
        return_WgtHFgF=[&]() {
    json return_bvvtOhQ=json({});
    return serialize_VkPhysicalDeviceExternalBufferInfoKHR(*((VkPhysicalDeviceExternalBufferInfoKHR*)(name)));}();
return return_WgtHFgF;}();
        return result;
        }
    

        json serialize_VkExternalBufferProperties_pNext(const void* name){
        printf("Serializing VkExternalBufferProperties...\n");
        json result;
        result=[&]() {
    json return_DNLbFGd=json({});
    
        if (((VkExternalBufferProperties*)(name))==NULL){
            return_DNLbFGd["null"]=true;
            return return_DNLbFGd;
        }
        return_DNLbFGd=[&]() {
    json return_mJXZOim=json({});
    return serialize_VkExternalBufferProperties(*((VkExternalBufferProperties*)(name)));}();
return return_DNLbFGd;}();
        return result;
        }
    

        json serialize_VkExternalBufferPropertiesKHR_pNext(const void* name){
        printf("Serializing VkExternalBufferPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_KKQiuMi=json({});
    
        if (((VkExternalBufferPropertiesKHR*)(name))==NULL){
            return_KKQiuMi["null"]=true;
            return return_KKQiuMi;
        }
        return_KKQiuMi=[&]() {
    json return_uSPtVLH=json({});
    return serialize_VkExternalBufferPropertiesKHR(*((VkExternalBufferPropertiesKHR*)(name)));}();
return return_KKQiuMi;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceIDProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceIDProperties...\n");
        json result;
        result=[&]() {
    json return_VMUJWkB=json({});
    
        if (((VkPhysicalDeviceIDProperties*)(name))==NULL){
            return_VMUJWkB["null"]=true;
            return return_VMUJWkB;
        }
        return_VMUJWkB=[&]() {
    json return_wGMCTIl=json({});
    return serialize_VkPhysicalDeviceIDProperties(*((VkPhysicalDeviceIDProperties*)(name)));}();
return return_VMUJWkB;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceIDPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceIDPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_oqTLJSb=json({});
    
        if (((VkPhysicalDeviceIDPropertiesKHR*)(name))==NULL){
            return_oqTLJSb["null"]=true;
            return return_oqTLJSb;
        }
        return_oqTLJSb=[&]() {
    json return_gwxWHQY=json({});
    return serialize_VkPhysicalDeviceIDPropertiesKHR(*((VkPhysicalDeviceIDPropertiesKHR*)(name)));}();
return return_oqTLJSb;}();
        return result;
        }
    

        json serialize_VkExternalMemoryImageCreateInfo_pNext(const void* name){
        printf("Serializing VkExternalMemoryImageCreateInfo...\n");
        json result;
        result=[&]() {
    json return_nreAZYf=json({});
    
        if (((VkExternalMemoryImageCreateInfo*)(name))==NULL){
            return_nreAZYf["null"]=true;
            return return_nreAZYf;
        }
        return_nreAZYf=[&]() {
    json return_NcwpZZx=json({});
    return serialize_VkExternalMemoryImageCreateInfo(*((VkExternalMemoryImageCreateInfo*)(name)));}();
return return_nreAZYf;}();
        return result;
        }
    

        json serialize_VkExternalMemoryImageCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkExternalMemoryImageCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_cHQJOex=json({});
    
        if (((VkExternalMemoryImageCreateInfoKHR*)(name))==NULL){
            return_cHQJOex["null"]=true;
            return return_cHQJOex;
        }
        return_cHQJOex=[&]() {
    json return_zvhttay=json({});
    return serialize_VkExternalMemoryImageCreateInfoKHR(*((VkExternalMemoryImageCreateInfoKHR*)(name)));}();
return return_cHQJOex;}();
        return result;
        }
    

        json serialize_VkExternalMemoryBufferCreateInfo_pNext(const void* name){
        printf("Serializing VkExternalMemoryBufferCreateInfo...\n");
        json result;
        result=[&]() {
    json return_zbkdAHs=json({});
    
        if (((VkExternalMemoryBufferCreateInfo*)(name))==NULL){
            return_zbkdAHs["null"]=true;
            return return_zbkdAHs;
        }
        return_zbkdAHs=[&]() {
    json return_QUSKfiT=json({});
    return serialize_VkExternalMemoryBufferCreateInfo(*((VkExternalMemoryBufferCreateInfo*)(name)));}();
return return_zbkdAHs;}();
        return result;
        }
    

        json serialize_VkExternalMemoryBufferCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkExternalMemoryBufferCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_ZsigHIz=json({});
    
        if (((VkExternalMemoryBufferCreateInfoKHR*)(name))==NULL){
            return_ZsigHIz["null"]=true;
            return return_ZsigHIz;
        }
        return_ZsigHIz=[&]() {
    json return_WLzUPdE=json({});
    return serialize_VkExternalMemoryBufferCreateInfoKHR(*((VkExternalMemoryBufferCreateInfoKHR*)(name)));}();
return return_ZsigHIz;}();
        return result;
        }
    

        json serialize_VkExportMemoryAllocateInfo_pNext(const void* name){
        printf("Serializing VkExportMemoryAllocateInfo...\n");
        json result;
        result=[&]() {
    json return_BwIkCCN=json({});
    
        if (((VkExportMemoryAllocateInfo*)(name))==NULL){
            return_BwIkCCN["null"]=true;
            return return_BwIkCCN;
        }
        return_BwIkCCN=[&]() {
    json return_DaFENDf=json({});
    return serialize_VkExportMemoryAllocateInfo(*((VkExportMemoryAllocateInfo*)(name)));}();
return return_BwIkCCN;}();
        return result;
        }
    

        json serialize_VkExportMemoryAllocateInfoKHR_pNext(const void* name){
        printf("Serializing VkExportMemoryAllocateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_NYGLWAX=json({});
    
        if (((VkExportMemoryAllocateInfoKHR*)(name))==NULL){
            return_NYGLWAX["null"]=true;
            return return_NYGLWAX;
        }
        return_NYGLWAX=[&]() {
    json return_tQuJqnu=json({});
    return serialize_VkExportMemoryAllocateInfoKHR(*((VkExportMemoryAllocateInfoKHR*)(name)));}();
return return_NYGLWAX;}();
        return result;
        }
    

        json serialize_VkImportMemoryFdInfoKHR_pNext(const void* name){
        printf("Serializing VkImportMemoryFdInfoKHR...\n");
        json result;
        result=[&]() {
    json return_drMphoD=json({});
    
        if (((VkImportMemoryFdInfoKHR*)(name))==NULL){
            return_drMphoD["null"]=true;
            return return_drMphoD;
        }
        return_drMphoD=[&]() {
    json return_sjYOPBA=json({});
    return serialize_VkImportMemoryFdInfoKHR(*((VkImportMemoryFdInfoKHR*)(name)));}();
return return_drMphoD;}();
        return result;
        }
    

        json serialize_VkMemoryFdPropertiesKHR_pNext(const void* name){
        printf("Serializing VkMemoryFdPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_LbCtLFN=json({});
    
        if (((VkMemoryFdPropertiesKHR*)(name))==NULL){
            return_LbCtLFN["null"]=true;
            return return_LbCtLFN;
        }
        return_LbCtLFN=[&]() {
    json return_GQGKkVW=json({});
    return serialize_VkMemoryFdPropertiesKHR(*((VkMemoryFdPropertiesKHR*)(name)));}();
return return_LbCtLFN;}();
        return result;
        }
    

        json serialize_VkMemoryGetFdInfoKHR_pNext(const void* name){
        printf("Serializing VkMemoryGetFdInfoKHR...\n");
        json result;
        result=[&]() {
    json return_wfzBBRq=json({});
    
        if (((VkMemoryGetFdInfoKHR*)(name))==NULL){
            return_wfzBBRq["null"]=true;
            return return_wfzBBRq;
        }
        return_wfzBBRq=[&]() {
    json return_LScoNZY=json({});
    return serialize_VkMemoryGetFdInfoKHR(*((VkMemoryGetFdInfoKHR*)(name)));}();
return return_wfzBBRq;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalSemaphoreInfo_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalSemaphoreInfo...\n");
        json result;
        result=[&]() {
    json return_ldzOBnJ=json({});
    
        if (((VkPhysicalDeviceExternalSemaphoreInfo*)(name))==NULL){
            return_ldzOBnJ["null"]=true;
            return return_ldzOBnJ;
        }
        return_ldzOBnJ=[&]() {
    json return_gTNGBTT=json({});
    return serialize_VkPhysicalDeviceExternalSemaphoreInfo(*((VkPhysicalDeviceExternalSemaphoreInfo*)(name)));}();
return return_ldzOBnJ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalSemaphoreInfoKHR...\n");
        json result;
        result=[&]() {
    json return_dBtswcU=json({});
    
        if (((VkPhysicalDeviceExternalSemaphoreInfoKHR*)(name))==NULL){
            return_dBtswcU["null"]=true;
            return return_dBtswcU;
        }
        return_dBtswcU=[&]() {
    json return_HxZqWzc=json({});
    return serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(*((VkPhysicalDeviceExternalSemaphoreInfoKHR*)(name)));}();
return return_dBtswcU;}();
        return result;
        }
    

        json serialize_VkExternalSemaphoreProperties_pNext(const void* name){
        printf("Serializing VkExternalSemaphoreProperties...\n");
        json result;
        result=[&]() {
    json return_SmbihUY=json({});
    
        if (((VkExternalSemaphoreProperties*)(name))==NULL){
            return_SmbihUY["null"]=true;
            return return_SmbihUY;
        }
        return_SmbihUY=[&]() {
    json return_VcfbNqm=json({});
    return serialize_VkExternalSemaphoreProperties(*((VkExternalSemaphoreProperties*)(name)));}();
return return_SmbihUY;}();
        return result;
        }
    

        json serialize_VkExternalSemaphorePropertiesKHR_pNext(const void* name){
        printf("Serializing VkExternalSemaphorePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_uKxRaVs=json({});
    
        if (((VkExternalSemaphorePropertiesKHR*)(name))==NULL){
            return_uKxRaVs["null"]=true;
            return return_uKxRaVs;
        }
        return_uKxRaVs=[&]() {
    json return_FIzGdEZ=json({});
    return serialize_VkExternalSemaphorePropertiesKHR(*((VkExternalSemaphorePropertiesKHR*)(name)));}();
return return_uKxRaVs;}();
        return result;
        }
    

        json serialize_VkExportSemaphoreCreateInfo_pNext(const void* name){
        printf("Serializing VkExportSemaphoreCreateInfo...\n");
        json result;
        result=[&]() {
    json return_eWPlAQu=json({});
    
        if (((VkExportSemaphoreCreateInfo*)(name))==NULL){
            return_eWPlAQu["null"]=true;
            return return_eWPlAQu;
        }
        return_eWPlAQu=[&]() {
    json return_lUqmLcJ=json({});
    return serialize_VkExportSemaphoreCreateInfo(*((VkExportSemaphoreCreateInfo*)(name)));}();
return return_eWPlAQu;}();
        return result;
        }
    

        json serialize_VkExportSemaphoreCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkExportSemaphoreCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_PhqsFWK=json({});
    
        if (((VkExportSemaphoreCreateInfoKHR*)(name))==NULL){
            return_PhqsFWK["null"]=true;
            return return_PhqsFWK;
        }
        return_PhqsFWK=[&]() {
    json return_RfAOHLj=json({});
    return serialize_VkExportSemaphoreCreateInfoKHR(*((VkExportSemaphoreCreateInfoKHR*)(name)));}();
return return_PhqsFWK;}();
        return result;
        }
    

        json serialize_VkImportSemaphoreFdInfoKHR_pNext(const void* name){
        printf("Serializing VkImportSemaphoreFdInfoKHR...\n");
        json result;
        result=[&]() {
    json return_JlxsXMD=json({});
    
        if (((VkImportSemaphoreFdInfoKHR*)(name))==NULL){
            return_JlxsXMD["null"]=true;
            return return_JlxsXMD;
        }
        return_JlxsXMD=[&]() {
    json return_WyhNcUf=json({});
    return serialize_VkImportSemaphoreFdInfoKHR(*((VkImportSemaphoreFdInfoKHR*)(name)));}();
return return_JlxsXMD;}();
        return result;
        }
    

        json serialize_VkSemaphoreGetFdInfoKHR_pNext(const void* name){
        printf("Serializing VkSemaphoreGetFdInfoKHR...\n");
        json result;
        result=[&]() {
    json return_CdqLXTU=json({});
    
        if (((VkSemaphoreGetFdInfoKHR*)(name))==NULL){
            return_CdqLXTU["null"]=true;
            return return_CdqLXTU;
        }
        return_CdqLXTU=[&]() {
    json return_fKZrrnu=json({});
    return serialize_VkSemaphoreGetFdInfoKHR(*((VkSemaphoreGetFdInfoKHR*)(name)));}();
return return_CdqLXTU;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalFenceInfo_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalFenceInfo...\n");
        json result;
        result=[&]() {
    json return_fHmzqzb=json({});
    
        if (((VkPhysicalDeviceExternalFenceInfo*)(name))==NULL){
            return_fHmzqzb["null"]=true;
            return return_fHmzqzb;
        }
        return_fHmzqzb=[&]() {
    json return_PBZaoHE=json({});
    return serialize_VkPhysicalDeviceExternalFenceInfo(*((VkPhysicalDeviceExternalFenceInfo*)(name)));}();
return return_fHmzqzb;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalFenceInfoKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalFenceInfoKHR...\n");
        json result;
        result=[&]() {
    json return_RRGrfxd=json({});
    
        if (((VkPhysicalDeviceExternalFenceInfoKHR*)(name))==NULL){
            return_RRGrfxd["null"]=true;
            return return_RRGrfxd;
        }
        return_RRGrfxd=[&]() {
    json return_VfLImnt=json({});
    return serialize_VkPhysicalDeviceExternalFenceInfoKHR(*((VkPhysicalDeviceExternalFenceInfoKHR*)(name)));}();
return return_RRGrfxd;}();
        return result;
        }
    

        json serialize_VkExternalFenceProperties_pNext(const void* name){
        printf("Serializing VkExternalFenceProperties...\n");
        json result;
        result=[&]() {
    json return_QApnBDz=json({});
    
        if (((VkExternalFenceProperties*)(name))==NULL){
            return_QApnBDz["null"]=true;
            return return_QApnBDz;
        }
        return_QApnBDz=[&]() {
    json return_XvAkfMb=json({});
    return serialize_VkExternalFenceProperties(*((VkExternalFenceProperties*)(name)));}();
return return_QApnBDz;}();
        return result;
        }
    

        json serialize_VkExternalFencePropertiesKHR_pNext(const void* name){
        printf("Serializing VkExternalFencePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_gUmPkil=json({});
    
        if (((VkExternalFencePropertiesKHR*)(name))==NULL){
            return_gUmPkil["null"]=true;
            return return_gUmPkil;
        }
        return_gUmPkil=[&]() {
    json return_ddfEDhh=json({});
    return serialize_VkExternalFencePropertiesKHR(*((VkExternalFencePropertiesKHR*)(name)));}();
return return_gUmPkil;}();
        return result;
        }
    

        json serialize_VkExportFenceCreateInfo_pNext(const void* name){
        printf("Serializing VkExportFenceCreateInfo...\n");
        json result;
        result=[&]() {
    json return_qutPrXH=json({});
    
        if (((VkExportFenceCreateInfo*)(name))==NULL){
            return_qutPrXH["null"]=true;
            return return_qutPrXH;
        }
        return_qutPrXH=[&]() {
    json return_WynNgre=json({});
    return serialize_VkExportFenceCreateInfo(*((VkExportFenceCreateInfo*)(name)));}();
return return_qutPrXH;}();
        return result;
        }
    

        json serialize_VkExportFenceCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkExportFenceCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_uFoewXo=json({});
    
        if (((VkExportFenceCreateInfoKHR*)(name))==NULL){
            return_uFoewXo["null"]=true;
            return return_uFoewXo;
        }
        return_uFoewXo=[&]() {
    json return_YmBABpL=json({});
    return serialize_VkExportFenceCreateInfoKHR(*((VkExportFenceCreateInfoKHR*)(name)));}();
return return_uFoewXo;}();
        return result;
        }
    

        json serialize_VkImportFenceFdInfoKHR_pNext(const void* name){
        printf("Serializing VkImportFenceFdInfoKHR...\n");
        json result;
        result=[&]() {
    json return_oMEqwwB=json({});
    
        if (((VkImportFenceFdInfoKHR*)(name))==NULL){
            return_oMEqwwB["null"]=true;
            return return_oMEqwwB;
        }
        return_oMEqwwB=[&]() {
    json return_gQCnlVR=json({});
    return serialize_VkImportFenceFdInfoKHR(*((VkImportFenceFdInfoKHR*)(name)));}();
return return_oMEqwwB;}();
        return result;
        }
    

        json serialize_VkFenceGetFdInfoKHR_pNext(const void* name){
        printf("Serializing VkFenceGetFdInfoKHR...\n");
        json result;
        result=[&]() {
    json return_pNjwglH=json({});
    
        if (((VkFenceGetFdInfoKHR*)(name))==NULL){
            return_pNjwglH["null"]=true;
            return return_pNjwglH;
        }
        return_pNjwglH=[&]() {
    json return_PRfkidD=json({});
    return serialize_VkFenceGetFdInfoKHR(*((VkFenceGetFdInfoKHR*)(name)));}();
return return_pNjwglH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiviewFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiviewFeatures...\n");
        json result;
        result=[&]() {
    json return_oWQUUJt=json({});
    
        if (((VkPhysicalDeviceMultiviewFeatures*)(name))==NULL){
            return_oWQUUJt["null"]=true;
            return return_oWQUUJt;
        }
        return_oWQUUJt=[&]() {
    json return_KNYCMZl=json({});
    return serialize_VkPhysicalDeviceMultiviewFeatures(*((VkPhysicalDeviceMultiviewFeatures*)(name)));}();
return return_oWQUUJt;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiviewFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiviewFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_txsKlUp=json({});
    
        if (((VkPhysicalDeviceMultiviewFeaturesKHR*)(name))==NULL){
            return_txsKlUp["null"]=true;
            return return_txsKlUp;
        }
        return_txsKlUp=[&]() {
    json return_xsgamFo=json({});
    return serialize_VkPhysicalDeviceMultiviewFeaturesKHR(*((VkPhysicalDeviceMultiviewFeaturesKHR*)(name)));}();
return return_txsKlUp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiviewProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiviewProperties...\n");
        json result;
        result=[&]() {
    json return_zRuOTzo=json({});
    
        if (((VkPhysicalDeviceMultiviewProperties*)(name))==NULL){
            return_zRuOTzo["null"]=true;
            return return_zRuOTzo;
        }
        return_zRuOTzo=[&]() {
    json return_eoPcIAy=json({});
    return serialize_VkPhysicalDeviceMultiviewProperties(*((VkPhysicalDeviceMultiviewProperties*)(name)));}();
return return_zRuOTzo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiviewPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiviewPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_CnCFvNe=json({});
    
        if (((VkPhysicalDeviceMultiviewPropertiesKHR*)(name))==NULL){
            return_CnCFvNe["null"]=true;
            return return_CnCFvNe;
        }
        return_CnCFvNe=[&]() {
    json return_wIMjNFG=json({});
    return serialize_VkPhysicalDeviceMultiviewPropertiesKHR(*((VkPhysicalDeviceMultiviewPropertiesKHR*)(name)));}();
return return_CnCFvNe;}();
        return result;
        }
    

        json serialize_VkRenderPassMultiviewCreateInfo_pNext(const void* name){
        printf("Serializing VkRenderPassMultiviewCreateInfo...\n");
        json result;
        result=[&]() {
    json return_dIcnrlH=json({});
    
        if (((VkRenderPassMultiviewCreateInfo*)(name))==NULL){
            return_dIcnrlH["null"]=true;
            return return_dIcnrlH;
        }
        return_dIcnrlH=[&]() {
    json return_CgXeMJr=json({});
    return serialize_VkRenderPassMultiviewCreateInfo(*((VkRenderPassMultiviewCreateInfo*)(name)));}();
return return_dIcnrlH;}();
        return result;
        }
    

        json serialize_VkRenderPassMultiviewCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkRenderPassMultiviewCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_CIlQnmE=json({});
    
        if (((VkRenderPassMultiviewCreateInfoKHR*)(name))==NULL){
            return_CIlQnmE["null"]=true;
            return return_CIlQnmE;
        }
        return_CIlQnmE=[&]() {
    json return_BbCxlUf=json({});
    return serialize_VkRenderPassMultiviewCreateInfoKHR(*((VkRenderPassMultiviewCreateInfoKHR*)(name)));}();
return return_CIlQnmE;}();
        return result;
        }
    

        json serialize_VkSurfaceCapabilities2EXT_pNext(const void* name){
        printf("Serializing VkSurfaceCapabilities2EXT...\n");
        json result;
        result=[&]() {
    json return_YWkbWcc=json({});
    
        if (((VkSurfaceCapabilities2EXT*)(name))==NULL){
            return_YWkbWcc["null"]=true;
            return return_YWkbWcc;
        }
        return_YWkbWcc=[&]() {
    json return_AJVeyfU=json({});
    return serialize_VkSurfaceCapabilities2EXT(*((VkSurfaceCapabilities2EXT*)(name)));}();
return return_YWkbWcc;}();
        return result;
        }
    

        json serialize_VkDisplayPowerInfoEXT_pNext(const void* name){
        printf("Serializing VkDisplayPowerInfoEXT...\n");
        json result;
        result=[&]() {
    json return_NIgFHnB=json({});
    
        if (((VkDisplayPowerInfoEXT*)(name))==NULL){
            return_NIgFHnB["null"]=true;
            return return_NIgFHnB;
        }
        return_NIgFHnB=[&]() {
    json return_zMPaCGt=json({});
    return serialize_VkDisplayPowerInfoEXT(*((VkDisplayPowerInfoEXT*)(name)));}();
return return_NIgFHnB;}();
        return result;
        }
    

        json serialize_VkDeviceEventInfoEXT_pNext(const void* name){
        printf("Serializing VkDeviceEventInfoEXT...\n");
        json result;
        result=[&]() {
    json return_njFRBQz=json({});
    
        if (((VkDeviceEventInfoEXT*)(name))==NULL){
            return_njFRBQz["null"]=true;
            return return_njFRBQz;
        }
        return_njFRBQz=[&]() {
    json return_FkhMrYZ=json({});
    return serialize_VkDeviceEventInfoEXT(*((VkDeviceEventInfoEXT*)(name)));}();
return return_njFRBQz;}();
        return result;
        }
    

        json serialize_VkDisplayEventInfoEXT_pNext(const void* name){
        printf("Serializing VkDisplayEventInfoEXT...\n");
        json result;
        result=[&]() {
    json return_mziPbqc=json({});
    
        if (((VkDisplayEventInfoEXT*)(name))==NULL){
            return_mziPbqc["null"]=true;
            return return_mziPbqc;
        }
        return_mziPbqc=[&]() {
    json return_zQuccme=json({});
    return serialize_VkDisplayEventInfoEXT(*((VkDisplayEventInfoEXT*)(name)));}();
return return_mziPbqc;}();
        return result;
        }
    

        json serialize_VkSwapchainCounterCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkSwapchainCounterCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_DvRVfNK=json({});
    
        if (((VkSwapchainCounterCreateInfoEXT*)(name))==NULL){
            return_DvRVfNK["null"]=true;
            return return_DvRVfNK;
        }
        return_DvRVfNK=[&]() {
    json return_lHtxEgB=json({});
    return serialize_VkSwapchainCounterCreateInfoEXT(*((VkSwapchainCounterCreateInfoEXT*)(name)));}();
return return_DvRVfNK;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceGroupProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceGroupProperties...\n");
        json result;
        result=[&]() {
    json return_KUWTbCB=json({});
    
        if (((VkPhysicalDeviceGroupProperties*)(name))==NULL){
            return_KUWTbCB["null"]=true;
            return return_KUWTbCB;
        }
        return_KUWTbCB=[&]() {
    json return_KMtMORz=json({});
    return serialize_VkPhysicalDeviceGroupProperties(*((VkPhysicalDeviceGroupProperties*)(name)));}();
return return_KUWTbCB;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceGroupPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceGroupPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_EuZXhGk=json({});
    
        if (((VkPhysicalDeviceGroupPropertiesKHR*)(name))==NULL){
            return_EuZXhGk["null"]=true;
            return return_EuZXhGk;
        }
        return_EuZXhGk=[&]() {
    json return_hBbtxIU=json({});
    return serialize_VkPhysicalDeviceGroupPropertiesKHR(*((VkPhysicalDeviceGroupPropertiesKHR*)(name)));}();
return return_EuZXhGk;}();
        return result;
        }
    

        json serialize_VkMemoryAllocateFlagsInfo_pNext(const void* name){
        printf("Serializing VkMemoryAllocateFlagsInfo...\n");
        json result;
        result=[&]() {
    json return_yEypUip=json({});
    
        if (((VkMemoryAllocateFlagsInfo*)(name))==NULL){
            return_yEypUip["null"]=true;
            return return_yEypUip;
        }
        return_yEypUip=[&]() {
    json return_Xkdacoi=json({});
    return serialize_VkMemoryAllocateFlagsInfo(*((VkMemoryAllocateFlagsInfo*)(name)));}();
return return_yEypUip;}();
        return result;
        }
    

        json serialize_VkMemoryAllocateFlagsInfoKHR_pNext(const void* name){
        printf("Serializing VkMemoryAllocateFlagsInfoKHR...\n");
        json result;
        result=[&]() {
    json return_Wwounhj=json({});
    
        if (((VkMemoryAllocateFlagsInfoKHR*)(name))==NULL){
            return_Wwounhj["null"]=true;
            return return_Wwounhj;
        }
        return_Wwounhj=[&]() {
    json return_wlaOpJt=json({});
    return serialize_VkMemoryAllocateFlagsInfoKHR(*((VkMemoryAllocateFlagsInfoKHR*)(name)));}();
return return_Wwounhj;}();
        return result;
        }
    

        json serialize_VkBindBufferMemoryInfo_pNext(const void* name){
        printf("Serializing VkBindBufferMemoryInfo...\n");
        json result;
        result=[&]() {
    json return_nnsHbwQ=json({});
    
        if (((VkBindBufferMemoryInfo*)(name))==NULL){
            return_nnsHbwQ["null"]=true;
            return return_nnsHbwQ;
        }
        return_nnsHbwQ=[&]() {
    json return_pIDMjaf=json({});
    return serialize_VkBindBufferMemoryInfo(*((VkBindBufferMemoryInfo*)(name)));}();
return return_nnsHbwQ;}();
        return result;
        }
    

        json serialize_VkBindBufferMemoryInfoKHR_pNext(const void* name){
        printf("Serializing VkBindBufferMemoryInfoKHR...\n");
        json result;
        result=[&]() {
    json return_TctXPgm=json({});
    
        if (((VkBindBufferMemoryInfoKHR*)(name))==NULL){
            return_TctXPgm["null"]=true;
            return return_TctXPgm;
        }
        return_TctXPgm=[&]() {
    json return_CazlAvw=json({});
    return serialize_VkBindBufferMemoryInfoKHR(*((VkBindBufferMemoryInfoKHR*)(name)));}();
return return_TctXPgm;}();
        return result;
        }
    

        json serialize_VkBindBufferMemoryDeviceGroupInfo_pNext(const void* name){
        printf("Serializing VkBindBufferMemoryDeviceGroupInfo...\n");
        json result;
        result=[&]() {
    json return_TuLQOLW=json({});
    
        if (((VkBindBufferMemoryDeviceGroupInfo*)(name))==NULL){
            return_TuLQOLW["null"]=true;
            return return_TuLQOLW;
        }
        return_TuLQOLW=[&]() {
    json return_bjnhCYt=json({});
    return serialize_VkBindBufferMemoryDeviceGroupInfo(*((VkBindBufferMemoryDeviceGroupInfo*)(name)));}();
return return_TuLQOLW;}();
        return result;
        }
    

        json serialize_VkBindBufferMemoryDeviceGroupInfoKHR_pNext(const void* name){
        printf("Serializing VkBindBufferMemoryDeviceGroupInfoKHR...\n");
        json result;
        result=[&]() {
    json return_kCCNZAY=json({});
    
        if (((VkBindBufferMemoryDeviceGroupInfoKHR*)(name))==NULL){
            return_kCCNZAY["null"]=true;
            return return_kCCNZAY;
        }
        return_kCCNZAY=[&]() {
    json return_QFeSLVY=json({});
    return serialize_VkBindBufferMemoryDeviceGroupInfoKHR(*((VkBindBufferMemoryDeviceGroupInfoKHR*)(name)));}();
return return_kCCNZAY;}();
        return result;
        }
    

        json serialize_VkBindImageMemoryInfo_pNext(const void* name){
        printf("Serializing VkBindImageMemoryInfo...\n");
        json result;
        result=[&]() {
    json return_umxlPYw=json({});
    
        if (((VkBindImageMemoryInfo*)(name))==NULL){
            return_umxlPYw["null"]=true;
            return return_umxlPYw;
        }
        return_umxlPYw=[&]() {
    json return_eqhgSTZ=json({});
    return serialize_VkBindImageMemoryInfo(*((VkBindImageMemoryInfo*)(name)));}();
return return_umxlPYw;}();
        return result;
        }
    

        json serialize_VkBindImageMemoryInfoKHR_pNext(const void* name){
        printf("Serializing VkBindImageMemoryInfoKHR...\n");
        json result;
        result=[&]() {
    json return_BcRgIDp=json({});
    
        if (((VkBindImageMemoryInfoKHR*)(name))==NULL){
            return_BcRgIDp["null"]=true;
            return return_BcRgIDp;
        }
        return_BcRgIDp=[&]() {
    json return_HbstHQM=json({});
    return serialize_VkBindImageMemoryInfoKHR(*((VkBindImageMemoryInfoKHR*)(name)));}();
return return_BcRgIDp;}();
        return result;
        }
    

        json serialize_VkBindImageMemoryDeviceGroupInfo_pNext(const void* name){
        printf("Serializing VkBindImageMemoryDeviceGroupInfo...\n");
        json result;
        result=[&]() {
    json return_cNqcuFX=json({});
    
        if (((VkBindImageMemoryDeviceGroupInfo*)(name))==NULL){
            return_cNqcuFX["null"]=true;
            return return_cNqcuFX;
        }
        return_cNqcuFX=[&]() {
    json return_Rpxsfci=json({});
    return serialize_VkBindImageMemoryDeviceGroupInfo(*((VkBindImageMemoryDeviceGroupInfo*)(name)));}();
return return_cNqcuFX;}();
        return result;
        }
    

        json serialize_VkBindImageMemoryDeviceGroupInfoKHR_pNext(const void* name){
        printf("Serializing VkBindImageMemoryDeviceGroupInfoKHR...\n");
        json result;
        result=[&]() {
    json return_aRFgZyN=json({});
    
        if (((VkBindImageMemoryDeviceGroupInfoKHR*)(name))==NULL){
            return_aRFgZyN["null"]=true;
            return return_aRFgZyN;
        }
        return_aRFgZyN=[&]() {
    json return_tcefYxG=json({});
    return serialize_VkBindImageMemoryDeviceGroupInfoKHR(*((VkBindImageMemoryDeviceGroupInfoKHR*)(name)));}();
return return_aRFgZyN;}();
        return result;
        }
    

        json serialize_VkDeviceGroupRenderPassBeginInfo_pNext(const void* name){
        printf("Serializing VkDeviceGroupRenderPassBeginInfo...\n");
        json result;
        result=[&]() {
    json return_PfFhioW=json({});
    
        if (((VkDeviceGroupRenderPassBeginInfo*)(name))==NULL){
            return_PfFhioW["null"]=true;
            return return_PfFhioW;
        }
        return_PfFhioW=[&]() {
    json return_hxgzgKd=json({});
    return serialize_VkDeviceGroupRenderPassBeginInfo(*((VkDeviceGroupRenderPassBeginInfo*)(name)));}();
return return_PfFhioW;}();
        return result;
        }
    

        json serialize_VkDeviceGroupRenderPassBeginInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupRenderPassBeginInfoKHR...\n");
        json result;
        result=[&]() {
    json return_HVeTwDy=json({});
    
        if (((VkDeviceGroupRenderPassBeginInfoKHR*)(name))==NULL){
            return_HVeTwDy["null"]=true;
            return return_HVeTwDy;
        }
        return_HVeTwDy=[&]() {
    json return_OmAiUXN=json({});
    return serialize_VkDeviceGroupRenderPassBeginInfoKHR(*((VkDeviceGroupRenderPassBeginInfoKHR*)(name)));}();
return return_HVeTwDy;}();
        return result;
        }
    

        json serialize_VkDeviceGroupCommandBufferBeginInfo_pNext(const void* name){
        printf("Serializing VkDeviceGroupCommandBufferBeginInfo...\n");
        json result;
        result=[&]() {
    json return_fdPYrUq=json({});
    
        if (((VkDeviceGroupCommandBufferBeginInfo*)(name))==NULL){
            return_fdPYrUq["null"]=true;
            return return_fdPYrUq;
        }
        return_fdPYrUq=[&]() {
    json return_hfIImAn=json({});
    return serialize_VkDeviceGroupCommandBufferBeginInfo(*((VkDeviceGroupCommandBufferBeginInfo*)(name)));}();
return return_fdPYrUq;}();
        return result;
        }
    

        json serialize_VkDeviceGroupCommandBufferBeginInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupCommandBufferBeginInfoKHR...\n");
        json result;
        result=[&]() {
    json return_hQjYhxh=json({});
    
        if (((VkDeviceGroupCommandBufferBeginInfoKHR*)(name))==NULL){
            return_hQjYhxh["null"]=true;
            return return_hQjYhxh;
        }
        return_hQjYhxh=[&]() {
    json return_ccScWmV=json({});
    return serialize_VkDeviceGroupCommandBufferBeginInfoKHR(*((VkDeviceGroupCommandBufferBeginInfoKHR*)(name)));}();
return return_hQjYhxh;}();
        return result;
        }
    

        json serialize_VkDeviceGroupSubmitInfo_pNext(const void* name){
        printf("Serializing VkDeviceGroupSubmitInfo...\n");
        json result;
        result=[&]() {
    json return_AhbbvYO=json({});
    
        if (((VkDeviceGroupSubmitInfo*)(name))==NULL){
            return_AhbbvYO["null"]=true;
            return return_AhbbvYO;
        }
        return_AhbbvYO=[&]() {
    json return_SFrBMKT=json({});
    return serialize_VkDeviceGroupSubmitInfo(*((VkDeviceGroupSubmitInfo*)(name)));}();
return return_AhbbvYO;}();
        return result;
        }
    

        json serialize_VkDeviceGroupSubmitInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupSubmitInfoKHR...\n");
        json result;
        result=[&]() {
    json return_tzuwyWq=json({});
    
        if (((VkDeviceGroupSubmitInfoKHR*)(name))==NULL){
            return_tzuwyWq["null"]=true;
            return return_tzuwyWq;
        }
        return_tzuwyWq=[&]() {
    json return_uZtcztE=json({});
    return serialize_VkDeviceGroupSubmitInfoKHR(*((VkDeviceGroupSubmitInfoKHR*)(name)));}();
return return_tzuwyWq;}();
        return result;
        }
    

        json serialize_VkDeviceGroupBindSparseInfo_pNext(const void* name){
        printf("Serializing VkDeviceGroupBindSparseInfo...\n");
        json result;
        result=[&]() {
    json return_BorRMJA=json({});
    
        if (((VkDeviceGroupBindSparseInfo*)(name))==NULL){
            return_BorRMJA["null"]=true;
            return return_BorRMJA;
        }
        return_BorRMJA=[&]() {
    json return_JFZMoFq=json({});
    return serialize_VkDeviceGroupBindSparseInfo(*((VkDeviceGroupBindSparseInfo*)(name)));}();
return return_BorRMJA;}();
        return result;
        }
    

        json serialize_VkDeviceGroupBindSparseInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupBindSparseInfoKHR...\n");
        json result;
        result=[&]() {
    json return_nmKcBjk=json({});
    
        if (((VkDeviceGroupBindSparseInfoKHR*)(name))==NULL){
            return_nmKcBjk["null"]=true;
            return return_nmKcBjk;
        }
        return_nmKcBjk=[&]() {
    json return_lqCzZcg=json({});
    return serialize_VkDeviceGroupBindSparseInfoKHR(*((VkDeviceGroupBindSparseInfoKHR*)(name)));}();
return return_nmKcBjk;}();
        return result;
        }
    

        json serialize_VkDeviceGroupPresentCapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupPresentCapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_UXEdezX=json({});
    
        if (((VkDeviceGroupPresentCapabilitiesKHR*)(name))==NULL){
            return_UXEdezX["null"]=true;
            return return_UXEdezX;
        }
        return_UXEdezX=[&]() {
    json return_tUByWsC=json({});
    return serialize_VkDeviceGroupPresentCapabilitiesKHR(*((VkDeviceGroupPresentCapabilitiesKHR*)(name)));}();
return return_UXEdezX;}();
        return result;
        }
    

        json serialize_VkImageSwapchainCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkImageSwapchainCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_qYyDUwl=json({});
    
        if (((VkImageSwapchainCreateInfoKHR*)(name))==NULL){
            return_qYyDUwl["null"]=true;
            return return_qYyDUwl;
        }
        return_qYyDUwl=[&]() {
    json return_UxfIhTY=json({});
    return serialize_VkImageSwapchainCreateInfoKHR(*((VkImageSwapchainCreateInfoKHR*)(name)));}();
return return_qYyDUwl;}();
        return result;
        }
    

        json serialize_VkBindImageMemorySwapchainInfoKHR_pNext(const void* name){
        printf("Serializing VkBindImageMemorySwapchainInfoKHR...\n");
        json result;
        result=[&]() {
    json return_QKbGVFd=json({});
    
        if (((VkBindImageMemorySwapchainInfoKHR*)(name))==NULL){
            return_QKbGVFd["null"]=true;
            return return_QKbGVFd;
        }
        return_QKbGVFd=[&]() {
    json return_IGrKVUp=json({});
    return serialize_VkBindImageMemorySwapchainInfoKHR(*((VkBindImageMemorySwapchainInfoKHR*)(name)));}();
return return_QKbGVFd;}();
        return result;
        }
    

        json serialize_VkAcquireNextImageInfoKHR_pNext(const void* name){
        printf("Serializing VkAcquireNextImageInfoKHR...\n");
        json result;
        result=[&]() {
    json return_LVJbwYV=json({});
    
        if (((VkAcquireNextImageInfoKHR*)(name))==NULL){
            return_LVJbwYV["null"]=true;
            return return_LVJbwYV;
        }
        return_LVJbwYV=[&]() {
    json return_mMXzbPp=json({});
    return serialize_VkAcquireNextImageInfoKHR(*((VkAcquireNextImageInfoKHR*)(name)));}();
return return_LVJbwYV;}();
        return result;
        }
    

        json serialize_VkDeviceGroupPresentInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupPresentInfoKHR...\n");
        json result;
        result=[&]() {
    json return_IrBOPAW=json({});
    
        if (((VkDeviceGroupPresentInfoKHR*)(name))==NULL){
            return_IrBOPAW["null"]=true;
            return return_IrBOPAW;
        }
        return_IrBOPAW=[&]() {
    json return_ApuZhFT=json({});
    return serialize_VkDeviceGroupPresentInfoKHR(*((VkDeviceGroupPresentInfoKHR*)(name)));}();
return return_IrBOPAW;}();
        return result;
        }
    

        json serialize_VkDeviceGroupDeviceCreateInfo_pNext(const void* name){
        printf("Serializing VkDeviceGroupDeviceCreateInfo...\n");
        json result;
        result=[&]() {
    json return_WIKNePq=json({});
    
        if (((VkDeviceGroupDeviceCreateInfo*)(name))==NULL){
            return_WIKNePq["null"]=true;
            return return_WIKNePq;
        }
        return_WIKNePq=[&]() {
    json return_xdIXThT=json({});
    return serialize_VkDeviceGroupDeviceCreateInfo(*((VkDeviceGroupDeviceCreateInfo*)(name)));}();
return return_WIKNePq;}();
        return result;
        }
    

        json serialize_VkDeviceGroupDeviceCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupDeviceCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_dKBTIjy=json({});
    
        if (((VkDeviceGroupDeviceCreateInfoKHR*)(name))==NULL){
            return_dKBTIjy["null"]=true;
            return return_dKBTIjy;
        }
        return_dKBTIjy=[&]() {
    json return_LAiTzpS=json({});
    return serialize_VkDeviceGroupDeviceCreateInfoKHR(*((VkDeviceGroupDeviceCreateInfoKHR*)(name)));}();
return return_dKBTIjy;}();
        return result;
        }
    

        json serialize_VkDeviceGroupSwapchainCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceGroupSwapchainCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_Yxembry=json({});
    
        if (((VkDeviceGroupSwapchainCreateInfoKHR*)(name))==NULL){
            return_Yxembry["null"]=true;
            return return_Yxembry;
        }
        return_Yxembry=[&]() {
    json return_ZzrKxNz=json({});
    return serialize_VkDeviceGroupSwapchainCreateInfoKHR(*((VkDeviceGroupSwapchainCreateInfoKHR*)(name)));}();
return return_Yxembry;}();
        return result;
        }
    

        json serialize_VkDescriptorUpdateTemplateEntry_pNext(const void* name){
        printf("Serializing VkDescriptorUpdateTemplateEntry...\n");
        json result;
        result=[&]() {
    json return_GnlrPYN=json({});
    
        if (((VkDescriptorUpdateTemplateEntry*)(name))==NULL){
            return_GnlrPYN["null"]=true;
            return return_GnlrPYN;
        }
        return_GnlrPYN=[&]() {
    json return_mxCXJnC=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(*((VkDescriptorUpdateTemplateEntry*)(name)));}();
return return_GnlrPYN;}();
        return result;
        }
    

        json serialize_VkDescriptorUpdateTemplateEntryKHR_pNext(const void* name){
        printf("Serializing VkDescriptorUpdateTemplateEntryKHR...\n");
        json result;
        result=[&]() {
    json return_zcbVsyN=json({});
    
        if (((VkDescriptorUpdateTemplateEntryKHR*)(name))==NULL){
            return_zcbVsyN["null"]=true;
            return return_zcbVsyN;
        }
        return_zcbVsyN=[&]() {
    json return_gVQDHox=json({});
    return serialize_VkDescriptorUpdateTemplateEntryKHR(*((VkDescriptorUpdateTemplateEntryKHR*)(name)));}();
return return_zcbVsyN;}();
        return result;
        }
    

        json serialize_VkDescriptorUpdateTemplateCreateInfo_pNext(const void* name){
        printf("Serializing VkDescriptorUpdateTemplateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_FPcEhUa=json({});
    
        if (((VkDescriptorUpdateTemplateCreateInfo*)(name))==NULL){
            return_FPcEhUa["null"]=true;
            return return_FPcEhUa;
        }
        return_FPcEhUa=[&]() {
    json return_thqdRaL=json({});
    return serialize_VkDescriptorUpdateTemplateCreateInfo(*((VkDescriptorUpdateTemplateCreateInfo*)(name)));}();
return return_FPcEhUa;}();
        return result;
        }
    

        json serialize_VkDescriptorUpdateTemplateCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkDescriptorUpdateTemplateCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_gDnOfcC=json({});
    
        if (((VkDescriptorUpdateTemplateCreateInfoKHR*)(name))==NULL){
            return_gDnOfcC["null"]=true;
            return return_gDnOfcC;
        }
        return_gDnOfcC=[&]() {
    json return_dlOexVx=json({});
    return serialize_VkDescriptorUpdateTemplateCreateInfoKHR(*((VkDescriptorUpdateTemplateCreateInfoKHR*)(name)));}();
return return_gDnOfcC;}();
        return result;
        }
    

        json serialize_VkXYColorEXT_pNext(const void* name){
        printf("Serializing VkXYColorEXT...\n");
        json result;
        result=[&]() {
    json return_xwJfNnG=json({});
    
        if (((VkXYColorEXT*)(name))==NULL){
            return_xwJfNnG["null"]=true;
            return return_xwJfNnG;
        }
        return_xwJfNnG=[&]() {
    json return_IcstWyt=json({});
    return serialize_VkXYColorEXT(*((VkXYColorEXT*)(name)));}();
return return_xwJfNnG;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePresentIdFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePresentIdFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_aNbaTlC=json({});
    
        if (((VkPhysicalDevicePresentIdFeaturesKHR*)(name))==NULL){
            return_aNbaTlC["null"]=true;
            return return_aNbaTlC;
        }
        return_aNbaTlC=[&]() {
    json return_wKfCfSf=json({});
    return serialize_VkPhysicalDevicePresentIdFeaturesKHR(*((VkPhysicalDevicePresentIdFeaturesKHR*)(name)));}();
return return_aNbaTlC;}();
        return result;
        }
    

        json serialize_VkPresentIdKHR_pNext(const void* name){
        printf("Serializing VkPresentIdKHR...\n");
        json result;
        result=[&]() {
    json return_imiRqaH=json({});
    
        if (((VkPresentIdKHR*)(name))==NULL){
            return_imiRqaH["null"]=true;
            return return_imiRqaH;
        }
        return_imiRqaH=[&]() {
    json return_QhiSfrb=json({});
    return serialize_VkPresentIdKHR(*((VkPresentIdKHR*)(name)));}();
return return_imiRqaH;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePresentWaitFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePresentWaitFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_RmOpFBi=json({});
    
        if (((VkPhysicalDevicePresentWaitFeaturesKHR*)(name))==NULL){
            return_RmOpFBi["null"]=true;
            return return_RmOpFBi;
        }
        return_RmOpFBi=[&]() {
    json return_SHMFdBk=json({});
    return serialize_VkPhysicalDevicePresentWaitFeaturesKHR(*((VkPhysicalDevicePresentWaitFeaturesKHR*)(name)));}();
return return_RmOpFBi;}();
        return result;
        }
    

        json serialize_VkHdrMetadataEXT_pNext(const void* name){
        printf("Serializing VkHdrMetadataEXT...\n");
        json result;
        result=[&]() {
    json return_WSskPfD=json({});
    
        if (((VkHdrMetadataEXT*)(name))==NULL){
            return_WSskPfD["null"]=true;
            return return_WSskPfD;
        }
        return_WSskPfD=[&]() {
    json return_qBLbvYD=json({});
    return serialize_VkHdrMetadataEXT(*((VkHdrMetadataEXT*)(name)));}();
return return_WSskPfD;}();
        return result;
        }
    

        json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD_pNext(const void* name){
        printf("Serializing VkDisplayNativeHdrSurfaceCapabilitiesAMD...\n");
        json result;
        result=[&]() {
    json return_LiWObLe=json({});
    
        if (((VkDisplayNativeHdrSurfaceCapabilitiesAMD*)(name))==NULL){
            return_LiWObLe["null"]=true;
            return return_LiWObLe;
        }
        return_LiWObLe=[&]() {
    json return_ujysaIs=json({});
    return serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(*((VkDisplayNativeHdrSurfaceCapabilitiesAMD*)(name)));}();
return return_LiWObLe;}();
        return result;
        }
    

        json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD_pNext(const void* name){
        printf("Serializing VkSwapchainDisplayNativeHdrCreateInfoAMD...\n");
        json result;
        result=[&]() {
    json return_lxTUguY=json({});
    
        if (((VkSwapchainDisplayNativeHdrCreateInfoAMD*)(name))==NULL){
            return_lxTUguY["null"]=true;
            return return_lxTUguY;
        }
        return_lxTUguY=[&]() {
    json return_YHMsnvz=json({});
    return serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(*((VkSwapchainDisplayNativeHdrCreateInfoAMD*)(name)));}();
return return_lxTUguY;}();
        return result;
        }
    

        json serialize_VkRefreshCycleDurationGOOGLE_pNext(const void* name){
        printf("Serializing VkRefreshCycleDurationGOOGLE...\n");
        json result;
        result=[&]() {
    json return_rVvOGhM=json({});
    
        if (((VkRefreshCycleDurationGOOGLE*)(name))==NULL){
            return_rVvOGhM["null"]=true;
            return return_rVvOGhM;
        }
        return_rVvOGhM=[&]() {
    json return_EhpvSQF=json({});
    return serialize_VkRefreshCycleDurationGOOGLE(*((VkRefreshCycleDurationGOOGLE*)(name)));}();
return return_rVvOGhM;}();
        return result;
        }
    

        json serialize_VkPastPresentationTimingGOOGLE_pNext(const void* name){
        printf("Serializing VkPastPresentationTimingGOOGLE...\n");
        json result;
        result=[&]() {
    json return_pAQSZwc=json({});
    
        if (((VkPastPresentationTimingGOOGLE*)(name))==NULL){
            return_pAQSZwc["null"]=true;
            return return_pAQSZwc;
        }
        return_pAQSZwc=[&]() {
    json return_LCdUnVY=json({});
    return serialize_VkPastPresentationTimingGOOGLE(*((VkPastPresentationTimingGOOGLE*)(name)));}();
return return_pAQSZwc;}();
        return result;
        }
    

        json serialize_VkPresentTimesInfoGOOGLE_pNext(const void* name){
        printf("Serializing VkPresentTimesInfoGOOGLE...\n");
        json result;
        result=[&]() {
    json return_xBVlCqi=json({});
    
        if (((VkPresentTimesInfoGOOGLE*)(name))==NULL){
            return_xBVlCqi["null"]=true;
            return return_xBVlCqi;
        }
        return_xBVlCqi=[&]() {
    json return_RRovWND=json({});
    return serialize_VkPresentTimesInfoGOOGLE(*((VkPresentTimesInfoGOOGLE*)(name)));}();
return return_xBVlCqi;}();
        return result;
        }
    

        json serialize_VkPresentTimeGOOGLE_pNext(const void* name){
        printf("Serializing VkPresentTimeGOOGLE...\n");
        json result;
        result=[&]() {
    json return_ZSAWojF=json({});
    
        if (((VkPresentTimeGOOGLE*)(name))==NULL){
            return_ZSAWojF["null"]=true;
            return return_ZSAWojF;
        }
        return_ZSAWojF=[&]() {
    json return_ifgluKd=json({});
    return serialize_VkPresentTimeGOOGLE(*((VkPresentTimeGOOGLE*)(name)));}();
return return_ZSAWojF;}();
        return result;
        }
    

        json serialize_VkViewportWScalingNV_pNext(const void* name){
        printf("Serializing VkViewportWScalingNV...\n");
        json result;
        result=[&]() {
    json return_HIhTVPG=json({});
    
        if (((VkViewportWScalingNV*)(name))==NULL){
            return_HIhTVPG["null"]=true;
            return return_HIhTVPG;
        }
        return_HIhTVPG=[&]() {
    json return_BzQumcB=json({});
    return serialize_VkViewportWScalingNV(*((VkViewportWScalingNV*)(name)));}();
return return_HIhTVPG;}();
        return result;
        }
    

        json serialize_VkPipelineViewportWScalingStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineViewportWScalingStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_aInWBxD=json({});
    
        if (((VkPipelineViewportWScalingStateCreateInfoNV*)(name))==NULL){
            return_aInWBxD["null"]=true;
            return return_aInWBxD;
        }
        return_aInWBxD=[&]() {
    json return_KdNGCuk=json({});
    return serialize_VkPipelineViewportWScalingStateCreateInfoNV(*((VkPipelineViewportWScalingStateCreateInfoNV*)(name)));}();
return return_aInWBxD;}();
        return result;
        }
    

        json serialize_VkViewportSwizzleNV_pNext(const void* name){
        printf("Serializing VkViewportSwizzleNV...\n");
        json result;
        result=[&]() {
    json return_NeNwwuA=json({});
    
        if (((VkViewportSwizzleNV*)(name))==NULL){
            return_NeNwwuA["null"]=true;
            return return_NeNwwuA;
        }
        return_NeNwwuA=[&]() {
    json return_knuoaUr=json({});
    return serialize_VkViewportSwizzleNV(*((VkViewportSwizzleNV*)(name)));}();
return return_NeNwwuA;}();
        return result;
        }
    

        json serialize_VkPipelineViewportSwizzleStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineViewportSwizzleStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_IyojVOG=json({});
    
        if (((VkPipelineViewportSwizzleStateCreateInfoNV*)(name))==NULL){
            return_IyojVOG["null"]=true;
            return return_IyojVOG;
        }
        return_IyojVOG=[&]() {
    json return_ObFeGgD=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateInfoNV(*((VkPipelineViewportSwizzleStateCreateInfoNV*)(name)));}();
return return_IyojVOG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDiscardRectanglePropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_cuSWUaN=json({});
    
        if (((VkPhysicalDeviceDiscardRectanglePropertiesEXT*)(name))==NULL){
            return_cuSWUaN["null"]=true;
            return return_cuSWUaN;
        }
        return_cuSWUaN=[&]() {
    json return_JFrqGCw=json({});
    return serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(*((VkPhysicalDeviceDiscardRectanglePropertiesEXT*)(name)));}();
return return_cuSWUaN;}();
        return result;
        }
    

        json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineDiscardRectangleStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_rNFTtCF=json({});
    
        if (((VkPipelineDiscardRectangleStateCreateInfoEXT*)(name))==NULL){
            return_rNFTtCF["null"]=true;
            return return_rNFTtCF;
        }
        return_rNFTtCF=[&]() {
    json return_qqiLSjS=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(*((VkPipelineDiscardRectangleStateCreateInfoEXT*)(name)));}();
return return_rNFTtCF;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX...\n");
        json result;
        result=[&]() {
    json return_BSsQMtw=json({});
    
        if (((VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX*)(name))==NULL){
            return_BSsQMtw["null"]=true;
            return return_BSsQMtw;
        }
        return_BSsQMtw=[&]() {
    json return_XZZCyGL=json({});
    return serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(*((VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX*)(name)));}();
return return_BSsQMtw;}();
        return result;
        }
    

        json serialize_VkInputAttachmentAspectReference_pNext(const void* name){
        printf("Serializing VkInputAttachmentAspectReference...\n");
        json result;
        result=[&]() {
    json return_vQpQWaA=json({});
    
        if (((VkInputAttachmentAspectReference*)(name))==NULL){
            return_vQpQWaA["null"]=true;
            return return_vQpQWaA;
        }
        return_vQpQWaA=[&]() {
    json return_KfabMtL=json({});
    return serialize_VkInputAttachmentAspectReference(*((VkInputAttachmentAspectReference*)(name)));}();
return return_vQpQWaA;}();
        return result;
        }
    

        json serialize_VkInputAttachmentAspectReferenceKHR_pNext(const void* name){
        printf("Serializing VkInputAttachmentAspectReferenceKHR...\n");
        json result;
        result=[&]() {
    json return_MdzvpJx=json({});
    
        if (((VkInputAttachmentAspectReferenceKHR*)(name))==NULL){
            return_MdzvpJx["null"]=true;
            return return_MdzvpJx;
        }
        return_MdzvpJx=[&]() {
    json return_NgqjJif=json({});
    return serialize_VkInputAttachmentAspectReferenceKHR(*((VkInputAttachmentAspectReferenceKHR*)(name)));}();
return return_MdzvpJx;}();
        return result;
        }
    

        json serialize_VkRenderPassInputAttachmentAspectCreateInfo_pNext(const void* name){
        printf("Serializing VkRenderPassInputAttachmentAspectCreateInfo...\n");
        json result;
        result=[&]() {
    json return_JZrYpiJ=json({});
    
        if (((VkRenderPassInputAttachmentAspectCreateInfo*)(name))==NULL){
            return_JZrYpiJ["null"]=true;
            return return_JZrYpiJ;
        }
        return_JZrYpiJ=[&]() {
    json return_JHUncxa=json({});
    return serialize_VkRenderPassInputAttachmentAspectCreateInfo(*((VkRenderPassInputAttachmentAspectCreateInfo*)(name)));}();
return return_JZrYpiJ;}();
        return result;
        }
    

        json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkRenderPassInputAttachmentAspectCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_zJTbOgt=json({});
    
        if (((VkRenderPassInputAttachmentAspectCreateInfoKHR*)(name))==NULL){
            return_zJTbOgt["null"]=true;
            return return_zJTbOgt;
        }
        return_zJTbOgt=[&]() {
    json return_MWJToUq=json({});
    return serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(*((VkRenderPassInputAttachmentAspectCreateInfoKHR*)(name)));}();
return return_zJTbOgt;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSurfaceInfo2KHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSurfaceInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_HZHBywL=json({});
    
        if (((VkPhysicalDeviceSurfaceInfo2KHR*)(name))==NULL){
            return_HZHBywL["null"]=true;
            return return_HZHBywL;
        }
        return_HZHBywL=[&]() {
    json return_ukvhWiq=json({});
    return serialize_VkPhysicalDeviceSurfaceInfo2KHR(*((VkPhysicalDeviceSurfaceInfo2KHR*)(name)));}();
return return_HZHBywL;}();
        return result;
        }
    

        json serialize_VkSurfaceCapabilities2KHR_pNext(const void* name){
        printf("Serializing VkSurfaceCapabilities2KHR...\n");
        json result;
        result=[&]() {
    json return_usCprvr=json({});
    
        if (((VkSurfaceCapabilities2KHR*)(name))==NULL){
            return_usCprvr["null"]=true;
            return return_usCprvr;
        }
        return_usCprvr=[&]() {
    json return_oLtQsMB=json({});
    return serialize_VkSurfaceCapabilities2KHR(*((VkSurfaceCapabilities2KHR*)(name)));}();
return return_usCprvr;}();
        return result;
        }
    

        json serialize_VkSurfaceFormat2KHR_pNext(const void* name){
        printf("Serializing VkSurfaceFormat2KHR...\n");
        json result;
        result=[&]() {
    json return_kJcTjaN=json({});
    
        if (((VkSurfaceFormat2KHR*)(name))==NULL){
            return_kJcTjaN["null"]=true;
            return return_kJcTjaN;
        }
        return_kJcTjaN=[&]() {
    json return_cgdxCbk=json({});
    return serialize_VkSurfaceFormat2KHR(*((VkSurfaceFormat2KHR*)(name)));}();
return return_kJcTjaN;}();
        return result;
        }
    

        json serialize_VkDisplayProperties2KHR_pNext(const void* name){
        printf("Serializing VkDisplayProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_RmJBtUi=json({});
    
        if (((VkDisplayProperties2KHR*)(name))==NULL){
            return_RmJBtUi["null"]=true;
            return return_RmJBtUi;
        }
        return_RmJBtUi=[&]() {
    json return_AERLbOI=json({});
    return serialize_VkDisplayProperties2KHR(*((VkDisplayProperties2KHR*)(name)));}();
return return_RmJBtUi;}();
        return result;
        }
    

        json serialize_VkDisplayPlaneProperties2KHR_pNext(const void* name){
        printf("Serializing VkDisplayPlaneProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_UKApwHC=json({});
    
        if (((VkDisplayPlaneProperties2KHR*)(name))==NULL){
            return_UKApwHC["null"]=true;
            return return_UKApwHC;
        }
        return_UKApwHC=[&]() {
    json return_PjGiBXR=json({});
    return serialize_VkDisplayPlaneProperties2KHR(*((VkDisplayPlaneProperties2KHR*)(name)));}();
return return_UKApwHC;}();
        return result;
        }
    

        json serialize_VkDisplayModeProperties2KHR_pNext(const void* name){
        printf("Serializing VkDisplayModeProperties2KHR...\n");
        json result;
        result=[&]() {
    json return_CnkNYUo=json({});
    
        if (((VkDisplayModeProperties2KHR*)(name))==NULL){
            return_CnkNYUo["null"]=true;
            return return_CnkNYUo;
        }
        return_CnkNYUo=[&]() {
    json return_XbxMFcl=json({});
    return serialize_VkDisplayModeProperties2KHR(*((VkDisplayModeProperties2KHR*)(name)));}();
return return_CnkNYUo;}();
        return result;
        }
    

        json serialize_VkDisplayPlaneInfo2KHR_pNext(const void* name){
        printf("Serializing VkDisplayPlaneInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_ThXjjBs=json({});
    
        if (((VkDisplayPlaneInfo2KHR*)(name))==NULL){
            return_ThXjjBs["null"]=true;
            return return_ThXjjBs;
        }
        return_ThXjjBs=[&]() {
    json return_IcGgkOh=json({});
    return serialize_VkDisplayPlaneInfo2KHR(*((VkDisplayPlaneInfo2KHR*)(name)));}();
return return_ThXjjBs;}();
        return result;
        }
    

        json serialize_VkDisplayPlaneCapabilities2KHR_pNext(const void* name){
        printf("Serializing VkDisplayPlaneCapabilities2KHR...\n");
        json result;
        result=[&]() {
    json return_ufrCJck=json({});
    
        if (((VkDisplayPlaneCapabilities2KHR*)(name))==NULL){
            return_ufrCJck["null"]=true;
            return return_ufrCJck;
        }
        return_ufrCJck=[&]() {
    json return_tbOxdFP=json({});
    return serialize_VkDisplayPlaneCapabilities2KHR(*((VkDisplayPlaneCapabilities2KHR*)(name)));}();
return return_ufrCJck;}();
        return result;
        }
    

        json serialize_VkSharedPresentSurfaceCapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkSharedPresentSurfaceCapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_yvvUNEl=json({});
    
        if (((VkSharedPresentSurfaceCapabilitiesKHR*)(name))==NULL){
            return_yvvUNEl["null"]=true;
            return return_yvvUNEl;
        }
        return_yvvUNEl=[&]() {
    json return_FcMWUWc=json({});
    return serialize_VkSharedPresentSurfaceCapabilitiesKHR(*((VkSharedPresentSurfaceCapabilitiesKHR*)(name)));}();
return return_yvvUNEl;}();
        return result;
        }
    

        json serialize_VkPhysicalDevice16BitStorageFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDevice16BitStorageFeatures...\n");
        json result;
        result=[&]() {
    json return_sirChEt=json({});
    
        if (((VkPhysicalDevice16BitStorageFeatures*)(name))==NULL){
            return_sirChEt["null"]=true;
            return return_sirChEt;
        }
        return_sirChEt=[&]() {
    json return_lBxSHKZ=json({});
    return serialize_VkPhysicalDevice16BitStorageFeatures(*((VkPhysicalDevice16BitStorageFeatures*)(name)));}();
return return_sirChEt;}();
        return result;
        }
    

        json serialize_VkPhysicalDevice16BitStorageFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevice16BitStorageFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_jTytLMp=json({});
    
        if (((VkPhysicalDevice16BitStorageFeaturesKHR*)(name))==NULL){
            return_jTytLMp["null"]=true;
            return return_jTytLMp;
        }
        return_jTytLMp=[&]() {
    json return_NGkGdNm=json({});
    return serialize_VkPhysicalDevice16BitStorageFeaturesKHR(*((VkPhysicalDevice16BitStorageFeaturesKHR*)(name)));}();
return return_jTytLMp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubgroupProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubgroupProperties...\n");
        json result;
        result=[&]() {
    json return_aIuNPGP=json({});
    
        if (((VkPhysicalDeviceSubgroupProperties*)(name))==NULL){
            return_aIuNPGP["null"]=true;
            return return_aIuNPGP;
        }
        return_aIuNPGP=[&]() {
    json return_UqBusmu=json({});
    return serialize_VkPhysicalDeviceSubgroupProperties(*((VkPhysicalDeviceSubgroupProperties*)(name)));}();
return return_aIuNPGP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures...\n");
        json result;
        result=[&]() {
    json return_feelhcm=json({});
    
        if (((VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures*)(name))==NULL){
            return_feelhcm["null"]=true;
            return return_feelhcm;
        }
        return_feelhcm=[&]() {
    json return_KOaHRpD=json({});
    return serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(*((VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures*)(name)));}();
return return_feelhcm;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_tXvekky=json({});
    
        if (((VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR*)(name))==NULL){
            return_tXvekky["null"]=true;
            return return_tXvekky;
        }
        return_tXvekky=[&]() {
    json return_XXgbqHo=json({});
    return serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(*((VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR*)(name)));}();
return return_tXvekky;}();
        return result;
        }
    

        json serialize_VkBufferMemoryRequirementsInfo2_pNext(const void* name){
        printf("Serializing VkBufferMemoryRequirementsInfo2...\n");
        json result;
        result=[&]() {
    json return_jPmsmJG=json({});
    
        if (((VkBufferMemoryRequirementsInfo2*)(name))==NULL){
            return_jPmsmJG["null"]=true;
            return return_jPmsmJG;
        }
        return_jPmsmJG=[&]() {
    json return_rwLJNRg=json({});
    return serialize_VkBufferMemoryRequirementsInfo2(*((VkBufferMemoryRequirementsInfo2*)(name)));}();
return return_jPmsmJG;}();
        return result;
        }
    

        json serialize_VkBufferMemoryRequirementsInfo2KHR_pNext(const void* name){
        printf("Serializing VkBufferMemoryRequirementsInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_KZgfiss=json({});
    
        if (((VkBufferMemoryRequirementsInfo2KHR*)(name))==NULL){
            return_KZgfiss["null"]=true;
            return return_KZgfiss;
        }
        return_KZgfiss=[&]() {
    json return_ABuhlUq=json({});
    return serialize_VkBufferMemoryRequirementsInfo2KHR(*((VkBufferMemoryRequirementsInfo2KHR*)(name)));}();
return return_KZgfiss;}();
        return result;
        }
    

        json serialize_VkDeviceBufferMemoryRequirements_pNext(const void* name){
        printf("Serializing VkDeviceBufferMemoryRequirements...\n");
        json result;
        result=[&]() {
    json return_HQSGwHe=json({});
    
        if (((VkDeviceBufferMemoryRequirements*)(name))==NULL){
            return_HQSGwHe["null"]=true;
            return return_HQSGwHe;
        }
        return_HQSGwHe=[&]() {
    json return_XSbsoZl=json({});
    return serialize_VkDeviceBufferMemoryRequirements(*((VkDeviceBufferMemoryRequirements*)(name)));}();
return return_HQSGwHe;}();
        return result;
        }
    

        json serialize_VkDeviceBufferMemoryRequirementsKHR_pNext(const void* name){
        printf("Serializing VkDeviceBufferMemoryRequirementsKHR...\n");
        json result;
        result=[&]() {
    json return_EzFpzOi=json({});
    
        if (((VkDeviceBufferMemoryRequirementsKHR*)(name))==NULL){
            return_EzFpzOi["null"]=true;
            return return_EzFpzOi;
        }
        return_EzFpzOi=[&]() {
    json return_pNiTBSR=json({});
    return serialize_VkDeviceBufferMemoryRequirementsKHR(*((VkDeviceBufferMemoryRequirementsKHR*)(name)));}();
return return_EzFpzOi;}();
        return result;
        }
    

        json serialize_VkImageMemoryRequirementsInfo2_pNext(const void* name){
        printf("Serializing VkImageMemoryRequirementsInfo2...\n");
        json result;
        result=[&]() {
    json return_mWYWCWC=json({});
    
        if (((VkImageMemoryRequirementsInfo2*)(name))==NULL){
            return_mWYWCWC["null"]=true;
            return return_mWYWCWC;
        }
        return_mWYWCWC=[&]() {
    json return_SNkZvPN=json({});
    return serialize_VkImageMemoryRequirementsInfo2(*((VkImageMemoryRequirementsInfo2*)(name)));}();
return return_mWYWCWC;}();
        return result;
        }
    

        json serialize_VkImageMemoryRequirementsInfo2KHR_pNext(const void* name){
        printf("Serializing VkImageMemoryRequirementsInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_NNvPMjV=json({});
    
        if (((VkImageMemoryRequirementsInfo2KHR*)(name))==NULL){
            return_NNvPMjV["null"]=true;
            return return_NNvPMjV;
        }
        return_NNvPMjV=[&]() {
    json return_TTGCrVB=json({});
    return serialize_VkImageMemoryRequirementsInfo2KHR(*((VkImageMemoryRequirementsInfo2KHR*)(name)));}();
return return_NNvPMjV;}();
        return result;
        }
    

        json serialize_VkImageSparseMemoryRequirementsInfo2_pNext(const void* name){
        printf("Serializing VkImageSparseMemoryRequirementsInfo2...\n");
        json result;
        result=[&]() {
    json return_EwsuBUF=json({});
    
        if (((VkImageSparseMemoryRequirementsInfo2*)(name))==NULL){
            return_EwsuBUF["null"]=true;
            return return_EwsuBUF;
        }
        return_EwsuBUF=[&]() {
    json return_rzElvBm=json({});
    return serialize_VkImageSparseMemoryRequirementsInfo2(*((VkImageSparseMemoryRequirementsInfo2*)(name)));}();
return return_EwsuBUF;}();
        return result;
        }
    

        json serialize_VkImageSparseMemoryRequirementsInfo2KHR_pNext(const void* name){
        printf("Serializing VkImageSparseMemoryRequirementsInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_GAsPXmz=json({});
    
        if (((VkImageSparseMemoryRequirementsInfo2KHR*)(name))==NULL){
            return_GAsPXmz["null"]=true;
            return return_GAsPXmz;
        }
        return_GAsPXmz=[&]() {
    json return_UbmKKZt=json({});
    return serialize_VkImageSparseMemoryRequirementsInfo2KHR(*((VkImageSparseMemoryRequirementsInfo2KHR*)(name)));}();
return return_GAsPXmz;}();
        return result;
        }
    

        json serialize_VkDeviceImageMemoryRequirements_pNext(const void* name){
        printf("Serializing VkDeviceImageMemoryRequirements...\n");
        json result;
        result=[&]() {
    json return_nRMAkcz=json({});
    
        if (((VkDeviceImageMemoryRequirements*)(name))==NULL){
            return_nRMAkcz["null"]=true;
            return return_nRMAkcz;
        }
        return_nRMAkcz=[&]() {
    json return_ZqAEBKW=json({});
    return serialize_VkDeviceImageMemoryRequirements(*((VkDeviceImageMemoryRequirements*)(name)));}();
return return_nRMAkcz;}();
        return result;
        }
    

        json serialize_VkDeviceImageMemoryRequirementsKHR_pNext(const void* name){
        printf("Serializing VkDeviceImageMemoryRequirementsKHR...\n");
        json result;
        result=[&]() {
    json return_OetsnUh=json({});
    
        if (((VkDeviceImageMemoryRequirementsKHR*)(name))==NULL){
            return_OetsnUh["null"]=true;
            return return_OetsnUh;
        }
        return_OetsnUh=[&]() {
    json return_KQWLbiM=json({});
    return serialize_VkDeviceImageMemoryRequirementsKHR(*((VkDeviceImageMemoryRequirementsKHR*)(name)));}();
return return_OetsnUh;}();
        return result;
        }
    

        json serialize_VkMemoryRequirements2_pNext(const void* name){
        printf("Serializing VkMemoryRequirements2...\n");
        json result;
        result=[&]() {
    json return_xniPzxa=json({});
    
        if (((VkMemoryRequirements2*)(name))==NULL){
            return_xniPzxa["null"]=true;
            return return_xniPzxa;
        }
        return_xniPzxa=[&]() {
    json return_nPZfCXh=json({});
    return serialize_VkMemoryRequirements2(*((VkMemoryRequirements2*)(name)));}();
return return_xniPzxa;}();
        return result;
        }
    

        json serialize_VkMemoryRequirements2KHR_pNext(const void* name){
        printf("Serializing VkMemoryRequirements2KHR...\n");
        json result;
        result=[&]() {
    json return_nBlmDhx=json({});
    
        if (((VkMemoryRequirements2KHR*)(name))==NULL){
            return_nBlmDhx["null"]=true;
            return return_nBlmDhx;
        }
        return_nBlmDhx=[&]() {
    json return_XuaqfjX=json({});
    return serialize_VkMemoryRequirements2KHR(*((VkMemoryRequirements2KHR*)(name)));}();
return return_nBlmDhx;}();
        return result;
        }
    

        json serialize_VkSparseImageMemoryRequirements2_pNext(const void* name){
        printf("Serializing VkSparseImageMemoryRequirements2...\n");
        json result;
        result=[&]() {
    json return_lehhUyw=json({});
    
        if (((VkSparseImageMemoryRequirements2*)(name))==NULL){
            return_lehhUyw["null"]=true;
            return return_lehhUyw;
        }
        return_lehhUyw=[&]() {
    json return_cLnVkUx=json({});
    return serialize_VkSparseImageMemoryRequirements2(*((VkSparseImageMemoryRequirements2*)(name)));}();
return return_lehhUyw;}();
        return result;
        }
    

        json serialize_VkSparseImageMemoryRequirements2KHR_pNext(const void* name){
        printf("Serializing VkSparseImageMemoryRequirements2KHR...\n");
        json result;
        result=[&]() {
    json return_DqUzupP=json({});
    
        if (((VkSparseImageMemoryRequirements2KHR*)(name))==NULL){
            return_DqUzupP["null"]=true;
            return return_DqUzupP;
        }
        return_DqUzupP=[&]() {
    json return_WWVjlFD=json({});
    return serialize_VkSparseImageMemoryRequirements2KHR(*((VkSparseImageMemoryRequirements2KHR*)(name)));}();
return return_DqUzupP;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePointClippingProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePointClippingProperties...\n");
        json result;
        result=[&]() {
    json return_vGtNCDV=json({});
    
        if (((VkPhysicalDevicePointClippingProperties*)(name))==NULL){
            return_vGtNCDV["null"]=true;
            return return_vGtNCDV;
        }
        return_vGtNCDV=[&]() {
    json return_dYMXImt=json({});
    return serialize_VkPhysicalDevicePointClippingProperties(*((VkPhysicalDevicePointClippingProperties*)(name)));}();
return return_vGtNCDV;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePointClippingPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePointClippingPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_YVoaRQr=json({});
    
        if (((VkPhysicalDevicePointClippingPropertiesKHR*)(name))==NULL){
            return_YVoaRQr["null"]=true;
            return return_YVoaRQr;
        }
        return_YVoaRQr=[&]() {
    json return_SGFnwia=json({});
    return serialize_VkPhysicalDevicePointClippingPropertiesKHR(*((VkPhysicalDevicePointClippingPropertiesKHR*)(name)));}();
return return_YVoaRQr;}();
        return result;
        }
    

        json serialize_VkMemoryDedicatedRequirements_pNext(const void* name){
        printf("Serializing VkMemoryDedicatedRequirements...\n");
        json result;
        result=[&]() {
    json return_xaCoWAh=json({});
    
        if (((VkMemoryDedicatedRequirements*)(name))==NULL){
            return_xaCoWAh["null"]=true;
            return return_xaCoWAh;
        }
        return_xaCoWAh=[&]() {
    json return_rVpIEOo=json({});
    return serialize_VkMemoryDedicatedRequirements(*((VkMemoryDedicatedRequirements*)(name)));}();
return return_xaCoWAh;}();
        return result;
        }
    

        json serialize_VkMemoryDedicatedRequirementsKHR_pNext(const void* name){
        printf("Serializing VkMemoryDedicatedRequirementsKHR...\n");
        json result;
        result=[&]() {
    json return_ZWGMTKn=json({});
    
        if (((VkMemoryDedicatedRequirementsKHR*)(name))==NULL){
            return_ZWGMTKn["null"]=true;
            return return_ZWGMTKn;
        }
        return_ZWGMTKn=[&]() {
    json return_sucTLGx=json({});
    return serialize_VkMemoryDedicatedRequirementsKHR(*((VkMemoryDedicatedRequirementsKHR*)(name)));}();
return return_ZWGMTKn;}();
        return result;
        }
    

        json serialize_VkMemoryDedicatedAllocateInfo_pNext(const void* name){
        printf("Serializing VkMemoryDedicatedAllocateInfo...\n");
        json result;
        result=[&]() {
    json return_zsPARkI=json({});
    
        if (((VkMemoryDedicatedAllocateInfo*)(name))==NULL){
            return_zsPARkI["null"]=true;
            return return_zsPARkI;
        }
        return_zsPARkI=[&]() {
    json return_zQDzojP=json({});
    return serialize_VkMemoryDedicatedAllocateInfo(*((VkMemoryDedicatedAllocateInfo*)(name)));}();
return return_zsPARkI;}();
        return result;
        }
    

        json serialize_VkMemoryDedicatedAllocateInfoKHR_pNext(const void* name){
        printf("Serializing VkMemoryDedicatedAllocateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_sMXvKIs=json({});
    
        if (((VkMemoryDedicatedAllocateInfoKHR*)(name))==NULL){
            return_sMXvKIs["null"]=true;
            return return_sMXvKIs;
        }
        return_sMXvKIs=[&]() {
    json return_PeCOVfE=json({});
    return serialize_VkMemoryDedicatedAllocateInfoKHR(*((VkMemoryDedicatedAllocateInfoKHR*)(name)));}();
return return_sMXvKIs;}();
        return result;
        }
    

        json serialize_VkImageViewUsageCreateInfo_pNext(const void* name){
        printf("Serializing VkImageViewUsageCreateInfo...\n");
        json result;
        result=[&]() {
    json return_pxKewRk=json({});
    
        if (((VkImageViewUsageCreateInfo*)(name))==NULL){
            return_pxKewRk["null"]=true;
            return return_pxKewRk;
        }
        return_pxKewRk=[&]() {
    json return_kRfKsNS=json({});
    return serialize_VkImageViewUsageCreateInfo(*((VkImageViewUsageCreateInfo*)(name)));}();
return return_pxKewRk;}();
        return result;
        }
    

        json serialize_VkImageViewSlicedCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkImageViewSlicedCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_ySeYrWH=json({});
    
        if (((VkImageViewSlicedCreateInfoEXT*)(name))==NULL){
            return_ySeYrWH["null"]=true;
            return return_ySeYrWH;
        }
        return_ySeYrWH=[&]() {
    json return_fbrJavS=json({});
    return serialize_VkImageViewSlicedCreateInfoEXT(*((VkImageViewSlicedCreateInfoEXT*)(name)));}();
return return_ySeYrWH;}();
        return result;
        }
    

        json serialize_VkImageViewUsageCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkImageViewUsageCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_WYXmWfE=json({});
    
        if (((VkImageViewUsageCreateInfoKHR*)(name))==NULL){
            return_WYXmWfE["null"]=true;
            return return_WYXmWfE;
        }
        return_WYXmWfE=[&]() {
    json return_SRCWDFY=json({});
    return serialize_VkImageViewUsageCreateInfoKHR(*((VkImageViewUsageCreateInfoKHR*)(name)));}();
return return_WYXmWfE;}();
        return result;
        }
    

        json serialize_VkPipelineTessellationDomainOriginStateCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineTessellationDomainOriginStateCreateInfo...\n");
        json result;
        result=[&]() {
    json return_gQYDjHt=json({});
    
        if (((VkPipelineTessellationDomainOriginStateCreateInfo*)(name))==NULL){
            return_gQYDjHt["null"]=true;
            return return_gQYDjHt;
        }
        return_gQYDjHt=[&]() {
    json return_vvrvcly=json({});
    return serialize_VkPipelineTessellationDomainOriginStateCreateInfo(*((VkPipelineTessellationDomainOriginStateCreateInfo*)(name)));}();
return return_gQYDjHt;}();
        return result;
        }
    

        json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkPipelineTessellationDomainOriginStateCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_qOdeppa=json({});
    
        if (((VkPipelineTessellationDomainOriginStateCreateInfoKHR*)(name))==NULL){
            return_qOdeppa["null"]=true;
            return return_qOdeppa;
        }
        return_qOdeppa=[&]() {
    json return_rJEfmsE=json({});
    return serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(*((VkPipelineTessellationDomainOriginStateCreateInfoKHR*)(name)));}();
return return_qOdeppa;}();
        return result;
        }
    

        json serialize_VkSamplerYcbcrConversionInfo_pNext(const void* name){
        printf("Serializing VkSamplerYcbcrConversionInfo...\n");
        json result;
        result=[&]() {
    json return_RrLZfrU=json({});
    
        if (((VkSamplerYcbcrConversionInfo*)(name))==NULL){
            return_RrLZfrU["null"]=true;
            return return_RrLZfrU;
        }
        return_RrLZfrU=[&]() {
    json return_XjiQmwf=json({});
    return serialize_VkSamplerYcbcrConversionInfo(*((VkSamplerYcbcrConversionInfo*)(name)));}();
return return_RrLZfrU;}();
        return result;
        }
    

        json serialize_VkSamplerYcbcrConversionInfoKHR_pNext(const void* name){
        printf("Serializing VkSamplerYcbcrConversionInfoKHR...\n");
        json result;
        result=[&]() {
    json return_DFCbbiA=json({});
    
        if (((VkSamplerYcbcrConversionInfoKHR*)(name))==NULL){
            return_DFCbbiA["null"]=true;
            return return_DFCbbiA;
        }
        return_DFCbbiA=[&]() {
    json return_MGBhPLS=json({});
    return serialize_VkSamplerYcbcrConversionInfoKHR(*((VkSamplerYcbcrConversionInfoKHR*)(name)));}();
return return_DFCbbiA;}();
        return result;
        }
    

        json serialize_VkSamplerYcbcrConversionCreateInfo_pNext(const void* name){
        printf("Serializing VkSamplerYcbcrConversionCreateInfo...\n");
        json result;
        result=[&]() {
    json return_EsBEiHC=json({});
    
        if (((VkSamplerYcbcrConversionCreateInfo*)(name))==NULL){
            return_EsBEiHC["null"]=true;
            return return_EsBEiHC;
        }
        return_EsBEiHC=[&]() {
    json return_zTGZEqi=json({});
    return serialize_VkSamplerYcbcrConversionCreateInfo(*((VkSamplerYcbcrConversionCreateInfo*)(name)));}();
return return_EsBEiHC;}();
        return result;
        }
    

        json serialize_VkSamplerYcbcrConversionCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkSamplerYcbcrConversionCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_RGXCewU=json({});
    
        if (((VkSamplerYcbcrConversionCreateInfoKHR*)(name))==NULL){
            return_RGXCewU["null"]=true;
            return return_RGXCewU;
        }
        return_RGXCewU=[&]() {
    json return_hswcXXc=json({});
    return serialize_VkSamplerYcbcrConversionCreateInfoKHR(*((VkSamplerYcbcrConversionCreateInfoKHR*)(name)));}();
return return_RGXCewU;}();
        return result;
        }
    

        json serialize_VkBindImagePlaneMemoryInfo_pNext(const void* name){
        printf("Serializing VkBindImagePlaneMemoryInfo...\n");
        json result;
        result=[&]() {
    json return_tNdlOAT=json({});
    
        if (((VkBindImagePlaneMemoryInfo*)(name))==NULL){
            return_tNdlOAT["null"]=true;
            return return_tNdlOAT;
        }
        return_tNdlOAT=[&]() {
    json return_MIUjrmn=json({});
    return serialize_VkBindImagePlaneMemoryInfo(*((VkBindImagePlaneMemoryInfo*)(name)));}();
return return_tNdlOAT;}();
        return result;
        }
    

        json serialize_VkBindImagePlaneMemoryInfoKHR_pNext(const void* name){
        printf("Serializing VkBindImagePlaneMemoryInfoKHR...\n");
        json result;
        result=[&]() {
    json return_YFlUJgy=json({});
    
        if (((VkBindImagePlaneMemoryInfoKHR*)(name))==NULL){
            return_YFlUJgy["null"]=true;
            return return_YFlUJgy;
        }
        return_YFlUJgy=[&]() {
    json return_IvnVlsY=json({});
    return serialize_VkBindImagePlaneMemoryInfoKHR(*((VkBindImagePlaneMemoryInfoKHR*)(name)));}();
return return_YFlUJgy;}();
        return result;
        }
    

        json serialize_VkImagePlaneMemoryRequirementsInfo_pNext(const void* name){
        printf("Serializing VkImagePlaneMemoryRequirementsInfo...\n");
        json result;
        result=[&]() {
    json return_jmENzai=json({});
    
        if (((VkImagePlaneMemoryRequirementsInfo*)(name))==NULL){
            return_jmENzai["null"]=true;
            return return_jmENzai;
        }
        return_jmENzai=[&]() {
    json return_XJHipBO=json({});
    return serialize_VkImagePlaneMemoryRequirementsInfo(*((VkImagePlaneMemoryRequirementsInfo*)(name)));}();
return return_jmENzai;}();
        return result;
        }
    

        json serialize_VkImagePlaneMemoryRequirementsInfoKHR_pNext(const void* name){
        printf("Serializing VkImagePlaneMemoryRequirementsInfoKHR...\n");
        json result;
        result=[&]() {
    json return_uFfCfbo=json({});
    
        if (((VkImagePlaneMemoryRequirementsInfoKHR*)(name))==NULL){
            return_uFfCfbo["null"]=true;
            return return_uFfCfbo;
        }
        return_uFfCfbo=[&]() {
    json return_AQoMAmn=json({});
    return serialize_VkImagePlaneMemoryRequirementsInfoKHR(*((VkImagePlaneMemoryRequirementsInfoKHR*)(name)));}();
return return_uFfCfbo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSamplerYcbcrConversionFeatures...\n");
        json result;
        result=[&]() {
    json return_AhhjMYD=json({});
    
        if (((VkPhysicalDeviceSamplerYcbcrConversionFeatures*)(name))==NULL){
            return_AhhjMYD["null"]=true;
            return return_AhhjMYD;
        }
        return_AhhjMYD=[&]() {
    json return_QMDMyik=json({});
    return serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(*((VkPhysicalDeviceSamplerYcbcrConversionFeatures*)(name)));}();
return return_AhhjMYD;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_oxCgwqM=json({});
    
        if (((VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR*)(name))==NULL){
            return_oxCgwqM["null"]=true;
            return return_oxCgwqM;
        }
        return_oxCgwqM=[&]() {
    json return_QpWKmcf=json({});
    return serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(*((VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR*)(name)));}();
return return_oxCgwqM;}();
        return result;
        }
    

        json serialize_VkSamplerYcbcrConversionImageFormatProperties_pNext(const void* name){
        printf("Serializing VkSamplerYcbcrConversionImageFormatProperties...\n");
        json result;
        result=[&]() {
    json return_wKHSzYz=json({});
    
        if (((VkSamplerYcbcrConversionImageFormatProperties*)(name))==NULL){
            return_wKHSzYz["null"]=true;
            return return_wKHSzYz;
        }
        return_wKHSzYz=[&]() {
    json return_GLjpZxV=json({});
    return serialize_VkSamplerYcbcrConversionImageFormatProperties(*((VkSamplerYcbcrConversionImageFormatProperties*)(name)));}();
return return_wKHSzYz;}();
        return result;
        }
    

        json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR_pNext(const void* name){
        printf("Serializing VkSamplerYcbcrConversionImageFormatPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_vrGNciQ=json({});
    
        if (((VkSamplerYcbcrConversionImageFormatPropertiesKHR*)(name))==NULL){
            return_vrGNciQ["null"]=true;
            return return_vrGNciQ;
        }
        return_vrGNciQ=[&]() {
    json return_hqOIQlX=json({});
    return serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(*((VkSamplerYcbcrConversionImageFormatPropertiesKHR*)(name)));}();
return return_vrGNciQ;}();
        return result;
        }
    

        json serialize_VkTextureLODGatherFormatPropertiesAMD_pNext(const void* name){
        printf("Serializing VkTextureLODGatherFormatPropertiesAMD...\n");
        json result;
        result=[&]() {
    json return_YTxsiYK=json({});
    
        if (((VkTextureLODGatherFormatPropertiesAMD*)(name))==NULL){
            return_YTxsiYK["null"]=true;
            return return_YTxsiYK;
        }
        return_YTxsiYK=[&]() {
    json return_EFEdLnV=json({});
    return serialize_VkTextureLODGatherFormatPropertiesAMD(*((VkTextureLODGatherFormatPropertiesAMD*)(name)));}();
return return_YTxsiYK;}();
        return result;
        }
    

        json serialize_VkConditionalRenderingBeginInfoEXT_pNext(const void* name){
        printf("Serializing VkConditionalRenderingBeginInfoEXT...\n");
        json result;
        result=[&]() {
    json return_hUbgQeP=json({});
    
        if (((VkConditionalRenderingBeginInfoEXT*)(name))==NULL){
            return_hUbgQeP["null"]=true;
            return return_hUbgQeP;
        }
        return_hUbgQeP=[&]() {
    json return_NKXMitV=json({});
    return serialize_VkConditionalRenderingBeginInfoEXT(*((VkConditionalRenderingBeginInfoEXT*)(name)));}();
return return_hUbgQeP;}();
        return result;
        }
    

        json serialize_VkProtectedSubmitInfo_pNext(const void* name){
        printf("Serializing VkProtectedSubmitInfo...\n");
        json result;
        result=[&]() {
    json return_xdMrrrE=json({});
    
        if (((VkProtectedSubmitInfo*)(name))==NULL){
            return_xdMrrrE["null"]=true;
            return return_xdMrrrE;
        }
        return_xdMrrrE=[&]() {
    json return_AOgwthm=json({});
    return serialize_VkProtectedSubmitInfo(*((VkProtectedSubmitInfo*)(name)));}();
return return_xdMrrrE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceProtectedMemoryFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceProtectedMemoryFeatures...\n");
        json result;
        result=[&]() {
    json return_WASdBck=json({});
    
        if (((VkPhysicalDeviceProtectedMemoryFeatures*)(name))==NULL){
            return_WASdBck["null"]=true;
            return return_WASdBck;
        }
        return_WASdBck=[&]() {
    json return_UoBJaGP=json({});
    return serialize_VkPhysicalDeviceProtectedMemoryFeatures(*((VkPhysicalDeviceProtectedMemoryFeatures*)(name)));}();
return return_WASdBck;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceProtectedMemoryProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceProtectedMemoryProperties...\n");
        json result;
        result=[&]() {
    json return_hxWAmly=json({});
    
        if (((VkPhysicalDeviceProtectedMemoryProperties*)(name))==NULL){
            return_hxWAmly["null"]=true;
            return return_hxWAmly;
        }
        return_hxWAmly=[&]() {
    json return_UJZaNHO=json({});
    return serialize_VkPhysicalDeviceProtectedMemoryProperties(*((VkPhysicalDeviceProtectedMemoryProperties*)(name)));}();
return return_hxWAmly;}();
        return result;
        }
    

        json serialize_VkDeviceQueueInfo2_pNext(const void* name){
        printf("Serializing VkDeviceQueueInfo2...\n");
        json result;
        result=[&]() {
    json return_dxnpkxo=json({});
    
        if (((VkDeviceQueueInfo2*)(name))==NULL){
            return_dxnpkxo["null"]=true;
            return return_dxnpkxo;
        }
        return_dxnpkxo=[&]() {
    json return_dJAXxKO=json({});
    return serialize_VkDeviceQueueInfo2(*((VkDeviceQueueInfo2*)(name)));}();
return return_dxnpkxo;}();
        return result;
        }
    

        json serialize_VkPipelineCoverageToColorStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineCoverageToColorStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_DZXHTTN=json({});
    
        if (((VkPipelineCoverageToColorStateCreateInfoNV*)(name))==NULL){
            return_DZXHTTN["null"]=true;
            return return_DZXHTTN;
        }
        return_DZXHTTN=[&]() {
    json return_cjRdUlI=json({});
    return serialize_VkPipelineCoverageToColorStateCreateInfoNV(*((VkPipelineCoverageToColorStateCreateInfoNV*)(name)));}();
return return_DZXHTTN;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSamplerFilterMinmaxProperties...\n");
        json result;
        result=[&]() {
    json return_cdjTqfw=json({});
    
        if (((VkPhysicalDeviceSamplerFilterMinmaxProperties*)(name))==NULL){
            return_cdjTqfw["null"]=true;
            return return_cdjTqfw;
        }
        return_cdjTqfw=[&]() {
    json return_AdBkvRl=json({});
    return serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(*((VkPhysicalDeviceSamplerFilterMinmaxProperties*)(name)));}();
return return_cdjTqfw;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_QSwiFqc=json({});
    
        if (((VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT*)(name))==NULL){
            return_QSwiFqc["null"]=true;
            return return_QSwiFqc;
        }
        return_QSwiFqc=[&]() {
    json return_uFnRAWp=json({});
    return serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(*((VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT*)(name)));}();
return return_QSwiFqc;}();
        return result;
        }
    

        json serialize_VkSampleLocationEXT_pNext(const void* name){
        printf("Serializing VkSampleLocationEXT...\n");
        json result;
        result=[&]() {
    json return_RPSamXG=json({});
    
        if (((VkSampleLocationEXT*)(name))==NULL){
            return_RPSamXG["null"]=true;
            return return_RPSamXG;
        }
        return_RPSamXG=[&]() {
    json return_wcOZAIx=json({});
    return serialize_VkSampleLocationEXT(*((VkSampleLocationEXT*)(name)));}();
return return_RPSamXG;}();
        return result;
        }
    

        json serialize_VkSampleLocationsInfoEXT_pNext(const void* name){
        printf("Serializing VkSampleLocationsInfoEXT...\n");
        json result;
        result=[&]() {
    json return_QPtfEug=json({});
    
        if (((VkSampleLocationsInfoEXT*)(name))==NULL){
            return_QPtfEug["null"]=true;
            return return_QPtfEug;
        }
        return_QPtfEug=[&]() {
    json return_REhlJtT=json({});
    return serialize_VkSampleLocationsInfoEXT(*((VkSampleLocationsInfoEXT*)(name)));}();
return return_QPtfEug;}();
        return result;
        }
    

        json serialize_VkAttachmentSampleLocationsEXT_pNext(const void* name){
        printf("Serializing VkAttachmentSampleLocationsEXT...\n");
        json result;
        result=[&]() {
    json return_SpyqLtn=json({});
    
        if (((VkAttachmentSampleLocationsEXT*)(name))==NULL){
            return_SpyqLtn["null"]=true;
            return return_SpyqLtn;
        }
        return_SpyqLtn=[&]() {
    json return_JvpdUvT=json({});
    return serialize_VkAttachmentSampleLocationsEXT(*((VkAttachmentSampleLocationsEXT*)(name)));}();
return return_SpyqLtn;}();
        return result;
        }
    

        json serialize_VkSubpassSampleLocationsEXT_pNext(const void* name){
        printf("Serializing VkSubpassSampleLocationsEXT...\n");
        json result;
        result=[&]() {
    json return_uaJjvyj=json({});
    
        if (((VkSubpassSampleLocationsEXT*)(name))==NULL){
            return_uaJjvyj["null"]=true;
            return return_uaJjvyj;
        }
        return_uaJjvyj=[&]() {
    json return_IvHtKxv=json({});
    return serialize_VkSubpassSampleLocationsEXT(*((VkSubpassSampleLocationsEXT*)(name)));}();
return return_uaJjvyj;}();
        return result;
        }
    

        json serialize_VkRenderPassSampleLocationsBeginInfoEXT_pNext(const void* name){
        printf("Serializing VkRenderPassSampleLocationsBeginInfoEXT...\n");
        json result;
        result=[&]() {
    json return_nWCrZAL=json({});
    
        if (((VkRenderPassSampleLocationsBeginInfoEXT*)(name))==NULL){
            return_nWCrZAL["null"]=true;
            return return_nWCrZAL;
        }
        return_nWCrZAL=[&]() {
    json return_tKahcGB=json({});
    return serialize_VkRenderPassSampleLocationsBeginInfoEXT(*((VkRenderPassSampleLocationsBeginInfoEXT*)(name)));}();
return return_nWCrZAL;}();
        return result;
        }
    

        json serialize_VkPipelineSampleLocationsStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineSampleLocationsStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_XLbvRxG=json({});
    
        if (((VkPipelineSampleLocationsStateCreateInfoEXT*)(name))==NULL){
            return_XLbvRxG["null"]=true;
            return return_XLbvRxG;
        }
        return_XLbvRxG=[&]() {
    json return_RTBnmXL=json({});
    return serialize_VkPipelineSampleLocationsStateCreateInfoEXT(*((VkPipelineSampleLocationsStateCreateInfoEXT*)(name)));}();
return return_XLbvRxG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSampleLocationsPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_gUcRODd=json({});
    
        if (((VkPhysicalDeviceSampleLocationsPropertiesEXT*)(name))==NULL){
            return_gUcRODd["null"]=true;
            return return_gUcRODd;
        }
        return_gUcRODd=[&]() {
    json return_gTQEmRL=json({});
    return serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(*((VkPhysicalDeviceSampleLocationsPropertiesEXT*)(name)));}();
return return_gUcRODd;}();
        return result;
        }
    

        json serialize_VkMultisamplePropertiesEXT_pNext(const void* name){
        printf("Serializing VkMultisamplePropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_yLCRVVL=json({});
    
        if (((VkMultisamplePropertiesEXT*)(name))==NULL){
            return_yLCRVVL["null"]=true;
            return return_yLCRVVL;
        }
        return_yLCRVVL=[&]() {
    json return_ayPUajM=json({});
    return serialize_VkMultisamplePropertiesEXT(*((VkMultisamplePropertiesEXT*)(name)));}();
return return_yLCRVVL;}();
        return result;
        }
    

        json serialize_VkSamplerReductionModeCreateInfo_pNext(const void* name){
        printf("Serializing VkSamplerReductionModeCreateInfo...\n");
        json result;
        result=[&]() {
    json return_WzdmtUP=json({});
    
        if (((VkSamplerReductionModeCreateInfo*)(name))==NULL){
            return_WzdmtUP["null"]=true;
            return return_WzdmtUP;
        }
        return_WzdmtUP=[&]() {
    json return_lShlWxq=json({});
    return serialize_VkSamplerReductionModeCreateInfo(*((VkSamplerReductionModeCreateInfo*)(name)));}();
return return_WzdmtUP;}();
        return result;
        }
    

        json serialize_VkSamplerReductionModeCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkSamplerReductionModeCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_cfhTLVV=json({});
    
        if (((VkSamplerReductionModeCreateInfoEXT*)(name))==NULL){
            return_cfhTLVV["null"]=true;
            return return_cfhTLVV;
        }
        return_cfhTLVV=[&]() {
    json return_xeCLicr=json({});
    return serialize_VkSamplerReductionModeCreateInfoEXT(*((VkSamplerReductionModeCreateInfoEXT*)(name)));}();
return return_cfhTLVV;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_tnMZTLC=json({});
    
        if (((VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT*)(name))==NULL){
            return_tnMZTLC["null"]=true;
            return return_tnMZTLC;
        }
        return_tnMZTLC=[&]() {
    json return_cSsxGln=json({});
    return serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(*((VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT*)(name)));}();
return return_tnMZTLC;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiDrawFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_IxlRVNF=json({});
    
        if (((VkPhysicalDeviceMultiDrawFeaturesEXT*)(name))==NULL){
            return_IxlRVNF["null"]=true;
            return return_IxlRVNF;
        }
        return_IxlRVNF=[&]() {
    json return_ODWESrX=json({});
    return serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(*((VkPhysicalDeviceMultiDrawFeaturesEXT*)(name)));}();
return return_IxlRVNF;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_sAYiGnp=json({});
    
        if (((VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT*)(name))==NULL){
            return_sAYiGnp["null"]=true;
            return return_sAYiGnp;
        }
        return_sAYiGnp=[&]() {
    json return_xmDGOEl=json({});
    return serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(*((VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT*)(name)));}();
return return_sAYiGnp;}();
        return result;
        }
    

        json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineColorBlendAdvancedStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_dnYmVww=json({});
    
        if (((VkPipelineColorBlendAdvancedStateCreateInfoEXT*)(name))==NULL){
            return_dnYmVww["null"]=true;
            return return_dnYmVww;
        }
        return_dnYmVww=[&]() {
    json return_XPowqNY=json({});
    return serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(*((VkPipelineColorBlendAdvancedStateCreateInfoEXT*)(name)));}();
return return_dnYmVww;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceInlineUniformBlockFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceInlineUniformBlockFeatures...\n");
        json result;
        result=[&]() {
    json return_XoXtwUC=json({});
    
        if (((VkPhysicalDeviceInlineUniformBlockFeatures*)(name))==NULL){
            return_XoXtwUC["null"]=true;
            return return_XoXtwUC;
        }
        return_XoXtwUC=[&]() {
    json return_lFyirTB=json({});
    return serialize_VkPhysicalDeviceInlineUniformBlockFeatures(*((VkPhysicalDeviceInlineUniformBlockFeatures*)(name)));}();
return return_XoXtwUC;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceInlineUniformBlockFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_INXfYyl=json({});
    
        if (((VkPhysicalDeviceInlineUniformBlockFeaturesEXT*)(name))==NULL){
            return_INXfYyl["null"]=true;
            return return_INXfYyl;
        }
        return_INXfYyl=[&]() {
    json return_PpvUixI=json({});
    return serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(*((VkPhysicalDeviceInlineUniformBlockFeaturesEXT*)(name)));}();
return return_INXfYyl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceInlineUniformBlockProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceInlineUniformBlockProperties...\n");
        json result;
        result=[&]() {
    json return_MVWVrSX=json({});
    
        if (((VkPhysicalDeviceInlineUniformBlockProperties*)(name))==NULL){
            return_MVWVrSX["null"]=true;
            return return_MVWVrSX;
        }
        return_MVWVrSX=[&]() {
    json return_gOHAbid=json({});
    return serialize_VkPhysicalDeviceInlineUniformBlockProperties(*((VkPhysicalDeviceInlineUniformBlockProperties*)(name)));}();
return return_MVWVrSX;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceInlineUniformBlockPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_tiFiuLH=json({});
    
        if (((VkPhysicalDeviceInlineUniformBlockPropertiesEXT*)(name))==NULL){
            return_tiFiuLH["null"]=true;
            return return_tiFiuLH;
        }
        return_tiFiuLH=[&]() {
    json return_CraXAsp=json({});
    return serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(*((VkPhysicalDeviceInlineUniformBlockPropertiesEXT*)(name)));}();
return return_tiFiuLH;}();
        return result;
        }
    

        json serialize_VkWriteDescriptorSetInlineUniformBlock_pNext(const void* name){
        printf("Serializing VkWriteDescriptorSetInlineUniformBlock...\n");
        json result;
        result=[&]() {
    json return_UNFJLPI=json({});
    
        if (((VkWriteDescriptorSetInlineUniformBlock*)(name))==NULL){
            return_UNFJLPI["null"]=true;
            return return_UNFJLPI;
        }
        return_UNFJLPI=[&]() {
    json return_sOQvEVe=json({});
    return serialize_VkWriteDescriptorSetInlineUniformBlock(*((VkWriteDescriptorSetInlineUniformBlock*)(name)));}();
return return_UNFJLPI;}();
        return result;
        }
    

        json serialize_VkWriteDescriptorSetInlineUniformBlockEXT_pNext(const void* name){
        printf("Serializing VkWriteDescriptorSetInlineUniformBlockEXT...\n");
        json result;
        result=[&]() {
    json return_gKulIcz=json({});
    
        if (((VkWriteDescriptorSetInlineUniformBlockEXT*)(name))==NULL){
            return_gKulIcz["null"]=true;
            return return_gKulIcz;
        }
        return_gKulIcz=[&]() {
    json return_OVydIsf=json({});
    return serialize_VkWriteDescriptorSetInlineUniformBlockEXT(*((VkWriteDescriptorSetInlineUniformBlockEXT*)(name)));}();
return return_gKulIcz;}();
        return result;
        }
    

        json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo_pNext(const void* name){
        printf("Serializing VkDescriptorPoolInlineUniformBlockCreateInfo...\n");
        json result;
        result=[&]() {
    json return_UpBfxiJ=json({});
    
        if (((VkDescriptorPoolInlineUniformBlockCreateInfo*)(name))==NULL){
            return_UpBfxiJ["null"]=true;
            return return_UpBfxiJ;
        }
        return_UpBfxiJ=[&]() {
    json return_MWOKBpC=json({});
    return serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(*((VkDescriptorPoolInlineUniformBlockCreateInfo*)(name)));}();
return return_UpBfxiJ;}();
        return result;
        }
    

        json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkDescriptorPoolInlineUniformBlockCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_eeGTRMm=json({});
    
        if (((VkDescriptorPoolInlineUniformBlockCreateInfoEXT*)(name))==NULL){
            return_eeGTRMm["null"]=true;
            return return_eeGTRMm;
        }
        return_eeGTRMm=[&]() {
    json return_PsHAeUt=json({});
    return serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(*((VkDescriptorPoolInlineUniformBlockCreateInfoEXT*)(name)));}();
return return_eeGTRMm;}();
        return result;
        }
    

        json serialize_VkPipelineCoverageModulationStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineCoverageModulationStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_AquHTbw=json({});
    
        if (((VkPipelineCoverageModulationStateCreateInfoNV*)(name))==NULL){
            return_AquHTbw["null"]=true;
            return return_AquHTbw;
        }
        return_AquHTbw=[&]() {
    json return_jLjhrri=json({});
    return serialize_VkPipelineCoverageModulationStateCreateInfoNV(*((VkPipelineCoverageModulationStateCreateInfoNV*)(name)));}();
return return_AquHTbw;}();
        return result;
        }
    

        json serialize_VkImageFormatListCreateInfo_pNext(const void* name){
        printf("Serializing VkImageFormatListCreateInfo...\n");
        json result;
        result=[&]() {
    json return_KvEPFMi=json({});
    
        if (((VkImageFormatListCreateInfo*)(name))==NULL){
            return_KvEPFMi["null"]=true;
            return return_KvEPFMi;
        }
        return_KvEPFMi=[&]() {
    json return_RCPIuFH=json({});
    return serialize_VkImageFormatListCreateInfo(*((VkImageFormatListCreateInfo*)(name)));}();
return return_KvEPFMi;}();
        return result;
        }
    

        json serialize_VkImageFormatListCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkImageFormatListCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_DWUFeHy=json({});
    
        if (((VkImageFormatListCreateInfoKHR*)(name))==NULL){
            return_DWUFeHy["null"]=true;
            return return_DWUFeHy;
        }
        return_DWUFeHy=[&]() {
    json return_QVDZzVv=json({});
    return serialize_VkImageFormatListCreateInfoKHR(*((VkImageFormatListCreateInfoKHR*)(name)));}();
return return_DWUFeHy;}();
        return result;
        }
    

        json serialize_VkValidationCacheCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkValidationCacheCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_tyEQfDX=json({});
    
        if (((VkValidationCacheCreateInfoEXT*)(name))==NULL){
            return_tyEQfDX["null"]=true;
            return return_tyEQfDX;
        }
        return_tyEQfDX=[&]() {
    json return_scaZrPW=json({});
    return serialize_VkValidationCacheCreateInfoEXT(*((VkValidationCacheCreateInfoEXT*)(name)));}();
return return_tyEQfDX;}();
        return result;
        }
    

        json serialize_VkShaderModuleValidationCacheCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkShaderModuleValidationCacheCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_lOelTZD=json({});
    
        if (((VkShaderModuleValidationCacheCreateInfoEXT*)(name))==NULL){
            return_lOelTZD["null"]=true;
            return return_lOelTZD;
        }
        return_lOelTZD=[&]() {
    json return_OcnBmhi=json({});
    return serialize_VkShaderModuleValidationCacheCreateInfoEXT(*((VkShaderModuleValidationCacheCreateInfoEXT*)(name)));}();
return return_lOelTZD;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance3Properties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance3Properties...\n");
        json result;
        result=[&]() {
    json return_qagQWfA=json({});
    
        if (((VkPhysicalDeviceMaintenance3Properties*)(name))==NULL){
            return_qagQWfA["null"]=true;
            return return_qagQWfA;
        }
        return_qagQWfA=[&]() {
    json return_RnjpHYU=json({});
    return serialize_VkPhysicalDeviceMaintenance3Properties(*((VkPhysicalDeviceMaintenance3Properties*)(name)));}();
return return_qagQWfA;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance3PropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_TdrJTHI=json({});
    
        if (((VkPhysicalDeviceMaintenance3PropertiesKHR*)(name))==NULL){
            return_TdrJTHI["null"]=true;
            return return_TdrJTHI;
        }
        return_TdrJTHI=[&]() {
    json return_xFDTFMI=json({});
    return serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(*((VkPhysicalDeviceMaintenance3PropertiesKHR*)(name)));}();
return return_TdrJTHI;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance4Features_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance4Features...\n");
        json result;
        result=[&]() {
    json return_TIgyxji=json({});
    
        if (((VkPhysicalDeviceMaintenance4Features*)(name))==NULL){
            return_TIgyxji["null"]=true;
            return return_TIgyxji;
        }
        return_TIgyxji=[&]() {
    json return_ZYwvXVJ=json({});
    return serialize_VkPhysicalDeviceMaintenance4Features(*((VkPhysicalDeviceMaintenance4Features*)(name)));}();
return return_TIgyxji;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance4FeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_JqROptS=json({});
    
        if (((VkPhysicalDeviceMaintenance4FeaturesKHR*)(name))==NULL){
            return_JqROptS["null"]=true;
            return return_JqROptS;
        }
        return_JqROptS=[&]() {
    json return_RrctZbR=json({});
    return serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(*((VkPhysicalDeviceMaintenance4FeaturesKHR*)(name)));}();
return return_JqROptS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance4Properties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance4Properties...\n");
        json result;
        result=[&]() {
    json return_rEmiXJe=json({});
    
        if (((VkPhysicalDeviceMaintenance4Properties*)(name))==NULL){
            return_rEmiXJe["null"]=true;
            return return_rEmiXJe;
        }
        return_rEmiXJe=[&]() {
    json return_qfrWdIv=json({});
    return serialize_VkPhysicalDeviceMaintenance4Properties(*((VkPhysicalDeviceMaintenance4Properties*)(name)));}();
return return_rEmiXJe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance4PropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_waIxpnZ=json({});
    
        if (((VkPhysicalDeviceMaintenance4PropertiesKHR*)(name))==NULL){
            return_waIxpnZ["null"]=true;
            return return_waIxpnZ;
        }
        return_waIxpnZ=[&]() {
    json return_fmbmeww=json({});
    return serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(*((VkPhysicalDeviceMaintenance4PropertiesKHR*)(name)));}();
return return_waIxpnZ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance5FeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_yHOYGvn=json({});
    
        if (((VkPhysicalDeviceMaintenance5FeaturesKHR*)(name))==NULL){
            return_yHOYGvn["null"]=true;
            return return_yHOYGvn;
        }
        return_yHOYGvn=[&]() {
    json return_INFLKwO=json({});
    return serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(*((VkPhysicalDeviceMaintenance5FeaturesKHR*)(name)));}();
return return_yHOYGvn;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMaintenance5PropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_lwQHjyQ=json({});
    
        if (((VkPhysicalDeviceMaintenance5PropertiesKHR*)(name))==NULL){
            return_lwQHjyQ["null"]=true;
            return return_lwQHjyQ;
        }
        return_lwQHjyQ=[&]() {
    json return_msOIFBu=json({});
    return serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(*((VkPhysicalDeviceMaintenance5PropertiesKHR*)(name)));}();
return return_lwQHjyQ;}();
        return result;
        }
    

        json serialize_VkRenderingAreaInfoKHR_pNext(const void* name){
        printf("Serializing VkRenderingAreaInfoKHR...\n");
        json result;
        result=[&]() {
    json return_fEcBDyJ=json({});
    
        if (((VkRenderingAreaInfoKHR*)(name))==NULL){
            return_fEcBDyJ["null"]=true;
            return return_fEcBDyJ;
        }
        return_fEcBDyJ=[&]() {
    json return_iwkuIlm=json({});
    return serialize_VkRenderingAreaInfoKHR(*((VkRenderingAreaInfoKHR*)(name)));}();
return return_fEcBDyJ;}();
        return result;
        }
    

        json serialize_VkDescriptorSetLayoutSupport_pNext(const void* name){
        printf("Serializing VkDescriptorSetLayoutSupport...\n");
        json result;
        result=[&]() {
    json return_ckoNRVo=json({});
    
        if (((VkDescriptorSetLayoutSupport*)(name))==NULL){
            return_ckoNRVo["null"]=true;
            return return_ckoNRVo;
        }
        return_ckoNRVo=[&]() {
    json return_TYRheIR=json({});
    return serialize_VkDescriptorSetLayoutSupport(*((VkDescriptorSetLayoutSupport*)(name)));}();
return return_ckoNRVo;}();
        return result;
        }
    

        json serialize_VkDescriptorSetLayoutSupportKHR_pNext(const void* name){
        printf("Serializing VkDescriptorSetLayoutSupportKHR...\n");
        json result;
        result=[&]() {
    json return_PYZYdKP=json({});
    
        if (((VkDescriptorSetLayoutSupportKHR*)(name))==NULL){
            return_PYZYdKP["null"]=true;
            return return_PYZYdKP;
        }
        return_PYZYdKP=[&]() {
    json return_XoYNKnr=json({});
    return serialize_VkDescriptorSetLayoutSupportKHR(*((VkDescriptorSetLayoutSupportKHR*)(name)));}();
return return_PYZYdKP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderDrawParametersFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderDrawParametersFeatures...\n");
        json result;
        result=[&]() {
    json return_wKXJXcb=json({});
    
        if (((VkPhysicalDeviceShaderDrawParametersFeatures*)(name))==NULL){
            return_wKXJXcb["null"]=true;
            return return_wKXJXcb;
        }
        return_wKXJXcb=[&]() {
    json return_oqkdEHH=json({});
    return serialize_VkPhysicalDeviceShaderDrawParametersFeatures(*((VkPhysicalDeviceShaderDrawParametersFeatures*)(name)));}();
return return_wKXJXcb;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderDrawParameterFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderDrawParameterFeatures...\n");
        json result;
        result=[&]() {
    json return_GRhzGhu=json({});
    
        if (((VkPhysicalDeviceShaderDrawParameterFeatures*)(name))==NULL){
            return_GRhzGhu["null"]=true;
            return return_GRhzGhu;
        }
        return_GRhzGhu=[&]() {
    json return_vyWCNTx=json({});
    return serialize_VkPhysicalDeviceShaderDrawParameterFeatures(*((VkPhysicalDeviceShaderDrawParameterFeatures*)(name)));}();
return return_GRhzGhu;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderFloat16Int8Features_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderFloat16Int8Features...\n");
        json result;
        result=[&]() {
    json return_SAwrGIS=json({});
    
        if (((VkPhysicalDeviceShaderFloat16Int8Features*)(name))==NULL){
            return_SAwrGIS["null"]=true;
            return return_SAwrGIS;
        }
        return_SAwrGIS=[&]() {
    json return_VvEpoTr=json({});
    return serialize_VkPhysicalDeviceShaderFloat16Int8Features(*((VkPhysicalDeviceShaderFloat16Int8Features*)(name)));}();
return return_SAwrGIS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderFloat16Int8FeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_DJNKLda=json({});
    
        if (((VkPhysicalDeviceShaderFloat16Int8FeaturesKHR*)(name))==NULL){
            return_DJNKLda["null"]=true;
            return return_DJNKLda;
        }
        return_DJNKLda=[&]() {
    json return_mYeNAIw=json({});
    return serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(*((VkPhysicalDeviceShaderFloat16Int8FeaturesKHR*)(name)));}();
return return_DJNKLda;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFloat16Int8FeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_qyJzvGH=json({});
    
        if (((VkPhysicalDeviceFloat16Int8FeaturesKHR*)(name))==NULL){
            return_qyJzvGH["null"]=true;
            return return_qyJzvGH;
        }
        return_qyJzvGH=[&]() {
    json return_StdUdgd=json({});
    return serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(*((VkPhysicalDeviceFloat16Int8FeaturesKHR*)(name)));}();
return return_qyJzvGH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFloatControlsProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFloatControlsProperties...\n");
        json result;
        result=[&]() {
    json return_wUsHqZW=json({});
    
        if (((VkPhysicalDeviceFloatControlsProperties*)(name))==NULL){
            return_wUsHqZW["null"]=true;
            return return_wUsHqZW;
        }
        return_wUsHqZW=[&]() {
    json return_vdvPTRC=json({});
    return serialize_VkPhysicalDeviceFloatControlsProperties(*((VkPhysicalDeviceFloatControlsProperties*)(name)));}();
return return_wUsHqZW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFloatControlsPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_ovWnqfj=json({});
    
        if (((VkPhysicalDeviceFloatControlsPropertiesKHR*)(name))==NULL){
            return_ovWnqfj["null"]=true;
            return return_ovWnqfj;
        }
        return_ovWnqfj=[&]() {
    json return_QqZSqdy=json({});
    return serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(*((VkPhysicalDeviceFloatControlsPropertiesKHR*)(name)));}();
return return_ovWnqfj;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceHostQueryResetFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceHostQueryResetFeatures...\n");
        json result;
        result=[&]() {
    json return_eolahtJ=json({});
    
        if (((VkPhysicalDeviceHostQueryResetFeatures*)(name))==NULL){
            return_eolahtJ["null"]=true;
            return return_eolahtJ;
        }
        return_eolahtJ=[&]() {
    json return_qaRFtym=json({});
    return serialize_VkPhysicalDeviceHostQueryResetFeatures(*((VkPhysicalDeviceHostQueryResetFeatures*)(name)));}();
return return_eolahtJ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceHostQueryResetFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_ffgQgUh=json({});
    
        if (((VkPhysicalDeviceHostQueryResetFeaturesEXT*)(name))==NULL){
            return_ffgQgUh["null"]=true;
            return return_ffgQgUh;
        }
        return_ffgQgUh=[&]() {
    json return_AgkUVmx=json({});
    return serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(*((VkPhysicalDeviceHostQueryResetFeaturesEXT*)(name)));}();
return return_ffgQgUh;}();
        return result;
        }
    

        json serialize_VkShaderResourceUsageAMD_pNext(const void* name){
        printf("Serializing VkShaderResourceUsageAMD...\n");
        json result;
        result=[&]() {
    json return_reoNDmu=json({});
    
        if (((VkShaderResourceUsageAMD*)(name))==NULL){
            return_reoNDmu["null"]=true;
            return return_reoNDmu;
        }
        return_reoNDmu=[&]() {
    json return_NmpejAF=json({});
    return serialize_VkShaderResourceUsageAMD(*((VkShaderResourceUsageAMD*)(name)));}();
return return_reoNDmu;}();
        return result;
        }
    

        json serialize_VkShaderStatisticsInfoAMD_pNext(const void* name){
        printf("Serializing VkShaderStatisticsInfoAMD...\n");
        json result;
        result=[&]() {
    json return_CcSDNhF=json({});
    
        if (((VkShaderStatisticsInfoAMD*)(name))==NULL){
            return_CcSDNhF["null"]=true;
            return return_CcSDNhF;
        }
        return_CcSDNhF=[&]() {
    json return_seeHfdj=json({});
    return serialize_VkShaderStatisticsInfoAMD(*((VkShaderStatisticsInfoAMD*)(name)));}();
return return_CcSDNhF;}();
        return result;
        }
    

        json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceQueueGlobalPriorityCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_eDRGWNi=json({});
    
        if (((VkDeviceQueueGlobalPriorityCreateInfoKHR*)(name))==NULL){
            return_eDRGWNi["null"]=true;
            return return_eDRGWNi;
        }
        return_eDRGWNi=[&]() {
    json return_NqVEPIo=json({});
    return serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(*((VkDeviceQueueGlobalPriorityCreateInfoKHR*)(name)));}();
return return_eDRGWNi;}();
        return result;
        }
    

        json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkDeviceQueueGlobalPriorityCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_FMYaRRZ=json({});
    
        if (((VkDeviceQueueGlobalPriorityCreateInfoEXT*)(name))==NULL){
            return_FMYaRRZ["null"]=true;
            return return_FMYaRRZ;
        }
        return_FMYaRRZ=[&]() {
    json return_CEhdHCL=json({});
    return serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(*((VkDeviceQueueGlobalPriorityCreateInfoEXT*)(name)));}();
return return_FMYaRRZ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_YfutsQF=json({});
    
        if (((VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR*)(name))==NULL){
            return_YfutsQF["null"]=true;
            return return_YfutsQF;
        }
        return_YfutsQF=[&]() {
    json return_tXHZQGT=json({});
    return serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(*((VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR*)(name)));}();
return return_YfutsQF;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_GMSmgdo=json({});
    
        if (((VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT*)(name))==NULL){
            return_GMSmgdo["null"]=true;
            return return_GMSmgdo;
        }
        return_GMSmgdo=[&]() {
    json return_olMRjWR=json({});
    return serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(*((VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT*)(name)));}();
return return_GMSmgdo;}();
        return result;
        }
    

        json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR_pNext(const void* name){
        printf("Serializing VkQueueFamilyGlobalPriorityPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_WNSPhrV=json({});
    
        if (((VkQueueFamilyGlobalPriorityPropertiesKHR*)(name))==NULL){
            return_WNSPhrV["null"]=true;
            return return_WNSPhrV;
        }
        return_WNSPhrV=[&]() {
    json return_xeZsbIo=json({});
    return serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(*((VkQueueFamilyGlobalPriorityPropertiesKHR*)(name)));}();
return return_WNSPhrV;}();
        return result;
        }
    

        json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT_pNext(const void* name){
        printf("Serializing VkQueueFamilyGlobalPriorityPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_UzmdVca=json({});
    
        if (((VkQueueFamilyGlobalPriorityPropertiesEXT*)(name))==NULL){
            return_UzmdVca["null"]=true;
            return return_UzmdVca;
        }
        return_UzmdVca=[&]() {
    json return_ZHsDUyE=json({});
    return serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(*((VkQueueFamilyGlobalPriorityPropertiesEXT*)(name)));}();
return return_UzmdVca;}();
        return result;
        }
    

        json serialize_VkDebugUtilsObjectNameInfoEXT_pNext(const void* name){
        printf("Serializing VkDebugUtilsObjectNameInfoEXT...\n");
        json result;
        result=[&]() {
    json return_yUzdxON=json({});
    
        if (((VkDebugUtilsObjectNameInfoEXT*)(name))==NULL){
            return_yUzdxON["null"]=true;
            return return_yUzdxON;
        }
        return_yUzdxON=[&]() {
    json return_nfrJvNw=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(*((VkDebugUtilsObjectNameInfoEXT*)(name)));}();
return return_yUzdxON;}();
        return result;
        }
    

        json serialize_VkDebugUtilsObjectTagInfoEXT_pNext(const void* name){
        printf("Serializing VkDebugUtilsObjectTagInfoEXT...\n");
        json result;
        result=[&]() {
    json return_IKByNUr=json({});
    
        if (((VkDebugUtilsObjectTagInfoEXT*)(name))==NULL){
            return_IKByNUr["null"]=true;
            return return_IKByNUr;
        }
        return_IKByNUr=[&]() {
    json return_bIdaLqD=json({});
    return serialize_VkDebugUtilsObjectTagInfoEXT(*((VkDebugUtilsObjectTagInfoEXT*)(name)));}();
return return_IKByNUr;}();
        return result;
        }
    

        json serialize_VkDebugUtilsLabelEXT_pNext(const void* name){
        printf("Serializing VkDebugUtilsLabelEXT...\n");
        json result;
        result=[&]() {
    json return_STkMEAZ=json({});
    
        if (((VkDebugUtilsLabelEXT*)(name))==NULL){
            return_STkMEAZ["null"]=true;
            return return_STkMEAZ;
        }
        return_STkMEAZ=[&]() {
    json return_ztQfZEq=json({});
    return serialize_VkDebugUtilsLabelEXT(*((VkDebugUtilsLabelEXT*)(name)));}();
return return_STkMEAZ;}();
        return result;
        }
    

        json serialize_VkDebugUtilsMessengerCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkDebugUtilsMessengerCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_pbirZHK=json({});
    
        if (((VkDebugUtilsMessengerCreateInfoEXT*)(name))==NULL){
            return_pbirZHK["null"]=true;
            return return_pbirZHK;
        }
        return_pbirZHK=[&]() {
    json return_PLgzfHI=json({});
    return serialize_VkDebugUtilsMessengerCreateInfoEXT(*((VkDebugUtilsMessengerCreateInfoEXT*)(name)));}();
return return_pbirZHK;}();
        return result;
        }
    

        json serialize_VkDebugUtilsMessengerCallbackDataEXT_pNext(const void* name){
        printf("Serializing VkDebugUtilsMessengerCallbackDataEXT...\n");
        json result;
        result=[&]() {
    json return_AVPJvTW=json({});
    
        if (((VkDebugUtilsMessengerCallbackDataEXT*)(name))==NULL){
            return_AVPJvTW["null"]=true;
            return return_AVPJvTW;
        }
        return_AVPJvTW=[&]() {
    json return_mIJbLbq=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*((VkDebugUtilsMessengerCallbackDataEXT*)(name)));}();
return return_AVPJvTW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDeviceMemoryReportFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_pNxNfvq=json({});
    
        if (((VkPhysicalDeviceDeviceMemoryReportFeaturesEXT*)(name))==NULL){
            return_pNxNfvq["null"]=true;
            return return_pNxNfvq;
        }
        return_pNxNfvq=[&]() {
    json return_jncxqfh=json({});
    return serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(*((VkPhysicalDeviceDeviceMemoryReportFeaturesEXT*)(name)));}();
return return_pNxNfvq;}();
        return result;
        }
    

        json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkDeviceDeviceMemoryReportCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_osbNHLF=json({});
    
        if (((VkDeviceDeviceMemoryReportCreateInfoEXT*)(name))==NULL){
            return_osbNHLF["null"]=true;
            return return_osbNHLF;
        }
        return_osbNHLF=[&]() {
    json return_QogVAPq=json({});
    return serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(*((VkDeviceDeviceMemoryReportCreateInfoEXT*)(name)));}();
return return_osbNHLF;}();
        return result;
        }
    

        json serialize_VkDeviceMemoryReportCallbackDataEXT_pNext(const void* name){
        printf("Serializing VkDeviceMemoryReportCallbackDataEXT...\n");
        json result;
        result=[&]() {
    json return_rVKFZlL=json({});
    
        if (((VkDeviceMemoryReportCallbackDataEXT*)(name))==NULL){
            return_rVKFZlL["null"]=true;
            return return_rVKFZlL;
        }
        return_rVKFZlL=[&]() {
    json return_SMPppCJ=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*((VkDeviceMemoryReportCallbackDataEXT*)(name)));}();
return return_rVKFZlL;}();
        return result;
        }
    

        json serialize_VkImportMemoryHostPointerInfoEXT_pNext(const void* name){
        printf("Serializing VkImportMemoryHostPointerInfoEXT...\n");
        json result;
        result=[&]() {
    json return_RXPLVBP=json({});
    
        if (((VkImportMemoryHostPointerInfoEXT*)(name))==NULL){
            return_RXPLVBP["null"]=true;
            return return_RXPLVBP;
        }
        return_RXPLVBP=[&]() {
    json return_vrhKdby=json({});
    return serialize_VkImportMemoryHostPointerInfoEXT(*((VkImportMemoryHostPointerInfoEXT*)(name)));}();
return return_RXPLVBP;}();
        return result;
        }
    

        json serialize_VkMemoryHostPointerPropertiesEXT_pNext(const void* name){
        printf("Serializing VkMemoryHostPointerPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_eOWFbgh=json({});
    
        if (((VkMemoryHostPointerPropertiesEXT*)(name))==NULL){
            return_eOWFbgh["null"]=true;
            return return_eOWFbgh;
        }
        return_eOWFbgh=[&]() {
    json return_SYzFzgh=json({});
    return serialize_VkMemoryHostPointerPropertiesEXT(*((VkMemoryHostPointerPropertiesEXT*)(name)));}();
return return_eOWFbgh;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalMemoryHostPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_qIpTJxa=json({});
    
        if (((VkPhysicalDeviceExternalMemoryHostPropertiesEXT*)(name))==NULL){
            return_qIpTJxa["null"]=true;
            return return_qIpTJxa;
        }
        return_qIpTJxa=[&]() {
    json return_IgOvmQT=json({});
    return serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(*((VkPhysicalDeviceExternalMemoryHostPropertiesEXT*)(name)));}();
return return_qIpTJxa;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceConservativeRasterizationPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_cwpsiKP=json({});
    
        if (((VkPhysicalDeviceConservativeRasterizationPropertiesEXT*)(name))==NULL){
            return_cwpsiKP["null"]=true;
            return return_cwpsiKP;
        }
        return_cwpsiKP=[&]() {
    json return_PJiYMNK=json({});
    return serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(*((VkPhysicalDeviceConservativeRasterizationPropertiesEXT*)(name)));}();
return return_cwpsiKP;}();
        return result;
        }
    

        json serialize_VkCalibratedTimestampInfoEXT_pNext(const void* name){
        printf("Serializing VkCalibratedTimestampInfoEXT...\n");
        json result;
        result=[&]() {
    json return_dAklHPK=json({});
    
        if (((VkCalibratedTimestampInfoEXT*)(name))==NULL){
            return_dAklHPK["null"]=true;
            return return_dAklHPK;
        }
        return_dAklHPK=[&]() {
    json return_zvIiSla=json({});
    return serialize_VkCalibratedTimestampInfoEXT(*((VkCalibratedTimestampInfoEXT*)(name)));}();
return return_dAklHPK;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderCorePropertiesAMD_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderCorePropertiesAMD...\n");
        json result;
        result=[&]() {
    json return_GPXQKUS=json({});
    
        if (((VkPhysicalDeviceShaderCorePropertiesAMD*)(name))==NULL){
            return_GPXQKUS["null"]=true;
            return return_GPXQKUS;
        }
        return_GPXQKUS=[&]() {
    json return_sZfMIXc=json({});
    return serialize_VkPhysicalDeviceShaderCorePropertiesAMD(*((VkPhysicalDeviceShaderCorePropertiesAMD*)(name)));}();
return return_GPXQKUS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderCoreProperties2AMD_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderCoreProperties2AMD...\n");
        json result;
        result=[&]() {
    json return_tRdiAvS=json({});
    
        if (((VkPhysicalDeviceShaderCoreProperties2AMD*)(name))==NULL){
            return_tRdiAvS["null"]=true;
            return return_tRdiAvS;
        }
        return_tRdiAvS=[&]() {
    json return_KSQnDEE=json({});
    return serialize_VkPhysicalDeviceShaderCoreProperties2AMD(*((VkPhysicalDeviceShaderCoreProperties2AMD*)(name)));}();
return return_tRdiAvS;}();
        return result;
        }
    

        json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineRasterizationConservativeStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_pLjByxV=json({});
    
        if (((VkPipelineRasterizationConservativeStateCreateInfoEXT*)(name))==NULL){
            return_pLjByxV["null"]=true;
            return return_pLjByxV;
        }
        return_pLjByxV=[&]() {
    json return_MaARAtE=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(*((VkPipelineRasterizationConservativeStateCreateInfoEXT*)(name)));}();
return return_pLjByxV;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorIndexingFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorIndexingFeatures...\n");
        json result;
        result=[&]() {
    json return_HiCrlwz=json({});
    
        if (((VkPhysicalDeviceDescriptorIndexingFeatures*)(name))==NULL){
            return_HiCrlwz["null"]=true;
            return return_HiCrlwz;
        }
        return_HiCrlwz=[&]() {
    json return_HhGKgbn=json({});
    return serialize_VkPhysicalDeviceDescriptorIndexingFeatures(*((VkPhysicalDeviceDescriptorIndexingFeatures*)(name)));}();
return return_HiCrlwz;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorIndexingFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_xyUECEp=json({});
    
        if (((VkPhysicalDeviceDescriptorIndexingFeaturesEXT*)(name))==NULL){
            return_xyUECEp["null"]=true;
            return return_xyUECEp;
        }
        return_xyUECEp=[&]() {
    json return_JJakPop=json({});
    return serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(*((VkPhysicalDeviceDescriptorIndexingFeaturesEXT*)(name)));}();
return return_xyUECEp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorIndexingProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorIndexingProperties...\n");
        json result;
        result=[&]() {
    json return_nnpbegW=json({});
    
        if (((VkPhysicalDeviceDescriptorIndexingProperties*)(name))==NULL){
            return_nnpbegW["null"]=true;
            return return_nnpbegW;
        }
        return_nnpbegW=[&]() {
    json return_fjYXaTg=json({});
    return serialize_VkPhysicalDeviceDescriptorIndexingProperties(*((VkPhysicalDeviceDescriptorIndexingProperties*)(name)));}();
return return_nnpbegW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorIndexingPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_zhHJpst=json({});
    
        if (((VkPhysicalDeviceDescriptorIndexingPropertiesEXT*)(name))==NULL){
            return_zhHJpst["null"]=true;
            return return_zhHJpst;
        }
        return_zhHJpst=[&]() {
    json return_zCSdesD=json({});
    return serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(*((VkPhysicalDeviceDescriptorIndexingPropertiesEXT*)(name)));}();
return return_zhHJpst;}();
        return result;
        }
    

        json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo_pNext(const void* name){
        printf("Serializing VkDescriptorSetLayoutBindingFlagsCreateInfo...\n");
        json result;
        result=[&]() {
    json return_hhXyrWh=json({});
    
        if (((VkDescriptorSetLayoutBindingFlagsCreateInfo*)(name))==NULL){
            return_hhXyrWh["null"]=true;
            return return_hhXyrWh;
        }
        return_hhXyrWh=[&]() {
    json return_hsQJuBD=json({});
    return serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(*((VkDescriptorSetLayoutBindingFlagsCreateInfo*)(name)));}();
return return_hhXyrWh;}();
        return result;
        }
    

        json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkDescriptorSetLayoutBindingFlagsCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_GujfzRH=json({});
    
        if (((VkDescriptorSetLayoutBindingFlagsCreateInfoEXT*)(name))==NULL){
            return_GujfzRH["null"]=true;
            return return_GujfzRH;
        }
        return_GujfzRH=[&]() {
    json return_ZgdlwWP=json({});
    return serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(*((VkDescriptorSetLayoutBindingFlagsCreateInfoEXT*)(name)));}();
return return_GujfzRH;}();
        return result;
        }
    

        json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo_pNext(const void* name){
        printf("Serializing VkDescriptorSetVariableDescriptorCountAllocateInfo...\n");
        json result;
        result=[&]() {
    json return_dxsyJiU=json({});
    
        if (((VkDescriptorSetVariableDescriptorCountAllocateInfo*)(name))==NULL){
            return_dxsyJiU["null"]=true;
            return return_dxsyJiU;
        }
        return_dxsyJiU=[&]() {
    json return_cujSzjF=json({});
    return serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(*((VkDescriptorSetVariableDescriptorCountAllocateInfo*)(name)));}();
return return_dxsyJiU;}();
        return result;
        }
    

        json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT_pNext(const void* name){
        printf("Serializing VkDescriptorSetVariableDescriptorCountAllocateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_fXTCpsp=json({});
    
        if (((VkDescriptorSetVariableDescriptorCountAllocateInfoEXT*)(name))==NULL){
            return_fXTCpsp["null"]=true;
            return return_fXTCpsp;
        }
        return_fXTCpsp=[&]() {
    json return_ANKbvQl=json({});
    return serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(*((VkDescriptorSetVariableDescriptorCountAllocateInfoEXT*)(name)));}();
return return_fXTCpsp;}();
        return result;
        }
    

        json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport_pNext(const void* name){
        printf("Serializing VkDescriptorSetVariableDescriptorCountLayoutSupport...\n");
        json result;
        result=[&]() {
    json return_CuwRVPq=json({});
    
        if (((VkDescriptorSetVariableDescriptorCountLayoutSupport*)(name))==NULL){
            return_CuwRVPq["null"]=true;
            return return_CuwRVPq;
        }
        return_CuwRVPq=[&]() {
    json return_LfAOzsb=json({});
    return serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(*((VkDescriptorSetVariableDescriptorCountLayoutSupport*)(name)));}();
return return_CuwRVPq;}();
        return result;
        }
    

        json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT_pNext(const void* name){
        printf("Serializing VkDescriptorSetVariableDescriptorCountLayoutSupportEXT...\n");
        json result;
        result=[&]() {
    json return_jEMpaZy=json({});
    
        if (((VkDescriptorSetVariableDescriptorCountLayoutSupportEXT*)(name))==NULL){
            return_jEMpaZy["null"]=true;
            return return_jEMpaZy;
        }
        return_jEMpaZy=[&]() {
    json return_UyNoGpL=json({});
    return serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(*((VkDescriptorSetVariableDescriptorCountLayoutSupportEXT*)(name)));}();
return return_jEMpaZy;}();
        return result;
        }
    

        json serialize_VkAttachmentDescription2_pNext(const void* name){
        printf("Serializing VkAttachmentDescription2...\n");
        json result;
        result=[&]() {
    json return_XLlrnDy=json({});
    
        if (((VkAttachmentDescription2*)(name))==NULL){
            return_XLlrnDy["null"]=true;
            return return_XLlrnDy;
        }
        return_XLlrnDy=[&]() {
    json return_SLIEBDe=json({});
    return serialize_VkAttachmentDescription2(*((VkAttachmentDescription2*)(name)));}();
return return_XLlrnDy;}();
        return result;
        }
    

        json serialize_VkAttachmentDescription2KHR_pNext(const void* name){
        printf("Serializing VkAttachmentDescription2KHR...\n");
        json result;
        result=[&]() {
    json return_YVQyRBU=json({});
    
        if (((VkAttachmentDescription2KHR*)(name))==NULL){
            return_YVQyRBU["null"]=true;
            return return_YVQyRBU;
        }
        return_YVQyRBU=[&]() {
    json return_PmwNHci=json({});
    return serialize_VkAttachmentDescription2KHR(*((VkAttachmentDescription2KHR*)(name)));}();
return return_YVQyRBU;}();
        return result;
        }
    

        json serialize_VkAttachmentReference2_pNext(const void* name){
        printf("Serializing VkAttachmentReference2...\n");
        json result;
        result=[&]() {
    json return_ebvaije=json({});
    
        if (((VkAttachmentReference2*)(name))==NULL){
            return_ebvaije["null"]=true;
            return return_ebvaije;
        }
        return_ebvaije=[&]() {
    json return_fBwvxUI=json({});
    return serialize_VkAttachmentReference2(*((VkAttachmentReference2*)(name)));}();
return return_ebvaije;}();
        return result;
        }
    

        json serialize_VkAttachmentReference2KHR_pNext(const void* name){
        printf("Serializing VkAttachmentReference2KHR...\n");
        json result;
        result=[&]() {
    json return_bosukQI=json({});
    
        if (((VkAttachmentReference2KHR*)(name))==NULL){
            return_bosukQI["null"]=true;
            return return_bosukQI;
        }
        return_bosukQI=[&]() {
    json return_vFCedLk=json({});
    return serialize_VkAttachmentReference2KHR(*((VkAttachmentReference2KHR*)(name)));}();
return return_bosukQI;}();
        return result;
        }
    

        json serialize_VkSubpassDescription2_pNext(const void* name){
        printf("Serializing VkSubpassDescription2...\n");
        json result;
        result=[&]() {
    json return_BxgQWBZ=json({});
    
        if (((VkSubpassDescription2*)(name))==NULL){
            return_BxgQWBZ["null"]=true;
            return return_BxgQWBZ;
        }
        return_BxgQWBZ=[&]() {
    json return_jlroPzP=json({});
    return serialize_VkSubpassDescription2(*((VkSubpassDescription2*)(name)));}();
return return_BxgQWBZ;}();
        return result;
        }
    

        json serialize_VkSubpassDescription2KHR_pNext(const void* name){
        printf("Serializing VkSubpassDescription2KHR...\n");
        json result;
        result=[&]() {
    json return_IBYPKgo=json({});
    
        if (((VkSubpassDescription2KHR*)(name))==NULL){
            return_IBYPKgo["null"]=true;
            return return_IBYPKgo;
        }
        return_IBYPKgo=[&]() {
    json return_INzSzdc=json({});
    return serialize_VkSubpassDescription2KHR(*((VkSubpassDescription2KHR*)(name)));}();
return return_IBYPKgo;}();
        return result;
        }
    

        json serialize_VkSubpassDependency2_pNext(const void* name){
        printf("Serializing VkSubpassDependency2...\n");
        json result;
        result=[&]() {
    json return_PtughuF=json({});
    
        if (((VkSubpassDependency2*)(name))==NULL){
            return_PtughuF["null"]=true;
            return return_PtughuF;
        }
        return_PtughuF=[&]() {
    json return_tvbgnuF=json({});
    return serialize_VkSubpassDependency2(*((VkSubpassDependency2*)(name)));}();
return return_PtughuF;}();
        return result;
        }
    

        json serialize_VkSubpassDependency2KHR_pNext(const void* name){
        printf("Serializing VkSubpassDependency2KHR...\n");
        json result;
        result=[&]() {
    json return_EYkvuVt=json({});
    
        if (((VkSubpassDependency2KHR*)(name))==NULL){
            return_EYkvuVt["null"]=true;
            return return_EYkvuVt;
        }
        return_EYkvuVt=[&]() {
    json return_pGUhAaj=json({});
    return serialize_VkSubpassDependency2KHR(*((VkSubpassDependency2KHR*)(name)));}();
return return_EYkvuVt;}();
        return result;
        }
    

        json serialize_VkRenderPassCreateInfo2_pNext(const void* name){
        printf("Serializing VkRenderPassCreateInfo2...\n");
        json result;
        result=[&]() {
    json return_lQPWuma=json({});
    
        if (((VkRenderPassCreateInfo2*)(name))==NULL){
            return_lQPWuma["null"]=true;
            return return_lQPWuma;
        }
        return_lQPWuma=[&]() {
    json return_PsPfZVo=json({});
    return serialize_VkRenderPassCreateInfo2(*((VkRenderPassCreateInfo2*)(name)));}();
return return_lQPWuma;}();
        return result;
        }
    

        json serialize_VkRenderPassCreateInfo2KHR_pNext(const void* name){
        printf("Serializing VkRenderPassCreateInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_GXjDEqB=json({});
    
        if (((VkRenderPassCreateInfo2KHR*)(name))==NULL){
            return_GXjDEqB["null"]=true;
            return return_GXjDEqB;
        }
        return_GXjDEqB=[&]() {
    json return_OuqAIUp=json({});
    return serialize_VkRenderPassCreateInfo2KHR(*((VkRenderPassCreateInfo2KHR*)(name)));}();
return return_GXjDEqB;}();
        return result;
        }
    

        json serialize_VkSubpassBeginInfo_pNext(const void* name){
        printf("Serializing VkSubpassBeginInfo...\n");
        json result;
        result=[&]() {
    json return_JBDreAx=json({});
    
        if (((VkSubpassBeginInfo*)(name))==NULL){
            return_JBDreAx["null"]=true;
            return return_JBDreAx;
        }
        return_JBDreAx=[&]() {
    json return_QhJVFBl=json({});
    return serialize_VkSubpassBeginInfo(*((VkSubpassBeginInfo*)(name)));}();
return return_JBDreAx;}();
        return result;
        }
    

        json serialize_VkSubpassBeginInfoKHR_pNext(const void* name){
        printf("Serializing VkSubpassBeginInfoKHR...\n");
        json result;
        result=[&]() {
    json return_puyGluI=json({});
    
        if (((VkSubpassBeginInfoKHR*)(name))==NULL){
            return_puyGluI["null"]=true;
            return return_puyGluI;
        }
        return_puyGluI=[&]() {
    json return_UHXiaNs=json({});
    return serialize_VkSubpassBeginInfoKHR(*((VkSubpassBeginInfoKHR*)(name)));}();
return return_puyGluI;}();
        return result;
        }
    

        json serialize_VkSubpassEndInfo_pNext(const void* name){
        printf("Serializing VkSubpassEndInfo...\n");
        json result;
        result=[&]() {
    json return_UCRiJeb=json({});
    
        if (((VkSubpassEndInfo*)(name))==NULL){
            return_UCRiJeb["null"]=true;
            return return_UCRiJeb;
        }
        return_UCRiJeb=[&]() {
    json return_HvXGDUU=json({});
    return serialize_VkSubpassEndInfo(*((VkSubpassEndInfo*)(name)));}();
return return_UCRiJeb;}();
        return result;
        }
    

        json serialize_VkSubpassEndInfoKHR_pNext(const void* name){
        printf("Serializing VkSubpassEndInfoKHR...\n");
        json result;
        result=[&]() {
    json return_bpBimwu=json({});
    
        if (((VkSubpassEndInfoKHR*)(name))==NULL){
            return_bpBimwu["null"]=true;
            return return_bpBimwu;
        }
        return_bpBimwu=[&]() {
    json return_UuYmENf=json({});
    return serialize_VkSubpassEndInfoKHR(*((VkSubpassEndInfoKHR*)(name)));}();
return return_bpBimwu;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTimelineSemaphoreFeatures...\n");
        json result;
        result=[&]() {
    json return_EwwzHwT=json({});
    
        if (((VkPhysicalDeviceTimelineSemaphoreFeatures*)(name))==NULL){
            return_EwwzHwT["null"]=true;
            return return_EwwzHwT;
        }
        return_EwwzHwT=[&]() {
    json return_SoaDmMR=json({});
    return serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(*((VkPhysicalDeviceTimelineSemaphoreFeatures*)(name)));}();
return return_EwwzHwT;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTimelineSemaphoreFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_PtcsqfZ=json({});
    
        if (((VkPhysicalDeviceTimelineSemaphoreFeaturesKHR*)(name))==NULL){
            return_PtcsqfZ["null"]=true;
            return return_PtcsqfZ;
        }
        return_PtcsqfZ=[&]() {
    json return_TwkWzCs=json({});
    return serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(*((VkPhysicalDeviceTimelineSemaphoreFeaturesKHR*)(name)));}();
return return_PtcsqfZ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTimelineSemaphoreProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTimelineSemaphoreProperties...\n");
        json result;
        result=[&]() {
    json return_QInaqkG=json({});
    
        if (((VkPhysicalDeviceTimelineSemaphoreProperties*)(name))==NULL){
            return_QInaqkG["null"]=true;
            return return_QInaqkG;
        }
        return_QInaqkG=[&]() {
    json return_cWBdcUQ=json({});
    return serialize_VkPhysicalDeviceTimelineSemaphoreProperties(*((VkPhysicalDeviceTimelineSemaphoreProperties*)(name)));}();
return return_QInaqkG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTimelineSemaphorePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_BwEEjxV=json({});
    
        if (((VkPhysicalDeviceTimelineSemaphorePropertiesKHR*)(name))==NULL){
            return_BwEEjxV["null"]=true;
            return return_BwEEjxV;
        }
        return_BwEEjxV=[&]() {
    json return_LLsdTNp=json({});
    return serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(*((VkPhysicalDeviceTimelineSemaphorePropertiesKHR*)(name)));}();
return return_BwEEjxV;}();
        return result;
        }
    

        json serialize_VkSemaphoreTypeCreateInfo_pNext(const void* name){
        printf("Serializing VkSemaphoreTypeCreateInfo...\n");
        json result;
        result=[&]() {
    json return_MyPGFeo=json({});
    
        if (((VkSemaphoreTypeCreateInfo*)(name))==NULL){
            return_MyPGFeo["null"]=true;
            return return_MyPGFeo;
        }
        return_MyPGFeo=[&]() {
    json return_SzhCeJr=json({});
    return serialize_VkSemaphoreTypeCreateInfo(*((VkSemaphoreTypeCreateInfo*)(name)));}();
return return_MyPGFeo;}();
        return result;
        }
    

        json serialize_VkSemaphoreTypeCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkSemaphoreTypeCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_bqrfczi=json({});
    
        if (((VkSemaphoreTypeCreateInfoKHR*)(name))==NULL){
            return_bqrfczi["null"]=true;
            return return_bqrfczi;
        }
        return_bqrfczi=[&]() {
    json return_bGISxmc=json({});
    return serialize_VkSemaphoreTypeCreateInfoKHR(*((VkSemaphoreTypeCreateInfoKHR*)(name)));}();
return return_bqrfczi;}();
        return result;
        }
    

        json serialize_VkTimelineSemaphoreSubmitInfo_pNext(const void* name){
        printf("Serializing VkTimelineSemaphoreSubmitInfo...\n");
        json result;
        result=[&]() {
    json return_mKWbOHP=json({});
    
        if (((VkTimelineSemaphoreSubmitInfo*)(name))==NULL){
            return_mKWbOHP["null"]=true;
            return return_mKWbOHP;
        }
        return_mKWbOHP=[&]() {
    json return_yViGUpM=json({});
    return serialize_VkTimelineSemaphoreSubmitInfo(*((VkTimelineSemaphoreSubmitInfo*)(name)));}();
return return_mKWbOHP;}();
        return result;
        }
    

        json serialize_VkTimelineSemaphoreSubmitInfoKHR_pNext(const void* name){
        printf("Serializing VkTimelineSemaphoreSubmitInfoKHR...\n");
        json result;
        result=[&]() {
    json return_IDXPATz=json({});
    
        if (((VkTimelineSemaphoreSubmitInfoKHR*)(name))==NULL){
            return_IDXPATz["null"]=true;
            return return_IDXPATz;
        }
        return_IDXPATz=[&]() {
    json return_ggulqUn=json({});
    return serialize_VkTimelineSemaphoreSubmitInfoKHR(*((VkTimelineSemaphoreSubmitInfoKHR*)(name)));}();
return return_IDXPATz;}();
        return result;
        }
    

        json serialize_VkSemaphoreWaitInfo_pNext(const void* name){
        printf("Serializing VkSemaphoreWaitInfo...\n");
        json result;
        result=[&]() {
    json return_tSzqvGA=json({});
    
        if (((VkSemaphoreWaitInfo*)(name))==NULL){
            return_tSzqvGA["null"]=true;
            return return_tSzqvGA;
        }
        return_tSzqvGA=[&]() {
    json return_XmMclKj=json({});
    return serialize_VkSemaphoreWaitInfo(*((VkSemaphoreWaitInfo*)(name)));}();
return return_tSzqvGA;}();
        return result;
        }
    

        json serialize_VkSemaphoreWaitInfoKHR_pNext(const void* name){
        printf("Serializing VkSemaphoreWaitInfoKHR...\n");
        json result;
        result=[&]() {
    json return_XNhMEUg=json({});
    
        if (((VkSemaphoreWaitInfoKHR*)(name))==NULL){
            return_XNhMEUg["null"]=true;
            return return_XNhMEUg;
        }
        return_XNhMEUg=[&]() {
    json return_tDmoyxo=json({});
    return serialize_VkSemaphoreWaitInfoKHR(*((VkSemaphoreWaitInfoKHR*)(name)));}();
return return_XNhMEUg;}();
        return result;
        }
    

        json serialize_VkSemaphoreSignalInfo_pNext(const void* name){
        printf("Serializing VkSemaphoreSignalInfo...\n");
        json result;
        result=[&]() {
    json return_qnfnrRp=json({});
    
        if (((VkSemaphoreSignalInfo*)(name))==NULL){
            return_qnfnrRp["null"]=true;
            return return_qnfnrRp;
        }
        return_qnfnrRp=[&]() {
    json return_dbUmtYM=json({});
    return serialize_VkSemaphoreSignalInfo(*((VkSemaphoreSignalInfo*)(name)));}();
return return_qnfnrRp;}();
        return result;
        }
    

        json serialize_VkSemaphoreSignalInfoKHR_pNext(const void* name){
        printf("Serializing VkSemaphoreSignalInfoKHR...\n");
        json result;
        result=[&]() {
    json return_kpGEUkJ=json({});
    
        if (((VkSemaphoreSignalInfoKHR*)(name))==NULL){
            return_kpGEUkJ["null"]=true;
            return return_kpGEUkJ;
        }
        return_kpGEUkJ=[&]() {
    json return_aabArPM=json({});
    return serialize_VkSemaphoreSignalInfoKHR(*((VkSemaphoreSignalInfoKHR*)(name)));}();
return return_kpGEUkJ;}();
        return result;
        }
    

        json serialize_VkVertexInputBindingDivisorDescriptionEXT_pNext(const void* name){
        printf("Serializing VkVertexInputBindingDivisorDescriptionEXT...\n");
        json result;
        result=[&]() {
    json return_jaFlvHE=json({});
    
        if (((VkVertexInputBindingDivisorDescriptionEXT*)(name))==NULL){
            return_jaFlvHE["null"]=true;
            return return_jaFlvHE;
        }
        return_jaFlvHE=[&]() {
    json return_kobRmAV=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(*((VkVertexInputBindingDivisorDescriptionEXT*)(name)));}();
return return_jaFlvHE;}();
        return result;
        }
    

        json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineVertexInputDivisorStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_niUERBK=json({});
    
        if (((VkPipelineVertexInputDivisorStateCreateInfoEXT*)(name))==NULL){
            return_niUERBK["null"]=true;
            return return_niUERBK;
        }
        return_niUERBK=[&]() {
    json return_sObYxcW=json({});
    return serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(*((VkPipelineVertexInputDivisorStateCreateInfoEXT*)(name)));}();
return return_niUERBK;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_QXtoBGa=json({});
    
        if (((VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT*)(name))==NULL){
            return_QXtoBGa["null"]=true;
            return return_QXtoBGa;
        }
        return_QXtoBGa=[&]() {
    json return_kphNNSE=json({});
    return serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(*((VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT*)(name)));}();
return return_QXtoBGa;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePCIBusInfoPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_IiPNALG=json({});
    
        if (((VkPhysicalDevicePCIBusInfoPropertiesEXT*)(name))==NULL){
            return_IiPNALG["null"]=true;
            return return_IiPNALG;
        }
        return_IiPNALG=[&]() {
    json return_eWXQByp=json({});
    return serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(*((VkPhysicalDevicePCIBusInfoPropertiesEXT*)(name)));}();
return return_IiPNALG;}();
        return result;
        }
    

        json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT_pNext(const void* name){
        printf("Serializing VkCommandBufferInheritanceConditionalRenderingInfoEXT...\n");
        json result;
        result=[&]() {
    json return_RGNXAnl=json({});
    
        if (((VkCommandBufferInheritanceConditionalRenderingInfoEXT*)(name))==NULL){
            return_RGNXAnl["null"]=true;
            return return_RGNXAnl;
        }
        return_RGNXAnl=[&]() {
    json return_MtyqGqe=json({});
    return serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(*((VkCommandBufferInheritanceConditionalRenderingInfoEXT*)(name)));}();
return return_RGNXAnl;}();
        return result;
        }
    

        json serialize_VkPhysicalDevice8BitStorageFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDevice8BitStorageFeatures...\n");
        json result;
        result=[&]() {
    json return_tphqXfj=json({});
    
        if (((VkPhysicalDevice8BitStorageFeatures*)(name))==NULL){
            return_tphqXfj["null"]=true;
            return return_tphqXfj;
        }
        return_tphqXfj=[&]() {
    json return_ZfDvaZW=json({});
    return serialize_VkPhysicalDevice8BitStorageFeatures(*((VkPhysicalDevice8BitStorageFeatures*)(name)));}();
return return_tphqXfj;}();
        return result;
        }
    

        json serialize_VkPhysicalDevice8BitStorageFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevice8BitStorageFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_lbUQLKW=json({});
    
        if (((VkPhysicalDevice8BitStorageFeaturesKHR*)(name))==NULL){
            return_lbUQLKW["null"]=true;
            return return_lbUQLKW;
        }
        return_lbUQLKW=[&]() {
    json return_ThnWKUE=json({});
    return serialize_VkPhysicalDevice8BitStorageFeaturesKHR(*((VkPhysicalDevice8BitStorageFeaturesKHR*)(name)));}();
return return_lbUQLKW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceConditionalRenderingFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_UWFfAGQ=json({});
    
        if (((VkPhysicalDeviceConditionalRenderingFeaturesEXT*)(name))==NULL){
            return_UWFfAGQ["null"]=true;
            return return_UWFfAGQ;
        }
        return_UWFfAGQ=[&]() {
    json return_ZYlmboU=json({});
    return serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(*((VkPhysicalDeviceConditionalRenderingFeaturesEXT*)(name)));}();
return return_UWFfAGQ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkanMemoryModelFeatures...\n");
        json result;
        result=[&]() {
    json return_GJKwMUY=json({});
    
        if (((VkPhysicalDeviceVulkanMemoryModelFeatures*)(name))==NULL){
            return_GJKwMUY["null"]=true;
            return return_GJKwMUY;
        }
        return_GJKwMUY=[&]() {
    json return_rTkDdAU=json({});
    return serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(*((VkPhysicalDeviceVulkanMemoryModelFeatures*)(name)));}();
return return_GJKwMUY;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkanMemoryModelFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_MUugMay=json({});
    
        if (((VkPhysicalDeviceVulkanMemoryModelFeaturesKHR*)(name))==NULL){
            return_MUugMay["null"]=true;
            return return_MUugMay;
        }
        return_MUugMay=[&]() {
    json return_NlgJkVH=json({});
    return serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(*((VkPhysicalDeviceVulkanMemoryModelFeaturesKHR*)(name)));}();
return return_MUugMay;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderAtomicInt64Features_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderAtomicInt64Features...\n");
        json result;
        result=[&]() {
    json return_iPnwKGa=json({});
    
        if (((VkPhysicalDeviceShaderAtomicInt64Features*)(name))==NULL){
            return_iPnwKGa["null"]=true;
            return return_iPnwKGa;
        }
        return_iPnwKGa=[&]() {
    json return_sapQQiB=json({});
    return serialize_VkPhysicalDeviceShaderAtomicInt64Features(*((VkPhysicalDeviceShaderAtomicInt64Features*)(name)));}();
return return_iPnwKGa;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderAtomicInt64FeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_jkHXzNH=json({});
    
        if (((VkPhysicalDeviceShaderAtomicInt64FeaturesKHR*)(name))==NULL){
            return_jkHXzNH["null"]=true;
            return return_jkHXzNH;
        }
        return_jkHXzNH=[&]() {
    json return_zKpRNYW=json({});
    return serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(*((VkPhysicalDeviceShaderAtomicInt64FeaturesKHR*)(name)));}();
return return_jkHXzNH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderAtomicFloatFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_WqXXZgS=json({});
    
        if (((VkPhysicalDeviceShaderAtomicFloatFeaturesEXT*)(name))==NULL){
            return_WqXXZgS["null"]=true;
            return return_WqXXZgS;
        }
        return_WqXXZgS=[&]() {
    json return_cWqptWH=json({});
    return serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(*((VkPhysicalDeviceShaderAtomicFloatFeaturesEXT*)(name)));}();
return return_WqXXZgS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_XplUrXa=json({});
    
        if (((VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT*)(name))==NULL){
            return_XplUrXa["null"]=true;
            return return_XplUrXa;
        }
        return_XplUrXa=[&]() {
    json return_BSSyTrr=json({});
    return serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(*((VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT*)(name)));}();
return return_XplUrXa;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_nzIDwPB=json({});
    
        if (((VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT*)(name))==NULL){
            return_nzIDwPB["null"]=true;
            return return_nzIDwPB;
        }
        return_nzIDwPB=[&]() {
    json return_xPNUMqo=json({});
    return serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(*((VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT*)(name)));}();
return return_nzIDwPB;}();
        return result;
        }
    

        json serialize_VkQueueFamilyCheckpointPropertiesNV_pNext(const void* name){
        printf("Serializing VkQueueFamilyCheckpointPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_VFLIvDZ=json({});
    
        if (((VkQueueFamilyCheckpointPropertiesNV*)(name))==NULL){
            return_VFLIvDZ["null"]=true;
            return return_VFLIvDZ;
        }
        return_VFLIvDZ=[&]() {
    json return_wCpWeig=json({});
    return serialize_VkQueueFamilyCheckpointPropertiesNV(*((VkQueueFamilyCheckpointPropertiesNV*)(name)));}();
return return_VFLIvDZ;}();
        return result;
        }
    

        json serialize_VkCheckpointDataNV_pNext(const void* name){
        printf("Serializing VkCheckpointDataNV...\n");
        json result;
        result=[&]() {
    json return_AQLgraC=json({});
    
        if (((VkCheckpointDataNV*)(name))==NULL){
            return_AQLgraC["null"]=true;
            return return_AQLgraC;
        }
        return_AQLgraC=[&]() {
    json return_cunKPmM=json({});
    return serialize_VkCheckpointDataNV(*((VkCheckpointDataNV*)(name)));}();
return return_AQLgraC;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDepthStencilResolveProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDepthStencilResolveProperties...\n");
        json result;
        result=[&]() {
    json return_ATsDGcv=json({});
    
        if (((VkPhysicalDeviceDepthStencilResolveProperties*)(name))==NULL){
            return_ATsDGcv["null"]=true;
            return return_ATsDGcv;
        }
        return_ATsDGcv=[&]() {
    json return_DrozWCf=json({});
    return serialize_VkPhysicalDeviceDepthStencilResolveProperties(*((VkPhysicalDeviceDepthStencilResolveProperties*)(name)));}();
return return_ATsDGcv;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDepthStencilResolvePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_BqrAiTF=json({});
    
        if (((VkPhysicalDeviceDepthStencilResolvePropertiesKHR*)(name))==NULL){
            return_BqrAiTF["null"]=true;
            return return_BqrAiTF;
        }
        return_BqrAiTF=[&]() {
    json return_odPitpq=json({});
    return serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(*((VkPhysicalDeviceDepthStencilResolvePropertiesKHR*)(name)));}();
return return_BqrAiTF;}();
        return result;
        }
    

        json serialize_VkSubpassDescriptionDepthStencilResolve_pNext(const void* name){
        printf("Serializing VkSubpassDescriptionDepthStencilResolve...\n");
        json result;
        result=[&]() {
    json return_bANlGHT=json({});
    
        if (((VkSubpassDescriptionDepthStencilResolve*)(name))==NULL){
            return_bANlGHT["null"]=true;
            return return_bANlGHT;
        }
        return_bANlGHT=[&]() {
    json return_eIWOljA=json({});
    return serialize_VkSubpassDescriptionDepthStencilResolve(*((VkSubpassDescriptionDepthStencilResolve*)(name)));}();
return return_bANlGHT;}();
        return result;
        }
    

        json serialize_VkSubpassDescriptionDepthStencilResolveKHR_pNext(const void* name){
        printf("Serializing VkSubpassDescriptionDepthStencilResolveKHR...\n");
        json result;
        result=[&]() {
    json return_mZHJfPo=json({});
    
        if (((VkSubpassDescriptionDepthStencilResolveKHR*)(name))==NULL){
            return_mZHJfPo["null"]=true;
            return return_mZHJfPo;
        }
        return_mZHJfPo=[&]() {
    json return_tGAlAsy=json({});
    return serialize_VkSubpassDescriptionDepthStencilResolveKHR(*((VkSubpassDescriptionDepthStencilResolveKHR*)(name)));}();
return return_mZHJfPo;}();
        return result;
        }
    

        json serialize_VkImageViewASTCDecodeModeEXT_pNext(const void* name){
        printf("Serializing VkImageViewASTCDecodeModeEXT...\n");
        json result;
        result=[&]() {
    json return_vEAbSOe=json({});
    
        if (((VkImageViewASTCDecodeModeEXT*)(name))==NULL){
            return_vEAbSOe["null"]=true;
            return return_vEAbSOe;
        }
        return_vEAbSOe=[&]() {
    json return_NcXYePE=json({});
    return serialize_VkImageViewASTCDecodeModeEXT(*((VkImageViewASTCDecodeModeEXT*)(name)));}();
return return_vEAbSOe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceASTCDecodeFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_YUDKCzH=json({});
    
        if (((VkPhysicalDeviceASTCDecodeFeaturesEXT*)(name))==NULL){
            return_YUDKCzH["null"]=true;
            return return_YUDKCzH;
        }
        return_YUDKCzH=[&]() {
    json return_zyneHnZ=json({});
    return serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(*((VkPhysicalDeviceASTCDecodeFeaturesEXT*)(name)));}();
return return_YUDKCzH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTransformFeedbackFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_xSDhsap=json({});
    
        if (((VkPhysicalDeviceTransformFeedbackFeaturesEXT*)(name))==NULL){
            return_xSDhsap["null"]=true;
            return return_xSDhsap;
        }
        return_xSDhsap=[&]() {
    json return_XaTIxBi=json({});
    return serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(*((VkPhysicalDeviceTransformFeedbackFeaturesEXT*)(name)));}();
return return_xSDhsap;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTransformFeedbackPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_bAcGSLC=json({});
    
        if (((VkPhysicalDeviceTransformFeedbackPropertiesEXT*)(name))==NULL){
            return_bAcGSLC["null"]=true;
            return return_bAcGSLC;
        }
        return_bAcGSLC=[&]() {
    json return_eFyHEEK=json({});
    return serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(*((VkPhysicalDeviceTransformFeedbackPropertiesEXT*)(name)));}();
return return_bAcGSLC;}();
        return result;
        }
    

        json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineRasterizationStateStreamCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_HkRcNIn=json({});
    
        if (((VkPipelineRasterizationStateStreamCreateInfoEXT*)(name))==NULL){
            return_HkRcNIn["null"]=true;
            return return_HkRcNIn;
        }
        return_HkRcNIn=[&]() {
    json return_ilzaOuT=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(*((VkPipelineRasterizationStateStreamCreateInfoEXT*)(name)));}();
return return_HkRcNIn;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_rEWLFDo=json({});
    
        if (((VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV*)(name))==NULL){
            return_rEWLFDo["null"]=true;
            return return_rEWLFDo;
        }
        return_rEWLFDo=[&]() {
    json return_tiisucO=json({});
    return serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(*((VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV*)(name)));}();
return return_rEWLFDo;}();
        return result;
        }
    

        json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineRepresentativeFragmentTestStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_oDBpDDo=json({});
    
        if (((VkPipelineRepresentativeFragmentTestStateCreateInfoNV*)(name))==NULL){
            return_oDBpDDo["null"]=true;
            return return_oDBpDDo;
        }
        return_oDBpDDo=[&]() {
    json return_TYIqvzt=json({});
    return serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(*((VkPipelineRepresentativeFragmentTestStateCreateInfoNV*)(name)));}();
return return_oDBpDDo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExclusiveScissorFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_IAhGgJG=json({});
    
        if (((VkPhysicalDeviceExclusiveScissorFeaturesNV*)(name))==NULL){
            return_IAhGgJG["null"]=true;
            return return_IAhGgJG;
        }
        return_IAhGgJG=[&]() {
    json return_VAUEEng=json({});
    return serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(*((VkPhysicalDeviceExclusiveScissorFeaturesNV*)(name)));}();
return return_IAhGgJG;}();
        return result;
        }
    

        json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineViewportExclusiveScissorStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_WRkQnjs=json({});
    
        if (((VkPipelineViewportExclusiveScissorStateCreateInfoNV*)(name))==NULL){
            return_WRkQnjs["null"]=true;
            return return_WRkQnjs;
        }
        return_WRkQnjs=[&]() {
    json return_XWiwmej=json({});
    return serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(*((VkPipelineViewportExclusiveScissorStateCreateInfoNV*)(name)));}();
return return_WRkQnjs;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCornerSampledImageFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_GFHlmPK=json({});
    
        if (((VkPhysicalDeviceCornerSampledImageFeaturesNV*)(name))==NULL){
            return_GFHlmPK["null"]=true;
            return return_GFHlmPK;
        }
        return_GFHlmPK=[&]() {
    json return_teZCbzc=json({});
    return serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(*((VkPhysicalDeviceCornerSampledImageFeaturesNV*)(name)));}();
return return_GFHlmPK;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceComputeShaderDerivativesFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_FftGiHr=json({});
    
        if (((VkPhysicalDeviceComputeShaderDerivativesFeaturesNV*)(name))==NULL){
            return_FftGiHr["null"]=true;
            return return_FftGiHr;
        }
        return_FftGiHr=[&]() {
    json return_ouRyKxD=json({});
    return serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(*((VkPhysicalDeviceComputeShaderDerivativesFeaturesNV*)(name)));}();
return return_FftGiHr;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderImageFootprintFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_VvPqEsa=json({});
    
        if (((VkPhysicalDeviceShaderImageFootprintFeaturesNV*)(name))==NULL){
            return_VvPqEsa["null"]=true;
            return return_VvPqEsa;
        }
        return_VvPqEsa=[&]() {
    json return_gbVdYLO=json({});
    return serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(*((VkPhysicalDeviceShaderImageFootprintFeaturesNV*)(name)));}();
return return_VvPqEsa;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_PuGBKpO=json({});
    
        if (((VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV*)(name))==NULL){
            return_PuGBKpO["null"]=true;
            return return_PuGBKpO;
        }
        return_PuGBKpO=[&]() {
    json return_yqsWcbM=json({});
    return serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(*((VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV*)(name)));}();
return return_PuGBKpO;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCopyMemoryIndirectFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_WqpwGfL=json({});
    
        if (((VkPhysicalDeviceCopyMemoryIndirectFeaturesNV*)(name))==NULL){
            return_WqpwGfL["null"]=true;
            return return_WqpwGfL;
        }
        return_WqpwGfL=[&]() {
    json return_tkrECSs=json({});
    return serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(*((VkPhysicalDeviceCopyMemoryIndirectFeaturesNV*)(name)));}();
return return_WqpwGfL;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCopyMemoryIndirectPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_zmYIqHz=json({});
    
        if (((VkPhysicalDeviceCopyMemoryIndirectPropertiesNV*)(name))==NULL){
            return_zmYIqHz["null"]=true;
            return return_zmYIqHz;
        }
        return_zmYIqHz=[&]() {
    json return_rVMBFAN=json({});
    return serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(*((VkPhysicalDeviceCopyMemoryIndirectPropertiesNV*)(name)));}();
return return_zmYIqHz;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMemoryDecompressionFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_tvfkgwl=json({});
    
        if (((VkPhysicalDeviceMemoryDecompressionFeaturesNV*)(name))==NULL){
            return_tvfkgwl["null"]=true;
            return return_tvfkgwl;
        }
        return_tvfkgwl=[&]() {
    json return_zuToexu=json({});
    return serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(*((VkPhysicalDeviceMemoryDecompressionFeaturesNV*)(name)));}();
return return_tvfkgwl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMemoryDecompressionPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_JoqRuwk=json({});
    
        if (((VkPhysicalDeviceMemoryDecompressionPropertiesNV*)(name))==NULL){
            return_JoqRuwk["null"]=true;
            return return_JoqRuwk;
        }
        return_JoqRuwk=[&]() {
    json return_BkecuWD=json({});
    return serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(*((VkPhysicalDeviceMemoryDecompressionPropertiesNV*)(name)));}();
return return_JoqRuwk;}();
        return result;
        }
    

        json serialize_VkShadingRatePaletteNV_pNext(const void* name){
        printf("Serializing VkShadingRatePaletteNV...\n");
        json result;
        result=[&]() {
    json return_EUCSCAe=json({});
    
        if (((VkShadingRatePaletteNV*)(name))==NULL){
            return_EUCSCAe["null"]=true;
            return return_EUCSCAe;
        }
        return_EUCSCAe=[&]() {
    json return_xDqlTSR=json({});
    return serialize_VkShadingRatePaletteNV(*((VkShadingRatePaletteNV*)(name)));}();
return return_EUCSCAe;}();
        return result;
        }
    

        json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineViewportShadingRateImageStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_HybxAGw=json({});
    
        if (((VkPipelineViewportShadingRateImageStateCreateInfoNV*)(name))==NULL){
            return_HybxAGw["null"]=true;
            return return_HybxAGw;
        }
        return_HybxAGw=[&]() {
    json return_ERmyxEM=json({});
    return serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(*((VkPipelineViewportShadingRateImageStateCreateInfoNV*)(name)));}();
return return_HybxAGw;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShadingRateImageFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_mScatTV=json({});
    
        if (((VkPhysicalDeviceShadingRateImageFeaturesNV*)(name))==NULL){
            return_mScatTV["null"]=true;
            return return_mScatTV;
        }
        return_mScatTV=[&]() {
    json return_MhXNrBH=json({});
    return serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(*((VkPhysicalDeviceShadingRateImageFeaturesNV*)(name)));}();
return return_mScatTV;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShadingRateImagePropertiesNV...\n");
        json result;
        result=[&]() {
    json return_Kqyqnat=json({});
    
        if (((VkPhysicalDeviceShadingRateImagePropertiesNV*)(name))==NULL){
            return_Kqyqnat["null"]=true;
            return return_Kqyqnat;
        }
        return_Kqyqnat=[&]() {
    json return_GQjhwCe=json({});
    return serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(*((VkPhysicalDeviceShadingRateImagePropertiesNV*)(name)));}();
return return_Kqyqnat;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceInvocationMaskFeaturesHUAWEI...\n");
        json result;
        result=[&]() {
    json return_QMWDpAC=json({});
    
        if (((VkPhysicalDeviceInvocationMaskFeaturesHUAWEI*)(name))==NULL){
            return_QMWDpAC["null"]=true;
            return return_QMWDpAC;
        }
        return_QMWDpAC=[&]() {
    json return_Nszwyjt=json({});
    return serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(*((VkPhysicalDeviceInvocationMaskFeaturesHUAWEI*)(name)));}();
return return_QMWDpAC;}();
        return result;
        }
    

        json serialize_VkCoarseSampleLocationNV_pNext(const void* name){
        printf("Serializing VkCoarseSampleLocationNV...\n");
        json result;
        result=[&]() {
    json return_WoIeoDu=json({});
    
        if (((VkCoarseSampleLocationNV*)(name))==NULL){
            return_WoIeoDu["null"]=true;
            return return_WoIeoDu;
        }
        return_WoIeoDu=[&]() {
    json return_nFiQRZV=json({});
    return serialize_VkCoarseSampleLocationNV(*((VkCoarseSampleLocationNV*)(name)));}();
return return_WoIeoDu;}();
        return result;
        }
    

        json serialize_VkCoarseSampleOrderCustomNV_pNext(const void* name){
        printf("Serializing VkCoarseSampleOrderCustomNV...\n");
        json result;
        result=[&]() {
    json return_ewghbRF=json({});
    
        if (((VkCoarseSampleOrderCustomNV*)(name))==NULL){
            return_ewghbRF["null"]=true;
            return return_ewghbRF;
        }
        return_ewghbRF=[&]() {
    json return_kQQLudj=json({});
    return serialize_VkCoarseSampleOrderCustomNV(*((VkCoarseSampleOrderCustomNV*)(name)));}();
return return_ewghbRF;}();
        return result;
        }
    

        json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineViewportCoarseSampleOrderStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_eTUEoff=json({});
    
        if (((VkPipelineViewportCoarseSampleOrderStateCreateInfoNV*)(name))==NULL){
            return_eTUEoff["null"]=true;
            return return_eTUEoff;
        }
        return_eTUEoff=[&]() {
    json return_EkbQGyO=json({});
    return serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(*((VkPipelineViewportCoarseSampleOrderStateCreateInfoNV*)(name)));}();
return return_eTUEoff;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMeshShaderFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMeshShaderFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_RYaMPvP=json({});
    
        if (((VkPhysicalDeviceMeshShaderFeaturesNV*)(name))==NULL){
            return_RYaMPvP["null"]=true;
            return return_RYaMPvP;
        }
        return_RYaMPvP=[&]() {
    json return_PeLEILM=json({});
    return serialize_VkPhysicalDeviceMeshShaderFeaturesNV(*((VkPhysicalDeviceMeshShaderFeaturesNV*)(name)));}();
return return_RYaMPvP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMeshShaderPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMeshShaderPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_yDqNjUD=json({});
    
        if (((VkPhysicalDeviceMeshShaderPropertiesNV*)(name))==NULL){
            return_yDqNjUD["null"]=true;
            return return_yDqNjUD;
        }
        return_yDqNjUD=[&]() {
    json return_twImSCq=json({});
    return serialize_VkPhysicalDeviceMeshShaderPropertiesNV(*((VkPhysicalDeviceMeshShaderPropertiesNV*)(name)));}();
return return_yDqNjUD;}();
        return result;
        }
    

        json serialize_VkDrawMeshTasksIndirectCommandNV_pNext(const void* name){
        printf("Serializing VkDrawMeshTasksIndirectCommandNV...\n");
        json result;
        result=[&]() {
    json return_vzMnCDP=json({});
    
        if (((VkDrawMeshTasksIndirectCommandNV*)(name))==NULL){
            return_vzMnCDP["null"]=true;
            return return_vzMnCDP;
        }
        return_vzMnCDP=[&]() {
    json return_UKaLkOq=json({});
    return serialize_VkDrawMeshTasksIndirectCommandNV(*((VkDrawMeshTasksIndirectCommandNV*)(name)));}();
return return_vzMnCDP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMeshShaderFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_yVJxboA=json({});
    
        if (((VkPhysicalDeviceMeshShaderFeaturesEXT*)(name))==NULL){
            return_yVJxboA["null"]=true;
            return return_yVJxboA;
        }
        return_yVJxboA=[&]() {
    json return_GYXWGSZ=json({});
    return serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(*((VkPhysicalDeviceMeshShaderFeaturesEXT*)(name)));}();
return return_yVJxboA;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMeshShaderPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_GKJZXYX=json({});
    
        if (((VkPhysicalDeviceMeshShaderPropertiesEXT*)(name))==NULL){
            return_GKJZXYX["null"]=true;
            return return_GKJZXYX;
        }
        return_GKJZXYX=[&]() {
    json return_NzDZTiC=json({});
    return serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(*((VkPhysicalDeviceMeshShaderPropertiesEXT*)(name)));}();
return return_GKJZXYX;}();
        return result;
        }
    

        json serialize_VkDrawMeshTasksIndirectCommandEXT_pNext(const void* name){
        printf("Serializing VkDrawMeshTasksIndirectCommandEXT...\n");
        json result;
        result=[&]() {
    json return_IZAICpX=json({});
    
        if (((VkDrawMeshTasksIndirectCommandEXT*)(name))==NULL){
            return_IZAICpX["null"]=true;
            return return_IZAICpX;
        }
        return_IZAICpX=[&]() {
    json return_GXHkddm=json({});
    return serialize_VkDrawMeshTasksIndirectCommandEXT(*((VkDrawMeshTasksIndirectCommandEXT*)(name)));}();
return return_IZAICpX;}();
        return result;
        }
    

        json serialize_VkRayTracingShaderGroupCreateInfoNV_pNext(const void* name){
        printf("Serializing VkRayTracingShaderGroupCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_Lfdrvqq=json({});
    
        if (((VkRayTracingShaderGroupCreateInfoNV*)(name))==NULL){
            return_Lfdrvqq["null"]=true;
            return return_Lfdrvqq;
        }
        return_Lfdrvqq=[&]() {
    json return_LeuxKOA=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(*((VkRayTracingShaderGroupCreateInfoNV*)(name)));}();
return return_Lfdrvqq;}();
        return result;
        }
    

        json serialize_VkRayTracingShaderGroupCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkRayTracingShaderGroupCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_NzJaXfy=json({});
    
        if (((VkRayTracingShaderGroupCreateInfoKHR*)(name))==NULL){
            return_NzJaXfy["null"]=true;
            return return_NzJaXfy;
        }
        return_NzJaXfy=[&]() {
    json return_KKivukN=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(*((VkRayTracingShaderGroupCreateInfoKHR*)(name)));}();
return return_NzJaXfy;}();
        return result;
        }
    

        json serialize_VkRayTracingPipelineCreateInfoNV_pNext(const void* name){
        printf("Serializing VkRayTracingPipelineCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_dKmSdtG=json({});
    
        if (((VkRayTracingPipelineCreateInfoNV*)(name))==NULL){
            return_dKmSdtG["null"]=true;
            return return_dKmSdtG;
        }
        return_dKmSdtG=[&]() {
    json return_BUYHPNH=json({});
    return serialize_VkRayTracingPipelineCreateInfoNV(*((VkRayTracingPipelineCreateInfoNV*)(name)));}();
return return_dKmSdtG;}();
        return result;
        }
    

        json serialize_VkRayTracingPipelineCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkRayTracingPipelineCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_ZGUnDdG=json({});
    
        if (((VkRayTracingPipelineCreateInfoKHR*)(name))==NULL){
            return_ZGUnDdG["null"]=true;
            return return_ZGUnDdG;
        }
        return_ZGUnDdG=[&]() {
    json return_WxZbQSE=json({});
    return serialize_VkRayTracingPipelineCreateInfoKHR(*((VkRayTracingPipelineCreateInfoKHR*)(name)));}();
return return_ZGUnDdG;}();
        return result;
        }
    

        json serialize_VkGeometryTrianglesNV_pNext(const void* name){
        printf("Serializing VkGeometryTrianglesNV...\n");
        json result;
        result=[&]() {
    json return_kCsLtKS=json({});
    
        if (((VkGeometryTrianglesNV*)(name))==NULL){
            return_kCsLtKS["null"]=true;
            return return_kCsLtKS;
        }
        return_kCsLtKS=[&]() {
    json return_nizbdXj=json({});
    return serialize_VkGeometryTrianglesNV(*((VkGeometryTrianglesNV*)(name)));}();
return return_kCsLtKS;}();
        return result;
        }
    

        json serialize_VkGeometryAABBNV_pNext(const void* name){
        printf("Serializing VkGeometryAABBNV...\n");
        json result;
        result=[&]() {
    json return_CfvnsjS=json({});
    
        if (((VkGeometryAABBNV*)(name))==NULL){
            return_CfvnsjS["null"]=true;
            return return_CfvnsjS;
        }
        return_CfvnsjS=[&]() {
    json return_LhhONyb=json({});
    return serialize_VkGeometryAABBNV(*((VkGeometryAABBNV*)(name)));}();
return return_CfvnsjS;}();
        return result;
        }
    

        json serialize_VkGeometryDataNV_pNext(const void* name){
        printf("Serializing VkGeometryDataNV...\n");
        json result;
        result=[&]() {
    json return_NLDDgEK=json({});
    
        if (((VkGeometryDataNV*)(name))==NULL){
            return_NLDDgEK["null"]=true;
            return return_NLDDgEK;
        }
        return_NLDDgEK=[&]() {
    json return_JhgYrul=json({});
    return serialize_VkGeometryDataNV(*((VkGeometryDataNV*)(name)));}();
return return_NLDDgEK;}();
        return result;
        }
    

        json serialize_VkGeometryNV_pNext(const void* name){
        printf("Serializing VkGeometryNV...\n");
        json result;
        result=[&]() {
    json return_WcPvsoN=json({});
    
        if (((VkGeometryNV*)(name))==NULL){
            return_WcPvsoN["null"]=true;
            return return_WcPvsoN;
        }
        return_WcPvsoN=[&]() {
    json return_dlWcXJV=json({});
    return serialize_VkGeometryNV(*((VkGeometryNV*)(name)));}();
return return_WcPvsoN;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureInfoNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureInfoNV...\n");
        json result;
        result=[&]() {
    json return_NVRugZZ=json({});
    
        if (((VkAccelerationStructureInfoNV*)(name))==NULL){
            return_NVRugZZ["null"]=true;
            return return_NVRugZZ;
        }
        return_NVRugZZ=[&]() {
    json return_DYtSKhx=json({});
    return serialize_VkAccelerationStructureInfoNV(*((VkAccelerationStructureInfoNV*)(name)));}();
return return_NVRugZZ;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureCreateInfoNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_xhGWPcR=json({});
    
        if (((VkAccelerationStructureCreateInfoNV*)(name))==NULL){
            return_xhGWPcR["null"]=true;
            return return_xhGWPcR;
        }
        return_xhGWPcR=[&]() {
    json return_IcPsfAu=json({});
    return serialize_VkAccelerationStructureCreateInfoNV(*((VkAccelerationStructureCreateInfoNV*)(name)));}();
return return_xhGWPcR;}();
        return result;
        }
    

        json serialize_VkBindAccelerationStructureMemoryInfoNV_pNext(const void* name){
        printf("Serializing VkBindAccelerationStructureMemoryInfoNV...\n");
        json result;
        result=[&]() {
    json return_hsDFEYV=json({});
    
        if (((VkBindAccelerationStructureMemoryInfoNV*)(name))==NULL){
            return_hsDFEYV["null"]=true;
            return return_hsDFEYV;
        }
        return_hsDFEYV=[&]() {
    json return_pSZiSTN=json({});
    return serialize_VkBindAccelerationStructureMemoryInfoNV(*((VkBindAccelerationStructureMemoryInfoNV*)(name)));}();
return return_hsDFEYV;}();
        return result;
        }
    

        json serialize_VkWriteDescriptorSetAccelerationStructureKHR_pNext(const void* name){
        printf("Serializing VkWriteDescriptorSetAccelerationStructureKHR...\n");
        json result;
        result=[&]() {
    json return_iLAQCVL=json({});
    
        if (((VkWriteDescriptorSetAccelerationStructureKHR*)(name))==NULL){
            return_iLAQCVL["null"]=true;
            return return_iLAQCVL;
        }
        return_iLAQCVL=[&]() {
    json return_DgudSZl=json({});
    return serialize_VkWriteDescriptorSetAccelerationStructureKHR(*((VkWriteDescriptorSetAccelerationStructureKHR*)(name)));}();
return return_iLAQCVL;}();
        return result;
        }
    

        json serialize_VkWriteDescriptorSetAccelerationStructureNV_pNext(const void* name){
        printf("Serializing VkWriteDescriptorSetAccelerationStructureNV...\n");
        json result;
        result=[&]() {
    json return_YKpdzDu=json({});
    
        if (((VkWriteDescriptorSetAccelerationStructureNV*)(name))==NULL){
            return_YKpdzDu["null"]=true;
            return return_YKpdzDu;
        }
        return_YKpdzDu=[&]() {
    json return_NOoIGRC=json({});
    return serialize_VkWriteDescriptorSetAccelerationStructureNV(*((VkWriteDescriptorSetAccelerationStructureNV*)(name)));}();
return return_YKpdzDu;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureMemoryRequirementsInfoNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureMemoryRequirementsInfoNV...\n");
        json result;
        result=[&]() {
    json return_hjFfeAJ=json({});
    
        if (((VkAccelerationStructureMemoryRequirementsInfoNV*)(name))==NULL){
            return_hjFfeAJ["null"]=true;
            return return_hjFfeAJ;
        }
        return_hjFfeAJ=[&]() {
    json return_yRlFkGU=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsInfoNV(*((VkAccelerationStructureMemoryRequirementsInfoNV*)(name)));}();
return return_hjFfeAJ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceAccelerationStructureFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_GzJpqWa=json({});
    
        if (((VkPhysicalDeviceAccelerationStructureFeaturesKHR*)(name))==NULL){
            return_GzJpqWa["null"]=true;
            return return_GzJpqWa;
        }
        return_GzJpqWa=[&]() {
    json return_eYnlmdi=json({});
    return serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(*((VkPhysicalDeviceAccelerationStructureFeaturesKHR*)(name)));}();
return return_GzJpqWa;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingPipelineFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_nseTqbi=json({});
    
        if (((VkPhysicalDeviceRayTracingPipelineFeaturesKHR*)(name))==NULL){
            return_nseTqbi["null"]=true;
            return return_nseTqbi;
        }
        return_nseTqbi=[&]() {
    json return_CSqixur=json({});
    return serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(*((VkPhysicalDeviceRayTracingPipelineFeaturesKHR*)(name)));}();
return return_nseTqbi;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayQueryFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayQueryFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_DhykcsV=json({});
    
        if (((VkPhysicalDeviceRayQueryFeaturesKHR*)(name))==NULL){
            return_DhykcsV["null"]=true;
            return return_DhykcsV;
        }
        return_DhykcsV=[&]() {
    json return_dDweVZo=json({});
    return serialize_VkPhysicalDeviceRayQueryFeaturesKHR(*((VkPhysicalDeviceRayQueryFeaturesKHR*)(name)));}();
return return_DhykcsV;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceAccelerationStructurePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_wVKYxVB=json({});
    
        if (((VkPhysicalDeviceAccelerationStructurePropertiesKHR*)(name))==NULL){
            return_wVKYxVB["null"]=true;
            return return_wVKYxVB;
        }
        return_wVKYxVB=[&]() {
    json return_KwAbJcV=json({});
    return serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(*((VkPhysicalDeviceAccelerationStructurePropertiesKHR*)(name)));}();
return return_wVKYxVB;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingPipelinePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_XUHHtcP=json({});
    
        if (((VkPhysicalDeviceRayTracingPipelinePropertiesKHR*)(name))==NULL){
            return_XUHHtcP["null"]=true;
            return return_XUHHtcP;
        }
        return_XUHHtcP=[&]() {
    json return_zaIgJRz=json({});
    return serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(*((VkPhysicalDeviceRayTracingPipelinePropertiesKHR*)(name)));}();
return return_XUHHtcP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_JNYlZkN=json({});
    
        if (((VkPhysicalDeviceRayTracingPropertiesNV*)(name))==NULL){
            return_JNYlZkN["null"]=true;
            return return_JNYlZkN;
        }
        return_JNYlZkN=[&]() {
    json return_XaPYTSn=json({});
    return serialize_VkPhysicalDeviceRayTracingPropertiesNV(*((VkPhysicalDeviceRayTracingPropertiesNV*)(name)));}();
return return_JNYlZkN;}();
        return result;
        }
    

        json serialize_VkStridedDeviceAddressRegionKHR_pNext(const void* name){
        printf("Serializing VkStridedDeviceAddressRegionKHR...\n");
        json result;
        result=[&]() {
    json return_UBUMgXQ=json({});
    
        if (((VkStridedDeviceAddressRegionKHR*)(name))==NULL){
            return_UBUMgXQ["null"]=true;
            return return_UBUMgXQ;
        }
        return_UBUMgXQ=[&]() {
    json return_inuFoyT=json({});
    return serialize_VkStridedDeviceAddressRegionKHR(*((VkStridedDeviceAddressRegionKHR*)(name)));}();
return return_UBUMgXQ;}();
        return result;
        }
    

        json serialize_VkTraceRaysIndirectCommandKHR_pNext(const void* name){
        printf("Serializing VkTraceRaysIndirectCommandKHR...\n");
        json result;
        result=[&]() {
    json return_hfhHhea=json({});
    
        if (((VkTraceRaysIndirectCommandKHR*)(name))==NULL){
            return_hfhHhea["null"]=true;
            return return_hfhHhea;
        }
        return_hfhHhea=[&]() {
    json return_ltNVGlu=json({});
    return serialize_VkTraceRaysIndirectCommandKHR(*((VkTraceRaysIndirectCommandKHR*)(name)));}();
return return_hfhHhea;}();
        return result;
        }
    

        json serialize_VkTraceRaysIndirectCommand2KHR_pNext(const void* name){
        printf("Serializing VkTraceRaysIndirectCommand2KHR...\n");
        json result;
        result=[&]() {
    json return_RNSIOPu=json({});
    
        if (((VkTraceRaysIndirectCommand2KHR*)(name))==NULL){
            return_RNSIOPu["null"]=true;
            return return_RNSIOPu;
        }
        return_RNSIOPu=[&]() {
    json return_KTRpEYb=json({});
    return serialize_VkTraceRaysIndirectCommand2KHR(*((VkTraceRaysIndirectCommand2KHR*)(name)));}();
return return_RNSIOPu;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_EGaatpX=json({});
    
        if (((VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR*)(name))==NULL){
            return_EGaatpX["null"]=true;
            return return_EGaatpX;
        }
        return_EGaatpX=[&]() {
    json return_rRHiSNz=json({});
    return serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(*((VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR*)(name)));}();
return return_EGaatpX;}();
        return result;
        }
    

        json serialize_VkDrmFormatModifierPropertiesListEXT_pNext(const void* name){
        printf("Serializing VkDrmFormatModifierPropertiesListEXT...\n");
        json result;
        result=[&]() {
    json return_zTpfapH=json({});
    
        if (((VkDrmFormatModifierPropertiesListEXT*)(name))==NULL){
            return_zTpfapH["null"]=true;
            return return_zTpfapH;
        }
        return_zTpfapH=[&]() {
    json return_ovGURpZ=json({});
    return serialize_VkDrmFormatModifierPropertiesListEXT(*((VkDrmFormatModifierPropertiesListEXT*)(name)));}();
return return_zTpfapH;}();
        return result;
        }
    

        json serialize_VkDrmFormatModifierPropertiesEXT_pNext(const void* name){
        printf("Serializing VkDrmFormatModifierPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_IjMrPuF=json({});
    
        if (((VkDrmFormatModifierPropertiesEXT*)(name))==NULL){
            return_IjMrPuF["null"]=true;
            return return_IjMrPuF;
        }
        return_IjMrPuF=[&]() {
    json return_Vptdoev=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(*((VkDrmFormatModifierPropertiesEXT*)(name)));}();
return return_IjMrPuF;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageDrmFormatModifierInfoEXT...\n");
        json result;
        result=[&]() {
    json return_zAeuINi=json({});
    
        if (((VkPhysicalDeviceImageDrmFormatModifierInfoEXT*)(name))==NULL){
            return_zAeuINi["null"]=true;
            return return_zAeuINi;
        }
        return_zAeuINi=[&]() {
    json return_DMVaGZn=json({});
    return serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(*((VkPhysicalDeviceImageDrmFormatModifierInfoEXT*)(name)));}();
return return_zAeuINi;}();
        return result;
        }
    

        json serialize_VkImageDrmFormatModifierListCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkImageDrmFormatModifierListCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_XykeALO=json({});
    
        if (((VkImageDrmFormatModifierListCreateInfoEXT*)(name))==NULL){
            return_XykeALO["null"]=true;
            return return_XykeALO;
        }
        return_XykeALO=[&]() {
    json return_JgNmWGk=json({});
    return serialize_VkImageDrmFormatModifierListCreateInfoEXT(*((VkImageDrmFormatModifierListCreateInfoEXT*)(name)));}();
return return_XykeALO;}();
        return result;
        }
    

        json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkImageDrmFormatModifierExplicitCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_GqjzCoz=json({});
    
        if (((VkImageDrmFormatModifierExplicitCreateInfoEXT*)(name))==NULL){
            return_GqjzCoz["null"]=true;
            return return_GqjzCoz;
        }
        return_GqjzCoz=[&]() {
    json return_zjnFHBM=json({});
    return serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(*((VkImageDrmFormatModifierExplicitCreateInfoEXT*)(name)));}();
return return_GqjzCoz;}();
        return result;
        }
    

        json serialize_VkImageDrmFormatModifierPropertiesEXT_pNext(const void* name){
        printf("Serializing VkImageDrmFormatModifierPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_ecfVpVS=json({});
    
        if (((VkImageDrmFormatModifierPropertiesEXT*)(name))==NULL){
            return_ecfVpVS["null"]=true;
            return return_ecfVpVS;
        }
        return_ecfVpVS=[&]() {
    json return_veyBpeR=json({});
    return serialize_VkImageDrmFormatModifierPropertiesEXT(*((VkImageDrmFormatModifierPropertiesEXT*)(name)));}();
return return_ecfVpVS;}();
        return result;
        }
    

        json serialize_VkImageStencilUsageCreateInfo_pNext(const void* name){
        printf("Serializing VkImageStencilUsageCreateInfo...\n");
        json result;
        result=[&]() {
    json return_ehcHufc=json({});
    
        if (((VkImageStencilUsageCreateInfo*)(name))==NULL){
            return_ehcHufc["null"]=true;
            return return_ehcHufc;
        }
        return_ehcHufc=[&]() {
    json return_EAtrPAn=json({});
    return serialize_VkImageStencilUsageCreateInfo(*((VkImageStencilUsageCreateInfo*)(name)));}();
return return_ehcHufc;}();
        return result;
        }
    

        json serialize_VkImageStencilUsageCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkImageStencilUsageCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_dobwtsw=json({});
    
        if (((VkImageStencilUsageCreateInfoEXT*)(name))==NULL){
            return_dobwtsw["null"]=true;
            return return_dobwtsw;
        }
        return_dobwtsw=[&]() {
    json return_WrqTtFI=json({});
    return serialize_VkImageStencilUsageCreateInfoEXT(*((VkImageStencilUsageCreateInfoEXT*)(name)));}();
return return_dobwtsw;}();
        return result;
        }
    

        json serialize_VkDeviceMemoryOverallocationCreateInfoAMD_pNext(const void* name){
        printf("Serializing VkDeviceMemoryOverallocationCreateInfoAMD...\n");
        json result;
        result=[&]() {
    json return_QIPubby=json({});
    
        if (((VkDeviceMemoryOverallocationCreateInfoAMD*)(name))==NULL){
            return_QIPubby["null"]=true;
            return return_QIPubby;
        }
        return_QIPubby=[&]() {
    json return_rGOdxrD=json({});
    return serialize_VkDeviceMemoryOverallocationCreateInfoAMD(*((VkDeviceMemoryOverallocationCreateInfoAMD*)(name)));}();
return return_QIPubby;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentDensityMapFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_fcwMqbo=json({});
    
        if (((VkPhysicalDeviceFragmentDensityMapFeaturesEXT*)(name))==NULL){
            return_fcwMqbo["null"]=true;
            return return_fcwMqbo;
        }
        return_fcwMqbo=[&]() {
    json return_pLvmUAx=json({});
    return serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(*((VkPhysicalDeviceFragmentDensityMapFeaturesEXT*)(name)));}();
return return_fcwMqbo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentDensityMap2FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_TIjKGPc=json({});
    
        if (((VkPhysicalDeviceFragmentDensityMap2FeaturesEXT*)(name))==NULL){
            return_TIjKGPc["null"]=true;
            return return_TIjKGPc;
        }
        return_TIjKGPc=[&]() {
    json return_BsiaMGN=json({});
    return serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(*((VkPhysicalDeviceFragmentDensityMap2FeaturesEXT*)(name)));}();
return return_TIjKGPc;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_ENlmZmt=json({});
    
        if (((VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM*)(name))==NULL){
            return_ENlmZmt["null"]=true;
            return return_ENlmZmt;
        }
        return_ENlmZmt=[&]() {
    json return_etgdFcU=json({});
    return serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(*((VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM*)(name)));}();
return return_ENlmZmt;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentDensityMapPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_AukMUwa=json({});
    
        if (((VkPhysicalDeviceFragmentDensityMapPropertiesEXT*)(name))==NULL){
            return_AukMUwa["null"]=true;
            return return_AukMUwa;
        }
        return_AukMUwa=[&]() {
    json return_XpHlbLk=json({});
    return serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(*((VkPhysicalDeviceFragmentDensityMapPropertiesEXT*)(name)));}();
return return_AukMUwa;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentDensityMap2PropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_GxiJssa=json({});
    
        if (((VkPhysicalDeviceFragmentDensityMap2PropertiesEXT*)(name))==NULL){
            return_GxiJssa["null"]=true;
            return return_GxiJssa;
        }
        return_GxiJssa=[&]() {
    json return_hxwusgj=json({});
    return serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(*((VkPhysicalDeviceFragmentDensityMap2PropertiesEXT*)(name)));}();
return return_GxiJssa;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM...\n");
        json result;
        result=[&]() {
    json return_BkEGCHg=json({});
    
        if (((VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM*)(name))==NULL){
            return_BkEGCHg["null"]=true;
            return return_BkEGCHg;
        }
        return_BkEGCHg=[&]() {
    json return_gSRzuiS=json({});
    return serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(*((VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM*)(name)));}();
return return_BkEGCHg;}();
        return result;
        }
    

        json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkRenderPassFragmentDensityMapCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_owVnHeB=json({});
    
        if (((VkRenderPassFragmentDensityMapCreateInfoEXT*)(name))==NULL){
            return_owVnHeB["null"]=true;
            return return_owVnHeB;
        }
        return_owVnHeB=[&]() {
    json return_aDbwpHA=json({});
    return serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(*((VkRenderPassFragmentDensityMapCreateInfoEXT*)(name)));}();
return return_owVnHeB;}();
        return result;
        }
    

        json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM_pNext(const void* name){
        printf("Serializing VkSubpassFragmentDensityMapOffsetEndInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_gaJVzEw=json({});
    
        if (((VkSubpassFragmentDensityMapOffsetEndInfoQCOM*)(name))==NULL){
            return_gaJVzEw["null"]=true;
            return return_gaJVzEw;
        }
        return_gaJVzEw=[&]() {
    json return_oDDjfIu=json({});
    return serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(*((VkSubpassFragmentDensityMapOffsetEndInfoQCOM*)(name)));}();
return return_gaJVzEw;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceScalarBlockLayoutFeatures...\n");
        json result;
        result=[&]() {
    json return_NaVjiKl=json({});
    
        if (((VkPhysicalDeviceScalarBlockLayoutFeatures*)(name))==NULL){
            return_NaVjiKl["null"]=true;
            return return_NaVjiKl;
        }
        return_NaVjiKl=[&]() {
    json return_ikUNJpG=json({});
    return serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(*((VkPhysicalDeviceScalarBlockLayoutFeatures*)(name)));}();
return return_NaVjiKl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceScalarBlockLayoutFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_BcrqjiI=json({});
    
        if (((VkPhysicalDeviceScalarBlockLayoutFeaturesEXT*)(name))==NULL){
            return_BcrqjiI["null"]=true;
            return return_BcrqjiI;
        }
        return_BcrqjiI=[&]() {
    json return_ugXpwWH=json({});
    return serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(*((VkPhysicalDeviceScalarBlockLayoutFeaturesEXT*)(name)));}();
return return_BcrqjiI;}();
        return result;
        }
    

        json serialize_VkSurfaceProtectedCapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkSurfaceProtectedCapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_BXotcoL=json({});
    
        if (((VkSurfaceProtectedCapabilitiesKHR*)(name))==NULL){
            return_BXotcoL["null"]=true;
            return return_BXotcoL;
        }
        return_BXotcoL=[&]() {
    json return_NkPeewz=json({});
    return serialize_VkSurfaceProtectedCapabilitiesKHR(*((VkSurfaceProtectedCapabilitiesKHR*)(name)));}();
return return_BXotcoL;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceUniformBufferStandardLayoutFeatures...\n");
        json result;
        result=[&]() {
    json return_NUoROAP=json({});
    
        if (((VkPhysicalDeviceUniformBufferStandardLayoutFeatures*)(name))==NULL){
            return_NUoROAP["null"]=true;
            return return_NUoROAP;
        }
        return_NUoROAP=[&]() {
    json return_DjIUNQb=json({});
    return serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(*((VkPhysicalDeviceUniformBufferStandardLayoutFeatures*)(name)));}();
return return_NUoROAP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_fONQExN=json({});
    
        if (((VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR*)(name))==NULL){
            return_fONQExN["null"]=true;
            return return_fONQExN;
        }
        return_fONQExN=[&]() {
    json return_MwTHZdH=json({});
    return serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(*((VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR*)(name)));}();
return return_fONQExN;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDepthClipEnableFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_JWBGeGN=json({});
    
        if (((VkPhysicalDeviceDepthClipEnableFeaturesEXT*)(name))==NULL){
            return_JWBGeGN["null"]=true;
            return return_JWBGeGN;
        }
        return_JWBGeGN=[&]() {
    json return_pxckkmS=json({});
    return serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(*((VkPhysicalDeviceDepthClipEnableFeaturesEXT*)(name)));}();
return return_JWBGeGN;}();
        return result;
        }
    

        json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineRasterizationDepthClipStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_PXMpcol=json({});
    
        if (((VkPipelineRasterizationDepthClipStateCreateInfoEXT*)(name))==NULL){
            return_PXMpcol["null"]=true;
            return return_PXMpcol;
        }
        return_PXMpcol=[&]() {
    json return_DZZTTjx=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(*((VkPipelineRasterizationDepthClipStateCreateInfoEXT*)(name)));}();
return return_PXMpcol;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMemoryBudgetPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_YAtsGBw=json({});
    
        if (((VkPhysicalDeviceMemoryBudgetPropertiesEXT*)(name))==NULL){
            return_YAtsGBw["null"]=true;
            return return_YAtsGBw;
        }
        return_YAtsGBw=[&]() {
    json return_yWcgpEa=json({});
    return serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(*((VkPhysicalDeviceMemoryBudgetPropertiesEXT*)(name)));}();
return return_YAtsGBw;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMemoryPriorityFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_eoRGVCj=json({});
    
        if (((VkPhysicalDeviceMemoryPriorityFeaturesEXT*)(name))==NULL){
            return_eoRGVCj["null"]=true;
            return return_eoRGVCj;
        }
        return_eoRGVCj=[&]() {
    json return_DfMRZmx=json({});
    return serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(*((VkPhysicalDeviceMemoryPriorityFeaturesEXT*)(name)));}();
return return_eoRGVCj;}();
        return result;
        }
    

        json serialize_VkMemoryPriorityAllocateInfoEXT_pNext(const void* name){
        printf("Serializing VkMemoryPriorityAllocateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_zSLogOc=json({});
    
        if (((VkMemoryPriorityAllocateInfoEXT*)(name))==NULL){
            return_zSLogOc["null"]=true;
            return return_zSLogOc;
        }
        return_zSLogOc=[&]() {
    json return_RrLYdhm=json({});
    return serialize_VkMemoryPriorityAllocateInfoEXT(*((VkMemoryPriorityAllocateInfoEXT*)(name)));}();
return return_zSLogOc;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_TozdQNq=json({});
    
        if (((VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT*)(name))==NULL){
            return_TozdQNq["null"]=true;
            return return_TozdQNq;
        }
        return_TozdQNq=[&]() {
    json return_pmNwCKI=json({});
    return serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(*((VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT*)(name)));}();
return return_TozdQNq;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceBufferDeviceAddressFeatures...\n");
        json result;
        result=[&]() {
    json return_HgphCRQ=json({});
    
        if (((VkPhysicalDeviceBufferDeviceAddressFeatures*)(name))==NULL){
            return_HgphCRQ["null"]=true;
            return return_HgphCRQ;
        }
        return_HgphCRQ=[&]() {
    json return_KtONHAR=json({});
    return serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(*((VkPhysicalDeviceBufferDeviceAddressFeatures*)(name)));}();
return return_HgphCRQ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceBufferDeviceAddressFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_MIMWpwQ=json({});
    
        if (((VkPhysicalDeviceBufferDeviceAddressFeaturesKHR*)(name))==NULL){
            return_MIMWpwQ["null"]=true;
            return return_MIMWpwQ;
        }
        return_MIMWpwQ=[&]() {
    json return_rorQyDn=json({});
    return serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(*((VkPhysicalDeviceBufferDeviceAddressFeaturesKHR*)(name)));}();
return return_MIMWpwQ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceBufferDeviceAddressFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_EApEhGI=json({});
    
        if (((VkPhysicalDeviceBufferDeviceAddressFeaturesEXT*)(name))==NULL){
            return_EApEhGI["null"]=true;
            return return_EApEhGI;
        }
        return_EApEhGI=[&]() {
    json return_dGvVNnc=json({});
    return serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(*((VkPhysicalDeviceBufferDeviceAddressFeaturesEXT*)(name)));}();
return return_EApEhGI;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceBufferAddressFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_BppuOeO=json({});
    
        if (((VkPhysicalDeviceBufferAddressFeaturesEXT*)(name))==NULL){
            return_BppuOeO["null"]=true;
            return return_BppuOeO;
        }
        return_BppuOeO=[&]() {
    json return_vtPDcSn=json({});
    return serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(*((VkPhysicalDeviceBufferAddressFeaturesEXT*)(name)));}();
return return_BppuOeO;}();
        return result;
        }
    

        json serialize_VkBufferDeviceAddressInfo_pNext(const void* name){
        printf("Serializing VkBufferDeviceAddressInfo...\n");
        json result;
        result=[&]() {
    json return_wYdkRtB=json({});
    
        if (((VkBufferDeviceAddressInfo*)(name))==NULL){
            return_wYdkRtB["null"]=true;
            return return_wYdkRtB;
        }
        return_wYdkRtB=[&]() {
    json return_BWADQct=json({});
    return serialize_VkBufferDeviceAddressInfo(*((VkBufferDeviceAddressInfo*)(name)));}();
return return_wYdkRtB;}();
        return result;
        }
    

        json serialize_VkBufferDeviceAddressInfoKHR_pNext(const void* name){
        printf("Serializing VkBufferDeviceAddressInfoKHR...\n");
        json result;
        result=[&]() {
    json return_UovIVWS=json({});
    
        if (((VkBufferDeviceAddressInfoKHR*)(name))==NULL){
            return_UovIVWS["null"]=true;
            return return_UovIVWS;
        }
        return_UovIVWS=[&]() {
    json return_bVpICZo=json({});
    return serialize_VkBufferDeviceAddressInfoKHR(*((VkBufferDeviceAddressInfoKHR*)(name)));}();
return return_UovIVWS;}();
        return result;
        }
    

        json serialize_VkBufferDeviceAddressInfoEXT_pNext(const void* name){
        printf("Serializing VkBufferDeviceAddressInfoEXT...\n");
        json result;
        result=[&]() {
    json return_VlabTyG=json({});
    
        if (((VkBufferDeviceAddressInfoEXT*)(name))==NULL){
            return_VlabTyG["null"]=true;
            return return_VlabTyG;
        }
        return_VlabTyG=[&]() {
    json return_CgqVvvU=json({});
    return serialize_VkBufferDeviceAddressInfoEXT(*((VkBufferDeviceAddressInfoEXT*)(name)));}();
return return_VlabTyG;}();
        return result;
        }
    

        json serialize_VkBufferOpaqueCaptureAddressCreateInfo_pNext(const void* name){
        printf("Serializing VkBufferOpaqueCaptureAddressCreateInfo...\n");
        json result;
        result=[&]() {
    json return_ztIZftT=json({});
    
        if (((VkBufferOpaqueCaptureAddressCreateInfo*)(name))==NULL){
            return_ztIZftT["null"]=true;
            return return_ztIZftT;
        }
        return_ztIZftT=[&]() {
    json return_qrQUgvJ=json({});
    return serialize_VkBufferOpaqueCaptureAddressCreateInfo(*((VkBufferOpaqueCaptureAddressCreateInfo*)(name)));}();
return return_ztIZftT;}();
        return result;
        }
    

        json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkBufferOpaqueCaptureAddressCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_JHTiCVA=json({});
    
        if (((VkBufferOpaqueCaptureAddressCreateInfoKHR*)(name))==NULL){
            return_JHTiCVA["null"]=true;
            return return_JHTiCVA;
        }
        return_JHTiCVA=[&]() {
    json return_gsSXbeU=json({});
    return serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(*((VkBufferOpaqueCaptureAddressCreateInfoKHR*)(name)));}();
return return_JHTiCVA;}();
        return result;
        }
    

        json serialize_VkBufferDeviceAddressCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkBufferDeviceAddressCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_cVcxygV=json({});
    
        if (((VkBufferDeviceAddressCreateInfoEXT*)(name))==NULL){
            return_cVcxygV["null"]=true;
            return return_cVcxygV;
        }
        return_cVcxygV=[&]() {
    json return_PENMvvZ=json({});
    return serialize_VkBufferDeviceAddressCreateInfoEXT(*((VkBufferDeviceAddressCreateInfoEXT*)(name)));}();
return return_cVcxygV;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageViewImageFormatInfoEXT...\n");
        json result;
        result=[&]() {
    json return_lQhBrIG=json({});
    
        if (((VkPhysicalDeviceImageViewImageFormatInfoEXT*)(name))==NULL){
            return_lQhBrIG["null"]=true;
            return return_lQhBrIG;
        }
        return_lQhBrIG=[&]() {
    json return_HBnfScB=json({});
    return serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(*((VkPhysicalDeviceImageViewImageFormatInfoEXT*)(name)));}();
return return_lQhBrIG;}();
        return result;
        }
    

        json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT_pNext(const void* name){
        printf("Serializing VkFilterCubicImageViewImageFormatPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_begdiiT=json({});
    
        if (((VkFilterCubicImageViewImageFormatPropertiesEXT*)(name))==NULL){
            return_begdiiT["null"]=true;
            return return_begdiiT;
        }
        return_begdiiT=[&]() {
    json return_JzyjYXc=json({});
    return serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(*((VkFilterCubicImageViewImageFormatPropertiesEXT*)(name)));}();
return return_begdiiT;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImagelessFramebufferFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImagelessFramebufferFeatures...\n");
        json result;
        result=[&]() {
    json return_xrsAzqA=json({});
    
        if (((VkPhysicalDeviceImagelessFramebufferFeatures*)(name))==NULL){
            return_xrsAzqA["null"]=true;
            return return_xrsAzqA;
        }
        return_xrsAzqA=[&]() {
    json return_qgUsJjd=json({});
    return serialize_VkPhysicalDeviceImagelessFramebufferFeatures(*((VkPhysicalDeviceImagelessFramebufferFeatures*)(name)));}();
return return_xrsAzqA;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImagelessFramebufferFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_zkvpERs=json({});
    
        if (((VkPhysicalDeviceImagelessFramebufferFeaturesKHR*)(name))==NULL){
            return_zkvpERs["null"]=true;
            return return_zkvpERs;
        }
        return_zkvpERs=[&]() {
    json return_RTnUvWr=json({});
    return serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(*((VkPhysicalDeviceImagelessFramebufferFeaturesKHR*)(name)));}();
return return_zkvpERs;}();
        return result;
        }
    

        json serialize_VkFramebufferAttachmentsCreateInfo_pNext(const void* name){
        printf("Serializing VkFramebufferAttachmentsCreateInfo...\n");
        json result;
        result=[&]() {
    json return_CSFhUYp=json({});
    
        if (((VkFramebufferAttachmentsCreateInfo*)(name))==NULL){
            return_CSFhUYp["null"]=true;
            return return_CSFhUYp;
        }
        return_CSFhUYp=[&]() {
    json return_sOICEpQ=json({});
    return serialize_VkFramebufferAttachmentsCreateInfo(*((VkFramebufferAttachmentsCreateInfo*)(name)));}();
return return_CSFhUYp;}();
        return result;
        }
    

        json serialize_VkFramebufferAttachmentsCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkFramebufferAttachmentsCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_MBWdUYJ=json({});
    
        if (((VkFramebufferAttachmentsCreateInfoKHR*)(name))==NULL){
            return_MBWdUYJ["null"]=true;
            return return_MBWdUYJ;
        }
        return_MBWdUYJ=[&]() {
    json return_DWcMTRq=json({});
    return serialize_VkFramebufferAttachmentsCreateInfoKHR(*((VkFramebufferAttachmentsCreateInfoKHR*)(name)));}();
return return_MBWdUYJ;}();
        return result;
        }
    

        json serialize_VkFramebufferAttachmentImageInfo_pNext(const void* name){
        printf("Serializing VkFramebufferAttachmentImageInfo...\n");
        json result;
        result=[&]() {
    json return_jgPbZpW=json({});
    
        if (((VkFramebufferAttachmentImageInfo*)(name))==NULL){
            return_jgPbZpW["null"]=true;
            return return_jgPbZpW;
        }
        return_jgPbZpW=[&]() {
    json return_IfcQlNS=json({});
    return serialize_VkFramebufferAttachmentImageInfo(*((VkFramebufferAttachmentImageInfo*)(name)));}();
return return_jgPbZpW;}();
        return result;
        }
    

        json serialize_VkFramebufferAttachmentImageInfoKHR_pNext(const void* name){
        printf("Serializing VkFramebufferAttachmentImageInfoKHR...\n");
        json result;
        result=[&]() {
    json return_AMDRbBY=json({});
    
        if (((VkFramebufferAttachmentImageInfoKHR*)(name))==NULL){
            return_AMDRbBY["null"]=true;
            return return_AMDRbBY;
        }
        return_AMDRbBY=[&]() {
    json return_xRdolHl=json({});
    return serialize_VkFramebufferAttachmentImageInfoKHR(*((VkFramebufferAttachmentImageInfoKHR*)(name)));}();
return return_AMDRbBY;}();
        return result;
        }
    

        json serialize_VkRenderPassAttachmentBeginInfo_pNext(const void* name){
        printf("Serializing VkRenderPassAttachmentBeginInfo...\n");
        json result;
        result=[&]() {
    json return_xGVAbBY=json({});
    
        if (((VkRenderPassAttachmentBeginInfo*)(name))==NULL){
            return_xGVAbBY["null"]=true;
            return return_xGVAbBY;
        }
        return_xGVAbBY=[&]() {
    json return_KMEAfda=json({});
    return serialize_VkRenderPassAttachmentBeginInfo(*((VkRenderPassAttachmentBeginInfo*)(name)));}();
return return_xGVAbBY;}();
        return result;
        }
    

        json serialize_VkRenderPassAttachmentBeginInfoKHR_pNext(const void* name){
        printf("Serializing VkRenderPassAttachmentBeginInfoKHR...\n");
        json result;
        result=[&]() {
    json return_FAPESxG=json({});
    
        if (((VkRenderPassAttachmentBeginInfoKHR*)(name))==NULL){
            return_FAPESxG["null"]=true;
            return return_FAPESxG;
        }
        return_FAPESxG=[&]() {
    json return_rGZAFZu=json({});
    return serialize_VkRenderPassAttachmentBeginInfoKHR(*((VkRenderPassAttachmentBeginInfoKHR*)(name)));}();
return return_FAPESxG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTextureCompressionASTCHDRFeatures...\n");
        json result;
        result=[&]() {
    json return_aqRoVcK=json({});
    
        if (((VkPhysicalDeviceTextureCompressionASTCHDRFeatures*)(name))==NULL){
            return_aqRoVcK["null"]=true;
            return return_aqRoVcK;
        }
        return_aqRoVcK=[&]() {
    json return_nOKFofP=json({});
    return serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(*((VkPhysicalDeviceTextureCompressionASTCHDRFeatures*)(name)));}();
return return_aqRoVcK;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_BnaWTQK=json({});
    
        if (((VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT*)(name))==NULL){
            return_BnaWTQK["null"]=true;
            return return_BnaWTQK;
        }
        return_BnaWTQK=[&]() {
    json return_LkdfUpZ=json({});
    return serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(*((VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT*)(name)));}();
return return_BnaWTQK;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCooperativeMatrixFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_apSpkXH=json({});
    
        if (((VkPhysicalDeviceCooperativeMatrixFeaturesNV*)(name))==NULL){
            return_apSpkXH["null"]=true;
            return return_apSpkXH;
        }
        return_apSpkXH=[&]() {
    json return_nlZWyZM=json({});
    return serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(*((VkPhysicalDeviceCooperativeMatrixFeaturesNV*)(name)));}();
return return_apSpkXH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCooperativeMatrixPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_PKPxwXX=json({});
    
        if (((VkPhysicalDeviceCooperativeMatrixPropertiesNV*)(name))==NULL){
            return_PKPxwXX["null"]=true;
            return return_PKPxwXX;
        }
        return_PKPxwXX=[&]() {
    json return_uWkCmSX=json({});
    return serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(*((VkPhysicalDeviceCooperativeMatrixPropertiesNV*)(name)));}();
return return_PKPxwXX;}();
        return result;
        }
    

        json serialize_VkCooperativeMatrixPropertiesNV_pNext(const void* name){
        printf("Serializing VkCooperativeMatrixPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_kkNkJoM=json({});
    
        if (((VkCooperativeMatrixPropertiesNV*)(name))==NULL){
            return_kkNkJoM["null"]=true;
            return return_kkNkJoM;
        }
        return_kkNkJoM=[&]() {
    json return_BStALvW=json({});
    return serialize_VkCooperativeMatrixPropertiesNV(*((VkCooperativeMatrixPropertiesNV*)(name)));}();
return return_kkNkJoM;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceYcbcrImageArraysFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_LHYqaSa=json({});
    
        if (((VkPhysicalDeviceYcbcrImageArraysFeaturesEXT*)(name))==NULL){
            return_LHYqaSa["null"]=true;
            return return_LHYqaSa;
        }
        return_LHYqaSa=[&]() {
    json return_mjPdUpR=json({});
    return serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(*((VkPhysicalDeviceYcbcrImageArraysFeaturesEXT*)(name)));}();
return return_LHYqaSa;}();
        return result;
        }
    

        json serialize_VkImageViewHandleInfoNVX_pNext(const void* name){
        printf("Serializing VkImageViewHandleInfoNVX...\n");
        json result;
        result=[&]() {
    json return_naeSHFk=json({});
    
        if (((VkImageViewHandleInfoNVX*)(name))==NULL){
            return_naeSHFk["null"]=true;
            return return_naeSHFk;
        }
        return_naeSHFk=[&]() {
    json return_wRszZlN=json({});
    return serialize_VkImageViewHandleInfoNVX(*((VkImageViewHandleInfoNVX*)(name)));}();
return return_naeSHFk;}();
        return result;
        }
    

        json serialize_VkImageViewAddressPropertiesNVX_pNext(const void* name){
        printf("Serializing VkImageViewAddressPropertiesNVX...\n");
        json result;
        result=[&]() {
    json return_vrGJacQ=json({});
    
        if (((VkImageViewAddressPropertiesNVX*)(name))==NULL){
            return_vrGJacQ["null"]=true;
            return return_vrGJacQ;
        }
        return_vrGJacQ=[&]() {
    json return_gpNoKAV=json({});
    return serialize_VkImageViewAddressPropertiesNVX(*((VkImageViewAddressPropertiesNVX*)(name)));}();
return return_vrGJacQ;}();
        return result;
        }
    

        json serialize_VkPipelineCreationFeedback_pNext(const void* name){
        printf("Serializing VkPipelineCreationFeedback...\n");
        json result;
        result=[&]() {
    json return_keDDMKk=json({});
    
        if (((VkPipelineCreationFeedback*)(name))==NULL){
            return_keDDMKk["null"]=true;
            return return_keDDMKk;
        }
        return_keDDMKk=[&]() {
    json return_zXiypRY=json({});
    return serialize_VkPipelineCreationFeedback(*((VkPipelineCreationFeedback*)(name)));}();
return return_keDDMKk;}();
        return result;
        }
    

        json serialize_VkPipelineCreationFeedbackEXT_pNext(const void* name){
        printf("Serializing VkPipelineCreationFeedbackEXT...\n");
        json result;
        result=[&]() {
    json return_RdUIzKS=json({});
    
        if (((VkPipelineCreationFeedbackEXT*)(name))==NULL){
            return_RdUIzKS["null"]=true;
            return return_RdUIzKS;
        }
        return_RdUIzKS=[&]() {
    json return_YcjRSJE=json({});
    return serialize_VkPipelineCreationFeedbackEXT(*((VkPipelineCreationFeedbackEXT*)(name)));}();
return return_RdUIzKS;}();
        return result;
        }
    

        json serialize_VkPipelineCreationFeedbackCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineCreationFeedbackCreateInfo...\n");
        json result;
        result=[&]() {
    json return_aQlPnUC=json({});
    
        if (((VkPipelineCreationFeedbackCreateInfo*)(name))==NULL){
            return_aQlPnUC["null"]=true;
            return return_aQlPnUC;
        }
        return_aQlPnUC=[&]() {
    json return_uLTkUtF=json({});
    return serialize_VkPipelineCreationFeedbackCreateInfo(*((VkPipelineCreationFeedbackCreateInfo*)(name)));}();
return return_aQlPnUC;}();
        return result;
        }
    

        json serialize_VkPipelineCreationFeedbackCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineCreationFeedbackCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_aBEcJEB=json({});
    
        if (((VkPipelineCreationFeedbackCreateInfoEXT*)(name))==NULL){
            return_aBEcJEB["null"]=true;
            return return_aBEcJEB;
        }
        return_aBEcJEB=[&]() {
    json return_dSfOEPQ=json({});
    return serialize_VkPipelineCreationFeedbackCreateInfoEXT(*((VkPipelineCreationFeedbackCreateInfoEXT*)(name)));}();
return return_aBEcJEB;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePresentBarrierFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePresentBarrierFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_gBEleoS=json({});
    
        if (((VkPhysicalDevicePresentBarrierFeaturesNV*)(name))==NULL){
            return_gBEleoS["null"]=true;
            return return_gBEleoS;
        }
        return_gBEleoS=[&]() {
    json return_FCItCNo=json({});
    return serialize_VkPhysicalDevicePresentBarrierFeaturesNV(*((VkPhysicalDevicePresentBarrierFeaturesNV*)(name)));}();
return return_gBEleoS;}();
        return result;
        }
    

        json serialize_VkSurfaceCapabilitiesPresentBarrierNV_pNext(const void* name){
        printf("Serializing VkSurfaceCapabilitiesPresentBarrierNV...\n");
        json result;
        result=[&]() {
    json return_NCnZPRI=json({});
    
        if (((VkSurfaceCapabilitiesPresentBarrierNV*)(name))==NULL){
            return_NCnZPRI["null"]=true;
            return return_NCnZPRI;
        }
        return_NCnZPRI=[&]() {
    json return_rIvyaeV=json({});
    return serialize_VkSurfaceCapabilitiesPresentBarrierNV(*((VkSurfaceCapabilitiesPresentBarrierNV*)(name)));}();
return return_NCnZPRI;}();
        return result;
        }
    

        json serialize_VkSwapchainPresentBarrierCreateInfoNV_pNext(const void* name){
        printf("Serializing VkSwapchainPresentBarrierCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_dzCXZWU=json({});
    
        if (((VkSwapchainPresentBarrierCreateInfoNV*)(name))==NULL){
            return_dzCXZWU["null"]=true;
            return return_dzCXZWU;
        }
        return_dzCXZWU=[&]() {
    json return_YdQveEh=json({});
    return serialize_VkSwapchainPresentBarrierCreateInfoNV(*((VkSwapchainPresentBarrierCreateInfoNV*)(name)));}();
return return_dzCXZWU;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePerformanceQueryFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_qzWObEE=json({});
    
        if (((VkPhysicalDevicePerformanceQueryFeaturesKHR*)(name))==NULL){
            return_qzWObEE["null"]=true;
            return return_qzWObEE;
        }
        return_qzWObEE=[&]() {
    json return_biXZORA=json({});
    return serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(*((VkPhysicalDevicePerformanceQueryFeaturesKHR*)(name)));}();
return return_qzWObEE;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePerformanceQueryPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_KhjugPf=json({});
    
        if (((VkPhysicalDevicePerformanceQueryPropertiesKHR*)(name))==NULL){
            return_KhjugPf["null"]=true;
            return return_KhjugPf;
        }
        return_KhjugPf=[&]() {
    json return_MFKtesj=json({});
    return serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(*((VkPhysicalDevicePerformanceQueryPropertiesKHR*)(name)));}();
return return_KhjugPf;}();
        return result;
        }
    

        json serialize_VkPerformanceCounterKHR_pNext(const void* name){
        printf("Serializing VkPerformanceCounterKHR...\n");
        json result;
        result=[&]() {
    json return_sVGOltG=json({});
    
        if (((VkPerformanceCounterKHR*)(name))==NULL){
            return_sVGOltG["null"]=true;
            return return_sVGOltG;
        }
        return_sVGOltG=[&]() {
    json return_JBBTFhj=json({});
    return serialize_VkPerformanceCounterKHR(*((VkPerformanceCounterKHR*)(name)));}();
return return_sVGOltG;}();
        return result;
        }
    

        json serialize_VkPerformanceCounterDescriptionKHR_pNext(const void* name){
        printf("Serializing VkPerformanceCounterDescriptionKHR...\n");
        json result;
        result=[&]() {
    json return_SlKrOXF=json({});
    
        if (((VkPerformanceCounterDescriptionKHR*)(name))==NULL){
            return_SlKrOXF["null"]=true;
            return return_SlKrOXF;
        }
        return_SlKrOXF=[&]() {
    json return_UnrXpRx=json({});
    return serialize_VkPerformanceCounterDescriptionKHR(*((VkPerformanceCounterDescriptionKHR*)(name)));}();
return return_SlKrOXF;}();
        return result;
        }
    

        json serialize_VkQueryPoolPerformanceCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkQueryPoolPerformanceCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_FndKLAN=json({});
    
        if (((VkQueryPoolPerformanceCreateInfoKHR*)(name))==NULL){
            return_FndKLAN["null"]=true;
            return return_FndKLAN;
        }
        return_FndKLAN=[&]() {
    json return_paXlIZw=json({});
    return serialize_VkQueryPoolPerformanceCreateInfoKHR(*((VkQueryPoolPerformanceCreateInfoKHR*)(name)));}();
return return_FndKLAN;}();
        return result;
        }
    

        json serialize_VkPerformanceCounterResultKHR_pNext(const void* name){
        printf("Serializing VkPerformanceCounterResultKHR...\n");
        json result;
        result=[&]() {
    json return_YakOHNl=json({});
    
        if (((VkPerformanceCounterResultKHR*)(name))==NULL){
            return_YakOHNl["null"]=true;
            return return_YakOHNl;
        }
        return_YakOHNl=[&]() {
    json return_IJKVqSU=json({});
    return serialize_VkPerformanceCounterResultKHR(*((VkPerformanceCounterResultKHR*)(name)));}();
return return_YakOHNl;}();
        return result;
        }
    

        json serialize_VkAcquireProfilingLockInfoKHR_pNext(const void* name){
        printf("Serializing VkAcquireProfilingLockInfoKHR...\n");
        json result;
        result=[&]() {
    json return_JyGXITx=json({});
    
        if (((VkAcquireProfilingLockInfoKHR*)(name))==NULL){
            return_JyGXITx["null"]=true;
            return return_JyGXITx;
        }
        return_JyGXITx=[&]() {
    json return_hGqOOGd=json({});
    return serialize_VkAcquireProfilingLockInfoKHR(*((VkAcquireProfilingLockInfoKHR*)(name)));}();
return return_JyGXITx;}();
        return result;
        }
    

        json serialize_VkPerformanceQuerySubmitInfoKHR_pNext(const void* name){
        printf("Serializing VkPerformanceQuerySubmitInfoKHR...\n");
        json result;
        result=[&]() {
    json return_pxAvDAP=json({});
    
        if (((VkPerformanceQuerySubmitInfoKHR*)(name))==NULL){
            return_pxAvDAP["null"]=true;
            return return_pxAvDAP;
        }
        return_pxAvDAP=[&]() {
    json return_ZaeCIrj=json({});
    return serialize_VkPerformanceQuerySubmitInfoKHR(*((VkPerformanceQuerySubmitInfoKHR*)(name)));}();
return return_pxAvDAP;}();
        return result;
        }
    

        json serialize_VkHeadlessSurfaceCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkHeadlessSurfaceCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_LzQzvTL=json({});
    
        if (((VkHeadlessSurfaceCreateInfoEXT*)(name))==NULL){
            return_LzQzvTL["null"]=true;
            return return_LzQzvTL;
        }
        return_LzQzvTL=[&]() {
    json return_vbffXXs=json({});
    return serialize_VkHeadlessSurfaceCreateInfoEXT(*((VkHeadlessSurfaceCreateInfoEXT*)(name)));}();
return return_LzQzvTL;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCoverageReductionModeFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_PVEDdUD=json({});
    
        if (((VkPhysicalDeviceCoverageReductionModeFeaturesNV*)(name))==NULL){
            return_PVEDdUD["null"]=true;
            return return_PVEDdUD;
        }
        return_PVEDdUD=[&]() {
    json return_XqVfAQD=json({});
    return serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(*((VkPhysicalDeviceCoverageReductionModeFeaturesNV*)(name)));}();
return return_PVEDdUD;}();
        return result;
        }
    

        json serialize_VkPipelineCoverageReductionStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineCoverageReductionStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_xMYEuaH=json({});
    
        if (((VkPipelineCoverageReductionStateCreateInfoNV*)(name))==NULL){
            return_xMYEuaH["null"]=true;
            return return_xMYEuaH;
        }
        return_xMYEuaH=[&]() {
    json return_bIXJWwP=json({});
    return serialize_VkPipelineCoverageReductionStateCreateInfoNV(*((VkPipelineCoverageReductionStateCreateInfoNV*)(name)));}();
return return_xMYEuaH;}();
        return result;
        }
    

        json serialize_VkFramebufferMixedSamplesCombinationNV_pNext(const void* name){
        printf("Serializing VkFramebufferMixedSamplesCombinationNV...\n");
        json result;
        result=[&]() {
    json return_sZKOVpe=json({});
    
        if (((VkFramebufferMixedSamplesCombinationNV*)(name))==NULL){
            return_sZKOVpe["null"]=true;
            return return_sZKOVpe;
        }
        return_sZKOVpe=[&]() {
    json return_fslicMZ=json({});
    return serialize_VkFramebufferMixedSamplesCombinationNV(*((VkFramebufferMixedSamplesCombinationNV*)(name)));}();
return return_sZKOVpe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL...\n");
        json result;
        result=[&]() {
    json return_jdpEVCZ=json({});
    
        if (((VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL*)(name))==NULL){
            return_jdpEVCZ["null"]=true;
            return return_jdpEVCZ;
        }
        return_jdpEVCZ=[&]() {
    json return_FdLDsUZ=json({});
    return serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(*((VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL*)(name)));}();
return return_jdpEVCZ;}();
        return result;
        }
    

        json serialize_VkPerformanceValueDataINTEL_pNext(const void* name){
        printf("Serializing VkPerformanceValueDataINTEL...\n");
        json result;
        result=[&]() {
    json return_iAZQitu=json({});
    
        if (((VkPerformanceValueDataINTEL*)(name))==NULL){
            return_iAZQitu["null"]=true;
            return return_iAZQitu;
        }
        return_iAZQitu=[&]() {
    json return_tLcWFIw=json({});
    return serialize_VkPerformanceValueDataINTEL(*((VkPerformanceValueDataINTEL*)(name)));}();
return return_iAZQitu;}();
        return result;
        }
    

        json serialize_VkPerformanceValueINTEL_pNext(const void* name){
        printf("Serializing VkPerformanceValueINTEL...\n");
        json result;
        result=[&]() {
    json return_FYmzuCO=json({});
    
        if (((VkPerformanceValueINTEL*)(name))==NULL){
            return_FYmzuCO["null"]=true;
            return return_FYmzuCO;
        }
        return_FYmzuCO=[&]() {
    json return_oeEiwaU=json({});
    return serialize_VkPerformanceValueINTEL(*((VkPerformanceValueINTEL*)(name)));}();
return return_FYmzuCO;}();
        return result;
        }
    

        json serialize_VkInitializePerformanceApiInfoINTEL_pNext(const void* name){
        printf("Serializing VkInitializePerformanceApiInfoINTEL...\n");
        json result;
        result=[&]() {
    json return_wZEbWwU=json({});
    
        if (((VkInitializePerformanceApiInfoINTEL*)(name))==NULL){
            return_wZEbWwU["null"]=true;
            return return_wZEbWwU;
        }
        return_wZEbWwU=[&]() {
    json return_iTLVkyN=json({});
    return serialize_VkInitializePerformanceApiInfoINTEL(*((VkInitializePerformanceApiInfoINTEL*)(name)));}();
return return_wZEbWwU;}();
        return result;
        }
    

        json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL_pNext(const void* name){
        printf("Serializing VkQueryPoolPerformanceQueryCreateInfoINTEL...\n");
        json result;
        result=[&]() {
    json return_LCCsLOU=json({});
    
        if (((VkQueryPoolPerformanceQueryCreateInfoINTEL*)(name))==NULL){
            return_LCCsLOU["null"]=true;
            return return_LCCsLOU;
        }
        return_LCCsLOU=[&]() {
    json return_TNCipTX=json({});
    return serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(*((VkQueryPoolPerformanceQueryCreateInfoINTEL*)(name)));}();
return return_LCCsLOU;}();
        return result;
        }
    

        json serialize_VkQueryPoolCreateInfoINTEL_pNext(const void* name){
        printf("Serializing VkQueryPoolCreateInfoINTEL...\n");
        json result;
        result=[&]() {
    json return_eCPXdEf=json({});
    
        if (((VkQueryPoolCreateInfoINTEL*)(name))==NULL){
            return_eCPXdEf["null"]=true;
            return return_eCPXdEf;
        }
        return_eCPXdEf=[&]() {
    json return_hDZmTOd=json({});
    return serialize_VkQueryPoolCreateInfoINTEL(*((VkQueryPoolCreateInfoINTEL*)(name)));}();
return return_eCPXdEf;}();
        return result;
        }
    

        json serialize_VkPerformanceMarkerInfoINTEL_pNext(const void* name){
        printf("Serializing VkPerformanceMarkerInfoINTEL...\n");
        json result;
        result=[&]() {
    json return_WxpAWDL=json({});
    
        if (((VkPerformanceMarkerInfoINTEL*)(name))==NULL){
            return_WxpAWDL["null"]=true;
            return return_WxpAWDL;
        }
        return_WxpAWDL=[&]() {
    json return_llWLmKY=json({});
    return serialize_VkPerformanceMarkerInfoINTEL(*((VkPerformanceMarkerInfoINTEL*)(name)));}();
return return_WxpAWDL;}();
        return result;
        }
    

        json serialize_VkPerformanceStreamMarkerInfoINTEL_pNext(const void* name){
        printf("Serializing VkPerformanceStreamMarkerInfoINTEL...\n");
        json result;
        result=[&]() {
    json return_xInZVOs=json({});
    
        if (((VkPerformanceStreamMarkerInfoINTEL*)(name))==NULL){
            return_xInZVOs["null"]=true;
            return return_xInZVOs;
        }
        return_xInZVOs=[&]() {
    json return_kYFwLxT=json({});
    return serialize_VkPerformanceStreamMarkerInfoINTEL(*((VkPerformanceStreamMarkerInfoINTEL*)(name)));}();
return return_xInZVOs;}();
        return result;
        }
    

        json serialize_VkPerformanceOverrideInfoINTEL_pNext(const void* name){
        printf("Serializing VkPerformanceOverrideInfoINTEL...\n");
        json result;
        result=[&]() {
    json return_oLdcEee=json({});
    
        if (((VkPerformanceOverrideInfoINTEL*)(name))==NULL){
            return_oLdcEee["null"]=true;
            return return_oLdcEee;
        }
        return_oLdcEee=[&]() {
    json return_XgRGkxc=json({});
    return serialize_VkPerformanceOverrideInfoINTEL(*((VkPerformanceOverrideInfoINTEL*)(name)));}();
return return_oLdcEee;}();
        return result;
        }
    

        json serialize_VkPerformanceConfigurationAcquireInfoINTEL_pNext(const void* name){
        printf("Serializing VkPerformanceConfigurationAcquireInfoINTEL...\n");
        json result;
        result=[&]() {
    json return_uaetarq=json({});
    
        if (((VkPerformanceConfigurationAcquireInfoINTEL*)(name))==NULL){
            return_uaetarq["null"]=true;
            return return_uaetarq;
        }
        return_uaetarq=[&]() {
    json return_YIMLylh=json({});
    return serialize_VkPerformanceConfigurationAcquireInfoINTEL(*((VkPerformanceConfigurationAcquireInfoINTEL*)(name)));}();
return return_uaetarq;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderClockFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderClockFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_TTMcsQZ=json({});
    
        if (((VkPhysicalDeviceShaderClockFeaturesKHR*)(name))==NULL){
            return_TTMcsQZ["null"]=true;
            return return_TTMcsQZ;
        }
        return_TTMcsQZ=[&]() {
    json return_lKhZJjB=json({});
    return serialize_VkPhysicalDeviceShaderClockFeaturesKHR(*((VkPhysicalDeviceShaderClockFeaturesKHR*)(name)));}();
return return_TTMcsQZ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceIndexTypeUint8FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_ZGjIGVo=json({});
    
        if (((VkPhysicalDeviceIndexTypeUint8FeaturesEXT*)(name))==NULL){
            return_ZGjIGVo["null"]=true;
            return return_ZGjIGVo;
        }
        return_ZGjIGVo=[&]() {
    json return_LMSqXrL=json({});
    return serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(*((VkPhysicalDeviceIndexTypeUint8FeaturesEXT*)(name)));}();
return return_ZGjIGVo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderSMBuiltinsPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_PISaQmP=json({});
    
        if (((VkPhysicalDeviceShaderSMBuiltinsPropertiesNV*)(name))==NULL){
            return_PISaQmP["null"]=true;
            return return_PISaQmP;
        }
        return_PISaQmP=[&]() {
    json return_FuUuaqI=json({});
    return serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(*((VkPhysicalDeviceShaderSMBuiltinsPropertiesNV*)(name)));}();
return return_PISaQmP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderSMBuiltinsFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_mHEqrFj=json({});
    
        if (((VkPhysicalDeviceShaderSMBuiltinsFeaturesNV*)(name))==NULL){
            return_mHEqrFj["null"]=true;
            return return_mHEqrFj;
        }
        return_mHEqrFj=[&]() {
    json return_BWqNLsR=json({});
    return serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(*((VkPhysicalDeviceShaderSMBuiltinsFeaturesNV*)(name)));}();
return return_mHEqrFj;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_mxKvGlJ=json({});
    
        if (((VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT*)(name))==NULL){
            return_mxKvGlJ["null"]=true;
            return return_mxKvGlJ;
        }
        return_mxKvGlJ=[&]() {
    json return_AcPWoGR=json({});
    return serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(*((VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT*)(name)));}();
return return_mxKvGlJ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures...\n");
        json result;
        result=[&]() {
    json return_JAAuKqS=json({});
    
        if (((VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures*)(name))==NULL){
            return_JAAuKqS["null"]=true;
            return return_JAAuKqS;
        }
        return_JAAuKqS=[&]() {
    json return_UDCVNXC=json({});
    return serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(*((VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures*)(name)));}();
return return_JAAuKqS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_TzGfpUy=json({});
    
        if (((VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR*)(name))==NULL){
            return_TzGfpUy["null"]=true;
            return return_TzGfpUy;
        }
        return_TzGfpUy=[&]() {
    json return_FngVNPh=json({});
    return serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(*((VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR*)(name)));}();
return return_TzGfpUy;}();
        return result;
        }
    

        json serialize_VkAttachmentReferenceStencilLayout_pNext(const void* name){
        printf("Serializing VkAttachmentReferenceStencilLayout...\n");
        json result;
        result=[&]() {
    json return_CneVtXR=json({});
    
        if (((VkAttachmentReferenceStencilLayout*)(name))==NULL){
            return_CneVtXR["null"]=true;
            return return_CneVtXR;
        }
        return_CneVtXR=[&]() {
    json return_pzvmvYA=json({});
    return serialize_VkAttachmentReferenceStencilLayout(*((VkAttachmentReferenceStencilLayout*)(name)));}();
return return_CneVtXR;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_VleeJLG=json({});
    
        if (((VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT*)(name))==NULL){
            return_VleeJLG["null"]=true;
            return return_VleeJLG;
        }
        return_VleeJLG=[&]() {
    json return_VYDirDm=json({});
    return serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(*((VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT*)(name)));}();
return return_VleeJLG;}();
        return result;
        }
    

        json serialize_VkAttachmentReferenceStencilLayoutKHR_pNext(const void* name){
        printf("Serializing VkAttachmentReferenceStencilLayoutKHR...\n");
        json result;
        result=[&]() {
    json return_dEYuUxL=json({});
    
        if (((VkAttachmentReferenceStencilLayoutKHR*)(name))==NULL){
            return_dEYuUxL["null"]=true;
            return return_dEYuUxL;
        }
        return_dEYuUxL=[&]() {
    json return_BzPnGLF=json({});
    return serialize_VkAttachmentReferenceStencilLayoutKHR(*((VkAttachmentReferenceStencilLayoutKHR*)(name)));}();
return return_dEYuUxL;}();
        return result;
        }
    

        json serialize_VkAttachmentDescriptionStencilLayout_pNext(const void* name){
        printf("Serializing VkAttachmentDescriptionStencilLayout...\n");
        json result;
        result=[&]() {
    json return_ozWOpdU=json({});
    
        if (((VkAttachmentDescriptionStencilLayout*)(name))==NULL){
            return_ozWOpdU["null"]=true;
            return return_ozWOpdU;
        }
        return_ozWOpdU=[&]() {
    json return_FRSUMyu=json({});
    return serialize_VkAttachmentDescriptionStencilLayout(*((VkAttachmentDescriptionStencilLayout*)(name)));}();
return return_ozWOpdU;}();
        return result;
        }
    

        json serialize_VkAttachmentDescriptionStencilLayoutKHR_pNext(const void* name){
        printf("Serializing VkAttachmentDescriptionStencilLayoutKHR...\n");
        json result;
        result=[&]() {
    json return_EaaEtkt=json({});
    
        if (((VkAttachmentDescriptionStencilLayoutKHR*)(name))==NULL){
            return_EaaEtkt["null"]=true;
            return return_EaaEtkt;
        }
        return_EaaEtkt=[&]() {
    json return_GtxgNbw=json({});
    return serialize_VkAttachmentDescriptionStencilLayoutKHR(*((VkAttachmentDescriptionStencilLayoutKHR*)(name)));}();
return return_EaaEtkt;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_dUSEYgh=json({});
    
        if (((VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR*)(name))==NULL){
            return_dUSEYgh["null"]=true;
            return return_dUSEYgh;
        }
        return_dUSEYgh=[&]() {
    json return_HFrFlZY=json({});
    return serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(*((VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR*)(name)));}();
return return_dUSEYgh;}();
        return result;
        }
    

        json serialize_VkPipelineInfoKHR_pNext(const void* name){
        printf("Serializing VkPipelineInfoKHR...\n");
        json result;
        result=[&]() {
    json return_cOxXfcD=json({});
    
        if (((VkPipelineInfoKHR*)(name))==NULL){
            return_cOxXfcD["null"]=true;
            return return_cOxXfcD;
        }
        return_cOxXfcD=[&]() {
    json return_atBCfPH=json({});
    return serialize_VkPipelineInfoKHR(*((VkPipelineInfoKHR*)(name)));}();
return return_cOxXfcD;}();
        return result;
        }
    

        json serialize_VkPipelineInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineInfoEXT...\n");
        json result;
        result=[&]() {
    json return_TxkQVJe=json({});
    
        if (((VkPipelineInfoEXT*)(name))==NULL){
            return_TxkQVJe["null"]=true;
            return return_TxkQVJe;
        }
        return_TxkQVJe=[&]() {
    json return_UiFjODj=json({});
    return serialize_VkPipelineInfoEXT(*((VkPipelineInfoEXT*)(name)));}();
return return_TxkQVJe;}();
        return result;
        }
    

        json serialize_VkPipelineExecutablePropertiesKHR_pNext(const void* name){
        printf("Serializing VkPipelineExecutablePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_YpVrNMa=json({});
    
        if (((VkPipelineExecutablePropertiesKHR*)(name))==NULL){
            return_YpVrNMa["null"]=true;
            return return_YpVrNMa;
        }
        return_YpVrNMa=[&]() {
    json return_AjfvXXS=json({});
    return serialize_VkPipelineExecutablePropertiesKHR(*((VkPipelineExecutablePropertiesKHR*)(name)));}();
return return_YpVrNMa;}();
        return result;
        }
    

        json serialize_VkPipelineExecutableInfoKHR_pNext(const void* name){
        printf("Serializing VkPipelineExecutableInfoKHR...\n");
        json result;
        result=[&]() {
    json return_OQiSOVa=json({});
    
        if (((VkPipelineExecutableInfoKHR*)(name))==NULL){
            return_OQiSOVa["null"]=true;
            return return_OQiSOVa;
        }
        return_OQiSOVa=[&]() {
    json return_nCEkssJ=json({});
    return serialize_VkPipelineExecutableInfoKHR(*((VkPipelineExecutableInfoKHR*)(name)));}();
return return_OQiSOVa;}();
        return result;
        }
    

        json serialize_VkPipelineExecutableStatisticValueKHR_pNext(const void* name){
        printf("Serializing VkPipelineExecutableStatisticValueKHR...\n");
        json result;
        result=[&]() {
    json return_YqHJQcj=json({});
    
        if (((VkPipelineExecutableStatisticValueKHR*)(name))==NULL){
            return_YqHJQcj["null"]=true;
            return return_YqHJQcj;
        }
        return_YqHJQcj=[&]() {
    json return_NFkUKIH=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(*((VkPipelineExecutableStatisticValueKHR*)(name)));}();
return return_YqHJQcj;}();
        return result;
        }
    

        json serialize_VkPipelineExecutableStatisticKHR_pNext(const void* name){
        printf("Serializing VkPipelineExecutableStatisticKHR...\n");
        json result;
        result=[&]() {
    json return_LwKVQSx=json({});
    
        if (((VkPipelineExecutableStatisticKHR*)(name))==NULL){
            return_LwKVQSx["null"]=true;
            return return_LwKVQSx;
        }
        return_LwKVQSx=[&]() {
    json return_hhBtFfE=json({});
    return serialize_VkPipelineExecutableStatisticKHR(*((VkPipelineExecutableStatisticKHR*)(name)));}();
return return_LwKVQSx;}();
        return result;
        }
    

        json serialize_VkPipelineExecutableInternalRepresentationKHR_pNext(const void* name){
        printf("Serializing VkPipelineExecutableInternalRepresentationKHR...\n");
        json result;
        result=[&]() {
    json return_pEsJeBH=json({});
    
        if (((VkPipelineExecutableInternalRepresentationKHR*)(name))==NULL){
            return_pEsJeBH["null"]=true;
            return return_pEsJeBH;
        }
        return_pEsJeBH=[&]() {
    json return_Gipiipi=json({});
    return serialize_VkPipelineExecutableInternalRepresentationKHR(*((VkPipelineExecutableInternalRepresentationKHR*)(name)));}();
return return_pEsJeBH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures...\n");
        json result;
        result=[&]() {
    json return_vyJvmIn=json({});
    
        if (((VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures*)(name))==NULL){
            return_vyJvmIn["null"]=true;
            return return_vyJvmIn;
        }
        return_vyJvmIn=[&]() {
    json return_JjhZnlb=json({});
    return serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(*((VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures*)(name)));}();
return return_vyJvmIn;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_BMngNUP=json({});
    
        if (((VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT*)(name))==NULL){
            return_BMngNUP["null"]=true;
            return return_BMngNUP;
        }
        return_BMngNUP=[&]() {
    json return_FaqCMHH=json({});
    return serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(*((VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT*)(name)));}();
return return_BMngNUP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_raJGjqF=json({});
    
        if (((VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT*)(name))==NULL){
            return_raJGjqF["null"]=true;
            return return_raJGjqF;
        }
        return_raJGjqF=[&]() {
    json return_ELucQKB=json({});
    return serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(*((VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT*)(name)));}();
return return_raJGjqF;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTexelBufferAlignmentProperties...\n");
        json result;
        result=[&]() {
    json return_YIjgJvf=json({});
    
        if (((VkPhysicalDeviceTexelBufferAlignmentProperties*)(name))==NULL){
            return_YIjgJvf["null"]=true;
            return return_YIjgJvf;
        }
        return_YIjgJvf=[&]() {
    json return_spUSNCJ=json({});
    return serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(*((VkPhysicalDeviceTexelBufferAlignmentProperties*)(name)));}();
return return_YIjgJvf;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_YQHDQwl=json({});
    
        if (((VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT*)(name))==NULL){
            return_YQHDQwl["null"]=true;
            return return_YQHDQwl;
        }
        return_YQHDQwl=[&]() {
    json return_iHEkOfw=json({});
    return serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(*((VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT*)(name)));}();
return return_YQHDQwl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubgroupSizeControlFeatures...\n");
        json result;
        result=[&]() {
    json return_ZzlaSyE=json({});
    
        if (((VkPhysicalDeviceSubgroupSizeControlFeatures*)(name))==NULL){
            return_ZzlaSyE["null"]=true;
            return return_ZzlaSyE;
        }
        return_ZzlaSyE=[&]() {
    json return_KoBDzxA=json({});
    return serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(*((VkPhysicalDeviceSubgroupSizeControlFeatures*)(name)));}();
return return_ZzlaSyE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubgroupSizeControlFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_JcxEqVe=json({});
    
        if (((VkPhysicalDeviceSubgroupSizeControlFeaturesEXT*)(name))==NULL){
            return_JcxEqVe["null"]=true;
            return return_JcxEqVe;
        }
        return_JcxEqVe=[&]() {
    json return_ZHkUYeA=json({});
    return serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(*((VkPhysicalDeviceSubgroupSizeControlFeaturesEXT*)(name)));}();
return return_JcxEqVe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubgroupSizeControlProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubgroupSizeControlProperties...\n");
        json result;
        result=[&]() {
    json return_VUjvmsd=json({});
    
        if (((VkPhysicalDeviceSubgroupSizeControlProperties*)(name))==NULL){
            return_VUjvmsd["null"]=true;
            return return_VUjvmsd;
        }
        return_VUjvmsd=[&]() {
    json return_HaqLCeJ=json({});
    return serialize_VkPhysicalDeviceSubgroupSizeControlProperties(*((VkPhysicalDeviceSubgroupSizeControlProperties*)(name)));}();
return return_VUjvmsd;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubgroupSizeControlPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_QPDzWMH=json({});
    
        if (((VkPhysicalDeviceSubgroupSizeControlPropertiesEXT*)(name))==NULL){
            return_QPDzWMH["null"]=true;
            return return_QPDzWMH;
        }
        return_QPDzWMH=[&]() {
    json return_MQVCYyz=json({});
    return serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(*((VkPhysicalDeviceSubgroupSizeControlPropertiesEXT*)(name)));}();
return return_QPDzWMH;}();
        return result;
        }
    

        json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineShaderStageRequiredSubgroupSizeCreateInfo...\n");
        json result;
        result=[&]() {
    json return_scQweYu=json({});
    
        if (((VkPipelineShaderStageRequiredSubgroupSizeCreateInfo*)(name))==NULL){
            return_scQweYu["null"]=true;
            return return_scQweYu;
        }
        return_scQweYu=[&]() {
    json return_tapxLZU=json({});
    return serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(*((VkPipelineShaderStageRequiredSubgroupSizeCreateInfo*)(name)));}();
return return_scQweYu;}();
        return result;
        }
    

        json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_iAFAnyg=json({});
    
        if (((VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT*)(name))==NULL){
            return_iAFAnyg["null"]=true;
            return return_iAFAnyg;
        }
        return_iAFAnyg=[&]() {
    json return_lTkbpjj=json({});
    return serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(*((VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT*)(name)));}();
return return_iAFAnyg;}();
        return result;
        }
    

        json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkShaderRequiredSubgroupSizeCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_tLzMNYW=json({});
    
        if (((VkShaderRequiredSubgroupSizeCreateInfoEXT*)(name))==NULL){
            return_tLzMNYW["null"]=true;
            return return_tLzMNYW;
        }
        return_tLzMNYW=[&]() {
    json return_vluprMM=json({});
    return serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(*((VkShaderRequiredSubgroupSizeCreateInfoEXT*)(name)));}();
return return_tLzMNYW;}();
        return result;
        }
    

        json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI_pNext(const void* name){
        printf("Serializing VkSubpassShadingPipelineCreateInfoHUAWEI...\n");
        json result;
        result=[&]() {
    json return_zhQreyF=json({});
    
        if (((VkSubpassShadingPipelineCreateInfoHUAWEI*)(name))==NULL){
            return_zhQreyF["null"]=true;
            return return_zhQreyF;
        }
        return_zhQreyF=[&]() {
    json return_AybuAub=json({});
    return serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(*((VkSubpassShadingPipelineCreateInfoHUAWEI*)(name)));}();
return return_zhQreyF;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubpassShadingPropertiesHUAWEI...\n");
        json result;
        result=[&]() {
    json return_kUievWW=json({});
    
        if (((VkPhysicalDeviceSubpassShadingPropertiesHUAWEI*)(name))==NULL){
            return_kUievWW["null"]=true;
            return return_kUievWW;
        }
        return_kUievWW=[&]() {
    json return_YdMDgEL=json({});
    return serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(*((VkPhysicalDeviceSubpassShadingPropertiesHUAWEI*)(name)));}();
return return_kUievWW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI...\n");
        json result;
        result=[&]() {
    json return_eaVfkDv=json({});
    
        if (((VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI*)(name))==NULL){
            return_eaVfkDv["null"]=true;
            return return_eaVfkDv;
        }
        return_eaVfkDv=[&]() {
    json return_lnIQtsy=json({});
    return serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(*((VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI*)(name)));}();
return return_eaVfkDv;}();
        return result;
        }
    

        json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo_pNext(const void* name){
        printf("Serializing VkMemoryOpaqueCaptureAddressAllocateInfo...\n");
        json result;
        result=[&]() {
    json return_NwotHUQ=json({});
    
        if (((VkMemoryOpaqueCaptureAddressAllocateInfo*)(name))==NULL){
            return_NwotHUQ["null"]=true;
            return return_NwotHUQ;
        }
        return_NwotHUQ=[&]() {
    json return_zsjneKI=json({});
    return serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(*((VkMemoryOpaqueCaptureAddressAllocateInfo*)(name)));}();
return return_NwotHUQ;}();
        return result;
        }
    

        json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR_pNext(const void* name){
        printf("Serializing VkMemoryOpaqueCaptureAddressAllocateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_gKBCOXa=json({});
    
        if (((VkMemoryOpaqueCaptureAddressAllocateInfoKHR*)(name))==NULL){
            return_gKBCOXa["null"]=true;
            return return_gKBCOXa;
        }
        return_gKBCOXa=[&]() {
    json return_CYxjewn=json({});
    return serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(*((VkMemoryOpaqueCaptureAddressAllocateInfoKHR*)(name)));}();
return return_gKBCOXa;}();
        return result;
        }
    

        json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo_pNext(const void* name){
        printf("Serializing VkDeviceMemoryOpaqueCaptureAddressInfo...\n");
        json result;
        result=[&]() {
    json return_BZQbxSe=json({});
    
        if (((VkDeviceMemoryOpaqueCaptureAddressInfo*)(name))==NULL){
            return_BZQbxSe["null"]=true;
            return return_BZQbxSe;
        }
        return_BZQbxSe=[&]() {
    json return_dKwmRrj=json({});
    return serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(*((VkDeviceMemoryOpaqueCaptureAddressInfo*)(name)));}();
return return_BZQbxSe;}();
        return result;
        }
    

        json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceMemoryOpaqueCaptureAddressInfoKHR...\n");
        json result;
        result=[&]() {
    json return_WhUEnLe=json({});
    
        if (((VkDeviceMemoryOpaqueCaptureAddressInfoKHR*)(name))==NULL){
            return_WhUEnLe["null"]=true;
            return return_WhUEnLe;
        }
        return_WhUEnLe=[&]() {
    json return_ewBBBYH=json({});
    return serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(*((VkDeviceMemoryOpaqueCaptureAddressInfoKHR*)(name)));}();
return return_WhUEnLe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceLineRasterizationFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_lMfCejn=json({});
    
        if (((VkPhysicalDeviceLineRasterizationFeaturesEXT*)(name))==NULL){
            return_lMfCejn["null"]=true;
            return return_lMfCejn;
        }
        return_lMfCejn=[&]() {
    json return_caJuumJ=json({});
    return serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(*((VkPhysicalDeviceLineRasterizationFeaturesEXT*)(name)));}();
return return_lMfCejn;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceLineRasterizationPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_KdbweIW=json({});
    
        if (((VkPhysicalDeviceLineRasterizationPropertiesEXT*)(name))==NULL){
            return_KdbweIW["null"]=true;
            return return_KdbweIW;
        }
        return_KdbweIW=[&]() {
    json return_RBBRBXz=json({});
    return serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(*((VkPhysicalDeviceLineRasterizationPropertiesEXT*)(name)));}();
return return_KdbweIW;}();
        return result;
        }
    

        json serialize_VkPipelineRasterizationLineStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineRasterizationLineStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_MeiJihF=json({});
    
        if (((VkPipelineRasterizationLineStateCreateInfoEXT*)(name))==NULL){
            return_MeiJihF["null"]=true;
            return return_MeiJihF;
        }
        return_MeiJihF=[&]() {
    json return_QTLeHwf=json({});
    return serialize_VkPipelineRasterizationLineStateCreateInfoEXT(*((VkPipelineRasterizationLineStateCreateInfoEXT*)(name)));}();
return return_MeiJihF;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelineCreationCacheControlFeatures...\n");
        json result;
        result=[&]() {
    json return_EMJRrDf=json({});
    
        if (((VkPhysicalDevicePipelineCreationCacheControlFeatures*)(name))==NULL){
            return_EMJRrDf["null"]=true;
            return return_EMJRrDf;
        }
        return_EMJRrDf=[&]() {
    json return_VjFAfYs=json({});
    return serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(*((VkPhysicalDevicePipelineCreationCacheControlFeatures*)(name)));}();
return return_EMJRrDf;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_GhtFHXi=json({});
    
        if (((VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT*)(name))==NULL){
            return_GhtFHXi["null"]=true;
            return return_GhtFHXi;
        }
        return_GhtFHXi=[&]() {
    json return_jtjSLoE=json({});
    return serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(*((VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT*)(name)));}();
return return_GhtFHXi;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkan11Features_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkan11Features...\n");
        json result;
        result=[&]() {
    json return_mIFpQfQ=json({});
    
        if (((VkPhysicalDeviceVulkan11Features*)(name))==NULL){
            return_mIFpQfQ["null"]=true;
            return return_mIFpQfQ;
        }
        return_mIFpQfQ=[&]() {
    json return_lMuRvWc=json({});
    return serialize_VkPhysicalDeviceVulkan11Features(*((VkPhysicalDeviceVulkan11Features*)(name)));}();
return return_mIFpQfQ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkan11Properties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkan11Properties...\n");
        json result;
        result=[&]() {
    json return_XCOsjRI=json({});
    
        if (((VkPhysicalDeviceVulkan11Properties*)(name))==NULL){
            return_XCOsjRI["null"]=true;
            return return_XCOsjRI;
        }
        return_XCOsjRI=[&]() {
    json return_fmsaIBy=json({});
    return serialize_VkPhysicalDeviceVulkan11Properties(*((VkPhysicalDeviceVulkan11Properties*)(name)));}();
return return_XCOsjRI;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkan12Features_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkan12Features...\n");
        json result;
        result=[&]() {
    json return_yXyMHTx=json({});
    
        if (((VkPhysicalDeviceVulkan12Features*)(name))==NULL){
            return_yXyMHTx["null"]=true;
            return return_yXyMHTx;
        }
        return_yXyMHTx=[&]() {
    json return_MIcnmsw=json({});
    return serialize_VkPhysicalDeviceVulkan12Features(*((VkPhysicalDeviceVulkan12Features*)(name)));}();
return return_yXyMHTx;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkan12Properties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkan12Properties...\n");
        json result;
        result=[&]() {
    json return_oZcyAix=json({});
    
        if (((VkPhysicalDeviceVulkan12Properties*)(name))==NULL){
            return_oZcyAix["null"]=true;
            return return_oZcyAix;
        }
        return_oZcyAix=[&]() {
    json return_NoszSAx=json({});
    return serialize_VkPhysicalDeviceVulkan12Properties(*((VkPhysicalDeviceVulkan12Properties*)(name)));}();
return return_oZcyAix;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkan13Features_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkan13Features...\n");
        json result;
        result=[&]() {
    json return_GVBCDXL=json({});
    
        if (((VkPhysicalDeviceVulkan13Features*)(name))==NULL){
            return_GVBCDXL["null"]=true;
            return return_GVBCDXL;
        }
        return_GVBCDXL=[&]() {
    json return_mJslFRo=json({});
    return serialize_VkPhysicalDeviceVulkan13Features(*((VkPhysicalDeviceVulkan13Features*)(name)));}();
return return_GVBCDXL;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVulkan13Properties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVulkan13Properties...\n");
        json result;
        result=[&]() {
    json return_MYhbGDG=json({});
    
        if (((VkPhysicalDeviceVulkan13Properties*)(name))==NULL){
            return_MYhbGDG["null"]=true;
            return return_MYhbGDG;
        }
        return_MYhbGDG=[&]() {
    json return_UDjZIuL=json({});
    return serialize_VkPhysicalDeviceVulkan13Properties(*((VkPhysicalDeviceVulkan13Properties*)(name)));}();
return return_MYhbGDG;}();
        return result;
        }
    

        json serialize_VkPipelineCompilerControlCreateInfoAMD_pNext(const void* name){
        printf("Serializing VkPipelineCompilerControlCreateInfoAMD...\n");
        json result;
        result=[&]() {
    json return_MmlAgYC=json({});
    
        if (((VkPipelineCompilerControlCreateInfoAMD*)(name))==NULL){
            return_MmlAgYC["null"]=true;
            return return_MmlAgYC;
        }
        return_MmlAgYC=[&]() {
    json return_boDGVvw=json({});
    return serialize_VkPipelineCompilerControlCreateInfoAMD(*((VkPipelineCompilerControlCreateInfoAMD*)(name)));}();
return return_MmlAgYC;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCoherentMemoryFeaturesAMD...\n");
        json result;
        result=[&]() {
    json return_ZfPgbyP=json({});
    
        if (((VkPhysicalDeviceCoherentMemoryFeaturesAMD*)(name))==NULL){
            return_ZfPgbyP["null"]=true;
            return return_ZfPgbyP;
        }
        return_ZfPgbyP=[&]() {
    json return_zrNBeVR=json({});
    return serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(*((VkPhysicalDeviceCoherentMemoryFeaturesAMD*)(name)));}();
return return_ZfPgbyP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceToolProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceToolProperties...\n");
        json result;
        result=[&]() {
    json return_BeERMAv=json({});
    
        if (((VkPhysicalDeviceToolProperties*)(name))==NULL){
            return_BeERMAv["null"]=true;
            return return_BeERMAv;
        }
        return_BeERMAv=[&]() {
    json return_XxnabXg=json({});
    return serialize_VkPhysicalDeviceToolProperties(*((VkPhysicalDeviceToolProperties*)(name)));}();
return return_BeERMAv;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceToolPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceToolPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_gbKtUIq=json({});
    
        if (((VkPhysicalDeviceToolPropertiesEXT*)(name))==NULL){
            return_gbKtUIq["null"]=true;
            return return_gbKtUIq;
        }
        return_gbKtUIq=[&]() {
    json return_qbVrmKE=json({});
    return serialize_VkPhysicalDeviceToolPropertiesEXT(*((VkPhysicalDeviceToolPropertiesEXT*)(name)));}();
return return_gbKtUIq;}();
        return result;
        }
    

        json serialize_VkSamplerCustomBorderColorCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkSamplerCustomBorderColorCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_PUwuIpm=json({});
    
        if (((VkSamplerCustomBorderColorCreateInfoEXT*)(name))==NULL){
            return_PUwuIpm["null"]=true;
            return return_PUwuIpm;
        }
        return_PUwuIpm=[&]() {
    json return_IvZWEbG=json({});
    return serialize_VkSamplerCustomBorderColorCreateInfoEXT(*((VkSamplerCustomBorderColorCreateInfoEXT*)(name)));}();
return return_PUwuIpm;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCustomBorderColorPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_SYFIVOt=json({});
    
        if (((VkPhysicalDeviceCustomBorderColorPropertiesEXT*)(name))==NULL){
            return_SYFIVOt["null"]=true;
            return return_SYFIVOt;
        }
        return_SYFIVOt=[&]() {
    json return_XASkarr=json({});
    return serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(*((VkPhysicalDeviceCustomBorderColorPropertiesEXT*)(name)));}();
return return_SYFIVOt;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCustomBorderColorFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_tlKpOZl=json({});
    
        if (((VkPhysicalDeviceCustomBorderColorFeaturesEXT*)(name))==NULL){
            return_tlKpOZl["null"]=true;
            return return_tlKpOZl;
        }
        return_tlKpOZl=[&]() {
    json return_nqErQuu=json({});
    return serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(*((VkPhysicalDeviceCustomBorderColorFeaturesEXT*)(name)));}();
return return_tlKpOZl;}();
        return result;
        }
    

        json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkSamplerBorderColorComponentMappingCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_uOmIavH=json({});
    
        if (((VkSamplerBorderColorComponentMappingCreateInfoEXT*)(name))==NULL){
            return_uOmIavH["null"]=true;
            return return_uOmIavH;
        }
        return_uOmIavH=[&]() {
    json return_CmEPBvA=json({});
    return serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(*((VkSamplerBorderColorComponentMappingCreateInfoEXT*)(name)));}();
return return_uOmIavH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceBorderColorSwizzleFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_aBlXpvY=json({});
    
        if (((VkPhysicalDeviceBorderColorSwizzleFeaturesEXT*)(name))==NULL){
            return_aBlXpvY["null"]=true;
            return return_aBlXpvY;
        }
        return_aBlXpvY=[&]() {
    json return_gDWGCdg=json({});
    return serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(*((VkPhysicalDeviceBorderColorSwizzleFeaturesEXT*)(name)));}();
return return_aBlXpvY;}();
        return result;
        }
    

        json serialize_VkDeviceOrHostAddressKHR_pNext(const void* name){
        printf("Serializing VkDeviceOrHostAddressKHR...\n");
        json result;
        result=[&]() {
    json return_ZemxmAu=json({});
    
        if (((VkDeviceOrHostAddressKHR*)(name))==NULL){
            return_ZemxmAu["null"]=true;
            return return_ZemxmAu;
        }
        return_ZemxmAu=[&]() {
    json return_KXMDqid=json({});
    return serialize_VkDeviceOrHostAddressKHR(*((VkDeviceOrHostAddressKHR*)(name)));}();
return return_ZemxmAu;}();
        return result;
        }
    

        json serialize_VkDeviceOrHostAddressConstKHR_pNext(const void* name){
        printf("Serializing VkDeviceOrHostAddressConstKHR...\n");
        json result;
        result=[&]() {
    json return_hzTYIZU=json({});
    
        if (((VkDeviceOrHostAddressConstKHR*)(name))==NULL){
            return_hzTYIZU["null"]=true;
            return return_hzTYIZU;
        }
        return_hzTYIZU=[&]() {
    json return_jVtekjc=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(*((VkDeviceOrHostAddressConstKHR*)(name)));}();
return return_hzTYIZU;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureGeometryTrianglesDataKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureGeometryTrianglesDataKHR...\n");
        json result;
        result=[&]() {
    json return_hdFEalw=json({});
    
        if (((VkAccelerationStructureGeometryTrianglesDataKHR*)(name))==NULL){
            return_hdFEalw["null"]=true;
            return return_hdFEalw;
        }
        return_hdFEalw=[&]() {
    json return_dICFqvR=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(*((VkAccelerationStructureGeometryTrianglesDataKHR*)(name)));}();
return return_hdFEalw;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureGeometryAabbsDataKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureGeometryAabbsDataKHR...\n");
        json result;
        result=[&]() {
    json return_lRsluyw=json({});
    
        if (((VkAccelerationStructureGeometryAabbsDataKHR*)(name))==NULL){
            return_lRsluyw["null"]=true;
            return return_lRsluyw;
        }
        return_lRsluyw=[&]() {
    json return_iaAtEwm=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(*((VkAccelerationStructureGeometryAabbsDataKHR*)(name)));}();
return return_lRsluyw;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureGeometryInstancesDataKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureGeometryInstancesDataKHR...\n");
        json result;
        result=[&]() {
    json return_ZIsnoTd=json({});
    
        if (((VkAccelerationStructureGeometryInstancesDataKHR*)(name))==NULL){
            return_ZIsnoTd["null"]=true;
            return return_ZIsnoTd;
        }
        return_ZIsnoTd=[&]() {
    json return_LYykDaA=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(*((VkAccelerationStructureGeometryInstancesDataKHR*)(name)));}();
return return_ZIsnoTd;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureGeometryDataKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureGeometryDataKHR...\n");
        json result;
        result=[&]() {
    json return_cIyewLi=json({});
    
        if (((VkAccelerationStructureGeometryDataKHR*)(name))==NULL){
            return_cIyewLi["null"]=true;
            return return_cIyewLi;
        }
        return_cIyewLi=[&]() {
    json return_nHdERBl=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(*((VkAccelerationStructureGeometryDataKHR*)(name)));}();
return return_cIyewLi;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureGeometryKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureGeometryKHR...\n");
        json result;
        result=[&]() {
    json return_acZcxCu=json({});
    
        if (((VkAccelerationStructureGeometryKHR*)(name))==NULL){
            return_acZcxCu["null"]=true;
            return return_acZcxCu;
        }
        return_acZcxCu=[&]() {
    json return_xWcltca=json({});
    return serialize_VkAccelerationStructureGeometryKHR(*((VkAccelerationStructureGeometryKHR*)(name)));}();
return return_acZcxCu;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureBuildGeometryInfoKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureBuildGeometryInfoKHR...\n");
        json result;
        result=[&]() {
    json return_CYoxUQe=json({});
    
        if (((VkAccelerationStructureBuildGeometryInfoKHR*)(name))==NULL){
            return_CYoxUQe["null"]=true;
            return return_CYoxUQe;
        }
        return_CYoxUQe=[&]() {
    json return_qnVkyBd=json({});
    return serialize_VkAccelerationStructureBuildGeometryInfoKHR(*((VkAccelerationStructureBuildGeometryInfoKHR*)(name)));}();
return return_CYoxUQe;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureBuildRangeInfoKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureBuildRangeInfoKHR...\n");
        json result;
        result=[&]() {
    json return_OXclhgw=json({});
    
        if (((VkAccelerationStructureBuildRangeInfoKHR*)(name))==NULL){
            return_OXclhgw["null"]=true;
            return return_OXclhgw;
        }
        return_OXclhgw=[&]() {
    json return_QnQfLxt=json({});
    return serialize_VkAccelerationStructureBuildRangeInfoKHR(*((VkAccelerationStructureBuildRangeInfoKHR*)(name)));}();
return return_OXclhgw;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_mgccVFW=json({});
    
        if (((VkAccelerationStructureCreateInfoKHR*)(name))==NULL){
            return_mgccVFW["null"]=true;
            return return_mgccVFW;
        }
        return_mgccVFW=[&]() {
    json return_lQTDwSx=json({});
    return serialize_VkAccelerationStructureCreateInfoKHR(*((VkAccelerationStructureCreateInfoKHR*)(name)));}();
return return_mgccVFW;}();
        return result;
        }
    

        json serialize_VkAabbPositionsKHR_pNext(const void* name){
        printf("Serializing VkAabbPositionsKHR...\n");
        json result;
        result=[&]() {
    json return_MJNTYhq=json({});
    
        if (((VkAabbPositionsKHR*)(name))==NULL){
            return_MJNTYhq["null"]=true;
            return return_MJNTYhq;
        }
        return_MJNTYhq=[&]() {
    json return_MGlquAg=json({});
    return serialize_VkAabbPositionsKHR(*((VkAabbPositionsKHR*)(name)));}();
return return_MJNTYhq;}();
        return result;
        }
    

        json serialize_VkAabbPositionsNV_pNext(const void* name){
        printf("Serializing VkAabbPositionsNV...\n");
        json result;
        result=[&]() {
    json return_FpCmBxR=json({});
    
        if (((VkAabbPositionsNV*)(name))==NULL){
            return_FpCmBxR["null"]=true;
            return return_FpCmBxR;
        }
        return_FpCmBxR=[&]() {
    json return_CSJxJCq=json({});
    return serialize_VkAabbPositionsNV(*((VkAabbPositionsNV*)(name)));}();
return return_FpCmBxR;}();
        return result;
        }
    

        json serialize_VkTransformMatrixKHR_pNext(const void* name){
        printf("Serializing VkTransformMatrixKHR...\n");
        json result;
        result=[&]() {
    json return_DQMtkzL=json({});
    
        if (((VkTransformMatrixKHR*)(name))==NULL){
            return_DQMtkzL["null"]=true;
            return return_DQMtkzL;
        }
        return_DQMtkzL=[&]() {
    json return_vRBahOv=json({});
    return serialize_VkTransformMatrixKHR(*((VkTransformMatrixKHR*)(name)));}();
return return_DQMtkzL;}();
        return result;
        }
    

        json serialize_VkTransformMatrixNV_pNext(const void* name){
        printf("Serializing VkTransformMatrixNV...\n");
        json result;
        result=[&]() {
    json return_HByJGdY=json({});
    
        if (((VkTransformMatrixNV*)(name))==NULL){
            return_HByJGdY["null"]=true;
            return return_HByJGdY;
        }
        return_HByJGdY=[&]() {
    json return_mEBNKgh=json({});
    return serialize_VkTransformMatrixNV(*((VkTransformMatrixNV*)(name)));}();
return return_HByJGdY;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureInstanceKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureInstanceKHR...\n");
        json result;
        result=[&]() {
    json return_ewsGMNy=json({});
    
        if (((VkAccelerationStructureInstanceKHR*)(name))==NULL){
            return_ewsGMNy["null"]=true;
            return return_ewsGMNy;
        }
        return_ewsGMNy=[&]() {
    json return_uNAskFt=json({});
    return serialize_VkAccelerationStructureInstanceKHR(*((VkAccelerationStructureInstanceKHR*)(name)));}();
return return_ewsGMNy;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureInstanceNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureInstanceNV...\n");
        json result;
        result=[&]() {
    json return_CDHQNpC=json({});
    
        if (((VkAccelerationStructureInstanceNV*)(name))==NULL){
            return_CDHQNpC["null"]=true;
            return return_CDHQNpC;
        }
        return_CDHQNpC=[&]() {
    json return_ScKNpjt=json({});
    return serialize_VkAccelerationStructureInstanceNV(*((VkAccelerationStructureInstanceNV*)(name)));}();
return return_CDHQNpC;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureDeviceAddressInfoKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureDeviceAddressInfoKHR...\n");
        json result;
        result=[&]() {
    json return_wFUddZf=json({});
    
        if (((VkAccelerationStructureDeviceAddressInfoKHR*)(name))==NULL){
            return_wFUddZf["null"]=true;
            return return_wFUddZf;
        }
        return_wFUddZf=[&]() {
    json return_MuxWpKF=json({});
    return serialize_VkAccelerationStructureDeviceAddressInfoKHR(*((VkAccelerationStructureDeviceAddressInfoKHR*)(name)));}();
return return_wFUddZf;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureVersionInfoKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureVersionInfoKHR...\n");
        json result;
        result=[&]() {
    json return_ndBMCOr=json({});
    
        if (((VkAccelerationStructureVersionInfoKHR*)(name))==NULL){
            return_ndBMCOr["null"]=true;
            return return_ndBMCOr;
        }
        return_ndBMCOr=[&]() {
    json return_knAREuq=json({});
    return serialize_VkAccelerationStructureVersionInfoKHR(*((VkAccelerationStructureVersionInfoKHR*)(name)));}();
return return_ndBMCOr;}();
        return result;
        }
    

        json serialize_VkCopyAccelerationStructureInfoKHR_pNext(const void* name){
        printf("Serializing VkCopyAccelerationStructureInfoKHR...\n");
        json result;
        result=[&]() {
    json return_JrSmyLD=json({});
    
        if (((VkCopyAccelerationStructureInfoKHR*)(name))==NULL){
            return_JrSmyLD["null"]=true;
            return return_JrSmyLD;
        }
        return_JrSmyLD=[&]() {
    json return_qGeTIyn=json({});
    return serialize_VkCopyAccelerationStructureInfoKHR(*((VkCopyAccelerationStructureInfoKHR*)(name)));}();
return return_JrSmyLD;}();
        return result;
        }
    

        json serialize_VkCopyAccelerationStructureToMemoryInfoKHR_pNext(const void* name){
        printf("Serializing VkCopyAccelerationStructureToMemoryInfoKHR...\n");
        json result;
        result=[&]() {
    json return_QHVPKhW=json({});
    
        if (((VkCopyAccelerationStructureToMemoryInfoKHR*)(name))==NULL){
            return_QHVPKhW["null"]=true;
            return return_QHVPKhW;
        }
        return_QHVPKhW=[&]() {
    json return_KltLagf=json({});
    return serialize_VkCopyAccelerationStructureToMemoryInfoKHR(*((VkCopyAccelerationStructureToMemoryInfoKHR*)(name)));}();
return return_QHVPKhW;}();
        return result;
        }
    

        json serialize_VkCopyMemoryToAccelerationStructureInfoKHR_pNext(const void* name){
        printf("Serializing VkCopyMemoryToAccelerationStructureInfoKHR...\n");
        json result;
        result=[&]() {
    json return_kRnUbcG=json({});
    
        if (((VkCopyMemoryToAccelerationStructureInfoKHR*)(name))==NULL){
            return_kRnUbcG["null"]=true;
            return return_kRnUbcG;
        }
        return_kRnUbcG=[&]() {
    json return_sSeQlJR=json({});
    return serialize_VkCopyMemoryToAccelerationStructureInfoKHR(*((VkCopyMemoryToAccelerationStructureInfoKHR*)(name)));}();
return return_kRnUbcG;}();
        return result;
        }
    

        json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkRayTracingPipelineInterfaceCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_TLHLznV=json({});
    
        if (((VkRayTracingPipelineInterfaceCreateInfoKHR*)(name))==NULL){
            return_TLHLznV["null"]=true;
            return return_TLHLznV;
        }
        return_TLHLznV=[&]() {
    json return_afwUpdt=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*((VkRayTracingPipelineInterfaceCreateInfoKHR*)(name)));}();
return return_TLHLznV;}();
        return result;
        }
    

        json serialize_VkPipelineLibraryCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkPipelineLibraryCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_IZaLJxY=json({});
    
        if (((VkPipelineLibraryCreateInfoKHR*)(name))==NULL){
            return_IZaLJxY["null"]=true;
            return return_IZaLJxY;
        }
        return_IZaLJxY=[&]() {
    json return_UeLjfcb=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*((VkPipelineLibraryCreateInfoKHR*)(name)));}();
return return_IZaLJxY;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExtendedDynamicStateFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_tcwUZez=json({});
    
        if (((VkPhysicalDeviceExtendedDynamicStateFeaturesEXT*)(name))==NULL){
            return_tcwUZez["null"]=true;
            return return_tcwUZez;
        }
        return_tcwUZez=[&]() {
    json return_cJqRUhc=json({});
    return serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(*((VkPhysicalDeviceExtendedDynamicStateFeaturesEXT*)(name)));}();
return return_tcwUZez;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExtendedDynamicState2FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_QXgiqxe=json({});
    
        if (((VkPhysicalDeviceExtendedDynamicState2FeaturesEXT*)(name))==NULL){
            return_QXgiqxe["null"]=true;
            return return_QXgiqxe;
        }
        return_QXgiqxe=[&]() {
    json return_iRUzaVk=json({});
    return serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(*((VkPhysicalDeviceExtendedDynamicState2FeaturesEXT*)(name)));}();
return return_QXgiqxe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExtendedDynamicState3FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_aKJERwR=json({});
    
        if (((VkPhysicalDeviceExtendedDynamicState3FeaturesEXT*)(name))==NULL){
            return_aKJERwR["null"]=true;
            return return_aKJERwR;
        }
        return_aKJERwR=[&]() {
    json return_lQlnRif=json({});
    return serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(*((VkPhysicalDeviceExtendedDynamicState3FeaturesEXT*)(name)));}();
return return_aKJERwR;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExtendedDynamicState3PropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_bgeBMkK=json({});
    
        if (((VkPhysicalDeviceExtendedDynamicState3PropertiesEXT*)(name))==NULL){
            return_bgeBMkK["null"]=true;
            return return_bgeBMkK;
        }
        return_bgeBMkK=[&]() {
    json return_InaptPC=json({});
    return serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(*((VkPhysicalDeviceExtendedDynamicState3PropertiesEXT*)(name)));}();
return return_bgeBMkK;}();
        return result;
        }
    

        json serialize_VkColorBlendEquationEXT_pNext(const void* name){
        printf("Serializing VkColorBlendEquationEXT...\n");
        json result;
        result=[&]() {
    json return_mccasFV=json({});
    
        if (((VkColorBlendEquationEXT*)(name))==NULL){
            return_mccasFV["null"]=true;
            return return_mccasFV;
        }
        return_mccasFV=[&]() {
    json return_SOimnAo=json({});
    return serialize_VkColorBlendEquationEXT(*((VkColorBlendEquationEXT*)(name)));}();
return return_mccasFV;}();
        return result;
        }
    

        json serialize_VkColorBlendAdvancedEXT_pNext(const void* name){
        printf("Serializing VkColorBlendAdvancedEXT...\n");
        json result;
        result=[&]() {
    json return_zxjegBj=json({});
    
        if (((VkColorBlendAdvancedEXT*)(name))==NULL){
            return_zxjegBj["null"]=true;
            return return_zxjegBj;
        }
        return_zxjegBj=[&]() {
    json return_mFPiGzT=json({});
    return serialize_VkColorBlendAdvancedEXT(*((VkColorBlendAdvancedEXT*)(name)));}();
return return_zxjegBj;}();
        return result;
        }
    

        json serialize_VkRenderPassTransformBeginInfoQCOM_pNext(const void* name){
        printf("Serializing VkRenderPassTransformBeginInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_ZtdfzNP=json({});
    
        if (((VkRenderPassTransformBeginInfoQCOM*)(name))==NULL){
            return_ZtdfzNP["null"]=true;
            return return_ZtdfzNP;
        }
        return_ZtdfzNP=[&]() {
    json return_jhZKHdt=json({});
    return serialize_VkRenderPassTransformBeginInfoQCOM(*((VkRenderPassTransformBeginInfoQCOM*)(name)));}();
return return_ZtdfzNP;}();
        return result;
        }
    

        json serialize_VkCopyCommandTransformInfoQCOM_pNext(const void* name){
        printf("Serializing VkCopyCommandTransformInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_jWKzDCO=json({});
    
        if (((VkCopyCommandTransformInfoQCOM*)(name))==NULL){
            return_jWKzDCO["null"]=true;
            return return_jWKzDCO;
        }
        return_jWKzDCO=[&]() {
    json return_iJLuJKf=json({});
    return serialize_VkCopyCommandTransformInfoQCOM(*((VkCopyCommandTransformInfoQCOM*)(name)));}();
return return_jWKzDCO;}();
        return result;
        }
    

        json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM_pNext(const void* name){
        printf("Serializing VkCommandBufferInheritanceRenderPassTransformInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_kOgXHPS=json({});
    
        if (((VkCommandBufferInheritanceRenderPassTransformInfoQCOM*)(name))==NULL){
            return_kOgXHPS["null"]=true;
            return return_kOgXHPS;
        }
        return_kOgXHPS=[&]() {
    json return_rUakfFH=json({});
    return serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(*((VkCommandBufferInheritanceRenderPassTransformInfoQCOM*)(name)));}();
return return_kOgXHPS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDiagnosticsConfigFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_mTbPzWw=json({});
    
        if (((VkPhysicalDeviceDiagnosticsConfigFeaturesNV*)(name))==NULL){
            return_mTbPzWw["null"]=true;
            return return_mTbPzWw;
        }
        return_mTbPzWw=[&]() {
    json return_kCXTRKw=json({});
    return serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(*((VkPhysicalDeviceDiagnosticsConfigFeaturesNV*)(name)));}();
return return_mTbPzWw;}();
        return result;
        }
    

        json serialize_VkDeviceDiagnosticsConfigCreateInfoNV_pNext(const void* name){
        printf("Serializing VkDeviceDiagnosticsConfigCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_SsFHhFO=json({});
    
        if (((VkDeviceDiagnosticsConfigCreateInfoNV*)(name))==NULL){
            return_SsFHhFO["null"]=true;
            return return_SsFHhFO;
        }
        return_SsFHhFO=[&]() {
    json return_pWuDRSm=json({});
    return serialize_VkDeviceDiagnosticsConfigCreateInfoNV(*((VkDeviceDiagnosticsConfigCreateInfoNV*)(name)));}();
return return_SsFHhFO;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures...\n");
        json result;
        result=[&]() {
    json return_WEEjjoA=json({});
    
        if (((VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures*)(name))==NULL){
            return_WEEjjoA["null"]=true;
            return return_WEEjjoA;
        }
        return_WEEjjoA=[&]() {
    json return_kvcuVuq=json({});
    return serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(*((VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures*)(name)));}();
return return_WEEjjoA;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_NlnzAPs=json({});
    
        if (((VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR*)(name))==NULL){
            return_NlnzAPs["null"]=true;
            return return_NlnzAPs;
        }
        return_NlnzAPs=[&]() {
    json return_lVANNfM=json({});
    return serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(*((VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR*)(name)));}();
return return_NlnzAPs;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_vKSGiFo=json({});
    
        if (((VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR*)(name))==NULL){
            return_vKSGiFo["null"]=true;
            return return_vKSGiFo;
        }
        return_vKSGiFo=[&]() {
    json return_pcJpvru=json({});
    return serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(*((VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR*)(name)));}();
return return_vKSGiFo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRobustness2FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRobustness2FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_jtkBzsD=json({});
    
        if (((VkPhysicalDeviceRobustness2FeaturesEXT*)(name))==NULL){
            return_jtkBzsD["null"]=true;
            return return_jtkBzsD;
        }
        return_jtkBzsD=[&]() {
    json return_QyhHWPu=json({});
    return serialize_VkPhysicalDeviceRobustness2FeaturesEXT(*((VkPhysicalDeviceRobustness2FeaturesEXT*)(name)));}();
return return_jtkBzsD;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRobustness2PropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRobustness2PropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_gBCpMff=json({});
    
        if (((VkPhysicalDeviceRobustness2PropertiesEXT*)(name))==NULL){
            return_gBCpMff["null"]=true;
            return return_gBCpMff;
        }
        return_gBCpMff=[&]() {
    json return_Vvogsic=json({});
    return serialize_VkPhysicalDeviceRobustness2PropertiesEXT(*((VkPhysicalDeviceRobustness2PropertiesEXT*)(name)));}();
return return_gBCpMff;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageRobustnessFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageRobustnessFeatures...\n");
        json result;
        result=[&]() {
    json return_acRNqkx=json({});
    
        if (((VkPhysicalDeviceImageRobustnessFeatures*)(name))==NULL){
            return_acRNqkx["null"]=true;
            return return_acRNqkx;
        }
        return_acRNqkx=[&]() {
    json return_AJrHGUE=json({});
    return serialize_VkPhysicalDeviceImageRobustnessFeatures(*((VkPhysicalDeviceImageRobustnessFeatures*)(name)));}();
return return_acRNqkx;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageRobustnessFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_qNqQjfI=json({});
    
        if (((VkPhysicalDeviceImageRobustnessFeaturesEXT*)(name))==NULL){
            return_qNqQjfI["null"]=true;
            return return_qNqQjfI;
        }
        return_qNqQjfI=[&]() {
    json return_JzGNfjP=json({});
    return serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(*((VkPhysicalDeviceImageRobustnessFeaturesEXT*)(name)));}();
return return_qNqQjfI;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_faURDfF=json({});
    
        if (((VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR*)(name))==NULL){
            return_faURDfF["null"]=true;
            return return_faURDfF;
        }
        return_faURDfF=[&]() {
    json return_EskknyJ=json({});
    return serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(*((VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR*)(name)));}();
return return_faURDfF;}();
        return result;
        }
    

        json serialize_VkPhysicalDevice4444FormatsFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevice4444FormatsFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_lAZtdLz=json({});
    
        if (((VkPhysicalDevice4444FormatsFeaturesEXT*)(name))==NULL){
            return_lAZtdLz["null"]=true;
            return return_lAZtdLz;
        }
        return_lAZtdLz=[&]() {
    json return_qhwyiht=json({});
    return serialize_VkPhysicalDevice4444FormatsFeaturesEXT(*((VkPhysicalDevice4444FormatsFeaturesEXT*)(name)));}();
return return_lAZtdLz;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubpassShadingFeaturesHUAWEI...\n");
        json result;
        result=[&]() {
    json return_wiVHGEN=json({});
    
        if (((VkPhysicalDeviceSubpassShadingFeaturesHUAWEI*)(name))==NULL){
            return_wiVHGEN["null"]=true;
            return return_wiVHGEN;
        }
        return_wiVHGEN=[&]() {
    json return_DLcfwFs=json({});
    return serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(*((VkPhysicalDeviceSubpassShadingFeaturesHUAWEI*)(name)));}();
return return_wiVHGEN;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI...\n");
        json result;
        result=[&]() {
    json return_aQDkhfl=json({});
    
        if (((VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI*)(name))==NULL){
            return_aQDkhfl["null"]=true;
            return return_aQDkhfl;
        }
        return_aQDkhfl=[&]() {
    json return_gTubizj=json({});
    return serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(*((VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI*)(name)));}();
return return_aQDkhfl;}();
        return result;
        }
    

        json serialize_VkBufferCopy2_pNext(const void* name){
        printf("Serializing VkBufferCopy2...\n");
        json result;
        result=[&]() {
    json return_UzJlukl=json({});
    
        if (((VkBufferCopy2*)(name))==NULL){
            return_UzJlukl["null"]=true;
            return return_UzJlukl;
        }
        return_UzJlukl=[&]() {
    json return_dYUjtEt=json({});
    return serialize_VkBufferCopy2(*((VkBufferCopy2*)(name)));}();
return return_UzJlukl;}();
        return result;
        }
    

        json serialize_VkBufferCopy2KHR_pNext(const void* name){
        printf("Serializing VkBufferCopy2KHR...\n");
        json result;
        result=[&]() {
    json return_SlbWxLi=json({});
    
        if (((VkBufferCopy2KHR*)(name))==NULL){
            return_SlbWxLi["null"]=true;
            return return_SlbWxLi;
        }
        return_SlbWxLi=[&]() {
    json return_lGLqzmI=json({});
    return serialize_VkBufferCopy2KHR(*((VkBufferCopy2KHR*)(name)));}();
return return_SlbWxLi;}();
        return result;
        }
    

        json serialize_VkImageCopy2_pNext(const void* name){
        printf("Serializing VkImageCopy2...\n");
        json result;
        result=[&]() {
    json return_dOVCxwp=json({});
    
        if (((VkImageCopy2*)(name))==NULL){
            return_dOVCxwp["null"]=true;
            return return_dOVCxwp;
        }
        return_dOVCxwp=[&]() {
    json return_veuUDmm=json({});
    return serialize_VkImageCopy2(*((VkImageCopy2*)(name)));}();
return return_dOVCxwp;}();
        return result;
        }
    

        json serialize_VkImageCopy2KHR_pNext(const void* name){
        printf("Serializing VkImageCopy2KHR...\n");
        json result;
        result=[&]() {
    json return_GsoXAts=json({});
    
        if (((VkImageCopy2KHR*)(name))==NULL){
            return_GsoXAts["null"]=true;
            return return_GsoXAts;
        }
        return_GsoXAts=[&]() {
    json return_zcrinhs=json({});
    return serialize_VkImageCopy2KHR(*((VkImageCopy2KHR*)(name)));}();
return return_GsoXAts;}();
        return result;
        }
    

        json serialize_VkImageBlit2_pNext(const void* name){
        printf("Serializing VkImageBlit2...\n");
        json result;
        result=[&]() {
    json return_eYwZdrQ=json({});
    
        if (((VkImageBlit2*)(name))==NULL){
            return_eYwZdrQ["null"]=true;
            return return_eYwZdrQ;
        }
        return_eYwZdrQ=[&]() {
    json return_BDhwmtq=json({});
    return serialize_VkImageBlit2(*((VkImageBlit2*)(name)));}();
return return_eYwZdrQ;}();
        return result;
        }
    

        json serialize_VkImageBlit2KHR_pNext(const void* name){
        printf("Serializing VkImageBlit2KHR...\n");
        json result;
        result=[&]() {
    json return_JpsLRHF=json({});
    
        if (((VkImageBlit2KHR*)(name))==NULL){
            return_JpsLRHF["null"]=true;
            return return_JpsLRHF;
        }
        return_JpsLRHF=[&]() {
    json return_tylkazo=json({});
    return serialize_VkImageBlit2KHR(*((VkImageBlit2KHR*)(name)));}();
return return_JpsLRHF;}();
        return result;
        }
    

        json serialize_VkBufferImageCopy2_pNext(const void* name){
        printf("Serializing VkBufferImageCopy2...\n");
        json result;
        result=[&]() {
    json return_fUrDVlz=json({});
    
        if (((VkBufferImageCopy2*)(name))==NULL){
            return_fUrDVlz["null"]=true;
            return return_fUrDVlz;
        }
        return_fUrDVlz=[&]() {
    json return_NxtNpVp=json({});
    return serialize_VkBufferImageCopy2(*((VkBufferImageCopy2*)(name)));}();
return return_fUrDVlz;}();
        return result;
        }
    

        json serialize_VkBufferImageCopy2KHR_pNext(const void* name){
        printf("Serializing VkBufferImageCopy2KHR...\n");
        json result;
        result=[&]() {
    json return_gphLXNx=json({});
    
        if (((VkBufferImageCopy2KHR*)(name))==NULL){
            return_gphLXNx["null"]=true;
            return return_gphLXNx;
        }
        return_gphLXNx=[&]() {
    json return_zaXyeSE=json({});
    return serialize_VkBufferImageCopy2KHR(*((VkBufferImageCopy2KHR*)(name)));}();
return return_gphLXNx;}();
        return result;
        }
    

        json serialize_VkImageResolve2_pNext(const void* name){
        printf("Serializing VkImageResolve2...\n");
        json result;
        result=[&]() {
    json return_iflruup=json({});
    
        if (((VkImageResolve2*)(name))==NULL){
            return_iflruup["null"]=true;
            return return_iflruup;
        }
        return_iflruup=[&]() {
    json return_nOGTRZN=json({});
    return serialize_VkImageResolve2(*((VkImageResolve2*)(name)));}();
return return_iflruup;}();
        return result;
        }
    

        json serialize_VkImageResolve2KHR_pNext(const void* name){
        printf("Serializing VkImageResolve2KHR...\n");
        json result;
        result=[&]() {
    json return_uYAekha=json({});
    
        if (((VkImageResolve2KHR*)(name))==NULL){
            return_uYAekha["null"]=true;
            return return_uYAekha;
        }
        return_uYAekha=[&]() {
    json return_NNsrXbU=json({});
    return serialize_VkImageResolve2KHR(*((VkImageResolve2KHR*)(name)));}();
return return_uYAekha;}();
        return result;
        }
    

        json serialize_VkCopyBufferInfo2_pNext(const void* name){
        printf("Serializing VkCopyBufferInfo2...\n");
        json result;
        result=[&]() {
    json return_xcOOaoq=json({});
    
        if (((VkCopyBufferInfo2*)(name))==NULL){
            return_xcOOaoq["null"]=true;
            return return_xcOOaoq;
        }
        return_xcOOaoq=[&]() {
    json return_hOkMhln=json({});
    return serialize_VkCopyBufferInfo2(*((VkCopyBufferInfo2*)(name)));}();
return return_xcOOaoq;}();
        return result;
        }
    

        json serialize_VkCopyBufferInfo2KHR_pNext(const void* name){
        printf("Serializing VkCopyBufferInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_BKKJCGz=json({});
    
        if (((VkCopyBufferInfo2KHR*)(name))==NULL){
            return_BKKJCGz["null"]=true;
            return return_BKKJCGz;
        }
        return_BKKJCGz=[&]() {
    json return_ghqtnMV=json({});
    return serialize_VkCopyBufferInfo2KHR(*((VkCopyBufferInfo2KHR*)(name)));}();
return return_BKKJCGz;}();
        return result;
        }
    

        json serialize_VkCopyImageInfo2_pNext(const void* name){
        printf("Serializing VkCopyImageInfo2...\n");
        json result;
        result=[&]() {
    json return_BvWkWCz=json({});
    
        if (((VkCopyImageInfo2*)(name))==NULL){
            return_BvWkWCz["null"]=true;
            return return_BvWkWCz;
        }
        return_BvWkWCz=[&]() {
    json return_RUnUxmw=json({});
    return serialize_VkCopyImageInfo2(*((VkCopyImageInfo2*)(name)));}();
return return_BvWkWCz;}();
        return result;
        }
    

        json serialize_VkCopyImageInfo2KHR_pNext(const void* name){
        printf("Serializing VkCopyImageInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_IyAyOXJ=json({});
    
        if (((VkCopyImageInfo2KHR*)(name))==NULL){
            return_IyAyOXJ["null"]=true;
            return return_IyAyOXJ;
        }
        return_IyAyOXJ=[&]() {
    json return_deeZchK=json({});
    return serialize_VkCopyImageInfo2KHR(*((VkCopyImageInfo2KHR*)(name)));}();
return return_IyAyOXJ;}();
        return result;
        }
    

        json serialize_VkBlitImageInfo2_pNext(const void* name){
        printf("Serializing VkBlitImageInfo2...\n");
        json result;
        result=[&]() {
    json return_PqDbzbB=json({});
    
        if (((VkBlitImageInfo2*)(name))==NULL){
            return_PqDbzbB["null"]=true;
            return return_PqDbzbB;
        }
        return_PqDbzbB=[&]() {
    json return_apQtKth=json({});
    return serialize_VkBlitImageInfo2(*((VkBlitImageInfo2*)(name)));}();
return return_PqDbzbB;}();
        return result;
        }
    

        json serialize_VkBlitImageInfo2KHR_pNext(const void* name){
        printf("Serializing VkBlitImageInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_pXPmcNS=json({});
    
        if (((VkBlitImageInfo2KHR*)(name))==NULL){
            return_pXPmcNS["null"]=true;
            return return_pXPmcNS;
        }
        return_pXPmcNS=[&]() {
    json return_PZIaylw=json({});
    return serialize_VkBlitImageInfo2KHR(*((VkBlitImageInfo2KHR*)(name)));}();
return return_pXPmcNS;}();
        return result;
        }
    

        json serialize_VkCopyBufferToImageInfo2_pNext(const void* name){
        printf("Serializing VkCopyBufferToImageInfo2...\n");
        json result;
        result=[&]() {
    json return_uXjadNc=json({});
    
        if (((VkCopyBufferToImageInfo2*)(name))==NULL){
            return_uXjadNc["null"]=true;
            return return_uXjadNc;
        }
        return_uXjadNc=[&]() {
    json return_WQHgeUp=json({});
    return serialize_VkCopyBufferToImageInfo2(*((VkCopyBufferToImageInfo2*)(name)));}();
return return_uXjadNc;}();
        return result;
        }
    

        json serialize_VkCopyBufferToImageInfo2KHR_pNext(const void* name){
        printf("Serializing VkCopyBufferToImageInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_sJVzvAu=json({});
    
        if (((VkCopyBufferToImageInfo2KHR*)(name))==NULL){
            return_sJVzvAu["null"]=true;
            return return_sJVzvAu;
        }
        return_sJVzvAu=[&]() {
    json return_DPmEHKa=json({});
    return serialize_VkCopyBufferToImageInfo2KHR(*((VkCopyBufferToImageInfo2KHR*)(name)));}();
return return_sJVzvAu;}();
        return result;
        }
    

        json serialize_VkCopyImageToBufferInfo2_pNext(const void* name){
        printf("Serializing VkCopyImageToBufferInfo2...\n");
        json result;
        result=[&]() {
    json return_wlbtcpU=json({});
    
        if (((VkCopyImageToBufferInfo2*)(name))==NULL){
            return_wlbtcpU["null"]=true;
            return return_wlbtcpU;
        }
        return_wlbtcpU=[&]() {
    json return_SZFJGng=json({});
    return serialize_VkCopyImageToBufferInfo2(*((VkCopyImageToBufferInfo2*)(name)));}();
return return_wlbtcpU;}();
        return result;
        }
    

        json serialize_VkCopyImageToBufferInfo2KHR_pNext(const void* name){
        printf("Serializing VkCopyImageToBufferInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_DiEOGsG=json({});
    
        if (((VkCopyImageToBufferInfo2KHR*)(name))==NULL){
            return_DiEOGsG["null"]=true;
            return return_DiEOGsG;
        }
        return_DiEOGsG=[&]() {
    json return_qNGywCU=json({});
    return serialize_VkCopyImageToBufferInfo2KHR(*((VkCopyImageToBufferInfo2KHR*)(name)));}();
return return_DiEOGsG;}();
        return result;
        }
    

        json serialize_VkResolveImageInfo2_pNext(const void* name){
        printf("Serializing VkResolveImageInfo2...\n");
        json result;
        result=[&]() {
    json return_gJKZpEi=json({});
    
        if (((VkResolveImageInfo2*)(name))==NULL){
            return_gJKZpEi["null"]=true;
            return return_gJKZpEi;
        }
        return_gJKZpEi=[&]() {
    json return_qKVxezI=json({});
    return serialize_VkResolveImageInfo2(*((VkResolveImageInfo2*)(name)));}();
return return_gJKZpEi;}();
        return result;
        }
    

        json serialize_VkResolveImageInfo2KHR_pNext(const void* name){
        printf("Serializing VkResolveImageInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_odeYMgq=json({});
    
        if (((VkResolveImageInfo2KHR*)(name))==NULL){
            return_odeYMgq["null"]=true;
            return return_odeYMgq;
        }
        return_odeYMgq=[&]() {
    json return_CfTKRcD=json({});
    return serialize_VkResolveImageInfo2KHR(*((VkResolveImageInfo2KHR*)(name)));}();
return return_odeYMgq;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_atiuKUh=json({});
    
        if (((VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT*)(name))==NULL){
            return_atiuKUh["null"]=true;
            return return_atiuKUh;
        }
        return_atiuKUh=[&]() {
    json return_jrwdPkW=json({});
    return serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(*((VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT*)(name)));}();
return return_atiuKUh;}();
        return result;
        }
    

        json serialize_VkFragmentShadingRateAttachmentInfoKHR_pNext(const void* name){
        printf("Serializing VkFragmentShadingRateAttachmentInfoKHR...\n");
        json result;
        result=[&]() {
    json return_KQiBQrc=json({});
    
        if (((VkFragmentShadingRateAttachmentInfoKHR*)(name))==NULL){
            return_KQiBQrc["null"]=true;
            return return_KQiBQrc;
        }
        return_KQiBQrc=[&]() {
    json return_HgShXeA=json({});
    return serialize_VkFragmentShadingRateAttachmentInfoKHR(*((VkFragmentShadingRateAttachmentInfoKHR*)(name)));}();
return return_KQiBQrc;}();
        return result;
        }
    

        json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkPipelineFragmentShadingRateStateCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_BDWEciU=json({});
    
        if (((VkPipelineFragmentShadingRateStateCreateInfoKHR*)(name))==NULL){
            return_BDWEciU["null"]=true;
            return return_BDWEciU;
        }
        return_BDWEciU=[&]() {
    json return_hgWWIhd=json({});
    return serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(*((VkPipelineFragmentShadingRateStateCreateInfoKHR*)(name)));}();
return return_BDWEciU;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShadingRateFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_mhndaoI=json({});
    
        if (((VkPhysicalDeviceFragmentShadingRateFeaturesKHR*)(name))==NULL){
            return_mhndaoI["null"]=true;
            return return_mhndaoI;
        }
        return_mhndaoI=[&]() {
    json return_jSovcXc=json({});
    return serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(*((VkPhysicalDeviceFragmentShadingRateFeaturesKHR*)(name)));}();
return return_mhndaoI;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShadingRatePropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_EYOKWJG=json({});
    
        if (((VkPhysicalDeviceFragmentShadingRatePropertiesKHR*)(name))==NULL){
            return_EYOKWJG["null"]=true;
            return return_EYOKWJG;
        }
        return_EYOKWJG=[&]() {
    json return_sqAsuyz=json({});
    return serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(*((VkPhysicalDeviceFragmentShadingRatePropertiesKHR*)(name)));}();
return return_EYOKWJG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShadingRateKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShadingRateKHR...\n");
        json result;
        result=[&]() {
    json return_ilDAxyE=json({});
    
        if (((VkPhysicalDeviceFragmentShadingRateKHR*)(name))==NULL){
            return_ilDAxyE["null"]=true;
            return return_ilDAxyE;
        }
        return_ilDAxyE=[&]() {
    json return_hFcuhkd=json({});
    return serialize_VkPhysicalDeviceFragmentShadingRateKHR(*((VkPhysicalDeviceFragmentShadingRateKHR*)(name)));}();
return return_ilDAxyE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderTerminateInvocationFeatures...\n");
        json result;
        result=[&]() {
    json return_bEhzWfU=json({});
    
        if (((VkPhysicalDeviceShaderTerminateInvocationFeatures*)(name))==NULL){
            return_bEhzWfU["null"]=true;
            return return_bEhzWfU;
        }
        return_bEhzWfU=[&]() {
    json return_TsbtgIP=json({});
    return serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(*((VkPhysicalDeviceShaderTerminateInvocationFeatures*)(name)));}();
return return_bEhzWfU;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_uNiayVO=json({});
    
        if (((VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR*)(name))==NULL){
            return_uNiayVO["null"]=true;
            return return_uNiayVO;
        }
        return_uNiayVO=[&]() {
    json return_OkXqbgC=json({});
    return serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(*((VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR*)(name)));}();
return return_uNiayVO;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_ucBVQcG=json({});
    
        if (((VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV*)(name))==NULL){
            return_ucBVQcG["null"]=true;
            return return_ucBVQcG;
        }
        return_ucBVQcG=[&]() {
    json return_BlLjGse=json({});
    return serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(*((VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV*)(name)));}();
return return_ucBVQcG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_ntDGYvY=json({});
    
        if (((VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV*)(name))==NULL){
            return_ntDGYvY["null"]=true;
            return return_ntDGYvY;
        }
        return_ntDGYvY=[&]() {
    json return_lpkaxDt=json({});
    return serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(*((VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV*)(name)));}();
return return_ntDGYvY;}();
        return result;
        }
    

        json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV_pNext(const void* name){
        printf("Serializing VkPipelineFragmentShadingRateEnumStateCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_RepzFPB=json({});
    
        if (((VkPipelineFragmentShadingRateEnumStateCreateInfoNV*)(name))==NULL){
            return_RepzFPB["null"]=true;
            return return_RepzFPB;
        }
        return_RepzFPB=[&]() {
    json return_zVeHoNs=json({});
    return serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(*((VkPipelineFragmentShadingRateEnumStateCreateInfoNV*)(name)));}();
return return_RepzFPB;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureBuildSizesInfoKHR_pNext(const void* name){
        printf("Serializing VkAccelerationStructureBuildSizesInfoKHR...\n");
        json result;
        result=[&]() {
    json return_axEczGd=json({});
    
        if (((VkAccelerationStructureBuildSizesInfoKHR*)(name))==NULL){
            return_axEczGd["null"]=true;
            return return_axEczGd;
        }
        return_axEczGd=[&]() {
    json return_EOvgTNc=json({});
    return serialize_VkAccelerationStructureBuildSizesInfoKHR(*((VkAccelerationStructureBuildSizesInfoKHR*)(name)));}();
return return_axEczGd;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImage2DViewOf3DFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_rTspLBz=json({});
    
        if (((VkPhysicalDeviceImage2DViewOf3DFeaturesEXT*)(name))==NULL){
            return_rTspLBz["null"]=true;
            return return_rTspLBz;
        }
        return_rTspLBz=[&]() {
    json return_PtDKklt=json({});
    return serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(*((VkPhysicalDeviceImage2DViewOf3DFeaturesEXT*)(name)));}();
return return_rTspLBz;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_GkoQaGW=json({});
    
        if (((VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT*)(name))==NULL){
            return_GkoQaGW["null"]=true;
            return return_GkoQaGW;
        }
        return_GkoQaGW=[&]() {
    json return_MvEvOvw=json({});
    return serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(*((VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT*)(name)));}();
return return_GkoQaGW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_yVHpyWD=json({});
    
        if (((VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT*)(name))==NULL){
            return_yVHpyWD["null"]=true;
            return return_yVHpyWD;
        }
        return_yVHpyWD=[&]() {
    json return_gxTeNYd=json({});
    return serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(*((VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT*)(name)));}();
return return_yVHpyWD;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_jUOajBX=json({});
    
        if (((VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT*)(name))==NULL){
            return_jUOajBX["null"]=true;
            return return_jUOajBX;
        }
        return_jUOajBX=[&]() {
    json return_GksmiEj=json({});
    return serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(*((VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT*)(name)));}();
return return_jUOajBX;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE...\n");
        json result;
        result=[&]() {
    json return_kZcYXmL=json({});
    
        if (((VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE*)(name))==NULL){
            return_kZcYXmL["null"]=true;
            return return_kZcYXmL;
        }
        return_kZcYXmL=[&]() {
    json return_SJGqLcc=json({});
    return serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(*((VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE*)(name)));}();
return return_kZcYXmL;}();
        return result;
        }
    

        json serialize_VkMutableDescriptorTypeListEXT_pNext(const void* name){
        printf("Serializing VkMutableDescriptorTypeListEXT...\n");
        json result;
        result=[&]() {
    json return_cfGhWYP=json({});
    
        if (((VkMutableDescriptorTypeListEXT*)(name))==NULL){
            return_cfGhWYP["null"]=true;
            return return_cfGhWYP;
        }
        return_cfGhWYP=[&]() {
    json return_Hokngnx=json({});
    return serialize_VkMutableDescriptorTypeListEXT(*((VkMutableDescriptorTypeListEXT*)(name)));}();
return return_cfGhWYP;}();
        return result;
        }
    

        json serialize_VkMutableDescriptorTypeListVALVE_pNext(const void* name){
        printf("Serializing VkMutableDescriptorTypeListVALVE...\n");
        json result;
        result=[&]() {
    json return_KrybswL=json({});
    
        if (((VkMutableDescriptorTypeListVALVE*)(name))==NULL){
            return_KrybswL["null"]=true;
            return return_KrybswL;
        }
        return_KrybswL=[&]() {
    json return_yfzFbxK=json({});
    return serialize_VkMutableDescriptorTypeListVALVE(*((VkMutableDescriptorTypeListVALVE*)(name)));}();
return return_KrybswL;}();
        return result;
        }
    

        json serialize_VkMutableDescriptorTypeCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkMutableDescriptorTypeCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_NvlLoCx=json({});
    
        if (((VkMutableDescriptorTypeCreateInfoEXT*)(name))==NULL){
            return_NvlLoCx["null"]=true;
            return return_NvlLoCx;
        }
        return_NvlLoCx=[&]() {
    json return_KceHYCo=json({});
    return serialize_VkMutableDescriptorTypeCreateInfoEXT(*((VkMutableDescriptorTypeCreateInfoEXT*)(name)));}();
return return_NvlLoCx;}();
        return result;
        }
    

        json serialize_VkMutableDescriptorTypeCreateInfoVALVE_pNext(const void* name){
        printf("Serializing VkMutableDescriptorTypeCreateInfoVALVE...\n");
        json result;
        result=[&]() {
    json return_ykWPVZg=json({});
    
        if (((VkMutableDescriptorTypeCreateInfoVALVE*)(name))==NULL){
            return_ykWPVZg["null"]=true;
            return return_ykWPVZg;
        }
        return_ykWPVZg=[&]() {
    json return_UDTcsPZ=json({});
    return serialize_VkMutableDescriptorTypeCreateInfoVALVE(*((VkMutableDescriptorTypeCreateInfoVALVE*)(name)));}();
return return_ykWPVZg;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDepthClipControlFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_XnQnRmi=json({});
    
        if (((VkPhysicalDeviceDepthClipControlFeaturesEXT*)(name))==NULL){
            return_XnQnRmi["null"]=true;
            return return_XnQnRmi;
        }
        return_XnQnRmi=[&]() {
    json return_bRQCorm=json({});
    return serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(*((VkPhysicalDeviceDepthClipControlFeaturesEXT*)(name)));}();
return return_XnQnRmi;}();
        return result;
        }
    

        json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineViewportDepthClipControlCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_eEneJwj=json({});
    
        if (((VkPipelineViewportDepthClipControlCreateInfoEXT*)(name))==NULL){
            return_eEneJwj["null"]=true;
            return return_eEneJwj;
        }
        return_eEneJwj=[&]() {
    json return_pRMZVjH=json({});
    return serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(*((VkPipelineViewportDepthClipControlCreateInfoEXT*)(name)));}();
return return_eEneJwj;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_dfBBYDn=json({});
    
        if (((VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT*)(name))==NULL){
            return_dfBBYDn["null"]=true;
            return return_dfBBYDn;
        }
        return_dfBBYDn=[&]() {
    json return_jkaddos=json({});
    return serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(*((VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT*)(name)));}();
return return_dfBBYDn;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceExternalMemoryRDMAFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_EpLomzD=json({});
    
        if (((VkPhysicalDeviceExternalMemoryRDMAFeaturesNV*)(name))==NULL){
            return_EpLomzD["null"]=true;
            return return_EpLomzD;
        }
        return_EpLomzD=[&]() {
    json return_DhSujhJ=json({});
    return serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(*((VkPhysicalDeviceExternalMemoryRDMAFeaturesNV*)(name)));}();
return return_EpLomzD;}();
        return result;
        }
    

        json serialize_VkVertexInputBindingDescription2EXT_pNext(const void* name){
        printf("Serializing VkVertexInputBindingDescription2EXT...\n");
        json result;
        result=[&]() {
    json return_rHtpCrY=json({});
    
        if (((VkVertexInputBindingDescription2EXT*)(name))==NULL){
            return_rHtpCrY["null"]=true;
            return return_rHtpCrY;
        }
        return_rHtpCrY=[&]() {
    json return_DLgchDS=json({});
    return serialize_VkVertexInputBindingDescription2EXT(*((VkVertexInputBindingDescription2EXT*)(name)));}();
return return_rHtpCrY;}();
        return result;
        }
    

        json serialize_VkVertexInputAttributeDescription2EXT_pNext(const void* name){
        printf("Serializing VkVertexInputAttributeDescription2EXT...\n");
        json result;
        result=[&]() {
    json return_aphmeYL=json({});
    
        if (((VkVertexInputAttributeDescription2EXT*)(name))==NULL){
            return_aphmeYL["null"]=true;
            return return_aphmeYL;
        }
        return_aphmeYL=[&]() {
    json return_lAxZTRl=json({});
    return serialize_VkVertexInputAttributeDescription2EXT(*((VkVertexInputAttributeDescription2EXT*)(name)));}();
return return_aphmeYL;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceColorWriteEnableFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_mmiqIeM=json({});
    
        if (((VkPhysicalDeviceColorWriteEnableFeaturesEXT*)(name))==NULL){
            return_mmiqIeM["null"]=true;
            return return_mmiqIeM;
        }
        return_mmiqIeM=[&]() {
    json return_dUnuHRw=json({});
    return serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(*((VkPhysicalDeviceColorWriteEnableFeaturesEXT*)(name)));}();
return return_mmiqIeM;}();
        return result;
        }
    

        json serialize_VkPipelineColorWriteCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineColorWriteCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_uXaBBzW=json({});
    
        if (((VkPipelineColorWriteCreateInfoEXT*)(name))==NULL){
            return_uXaBBzW["null"]=true;
            return return_uXaBBzW;
        }
        return_uXaBBzW=[&]() {
    json return_olDbaWj=json({});
    return serialize_VkPipelineColorWriteCreateInfoEXT(*((VkPipelineColorWriteCreateInfoEXT*)(name)));}();
return return_uXaBBzW;}();
        return result;
        }
    

        json serialize_VkMemoryBarrier2_pNext(const void* name){
        printf("Serializing VkMemoryBarrier2...\n");
        json result;
        result=[&]() {
    json return_ffdCcgR=json({});
    
        if (((VkMemoryBarrier2*)(name))==NULL){
            return_ffdCcgR["null"]=true;
            return return_ffdCcgR;
        }
        return_ffdCcgR=[&]() {
    json return_VKoADRF=json({});
    return serialize_VkMemoryBarrier2(*((VkMemoryBarrier2*)(name)));}();
return return_ffdCcgR;}();
        return result;
        }
    

        json serialize_VkMemoryBarrier2KHR_pNext(const void* name){
        printf("Serializing VkMemoryBarrier2KHR...\n");
        json result;
        result=[&]() {
    json return_pSTCLZo=json({});
    
        if (((VkMemoryBarrier2KHR*)(name))==NULL){
            return_pSTCLZo["null"]=true;
            return return_pSTCLZo;
        }
        return_pSTCLZo=[&]() {
    json return_ngzdzHt=json({});
    return serialize_VkMemoryBarrier2KHR(*((VkMemoryBarrier2KHR*)(name)));}();
return return_pSTCLZo;}();
        return result;
        }
    

        json serialize_VkImageMemoryBarrier2_pNext(const void* name){
        printf("Serializing VkImageMemoryBarrier2...\n");
        json result;
        result=[&]() {
    json return_Naxsteq=json({});
    
        if (((VkImageMemoryBarrier2*)(name))==NULL){
            return_Naxsteq["null"]=true;
            return return_Naxsteq;
        }
        return_Naxsteq=[&]() {
    json return_LEogelH=json({});
    return serialize_VkImageMemoryBarrier2(*((VkImageMemoryBarrier2*)(name)));}();
return return_Naxsteq;}();
        return result;
        }
    

        json serialize_VkImageMemoryBarrier2KHR_pNext(const void* name){
        printf("Serializing VkImageMemoryBarrier2KHR...\n");
        json result;
        result=[&]() {
    json return_uLIOfUT=json({});
    
        if (((VkImageMemoryBarrier2KHR*)(name))==NULL){
            return_uLIOfUT["null"]=true;
            return return_uLIOfUT;
        }
        return_uLIOfUT=[&]() {
    json return_PwAlgHV=json({});
    return serialize_VkImageMemoryBarrier2KHR(*((VkImageMemoryBarrier2KHR*)(name)));}();
return return_uLIOfUT;}();
        return result;
        }
    

        json serialize_VkBufferMemoryBarrier2_pNext(const void* name){
        printf("Serializing VkBufferMemoryBarrier2...\n");
        json result;
        result=[&]() {
    json return_RqyVprJ=json({});
    
        if (((VkBufferMemoryBarrier2*)(name))==NULL){
            return_RqyVprJ["null"]=true;
            return return_RqyVprJ;
        }
        return_RqyVprJ=[&]() {
    json return_MKQBSzP=json({});
    return serialize_VkBufferMemoryBarrier2(*((VkBufferMemoryBarrier2*)(name)));}();
return return_RqyVprJ;}();
        return result;
        }
    

        json serialize_VkBufferMemoryBarrier2KHR_pNext(const void* name){
        printf("Serializing VkBufferMemoryBarrier2KHR...\n");
        json result;
        result=[&]() {
    json return_gpIEGNU=json({});
    
        if (((VkBufferMemoryBarrier2KHR*)(name))==NULL){
            return_gpIEGNU["null"]=true;
            return return_gpIEGNU;
        }
        return_gpIEGNU=[&]() {
    json return_ELImOPQ=json({});
    return serialize_VkBufferMemoryBarrier2KHR(*((VkBufferMemoryBarrier2KHR*)(name)));}();
return return_gpIEGNU;}();
        return result;
        }
    

        json serialize_VkDependencyInfo_pNext(const void* name){
        printf("Serializing VkDependencyInfo...\n");
        json result;
        result=[&]() {
    json return_JHUJwQv=json({});
    
        if (((VkDependencyInfo*)(name))==NULL){
            return_JHUJwQv["null"]=true;
            return return_JHUJwQv;
        }
        return_JHUJwQv=[&]() {
    json return_VKWEzbE=json({});
    return serialize_VkDependencyInfo(*((VkDependencyInfo*)(name)));}();
return return_JHUJwQv;}();
        return result;
        }
    

        json serialize_VkDependencyInfoKHR_pNext(const void* name){
        printf("Serializing VkDependencyInfoKHR...\n");
        json result;
        result=[&]() {
    json return_uWwSNDb=json({});
    
        if (((VkDependencyInfoKHR*)(name))==NULL){
            return_uWwSNDb["null"]=true;
            return return_uWwSNDb;
        }
        return_uWwSNDb=[&]() {
    json return_TsccgQP=json({});
    return serialize_VkDependencyInfoKHR(*((VkDependencyInfoKHR*)(name)));}();
return return_uWwSNDb;}();
        return result;
        }
    

        json serialize_VkSemaphoreSubmitInfo_pNext(const void* name){
        printf("Serializing VkSemaphoreSubmitInfo...\n");
        json result;
        result=[&]() {
    json return_isLEcFy=json({});
    
        if (((VkSemaphoreSubmitInfo*)(name))==NULL){
            return_isLEcFy["null"]=true;
            return return_isLEcFy;
        }
        return_isLEcFy=[&]() {
    json return_Hnsvwuf=json({});
    return serialize_VkSemaphoreSubmitInfo(*((VkSemaphoreSubmitInfo*)(name)));}();
return return_isLEcFy;}();
        return result;
        }
    

        json serialize_VkSemaphoreSubmitInfoKHR_pNext(const void* name){
        printf("Serializing VkSemaphoreSubmitInfoKHR...\n");
        json result;
        result=[&]() {
    json return_YcnSGVi=json({});
    
        if (((VkSemaphoreSubmitInfoKHR*)(name))==NULL){
            return_YcnSGVi["null"]=true;
            return return_YcnSGVi;
        }
        return_YcnSGVi=[&]() {
    json return_NXKxanG=json({});
    return serialize_VkSemaphoreSubmitInfoKHR(*((VkSemaphoreSubmitInfoKHR*)(name)));}();
return return_YcnSGVi;}();
        return result;
        }
    

        json serialize_VkCommandBufferSubmitInfo_pNext(const void* name){
        printf("Serializing VkCommandBufferSubmitInfo...\n");
        json result;
        result=[&]() {
    json return_mAPbqOY=json({});
    
        if (((VkCommandBufferSubmitInfo*)(name))==NULL){
            return_mAPbqOY["null"]=true;
            return return_mAPbqOY;
        }
        return_mAPbqOY=[&]() {
    json return_gFWZNyg=json({});
    return serialize_VkCommandBufferSubmitInfo(*((VkCommandBufferSubmitInfo*)(name)));}();
return return_mAPbqOY;}();
        return result;
        }
    

        json serialize_VkCommandBufferSubmitInfoKHR_pNext(const void* name){
        printf("Serializing VkCommandBufferSubmitInfoKHR...\n");
        json result;
        result=[&]() {
    json return_BJIGquM=json({});
    
        if (((VkCommandBufferSubmitInfoKHR*)(name))==NULL){
            return_BJIGquM["null"]=true;
            return return_BJIGquM;
        }
        return_BJIGquM=[&]() {
    json return_QlPzybY=json({});
    return serialize_VkCommandBufferSubmitInfoKHR(*((VkCommandBufferSubmitInfoKHR*)(name)));}();
return return_BJIGquM;}();
        return result;
        }
    

        json serialize_VkSubmitInfo2_pNext(const void* name){
        printf("Serializing VkSubmitInfo2...\n");
        json result;
        result=[&]() {
    json return_lcCnPRN=json({});
    
        if (((VkSubmitInfo2*)(name))==NULL){
            return_lcCnPRN["null"]=true;
            return return_lcCnPRN;
        }
        return_lcCnPRN=[&]() {
    json return_iaJaSuT=json({});
    return serialize_VkSubmitInfo2(*((VkSubmitInfo2*)(name)));}();
return return_lcCnPRN;}();
        return result;
        }
    

        json serialize_VkSubmitInfo2KHR_pNext(const void* name){
        printf("Serializing VkSubmitInfo2KHR...\n");
        json result;
        result=[&]() {
    json return_oDtXJXb=json({});
    
        if (((VkSubmitInfo2KHR*)(name))==NULL){
            return_oDtXJXb["null"]=true;
            return return_oDtXJXb;
        }
        return_oDtXJXb=[&]() {
    json return_qrcQmQD=json({});
    return serialize_VkSubmitInfo2KHR(*((VkSubmitInfo2KHR*)(name)));}();
return return_oDtXJXb;}();
        return result;
        }
    

        json serialize_VkQueueFamilyCheckpointProperties2NV_pNext(const void* name){
        printf("Serializing VkQueueFamilyCheckpointProperties2NV...\n");
        json result;
        result=[&]() {
    json return_dwQcxxw=json({});
    
        if (((VkQueueFamilyCheckpointProperties2NV*)(name))==NULL){
            return_dwQcxxw["null"]=true;
            return return_dwQcxxw;
        }
        return_dwQcxxw=[&]() {
    json return_NyVeFGP=json({});
    return serialize_VkQueueFamilyCheckpointProperties2NV(*((VkQueueFamilyCheckpointProperties2NV*)(name)));}();
return return_dwQcxxw;}();
        return result;
        }
    

        json serialize_VkCheckpointData2NV_pNext(const void* name){
        printf("Serializing VkCheckpointData2NV...\n");
        json result;
        result=[&]() {
    json return_btFDfbe=json({});
    
        if (((VkCheckpointData2NV*)(name))==NULL){
            return_btFDfbe["null"]=true;
            return return_btFDfbe;
        }
        return_btFDfbe=[&]() {
    json return_guOUTTt=json({});
    return serialize_VkCheckpointData2NV(*((VkCheckpointData2NV*)(name)));}();
return return_btFDfbe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSynchronization2Features_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSynchronization2Features...\n");
        json result;
        result=[&]() {
    json return_GekwtQH=json({});
    
        if (((VkPhysicalDeviceSynchronization2Features*)(name))==NULL){
            return_GekwtQH["null"]=true;
            return return_GekwtQH;
        }
        return_GekwtQH=[&]() {
    json return_gKTvyXh=json({});
    return serialize_VkPhysicalDeviceSynchronization2Features(*((VkPhysicalDeviceSynchronization2Features*)(name)));}();
return return_GekwtQH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSynchronization2FeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_atRdPGl=json({});
    
        if (((VkPhysicalDeviceSynchronization2FeaturesKHR*)(name))==NULL){
            return_atRdPGl["null"]=true;
            return return_atRdPGl;
        }
        return_atRdPGl=[&]() {
    json return_ZHQBVPH=json({});
    return serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(*((VkPhysicalDeviceSynchronization2FeaturesKHR*)(name)));}();
return return_atRdPGl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceHostImageCopyFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_KRvbHAc=json({});
    
        if (((VkPhysicalDeviceHostImageCopyFeaturesEXT*)(name))==NULL){
            return_KRvbHAc["null"]=true;
            return return_KRvbHAc;
        }
        return_KRvbHAc=[&]() {
    json return_HXQPtsa=json({});
    return serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(*((VkPhysicalDeviceHostImageCopyFeaturesEXT*)(name)));}();
return return_KRvbHAc;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceHostImageCopyPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_wUZXtTd=json({});
    
        if (((VkPhysicalDeviceHostImageCopyPropertiesEXT*)(name))==NULL){
            return_wUZXtTd["null"]=true;
            return return_wUZXtTd;
        }
        return_wUZXtTd=[&]() {
    json return_oRWSUeX=json({});
    return serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(*((VkPhysicalDeviceHostImageCopyPropertiesEXT*)(name)));}();
return return_wUZXtTd;}();
        return result;
        }
    

        json serialize_VkMemoryToImageCopyEXT_pNext(const void* name){
        printf("Serializing VkMemoryToImageCopyEXT...\n");
        json result;
        result=[&]() {
    json return_RuqTppw=json({});
    
        if (((VkMemoryToImageCopyEXT*)(name))==NULL){
            return_RuqTppw["null"]=true;
            return return_RuqTppw;
        }
        return_RuqTppw=[&]() {
    json return_bTFqwRt=json({});
    return serialize_VkMemoryToImageCopyEXT(*((VkMemoryToImageCopyEXT*)(name)));}();
return return_RuqTppw;}();
        return result;
        }
    

        json serialize_VkImageToMemoryCopyEXT_pNext(const void* name){
        printf("Serializing VkImageToMemoryCopyEXT...\n");
        json result;
        result=[&]() {
    json return_cHZPFye=json({});
    
        if (((VkImageToMemoryCopyEXT*)(name))==NULL){
            return_cHZPFye["null"]=true;
            return return_cHZPFye;
        }
        return_cHZPFye=[&]() {
    json return_TIiblAQ=json({});
    return serialize_VkImageToMemoryCopyEXT(*((VkImageToMemoryCopyEXT*)(name)));}();
return return_cHZPFye;}();
        return result;
        }
    

        json serialize_VkCopyMemoryToImageInfoEXT_pNext(const void* name){
        printf("Serializing VkCopyMemoryToImageInfoEXT...\n");
        json result;
        result=[&]() {
    json return_VLYFPxE=json({});
    
        if (((VkCopyMemoryToImageInfoEXT*)(name))==NULL){
            return_VLYFPxE["null"]=true;
            return return_VLYFPxE;
        }
        return_VLYFPxE=[&]() {
    json return_iMGepaP=json({});
    return serialize_VkCopyMemoryToImageInfoEXT(*((VkCopyMemoryToImageInfoEXT*)(name)));}();
return return_VLYFPxE;}();
        return result;
        }
    

        json serialize_VkCopyImageToMemoryInfoEXT_pNext(const void* name){
        printf("Serializing VkCopyImageToMemoryInfoEXT...\n");
        json result;
        result=[&]() {
    json return_RTOdzYm=json({});
    
        if (((VkCopyImageToMemoryInfoEXT*)(name))==NULL){
            return_RTOdzYm["null"]=true;
            return return_RTOdzYm;
        }
        return_RTOdzYm=[&]() {
    json return_jtDwlLl=json({});
    return serialize_VkCopyImageToMemoryInfoEXT(*((VkCopyImageToMemoryInfoEXT*)(name)));}();
return return_RTOdzYm;}();
        return result;
        }
    

        json serialize_VkCopyImageToImageInfoEXT_pNext(const void* name){
        printf("Serializing VkCopyImageToImageInfoEXT...\n");
        json result;
        result=[&]() {
    json return_nBEgXec=json({});
    
        if (((VkCopyImageToImageInfoEXT*)(name))==NULL){
            return_nBEgXec["null"]=true;
            return return_nBEgXec;
        }
        return_nBEgXec=[&]() {
    json return_elIIoTP=json({});
    return serialize_VkCopyImageToImageInfoEXT(*((VkCopyImageToImageInfoEXT*)(name)));}();
return return_nBEgXec;}();
        return result;
        }
    

        json serialize_VkHostImageLayoutTransitionInfoEXT_pNext(const void* name){
        printf("Serializing VkHostImageLayoutTransitionInfoEXT...\n");
        json result;
        result=[&]() {
    json return_oFIDeQB=json({});
    
        if (((VkHostImageLayoutTransitionInfoEXT*)(name))==NULL){
            return_oFIDeQB["null"]=true;
            return return_oFIDeQB;
        }
        return_oFIDeQB=[&]() {
    json return_GivhImN=json({});
    return serialize_VkHostImageLayoutTransitionInfoEXT(*((VkHostImageLayoutTransitionInfoEXT*)(name)));}();
return return_oFIDeQB;}();
        return result;
        }
    

        json serialize_VkSubresourceHostMemcpySizeEXT_pNext(const void* name){
        printf("Serializing VkSubresourceHostMemcpySizeEXT...\n");
        json result;
        result=[&]() {
    json return_KlYTnYw=json({});
    
        if (((VkSubresourceHostMemcpySizeEXT*)(name))==NULL){
            return_KlYTnYw["null"]=true;
            return return_KlYTnYw;
        }
        return_KlYTnYw=[&]() {
    json return_qWlJsny=json({});
    return serialize_VkSubresourceHostMemcpySizeEXT(*((VkSubresourceHostMemcpySizeEXT*)(name)));}();
return return_KlYTnYw;}();
        return result;
        }
    

        json serialize_VkHostImageCopyDevicePerformanceQueryEXT_pNext(const void* name){
        printf("Serializing VkHostImageCopyDevicePerformanceQueryEXT...\n");
        json result;
        result=[&]() {
    json return_gAETQEJ=json({});
    
        if (((VkHostImageCopyDevicePerformanceQueryEXT*)(name))==NULL){
            return_gAETQEJ["null"]=true;
            return return_gAETQEJ;
        }
        return_gAETQEJ=[&]() {
    json return_DOyHoxO=json({});
    return serialize_VkHostImageCopyDevicePerformanceQueryEXT(*((VkHostImageCopyDevicePerformanceQueryEXT*)(name)));}();
return return_gAETQEJ;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_ljwswdl=json({});
    
        if (((VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT*)(name))==NULL){
            return_ljwswdl["null"]=true;
            return return_ljwswdl;
        }
        return_ljwswdl=[&]() {
    json return_VEEnnEU=json({});
    return serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(*((VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT*)(name)));}();
return return_ljwswdl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceLegacyDitheringFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_CXwmLqD=json({});
    
        if (((VkPhysicalDeviceLegacyDitheringFeaturesEXT*)(name))==NULL){
            return_CXwmLqD["null"]=true;
            return return_CXwmLqD;
        }
        return_CXwmLqD=[&]() {
    json return_vCIXyvR=json({});
    return serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(*((VkPhysicalDeviceLegacyDitheringFeaturesEXT*)(name)));}();
return return_CXwmLqD;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_OeBvVOX=json({});
    
        if (((VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT*)(name))==NULL){
            return_OeBvVOX["null"]=true;
            return return_OeBvVOX;
        }
        return_OeBvVOX=[&]() {
    json return_rIGWFFu=json({});
    return serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(*((VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT*)(name)));}();
return return_OeBvVOX;}();
        return result;
        }
    

        json serialize_VkSubpassResolvePerformanceQueryEXT_pNext(const void* name){
        printf("Serializing VkSubpassResolvePerformanceQueryEXT...\n");
        json result;
        result=[&]() {
    json return_xuNLDhb=json({});
    
        if (((VkSubpassResolvePerformanceQueryEXT*)(name))==NULL){
            return_xuNLDhb["null"]=true;
            return return_xuNLDhb;
        }
        return_xuNLDhb=[&]() {
    json return_yziaYqE=json({});
    return serialize_VkSubpassResolvePerformanceQueryEXT(*((VkSubpassResolvePerformanceQueryEXT*)(name)));}();
return return_xuNLDhb;}();
        return result;
        }
    

        json serialize_VkMultisampledRenderToSingleSampledInfoEXT_pNext(const void* name){
        printf("Serializing VkMultisampledRenderToSingleSampledInfoEXT...\n");
        json result;
        result=[&]() {
    json return_rSLQwta=json({});
    
        if (((VkMultisampledRenderToSingleSampledInfoEXT*)(name))==NULL){
            return_rSLQwta["null"]=true;
            return return_rSLQwta;
        }
        return_rSLQwta=[&]() {
    json return_vhzMWjX=json({});
    return serialize_VkMultisampledRenderToSingleSampledInfoEXT(*((VkMultisampledRenderToSingleSampledInfoEXT*)(name)));}();
return return_rSLQwta;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelineProtectedAccessFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_OAjDGIi=json({});
    
        if (((VkPhysicalDevicePipelineProtectedAccessFeaturesEXT*)(name))==NULL){
            return_OAjDGIi["null"]=true;
            return return_OAjDGIi;
        }
        return_OAjDGIi=[&]() {
    json return_HriWVnq=json({});
    return serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(*((VkPhysicalDevicePipelineProtectedAccessFeaturesEXT*)(name)));}();
return return_OAjDGIi;}();
        return result;
        }
    

        json serialize_VkQueueFamilyVideoPropertiesKHR_pNext(const void* name){
        printf("Serializing VkQueueFamilyVideoPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_ibrdUWY=json({});
    
        if (((VkQueueFamilyVideoPropertiesKHR*)(name))==NULL){
            return_ibrdUWY["null"]=true;
            return return_ibrdUWY;
        }
        return_ibrdUWY=[&]() {
    json return_GcmrXoq=json({});
    return serialize_VkQueueFamilyVideoPropertiesKHR(*((VkQueueFamilyVideoPropertiesKHR*)(name)));}();
return return_ibrdUWY;}();
        return result;
        }
    

        json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR_pNext(const void* name){
        printf("Serializing VkQueueFamilyQueryResultStatusPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_FJZVmHU=json({});
    
        if (((VkQueueFamilyQueryResultStatusPropertiesKHR*)(name))==NULL){
            return_FJZVmHU["null"]=true;
            return return_FJZVmHU;
        }
        return_FJZVmHU=[&]() {
    json return_rWFVdds=json({});
    return serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(*((VkQueueFamilyQueryResultStatusPropertiesKHR*)(name)));}();
return return_FJZVmHU;}();
        return result;
        }
    

        json serialize_VkVideoProfileListInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoProfileListInfoKHR...\n");
        json result;
        result=[&]() {
    json return_hFFkOfp=json({});
    
        if (((VkVideoProfileListInfoKHR*)(name))==NULL){
            return_hFFkOfp["null"]=true;
            return return_hFFkOfp;
        }
        return_hFFkOfp=[&]() {
    json return_OlgdBhV=json({});
    return serialize_VkVideoProfileListInfoKHR(*((VkVideoProfileListInfoKHR*)(name)));}();
return return_hFFkOfp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceVideoFormatInfoKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceVideoFormatInfoKHR...\n");
        json result;
        result=[&]() {
    json return_IenbUwR=json({});
    
        if (((VkPhysicalDeviceVideoFormatInfoKHR*)(name))==NULL){
            return_IenbUwR["null"]=true;
            return return_IenbUwR;
        }
        return_IenbUwR=[&]() {
    json return_YTDbIAu=json({});
    return serialize_VkPhysicalDeviceVideoFormatInfoKHR(*((VkPhysicalDeviceVideoFormatInfoKHR*)(name)));}();
return return_IenbUwR;}();
        return result;
        }
    

        json serialize_VkVideoFormatPropertiesKHR_pNext(const void* name){
        printf("Serializing VkVideoFormatPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_WwBuRvv=json({});
    
        if (((VkVideoFormatPropertiesKHR*)(name))==NULL){
            return_WwBuRvv["null"]=true;
            return return_WwBuRvv;
        }
        return_WwBuRvv=[&]() {
    json return_svPlXoR=json({});
    return serialize_VkVideoFormatPropertiesKHR(*((VkVideoFormatPropertiesKHR*)(name)));}();
return return_WwBuRvv;}();
        return result;
        }
    

        json serialize_VkVideoProfileInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoProfileInfoKHR...\n");
        json result;
        result=[&]() {
    json return_RCKsOrJ=json({});
    
        if (((VkVideoProfileInfoKHR*)(name))==NULL){
            return_RCKsOrJ["null"]=true;
            return return_RCKsOrJ;
        }
        return_RCKsOrJ=[&]() {
    json return_ErmgfPT=json({});
    return serialize_VkVideoProfileInfoKHR(*((VkVideoProfileInfoKHR*)(name)));}();
return return_RCKsOrJ;}();
        return result;
        }
    

        json serialize_VkVideoCapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkVideoCapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_yPixyzG=json({});
    
        if (((VkVideoCapabilitiesKHR*)(name))==NULL){
            return_yPixyzG["null"]=true;
            return return_yPixyzG;
        }
        return_yPixyzG=[&]() {
    json return_bLTWYLw=json({});
    return serialize_VkVideoCapabilitiesKHR(*((VkVideoCapabilitiesKHR*)(name)));}();
return return_yPixyzG;}();
        return result;
        }
    

        json serialize_VkVideoSessionMemoryRequirementsKHR_pNext(const void* name){
        printf("Serializing VkVideoSessionMemoryRequirementsKHR...\n");
        json result;
        result=[&]() {
    json return_cQsdTjt=json({});
    
        if (((VkVideoSessionMemoryRequirementsKHR*)(name))==NULL){
            return_cQsdTjt["null"]=true;
            return return_cQsdTjt;
        }
        return_cQsdTjt=[&]() {
    json return_gMViUiN=json({});
    return serialize_VkVideoSessionMemoryRequirementsKHR(*((VkVideoSessionMemoryRequirementsKHR*)(name)));}();
return return_cQsdTjt;}();
        return result;
        }
    

        json serialize_VkBindVideoSessionMemoryInfoKHR_pNext(const void* name){
        printf("Serializing VkBindVideoSessionMemoryInfoKHR...\n");
        json result;
        result=[&]() {
    json return_CmwYuhK=json({});
    
        if (((VkBindVideoSessionMemoryInfoKHR*)(name))==NULL){
            return_CmwYuhK["null"]=true;
            return return_CmwYuhK;
        }
        return_CmwYuhK=[&]() {
    json return_kWWsGJH=json({});
    return serialize_VkBindVideoSessionMemoryInfoKHR(*((VkBindVideoSessionMemoryInfoKHR*)(name)));}();
return return_CmwYuhK;}();
        return result;
        }
    

        json serialize_VkVideoPictureResourceInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoPictureResourceInfoKHR...\n");
        json result;
        result=[&]() {
    json return_qxPelVs=json({});
    
        if (((VkVideoPictureResourceInfoKHR*)(name))==NULL){
            return_qxPelVs["null"]=true;
            return return_qxPelVs;
        }
        return_qxPelVs=[&]() {
    json return_pQEQyEb=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*((VkVideoPictureResourceInfoKHR*)(name)));}();
return return_qxPelVs;}();
        return result;
        }
    

        json serialize_VkVideoReferenceSlotInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoReferenceSlotInfoKHR...\n");
        json result;
        result=[&]() {
    json return_BtKsIgI=json({});
    
        if (((VkVideoReferenceSlotInfoKHR*)(name))==NULL){
            return_BtKsIgI["null"]=true;
            return return_BtKsIgI;
        }
        return_BtKsIgI=[&]() {
    json return_epBCkLz=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*((VkVideoReferenceSlotInfoKHR*)(name)));}();
return return_BtKsIgI;}();
        return result;
        }
    

        json serialize_VkVideoDecodeCapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeCapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_GIBITmI=json({});
    
        if (((VkVideoDecodeCapabilitiesKHR*)(name))==NULL){
            return_GIBITmI["null"]=true;
            return return_GIBITmI;
        }
        return_GIBITmI=[&]() {
    json return_HivSnuC=json({});
    return serialize_VkVideoDecodeCapabilitiesKHR(*((VkVideoDecodeCapabilitiesKHR*)(name)));}();
return return_GIBITmI;}();
        return result;
        }
    

        json serialize_VkVideoDecodeUsageInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeUsageInfoKHR...\n");
        json result;
        result=[&]() {
    json return_HdRJNjn=json({});
    
        if (((VkVideoDecodeUsageInfoKHR*)(name))==NULL){
            return_HdRJNjn["null"]=true;
            return return_HdRJNjn;
        }
        return_HdRJNjn=[&]() {
    json return_bXCGymL=json({});
    return serialize_VkVideoDecodeUsageInfoKHR(*((VkVideoDecodeUsageInfoKHR*)(name)));}();
return return_HdRJNjn;}();
        return result;
        }
    

        json serialize_VkVideoDecodeInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeInfoKHR...\n");
        json result;
        result=[&]() {
    json return_qEZkcHq=json({});
    
        if (((VkVideoDecodeInfoKHR*)(name))==NULL){
            return_qEZkcHq["null"]=true;
            return return_qEZkcHq;
        }
        return_qEZkcHq=[&]() {
    json return_ymglTRq=json({});
    return serialize_VkVideoDecodeInfoKHR(*((VkVideoDecodeInfoKHR*)(name)));}();
return return_qEZkcHq;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH264ProfileInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH264ProfileInfoKHR...\n");
        json result;
        result=[&]() {
    json return_tQWPXfQ=json({});
    
        if (((VkVideoDecodeH264ProfileInfoKHR*)(name))==NULL){
            return_tQWPXfQ["null"]=true;
            return return_tQWPXfQ;
        }
        return_tQWPXfQ=[&]() {
    json return_QHcurAr=json({});
    return serialize_VkVideoDecodeH264ProfileInfoKHR(*((VkVideoDecodeH264ProfileInfoKHR*)(name)));}();
return return_tQWPXfQ;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH264CapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH264CapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_KUQiIyc=json({});
    
        if (((VkVideoDecodeH264CapabilitiesKHR*)(name))==NULL){
            return_KUQiIyc["null"]=true;
            return return_KUQiIyc;
        }
        return_KUQiIyc=[&]() {
    json return_QFcIYfO=json({});
    return serialize_VkVideoDecodeH264CapabilitiesKHR(*((VkVideoDecodeH264CapabilitiesKHR*)(name)));}();
return return_KUQiIyc;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH264SessionParametersAddInfoKHR...\n");
        json result;
        result=[&]() {
    json return_rYjkBiv=json({});
    
        if (((VkVideoDecodeH264SessionParametersAddInfoKHR*)(name))==NULL){
            return_rYjkBiv["null"]=true;
            return return_rYjkBiv;
        }
        return_rYjkBiv=[&]() {
    json return_dskLKYR=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*((VkVideoDecodeH264SessionParametersAddInfoKHR*)(name)));}();
return return_rYjkBiv;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH264SessionParametersCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_dnctEoK=json({});
    
        if (((VkVideoDecodeH264SessionParametersCreateInfoKHR*)(name))==NULL){
            return_dnctEoK["null"]=true;
            return return_dnctEoK;
        }
        return_dnctEoK=[&]() {
    json return_WhsWMWZ=json({});
    return serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(*((VkVideoDecodeH264SessionParametersCreateInfoKHR*)(name)));}();
return return_dnctEoK;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH264PictureInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH264PictureInfoKHR...\n");
        json result;
        result=[&]() {
    json return_ZOxAtUr=json({});
    
        if (((VkVideoDecodeH264PictureInfoKHR*)(name))==NULL){
            return_ZOxAtUr["null"]=true;
            return return_ZOxAtUr;
        }
        return_ZOxAtUr=[&]() {
    json return_MeLTmPd=json({});
    return serialize_VkVideoDecodeH264PictureInfoKHR(*((VkVideoDecodeH264PictureInfoKHR*)(name)));}();
return return_ZOxAtUr;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH264DpbSlotInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH264DpbSlotInfoKHR...\n");
        json result;
        result=[&]() {
    json return_cvRhyoP=json({});
    
        if (((VkVideoDecodeH264DpbSlotInfoKHR*)(name))==NULL){
            return_cvRhyoP["null"]=true;
            return return_cvRhyoP;
        }
        return_cvRhyoP=[&]() {
    json return_dOerqQF=json({});
    return serialize_VkVideoDecodeH264DpbSlotInfoKHR(*((VkVideoDecodeH264DpbSlotInfoKHR*)(name)));}();
return return_cvRhyoP;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH265ProfileInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH265ProfileInfoKHR...\n");
        json result;
        result=[&]() {
    json return_RezBJhZ=json({});
    
        if (((VkVideoDecodeH265ProfileInfoKHR*)(name))==NULL){
            return_RezBJhZ["null"]=true;
            return return_RezBJhZ;
        }
        return_RezBJhZ=[&]() {
    json return_DREuQTy=json({});
    return serialize_VkVideoDecodeH265ProfileInfoKHR(*((VkVideoDecodeH265ProfileInfoKHR*)(name)));}();
return return_RezBJhZ;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH265CapabilitiesKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH265CapabilitiesKHR...\n");
        json result;
        result=[&]() {
    json return_qHrMWON=json({});
    
        if (((VkVideoDecodeH265CapabilitiesKHR*)(name))==NULL){
            return_qHrMWON["null"]=true;
            return return_qHrMWON;
        }
        return_qHrMWON=[&]() {
    json return_hxheDbJ=json({});
    return serialize_VkVideoDecodeH265CapabilitiesKHR(*((VkVideoDecodeH265CapabilitiesKHR*)(name)));}();
return return_qHrMWON;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH265SessionParametersAddInfoKHR...\n");
        json result;
        result=[&]() {
    json return_pYtrRhg=json({});
    
        if (((VkVideoDecodeH265SessionParametersAddInfoKHR*)(name))==NULL){
            return_pYtrRhg["null"]=true;
            return return_pYtrRhg;
        }
        return_pYtrRhg=[&]() {
    json return_LoCLhQy=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*((VkVideoDecodeH265SessionParametersAddInfoKHR*)(name)));}();
return return_pYtrRhg;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH265SessionParametersCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_FczLngM=json({});
    
        if (((VkVideoDecodeH265SessionParametersCreateInfoKHR*)(name))==NULL){
            return_FczLngM["null"]=true;
            return return_FczLngM;
        }
        return_FczLngM=[&]() {
    json return_sTMOeOV=json({});
    return serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(*((VkVideoDecodeH265SessionParametersCreateInfoKHR*)(name)));}();
return return_FczLngM;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH265PictureInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH265PictureInfoKHR...\n");
        json result;
        result=[&]() {
    json return_IGxDWUS=json({});
    
        if (((VkVideoDecodeH265PictureInfoKHR*)(name))==NULL){
            return_IGxDWUS["null"]=true;
            return return_IGxDWUS;
        }
        return_IGxDWUS=[&]() {
    json return_jWriLDk=json({});
    return serialize_VkVideoDecodeH265PictureInfoKHR(*((VkVideoDecodeH265PictureInfoKHR*)(name)));}();
return return_IGxDWUS;}();
        return result;
        }
    

        json serialize_VkVideoDecodeH265DpbSlotInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoDecodeH265DpbSlotInfoKHR...\n");
        json result;
        result=[&]() {
    json return_MIqbRPa=json({});
    
        if (((VkVideoDecodeH265DpbSlotInfoKHR*)(name))==NULL){
            return_MIqbRPa["null"]=true;
            return return_MIqbRPa;
        }
        return_MIqbRPa=[&]() {
    json return_xkfkeJZ=json({});
    return serialize_VkVideoDecodeH265DpbSlotInfoKHR(*((VkVideoDecodeH265DpbSlotInfoKHR*)(name)));}();
return return_MIqbRPa;}();
        return result;
        }
    

        json serialize_VkVideoSessionCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoSessionCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_exEJcXg=json({});
    
        if (((VkVideoSessionCreateInfoKHR*)(name))==NULL){
            return_exEJcXg["null"]=true;
            return return_exEJcXg;
        }
        return_exEJcXg=[&]() {
    json return_OwdiDBE=json({});
    return serialize_VkVideoSessionCreateInfoKHR(*((VkVideoSessionCreateInfoKHR*)(name)));}();
return return_exEJcXg;}();
        return result;
        }
    

        json serialize_VkVideoSessionParametersCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoSessionParametersCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_jyImIDt=json({});
    
        if (((VkVideoSessionParametersCreateInfoKHR*)(name))==NULL){
            return_jyImIDt["null"]=true;
            return return_jyImIDt;
        }
        return_jyImIDt=[&]() {
    json return_gigMjyj=json({});
    return serialize_VkVideoSessionParametersCreateInfoKHR(*((VkVideoSessionParametersCreateInfoKHR*)(name)));}();
return return_jyImIDt;}();
        return result;
        }
    

        json serialize_VkVideoSessionParametersUpdateInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoSessionParametersUpdateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_uQAgFYn=json({});
    
        if (((VkVideoSessionParametersUpdateInfoKHR*)(name))==NULL){
            return_uQAgFYn["null"]=true;
            return return_uQAgFYn;
        }
        return_uQAgFYn=[&]() {
    json return_IWRbKIM=json({});
    return serialize_VkVideoSessionParametersUpdateInfoKHR(*((VkVideoSessionParametersUpdateInfoKHR*)(name)));}();
return return_uQAgFYn;}();
        return result;
        }
    

        json serialize_VkVideoBeginCodingInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoBeginCodingInfoKHR...\n");
        json result;
        result=[&]() {
    json return_yWlSxEr=json({});
    
        if (((VkVideoBeginCodingInfoKHR*)(name))==NULL){
            return_yWlSxEr["null"]=true;
            return return_yWlSxEr;
        }
        return_yWlSxEr=[&]() {
    json return_FAwyXQD=json({});
    return serialize_VkVideoBeginCodingInfoKHR(*((VkVideoBeginCodingInfoKHR*)(name)));}();
return return_yWlSxEr;}();
        return result;
        }
    

        json serialize_VkVideoEndCodingInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoEndCodingInfoKHR...\n");
        json result;
        result=[&]() {
    json return_LLvlCtv=json({});
    
        if (((VkVideoEndCodingInfoKHR*)(name))==NULL){
            return_LLvlCtv["null"]=true;
            return return_LLvlCtv;
        }
        return_LLvlCtv=[&]() {
    json return_PsRPbDF=json({});
    return serialize_VkVideoEndCodingInfoKHR(*((VkVideoEndCodingInfoKHR*)(name)));}();
return return_LLvlCtv;}();
        return result;
        }
    

        json serialize_VkVideoCodingControlInfoKHR_pNext(const void* name){
        printf("Serializing VkVideoCodingControlInfoKHR...\n");
        json result;
        result=[&]() {
    json return_ovZgTGe=json({});
    
        if (((VkVideoCodingControlInfoKHR*)(name))==NULL){
            return_ovZgTGe["null"]=true;
            return return_ovZgTGe;
        }
        return_ovZgTGe=[&]() {
    json return_DHyYlik=json({});
    return serialize_VkVideoCodingControlInfoKHR(*((VkVideoCodingControlInfoKHR*)(name)));}();
return return_ovZgTGe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceInheritedViewportScissorFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_yFEnvXt=json({});
    
        if (((VkPhysicalDeviceInheritedViewportScissorFeaturesNV*)(name))==NULL){
            return_yFEnvXt["null"]=true;
            return return_yFEnvXt;
        }
        return_yFEnvXt=[&]() {
    json return_yFzPlPB=json({});
    return serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(*((VkPhysicalDeviceInheritedViewportScissorFeaturesNV*)(name)));}();
return return_yFEnvXt;}();
        return result;
        }
    

        json serialize_VkCommandBufferInheritanceViewportScissorInfoNV_pNext(const void* name){
        printf("Serializing VkCommandBufferInheritanceViewportScissorInfoNV...\n");
        json result;
        result=[&]() {
    json return_MnMMyoe=json({});
    
        if (((VkCommandBufferInheritanceViewportScissorInfoNV*)(name))==NULL){
            return_MnMMyoe["null"]=true;
            return return_MnMMyoe;
        }
        return_MnMMyoe=[&]() {
    json return_oyVxOOy=json({});
    return serialize_VkCommandBufferInheritanceViewportScissorInfoNV(*((VkCommandBufferInheritanceViewportScissorInfoNV*)(name)));}();
return return_MnMMyoe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_qQIYIgr=json({});
    
        if (((VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT*)(name))==NULL){
            return_qQIYIgr["null"]=true;
            return return_qQIYIgr;
        }
        return_qQIYIgr=[&]() {
    json return_VwANWmZ=json({});
    return serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(*((VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT*)(name)));}();
return return_qQIYIgr;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceProvokingVertexFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_TLIgvgU=json({});
    
        if (((VkPhysicalDeviceProvokingVertexFeaturesEXT*)(name))==NULL){
            return_TLIgvgU["null"]=true;
            return return_TLIgvgU;
        }
        return_TLIgvgU=[&]() {
    json return_RSCMNsW=json({});
    return serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(*((VkPhysicalDeviceProvokingVertexFeaturesEXT*)(name)));}();
return return_TLIgvgU;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceProvokingVertexPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_rnOzTIR=json({});
    
        if (((VkPhysicalDeviceProvokingVertexPropertiesEXT*)(name))==NULL){
            return_rnOzTIR["null"]=true;
            return return_rnOzTIR;
        }
        return_rnOzTIR=[&]() {
    json return_HMCxrrK=json({});
    return serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(*((VkPhysicalDeviceProvokingVertexPropertiesEXT*)(name)));}();
return return_rnOzTIR;}();
        return result;
        }
    

        json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineRasterizationProvokingVertexStateCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_bSqpZaW=json({});
    
        if (((VkPipelineRasterizationProvokingVertexStateCreateInfoEXT*)(name))==NULL){
            return_bSqpZaW["null"]=true;
            return return_bSqpZaW;
        }
        return_bSqpZaW=[&]() {
    json return_KsWTDRC=json({});
    return serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(*((VkPipelineRasterizationProvokingVertexStateCreateInfoEXT*)(name)));}();
return return_bSqpZaW;}();
        return result;
        }
    

        json serialize_VkCuModuleCreateInfoNVX_pNext(const void* name){
        printf("Serializing VkCuModuleCreateInfoNVX...\n");
        json result;
        result=[&]() {
    json return_DkDUUZz=json({});
    
        if (((VkCuModuleCreateInfoNVX*)(name))==NULL){
            return_DkDUUZz["null"]=true;
            return return_DkDUUZz;
        }
        return_DkDUUZz=[&]() {
    json return_AhcDmYc=json({});
    return serialize_VkCuModuleCreateInfoNVX(*((VkCuModuleCreateInfoNVX*)(name)));}();
return return_DkDUUZz;}();
        return result;
        }
    

        json serialize_VkCuFunctionCreateInfoNVX_pNext(const void* name){
        printf("Serializing VkCuFunctionCreateInfoNVX...\n");
        json result;
        result=[&]() {
    json return_RdRqCdJ=json({});
    
        if (((VkCuFunctionCreateInfoNVX*)(name))==NULL){
            return_RdRqCdJ["null"]=true;
            return return_RdRqCdJ;
        }
        return_RdRqCdJ=[&]() {
    json return_NFMnPAs=json({});
    return serialize_VkCuFunctionCreateInfoNVX(*((VkCuFunctionCreateInfoNVX*)(name)));}();
return return_RdRqCdJ;}();
        return result;
        }
    

        json serialize_VkCuLaunchInfoNVX_pNext(const void* name){
        printf("Serializing VkCuLaunchInfoNVX...\n");
        json result;
        result=[&]() {
    json return_kIowffr=json({});
    
        if (((VkCuLaunchInfoNVX*)(name))==NULL){
            return_kIowffr["null"]=true;
            return return_kIowffr;
        }
        return_kIowffr=[&]() {
    json return_XuYkmjQ=json({});
    return serialize_VkCuLaunchInfoNVX(*((VkCuLaunchInfoNVX*)(name)));}();
return return_kIowffr;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorBufferFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_pbukgay=json({});
    
        if (((VkPhysicalDeviceDescriptorBufferFeaturesEXT*)(name))==NULL){
            return_pbukgay["null"]=true;
            return return_pbukgay;
        }
        return_pbukgay=[&]() {
    json return_QhLoIwn=json({});
    return serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(*((VkPhysicalDeviceDescriptorBufferFeaturesEXT*)(name)));}();
return return_pbukgay;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorBufferPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_tmffuJF=json({});
    
        if (((VkPhysicalDeviceDescriptorBufferPropertiesEXT*)(name))==NULL){
            return_tmffuJF["null"]=true;
            return return_tmffuJF;
        }
        return_tmffuJF=[&]() {
    json return_JPlYMsN=json({});
    return serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(*((VkPhysicalDeviceDescriptorBufferPropertiesEXT*)(name)));}();
return return_tmffuJF;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_cZakzyI=json({});
    
        if (((VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT*)(name))==NULL){
            return_cZakzyI["null"]=true;
            return return_cZakzyI;
        }
        return_cZakzyI=[&]() {
    json return_velXnSp=json({});
    return serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(*((VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT*)(name)));}();
return return_cZakzyI;}();
        return result;
        }
    

        json serialize_VkDescriptorAddressInfoEXT_pNext(const void* name){
        printf("Serializing VkDescriptorAddressInfoEXT...\n");
        json result;
        result=[&]() {
    json return_SYoPshx=json({});
    
        if (((VkDescriptorAddressInfoEXT*)(name))==NULL){
            return_SYoPshx["null"]=true;
            return return_SYoPshx;
        }
        return_SYoPshx=[&]() {
    json return_CMyAcSm=json({});
    return serialize_VkDescriptorAddressInfoEXT(*((VkDescriptorAddressInfoEXT*)(name)));}();
return return_SYoPshx;}();
        return result;
        }
    

        json serialize_VkDescriptorBufferBindingInfoEXT_pNext(const void* name){
        printf("Serializing VkDescriptorBufferBindingInfoEXT...\n");
        json result;
        result=[&]() {
    json return_QLIGgQN=json({});
    
        if (((VkDescriptorBufferBindingInfoEXT*)(name))==NULL){
            return_QLIGgQN["null"]=true;
            return return_QLIGgQN;
        }
        return_QLIGgQN=[&]() {
    json return_fIwxQNy=json({});
    return serialize_VkDescriptorBufferBindingInfoEXT(*((VkDescriptorBufferBindingInfoEXT*)(name)));}();
return return_QLIGgQN;}();
        return result;
        }
    

        json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT_pNext(const void* name){
        printf("Serializing VkDescriptorBufferBindingPushDescriptorBufferHandleEXT...\n");
        json result;
        result=[&]() {
    json return_YKyaAjn=json({});
    
        if (((VkDescriptorBufferBindingPushDescriptorBufferHandleEXT*)(name))==NULL){
            return_YKyaAjn["null"]=true;
            return return_YKyaAjn;
        }
        return_YKyaAjn=[&]() {
    json return_eIzfHLh=json({});
    return serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(*((VkDescriptorBufferBindingPushDescriptorBufferHandleEXT*)(name)));}();
return return_YKyaAjn;}();
        return result;
        }
    

        json serialize_VkDescriptorDataEXT_pNext(const void* name){
        printf("Serializing VkDescriptorDataEXT...\n");
        json result;
        result=[&]() {
    json return_yYImJlL=json({});
    
        if (((VkDescriptorDataEXT*)(name))==NULL){
            return_yYImJlL["null"]=true;
            return return_yYImJlL;
        }
        return_yYImJlL=[&]() {
    json return_qLGlwPc=json({});
    return serialize_VkDescriptorDataEXT(*((VkDescriptorDataEXT*)(name)));}();
return return_yYImJlL;}();
        return result;
        }
    

        json serialize_VkDescriptorGetInfoEXT_pNext(const void* name){
        printf("Serializing VkDescriptorGetInfoEXT...\n");
        json result;
        result=[&]() {
    json return_RvOxZul=json({});
    
        if (((VkDescriptorGetInfoEXT*)(name))==NULL){
            return_RvOxZul["null"]=true;
            return return_RvOxZul;
        }
        return_RvOxZul=[&]() {
    json return_LvibyFp=json({});
    return serialize_VkDescriptorGetInfoEXT(*((VkDescriptorGetInfoEXT*)(name)));}();
return return_RvOxZul;}();
        return result;
        }
    

        json serialize_VkBufferCaptureDescriptorDataInfoEXT_pNext(const void* name){
        printf("Serializing VkBufferCaptureDescriptorDataInfoEXT...\n");
        json result;
        result=[&]() {
    json return_iEJFnQM=json({});
    
        if (((VkBufferCaptureDescriptorDataInfoEXT*)(name))==NULL){
            return_iEJFnQM["null"]=true;
            return return_iEJFnQM;
        }
        return_iEJFnQM=[&]() {
    json return_zHfCadb=json({});
    return serialize_VkBufferCaptureDescriptorDataInfoEXT(*((VkBufferCaptureDescriptorDataInfoEXT*)(name)));}();
return return_iEJFnQM;}();
        return result;
        }
    

        json serialize_VkImageCaptureDescriptorDataInfoEXT_pNext(const void* name){
        printf("Serializing VkImageCaptureDescriptorDataInfoEXT...\n");
        json result;
        result=[&]() {
    json return_iFwHHax=json({});
    
        if (((VkImageCaptureDescriptorDataInfoEXT*)(name))==NULL){
            return_iFwHHax["null"]=true;
            return return_iFwHHax;
        }
        return_iFwHHax=[&]() {
    json return_FFdltSo=json({});
    return serialize_VkImageCaptureDescriptorDataInfoEXT(*((VkImageCaptureDescriptorDataInfoEXT*)(name)));}();
return return_iFwHHax;}();
        return result;
        }
    

        json serialize_VkImageViewCaptureDescriptorDataInfoEXT_pNext(const void* name){
        printf("Serializing VkImageViewCaptureDescriptorDataInfoEXT...\n");
        json result;
        result=[&]() {
    json return_uOpjrin=json({});
    
        if (((VkImageViewCaptureDescriptorDataInfoEXT*)(name))==NULL){
            return_uOpjrin["null"]=true;
            return return_uOpjrin;
        }
        return_uOpjrin=[&]() {
    json return_DjZpAIt=json({});
    return serialize_VkImageViewCaptureDescriptorDataInfoEXT(*((VkImageViewCaptureDescriptorDataInfoEXT*)(name)));}();
return return_uOpjrin;}();
        return result;
        }
    

        json serialize_VkSamplerCaptureDescriptorDataInfoEXT_pNext(const void* name){
        printf("Serializing VkSamplerCaptureDescriptorDataInfoEXT...\n");
        json result;
        result=[&]() {
    json return_HbOmkvC=json({});
    
        if (((VkSamplerCaptureDescriptorDataInfoEXT*)(name))==NULL){
            return_HbOmkvC["null"]=true;
            return return_HbOmkvC;
        }
        return_HbOmkvC=[&]() {
    json return_DVOJATN=json({});
    return serialize_VkSamplerCaptureDescriptorDataInfoEXT(*((VkSamplerCaptureDescriptorDataInfoEXT*)(name)));}();
return return_HbOmkvC;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT_pNext(const void* name){
        printf("Serializing VkAccelerationStructureCaptureDescriptorDataInfoEXT...\n");
        json result;
        result=[&]() {
    json return_gIsZbtn=json({});
    
        if (((VkAccelerationStructureCaptureDescriptorDataInfoEXT*)(name))==NULL){
            return_gIsZbtn["null"]=true;
            return return_gIsZbtn;
        }
        return_gIsZbtn=[&]() {
    json return_WXAShzE=json({});
    return serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(*((VkAccelerationStructureCaptureDescriptorDataInfoEXT*)(name)));}();
return return_gIsZbtn;}();
        return result;
        }
    

        json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkOpaqueCaptureDescriptorDataCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_yCmSRGt=json({});
    
        if (((VkOpaqueCaptureDescriptorDataCreateInfoEXT*)(name))==NULL){
            return_yCmSRGt["null"]=true;
            return return_yCmSRGt;
        }
        return_yCmSRGt=[&]() {
    json return_koXaElE=json({});
    return serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(*((VkOpaqueCaptureDescriptorDataCreateInfoEXT*)(name)));}();
return return_yCmSRGt;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderIntegerDotProductFeatures...\n");
        json result;
        result=[&]() {
    json return_gePiqMb=json({});
    
        if (((VkPhysicalDeviceShaderIntegerDotProductFeatures*)(name))==NULL){
            return_gePiqMb["null"]=true;
            return return_gePiqMb;
        }
        return_gePiqMb=[&]() {
    json return_ezvAMhH=json({});
    return serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(*((VkPhysicalDeviceShaderIntegerDotProductFeatures*)(name)));}();
return return_gePiqMb;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_xPRqPIG=json({});
    
        if (((VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR*)(name))==NULL){
            return_xPRqPIG["null"]=true;
            return return_xPRqPIG;
        }
        return_xPRqPIG=[&]() {
    json return_oQMxyWh=json({});
    return serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(*((VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR*)(name)));}();
return return_xPRqPIG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderIntegerDotProductProperties...\n");
        json result;
        result=[&]() {
    json return_lGJwXyJ=json({});
    
        if (((VkPhysicalDeviceShaderIntegerDotProductProperties*)(name))==NULL){
            return_lGJwXyJ["null"]=true;
            return return_lGJwXyJ;
        }
        return_lGJwXyJ=[&]() {
    json return_OOhwbFt=json({});
    return serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(*((VkPhysicalDeviceShaderIntegerDotProductProperties*)(name)));}();
return return_lGJwXyJ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_CqbLmrQ=json({});
    
        if (((VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR*)(name))==NULL){
            return_CqbLmrQ["null"]=true;
            return return_CqbLmrQ;
        }
        return_CqbLmrQ=[&]() {
    json return_JqXAWgL=json({});
    return serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(*((VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR*)(name)));}();
return return_CqbLmrQ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDrmPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDrmPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_iruuWyM=json({});
    
        if (((VkPhysicalDeviceDrmPropertiesEXT*)(name))==NULL){
            return_iruuWyM["null"]=true;
            return return_iruuWyM;
        }
        return_iruuWyM=[&]() {
    json return_yPDmsyf=json({});
    return serialize_VkPhysicalDeviceDrmPropertiesEXT(*((VkPhysicalDeviceDrmPropertiesEXT*)(name)));}();
return return_iruuWyM;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_cXZZYJE=json({});
    
        if (((VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR*)(name))==NULL){
            return_cXZZYJE["null"]=true;
            return return_cXZZYJE;
        }
        return_cXZZYJE=[&]() {
    json return_PPlhtWQ=json({});
    return serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(*((VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR*)(name)));}();
return return_cXZZYJE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_DIsSZeb=json({});
    
        if (((VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV*)(name))==NULL){
            return_DIsSZeb["null"]=true;
            return return_DIsSZeb;
        }
        return_DIsSZeb=[&]() {
    json return_kKxnuHB=json({});
    return serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(*((VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV*)(name)));}();
return return_DIsSZeb;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_mjuFfrb=json({});
    
        if (((VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR*)(name))==NULL){
            return_mjuFfrb["null"]=true;
            return return_mjuFfrb;
        }
        return_mjuFfrb=[&]() {
    json return_ZwKnzGB=json({});
    return serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(*((VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR*)(name)));}();
return return_mjuFfrb;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingMotionBlurFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_qTogrLy=json({});
    
        if (((VkPhysicalDeviceRayTracingMotionBlurFeaturesNV*)(name))==NULL){
            return_qTogrLy["null"]=true;
            return return_qTogrLy;
        }
        return_qTogrLy=[&]() {
    json return_YjSFpAi=json({});
    return serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(*((VkPhysicalDeviceRayTracingMotionBlurFeaturesNV*)(name)));}();
return return_qTogrLy;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureGeometryMotionTrianglesDataNV...\n");
        json result;
        result=[&]() {
    json return_riIvakd=json({});
    
        if (((VkAccelerationStructureGeometryMotionTrianglesDataNV*)(name))==NULL){
            return_riIvakd["null"]=true;
            return return_riIvakd;
        }
        return_riIvakd=[&]() {
    json return_MJrgNLQ=json({});
    return serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(*((VkAccelerationStructureGeometryMotionTrianglesDataNV*)(name)));}();
return return_riIvakd;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureMotionInfoNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureMotionInfoNV...\n");
        json result;
        result=[&]() {
    json return_YvBiHjW=json({});
    
        if (((VkAccelerationStructureMotionInfoNV*)(name))==NULL){
            return_YvBiHjW["null"]=true;
            return return_YvBiHjW;
        }
        return_YvBiHjW=[&]() {
    json return_qdpIyCk=json({});
    return serialize_VkAccelerationStructureMotionInfoNV(*((VkAccelerationStructureMotionInfoNV*)(name)));}();
return return_YvBiHjW;}();
        return result;
        }
    

        json serialize_VkSRTDataNV_pNext(const void* name){
        printf("Serializing VkSRTDataNV...\n");
        json result;
        result=[&]() {
    json return_gjIZbvz=json({});
    
        if (((VkSRTDataNV*)(name))==NULL){
            return_gjIZbvz["null"]=true;
            return return_gjIZbvz;
        }
        return_gjIZbvz=[&]() {
    json return_yPnutbv=json({});
    return serialize_VkSRTDataNV(*((VkSRTDataNV*)(name)));}();
return return_gjIZbvz;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureSRTMotionInstanceNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureSRTMotionInstanceNV...\n");
        json result;
        result=[&]() {
    json return_dBRLVwI=json({});
    
        if (((VkAccelerationStructureSRTMotionInstanceNV*)(name))==NULL){
            return_dBRLVwI["null"]=true;
            return return_dBRLVwI;
        }
        return_dBRLVwI=[&]() {
    json return_GpvhZKX=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(*((VkAccelerationStructureSRTMotionInstanceNV*)(name)));}();
return return_dBRLVwI;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureMatrixMotionInstanceNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureMatrixMotionInstanceNV...\n");
        json result;
        result=[&]() {
    json return_gBfhKBj=json({});
    
        if (((VkAccelerationStructureMatrixMotionInstanceNV*)(name))==NULL){
            return_gBfhKBj["null"]=true;
            return return_gBfhKBj;
        }
        return_gBfhKBj=[&]() {
    json return_jCWwPSp=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(*((VkAccelerationStructureMatrixMotionInstanceNV*)(name)));}();
return return_gBfhKBj;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureMotionInstanceDataNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureMotionInstanceDataNV...\n");
        json result;
        result=[&]() {
    json return_ZoXNQgo=json({});
    
        if (((VkAccelerationStructureMotionInstanceDataNV*)(name))==NULL){
            return_ZoXNQgo["null"]=true;
            return return_ZoXNQgo;
        }
        return_ZoXNQgo=[&]() {
    json return_wmEqVEd=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(*((VkAccelerationStructureMotionInstanceDataNV*)(name)));}();
return return_ZoXNQgo;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureMotionInstanceNV_pNext(const void* name){
        printf("Serializing VkAccelerationStructureMotionInstanceNV...\n");
        json result;
        result=[&]() {
    json return_ESqVDXT=json({});
    
        if (((VkAccelerationStructureMotionInstanceNV*)(name))==NULL){
            return_ESqVDXT["null"]=true;
            return return_ESqVDXT;
        }
        return_ESqVDXT=[&]() {
    json return_hXFXmYX=json({});
    return serialize_VkAccelerationStructureMotionInstanceNV(*((VkAccelerationStructureMotionInstanceNV*)(name)));}();
return return_ESqVDXT;}();
        return result;
        }
    

        json serialize_VkMemoryGetRemoteAddressInfoNV_pNext(const void* name){
        printf("Serializing VkMemoryGetRemoteAddressInfoNV...\n");
        json result;
        result=[&]() {
    json return_ASFdQMb=json({});
    
        if (((VkMemoryGetRemoteAddressInfoNV*)(name))==NULL){
            return_ASFdQMb["null"]=true;
            return return_ASFdQMb;
        }
        return_ASFdQMb=[&]() {
    json return_yZHFEPx=json({});
    return serialize_VkMemoryGetRemoteAddressInfoNV(*((VkMemoryGetRemoteAddressInfoNV*)(name)));}();
return return_ASFdQMb;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_FQfAhhu=json({});
    
        if (((VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT*)(name))==NULL){
            return_FQfAhhu["null"]=true;
            return return_FQfAhhu;
        }
        return_FQfAhhu=[&]() {
    json return_tpKDAiC=json({});
    return serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(*((VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT*)(name)));}();
return return_FQfAhhu;}();
        return result;
        }
    

        json serialize_VkFormatProperties3_pNext(const void* name){
        printf("Serializing VkFormatProperties3...\n");
        json result;
        result=[&]() {
    json return_akPIZyC=json({});
    
        if (((VkFormatProperties3*)(name))==NULL){
            return_akPIZyC["null"]=true;
            return return_akPIZyC;
        }
        return_akPIZyC=[&]() {
    json return_SwmuekZ=json({});
    return serialize_VkFormatProperties3(*((VkFormatProperties3*)(name)));}();
return return_akPIZyC;}();
        return result;
        }
    

        json serialize_VkFormatProperties3KHR_pNext(const void* name){
        printf("Serializing VkFormatProperties3KHR...\n");
        json result;
        result=[&]() {
    json return_TrggMzE=json({});
    
        if (((VkFormatProperties3KHR*)(name))==NULL){
            return_TrggMzE["null"]=true;
            return return_TrggMzE;
        }
        return_TrggMzE=[&]() {
    json return_CkvouKG=json({});
    return serialize_VkFormatProperties3KHR(*((VkFormatProperties3KHR*)(name)));}();
return return_TrggMzE;}();
        return result;
        }
    

        json serialize_VkDrmFormatModifierPropertiesList2EXT_pNext(const void* name){
        printf("Serializing VkDrmFormatModifierPropertiesList2EXT...\n");
        json result;
        result=[&]() {
    json return_qQrzMZX=json({});
    
        if (((VkDrmFormatModifierPropertiesList2EXT*)(name))==NULL){
            return_qQrzMZX["null"]=true;
            return return_qQrzMZX;
        }
        return_qQrzMZX=[&]() {
    json return_eCSscgl=json({});
    return serialize_VkDrmFormatModifierPropertiesList2EXT(*((VkDrmFormatModifierPropertiesList2EXT*)(name)));}();
return return_qQrzMZX;}();
        return result;
        }
    

        json serialize_VkDrmFormatModifierProperties2EXT_pNext(const void* name){
        printf("Serializing VkDrmFormatModifierProperties2EXT...\n");
        json result;
        result=[&]() {
    json return_ihTiJjf=json({});
    
        if (((VkDrmFormatModifierProperties2EXT*)(name))==NULL){
            return_ihTiJjf["null"]=true;
            return return_ihTiJjf;
        }
        return_ihTiJjf=[&]() {
    json return_rRsRJvv=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(*((VkDrmFormatModifierProperties2EXT*)(name)));}();
return return_ihTiJjf;}();
        return result;
        }
    

        json serialize_VkPipelineRenderingCreateInfo_pNext(const void* name){
        printf("Serializing VkPipelineRenderingCreateInfo...\n");
        json result;
        result=[&]() {
    json return_qSUkyOn=json({});
    
        if (((VkPipelineRenderingCreateInfo*)(name))==NULL){
            return_qSUkyOn["null"]=true;
            return return_qSUkyOn;
        }
        return_qSUkyOn=[&]() {
    json return_hKoFBEm=json({});
    return serialize_VkPipelineRenderingCreateInfo(*((VkPipelineRenderingCreateInfo*)(name)));}();
return return_qSUkyOn;}();
        return result;
        }
    

        json serialize_VkPipelineRenderingCreateInfoKHR_pNext(const void* name){
        printf("Serializing VkPipelineRenderingCreateInfoKHR...\n");
        json result;
        result=[&]() {
    json return_ZiBmYPI=json({});
    
        if (((VkPipelineRenderingCreateInfoKHR*)(name))==NULL){
            return_ZiBmYPI["null"]=true;
            return return_ZiBmYPI;
        }
        return_ZiBmYPI=[&]() {
    json return_nZHRgyO=json({});
    return serialize_VkPipelineRenderingCreateInfoKHR(*((VkPipelineRenderingCreateInfoKHR*)(name)));}();
return return_ZiBmYPI;}();
        return result;
        }
    

        json serialize_VkRenderingInfo_pNext(const void* name){
        printf("Serializing VkRenderingInfo...\n");
        json result;
        result=[&]() {
    json return_MfnZhaC=json({});
    
        if (((VkRenderingInfo*)(name))==NULL){
            return_MfnZhaC["null"]=true;
            return return_MfnZhaC;
        }
        return_MfnZhaC=[&]() {
    json return_mTaUXYl=json({});
    return serialize_VkRenderingInfo(*((VkRenderingInfo*)(name)));}();
return return_MfnZhaC;}();
        return result;
        }
    

        json serialize_VkRenderingInfoKHR_pNext(const void* name){
        printf("Serializing VkRenderingInfoKHR...\n");
        json result;
        result=[&]() {
    json return_SkRdmTZ=json({});
    
        if (((VkRenderingInfoKHR*)(name))==NULL){
            return_SkRdmTZ["null"]=true;
            return return_SkRdmTZ;
        }
        return_SkRdmTZ=[&]() {
    json return_xNBQbud=json({});
    return serialize_VkRenderingInfoKHR(*((VkRenderingInfoKHR*)(name)));}();
return return_SkRdmTZ;}();
        return result;
        }
    

        json serialize_VkRenderingAttachmentInfo_pNext(const void* name){
        printf("Serializing VkRenderingAttachmentInfo...\n");
        json result;
        result=[&]() {
    json return_oynBpoY=json({});
    
        if (((VkRenderingAttachmentInfo*)(name))==NULL){
            return_oynBpoY["null"]=true;
            return return_oynBpoY;
        }
        return_oynBpoY=[&]() {
    json return_xMVZYwx=json({});
    return serialize_VkRenderingAttachmentInfo(*((VkRenderingAttachmentInfo*)(name)));}();
return return_oynBpoY;}();
        return result;
        }
    

        json serialize_VkRenderingAttachmentInfoKHR_pNext(const void* name){
        printf("Serializing VkRenderingAttachmentInfoKHR...\n");
        json result;
        result=[&]() {
    json return_JUmflmt=json({});
    
        if (((VkRenderingAttachmentInfoKHR*)(name))==NULL){
            return_JUmflmt["null"]=true;
            return return_JUmflmt;
        }
        return_JUmflmt=[&]() {
    json return_vEaQRgg=json({});
    return serialize_VkRenderingAttachmentInfoKHR(*((VkRenderingAttachmentInfoKHR*)(name)));}();
return return_JUmflmt;}();
        return result;
        }
    

        json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR_pNext(const void* name){
        printf("Serializing VkRenderingFragmentShadingRateAttachmentInfoKHR...\n");
        json result;
        result=[&]() {
    json return_CJxRSUc=json({});
    
        if (((VkRenderingFragmentShadingRateAttachmentInfoKHR*)(name))==NULL){
            return_CJxRSUc["null"]=true;
            return return_CJxRSUc;
        }
        return_CJxRSUc=[&]() {
    json return_QhJGWbg=json({});
    return serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(*((VkRenderingFragmentShadingRateAttachmentInfoKHR*)(name)));}();
return return_CJxRSUc;}();
        return result;
        }
    

        json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT_pNext(const void* name){
        printf("Serializing VkRenderingFragmentDensityMapAttachmentInfoEXT...\n");
        json result;
        result=[&]() {
    json return_nUAiXzh=json({});
    
        if (((VkRenderingFragmentDensityMapAttachmentInfoEXT*)(name))==NULL){
            return_nUAiXzh["null"]=true;
            return return_nUAiXzh;
        }
        return_nUAiXzh=[&]() {
    json return_rVJhemD=json({});
    return serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(*((VkRenderingFragmentDensityMapAttachmentInfoEXT*)(name)));}();
return return_nUAiXzh;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDynamicRenderingFeatures_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDynamicRenderingFeatures...\n");
        json result;
        result=[&]() {
    json return_lgzWLJC=json({});
    
        if (((VkPhysicalDeviceDynamicRenderingFeatures*)(name))==NULL){
            return_lgzWLJC["null"]=true;
            return return_lgzWLJC;
        }
        return_lgzWLJC=[&]() {
    json return_jybKvRw=json({});
    return serialize_VkPhysicalDeviceDynamicRenderingFeatures(*((VkPhysicalDeviceDynamicRenderingFeatures*)(name)));}();
return return_lgzWLJC;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDynamicRenderingFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_sjlytDy=json({});
    
        if (((VkPhysicalDeviceDynamicRenderingFeaturesKHR*)(name))==NULL){
            return_sjlytDy["null"]=true;
            return return_sjlytDy;
        }
        return_sjlytDy=[&]() {
    json return_uqMXpEF=json({});
    return serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(*((VkPhysicalDeviceDynamicRenderingFeaturesKHR*)(name)));}();
return return_sjlytDy;}();
        return result;
        }
    

        json serialize_VkCommandBufferInheritanceRenderingInfo_pNext(const void* name){
        printf("Serializing VkCommandBufferInheritanceRenderingInfo...\n");
        json result;
        result=[&]() {
    json return_SnZDPxw=json({});
    
        if (((VkCommandBufferInheritanceRenderingInfo*)(name))==NULL){
            return_SnZDPxw["null"]=true;
            return return_SnZDPxw;
        }
        return_SnZDPxw=[&]() {
    json return_VsLDHwv=json({});
    return serialize_VkCommandBufferInheritanceRenderingInfo(*((VkCommandBufferInheritanceRenderingInfo*)(name)));}();
return return_SnZDPxw;}();
        return result;
        }
    

        json serialize_VkCommandBufferInheritanceRenderingInfoKHR_pNext(const void* name){
        printf("Serializing VkCommandBufferInheritanceRenderingInfoKHR...\n");
        json result;
        result=[&]() {
    json return_hEfzhQn=json({});
    
        if (((VkCommandBufferInheritanceRenderingInfoKHR*)(name))==NULL){
            return_hEfzhQn["null"]=true;
            return return_hEfzhQn;
        }
        return_hEfzhQn=[&]() {
    json return_yMllvzi=json({});
    return serialize_VkCommandBufferInheritanceRenderingInfoKHR(*((VkCommandBufferInheritanceRenderingInfoKHR*)(name)));}();
return return_hEfzhQn;}();
        return result;
        }
    

        json serialize_VkAttachmentSampleCountInfoAMD_pNext(const void* name){
        printf("Serializing VkAttachmentSampleCountInfoAMD...\n");
        json result;
        result=[&]() {
    json return_gCxTKUP=json({});
    
        if (((VkAttachmentSampleCountInfoAMD*)(name))==NULL){
            return_gCxTKUP["null"]=true;
            return return_gCxTKUP;
        }
        return_gCxTKUP=[&]() {
    json return_ougeSYn=json({});
    return serialize_VkAttachmentSampleCountInfoAMD(*((VkAttachmentSampleCountInfoAMD*)(name)));}();
return return_gCxTKUP;}();
        return result;
        }
    

        json serialize_VkAttachmentSampleCountInfoNV_pNext(const void* name){
        printf("Serializing VkAttachmentSampleCountInfoNV...\n");
        json result;
        result=[&]() {
    json return_LEpVGks=json({});
    
        if (((VkAttachmentSampleCountInfoNV*)(name))==NULL){
            return_LEpVGks["null"]=true;
            return return_LEpVGks;
        }
        return_LEpVGks=[&]() {
    json return_ubwcDUB=json({});
    return serialize_VkAttachmentSampleCountInfoNV(*((VkAttachmentSampleCountInfoNV*)(name)));}();
return return_LEpVGks;}();
        return result;
        }
    

        json serialize_VkMultiviewPerViewAttributesInfoNVX_pNext(const void* name){
        printf("Serializing VkMultiviewPerViewAttributesInfoNVX...\n");
        json result;
        result=[&]() {
    json return_EOiUjdr=json({});
    
        if (((VkMultiviewPerViewAttributesInfoNVX*)(name))==NULL){
            return_EOiUjdr["null"]=true;
            return return_EOiUjdr;
        }
        return_EOiUjdr=[&]() {
    json return_DpBhjUX=json({});
    return serialize_VkMultiviewPerViewAttributesInfoNVX(*((VkMultiviewPerViewAttributesInfoNVX*)(name)));}();
return return_EOiUjdr;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageViewMinLodFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_OqkWtHc=json({});
    
        if (((VkPhysicalDeviceImageViewMinLodFeaturesEXT*)(name))==NULL){
            return_OqkWtHc["null"]=true;
            return return_OqkWtHc;
        }
        return_OqkWtHc=[&]() {
    json return_oAYYZOO=json({});
    return serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(*((VkPhysicalDeviceImageViewMinLodFeaturesEXT*)(name)));}();
return return_OqkWtHc;}();
        return result;
        }
    

        json serialize_VkImageViewMinLodCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkImageViewMinLodCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_KNhlqYt=json({});
    
        if (((VkImageViewMinLodCreateInfoEXT*)(name))==NULL){
            return_KNhlqYt["null"]=true;
            return return_KNhlqYt;
        }
        return_KNhlqYt=[&]() {
    json return_enDrhxg=json({});
    return serialize_VkImageViewMinLodCreateInfoEXT(*((VkImageViewMinLodCreateInfoEXT*)(name)));}();
return return_KNhlqYt;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_WtpdjIe=json({});
    
        if (((VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT*)(name))==NULL){
            return_WtpdjIe["null"]=true;
            return return_WtpdjIe;
        }
        return_WtpdjIe=[&]() {
    json return_bgGbmta=json({});
    return serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(*((VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT*)(name)));}();
return return_WtpdjIe;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM...\n");
        json result;
        result=[&]() {
    json return_oJvfquw=json({});
    
        if (((VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM*)(name))==NULL){
            return_oJvfquw["null"]=true;
            return return_oJvfquw;
        }
        return_oJvfquw=[&]() {
    json return_zyYxDXA=json({});
    return serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(*((VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM*)(name)));}();
return return_oJvfquw;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceLinearColorAttachmentFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_hvoTHkr=json({});
    
        if (((VkPhysicalDeviceLinearColorAttachmentFeaturesNV*)(name))==NULL){
            return_hvoTHkr["null"]=true;
            return return_hvoTHkr;
        }
        return_hvoTHkr=[&]() {
    json return_EbSxCSG=json({});
    return serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(*((VkPhysicalDeviceLinearColorAttachmentFeaturesNV*)(name)));}();
return return_hvoTHkr;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_XYJhPbW=json({});
    
        if (((VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT*)(name))==NULL){
            return_XYJhPbW["null"]=true;
            return return_XYJhPbW;
        }
        return_XYJhPbW=[&]() {
    json return_HsoNhJH=json({});
    return serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(*((VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT*)(name)));}();
return return_XYJhPbW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_wrIPlvb=json({});
    
        if (((VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT*)(name))==NULL){
            return_wrIPlvb["null"]=true;
            return return_wrIPlvb;
        }
        return_wrIPlvb=[&]() {
    json return_qnBwVfI=json({});
    return serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(*((VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT*)(name)));}();
return return_wrIPlvb;}();
        return result;
        }
    

        json serialize_VkGraphicsPipelineLibraryCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkGraphicsPipelineLibraryCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_KFNESCW=json({});
    
        if (((VkGraphicsPipelineLibraryCreateInfoEXT*)(name))==NULL){
            return_KFNESCW["null"]=true;
            return return_KFNESCW;
        }
        return_KFNESCW=[&]() {
    json return_ThQQAQV=json({});
    return serialize_VkGraphicsPipelineLibraryCreateInfoEXT(*((VkGraphicsPipelineLibraryCreateInfoEXT*)(name)));}();
return return_KFNESCW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE...\n");
        json result;
        result=[&]() {
    json return_mUOdUwn=json({});
    
        if (((VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE*)(name))==NULL){
            return_mUOdUwn["null"]=true;
            return return_mUOdUwn;
        }
        return_mUOdUwn=[&]() {
    json return_WbWdYnf=json({});
    return serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(*((VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE*)(name)));}();
return return_mUOdUwn;}();
        return result;
        }
    

        json serialize_VkDescriptorSetBindingReferenceVALVE_pNext(const void* name){
        printf("Serializing VkDescriptorSetBindingReferenceVALVE...\n");
        json result;
        result=[&]() {
    json return_QfKcziq=json({});
    
        if (((VkDescriptorSetBindingReferenceVALVE*)(name))==NULL){
            return_QfKcziq["null"]=true;
            return return_QfKcziq;
        }
        return_QfKcziq=[&]() {
    json return_kllQzAn=json({});
    return serialize_VkDescriptorSetBindingReferenceVALVE(*((VkDescriptorSetBindingReferenceVALVE*)(name)));}();
return return_QfKcziq;}();
        return result;
        }
    

        json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE_pNext(const void* name){
        printf("Serializing VkDescriptorSetLayoutHostMappingInfoVALVE...\n");
        json result;
        result=[&]() {
    json return_WICOXPp=json({});
    
        if (((VkDescriptorSetLayoutHostMappingInfoVALVE*)(name))==NULL){
            return_WICOXPp["null"]=true;
            return return_WICOXPp;
        }
        return_WICOXPp=[&]() {
    json return_qtKbmgY=json({});
    return serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(*((VkDescriptorSetLayoutHostMappingInfoVALVE*)(name)));}();
return return_WICOXPp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_tfZgFpA=json({});
    
        if (((VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT*)(name))==NULL){
            return_tfZgFpA["null"]=true;
            return return_tfZgFpA;
        }
        return_tfZgFpA=[&]() {
    json return_tLoTtsC=json({});
    return serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(*((VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT*)(name)));}();
return return_tfZgFpA;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_JcPctPr=json({});
    
        if (((VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT*)(name))==NULL){
            return_JcPctPr["null"]=true;
            return return_JcPctPr;
        }
        return_JcPctPr=[&]() {
    json return_pBdpYck=json({});
    return serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(*((VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT*)(name)));}();
return return_JcPctPr;}();
        return result;
        }
    

        json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineShaderStageModuleIdentifierCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_xGfTQqj=json({});
    
        if (((VkPipelineShaderStageModuleIdentifierCreateInfoEXT*)(name))==NULL){
            return_xGfTQqj["null"]=true;
            return return_xGfTQqj;
        }
        return_xGfTQqj=[&]() {
    json return_lUNLqtZ=json({});
    return serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(*((VkPipelineShaderStageModuleIdentifierCreateInfoEXT*)(name)));}();
return return_xGfTQqj;}();
        return result;
        }
    

        json serialize_VkShaderModuleIdentifierEXT_pNext(const void* name){
        printf("Serializing VkShaderModuleIdentifierEXT...\n");
        json result;
        result=[&]() {
    json return_aykFeXw=json({});
    
        if (((VkShaderModuleIdentifierEXT*)(name))==NULL){
            return_aykFeXw["null"]=true;
            return return_aykFeXw;
        }
        return_aykFeXw=[&]() {
    json return_GtsrARo=json({});
    return serialize_VkShaderModuleIdentifierEXT(*((VkShaderModuleIdentifierEXT*)(name)));}();
return return_aykFeXw;}();
        return result;
        }
    

        json serialize_VkImageCompressionControlEXT_pNext(const void* name){
        printf("Serializing VkImageCompressionControlEXT...\n");
        json result;
        result=[&]() {
    json return_ssyzpkC=json({});
    
        if (((VkImageCompressionControlEXT*)(name))==NULL){
            return_ssyzpkC["null"]=true;
            return return_ssyzpkC;
        }
        return_ssyzpkC=[&]() {
    json return_FKVmYas=json({});
    return serialize_VkImageCompressionControlEXT(*((VkImageCompressionControlEXT*)(name)));}();
return return_ssyzpkC;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageCompressionControlFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_umHyMWa=json({});
    
        if (((VkPhysicalDeviceImageCompressionControlFeaturesEXT*)(name))==NULL){
            return_umHyMWa["null"]=true;
            return return_umHyMWa;
        }
        return_umHyMWa=[&]() {
    json return_HCcodQU=json({});
    return serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(*((VkPhysicalDeviceImageCompressionControlFeaturesEXT*)(name)));}();
return return_umHyMWa;}();
        return result;
        }
    

        json serialize_VkImageCompressionPropertiesEXT_pNext(const void* name){
        printf("Serializing VkImageCompressionPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_JyedyqW=json({});
    
        if (((VkImageCompressionPropertiesEXT*)(name))==NULL){
            return_JyedyqW["null"]=true;
            return return_JyedyqW;
        }
        return_JyedyqW=[&]() {
    json return_EdLzSsE=json({});
    return serialize_VkImageCompressionPropertiesEXT(*((VkImageCompressionPropertiesEXT*)(name)));}();
return return_JyedyqW;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_rLNwIIp=json({});
    
        if (((VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT*)(name))==NULL){
            return_rLNwIIp["null"]=true;
            return return_rLNwIIp;
        }
        return_rLNwIIp=[&]() {
    json return_vPvIqke=json({});
    return serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(*((VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT*)(name)));}();
return return_rLNwIIp;}();
        return result;
        }
    

        json serialize_VkImageSubresource2KHR_pNext(const void* name){
        printf("Serializing VkImageSubresource2KHR...\n");
        json result;
        result=[&]() {
    json return_ZsRfvGd=json({});
    
        if (((VkImageSubresource2KHR*)(name))==NULL){
            return_ZsRfvGd["null"]=true;
            return return_ZsRfvGd;
        }
        return_ZsRfvGd=[&]() {
    json return_tyTmqbD=json({});
    return serialize_VkImageSubresource2KHR(*((VkImageSubresource2KHR*)(name)));}();
return return_ZsRfvGd;}();
        return result;
        }
    

        json serialize_VkImageSubresource2EXT_pNext(const void* name){
        printf("Serializing VkImageSubresource2EXT...\n");
        json result;
        result=[&]() {
    json return_iNBBaqI=json({});
    
        if (((VkImageSubresource2EXT*)(name))==NULL){
            return_iNBBaqI["null"]=true;
            return return_iNBBaqI;
        }
        return_iNBBaqI=[&]() {
    json return_XyeGrSG=json({});
    return serialize_VkImageSubresource2EXT(*((VkImageSubresource2EXT*)(name)));}();
return return_iNBBaqI;}();
        return result;
        }
    

        json serialize_VkSubresourceLayout2KHR_pNext(const void* name){
        printf("Serializing VkSubresourceLayout2KHR...\n");
        json result;
        result=[&]() {
    json return_pujuMgI=json({});
    
        if (((VkSubresourceLayout2KHR*)(name))==NULL){
            return_pujuMgI["null"]=true;
            return return_pujuMgI;
        }
        return_pujuMgI=[&]() {
    json return_zumUEEm=json({});
    return serialize_VkSubresourceLayout2KHR(*((VkSubresourceLayout2KHR*)(name)));}();
return return_pujuMgI;}();
        return result;
        }
    

        json serialize_VkSubresourceLayout2EXT_pNext(const void* name){
        printf("Serializing VkSubresourceLayout2EXT...\n");
        json result;
        result=[&]() {
    json return_PKjBTAd=json({});
    
        if (((VkSubresourceLayout2EXT*)(name))==NULL){
            return_PKjBTAd["null"]=true;
            return return_PKjBTAd;
        }
        return_PKjBTAd=[&]() {
    json return_nOJeXeu=json({});
    return serialize_VkSubresourceLayout2EXT(*((VkSubresourceLayout2EXT*)(name)));}();
return return_PKjBTAd;}();
        return result;
        }
    

        json serialize_VkRenderPassCreationControlEXT_pNext(const void* name){
        printf("Serializing VkRenderPassCreationControlEXT...\n");
        json result;
        result=[&]() {
    json return_oCIzhTl=json({});
    
        if (((VkRenderPassCreationControlEXT*)(name))==NULL){
            return_oCIzhTl["null"]=true;
            return return_oCIzhTl;
        }
        return_oCIzhTl=[&]() {
    json return_JOoSHMg=json({});
    return serialize_VkRenderPassCreationControlEXT(*((VkRenderPassCreationControlEXT*)(name)));}();
return return_oCIzhTl;}();
        return result;
        }
    

        json serialize_VkRenderPassCreationFeedbackInfoEXT_pNext(const void* name){
        printf("Serializing VkRenderPassCreationFeedbackInfoEXT...\n");
        json result;
        result=[&]() {
    json return_akJeyBH=json({});
    
        if (((VkRenderPassCreationFeedbackInfoEXT*)(name))==NULL){
            return_akJeyBH["null"]=true;
            return return_akJeyBH;
        }
        return_akJeyBH=[&]() {
    json return_fdtmOHR=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*((VkRenderPassCreationFeedbackInfoEXT*)(name)));}();
return return_akJeyBH;}();
        return result;
        }
    

        json serialize_VkRenderPassCreationFeedbackCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkRenderPassCreationFeedbackCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_NmxGCsq=json({});
    
        if (((VkRenderPassCreationFeedbackCreateInfoEXT*)(name))==NULL){
            return_NmxGCsq["null"]=true;
            return return_NmxGCsq;
        }
        return_NmxGCsq=[&]() {
    json return_fldRyLb=json({});
    return serialize_VkRenderPassCreationFeedbackCreateInfoEXT(*((VkRenderPassCreationFeedbackCreateInfoEXT*)(name)));}();
return return_NmxGCsq;}();
        return result;
        }
    

        json serialize_VkRenderPassSubpassFeedbackInfoEXT_pNext(const void* name){
        printf("Serializing VkRenderPassSubpassFeedbackInfoEXT...\n");
        json result;
        result=[&]() {
    json return_StYIHgr=json({});
    
        if (((VkRenderPassSubpassFeedbackInfoEXT*)(name))==NULL){
            return_StYIHgr["null"]=true;
            return return_StYIHgr;
        }
        return_StYIHgr=[&]() {
    json return_WpGXRqL=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*((VkRenderPassSubpassFeedbackInfoEXT*)(name)));}();
return return_StYIHgr;}();
        return result;
        }
    

        json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkRenderPassSubpassFeedbackCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_lQKQPph=json({});
    
        if (((VkRenderPassSubpassFeedbackCreateInfoEXT*)(name))==NULL){
            return_lQKQPph["null"]=true;
            return return_lQKQPph;
        }
        return_lQKQPph=[&]() {
    json return_mxLsJvL=json({});
    return serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(*((VkRenderPassSubpassFeedbackCreateInfoEXT*)(name)));}();
return return_lQKQPph;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_hMmpphI=json({});
    
        if (((VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT*)(name))==NULL){
            return_hMmpphI["null"]=true;
            return return_hMmpphI;
        }
        return_hMmpphI=[&]() {
    json return_bQCYQQL=json({});
    return serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(*((VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT*)(name)));}();
return return_hMmpphI;}();
        return result;
        }
    

        json serialize_VkMicromapBuildInfoEXT_pNext(const void* name){
        printf("Serializing VkMicromapBuildInfoEXT...\n");
        json result;
        result=[&]() {
    json return_SLWpmpK=json({});
    
        if (((VkMicromapBuildInfoEXT*)(name))==NULL){
            return_SLWpmpK["null"]=true;
            return return_SLWpmpK;
        }
        return_SLWpmpK=[&]() {
    json return_iTRyJYk=json({});
    return serialize_VkMicromapBuildInfoEXT(*((VkMicromapBuildInfoEXT*)(name)));}();
return return_SLWpmpK;}();
        return result;
        }
    

        json serialize_VkMicromapCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkMicromapCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_zYtIGGR=json({});
    
        if (((VkMicromapCreateInfoEXT*)(name))==NULL){
            return_zYtIGGR["null"]=true;
            return return_zYtIGGR;
        }
        return_zYtIGGR=[&]() {
    json return_kSBdCJm=json({});
    return serialize_VkMicromapCreateInfoEXT(*((VkMicromapCreateInfoEXT*)(name)));}();
return return_zYtIGGR;}();
        return result;
        }
    

        json serialize_VkMicromapVersionInfoEXT_pNext(const void* name){
        printf("Serializing VkMicromapVersionInfoEXT...\n");
        json result;
        result=[&]() {
    json return_lreCqbd=json({});
    
        if (((VkMicromapVersionInfoEXT*)(name))==NULL){
            return_lreCqbd["null"]=true;
            return return_lreCqbd;
        }
        return_lreCqbd=[&]() {
    json return_GMABCJr=json({});
    return serialize_VkMicromapVersionInfoEXT(*((VkMicromapVersionInfoEXT*)(name)));}();
return return_lreCqbd;}();
        return result;
        }
    

        json serialize_VkCopyMicromapInfoEXT_pNext(const void* name){
        printf("Serializing VkCopyMicromapInfoEXT...\n");
        json result;
        result=[&]() {
    json return_utahmlc=json({});
    
        if (((VkCopyMicromapInfoEXT*)(name))==NULL){
            return_utahmlc["null"]=true;
            return return_utahmlc;
        }
        return_utahmlc=[&]() {
    json return_HrowUWH=json({});
    return serialize_VkCopyMicromapInfoEXT(*((VkCopyMicromapInfoEXT*)(name)));}();
return return_utahmlc;}();
        return result;
        }
    

        json serialize_VkCopyMicromapToMemoryInfoEXT_pNext(const void* name){
        printf("Serializing VkCopyMicromapToMemoryInfoEXT...\n");
        json result;
        result=[&]() {
    json return_RRULrug=json({});
    
        if (((VkCopyMicromapToMemoryInfoEXT*)(name))==NULL){
            return_RRULrug["null"]=true;
            return return_RRULrug;
        }
        return_RRULrug=[&]() {
    json return_FWrjaRU=json({});
    return serialize_VkCopyMicromapToMemoryInfoEXT(*((VkCopyMicromapToMemoryInfoEXT*)(name)));}();
return return_RRULrug;}();
        return result;
        }
    

        json serialize_VkCopyMemoryToMicromapInfoEXT_pNext(const void* name){
        printf("Serializing VkCopyMemoryToMicromapInfoEXT...\n");
        json result;
        result=[&]() {
    json return_rmxKUlo=json({});
    
        if (((VkCopyMemoryToMicromapInfoEXT*)(name))==NULL){
            return_rmxKUlo["null"]=true;
            return return_rmxKUlo;
        }
        return_rmxKUlo=[&]() {
    json return_XpWUKnk=json({});
    return serialize_VkCopyMemoryToMicromapInfoEXT(*((VkCopyMemoryToMicromapInfoEXT*)(name)));}();
return return_rmxKUlo;}();
        return result;
        }
    

        json serialize_VkMicromapBuildSizesInfoEXT_pNext(const void* name){
        printf("Serializing VkMicromapBuildSizesInfoEXT...\n");
        json result;
        result=[&]() {
    json return_hgWIRzH=json({});
    
        if (((VkMicromapBuildSizesInfoEXT*)(name))==NULL){
            return_hgWIRzH["null"]=true;
            return return_hgWIRzH;
        }
        return_hgWIRzH=[&]() {
    json return_oZTigJy=json({});
    return serialize_VkMicromapBuildSizesInfoEXT(*((VkMicromapBuildSizesInfoEXT*)(name)));}();
return return_hgWIRzH;}();
        return result;
        }
    

        json serialize_VkMicromapUsageEXT_pNext(const void* name){
        printf("Serializing VkMicromapUsageEXT...\n");
        json result;
        result=[&]() {
    json return_dstzzST=json({});
    
        if (((VkMicromapUsageEXT*)(name))==NULL){
            return_dstzzST["null"]=true;
            return return_dstzzST;
        }
        return_dstzzST=[&]() {
    json return_VgfOhQt=json({});
    return serialize_VkMicromapUsageEXT(*((VkMicromapUsageEXT*)(name)));}();
return return_dstzzST;}();
        return result;
        }
    

        json serialize_VkMicromapTriangleEXT_pNext(const void* name){
        printf("Serializing VkMicromapTriangleEXT...\n");
        json result;
        result=[&]() {
    json return_krIusJS=json({});
    
        if (((VkMicromapTriangleEXT*)(name))==NULL){
            return_krIusJS["null"]=true;
            return return_krIusJS;
        }
        return_krIusJS=[&]() {
    json return_vuICqEL=json({});
    return serialize_VkMicromapTriangleEXT(*((VkMicromapTriangleEXT*)(name)));}();
return return_krIusJS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceOpacityMicromapFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_cfpspDX=json({});
    
        if (((VkPhysicalDeviceOpacityMicromapFeaturesEXT*)(name))==NULL){
            return_cfpspDX["null"]=true;
            return return_cfpspDX;
        }
        return_cfpspDX=[&]() {
    json return_NxSkfiY=json({});
    return serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(*((VkPhysicalDeviceOpacityMicromapFeaturesEXT*)(name)));}();
return return_cfpspDX;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceOpacityMicromapPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_NbbvWVO=json({});
    
        if (((VkPhysicalDeviceOpacityMicromapPropertiesEXT*)(name))==NULL){
            return_NbbvWVO["null"]=true;
            return return_NbbvWVO;
        }
        return_NbbvWVO=[&]() {
    json return_nGjyGTh=json({});
    return serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(*((VkPhysicalDeviceOpacityMicromapPropertiesEXT*)(name)));}();
return return_NbbvWVO;}();
        return result;
        }
    

        json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT_pNext(const void* name){
        printf("Serializing VkAccelerationStructureTrianglesOpacityMicromapEXT...\n");
        json result;
        result=[&]() {
    json return_PNhVjGF=json({});
    
        if (((VkAccelerationStructureTrianglesOpacityMicromapEXT*)(name))==NULL){
            return_PNhVjGF["null"]=true;
            return return_PNhVjGF;
        }
        return_PNhVjGF=[&]() {
    json return_eqBQPii=json({});
    return serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(*((VkAccelerationStructureTrianglesOpacityMicromapEXT*)(name)));}();
return return_PNhVjGF;}();
        return result;
        }
    

        json serialize_VkPipelinePropertiesIdentifierEXT_pNext(const void* name){
        printf("Serializing VkPipelinePropertiesIdentifierEXT...\n");
        json result;
        result=[&]() {
    json return_MDRZkgp=json({});
    
        if (((VkPipelinePropertiesIdentifierEXT*)(name))==NULL){
            return_MDRZkgp["null"]=true;
            return return_MDRZkgp;
        }
        return_MDRZkgp=[&]() {
    json return_PLuedbL=json({});
    return serialize_VkPipelinePropertiesIdentifierEXT(*((VkPipelinePropertiesIdentifierEXT*)(name)));}();
return return_MDRZkgp;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelinePropertiesFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_SNuozII=json({});
    
        if (((VkPhysicalDevicePipelinePropertiesFeaturesEXT*)(name))==NULL){
            return_SNuozII["null"]=true;
            return return_SNuozII;
        }
        return_SNuozII=[&]() {
    json return_pKetVAQ=json({});
    return serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(*((VkPhysicalDevicePipelinePropertiesFeaturesEXT*)(name)));}();
return return_SNuozII;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD...\n");
        json result;
        result=[&]() {
    json return_ncZkhGQ=json({});
    
        if (((VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD*)(name))==NULL){
            return_ncZkhGQ["null"]=true;
            return return_ncZkhGQ;
        }
        return_ncZkhGQ=[&]() {
    json return_KAGkAOV=json({});
    return serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(*((VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD*)(name)));}();
return return_ncZkhGQ;}();
        return result;
        }
    

        json serialize_VkExternalMemoryAcquireUnmodifiedEXT_pNext(const void* name){
        printf("Serializing VkExternalMemoryAcquireUnmodifiedEXT...\n");
        json result;
        result=[&]() {
    json return_RGdtWwp=json({});
    
        if (((VkExternalMemoryAcquireUnmodifiedEXT*)(name))==NULL){
            return_RGdtWwp["null"]=true;
            return return_RGdtWwp;
        }
        return_RGdtWwp=[&]() {
    json return_gAQFkCH=json({});
    return serialize_VkExternalMemoryAcquireUnmodifiedEXT(*((VkExternalMemoryAcquireUnmodifiedEXT*)(name)));}();
return return_RGdtWwp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_AlbeSvD=json({});
    
        if (((VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT*)(name))==NULL){
            return_AlbeSvD["null"]=true;
            return return_AlbeSvD;
        }
        return_AlbeSvD=[&]() {
    json return_ebUlfYh=json({});
    return serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(*((VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT*)(name)));}();
return return_AlbeSvD;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelineRobustnessFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_SoECIpc=json({});
    
        if (((VkPhysicalDevicePipelineRobustnessFeaturesEXT*)(name))==NULL){
            return_SoECIpc["null"]=true;
            return return_SoECIpc;
        }
        return_SoECIpc=[&]() {
    json return_ochKUDH=json({});
    return serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(*((VkPhysicalDevicePipelineRobustnessFeaturesEXT*)(name)));}();
return return_SoECIpc;}();
        return result;
        }
    

        json serialize_VkPipelineRobustnessCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkPipelineRobustnessCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_aaffUqt=json({});
    
        if (((VkPipelineRobustnessCreateInfoEXT*)(name))==NULL){
            return_aaffUqt["null"]=true;
            return return_aaffUqt;
        }
        return_aaffUqt=[&]() {
    json return_OLtijTH=json({});
    return serialize_VkPipelineRobustnessCreateInfoEXT(*((VkPipelineRobustnessCreateInfoEXT*)(name)));}();
return return_aaffUqt;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelineRobustnessPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_tqtDaCr=json({});
    
        if (((VkPhysicalDevicePipelineRobustnessPropertiesEXT*)(name))==NULL){
            return_tqtDaCr["null"]=true;
            return return_tqtDaCr;
        }
        return_tqtDaCr=[&]() {
    json return_luqrUFy=json({});
    return serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(*((VkPhysicalDevicePipelineRobustnessPropertiesEXT*)(name)));}();
return return_tqtDaCr;}();
        return result;
        }
    

        json serialize_VkImageViewSampleWeightCreateInfoQCOM_pNext(const void* name){
        printf("Serializing VkImageViewSampleWeightCreateInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_YFYxRBf=json({});
    
        if (((VkImageViewSampleWeightCreateInfoQCOM*)(name))==NULL){
            return_YFYxRBf["null"]=true;
            return return_YFYxRBf;
        }
        return_YFYxRBf=[&]() {
    json return_AIMVtjW=json({});
    return serialize_VkImageViewSampleWeightCreateInfoQCOM(*((VkImageViewSampleWeightCreateInfoQCOM*)(name)));}();
return return_YFYxRBf;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageProcessingFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_DWPjxWV=json({});
    
        if (((VkPhysicalDeviceImageProcessingFeaturesQCOM*)(name))==NULL){
            return_DWPjxWV["null"]=true;
            return return_DWPjxWV;
        }
        return_DWPjxWV=[&]() {
    json return_BLNAotF=json({});
    return serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(*((VkPhysicalDeviceImageProcessingFeaturesQCOM*)(name)));}();
return return_DWPjxWV;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageProcessingPropertiesQCOM...\n");
        json result;
        result=[&]() {
    json return_YlJnOOH=json({});
    
        if (((VkPhysicalDeviceImageProcessingPropertiesQCOM*)(name))==NULL){
            return_YlJnOOH["null"]=true;
            return return_YlJnOOH;
        }
        return_YlJnOOH=[&]() {
    json return_AfWqFzk=json({});
    return serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(*((VkPhysicalDeviceImageProcessingPropertiesQCOM*)(name)));}();
return return_YlJnOOH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceTilePropertiesFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_SQXgHrN=json({});
    
        if (((VkPhysicalDeviceTilePropertiesFeaturesQCOM*)(name))==NULL){
            return_SQXgHrN["null"]=true;
            return return_SQXgHrN;
        }
        return_SQXgHrN=[&]() {
    json return_rfjEKzm=json({});
    return serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(*((VkPhysicalDeviceTilePropertiesFeaturesQCOM*)(name)));}();
return return_SQXgHrN;}();
        return result;
        }
    

        json serialize_VkTilePropertiesQCOM_pNext(const void* name){
        printf("Serializing VkTilePropertiesQCOM...\n");
        json result;
        result=[&]() {
    json return_DptEELv=json({});
    
        if (((VkTilePropertiesQCOM*)(name))==NULL){
            return_DptEELv["null"]=true;
            return return_DptEELv;
        }
        return_DptEELv=[&]() {
    json return_MQAGBbO=json({});
    return serialize_VkTilePropertiesQCOM(*((VkTilePropertiesQCOM*)(name)));}();
return return_DptEELv;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceAmigoProfilingFeaturesSEC...\n");
        json result;
        result=[&]() {
    json return_RokQBgt=json({});
    
        if (((VkPhysicalDeviceAmigoProfilingFeaturesSEC*)(name))==NULL){
            return_RokQBgt["null"]=true;
            return return_RokQBgt;
        }
        return_RokQBgt=[&]() {
    json return_ygepVYW=json({});
    return serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(*((VkPhysicalDeviceAmigoProfilingFeaturesSEC*)(name)));}();
return return_RokQBgt;}();
        return result;
        }
    

        json serialize_VkAmigoProfilingSubmitInfoSEC_pNext(const void* name){
        printf("Serializing VkAmigoProfilingSubmitInfoSEC...\n");
        json result;
        result=[&]() {
    json return_tjMLwNo=json({});
    
        if (((VkAmigoProfilingSubmitInfoSEC*)(name))==NULL){
            return_tjMLwNo["null"]=true;
            return return_tjMLwNo;
        }
        return_tjMLwNo=[&]() {
    json return_hRxhWgm=json({});
    return serialize_VkAmigoProfilingSubmitInfoSEC(*((VkAmigoProfilingSubmitInfoSEC*)(name)));}();
return return_tjMLwNo;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_YXtKMaE=json({});
    
        if (((VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT*)(name))==NULL){
            return_YXtKMaE["null"]=true;
            return return_YXtKMaE;
        }
        return_YXtKMaE=[&]() {
    json return_VvSQnvY=json({});
    return serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(*((VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT*)(name)));}();
return return_YXtKMaE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDepthClampZeroOneFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_LTDqGHR=json({});
    
        if (((VkPhysicalDeviceDepthClampZeroOneFeaturesEXT*)(name))==NULL){
            return_LTDqGHR["null"]=true;
            return return_LTDqGHR;
        }
        return_LTDqGHR=[&]() {
    json return_LMVwxDr=json({});
    return serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(*((VkPhysicalDeviceDepthClampZeroOneFeaturesEXT*)(name)));}();
return return_LTDqGHR;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceAddressBindingReportFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_uPXJBKX=json({});
    
        if (((VkPhysicalDeviceAddressBindingReportFeaturesEXT*)(name))==NULL){
            return_uPXJBKX["null"]=true;
            return return_uPXJBKX;
        }
        return_uPXJBKX=[&]() {
    json return_JSeCTfg=json({});
    return serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(*((VkPhysicalDeviceAddressBindingReportFeaturesEXT*)(name)));}();
return return_uPXJBKX;}();
        return result;
        }
    

        json serialize_VkDeviceAddressBindingCallbackDataEXT_pNext(const void* name){
        printf("Serializing VkDeviceAddressBindingCallbackDataEXT...\n");
        json result;
        result=[&]() {
    json return_eLnLcOE=json({});
    
        if (((VkDeviceAddressBindingCallbackDataEXT*)(name))==NULL){
            return_eLnLcOE["null"]=true;
            return return_eLnLcOE;
        }
        return_eLnLcOE=[&]() {
    json return_vfpWmWG=json({});
    return serialize_VkDeviceAddressBindingCallbackDataEXT(*((VkDeviceAddressBindingCallbackDataEXT*)(name)));}();
return return_eLnLcOE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceOpticalFlowFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_sbBLdqG=json({});
    
        if (((VkPhysicalDeviceOpticalFlowFeaturesNV*)(name))==NULL){
            return_sbBLdqG["null"]=true;
            return return_sbBLdqG;
        }
        return_sbBLdqG=[&]() {
    json return_ANHgacG=json({});
    return serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(*((VkPhysicalDeviceOpticalFlowFeaturesNV*)(name)));}();
return return_sbBLdqG;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceOpticalFlowPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_sMIINta=json({});
    
        if (((VkPhysicalDeviceOpticalFlowPropertiesNV*)(name))==NULL){
            return_sMIINta["null"]=true;
            return return_sMIINta;
        }
        return_sMIINta=[&]() {
    json return_SQPdnga=json({});
    return serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(*((VkPhysicalDeviceOpticalFlowPropertiesNV*)(name)));}();
return return_sMIINta;}();
        return result;
        }
    

        json serialize_VkOpticalFlowImageFormatInfoNV_pNext(const void* name){
        printf("Serializing VkOpticalFlowImageFormatInfoNV...\n");
        json result;
        result=[&]() {
    json return_wyDtSim=json({});
    
        if (((VkOpticalFlowImageFormatInfoNV*)(name))==NULL){
            return_wyDtSim["null"]=true;
            return return_wyDtSim;
        }
        return_wyDtSim=[&]() {
    json return_SrwKrWh=json({});
    return serialize_VkOpticalFlowImageFormatInfoNV(*((VkOpticalFlowImageFormatInfoNV*)(name)));}();
return return_wyDtSim;}();
        return result;
        }
    

        json serialize_VkOpticalFlowImageFormatPropertiesNV_pNext(const void* name){
        printf("Serializing VkOpticalFlowImageFormatPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_KdTECOC=json({});
    
        if (((VkOpticalFlowImageFormatPropertiesNV*)(name))==NULL){
            return_KdTECOC["null"]=true;
            return return_KdTECOC;
        }
        return_KdTECOC=[&]() {
    json return_GEcbfPl=json({});
    return serialize_VkOpticalFlowImageFormatPropertiesNV(*((VkOpticalFlowImageFormatPropertiesNV*)(name)));}();
return return_KdTECOC;}();
        return result;
        }
    

        json serialize_VkOpticalFlowSessionCreateInfoNV_pNext(const void* name){
        printf("Serializing VkOpticalFlowSessionCreateInfoNV...\n");
        json result;
        result=[&]() {
    json return_WaSTRHf=json({});
    
        if (((VkOpticalFlowSessionCreateInfoNV*)(name))==NULL){
            return_WaSTRHf["null"]=true;
            return return_WaSTRHf;
        }
        return_WaSTRHf=[&]() {
    json return_pVcImQs=json({});
    return serialize_VkOpticalFlowSessionCreateInfoNV(*((VkOpticalFlowSessionCreateInfoNV*)(name)));}();
return return_WaSTRHf;}();
        return result;
        }
    

        json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV_pNext(const void* name){
        printf("Serializing VkOpticalFlowSessionCreatePrivateDataInfoNV...\n");
        json result;
        result=[&]() {
    json return_AiRrdOr=json({});
    
        if (((VkOpticalFlowSessionCreatePrivateDataInfoNV*)(name))==NULL){
            return_AiRrdOr["null"]=true;
            return return_AiRrdOr;
        }
        return_AiRrdOr=[&]() {
    json return_kWJbROb=json({});
    return serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(*((VkOpticalFlowSessionCreatePrivateDataInfoNV*)(name)));}();
return return_AiRrdOr;}();
        return result;
        }
    

        json serialize_VkOpticalFlowExecuteInfoNV_pNext(const void* name){
        printf("Serializing VkOpticalFlowExecuteInfoNV...\n");
        json result;
        result=[&]() {
    json return_WnJYaBN=json({});
    
        if (((VkOpticalFlowExecuteInfoNV*)(name))==NULL){
            return_WnJYaBN["null"]=true;
            return return_WnJYaBN;
        }
        return_WnJYaBN=[&]() {
    json return_ZzJzkLD=json({});
    return serialize_VkOpticalFlowExecuteInfoNV(*((VkOpticalFlowExecuteInfoNV*)(name)));}();
return return_WnJYaBN;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFaultFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFaultFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_ScJNoPt=json({});
    
        if (((VkPhysicalDeviceFaultFeaturesEXT*)(name))==NULL){
            return_ScJNoPt["null"]=true;
            return return_ScJNoPt;
        }
        return_ScJNoPt=[&]() {
    json return_pHjhuka=json({});
    return serialize_VkPhysicalDeviceFaultFeaturesEXT(*((VkPhysicalDeviceFaultFeaturesEXT*)(name)));}();
return return_ScJNoPt;}();
        return result;
        }
    

        json serialize_VkDeviceFaultAddressInfoEXT_pNext(const void* name){
        printf("Serializing VkDeviceFaultAddressInfoEXT...\n");
        json result;
        result=[&]() {
    json return_jqDSRFe=json({});
    
        if (((VkDeviceFaultAddressInfoEXT*)(name))==NULL){
            return_jqDSRFe["null"]=true;
            return return_jqDSRFe;
        }
        return_jqDSRFe=[&]() {
    json return_moJYRKw=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*((VkDeviceFaultAddressInfoEXT*)(name)));}();
return return_jqDSRFe;}();
        return result;
        }
    

        json serialize_VkDeviceFaultVendorInfoEXT_pNext(const void* name){
        printf("Serializing VkDeviceFaultVendorInfoEXT...\n");
        json result;
        result=[&]() {
    json return_coIQMpu=json({});
    
        if (((VkDeviceFaultVendorInfoEXT*)(name))==NULL){
            return_coIQMpu["null"]=true;
            return return_coIQMpu;
        }
        return_coIQMpu=[&]() {
    json return_tdKmgog=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*((VkDeviceFaultVendorInfoEXT*)(name)));}();
return return_coIQMpu;}();
        return result;
        }
    

        json serialize_VkDeviceFaultCountsEXT_pNext(const void* name){
        printf("Serializing VkDeviceFaultCountsEXT...\n");
        json result;
        result=[&]() {
    json return_JQCuYyW=json({});
    
        if (((VkDeviceFaultCountsEXT*)(name))==NULL){
            return_JQCuYyW["null"]=true;
            return return_JQCuYyW;
        }
        return_JQCuYyW=[&]() {
    json return_WFKaqnW=json({});
    return serialize_VkDeviceFaultCountsEXT(*((VkDeviceFaultCountsEXT*)(name)));}();
return return_JQCuYyW;}();
        return result;
        }
    

        json serialize_VkDeviceFaultInfoEXT_pNext(const void* name){
        printf("Serializing VkDeviceFaultInfoEXT...\n");
        json result;
        result=[&]() {
    json return_dwFrzpU=json({});
    
        if (((VkDeviceFaultInfoEXT*)(name))==NULL){
            return_dwFrzpU["null"]=true;
            return return_dwFrzpU;
        }
        return_dwFrzpU=[&]() {
    json return_IzqaYeH=json({});
    return serialize_VkDeviceFaultInfoEXT(*((VkDeviceFaultInfoEXT*)(name)));}();
return return_dwFrzpU;}();
        return result;
        }
    

        json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT_pNext(const void* name){
        printf("Serializing VkDeviceFaultVendorBinaryHeaderVersionOneEXT...\n");
        json result;
        result=[&]() {
    json return_qAMvGHv=json({});
    
        if (((VkDeviceFaultVendorBinaryHeaderVersionOneEXT*)(name))==NULL){
            return_qAMvGHv["null"]=true;
            return return_qAMvGHv;
        }
        return_qAMvGHv=[&]() {
    json return_NeVPwLd=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(*((VkDeviceFaultVendorBinaryHeaderVersionOneEXT*)(name)));}();
return return_qAMvGHv;}();
        return result;
        }
    

        json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_IPIHIIi=json({});
    
        if (((VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT*)(name))==NULL){
            return_IPIHIIi["null"]=true;
            return return_IPIHIIi;
        }
        return_IPIHIIi=[&]() {
    json return_cNqEWdg=json({});
    return serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(*((VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT*)(name)));}();
return return_IPIHIIi;}();
        return result;
        }
    

        json serialize_VkDepthBiasInfoEXT_pNext(const void* name){
        printf("Serializing VkDepthBiasInfoEXT...\n");
        json result;
        result=[&]() {
    json return_nYFVwYj=json({});
    
        if (((VkDepthBiasInfoEXT*)(name))==NULL){
            return_nYFVwYj["null"]=true;
            return return_nYFVwYj;
        }
        return_nYFVwYj=[&]() {
    json return_BMLLtvh=json({});
    return serialize_VkDepthBiasInfoEXT(*((VkDepthBiasInfoEXT*)(name)));}();
return return_nYFVwYj;}();
        return result;
        }
    

        json serialize_VkDepthBiasRepresentationInfoEXT_pNext(const void* name){
        printf("Serializing VkDepthBiasRepresentationInfoEXT...\n");
        json result;
        result=[&]() {
    json return_HlFjFeH=json({});
    
        if (((VkDepthBiasRepresentationInfoEXT*)(name))==NULL){
            return_HlFjFeH["null"]=true;
            return return_HlFjFeH;
        }
        return_HlFjFeH=[&]() {
    json return_scOZYKp=json({});
    return serialize_VkDepthBiasRepresentationInfoEXT(*((VkDepthBiasRepresentationInfoEXT*)(name)));}();
return return_HlFjFeH;}();
        return result;
        }
    

        json serialize_VkDecompressMemoryRegionNV_pNext(const void* name){
        printf("Serializing VkDecompressMemoryRegionNV...\n");
        json result;
        result=[&]() {
    json return_qxpKpeQ=json({});
    
        if (((VkDecompressMemoryRegionNV*)(name))==NULL){
            return_qxpKpeQ["null"]=true;
            return return_qxpKpeQ;
        }
        return_qxpKpeQ=[&]() {
    json return_ZFGjaFh=json({});
    return serialize_VkDecompressMemoryRegionNV(*((VkDecompressMemoryRegionNV*)(name)));}();
return return_qxpKpeQ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM...\n");
        json result;
        result=[&]() {
    json return_UPgZChQ=json({});
    
        if (((VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM*)(name))==NULL){
            return_UPgZChQ["null"]=true;
            return return_UPgZChQ;
        }
        return_UPgZChQ=[&]() {
    json return_mntXcjk=json({});
    return serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(*((VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM*)(name)));}();
return return_UPgZChQ;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM...\n");
        json result;
        result=[&]() {
    json return_EVrfktW=json({});
    
        if (((VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM*)(name))==NULL){
            return_EVrfktW["null"]=true;
            return return_EVrfktW;
        }
        return_EVrfktW=[&]() {
    json return_DykElSx=json({});
    return serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(*((VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM*)(name)));}();
return return_EVrfktW;}();
        return result;
        }
    

        json serialize_VkFrameBoundaryEXT_pNext(const void* name){
        printf("Serializing VkFrameBoundaryEXT...\n");
        json result;
        result=[&]() {
    json return_rwYDxqc=json({});
    
        if (((VkFrameBoundaryEXT*)(name))==NULL){
            return_rwYDxqc["null"]=true;
            return return_rwYDxqc;
        }
        return_rwYDxqc=[&]() {
    json return_vCnMeBW=json({});
    return serialize_VkFrameBoundaryEXT(*((VkFrameBoundaryEXT*)(name)));}();
return return_rwYDxqc;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceFrameBoundaryFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_DhpMwTH=json({});
    
        if (((VkPhysicalDeviceFrameBoundaryFeaturesEXT*)(name))==NULL){
            return_DhpMwTH["null"]=true;
            return return_DhpMwTH;
        }
        return_DhpMwTH=[&]() {
    json return_TdivBWg=json({});
    return serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(*((VkPhysicalDeviceFrameBoundaryFeaturesEXT*)(name)));}();
return return_DhpMwTH;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_QIApBiZ=json({});
    
        if (((VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT*)(name))==NULL){
            return_QIApBiZ["null"]=true;
            return return_QIApBiZ;
        }
        return_QIApBiZ=[&]() {
    json return_fIyPzln=json({});
    return serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(*((VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT*)(name)));}();
return return_QIApBiZ;}();
        return result;
        }
    

        json serialize_VkSurfacePresentModeEXT_pNext(const void* name){
        printf("Serializing VkSurfacePresentModeEXT...\n");
        json result;
        result=[&]() {
    json return_woepgpS=json({});
    
        if (((VkSurfacePresentModeEXT*)(name))==NULL){
            return_woepgpS["null"]=true;
            return return_woepgpS;
        }
        return_woepgpS=[&]() {
    json return_cPRAPzj=json({});
    return serialize_VkSurfacePresentModeEXT(*((VkSurfacePresentModeEXT*)(name)));}();
return return_woepgpS;}();
        return result;
        }
    

        json serialize_VkSurfacePresentScalingCapabilitiesEXT_pNext(const void* name){
        printf("Serializing VkSurfacePresentScalingCapabilitiesEXT...\n");
        json result;
        result=[&]() {
    json return_wLGtQnS=json({});
    
        if (((VkSurfacePresentScalingCapabilitiesEXT*)(name))==NULL){
            return_wLGtQnS["null"]=true;
            return return_wLGtQnS;
        }
        return_wLGtQnS=[&]() {
    json return_vNOGUfW=json({});
    return serialize_VkSurfacePresentScalingCapabilitiesEXT(*((VkSurfacePresentScalingCapabilitiesEXT*)(name)));}();
return return_wLGtQnS;}();
        return result;
        }
    

        json serialize_VkSurfacePresentModeCompatibilityEXT_pNext(const void* name){
        printf("Serializing VkSurfacePresentModeCompatibilityEXT...\n");
        json result;
        result=[&]() {
    json return_QHCMfPn=json({});
    
        if (((VkSurfacePresentModeCompatibilityEXT*)(name))==NULL){
            return_QHCMfPn["null"]=true;
            return return_QHCMfPn;
        }
        return_QHCMfPn=[&]() {
    json return_ansWYWT=json({});
    return serialize_VkSurfacePresentModeCompatibilityEXT(*((VkSurfacePresentModeCompatibilityEXT*)(name)));}();
return return_QHCMfPn;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_GsiQaHU=json({});
    
        if (((VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT*)(name))==NULL){
            return_GsiQaHU["null"]=true;
            return return_GsiQaHU;
        }
        return_GsiQaHU=[&]() {
    json return_SbKpMom=json({});
    return serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(*((VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT*)(name)));}();
return return_GsiQaHU;}();
        return result;
        }
    

        json serialize_VkSwapchainPresentFenceInfoEXT_pNext(const void* name){
        printf("Serializing VkSwapchainPresentFenceInfoEXT...\n");
        json result;
        result=[&]() {
    json return_YkMIcQe=json({});
    
        if (((VkSwapchainPresentFenceInfoEXT*)(name))==NULL){
            return_YkMIcQe["null"]=true;
            return return_YkMIcQe;
        }
        return_YkMIcQe=[&]() {
    json return_RbGgPMr=json({});
    return serialize_VkSwapchainPresentFenceInfoEXT(*((VkSwapchainPresentFenceInfoEXT*)(name)));}();
return return_YkMIcQe;}();
        return result;
        }
    

        json serialize_VkSwapchainPresentModesCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkSwapchainPresentModesCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_CvPjmyN=json({});
    
        if (((VkSwapchainPresentModesCreateInfoEXT*)(name))==NULL){
            return_CvPjmyN["null"]=true;
            return return_CvPjmyN;
        }
        return_CvPjmyN=[&]() {
    json return_Ynvgrsu=json({});
    return serialize_VkSwapchainPresentModesCreateInfoEXT(*((VkSwapchainPresentModesCreateInfoEXT*)(name)));}();
return return_CvPjmyN;}();
        return result;
        }
    

        json serialize_VkSwapchainPresentModeInfoEXT_pNext(const void* name){
        printf("Serializing VkSwapchainPresentModeInfoEXT...\n");
        json result;
        result=[&]() {
    json return_WcFhITC=json({});
    
        if (((VkSwapchainPresentModeInfoEXT*)(name))==NULL){
            return_WcFhITC["null"]=true;
            return return_WcFhITC;
        }
        return_WcFhITC=[&]() {
    json return_FcLLQgT=json({});
    return serialize_VkSwapchainPresentModeInfoEXT(*((VkSwapchainPresentModeInfoEXT*)(name)));}();
return return_WcFhITC;}();
        return result;
        }
    

        json serialize_VkSwapchainPresentScalingCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkSwapchainPresentScalingCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_MQTZIjj=json({});
    
        if (((VkSwapchainPresentScalingCreateInfoEXT*)(name))==NULL){
            return_MQTZIjj["null"]=true;
            return return_MQTZIjj;
        }
        return_MQTZIjj=[&]() {
    json return_ozyUkOP=json({});
    return serialize_VkSwapchainPresentScalingCreateInfoEXT(*((VkSwapchainPresentScalingCreateInfoEXT*)(name)));}();
return return_MQTZIjj;}();
        return result;
        }
    

        json serialize_VkReleaseSwapchainImagesInfoEXT_pNext(const void* name){
        printf("Serializing VkReleaseSwapchainImagesInfoEXT...\n");
        json result;
        result=[&]() {
    json return_SqkwUYm=json({});
    
        if (((VkReleaseSwapchainImagesInfoEXT*)(name))==NULL){
            return_SqkwUYm["null"]=true;
            return return_SqkwUYm;
        }
        return_SqkwUYm=[&]() {
    json return_EYSwFtq=json({});
    return serialize_VkReleaseSwapchainImagesInfoEXT(*((VkReleaseSwapchainImagesInfoEXT*)(name)));}();
return return_SqkwUYm;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDepthBiasControlFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_zEDukrX=json({});
    
        if (((VkPhysicalDeviceDepthBiasControlFeaturesEXT*)(name))==NULL){
            return_zEDukrX["null"]=true;
            return return_zEDukrX;
        }
        return_zEDukrX=[&]() {
    json return_hieZYaR=json({});
    return serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(*((VkPhysicalDeviceDepthBiasControlFeaturesEXT*)(name)));}();
return return_zEDukrX;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_ahKWUVS=json({});
    
        if (((VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV*)(name))==NULL){
            return_ahKWUVS["null"]=true;
            return return_ahKWUVS;
        }
        return_ahKWUVS=[&]() {
    json return_AcbUSqN=json({});
    return serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(*((VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV*)(name)));}();
return return_ahKWUVS;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV...\n");
        json result;
        result=[&]() {
    json return_ZBpmknH=json({});
    
        if (((VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV*)(name))==NULL){
            return_ZBpmknH["null"]=true;
            return return_ZBpmknH;
        }
        return_ZBpmknH=[&]() {
    json return_GHrFnpL=json({});
    return serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(*((VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV*)(name)));}();
return return_ZBpmknH;}();
        return result;
        }
    

        json serialize_VkDirectDriverLoadingInfoLUNARG_pNext(const void* name){
        printf("Serializing VkDirectDriverLoadingInfoLUNARG...\n");
        json result;
        result=[&]() {
    json return_jXAqIjU=json({});
    
        if (((VkDirectDriverLoadingInfoLUNARG*)(name))==NULL){
            return_jXAqIjU["null"]=true;
            return return_jXAqIjU;
        }
        return_jXAqIjU=[&]() {
    json return_oIsdUzi=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(*((VkDirectDriverLoadingInfoLUNARG*)(name)));}();
return return_jXAqIjU;}();
        return result;
        }
    

        json serialize_VkDirectDriverLoadingListLUNARG_pNext(const void* name){
        printf("Serializing VkDirectDriverLoadingListLUNARG...\n");
        json result;
        result=[&]() {
    json return_UhOxJKE=json({});
    
        if (((VkDirectDriverLoadingListLUNARG*)(name))==NULL){
            return_UhOxJKE["null"]=true;
            return return_UhOxJKE;
        }
        return_UhOxJKE=[&]() {
    json return_uULzPSB=json({});
    return serialize_VkDirectDriverLoadingListLUNARG(*((VkDirectDriverLoadingListLUNARG*)(name)));}();
return return_UhOxJKE;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_FpzeODP=json({});
    
        if (((VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM*)(name))==NULL){
            return_FpzeODP["null"]=true;
            return return_FpzeODP;
        }
        return_FpzeODP=[&]() {
    json return_CRFCWxS=json({});
    return serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(*((VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM*)(name)));}();
return return_FpzeODP;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_VGOjKUY=json({});
    
        if (((VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR*)(name))==NULL){
            return_VGOjKUY["null"]=true;
            return return_VGOjKUY;
        }
        return_VGOjKUY=[&]() {
    json return_xAbOXtn=json({});
    return serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(*((VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR*)(name)));}();
return return_VGOjKUY;}();
        return result;
        }
    

        json serialize_VkDeviceImageSubresourceInfoKHR_pNext(const void* name){
        printf("Serializing VkDeviceImageSubresourceInfoKHR...\n");
        json result;
        result=[&]() {
    json return_GyRiaSd=json({});
    
        if (((VkDeviceImageSubresourceInfoKHR*)(name))==NULL){
            return_GyRiaSd["null"]=true;
            return return_GyRiaSd;
        }
        return_GyRiaSd=[&]() {
    json return_WyrIXCH=json({});
    return serialize_VkDeviceImageSubresourceInfoKHR(*((VkDeviceImageSubresourceInfoKHR*)(name)));}();
return return_GyRiaSd;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderCorePropertiesARM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderCorePropertiesARM...\n");
        json result;
        result=[&]() {
    json return_UjwxABB=json({});
    
        if (((VkPhysicalDeviceShaderCorePropertiesARM*)(name))==NULL){
            return_UjwxABB["null"]=true;
            return return_UjwxABB;
        }
        return_UjwxABB=[&]() {
    json return_uZMhykD=json({});
    return serialize_VkPhysicalDeviceShaderCorePropertiesARM(*((VkPhysicalDeviceShaderCorePropertiesARM*)(name)));}();
return return_UjwxABB;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_gnotDff=json({});
    
        if (((VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM*)(name))==NULL){
            return_gnotDff["null"]=true;
            return return_gnotDff;
        }
        return_gnotDff=[&]() {
    json return_tZvXrQi=json({});
    return serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(*((VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM*)(name)));}();
return return_gnotDff;}();
        return result;
        }
    

        json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM_pNext(const void* name){
        printf("Serializing VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_QfxXdWc=json({});
    
        if (((VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM*)(name))==NULL){
            return_QfxXdWc["null"]=true;
            return return_QfxXdWc;
        }
        return_QfxXdWc=[&]() {
    json return_mECHxuK=json({});
    return serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(*((VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM*)(name)));}();
return return_QfxXdWc;}();
        return result;
        }
    

        json serialize_VkQueryLowLatencySupportNV_pNext(const void* name){
        printf("Serializing VkQueryLowLatencySupportNV...\n");
        json result;
        result=[&]() {
    json return_LKCyIna=json({});
    
        if (((VkQueryLowLatencySupportNV*)(name))==NULL){
            return_LKCyIna["null"]=true;
            return return_LKCyIna;
        }
        return_LKCyIna=[&]() {
    json return_MBILvYN=json({});
    return serialize_VkQueryLowLatencySupportNV(*((VkQueryLowLatencySupportNV*)(name)));}();
return return_LKCyIna;}();
        return result;
        }
    

        json serialize_VkMemoryMapInfoKHR_pNext(const void* name){
        printf("Serializing VkMemoryMapInfoKHR...\n");
        json result;
        result=[&]() {
    json return_SanywDJ=json({});
    
        if (((VkMemoryMapInfoKHR*)(name))==NULL){
            return_SanywDJ["null"]=true;
            return return_SanywDJ;
        }
        return_SanywDJ=[&]() {
    json return_LfksTIS=json({});
    return serialize_VkMemoryMapInfoKHR(*((VkMemoryMapInfoKHR*)(name)));}();
return return_SanywDJ;}();
        return result;
        }
    

        json serialize_VkMemoryUnmapInfoKHR_pNext(const void* name){
        printf("Serializing VkMemoryUnmapInfoKHR...\n");
        json result;
        result=[&]() {
    json return_KvGZBfp=json({});
    
        if (((VkMemoryUnmapInfoKHR*)(name))==NULL){
            return_KvGZBfp["null"]=true;
            return return_KvGZBfp;
        }
        return_KvGZBfp=[&]() {
    json return_heFERRk=json({});
    return serialize_VkMemoryUnmapInfoKHR(*((VkMemoryUnmapInfoKHR*)(name)));}();
return return_KvGZBfp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderObjectFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_lazOEDp=json({});
    
        if (((VkPhysicalDeviceShaderObjectFeaturesEXT*)(name))==NULL){
            return_lazOEDp["null"]=true;
            return return_lazOEDp;
        }
        return_lazOEDp=[&]() {
    json return_xtlxvSR=json({});
    return serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(*((VkPhysicalDeviceShaderObjectFeaturesEXT*)(name)));}();
return return_lazOEDp;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderObjectPropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_CkWMsUN=json({});
    
        if (((VkPhysicalDeviceShaderObjectPropertiesEXT*)(name))==NULL){
            return_CkWMsUN["null"]=true;
            return return_CkWMsUN;
        }
        return_CkWMsUN=[&]() {
    json return_nsyVEbV=json({});
    return serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(*((VkPhysicalDeviceShaderObjectPropertiesEXT*)(name)));}();
return return_CkWMsUN;}();
        return result;
        }
    

        json serialize_VkShaderCreateInfoEXT_pNext(const void* name){
        printf("Serializing VkShaderCreateInfoEXT...\n");
        json result;
        result=[&]() {
    json return_RmzwMvx=json({});
    
        if (((VkShaderCreateInfoEXT*)(name))==NULL){
            return_RmzwMvx["null"]=true;
            return return_RmzwMvx;
        }
        return_RmzwMvx=[&]() {
    json return_czhqxWx=json({});
    return serialize_VkShaderCreateInfoEXT(*((VkShaderCreateInfoEXT*)(name)));}();
return return_RmzwMvx;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderTileImageFeaturesEXT...\n");
        json result;
        result=[&]() {
    json return_wMKsrQk=json({});
    
        if (((VkPhysicalDeviceShaderTileImageFeaturesEXT*)(name))==NULL){
            return_wMKsrQk["null"]=true;
            return return_wMKsrQk;
        }
        return_wMKsrQk=[&]() {
    json return_pBZzMdK=json({});
    return serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(*((VkPhysicalDeviceShaderTileImageFeaturesEXT*)(name)));}();
return return_wMKsrQk;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceShaderTileImagePropertiesEXT...\n");
        json result;
        result=[&]() {
    json return_tpYWoTB=json({});
    
        if (((VkPhysicalDeviceShaderTileImagePropertiesEXT*)(name))==NULL){
            return_tpYWoTB["null"]=true;
            return return_tpYWoTB;
        }
        return_tpYWoTB=[&]() {
    json return_JxaAnSn=json({});
    return serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(*((VkPhysicalDeviceShaderTileImagePropertiesEXT*)(name)));}();
return return_tpYWoTB;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCooperativeMatrixFeaturesKHR...\n");
        json result;
        result=[&]() {
    json return_TpYVdpP=json({});
    
        if (((VkPhysicalDeviceCooperativeMatrixFeaturesKHR*)(name))==NULL){
            return_TpYVdpP["null"]=true;
            return return_TpYVdpP;
        }
        return_TpYVdpP=[&]() {
    json return_WcZhozT=json({});
    return serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(*((VkPhysicalDeviceCooperativeMatrixFeaturesKHR*)(name)));}();
return return_TpYVdpP;}();
        return result;
        }
    

        json serialize_VkCooperativeMatrixPropertiesKHR_pNext(const void* name){
        printf("Serializing VkCooperativeMatrixPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_GRkRGka=json({});
    
        if (((VkCooperativeMatrixPropertiesKHR*)(name))==NULL){
            return_GRkRGka["null"]=true;
            return return_GRkRGka;
        }
        return_GRkRGka=[&]() {
    json return_Lexstaa=json({});
    return serialize_VkCooperativeMatrixPropertiesKHR(*((VkCooperativeMatrixPropertiesKHR*)(name)));}();
return return_GRkRGka;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCooperativeMatrixPropertiesKHR...\n");
        json result;
        result=[&]() {
    json return_RHWAuzI=json({});
    
        if (((VkPhysicalDeviceCooperativeMatrixPropertiesKHR*)(name))==NULL){
            return_RHWAuzI["null"]=true;
            return return_RHWAuzI;
        }
        return_RHWAuzI=[&]() {
    json return_hKHjWZD=json({});
    return serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(*((VkPhysicalDeviceCooperativeMatrixPropertiesKHR*)(name)));}();
return return_RHWAuzI;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCubicClampFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_IKZfYOl=json({});
    
        if (((VkPhysicalDeviceCubicClampFeaturesQCOM*)(name))==NULL){
            return_IKZfYOl["null"]=true;
            return return_IKZfYOl;
        }
        return_IKZfYOl=[&]() {
    json return_OexVTiK=json({});
    return serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(*((VkPhysicalDeviceCubicClampFeaturesQCOM*)(name)));}();
return return_IKZfYOl;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceYcbcrDegammaFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_lnnjDta=json({});
    
        if (((VkPhysicalDeviceYcbcrDegammaFeaturesQCOM*)(name))==NULL){
            return_lnnjDta["null"]=true;
            return return_lnnjDta;
        }
        return_lnnjDta=[&]() {
    json return_nHjxzGW=json({});
    return serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(*((VkPhysicalDeviceYcbcrDegammaFeaturesQCOM*)(name)));}();
return return_lnnjDta;}();
        return result;
        }
    

        json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM_pNext(const void* name){
        printf("Serializing VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_ZvJtJMR=json({});
    
        if (((VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM*)(name))==NULL){
            return_ZvJtJMR["null"]=true;
            return return_ZvJtJMR;
        }
        return_ZvJtJMR=[&]() {
    json return_UUXPucS=json({});
    return serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(*((VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM*)(name)));}();
return return_ZvJtJMR;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceCubicWeightsFeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_cKrbero=json({});
    
        if (((VkPhysicalDeviceCubicWeightsFeaturesQCOM*)(name))==NULL){
            return_cKrbero["null"]=true;
            return return_cKrbero;
        }
        return_cKrbero=[&]() {
    json return_kyLDCfr=json({});
    return serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(*((VkPhysicalDeviceCubicWeightsFeaturesQCOM*)(name)));}();
return return_cKrbero;}();
        return result;
        }
    

        json serialize_VkSamplerCubicWeightsCreateInfoQCOM_pNext(const void* name){
        printf("Serializing VkSamplerCubicWeightsCreateInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_qLFZcSm=json({});
    
        if (((VkSamplerCubicWeightsCreateInfoQCOM*)(name))==NULL){
            return_qLFZcSm["null"]=true;
            return return_qLFZcSm;
        }
        return_qLFZcSm=[&]() {
    json return_hFPpiTy=json({});
    return serialize_VkSamplerCubicWeightsCreateInfoQCOM(*((VkSamplerCubicWeightsCreateInfoQCOM*)(name)));}();
return return_qLFZcSm;}();
        return result;
        }
    

        json serialize_VkBlitImageCubicWeightsInfoQCOM_pNext(const void* name){
        printf("Serializing VkBlitImageCubicWeightsInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_ZEpXfpm=json({});
    
        if (((VkBlitImageCubicWeightsInfoQCOM*)(name))==NULL){
            return_ZEpXfpm["null"]=true;
            return return_ZEpXfpm;
        }
        return_ZEpXfpm=[&]() {
    json return_fHxKELz=json({});
    return serialize_VkBlitImageCubicWeightsInfoQCOM(*((VkBlitImageCubicWeightsInfoQCOM*)(name)));}();
return return_ZEpXfpm;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageProcessing2FeaturesQCOM...\n");
        json result;
        result=[&]() {
    json return_vxTjVhC=json({});
    
        if (((VkPhysicalDeviceImageProcessing2FeaturesQCOM*)(name))==NULL){
            return_vxTjVhC["null"]=true;
            return return_vxTjVhC;
        }
        return_vxTjVhC=[&]() {
    json return_OyefJqj=json({});
    return serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(*((VkPhysicalDeviceImageProcessing2FeaturesQCOM*)(name)));}();
return return_vxTjVhC;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceImageProcessing2PropertiesQCOM...\n");
        json result;
        result=[&]() {
    json return_wjZEflx=json({});
    
        if (((VkPhysicalDeviceImageProcessing2PropertiesQCOM*)(name))==NULL){
            return_wjZEflx["null"]=true;
            return return_wjZEflx;
        }
        return_wjZEflx=[&]() {
    json return_EKgdNWY=json({});
    return serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(*((VkPhysicalDeviceImageProcessing2PropertiesQCOM*)(name)));}();
return return_wjZEflx;}();
        return result;
        }
    

        json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM_pNext(const void* name){
        printf("Serializing VkSamplerBlockMatchWindowCreateInfoQCOM...\n");
        json result;
        result=[&]() {
    json return_ZDUolsM=json({});
    
        if (((VkSamplerBlockMatchWindowCreateInfoQCOM*)(name))==NULL){
            return_ZDUolsM["null"]=true;
            return return_ZDUolsM;
        }
        return_ZDUolsM=[&]() {
    json return_VzZBRid=json({});
    return serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(*((VkSamplerBlockMatchWindowCreateInfoQCOM*)(name)));}();
return return_ZDUolsM;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV...\n");
        json result;
        result=[&]() {
    json return_MqUxMpf=json({});
    
        if (((VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV*)(name))==NULL){
            return_MqUxMpf["null"]=true;
            return return_MqUxMpf;
        }
        return_MqUxMpf=[&]() {
    json return_iPbTQSF=json({});
    return serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(*((VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV*)(name)));}();
return return_MqUxMpf;}();
        return result;
        }
    

        json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT_pNext(const void* name){
        printf("Serializing VkPhysicalDeviceLayeredDriverPropertiesMSFT...\n");
        json result;
        result=[&]() {
    json return_fjZOWku=json({});
    
        if (((VkPhysicalDeviceLayeredDriverPropertiesMSFT*)(name))==NULL){
            return_fjZOWku["null"]=true;
            return return_fjZOWku;
        }
        return_fjZOWku=[&]() {
    json return_TWDzBFA=json({});
    return serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(*((VkPhysicalDeviceLayeredDriverPropertiesMSFT*)(name)));}();
return return_fjZOWku;}();
        return result;
        }
    
std::map<VkStructureType, std::function<json(const void*)>> serialize_pNext_dispatch={
{VK_STRUCTURE_TYPE_APPLICATION_INFO,serialize_VkApplicationInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,serialize_VkDeviceQueueCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,serialize_VkDeviceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,serialize_VkInstanceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,serialize_VkMemoryAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,serialize_VkMappedMemoryRange_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,serialize_VkWriteDescriptorSet_pNext},
{VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,serialize_VkCopyDescriptorSet_pNext},
{VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR,serialize_VkBufferUsageFlags2CreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,serialize_VkBufferCreateInfo_pNext},
{VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,serialize_VkBufferViewCreateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_BARRIER,serialize_VkMemoryBarrier_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,serialize_VkBufferMemoryBarrier_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,serialize_VkImageMemoryBarrier_pNext},
{VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,serialize_VkImageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,serialize_VkImageViewCreateInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,serialize_VkBindSparseInfo_pNext},
{VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,serialize_VkShaderModuleCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,serialize_VkDescriptorSetLayoutCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,serialize_VkDescriptorPoolCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,serialize_VkDescriptorSetAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,serialize_VkPipelineShaderStageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,serialize_VkComputePipelineCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV,serialize_VkComputePipelineIndirectBufferInfoNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR,serialize_VkPipelineCreateFlags2CreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,serialize_VkPipelineVertexInputStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,serialize_VkPipelineInputAssemblyStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,serialize_VkPipelineTessellationStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,serialize_VkPipelineViewportStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,serialize_VkPipelineRasterizationStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,serialize_VkPipelineMultisampleStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,serialize_VkPipelineColorBlendStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,serialize_VkPipelineDynamicStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,serialize_VkPipelineDepthStencilStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,serialize_VkGraphicsPipelineCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,serialize_VkPipelineCacheCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,serialize_VkPipelineLayoutCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,serialize_VkSamplerCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,serialize_VkCommandPoolCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,serialize_VkCommandBufferAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,serialize_VkCommandBufferInheritanceInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,serialize_VkCommandBufferBeginInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,serialize_VkRenderPassBeginInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,serialize_VkRenderPassCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,serialize_VkEventCreateInfo_pNext},
{VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,serialize_VkFenceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,serialize_VkSemaphoreCreateInfo_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,serialize_VkQueryPoolCreateInfo_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,serialize_VkFramebufferCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SUBMIT_INFO,serialize_VkSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR,serialize_VkDisplayModeCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR,serialize_VkDisplaySurfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR,serialize_VkDisplayPresentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR,serialize_VkXlibSurfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR,serialize_VkXcbSurfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,serialize_VkSwapchainCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,serialize_VkPresentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,serialize_VkDebugReportCallbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,serialize_VkValidationFlagsEXT_pNext},
{VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,serialize_VkValidationFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD,serialize_VkPipelineRasterizationStateRasterizationOrderAMD_pNext},
{VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT,serialize_VkDebugMarkerObjectNameInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT,serialize_VkDebugMarkerObjectTagInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT,serialize_VkDebugMarkerMarkerInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV,serialize_VkDedicatedAllocationImageCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV,serialize_VkDedicatedAllocationBufferCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV,serialize_VkDedicatedAllocationMemoryAllocateInfoNV_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV,serialize_VkExternalMemoryImageCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV,serialize_VkExportMemoryAllocateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV,serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV,serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,serialize_VkDevicePrivateDataCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,serialize_VkDevicePrivateDataCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,serialize_VkPrivateDataSlotCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,serialize_VkPrivateDataSlotCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,serialize_VkPhysicalDevicePrivateDataFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,serialize_VkPhysicalDevicePrivateDataFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV,serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT,serialize_VkPhysicalDeviceMultiDrawPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV,serialize_VkGraphicsShaderGroupCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV,serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV,serialize_VkIndirectCommandsLayoutTokenNV_pNext},
{VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV,serialize_VkIndirectCommandsLayoutCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV,serialize_VkGeneratedCommandsInfoNV_pNext},
{VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV,serialize_VkGeneratedCommandsMemoryRequirementsInfoNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV,serialize_VkPipelineIndirectDeviceAddressInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,serialize_VkPhysicalDeviceFeatures2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,serialize_VkPhysicalDeviceFeatures2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,serialize_VkPhysicalDeviceProperties2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,serialize_VkPhysicalDeviceProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,serialize_VkFormatProperties2_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,serialize_VkFormatProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,serialize_VkImageFormatProperties2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,serialize_VkImageFormatProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,serialize_VkPhysicalDeviceImageFormatInfo2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,serialize_VkPhysicalDeviceImageFormatInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,serialize_VkQueueFamilyProperties2_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,serialize_VkQueueFamilyProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,serialize_VkPhysicalDeviceMemoryProperties2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,serialize_VkPhysicalDeviceMemoryProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,serialize_VkSparseImageFormatProperties2_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,serialize_VkSparseImageFormatProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,serialize_VkPhysicalDeviceSparseImageFormatInfo2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR,serialize_VkPhysicalDevicePushDescriptorPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,serialize_VkPhysicalDeviceDriverProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,serialize_VkPhysicalDeviceDriverPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR,serialize_VkPresentRegionsKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,serialize_VkPhysicalDeviceVariablePointersFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,serialize_VkPhysicalDeviceVariablePointersFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,serialize_VkPhysicalDeviceVariablePointerFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,serialize_VkPhysicalDeviceVariablePointerFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,serialize_VkPhysicalDeviceExternalImageFormatInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,serialize_VkPhysicalDeviceExternalImageFormatInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,serialize_VkExternalImageFormatProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,serialize_VkExternalImageFormatPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,serialize_VkPhysicalDeviceExternalBufferInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,serialize_VkPhysicalDeviceExternalBufferInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,serialize_VkExternalBufferProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,serialize_VkExternalBufferPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,serialize_VkPhysicalDeviceIDProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,serialize_VkPhysicalDeviceIDPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,serialize_VkExternalMemoryImageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,serialize_VkExternalMemoryImageCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,serialize_VkExternalMemoryBufferCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,serialize_VkExternalMemoryBufferCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,serialize_VkExportMemoryAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,serialize_VkExportMemoryAllocateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR,serialize_VkImportMemoryFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR,serialize_VkMemoryFdPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR,serialize_VkMemoryGetFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,serialize_VkPhysicalDeviceExternalSemaphoreInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,serialize_VkExternalSemaphoreProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,serialize_VkExternalSemaphorePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,serialize_VkExportSemaphoreCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,serialize_VkExportSemaphoreCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR,serialize_VkImportSemaphoreFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR,serialize_VkSemaphoreGetFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,serialize_VkPhysicalDeviceExternalFenceInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,serialize_VkPhysicalDeviceExternalFenceInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,serialize_VkExternalFenceProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,serialize_VkExternalFencePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,serialize_VkExportFenceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,serialize_VkExportFenceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR,serialize_VkImportFenceFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR,serialize_VkFenceGetFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,serialize_VkPhysicalDeviceMultiviewFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,serialize_VkPhysicalDeviceMultiviewFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,serialize_VkPhysicalDeviceMultiviewProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,serialize_VkPhysicalDeviceMultiviewPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,serialize_VkRenderPassMultiviewCreateInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,serialize_VkRenderPassMultiviewCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,serialize_VkSurfaceCapabilities2EXT_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT,serialize_VkDisplayPowerInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT,serialize_VkDeviceEventInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT,serialize_VkDisplayEventInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT,serialize_VkSwapchainCounterCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,serialize_VkPhysicalDeviceGroupProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,serialize_VkPhysicalDeviceGroupPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,serialize_VkMemoryAllocateFlagsInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,serialize_VkMemoryAllocateFlagsInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,serialize_VkBindBufferMemoryInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,serialize_VkBindBufferMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,serialize_VkBindBufferMemoryDeviceGroupInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,serialize_VkBindBufferMemoryDeviceGroupInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,serialize_VkBindImageMemoryInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,serialize_VkBindImageMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,serialize_VkBindImageMemoryDeviceGroupInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,serialize_VkBindImageMemoryDeviceGroupInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,serialize_VkDeviceGroupRenderPassBeginInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,serialize_VkDeviceGroupRenderPassBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,serialize_VkDeviceGroupCommandBufferBeginInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,serialize_VkDeviceGroupCommandBufferBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,serialize_VkDeviceGroupSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,serialize_VkDeviceGroupSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,serialize_VkDeviceGroupBindSparseInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,serialize_VkDeviceGroupBindSparseInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR,serialize_VkDeviceGroupPresentCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR,serialize_VkImageSwapchainCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR,serialize_VkBindImageMemorySwapchainInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR,serialize_VkAcquireNextImageInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR,serialize_VkDeviceGroupPresentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,serialize_VkDeviceGroupDeviceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,serialize_VkDeviceGroupDeviceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR,serialize_VkDeviceGroupSwapchainCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,serialize_VkDescriptorUpdateTemplateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,serialize_VkDescriptorUpdateTemplateCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR,serialize_VkPhysicalDevicePresentIdFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PRESENT_ID_KHR,serialize_VkPresentIdKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR,serialize_VkPhysicalDevicePresentWaitFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_HDR_METADATA_EXT,serialize_VkHdrMetadataEXT_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD,serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD,serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD_pNext},
{VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE,serialize_VkPresentTimesInfoGOOGLE_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV,serialize_VkPipelineViewportWScalingStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV,serialize_VkPipelineViewportSwizzleStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT,serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT,serialize_VkPipelineDiscardRectangleStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX,serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,serialize_VkRenderPassInputAttachmentAspectCreateInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR,serialize_VkPhysicalDeviceSurfaceInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR,serialize_VkSurfaceCapabilities2KHR_pNext},
{VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR,serialize_VkSurfaceFormat2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR,serialize_VkDisplayProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR,serialize_VkDisplayPlaneProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR,serialize_VkDisplayModeProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR,serialize_VkDisplayPlaneInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR,serialize_VkDisplayPlaneCapabilities2KHR_pNext},
{VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR,serialize_VkSharedPresentSurfaceCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,serialize_VkPhysicalDevice16BitStorageFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,serialize_VkPhysicalDevice16BitStorageFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,serialize_VkPhysicalDeviceSubgroupProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,serialize_VkBufferMemoryRequirementsInfo2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,serialize_VkBufferMemoryRequirementsInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,serialize_VkDeviceBufferMemoryRequirements_pNext},
{VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,serialize_VkDeviceBufferMemoryRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,serialize_VkImageMemoryRequirementsInfo2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,serialize_VkImageMemoryRequirementsInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,serialize_VkImageSparseMemoryRequirementsInfo2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,serialize_VkImageSparseMemoryRequirementsInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS,serialize_VkDeviceImageMemoryRequirements_pNext},
{VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS,serialize_VkDeviceImageMemoryRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,serialize_VkMemoryRequirements2_pNext},
{VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,serialize_VkMemoryRequirements2KHR_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,serialize_VkSparseImageMemoryRequirements2_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,serialize_VkSparseImageMemoryRequirements2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,serialize_VkPhysicalDevicePointClippingProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,serialize_VkPhysicalDevicePointClippingPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,serialize_VkMemoryDedicatedRequirements_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,serialize_VkMemoryDedicatedRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,serialize_VkMemoryDedicatedAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,serialize_VkMemoryDedicatedAllocateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,serialize_VkImageViewUsageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT,serialize_VkImageViewSlicedCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,serialize_VkImageViewUsageCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,serialize_VkPipelineTessellationDomainOriginStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,serialize_VkSamplerYcbcrConversionInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,serialize_VkSamplerYcbcrConversionInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,serialize_VkSamplerYcbcrConversionCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,serialize_VkSamplerYcbcrConversionCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,serialize_VkBindImagePlaneMemoryInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,serialize_VkBindImagePlaneMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,serialize_VkImagePlaneMemoryRequirementsInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,serialize_VkImagePlaneMemoryRequirementsInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,serialize_VkSamplerYcbcrConversionImageFormatProperties_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD,serialize_VkTextureLODGatherFormatPropertiesAMD_pNext},
{VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT,serialize_VkConditionalRenderingBeginInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,serialize_VkProtectedSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,serialize_VkPhysicalDeviceProtectedMemoryFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,serialize_VkPhysicalDeviceProtectedMemoryProperties_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,serialize_VkDeviceQueueInfo2_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV,serialize_VkPipelineCoverageToColorStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT,serialize_VkSampleLocationsInfoEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT,serialize_VkRenderPassSampleLocationsBeginInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT,serialize_VkPipelineSampleLocationsStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT,serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT,serialize_VkMultisamplePropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,serialize_VkSamplerReductionModeCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,serialize_VkSamplerReductionModeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT,serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT,serialize_VkPhysicalDeviceMultiDrawFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT,serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT,serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,serialize_VkPhysicalDeviceInlineUniformBlockFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,serialize_VkPhysicalDeviceInlineUniformBlockProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,serialize_VkWriteDescriptorSetInlineUniformBlock_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,serialize_VkWriteDescriptorSetInlineUniformBlockEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,serialize_VkDescriptorPoolInlineUniformBlockCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV,serialize_VkPipelineCoverageModulationStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,serialize_VkImageFormatListCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,serialize_VkImageFormatListCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT,serialize_VkValidationCacheCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT,serialize_VkShaderModuleValidationCacheCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,serialize_VkPhysicalDeviceMaintenance3Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,serialize_VkPhysicalDeviceMaintenance3PropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,serialize_VkPhysicalDeviceMaintenance4Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,serialize_VkPhysicalDeviceMaintenance4FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,serialize_VkPhysicalDeviceMaintenance4Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,serialize_VkPhysicalDeviceMaintenance4PropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR,serialize_VkPhysicalDeviceMaintenance5FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR,serialize_VkPhysicalDeviceMaintenance5PropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR,serialize_VkRenderingAreaInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,serialize_VkDescriptorSetLayoutSupport_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,serialize_VkDescriptorSetLayoutSupportKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,serialize_VkPhysicalDeviceShaderDrawParametersFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,serialize_VkPhysicalDeviceShaderDrawParameterFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,serialize_VkPhysicalDeviceShaderFloat16Int8Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,serialize_VkPhysicalDeviceFloatControlsProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,serialize_VkPhysicalDeviceFloatControlsPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,serialize_VkPhysicalDeviceHostQueryResetFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR,serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR,serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR,serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR,serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR,serialize_VkQueueFamilyGlobalPriorityPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR,serialize_VkQueueFamilyGlobalPriorityPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,serialize_VkDebugUtilsObjectNameInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT,serialize_VkDebugUtilsObjectTagInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT,serialize_VkDebugUtilsLabelEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT,serialize_VkDebugUtilsMessengerCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT,serialize_VkDebugUtilsMessengerCallbackDataEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT,serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT,serialize_VkDeviceDeviceMemoryReportCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT,serialize_VkDeviceMemoryReportCallbackDataEXT_pNext},
{VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT,serialize_VkImportMemoryHostPointerInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT,serialize_VkMemoryHostPointerPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT,serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT,serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT,serialize_VkCalibratedTimestampInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD,serialize_VkPhysicalDeviceShaderCorePropertiesAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD,serialize_VkPhysicalDeviceShaderCoreProperties2AMD_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT,serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,serialize_VkPhysicalDeviceDescriptorIndexingFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,serialize_VkPhysicalDeviceDescriptorIndexingProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,serialize_VkAttachmentDescription2_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,serialize_VkAttachmentDescription2KHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,serialize_VkAttachmentReference2_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,serialize_VkAttachmentReference2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,serialize_VkSubpassDescription2_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,serialize_VkSubpassDescription2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,serialize_VkSubpassDependency2_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,serialize_VkSubpassDependency2KHR_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,serialize_VkRenderPassCreateInfo2_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,serialize_VkRenderPassCreateInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,serialize_VkSubpassBeginInfo_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,serialize_VkSubpassBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_END_INFO,serialize_VkSubpassEndInfo_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_END_INFO,serialize_VkSubpassEndInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,serialize_VkPhysicalDeviceTimelineSemaphoreFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,serialize_VkPhysicalDeviceTimelineSemaphoreProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,serialize_VkSemaphoreTypeCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,serialize_VkSemaphoreTypeCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,serialize_VkTimelineSemaphoreSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,serialize_VkTimelineSemaphoreSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,serialize_VkSemaphoreWaitInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,serialize_VkSemaphoreWaitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,serialize_VkSemaphoreSignalInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,serialize_VkSemaphoreSignalInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT,serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT,serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT,serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT,serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,serialize_VkPhysicalDevice8BitStorageFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,serialize_VkPhysicalDevice8BitStorageFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT,serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,serialize_VkPhysicalDeviceVulkanMemoryModelFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,serialize_VkPhysicalDeviceShaderAtomicInt64Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT,serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT,serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT,serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV,serialize_VkQueueFamilyCheckpointPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV,serialize_VkCheckpointDataNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,serialize_VkPhysicalDeviceDepthStencilResolveProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,serialize_VkSubpassDescriptionDepthStencilResolve_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,serialize_VkSubpassDescriptionDepthStencilResolveKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT,serialize_VkImageViewASTCDecodeModeEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT,serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT,serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT,serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT,serialize_VkPipelineRasterizationStateStreamCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV,serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV,serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV,serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV,serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV,serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV,serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV,serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV,serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV,serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV,serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV,serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV,serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV,serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV,serialize_VkPhysicalDeviceShadingRateImageFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV,serialize_VkPhysicalDeviceShadingRateImagePropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI,serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV,serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV,serialize_VkPhysicalDeviceMeshShaderFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV,serialize_VkPhysicalDeviceMeshShaderPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT,serialize_VkPhysicalDeviceMeshShaderFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT,serialize_VkPhysicalDeviceMeshShaderPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV,serialize_VkRayTracingShaderGroupCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR,serialize_VkRayTracingShaderGroupCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV,serialize_VkRayTracingPipelineCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR,serialize_VkRayTracingPipelineCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV,serialize_VkGeometryTrianglesNV_pNext},
{VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV,serialize_VkGeometryAABBNV_pNext},
{VK_STRUCTURE_TYPE_GEOMETRY_NV,serialize_VkGeometryNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV,serialize_VkAccelerationStructureInfoNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV,serialize_VkAccelerationStructureCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV,serialize_VkBindAccelerationStructureMemoryInfoNV_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR,serialize_VkWriteDescriptorSetAccelerationStructureKHR_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV,serialize_VkWriteDescriptorSetAccelerationStructureNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV,serialize_VkAccelerationStructureMemoryRequirementsInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR,serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR,serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR,serialize_VkPhysicalDeviceRayQueryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR,serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR,serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV,serialize_VkPhysicalDeviceRayTracingPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR,serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT,serialize_VkDrmFormatModifierPropertiesListEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT,serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT,serialize_VkImageDrmFormatModifierListCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT,serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,serialize_VkImageDrmFormatModifierPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,serialize_VkImageStencilUsageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,serialize_VkImageStencilUsageCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD,serialize_VkDeviceMemoryOverallocationCreateInfoAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT,serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT,serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM,serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT,serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT,serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM,serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT,serialize_VkRenderPassFragmentDensityMapCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM,serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,serialize_VkPhysicalDeviceScalarBlockLayoutFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR,serialize_VkSurfaceProtectedCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT,serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT,serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT,serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT,serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT,serialize_VkMemoryPriorityAllocateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT,serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,serialize_VkPhysicalDeviceBufferDeviceAddressFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,serialize_VkPhysicalDeviceBufferAddressFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,serialize_VkBufferDeviceAddressInfo_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,serialize_VkBufferDeviceAddressInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,serialize_VkBufferDeviceAddressInfoEXT_pNext},
{VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,serialize_VkBufferOpaqueCaptureAddressCreateInfo_pNext},
{VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT,serialize_VkBufferDeviceAddressCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT,serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT_pNext},
{VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT,serialize_VkFilterCubicImageViewImageFormatPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,serialize_VkPhysicalDeviceImagelessFramebufferFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,serialize_VkFramebufferAttachmentsCreateInfo_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,serialize_VkFramebufferAttachmentsCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,serialize_VkFramebufferAttachmentImageInfo_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,serialize_VkFramebufferAttachmentImageInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,serialize_VkRenderPassAttachmentBeginInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,serialize_VkRenderPassAttachmentBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV,serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV,serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV,serialize_VkCooperativeMatrixPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT,serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX,serialize_VkImageViewHandleInfoNVX_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX,serialize_VkImageViewAddressPropertiesNVX_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,serialize_VkPipelineCreationFeedbackCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,serialize_VkPipelineCreationFeedbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV,serialize_VkPhysicalDevicePresentBarrierFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV,serialize_VkSurfaceCapabilitiesPresentBarrierNV_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV,serialize_VkSwapchainPresentBarrierCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR,serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR,serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR,serialize_VkPerformanceCounterKHR_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR,serialize_VkPerformanceCounterDescriptionKHR_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR,serialize_VkQueryPoolPerformanceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR,serialize_VkAcquireProfilingLockInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR,serialize_VkPerformanceQuerySubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT,serialize_VkHeadlessSurfaceCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV,serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV,serialize_VkPipelineCoverageReductionStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV,serialize_VkFramebufferMixedSamplesCombinationNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL,serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL_pNext},
{VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL,serialize_VkInitializePerformanceApiInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,serialize_VkQueryPoolCreateInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL,serialize_VkPerformanceMarkerInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL,serialize_VkPerformanceStreamMarkerInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL,serialize_VkPerformanceOverrideInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL,serialize_VkPerformanceConfigurationAcquireInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR,serialize_VkPhysicalDeviceShaderClockFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT,serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV,serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV,serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT,serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,serialize_VkAttachmentReferenceStencilLayout_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT,serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,serialize_VkAttachmentReferenceStencilLayoutKHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,serialize_VkAttachmentDescriptionStencilLayout_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,serialize_VkAttachmentDescriptionStencilLayoutKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR,serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR,serialize_VkPipelineInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR,serialize_VkPipelineInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR,serialize_VkPipelineExecutablePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR,serialize_VkPipelineExecutableInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR,serialize_VkPipelineExecutableStatisticKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR,serialize_VkPipelineExecutableInternalRepresentationKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT,serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,serialize_VkPhysicalDeviceTexelBufferAlignmentProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,serialize_VkPhysicalDeviceSubgroupSizeControlFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,serialize_VkPhysicalDeviceSubgroupSizeControlProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI,serialize_VkSubpassShadingPipelineCreateInfoHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI,serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI,serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,serialize_VkMemoryOpaqueCaptureAddressAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,serialize_VkDeviceMemoryOpaqueCaptureAddressInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT,serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT,serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT,serialize_VkPipelineRasterizationLineStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES,serialize_VkPhysicalDeviceVulkan11Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES,serialize_VkPhysicalDeviceVulkan11Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES,serialize_VkPhysicalDeviceVulkan12Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES,serialize_VkPhysicalDeviceVulkan12Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES,serialize_VkPhysicalDeviceVulkan13Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES,serialize_VkPhysicalDeviceVulkan13Properties_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD,serialize_VkPipelineCompilerControlCreateInfoAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD,serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,serialize_VkPhysicalDeviceToolProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,serialize_VkPhysicalDeviceToolPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT,serialize_VkSamplerCustomBorderColorCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT,serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT,serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT,serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT,serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR,serialize_VkAccelerationStructureGeometryTrianglesDataKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR,serialize_VkAccelerationStructureGeometryAabbsDataKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR,serialize_VkAccelerationStructureGeometryInstancesDataKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR,serialize_VkAccelerationStructureGeometryKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR,serialize_VkAccelerationStructureBuildGeometryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR,serialize_VkAccelerationStructureCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR,serialize_VkAccelerationStructureDeviceAddressInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR,serialize_VkAccelerationStructureVersionInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR,serialize_VkCopyAccelerationStructureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR,serialize_VkCopyAccelerationStructureToMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR,serialize_VkCopyMemoryToAccelerationStructureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR,serialize_VkRayTracingPipelineInterfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR,serialize_VkPipelineLibraryCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT,serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT,serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT,serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT,serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM,serialize_VkRenderPassTransformBeginInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM,serialize_VkCopyCommandTransformInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM,serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV,serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV,serialize_VkDeviceDiagnosticsConfigCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR,serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT,serialize_VkPhysicalDeviceRobustness2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT,serialize_VkPhysicalDeviceRobustness2PropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,serialize_VkPhysicalDeviceImageRobustnessFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR,serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT,serialize_VkPhysicalDevice4444FormatsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI,serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI,serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_BUFFER_COPY_2,serialize_VkBufferCopy2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_COPY_2,serialize_VkBufferCopy2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COPY_2,serialize_VkImageCopy2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COPY_2,serialize_VkImageCopy2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_BLIT_2,serialize_VkImageBlit2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_BLIT_2,serialize_VkImageBlit2KHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,serialize_VkBufferImageCopy2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,serialize_VkBufferImageCopy2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2,serialize_VkImageResolve2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2,serialize_VkImageResolve2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2,serialize_VkCopyBufferInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2,serialize_VkCopyBufferInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2,serialize_VkCopyImageInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2,serialize_VkCopyImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,serialize_VkBlitImageInfo2_pNext},
{VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,serialize_VkBlitImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,serialize_VkCopyBufferToImageInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,serialize_VkCopyBufferToImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,serialize_VkCopyImageToBufferInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,serialize_VkCopyImageToBufferInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,serialize_VkResolveImageInfo2_pNext},
{VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,serialize_VkResolveImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT,serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,serialize_VkFragmentShadingRateAttachmentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR,serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR,serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR,serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR,serialize_VkPhysicalDeviceFragmentShadingRateKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV,serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV,serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV,serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR,serialize_VkAccelerationStructureBuildSizesInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT,serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT,serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT,serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT,serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT,serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE_pNext},
{VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT,serialize_VkMutableDescriptorTypeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT,serialize_VkMutableDescriptorTypeCreateInfoVALVE_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT,serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT,serialize_VkPipelineViewportDepthClipControlCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT,serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV,serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT,serialize_VkVertexInputBindingDescription2EXT_pNext},
{VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT,serialize_VkVertexInputAttributeDescription2EXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT,serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT,serialize_VkPipelineColorWriteCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_BARRIER_2,serialize_VkMemoryBarrier2_pNext},
{VK_STRUCTURE_TYPE_MEMORY_BARRIER_2,serialize_VkMemoryBarrier2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,serialize_VkImageMemoryBarrier2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,serialize_VkImageMemoryBarrier2KHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,serialize_VkBufferMemoryBarrier2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,serialize_VkBufferMemoryBarrier2KHR_pNext},
{VK_STRUCTURE_TYPE_DEPENDENCY_INFO,serialize_VkDependencyInfo_pNext},
{VK_STRUCTURE_TYPE_DEPENDENCY_INFO,serialize_VkDependencyInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,serialize_VkSemaphoreSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,serialize_VkSemaphoreSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,serialize_VkCommandBufferSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,serialize_VkCommandBufferSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SUBMIT_INFO_2,serialize_VkSubmitInfo2_pNext},
{VK_STRUCTURE_TYPE_SUBMIT_INFO_2,serialize_VkSubmitInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV,serialize_VkQueueFamilyCheckpointProperties2NV_pNext},
{VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV,serialize_VkCheckpointData2NV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,serialize_VkPhysicalDeviceSynchronization2Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,serialize_VkPhysicalDeviceSynchronization2FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT,serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT,serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT,serialize_VkMemoryToImageCopyEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT,serialize_VkImageToMemoryCopyEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT,serialize_VkCopyMemoryToImageInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT,serialize_VkCopyImageToMemoryInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT,serialize_VkCopyImageToImageInfoEXT_pNext},
{VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT,serialize_VkHostImageLayoutTransitionInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT,serialize_VkSubresourceHostMemcpySizeEXT_pNext},
{VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT,serialize_VkHostImageCopyDevicePerformanceQueryEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT,serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT,serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT,serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT,serialize_VkSubpassResolvePerformanceQueryEXT_pNext},
{VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT,serialize_VkMultisampledRenderToSingleSampledInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT,serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR,serialize_VkQueueFamilyVideoPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR,serialize_VkQueueFamilyQueryResultStatusPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR,serialize_VkVideoProfileListInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR,serialize_VkPhysicalDeviceVideoFormatInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR,serialize_VkVideoFormatPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR,serialize_VkVideoProfileInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR,serialize_VkVideoCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR,serialize_VkVideoSessionMemoryRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR,serialize_VkBindVideoSessionMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR,serialize_VkVideoPictureResourceInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR,serialize_VkVideoReferenceSlotInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR,serialize_VkVideoDecodeCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR,serialize_VkVideoDecodeUsageInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR,serialize_VkVideoDecodeInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR,serialize_VkVideoDecodeH264ProfileInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR,serialize_VkVideoDecodeH264CapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR,serialize_VkVideoDecodeH264SessionParametersAddInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR,serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR,serialize_VkVideoDecodeH264PictureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR,serialize_VkVideoDecodeH264DpbSlotInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR,serialize_VkVideoDecodeH265ProfileInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR,serialize_VkVideoDecodeH265CapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR,serialize_VkVideoDecodeH265SessionParametersAddInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR,serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR,serialize_VkVideoDecodeH265PictureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR,serialize_VkVideoDecodeH265DpbSlotInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR,serialize_VkVideoSessionCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR,serialize_VkVideoSessionParametersCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR,serialize_VkVideoSessionParametersUpdateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR,serialize_VkVideoBeginCodingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR,serialize_VkVideoEndCodingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR,serialize_VkVideoCodingControlInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV,serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV,serialize_VkCommandBufferInheritanceViewportScissorInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT,serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT,serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT,serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT,serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX,serialize_VkCuModuleCreateInfoNVX_pNext},
{VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX,serialize_VkCuFunctionCreateInfoNVX_pNext},
{VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX,serialize_VkCuLaunchInfoNVX_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT,serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT,serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT,serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT,serialize_VkDescriptorAddressInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT,serialize_VkDescriptorBufferBindingInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT,serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT,serialize_VkDescriptorGetInfoEXT_pNext},
{VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,serialize_VkBufferCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,serialize_VkImageCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,serialize_VkImageViewCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,serialize_VkSamplerCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT,serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,serialize_VkPhysicalDeviceShaderIntegerDotProductProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT,serialize_VkPhysicalDeviceDrmPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR,serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR,serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR,serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV,serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV,serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV,serialize_VkAccelerationStructureMotionInfoNV_pNext},
{VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV,serialize_VkMemoryGetRemoteAddressInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT,serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3,serialize_VkFormatProperties3_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3,serialize_VkFormatProperties3KHR_pNext},
{VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT,serialize_VkDrmFormatModifierPropertiesList2EXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,serialize_VkPipelineRenderingCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,serialize_VkPipelineRenderingCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_INFO,serialize_VkRenderingInfo_pNext},
{VK_STRUCTURE_TYPE_RENDERING_INFO,serialize_VkRenderingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,serialize_VkRenderingAttachmentInfo_pNext},
{VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,serialize_VkRenderingAttachmentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT,serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,serialize_VkPhysicalDeviceDynamicRenderingFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,serialize_VkCommandBufferInheritanceRenderingInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,serialize_VkCommandBufferInheritanceRenderingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD,serialize_VkAttachmentSampleCountInfoAMD_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD,serialize_VkAttachmentSampleCountInfoNV_pNext},
{VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX,serialize_VkMultiviewPerViewAttributesInfoNVX_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT,serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT,serialize_VkImageViewMinLodCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT,serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT,serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV,serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT,serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT,serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT,serialize_VkGraphicsPipelineLibraryCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE,serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE,serialize_VkDescriptorSetBindingReferenceVALVE_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE,serialize_VkDescriptorSetLayoutHostMappingInfoVALVE_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT,serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT,serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT,serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT,serialize_VkShaderModuleIdentifierEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT,serialize_VkImageCompressionControlEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT,serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT,serialize_VkImageCompressionPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT,serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR,serialize_VkImageSubresource2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR,serialize_VkImageSubresource2EXT_pNext},
{VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR,serialize_VkSubresourceLayout2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR,serialize_VkSubresourceLayout2EXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT,serialize_VkRenderPassCreationControlEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT,serialize_VkRenderPassCreationFeedbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT,serialize_VkRenderPassSubpassFeedbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT,serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT,serialize_VkMicromapBuildInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT,serialize_VkMicromapCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT,serialize_VkMicromapVersionInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT,serialize_VkCopyMicromapInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT,serialize_VkCopyMicromapToMemoryInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT,serialize_VkCopyMemoryToMicromapInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT,serialize_VkMicromapBuildSizesInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT,serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT,serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT,serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT,serialize_VkPipelinePropertiesIdentifierEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT,serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD,serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT,serialize_VkExternalMemoryAcquireUnmodifiedEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT,serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT,serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT,serialize_VkPipelineRobustnessCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT,serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM,serialize_VkImageViewSampleWeightCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM,serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM,serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM,serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM,serialize_VkTilePropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC,serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC_pNext},
{VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC,serialize_VkAmigoProfilingSubmitInfoSEC_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT,serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT,serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT,serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT,serialize_VkDeviceAddressBindingCallbackDataEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV,serialize_VkPhysicalDeviceOpticalFlowFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV,serialize_VkPhysicalDeviceOpticalFlowPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV,serialize_VkOpticalFlowImageFormatInfoNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV,serialize_VkOpticalFlowImageFormatPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV,serialize_VkOpticalFlowSessionCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV,serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV,serialize_VkOpticalFlowExecuteInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT,serialize_VkPhysicalDeviceFaultFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT,serialize_VkDeviceFaultCountsEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT,serialize_VkDeviceFaultInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT,serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT,serialize_VkDepthBiasInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT,serialize_VkDepthBiasRepresentationInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM,serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM,serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM_pNext},
{VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT,serialize_VkFrameBoundaryEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT,serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT,serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT,serialize_VkSurfacePresentModeEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT,serialize_VkSurfacePresentScalingCapabilitiesEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT,serialize_VkSurfacePresentModeCompatibilityEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT,serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT,serialize_VkSwapchainPresentFenceInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT,serialize_VkSwapchainPresentModesCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT,serialize_VkSwapchainPresentModeInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT,serialize_VkSwapchainPresentScalingCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT,serialize_VkReleaseSwapchainImagesInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT,serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV,serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV,serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG,serialize_VkDirectDriverLoadingInfoLUNARG_pNext},
{VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG,serialize_VkDirectDriverLoadingListLUNARG_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM,serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR,serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR,serialize_VkDeviceImageSubresourceInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM,serialize_VkPhysicalDeviceShaderCorePropertiesARM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM,serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM,serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV,serialize_VkQueryLowLatencySupportNV_pNext},
{VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR,serialize_VkMemoryMapInfoKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR,serialize_VkMemoryUnmapInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT,serialize_VkPhysicalDeviceShaderObjectFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT,serialize_VkPhysicalDeviceShaderObjectPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT,serialize_VkShaderCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT,serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT,serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR,serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR,serialize_VkCooperativeMatrixPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR,serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM,serialize_VkPhysicalDeviceCubicClampFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM,serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM,serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM,serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM,serialize_VkSamplerCubicWeightsCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM,serialize_VkBlitImageCubicWeightsInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM,serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM,serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM,serialize_VkSamplerBlockMatchWindowCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV,serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT,serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT_pNext},
};

json serialize_pNext(const void* name){
    if (name==NULL){
        return json({{"null",true}});
    }

    auto chain=((VkBaseInStructure*)name);
    if (serialize_pNext_dispatch.contains(chain->sType)){
        return serialize_pNext_dispatch[chain->sType](name);
    }else{
        return serialize_pNext((void*)chain->pNext); //Ignore invalid sTypes
    }
}


        void* deserialize_VkBaseOutStructure_pNext(json& name){
        printf("Deserializing VkBaseOutStructure...\n");
        VkBaseOutStructure* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBaseOutStructure*)malloc(sizeof(VkBaseOutStructure));
[&]() {
*(result)=deserialize_VkBaseOutStructure(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBaseInStructure_pNext(json& name){
        printf("Deserializing VkBaseInStructure...\n");
        VkBaseInStructure* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBaseInStructure*)malloc(sizeof(VkBaseInStructure));
[&]() {
*(result)=deserialize_VkBaseInStructure(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOffset2D_pNext(json& name){
        printf("Deserializing VkOffset2D...\n");
        VkOffset2D* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOffset2D*)malloc(sizeof(VkOffset2D));
[&]() {
*(result)=deserialize_VkOffset2D(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOffset3D_pNext(json& name){
        printf("Deserializing VkOffset3D...\n");
        VkOffset3D* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOffset3D*)malloc(sizeof(VkOffset3D));
[&]() {
*(result)=deserialize_VkOffset3D(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExtent2D_pNext(json& name){
        printf("Deserializing VkExtent2D...\n");
        VkExtent2D* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExtent2D*)malloc(sizeof(VkExtent2D));
[&]() {
*(result)=deserialize_VkExtent2D(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExtent3D_pNext(json& name){
        printf("Deserializing VkExtent3D...\n");
        VkExtent3D* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExtent3D*)malloc(sizeof(VkExtent3D));
[&]() {
*(result)=deserialize_VkExtent3D(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkViewport_pNext(json& name){
        printf("Deserializing VkViewport...\n");
        VkViewport* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkViewport*)malloc(sizeof(VkViewport));
[&]() {
*(result)=deserialize_VkViewport(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRect2D_pNext(json& name){
        printf("Deserializing VkRect2D...\n");
        VkRect2D* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRect2D*)malloc(sizeof(VkRect2D));
[&]() {
*(result)=deserialize_VkRect2D(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkClearRect_pNext(json& name){
        printf("Deserializing VkClearRect...\n");
        VkClearRect* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkClearRect*)malloc(sizeof(VkClearRect));
[&]() {
*(result)=deserialize_VkClearRect(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkComponentMapping_pNext(json& name){
        printf("Deserializing VkComponentMapping...\n");
        VkComponentMapping* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkComponentMapping*)malloc(sizeof(VkComponentMapping));
[&]() {
*(result)=deserialize_VkComponentMapping(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceProperties...\n");
        VkPhysicalDeviceProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceProperties*)malloc(sizeof(VkPhysicalDeviceProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExtensionProperties_pNext(json& name){
        printf("Deserializing VkExtensionProperties...\n");
        VkExtensionProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExtensionProperties*)malloc(sizeof(VkExtensionProperties));
[&]() {
*(result)=deserialize_VkExtensionProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkLayerProperties_pNext(json& name){
        printf("Deserializing VkLayerProperties...\n");
        VkLayerProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkLayerProperties*)malloc(sizeof(VkLayerProperties));
[&]() {
*(result)=deserialize_VkLayerProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkApplicationInfo_pNext(json& name){
        printf("Deserializing VkApplicationInfo...\n");
        VkApplicationInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkApplicationInfo*)malloc(sizeof(VkApplicationInfo));
[&]() {
*(result)=deserialize_VkApplicationInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAllocationCallbacks_pNext(json& name){
        printf("Deserializing VkAllocationCallbacks...\n");
        VkAllocationCallbacks* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAllocationCallbacks*)malloc(sizeof(VkAllocationCallbacks));
[&]() {
*(result)=deserialize_VkAllocationCallbacks(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceQueueCreateInfo_pNext(json& name){
        printf("Deserializing VkDeviceQueueCreateInfo...\n");
        VkDeviceQueueCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceQueueCreateInfo*)malloc(sizeof(VkDeviceQueueCreateInfo));
[&]() {
*(result)=deserialize_VkDeviceQueueCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceCreateInfo_pNext(json& name){
        printf("Deserializing VkDeviceCreateInfo...\n");
        VkDeviceCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceCreateInfo*)malloc(sizeof(VkDeviceCreateInfo));
[&]() {
*(result)=deserialize_VkDeviceCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkInstanceCreateInfo_pNext(json& name){
        printf("Deserializing VkInstanceCreateInfo...\n");
        VkInstanceCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkInstanceCreateInfo*)malloc(sizeof(VkInstanceCreateInfo));
[&]() {
*(result)=deserialize_VkInstanceCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyProperties_pNext(json& name){
        printf("Deserializing VkQueueFamilyProperties...\n");
        VkQueueFamilyProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyProperties*)malloc(sizeof(VkQueueFamilyProperties));
[&]() {
*(result)=deserialize_VkQueueFamilyProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMemoryProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMemoryProperties...\n");
        VkPhysicalDeviceMemoryProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMemoryProperties*)malloc(sizeof(VkPhysicalDeviceMemoryProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMemoryProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryAllocateInfo_pNext(json& name){
        printf("Deserializing VkMemoryAllocateInfo...\n");
        VkMemoryAllocateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryAllocateInfo*)malloc(sizeof(VkMemoryAllocateInfo));
[&]() {
*(result)=deserialize_VkMemoryAllocateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryRequirements_pNext(json& name){
        printf("Deserializing VkMemoryRequirements...\n");
        VkMemoryRequirements* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryRequirements*)malloc(sizeof(VkMemoryRequirements));
[&]() {
*(result)=deserialize_VkMemoryRequirements(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageFormatProperties_pNext(json& name){
        printf("Deserializing VkSparseImageFormatProperties...\n");
        VkSparseImageFormatProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageFormatProperties*)malloc(sizeof(VkSparseImageFormatProperties));
[&]() {
*(result)=deserialize_VkSparseImageFormatProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageMemoryRequirements_pNext(json& name){
        printf("Deserializing VkSparseImageMemoryRequirements...\n");
        VkSparseImageMemoryRequirements* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageMemoryRequirements*)malloc(sizeof(VkSparseImageMemoryRequirements));
[&]() {
*(result)=deserialize_VkSparseImageMemoryRequirements(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryType_pNext(json& name){
        printf("Deserializing VkMemoryType...\n");
        VkMemoryType* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryType*)malloc(sizeof(VkMemoryType));
[&]() {
*(result)=deserialize_VkMemoryType(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryHeap_pNext(json& name){
        printf("Deserializing VkMemoryHeap...\n");
        VkMemoryHeap* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryHeap*)malloc(sizeof(VkMemoryHeap));
[&]() {
*(result)=deserialize_VkMemoryHeap(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMappedMemoryRange_pNext(json& name){
        printf("Deserializing VkMappedMemoryRange...\n");
        VkMappedMemoryRange* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMappedMemoryRange*)malloc(sizeof(VkMappedMemoryRange));
[&]() {
*(result)=deserialize_VkMappedMemoryRange(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFormatProperties_pNext(json& name){
        printf("Deserializing VkFormatProperties...\n");
        VkFormatProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFormatProperties*)malloc(sizeof(VkFormatProperties));
[&]() {
*(result)=deserialize_VkFormatProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageFormatProperties_pNext(json& name){
        printf("Deserializing VkImageFormatProperties...\n");
        VkImageFormatProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageFormatProperties*)malloc(sizeof(VkImageFormatProperties));
[&]() {
*(result)=deserialize_VkImageFormatProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorBufferInfo_pNext(json& name){
        printf("Deserializing VkDescriptorBufferInfo...\n");
        VkDescriptorBufferInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorBufferInfo*)malloc(sizeof(VkDescriptorBufferInfo));
[&]() {
*(result)=deserialize_VkDescriptorBufferInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorImageInfo_pNext(json& name){
        printf("Deserializing VkDescriptorImageInfo...\n");
        VkDescriptorImageInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(result)=deserialize_VkDescriptorImageInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkWriteDescriptorSet_pNext(json& name){
        printf("Deserializing VkWriteDescriptorSet...\n");
        VkWriteDescriptorSet* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkWriteDescriptorSet*)malloc(sizeof(VkWriteDescriptorSet));
[&]() {
*(result)=deserialize_VkWriteDescriptorSet(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyDescriptorSet_pNext(json& name){
        printf("Deserializing VkCopyDescriptorSet...\n");
        VkCopyDescriptorSet* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyDescriptorSet*)malloc(sizeof(VkCopyDescriptorSet));
[&]() {
*(result)=deserialize_VkCopyDescriptorSet(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferUsageFlags2CreateInfoKHR_pNext(json& name){
        printf("Deserializing VkBufferUsageFlags2CreateInfoKHR...\n");
        VkBufferUsageFlags2CreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferUsageFlags2CreateInfoKHR*)malloc(sizeof(VkBufferUsageFlags2CreateInfoKHR));
[&]() {
*(result)=deserialize_VkBufferUsageFlags2CreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferCreateInfo_pNext(json& name){
        printf("Deserializing VkBufferCreateInfo...\n");
        VkBufferCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferCreateInfo*)malloc(sizeof(VkBufferCreateInfo));
[&]() {
*(result)=deserialize_VkBufferCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferViewCreateInfo_pNext(json& name){
        printf("Deserializing VkBufferViewCreateInfo...\n");
        VkBufferViewCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferViewCreateInfo*)malloc(sizeof(VkBufferViewCreateInfo));
[&]() {
*(result)=deserialize_VkBufferViewCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSubresource_pNext(json& name){
        printf("Deserializing VkImageSubresource...\n");
        VkImageSubresource* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSubresource*)malloc(sizeof(VkImageSubresource));
[&]() {
*(result)=deserialize_VkImageSubresource(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSubresourceLayers_pNext(json& name){
        printf("Deserializing VkImageSubresourceLayers...\n");
        VkImageSubresourceLayers* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSubresourceLayers*)malloc(sizeof(VkImageSubresourceLayers));
[&]() {
*(result)=deserialize_VkImageSubresourceLayers(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSubresourceRange_pNext(json& name){
        printf("Deserializing VkImageSubresourceRange...\n");
        VkImageSubresourceRange* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSubresourceRange*)malloc(sizeof(VkImageSubresourceRange));
[&]() {
*(result)=deserialize_VkImageSubresourceRange(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryBarrier_pNext(json& name){
        printf("Deserializing VkMemoryBarrier...\n");
        VkMemoryBarrier* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryBarrier*)malloc(sizeof(VkMemoryBarrier));
[&]() {
*(result)=deserialize_VkMemoryBarrier(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferMemoryBarrier_pNext(json& name){
        printf("Deserializing VkBufferMemoryBarrier...\n");
        VkBufferMemoryBarrier* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferMemoryBarrier*)malloc(sizeof(VkBufferMemoryBarrier));
[&]() {
*(result)=deserialize_VkBufferMemoryBarrier(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageMemoryBarrier_pNext(json& name){
        printf("Deserializing VkImageMemoryBarrier...\n");
        VkImageMemoryBarrier* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageMemoryBarrier*)malloc(sizeof(VkImageMemoryBarrier));
[&]() {
*(result)=deserialize_VkImageMemoryBarrier(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageCreateInfo_pNext(json& name){
        printf("Deserializing VkImageCreateInfo...\n");
        VkImageCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageCreateInfo*)malloc(sizeof(VkImageCreateInfo));
[&]() {
*(result)=deserialize_VkImageCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubresourceLayout_pNext(json& name){
        printf("Deserializing VkSubresourceLayout...\n");
        VkSubresourceLayout* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubresourceLayout*)malloc(sizeof(VkSubresourceLayout));
[&]() {
*(result)=deserialize_VkSubresourceLayout(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewCreateInfo_pNext(json& name){
        printf("Deserializing VkImageViewCreateInfo...\n");
        VkImageViewCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewCreateInfo*)malloc(sizeof(VkImageViewCreateInfo));
[&]() {
*(result)=deserialize_VkImageViewCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferCopy_pNext(json& name){
        printf("Deserializing VkBufferCopy...\n");
        VkBufferCopy* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferCopy*)malloc(sizeof(VkBufferCopy));
[&]() {
*(result)=deserialize_VkBufferCopy(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseMemoryBind_pNext(json& name){
        printf("Deserializing VkSparseMemoryBind...\n");
        VkSparseMemoryBind* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseMemoryBind*)malloc(sizeof(VkSparseMemoryBind));
[&]() {
*(result)=deserialize_VkSparseMemoryBind(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageMemoryBind_pNext(json& name){
        printf("Deserializing VkSparseImageMemoryBind...\n");
        VkSparseImageMemoryBind* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageMemoryBind*)malloc(sizeof(VkSparseImageMemoryBind));
[&]() {
*(result)=deserialize_VkSparseImageMemoryBind(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseBufferMemoryBindInfo_pNext(json& name){
        printf("Deserializing VkSparseBufferMemoryBindInfo...\n");
        VkSparseBufferMemoryBindInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseBufferMemoryBindInfo*)malloc(sizeof(VkSparseBufferMemoryBindInfo));
[&]() {
*(result)=deserialize_VkSparseBufferMemoryBindInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageOpaqueMemoryBindInfo_pNext(json& name){
        printf("Deserializing VkSparseImageOpaqueMemoryBindInfo...\n");
        VkSparseImageOpaqueMemoryBindInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageOpaqueMemoryBindInfo*)malloc(sizeof(VkSparseImageOpaqueMemoryBindInfo));
[&]() {
*(result)=deserialize_VkSparseImageOpaqueMemoryBindInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageMemoryBindInfo_pNext(json& name){
        printf("Deserializing VkSparseImageMemoryBindInfo...\n");
        VkSparseImageMemoryBindInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageMemoryBindInfo*)malloc(sizeof(VkSparseImageMemoryBindInfo));
[&]() {
*(result)=deserialize_VkSparseImageMemoryBindInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindSparseInfo_pNext(json& name){
        printf("Deserializing VkBindSparseInfo...\n");
        VkBindSparseInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindSparseInfo*)malloc(sizeof(VkBindSparseInfo));
[&]() {
*(result)=deserialize_VkBindSparseInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageCopy_pNext(json& name){
        printf("Deserializing VkImageCopy...\n");
        VkImageCopy* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageCopy*)malloc(sizeof(VkImageCopy));
[&]() {
*(result)=deserialize_VkImageCopy(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageBlit_pNext(json& name){
        printf("Deserializing VkImageBlit...\n");
        VkImageBlit* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageBlit*)malloc(sizeof(VkImageBlit));
[&]() {
*(result)=deserialize_VkImageBlit(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferImageCopy_pNext(json& name){
        printf("Deserializing VkBufferImageCopy...\n");
        VkBufferImageCopy* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferImageCopy*)malloc(sizeof(VkBufferImageCopy));
[&]() {
*(result)=deserialize_VkBufferImageCopy(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyMemoryIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkCopyMemoryIndirectCommandNV...\n");
        VkCopyMemoryIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyMemoryIndirectCommandNV*)malloc(sizeof(VkCopyMemoryIndirectCommandNV));
[&]() {
*(result)=deserialize_VkCopyMemoryIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyMemoryToImageIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkCopyMemoryToImageIndirectCommandNV...\n");
        VkCopyMemoryToImageIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyMemoryToImageIndirectCommandNV*)malloc(sizeof(VkCopyMemoryToImageIndirectCommandNV));
[&]() {
*(result)=deserialize_VkCopyMemoryToImageIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageResolve_pNext(json& name){
        printf("Deserializing VkImageResolve...\n");
        VkImageResolve* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageResolve*)malloc(sizeof(VkImageResolve));
[&]() {
*(result)=deserialize_VkImageResolve(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShaderModuleCreateInfo_pNext(json& name){
        printf("Deserializing VkShaderModuleCreateInfo...\n");
        VkShaderModuleCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShaderModuleCreateInfo*)malloc(sizeof(VkShaderModuleCreateInfo));
[&]() {
*(result)=deserialize_VkShaderModuleCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetLayoutBinding_pNext(json& name){
        printf("Deserializing VkDescriptorSetLayoutBinding...\n");
        VkDescriptorSetLayoutBinding* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetLayoutBinding*)malloc(sizeof(VkDescriptorSetLayoutBinding));
[&]() {
*(result)=deserialize_VkDescriptorSetLayoutBinding(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetLayoutCreateInfo_pNext(json& name){
        printf("Deserializing VkDescriptorSetLayoutCreateInfo...\n");
        VkDescriptorSetLayoutCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetLayoutCreateInfo*)malloc(sizeof(VkDescriptorSetLayoutCreateInfo));
[&]() {
*(result)=deserialize_VkDescriptorSetLayoutCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorPoolSize_pNext(json& name){
        printf("Deserializing VkDescriptorPoolSize...\n");
        VkDescriptorPoolSize* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorPoolSize*)malloc(sizeof(VkDescriptorPoolSize));
[&]() {
*(result)=deserialize_VkDescriptorPoolSize(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorPoolCreateInfo_pNext(json& name){
        printf("Deserializing VkDescriptorPoolCreateInfo...\n");
        VkDescriptorPoolCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorPoolCreateInfo*)malloc(sizeof(VkDescriptorPoolCreateInfo));
[&]() {
*(result)=deserialize_VkDescriptorPoolCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetAllocateInfo_pNext(json& name){
        printf("Deserializing VkDescriptorSetAllocateInfo...\n");
        VkDescriptorSetAllocateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetAllocateInfo*)malloc(sizeof(VkDescriptorSetAllocateInfo));
[&]() {
*(result)=deserialize_VkDescriptorSetAllocateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSpecializationMapEntry_pNext(json& name){
        printf("Deserializing VkSpecializationMapEntry...\n");
        VkSpecializationMapEntry* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSpecializationMapEntry*)malloc(sizeof(VkSpecializationMapEntry));
[&]() {
*(result)=deserialize_VkSpecializationMapEntry(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSpecializationInfo_pNext(json& name){
        printf("Deserializing VkSpecializationInfo...\n");
        VkSpecializationInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSpecializationInfo*)malloc(sizeof(VkSpecializationInfo));
[&]() {
*(result)=deserialize_VkSpecializationInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineShaderStageCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineShaderStageCreateInfo...\n");
        VkPipelineShaderStageCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineShaderStageCreateInfo*)malloc(sizeof(VkPipelineShaderStageCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineShaderStageCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkComputePipelineCreateInfo_pNext(json& name){
        printf("Deserializing VkComputePipelineCreateInfo...\n");
        VkComputePipelineCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkComputePipelineCreateInfo*)malloc(sizeof(VkComputePipelineCreateInfo));
[&]() {
*(result)=deserialize_VkComputePipelineCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkComputePipelineIndirectBufferInfoNV_pNext(json& name){
        printf("Deserializing VkComputePipelineIndirectBufferInfoNV...\n");
        VkComputePipelineIndirectBufferInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkComputePipelineIndirectBufferInfoNV*)malloc(sizeof(VkComputePipelineIndirectBufferInfoNV));
[&]() {
*(result)=deserialize_VkComputePipelineIndirectBufferInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCreateFlags2CreateInfoKHR_pNext(json& name){
        printf("Deserializing VkPipelineCreateFlags2CreateInfoKHR...\n");
        VkPipelineCreateFlags2CreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCreateFlags2CreateInfoKHR*)malloc(sizeof(VkPipelineCreateFlags2CreateInfoKHR));
[&]() {
*(result)=deserialize_VkPipelineCreateFlags2CreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVertexInputBindingDescription_pNext(json& name){
        printf("Deserializing VkVertexInputBindingDescription...\n");
        VkVertexInputBindingDescription* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVertexInputBindingDescription*)malloc(sizeof(VkVertexInputBindingDescription));
[&]() {
*(result)=deserialize_VkVertexInputBindingDescription(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVertexInputAttributeDescription_pNext(json& name){
        printf("Deserializing VkVertexInputAttributeDescription...\n");
        VkVertexInputAttributeDescription* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVertexInputAttributeDescription*)malloc(sizeof(VkVertexInputAttributeDescription));
[&]() {
*(result)=deserialize_VkVertexInputAttributeDescription(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineVertexInputStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineVertexInputStateCreateInfo...\n");
        VkPipelineVertexInputStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineVertexInputStateCreateInfo*)malloc(sizeof(VkPipelineVertexInputStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineVertexInputStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineInputAssemblyStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineInputAssemblyStateCreateInfo...\n");
        VkPipelineInputAssemblyStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineInputAssemblyStateCreateInfo*)malloc(sizeof(VkPipelineInputAssemblyStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineTessellationStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineTessellationStateCreateInfo...\n");
        VkPipelineTessellationStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineTessellationStateCreateInfo*)malloc(sizeof(VkPipelineTessellationStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineTessellationStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineViewportStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineViewportStateCreateInfo...\n");
        VkPipelineViewportStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineViewportStateCreateInfo*)malloc(sizeof(VkPipelineViewportStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineViewportStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRasterizationStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineRasterizationStateCreateInfo...\n");
        VkPipelineRasterizationStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRasterizationStateCreateInfo*)malloc(sizeof(VkPipelineRasterizationStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineRasterizationStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineMultisampleStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineMultisampleStateCreateInfo...\n");
        VkPipelineMultisampleStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineMultisampleStateCreateInfo*)malloc(sizeof(VkPipelineMultisampleStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineMultisampleStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineColorBlendAttachmentState_pNext(json& name){
        printf("Deserializing VkPipelineColorBlendAttachmentState...\n");
        VkPipelineColorBlendAttachmentState* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineColorBlendAttachmentState*)malloc(sizeof(VkPipelineColorBlendAttachmentState));
[&]() {
*(result)=deserialize_VkPipelineColorBlendAttachmentState(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineColorBlendStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineColorBlendStateCreateInfo...\n");
        VkPipelineColorBlendStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineColorBlendStateCreateInfo*)malloc(sizeof(VkPipelineColorBlendStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineColorBlendStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineDynamicStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineDynamicStateCreateInfo...\n");
        VkPipelineDynamicStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineDynamicStateCreateInfo*)malloc(sizeof(VkPipelineDynamicStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineDynamicStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkStencilOpState_pNext(json& name){
        printf("Deserializing VkStencilOpState...\n");
        VkStencilOpState* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkStencilOpState*)malloc(sizeof(VkStencilOpState));
[&]() {
*(result)=deserialize_VkStencilOpState(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineDepthStencilStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineDepthStencilStateCreateInfo...\n");
        VkPipelineDepthStencilStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineDepthStencilStateCreateInfo*)malloc(sizeof(VkPipelineDepthStencilStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineDepthStencilStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGraphicsPipelineCreateInfo_pNext(json& name){
        printf("Deserializing VkGraphicsPipelineCreateInfo...\n");
        VkGraphicsPipelineCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGraphicsPipelineCreateInfo*)malloc(sizeof(VkGraphicsPipelineCreateInfo));
[&]() {
*(result)=deserialize_VkGraphicsPipelineCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCacheCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineCacheCreateInfo...\n");
        VkPipelineCacheCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCacheCreateInfo*)malloc(sizeof(VkPipelineCacheCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineCacheCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCacheHeaderVersionOne_pNext(json& name){
        printf("Deserializing VkPipelineCacheHeaderVersionOne...\n");
        VkPipelineCacheHeaderVersionOne* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCacheHeaderVersionOne*)malloc(sizeof(VkPipelineCacheHeaderVersionOne));
[&]() {
*(result)=deserialize_VkPipelineCacheHeaderVersionOne(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPushConstantRange_pNext(json& name){
        printf("Deserializing VkPushConstantRange...\n");
        VkPushConstantRange* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPushConstantRange*)malloc(sizeof(VkPushConstantRange));
[&]() {
*(result)=deserialize_VkPushConstantRange(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineLayoutCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineLayoutCreateInfo...\n");
        VkPipelineLayoutCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineLayoutCreateInfo*)malloc(sizeof(VkPipelineLayoutCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineLayoutCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerCreateInfo_pNext(json& name){
        printf("Deserializing VkSamplerCreateInfo...\n");
        VkSamplerCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerCreateInfo*)malloc(sizeof(VkSamplerCreateInfo));
[&]() {
*(result)=deserialize_VkSamplerCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandPoolCreateInfo_pNext(json& name){
        printf("Deserializing VkCommandPoolCreateInfo...\n");
        VkCommandPoolCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandPoolCreateInfo*)malloc(sizeof(VkCommandPoolCreateInfo));
[&]() {
*(result)=deserialize_VkCommandPoolCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferAllocateInfo_pNext(json& name){
        printf("Deserializing VkCommandBufferAllocateInfo...\n");
        VkCommandBufferAllocateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferAllocateInfo*)malloc(sizeof(VkCommandBufferAllocateInfo));
[&]() {
*(result)=deserialize_VkCommandBufferAllocateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferInheritanceInfo_pNext(json& name){
        printf("Deserializing VkCommandBufferInheritanceInfo...\n");
        VkCommandBufferInheritanceInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferInheritanceInfo*)malloc(sizeof(VkCommandBufferInheritanceInfo));
[&]() {
*(result)=deserialize_VkCommandBufferInheritanceInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferBeginInfo_pNext(json& name){
        printf("Deserializing VkCommandBufferBeginInfo...\n");
        VkCommandBufferBeginInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferBeginInfo*)malloc(sizeof(VkCommandBufferBeginInfo));
[&]() {
*(result)=deserialize_VkCommandBufferBeginInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassBeginInfo_pNext(json& name){
        printf("Deserializing VkRenderPassBeginInfo...\n");
        VkRenderPassBeginInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassBeginInfo*)malloc(sizeof(VkRenderPassBeginInfo));
[&]() {
*(result)=deserialize_VkRenderPassBeginInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkClearColorValue_pNext(json& name){
        printf("Deserializing VkClearColorValue...\n");
        VkClearColorValue* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkClearColorValue*)malloc(sizeof(VkClearColorValue));
[&]() {
*(result)=deserialize_VkClearColorValue(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkClearDepthStencilValue_pNext(json& name){
        printf("Deserializing VkClearDepthStencilValue...\n");
        VkClearDepthStencilValue* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkClearDepthStencilValue*)malloc(sizeof(VkClearDepthStencilValue));
[&]() {
*(result)=deserialize_VkClearDepthStencilValue(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkClearValue_pNext(json& name){
        printf("Deserializing VkClearValue...\n");
        VkClearValue* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkClearValue*)malloc(sizeof(VkClearValue));
[&]() {
*(result)=deserialize_VkClearValue(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkClearAttachment_pNext(json& name){
        printf("Deserializing VkClearAttachment...\n");
        VkClearAttachment* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkClearAttachment*)malloc(sizeof(VkClearAttachment));
[&]() {
*(result)=deserialize_VkClearAttachment(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentDescription_pNext(json& name){
        printf("Deserializing VkAttachmentDescription...\n");
        VkAttachmentDescription* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentDescription*)malloc(sizeof(VkAttachmentDescription));
[&]() {
*(result)=deserialize_VkAttachmentDescription(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentReference_pNext(json& name){
        printf("Deserializing VkAttachmentReference...\n");
        VkAttachmentReference* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentReference*)malloc(sizeof(VkAttachmentReference));
[&]() {
*(result)=deserialize_VkAttachmentReference(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDescription_pNext(json& name){
        printf("Deserializing VkSubpassDescription...\n");
        VkSubpassDescription* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDescription*)malloc(sizeof(VkSubpassDescription));
[&]() {
*(result)=deserialize_VkSubpassDescription(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDependency_pNext(json& name){
        printf("Deserializing VkSubpassDependency...\n");
        VkSubpassDependency* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDependency*)malloc(sizeof(VkSubpassDependency));
[&]() {
*(result)=deserialize_VkSubpassDependency(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassCreateInfo_pNext(json& name){
        printf("Deserializing VkRenderPassCreateInfo...\n");
        VkRenderPassCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassCreateInfo*)malloc(sizeof(VkRenderPassCreateInfo));
[&]() {
*(result)=deserialize_VkRenderPassCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkEventCreateInfo_pNext(json& name){
        printf("Deserializing VkEventCreateInfo...\n");
        VkEventCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkEventCreateInfo*)malloc(sizeof(VkEventCreateInfo));
[&]() {
*(result)=deserialize_VkEventCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFenceCreateInfo_pNext(json& name){
        printf("Deserializing VkFenceCreateInfo...\n");
        VkFenceCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFenceCreateInfo*)malloc(sizeof(VkFenceCreateInfo));
[&]() {
*(result)=deserialize_VkFenceCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFeatures...\n");
        VkPhysicalDeviceFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFeatures*)malloc(sizeof(VkPhysicalDeviceFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSparseProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSparseProperties...\n");
        VkPhysicalDeviceSparseProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSparseProperties*)malloc(sizeof(VkPhysicalDeviceSparseProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSparseProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceLimits_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceLimits...\n");
        VkPhysicalDeviceLimits* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceLimits*)malloc(sizeof(VkPhysicalDeviceLimits));
[&]() {
*(result)=deserialize_VkPhysicalDeviceLimits(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreCreateInfo_pNext(json& name){
        printf("Deserializing VkSemaphoreCreateInfo...\n");
        VkSemaphoreCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreCreateInfo*)malloc(sizeof(VkSemaphoreCreateInfo));
[&]() {
*(result)=deserialize_VkSemaphoreCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueryPoolCreateInfo_pNext(json& name){
        printf("Deserializing VkQueryPoolCreateInfo...\n");
        VkQueryPoolCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueryPoolCreateInfo*)malloc(sizeof(VkQueryPoolCreateInfo));
[&]() {
*(result)=deserialize_VkQueryPoolCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFramebufferCreateInfo_pNext(json& name){
        printf("Deserializing VkFramebufferCreateInfo...\n");
        VkFramebufferCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFramebufferCreateInfo*)malloc(sizeof(VkFramebufferCreateInfo));
[&]() {
*(result)=deserialize_VkFramebufferCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrawIndirectCommand_pNext(json& name){
        printf("Deserializing VkDrawIndirectCommand...\n");
        VkDrawIndirectCommand* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrawIndirectCommand*)malloc(sizeof(VkDrawIndirectCommand));
[&]() {
*(result)=deserialize_VkDrawIndirectCommand(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrawIndexedIndirectCommand_pNext(json& name){
        printf("Deserializing VkDrawIndexedIndirectCommand...\n");
        VkDrawIndexedIndirectCommand* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrawIndexedIndirectCommand*)malloc(sizeof(VkDrawIndexedIndirectCommand));
[&]() {
*(result)=deserialize_VkDrawIndexedIndirectCommand(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDispatchIndirectCommand_pNext(json& name){
        printf("Deserializing VkDispatchIndirectCommand...\n");
        VkDispatchIndirectCommand* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDispatchIndirectCommand*)malloc(sizeof(VkDispatchIndirectCommand));
[&]() {
*(result)=deserialize_VkDispatchIndirectCommand(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMultiDrawInfoEXT_pNext(json& name){
        printf("Deserializing VkMultiDrawInfoEXT...\n");
        VkMultiDrawInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMultiDrawInfoEXT*)malloc(sizeof(VkMultiDrawInfoEXT));
[&]() {
*(result)=deserialize_VkMultiDrawInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMultiDrawIndexedInfoEXT_pNext(json& name){
        printf("Deserializing VkMultiDrawIndexedInfoEXT...\n");
        VkMultiDrawIndexedInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMultiDrawIndexedInfoEXT*)malloc(sizeof(VkMultiDrawIndexedInfoEXT));
[&]() {
*(result)=deserialize_VkMultiDrawIndexedInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubmitInfo_pNext(json& name){
        printf("Deserializing VkSubmitInfo...\n");
        VkSubmitInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubmitInfo*)malloc(sizeof(VkSubmitInfo));
[&]() {
*(result)=deserialize_VkSubmitInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPropertiesKHR_pNext(json& name){
        printf("Deserializing VkDisplayPropertiesKHR...\n");
        VkDisplayPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPropertiesKHR*)malloc(sizeof(VkDisplayPropertiesKHR));
[&]() {
*(result)=deserialize_VkDisplayPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPlanePropertiesKHR_pNext(json& name){
        printf("Deserializing VkDisplayPlanePropertiesKHR...\n");
        VkDisplayPlanePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPlanePropertiesKHR*)malloc(sizeof(VkDisplayPlanePropertiesKHR));
[&]() {
*(result)=deserialize_VkDisplayPlanePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayModeParametersKHR_pNext(json& name){
        printf("Deserializing VkDisplayModeParametersKHR...\n");
        VkDisplayModeParametersKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayModeParametersKHR*)malloc(sizeof(VkDisplayModeParametersKHR));
[&]() {
*(result)=deserialize_VkDisplayModeParametersKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayModePropertiesKHR_pNext(json& name){
        printf("Deserializing VkDisplayModePropertiesKHR...\n");
        VkDisplayModePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayModePropertiesKHR*)malloc(sizeof(VkDisplayModePropertiesKHR));
[&]() {
*(result)=deserialize_VkDisplayModePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayModeCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkDisplayModeCreateInfoKHR...\n");
        VkDisplayModeCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayModeCreateInfoKHR*)malloc(sizeof(VkDisplayModeCreateInfoKHR));
[&]() {
*(result)=deserialize_VkDisplayModeCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPlaneCapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkDisplayPlaneCapabilitiesKHR...\n");
        VkDisplayPlaneCapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPlaneCapabilitiesKHR*)malloc(sizeof(VkDisplayPlaneCapabilitiesKHR));
[&]() {
*(result)=deserialize_VkDisplayPlaneCapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplaySurfaceCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkDisplaySurfaceCreateInfoKHR...\n");
        VkDisplaySurfaceCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplaySurfaceCreateInfoKHR*)malloc(sizeof(VkDisplaySurfaceCreateInfoKHR));
[&]() {
*(result)=deserialize_VkDisplaySurfaceCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPresentInfoKHR_pNext(json& name){
        printf("Deserializing VkDisplayPresentInfoKHR...\n");
        VkDisplayPresentInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPresentInfoKHR*)malloc(sizeof(VkDisplayPresentInfoKHR));
[&]() {
*(result)=deserialize_VkDisplayPresentInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfaceCapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkSurfaceCapabilitiesKHR...\n");
        VkSurfaceCapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfaceCapabilitiesKHR*)malloc(sizeof(VkSurfaceCapabilitiesKHR));
[&]() {
*(result)=deserialize_VkSurfaceCapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkXlibSurfaceCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkXlibSurfaceCreateInfoKHR...\n");
        VkXlibSurfaceCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkXlibSurfaceCreateInfoKHR*)malloc(sizeof(VkXlibSurfaceCreateInfoKHR));
[&]() {
*(result)=deserialize_VkXlibSurfaceCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkXcbSurfaceCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkXcbSurfaceCreateInfoKHR...\n");
        VkXcbSurfaceCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkXcbSurfaceCreateInfoKHR*)malloc(sizeof(VkXcbSurfaceCreateInfoKHR));
[&]() {
*(result)=deserialize_VkXcbSurfaceCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfaceFormatKHR_pNext(json& name){
        printf("Deserializing VkSurfaceFormatKHR...\n");
        VkSurfaceFormatKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfaceFormatKHR*)malloc(sizeof(VkSurfaceFormatKHR));
[&]() {
*(result)=deserialize_VkSurfaceFormatKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkSwapchainCreateInfoKHR...\n");
        VkSwapchainCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainCreateInfoKHR*)malloc(sizeof(VkSwapchainCreateInfoKHR));
[&]() {
*(result)=deserialize_VkSwapchainCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPresentInfoKHR_pNext(json& name){
        printf("Deserializing VkPresentInfoKHR...\n");
        VkPresentInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPresentInfoKHR*)malloc(sizeof(VkPresentInfoKHR));
[&]() {
*(result)=deserialize_VkPresentInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugReportCallbackCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkDebugReportCallbackCreateInfoEXT...\n");
        VkDebugReportCallbackCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugReportCallbackCreateInfoEXT*)malloc(sizeof(VkDebugReportCallbackCreateInfoEXT));
[&]() {
*(result)=deserialize_VkDebugReportCallbackCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkValidationFlagsEXT_pNext(json& name){
        printf("Deserializing VkValidationFlagsEXT...\n");
        VkValidationFlagsEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkValidationFlagsEXT*)malloc(sizeof(VkValidationFlagsEXT));
[&]() {
*(result)=deserialize_VkValidationFlagsEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkValidationFeaturesEXT_pNext(json& name){
        printf("Deserializing VkValidationFeaturesEXT...\n");
        VkValidationFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkValidationFeaturesEXT*)malloc(sizeof(VkValidationFeaturesEXT));
[&]() {
*(result)=deserialize_VkValidationFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRasterizationStateRasterizationOrderAMD_pNext(json& name){
        printf("Deserializing VkPipelineRasterizationStateRasterizationOrderAMD...\n");
        VkPipelineRasterizationStateRasterizationOrderAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRasterizationStateRasterizationOrderAMD*)malloc(sizeof(VkPipelineRasterizationStateRasterizationOrderAMD));
[&]() {
*(result)=deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugMarkerObjectNameInfoEXT_pNext(json& name){
        printf("Deserializing VkDebugMarkerObjectNameInfoEXT...\n");
        VkDebugMarkerObjectNameInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugMarkerObjectNameInfoEXT*)malloc(sizeof(VkDebugMarkerObjectNameInfoEXT));
[&]() {
*(result)=deserialize_VkDebugMarkerObjectNameInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugMarkerObjectTagInfoEXT_pNext(json& name){
        printf("Deserializing VkDebugMarkerObjectTagInfoEXT...\n");
        VkDebugMarkerObjectTagInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugMarkerObjectTagInfoEXT*)malloc(sizeof(VkDebugMarkerObjectTagInfoEXT));
[&]() {
*(result)=deserialize_VkDebugMarkerObjectTagInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugMarkerMarkerInfoEXT_pNext(json& name){
        printf("Deserializing VkDebugMarkerMarkerInfoEXT...\n");
        VkDebugMarkerMarkerInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugMarkerMarkerInfoEXT*)malloc(sizeof(VkDebugMarkerMarkerInfoEXT));
[&]() {
*(result)=deserialize_VkDebugMarkerMarkerInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDedicatedAllocationImageCreateInfoNV_pNext(json& name){
        printf("Deserializing VkDedicatedAllocationImageCreateInfoNV...\n");
        VkDedicatedAllocationImageCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDedicatedAllocationImageCreateInfoNV*)malloc(sizeof(VkDedicatedAllocationImageCreateInfoNV));
[&]() {
*(result)=deserialize_VkDedicatedAllocationImageCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDedicatedAllocationBufferCreateInfoNV_pNext(json& name){
        printf("Deserializing VkDedicatedAllocationBufferCreateInfoNV...\n");
        VkDedicatedAllocationBufferCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDedicatedAllocationBufferCreateInfoNV*)malloc(sizeof(VkDedicatedAllocationBufferCreateInfoNV));
[&]() {
*(result)=deserialize_VkDedicatedAllocationBufferCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDedicatedAllocationMemoryAllocateInfoNV_pNext(json& name){
        printf("Deserializing VkDedicatedAllocationMemoryAllocateInfoNV...\n");
        VkDedicatedAllocationMemoryAllocateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDedicatedAllocationMemoryAllocateInfoNV*)malloc(sizeof(VkDedicatedAllocationMemoryAllocateInfoNV));
[&]() {
*(result)=deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalImageFormatPropertiesNV_pNext(json& name){
        printf("Deserializing VkExternalImageFormatPropertiesNV...\n");
        VkExternalImageFormatPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalImageFormatPropertiesNV*)malloc(sizeof(VkExternalImageFormatPropertiesNV));
[&]() {
*(result)=deserialize_VkExternalImageFormatPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryImageCreateInfoNV_pNext(json& name){
        printf("Deserializing VkExternalMemoryImageCreateInfoNV...\n");
        VkExternalMemoryImageCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryImageCreateInfoNV*)malloc(sizeof(VkExternalMemoryImageCreateInfoNV));
[&]() {
*(result)=deserialize_VkExternalMemoryImageCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExportMemoryAllocateInfoNV_pNext(json& name){
        printf("Deserializing VkExportMemoryAllocateInfoNV...\n");
        VkExportMemoryAllocateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExportMemoryAllocateInfoNV*)malloc(sizeof(VkExportMemoryAllocateInfoNV));
[&]() {
*(result)=deserialize_VkExportMemoryAllocateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV...\n");
        VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV*)malloc(sizeof(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV...\n");
        VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV*)malloc(sizeof(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDevicePrivateDataCreateInfo_pNext(json& name){
        printf("Deserializing VkDevicePrivateDataCreateInfo...\n");
        VkDevicePrivateDataCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDevicePrivateDataCreateInfo*)malloc(sizeof(VkDevicePrivateDataCreateInfo));
[&]() {
*(result)=deserialize_VkDevicePrivateDataCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDevicePrivateDataCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkDevicePrivateDataCreateInfoEXT...\n");
        VkDevicePrivateDataCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDevicePrivateDataCreateInfoEXT*)malloc(sizeof(VkDevicePrivateDataCreateInfoEXT));
[&]() {
*(result)=deserialize_VkDevicePrivateDataCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPrivateDataSlotCreateInfo_pNext(json& name){
        printf("Deserializing VkPrivateDataSlotCreateInfo...\n");
        VkPrivateDataSlotCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPrivateDataSlotCreateInfo*)malloc(sizeof(VkPrivateDataSlotCreateInfo));
[&]() {
*(result)=deserialize_VkPrivateDataSlotCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPrivateDataSlotCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPrivateDataSlotCreateInfoEXT...\n");
        VkPrivateDataSlotCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPrivateDataSlotCreateInfoEXT*)malloc(sizeof(VkPrivateDataSlotCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPrivateDataSlotCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePrivateDataFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePrivateDataFeatures...\n");
        VkPhysicalDevicePrivateDataFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePrivateDataFeatures*)malloc(sizeof(VkPhysicalDevicePrivateDataFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDevicePrivateDataFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePrivateDataFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePrivateDataFeaturesEXT...\n");
        VkPhysicalDevicePrivateDataFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePrivateDataFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePrivateDataFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV...\n");
        VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV*)malloc(sizeof(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiDrawPropertiesEXT...\n");
        VkPhysicalDeviceMultiDrawPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiDrawPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceMultiDrawPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGraphicsShaderGroupCreateInfoNV_pNext(json& name){
        printf("Deserializing VkGraphicsShaderGroupCreateInfoNV...\n");
        VkGraphicsShaderGroupCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGraphicsShaderGroupCreateInfoNV*)malloc(sizeof(VkGraphicsShaderGroupCreateInfoNV));
[&]() {
*(result)=deserialize_VkGraphicsShaderGroupCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV_pNext(json& name){
        printf("Deserializing VkGraphicsPipelineShaderGroupsCreateInfoNV...\n");
        VkGraphicsPipelineShaderGroupsCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGraphicsPipelineShaderGroupsCreateInfoNV*)malloc(sizeof(VkGraphicsPipelineShaderGroupsCreateInfoNV));
[&]() {
*(result)=deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindShaderGroupIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkBindShaderGroupIndirectCommandNV...\n");
        VkBindShaderGroupIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindShaderGroupIndirectCommandNV*)malloc(sizeof(VkBindShaderGroupIndirectCommandNV));
[&]() {
*(result)=deserialize_VkBindShaderGroupIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindIndexBufferIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkBindIndexBufferIndirectCommandNV...\n");
        VkBindIndexBufferIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindIndexBufferIndirectCommandNV*)malloc(sizeof(VkBindIndexBufferIndirectCommandNV));
[&]() {
*(result)=deserialize_VkBindIndexBufferIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindVertexBufferIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkBindVertexBufferIndirectCommandNV...\n");
        VkBindVertexBufferIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindVertexBufferIndirectCommandNV*)malloc(sizeof(VkBindVertexBufferIndirectCommandNV));
[&]() {
*(result)=deserialize_VkBindVertexBufferIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSetStateFlagsIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkSetStateFlagsIndirectCommandNV...\n");
        VkSetStateFlagsIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSetStateFlagsIndirectCommandNV*)malloc(sizeof(VkSetStateFlagsIndirectCommandNV));
[&]() {
*(result)=deserialize_VkSetStateFlagsIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkIndirectCommandsStreamNV_pNext(json& name){
        printf("Deserializing VkIndirectCommandsStreamNV...\n");
        VkIndirectCommandsStreamNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkIndirectCommandsStreamNV*)malloc(sizeof(VkIndirectCommandsStreamNV));
[&]() {
*(result)=deserialize_VkIndirectCommandsStreamNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkIndirectCommandsLayoutTokenNV_pNext(json& name){
        printf("Deserializing VkIndirectCommandsLayoutTokenNV...\n");
        VkIndirectCommandsLayoutTokenNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkIndirectCommandsLayoutTokenNV*)malloc(sizeof(VkIndirectCommandsLayoutTokenNV));
[&]() {
*(result)=deserialize_VkIndirectCommandsLayoutTokenNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkIndirectCommandsLayoutCreateInfoNV_pNext(json& name){
        printf("Deserializing VkIndirectCommandsLayoutCreateInfoNV...\n");
        VkIndirectCommandsLayoutCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkIndirectCommandsLayoutCreateInfoNV*)malloc(sizeof(VkIndirectCommandsLayoutCreateInfoNV));
[&]() {
*(result)=deserialize_VkIndirectCommandsLayoutCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGeneratedCommandsInfoNV_pNext(json& name){
        printf("Deserializing VkGeneratedCommandsInfoNV...\n");
        VkGeneratedCommandsInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGeneratedCommandsInfoNV*)malloc(sizeof(VkGeneratedCommandsInfoNV));
[&]() {
*(result)=deserialize_VkGeneratedCommandsInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV_pNext(json& name){
        printf("Deserializing VkGeneratedCommandsMemoryRequirementsInfoNV...\n");
        VkGeneratedCommandsMemoryRequirementsInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGeneratedCommandsMemoryRequirementsInfoNV*)malloc(sizeof(VkGeneratedCommandsMemoryRequirementsInfoNV));
[&]() {
*(result)=deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineIndirectDeviceAddressInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineIndirectDeviceAddressInfoNV...\n");
        VkPipelineIndirectDeviceAddressInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineIndirectDeviceAddressInfoNV*)malloc(sizeof(VkPipelineIndirectDeviceAddressInfoNV));
[&]() {
*(result)=deserialize_VkPipelineIndirectDeviceAddressInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindPipelineIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkBindPipelineIndirectCommandNV...\n");
        VkBindPipelineIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindPipelineIndirectCommandNV*)malloc(sizeof(VkBindPipelineIndirectCommandNV));
[&]() {
*(result)=deserialize_VkBindPipelineIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFeatures2_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFeatures2...\n");
        VkPhysicalDeviceFeatures2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFeatures2*)malloc(sizeof(VkPhysicalDeviceFeatures2));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFeatures2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFeatures2KHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFeatures2KHR...\n");
        VkPhysicalDeviceFeatures2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFeatures2KHR*)malloc(sizeof(VkPhysicalDeviceFeatures2KHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFeatures2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceProperties2_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceProperties2...\n");
        VkPhysicalDeviceProperties2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceProperties2*)malloc(sizeof(VkPhysicalDeviceProperties2));
[&]() {
*(result)=deserialize_VkPhysicalDeviceProperties2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceProperties2KHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceProperties2KHR...\n");
        VkPhysicalDeviceProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceProperties2KHR*)malloc(sizeof(VkPhysicalDeviceProperties2KHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFormatProperties2_pNext(json& name){
        printf("Deserializing VkFormatProperties2...\n");
        VkFormatProperties2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFormatProperties2*)malloc(sizeof(VkFormatProperties2));
[&]() {
*(result)=deserialize_VkFormatProperties2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFormatProperties2KHR_pNext(json& name){
        printf("Deserializing VkFormatProperties2KHR...\n");
        VkFormatProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFormatProperties2KHR*)malloc(sizeof(VkFormatProperties2KHR));
[&]() {
*(result)=deserialize_VkFormatProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageFormatProperties2_pNext(json& name){
        printf("Deserializing VkImageFormatProperties2...\n");
        VkImageFormatProperties2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageFormatProperties2*)malloc(sizeof(VkImageFormatProperties2));
[&]() {
*(result)=deserialize_VkImageFormatProperties2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageFormatProperties2KHR_pNext(json& name){
        printf("Deserializing VkImageFormatProperties2KHR...\n");
        VkImageFormatProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageFormatProperties2KHR*)malloc(sizeof(VkImageFormatProperties2KHR));
[&]() {
*(result)=deserialize_VkImageFormatProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageFormatInfo2_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageFormatInfo2...\n");
        VkPhysicalDeviceImageFormatInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageFormatInfo2*)malloc(sizeof(VkPhysicalDeviceImageFormatInfo2));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageFormatInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageFormatInfo2KHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageFormatInfo2KHR...\n");
        VkPhysicalDeviceImageFormatInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageFormatInfo2KHR*)malloc(sizeof(VkPhysicalDeviceImageFormatInfo2KHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageFormatInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyProperties2_pNext(json& name){
        printf("Deserializing VkQueueFamilyProperties2...\n");
        VkQueueFamilyProperties2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyProperties2*)malloc(sizeof(VkQueueFamilyProperties2));
[&]() {
*(result)=deserialize_VkQueueFamilyProperties2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyProperties2KHR_pNext(json& name){
        printf("Deserializing VkQueueFamilyProperties2KHR...\n");
        VkQueueFamilyProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyProperties2KHR*)malloc(sizeof(VkQueueFamilyProperties2KHR));
[&]() {
*(result)=deserialize_VkQueueFamilyProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMemoryProperties2_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMemoryProperties2...\n");
        VkPhysicalDeviceMemoryProperties2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMemoryProperties2*)malloc(sizeof(VkPhysicalDeviceMemoryProperties2));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMemoryProperties2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMemoryProperties2KHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMemoryProperties2KHR...\n");
        VkPhysicalDeviceMemoryProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMemoryProperties2KHR*)malloc(sizeof(VkPhysicalDeviceMemoryProperties2KHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMemoryProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageFormatProperties2_pNext(json& name){
        printf("Deserializing VkSparseImageFormatProperties2...\n");
        VkSparseImageFormatProperties2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageFormatProperties2*)malloc(sizeof(VkSparseImageFormatProperties2));
[&]() {
*(result)=deserialize_VkSparseImageFormatProperties2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageFormatProperties2KHR_pNext(json& name){
        printf("Deserializing VkSparseImageFormatProperties2KHR...\n");
        VkSparseImageFormatProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageFormatProperties2KHR*)malloc(sizeof(VkSparseImageFormatProperties2KHR));
[&]() {
*(result)=deserialize_VkSparseImageFormatProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSparseImageFormatInfo2_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSparseImageFormatInfo2...\n");
        VkPhysicalDeviceSparseImageFormatInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSparseImageFormatInfo2*)malloc(sizeof(VkPhysicalDeviceSparseImageFormatInfo2));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSparseImageFormatInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSparseImageFormatInfo2KHR...\n");
        VkPhysicalDeviceSparseImageFormatInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSparseImageFormatInfo2KHR*)malloc(sizeof(VkPhysicalDeviceSparseImageFormatInfo2KHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePushDescriptorPropertiesKHR...\n");
        VkPhysicalDevicePushDescriptorPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePushDescriptorPropertiesKHR*)malloc(sizeof(VkPhysicalDevicePushDescriptorPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkConformanceVersion_pNext(json& name){
        printf("Deserializing VkConformanceVersion...\n");
        VkConformanceVersion* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkConformanceVersion*)malloc(sizeof(VkConformanceVersion));
[&]() {
*(result)=deserialize_VkConformanceVersion(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkConformanceVersionKHR_pNext(json& name){
        printf("Deserializing VkConformanceVersionKHR...\n");
        VkConformanceVersionKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkConformanceVersionKHR*)malloc(sizeof(VkConformanceVersionKHR));
[&]() {
*(result)=deserialize_VkConformanceVersionKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDriverProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDriverProperties...\n");
        VkPhysicalDeviceDriverProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDriverProperties*)malloc(sizeof(VkPhysicalDeviceDriverProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDriverProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDriverPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDriverPropertiesKHR...\n");
        VkPhysicalDeviceDriverPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDriverPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceDriverPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDriverPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPresentRegionsKHR_pNext(json& name){
        printf("Deserializing VkPresentRegionsKHR...\n");
        VkPresentRegionsKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPresentRegionsKHR*)malloc(sizeof(VkPresentRegionsKHR));
[&]() {
*(result)=deserialize_VkPresentRegionsKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPresentRegionKHR_pNext(json& name){
        printf("Deserializing VkPresentRegionKHR...\n");
        VkPresentRegionKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPresentRegionKHR*)malloc(sizeof(VkPresentRegionKHR));
[&]() {
*(result)=deserialize_VkPresentRegionKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRectLayerKHR_pNext(json& name){
        printf("Deserializing VkRectLayerKHR...\n");
        VkRectLayerKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRectLayerKHR*)malloc(sizeof(VkRectLayerKHR));
[&]() {
*(result)=deserialize_VkRectLayerKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVariablePointersFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVariablePointersFeatures...\n");
        VkPhysicalDeviceVariablePointersFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVariablePointersFeatures*)malloc(sizeof(VkPhysicalDeviceVariablePointersFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVariablePointersFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVariablePointersFeaturesKHR...\n");
        VkPhysicalDeviceVariablePointersFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVariablePointersFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceVariablePointersFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVariablePointerFeaturesKHR...\n");
        VkPhysicalDeviceVariablePointerFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVariablePointerFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceVariablePointerFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVariablePointerFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVariablePointerFeatures...\n");
        VkPhysicalDeviceVariablePointerFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVariablePointerFeatures*)malloc(sizeof(VkPhysicalDeviceVariablePointerFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVariablePointerFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryProperties_pNext(json& name){
        printf("Deserializing VkExternalMemoryProperties...\n");
        VkExternalMemoryProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryProperties*)malloc(sizeof(VkExternalMemoryProperties));
[&]() {
*(result)=deserialize_VkExternalMemoryProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryPropertiesKHR_pNext(json& name){
        printf("Deserializing VkExternalMemoryPropertiesKHR...\n");
        VkExternalMemoryPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryPropertiesKHR*)malloc(sizeof(VkExternalMemoryPropertiesKHR));
[&]() {
*(result)=deserialize_VkExternalMemoryPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalImageFormatInfo_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalImageFormatInfo...\n");
        VkPhysicalDeviceExternalImageFormatInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalImageFormatInfo*)malloc(sizeof(VkPhysicalDeviceExternalImageFormatInfo));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalImageFormatInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalImageFormatInfoKHR...\n");
        VkPhysicalDeviceExternalImageFormatInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalImageFormatInfoKHR*)malloc(sizeof(VkPhysicalDeviceExternalImageFormatInfoKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalImageFormatProperties_pNext(json& name){
        printf("Deserializing VkExternalImageFormatProperties...\n");
        VkExternalImageFormatProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalImageFormatProperties*)malloc(sizeof(VkExternalImageFormatProperties));
[&]() {
*(result)=deserialize_VkExternalImageFormatProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalImageFormatPropertiesKHR_pNext(json& name){
        printf("Deserializing VkExternalImageFormatPropertiesKHR...\n");
        VkExternalImageFormatPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalImageFormatPropertiesKHR*)malloc(sizeof(VkExternalImageFormatPropertiesKHR));
[&]() {
*(result)=deserialize_VkExternalImageFormatPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalBufferInfo_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalBufferInfo...\n");
        VkPhysicalDeviceExternalBufferInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalBufferInfo*)malloc(sizeof(VkPhysicalDeviceExternalBufferInfo));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalBufferInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalBufferInfoKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalBufferInfoKHR...\n");
        VkPhysicalDeviceExternalBufferInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalBufferInfoKHR*)malloc(sizeof(VkPhysicalDeviceExternalBufferInfoKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalBufferInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalBufferProperties_pNext(json& name){
        printf("Deserializing VkExternalBufferProperties...\n");
        VkExternalBufferProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalBufferProperties*)malloc(sizeof(VkExternalBufferProperties));
[&]() {
*(result)=deserialize_VkExternalBufferProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalBufferPropertiesKHR_pNext(json& name){
        printf("Deserializing VkExternalBufferPropertiesKHR...\n");
        VkExternalBufferPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalBufferPropertiesKHR*)malloc(sizeof(VkExternalBufferPropertiesKHR));
[&]() {
*(result)=deserialize_VkExternalBufferPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceIDProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceIDProperties...\n");
        VkPhysicalDeviceIDProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceIDProperties*)malloc(sizeof(VkPhysicalDeviceIDProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceIDProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceIDPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceIDPropertiesKHR...\n");
        VkPhysicalDeviceIDPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceIDPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceIDPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceIDPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryImageCreateInfo_pNext(json& name){
        printf("Deserializing VkExternalMemoryImageCreateInfo...\n");
        VkExternalMemoryImageCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryImageCreateInfo*)malloc(sizeof(VkExternalMemoryImageCreateInfo));
[&]() {
*(result)=deserialize_VkExternalMemoryImageCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryImageCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkExternalMemoryImageCreateInfoKHR...\n");
        VkExternalMemoryImageCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryImageCreateInfoKHR*)malloc(sizeof(VkExternalMemoryImageCreateInfoKHR));
[&]() {
*(result)=deserialize_VkExternalMemoryImageCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryBufferCreateInfo_pNext(json& name){
        printf("Deserializing VkExternalMemoryBufferCreateInfo...\n");
        VkExternalMemoryBufferCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryBufferCreateInfo*)malloc(sizeof(VkExternalMemoryBufferCreateInfo));
[&]() {
*(result)=deserialize_VkExternalMemoryBufferCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryBufferCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkExternalMemoryBufferCreateInfoKHR...\n");
        VkExternalMemoryBufferCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryBufferCreateInfoKHR*)malloc(sizeof(VkExternalMemoryBufferCreateInfoKHR));
[&]() {
*(result)=deserialize_VkExternalMemoryBufferCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExportMemoryAllocateInfo_pNext(json& name){
        printf("Deserializing VkExportMemoryAllocateInfo...\n");
        VkExportMemoryAllocateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExportMemoryAllocateInfo*)malloc(sizeof(VkExportMemoryAllocateInfo));
[&]() {
*(result)=deserialize_VkExportMemoryAllocateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExportMemoryAllocateInfoKHR_pNext(json& name){
        printf("Deserializing VkExportMemoryAllocateInfoKHR...\n");
        VkExportMemoryAllocateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExportMemoryAllocateInfoKHR*)malloc(sizeof(VkExportMemoryAllocateInfoKHR));
[&]() {
*(result)=deserialize_VkExportMemoryAllocateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImportMemoryFdInfoKHR_pNext(json& name){
        printf("Deserializing VkImportMemoryFdInfoKHR...\n");
        VkImportMemoryFdInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImportMemoryFdInfoKHR*)malloc(sizeof(VkImportMemoryFdInfoKHR));
[&]() {
*(result)=deserialize_VkImportMemoryFdInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryFdPropertiesKHR_pNext(json& name){
        printf("Deserializing VkMemoryFdPropertiesKHR...\n");
        VkMemoryFdPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryFdPropertiesKHR*)malloc(sizeof(VkMemoryFdPropertiesKHR));
[&]() {
*(result)=deserialize_VkMemoryFdPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryGetFdInfoKHR_pNext(json& name){
        printf("Deserializing VkMemoryGetFdInfoKHR...\n");
        VkMemoryGetFdInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryGetFdInfoKHR*)malloc(sizeof(VkMemoryGetFdInfoKHR));
[&]() {
*(result)=deserialize_VkMemoryGetFdInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalSemaphoreInfo_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalSemaphoreInfo...\n");
        VkPhysicalDeviceExternalSemaphoreInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalSemaphoreInfo*)malloc(sizeof(VkPhysicalDeviceExternalSemaphoreInfo));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalSemaphoreInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalSemaphoreInfoKHR...\n");
        VkPhysicalDeviceExternalSemaphoreInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalSemaphoreInfoKHR*)malloc(sizeof(VkPhysicalDeviceExternalSemaphoreInfoKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalSemaphoreProperties_pNext(json& name){
        printf("Deserializing VkExternalSemaphoreProperties...\n");
        VkExternalSemaphoreProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalSemaphoreProperties*)malloc(sizeof(VkExternalSemaphoreProperties));
[&]() {
*(result)=deserialize_VkExternalSemaphoreProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalSemaphorePropertiesKHR_pNext(json& name){
        printf("Deserializing VkExternalSemaphorePropertiesKHR...\n");
        VkExternalSemaphorePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalSemaphorePropertiesKHR*)malloc(sizeof(VkExternalSemaphorePropertiesKHR));
[&]() {
*(result)=deserialize_VkExternalSemaphorePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExportSemaphoreCreateInfo_pNext(json& name){
        printf("Deserializing VkExportSemaphoreCreateInfo...\n");
        VkExportSemaphoreCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExportSemaphoreCreateInfo*)malloc(sizeof(VkExportSemaphoreCreateInfo));
[&]() {
*(result)=deserialize_VkExportSemaphoreCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExportSemaphoreCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkExportSemaphoreCreateInfoKHR...\n");
        VkExportSemaphoreCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExportSemaphoreCreateInfoKHR*)malloc(sizeof(VkExportSemaphoreCreateInfoKHR));
[&]() {
*(result)=deserialize_VkExportSemaphoreCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImportSemaphoreFdInfoKHR_pNext(json& name){
        printf("Deserializing VkImportSemaphoreFdInfoKHR...\n");
        VkImportSemaphoreFdInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImportSemaphoreFdInfoKHR*)malloc(sizeof(VkImportSemaphoreFdInfoKHR));
[&]() {
*(result)=deserialize_VkImportSemaphoreFdInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreGetFdInfoKHR_pNext(json& name){
        printf("Deserializing VkSemaphoreGetFdInfoKHR...\n");
        VkSemaphoreGetFdInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreGetFdInfoKHR*)malloc(sizeof(VkSemaphoreGetFdInfoKHR));
[&]() {
*(result)=deserialize_VkSemaphoreGetFdInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalFenceInfo_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalFenceInfo...\n");
        VkPhysicalDeviceExternalFenceInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalFenceInfo*)malloc(sizeof(VkPhysicalDeviceExternalFenceInfo));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalFenceInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalFenceInfoKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalFenceInfoKHR...\n");
        VkPhysicalDeviceExternalFenceInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalFenceInfoKHR*)malloc(sizeof(VkPhysicalDeviceExternalFenceInfoKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalFenceInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalFenceProperties_pNext(json& name){
        printf("Deserializing VkExternalFenceProperties...\n");
        VkExternalFenceProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalFenceProperties*)malloc(sizeof(VkExternalFenceProperties));
[&]() {
*(result)=deserialize_VkExternalFenceProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalFencePropertiesKHR_pNext(json& name){
        printf("Deserializing VkExternalFencePropertiesKHR...\n");
        VkExternalFencePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalFencePropertiesKHR*)malloc(sizeof(VkExternalFencePropertiesKHR));
[&]() {
*(result)=deserialize_VkExternalFencePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExportFenceCreateInfo_pNext(json& name){
        printf("Deserializing VkExportFenceCreateInfo...\n");
        VkExportFenceCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExportFenceCreateInfo*)malloc(sizeof(VkExportFenceCreateInfo));
[&]() {
*(result)=deserialize_VkExportFenceCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExportFenceCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkExportFenceCreateInfoKHR...\n");
        VkExportFenceCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExportFenceCreateInfoKHR*)malloc(sizeof(VkExportFenceCreateInfoKHR));
[&]() {
*(result)=deserialize_VkExportFenceCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImportFenceFdInfoKHR_pNext(json& name){
        printf("Deserializing VkImportFenceFdInfoKHR...\n");
        VkImportFenceFdInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImportFenceFdInfoKHR*)malloc(sizeof(VkImportFenceFdInfoKHR));
[&]() {
*(result)=deserialize_VkImportFenceFdInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFenceGetFdInfoKHR_pNext(json& name){
        printf("Deserializing VkFenceGetFdInfoKHR...\n");
        VkFenceGetFdInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFenceGetFdInfoKHR*)malloc(sizeof(VkFenceGetFdInfoKHR));
[&]() {
*(result)=deserialize_VkFenceGetFdInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiviewFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiviewFeatures...\n");
        VkPhysicalDeviceMultiviewFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiviewFeatures*)malloc(sizeof(VkPhysicalDeviceMultiviewFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiviewFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiviewFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiviewFeaturesKHR...\n");
        VkPhysicalDeviceMultiviewFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiviewFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceMultiviewFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiviewProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiviewProperties...\n");
        VkPhysicalDeviceMultiviewProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiviewProperties*)malloc(sizeof(VkPhysicalDeviceMultiviewProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiviewProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiviewPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiviewPropertiesKHR...\n");
        VkPhysicalDeviceMultiviewPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiviewPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceMultiviewPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassMultiviewCreateInfo_pNext(json& name){
        printf("Deserializing VkRenderPassMultiviewCreateInfo...\n");
        VkRenderPassMultiviewCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassMultiviewCreateInfo*)malloc(sizeof(VkRenderPassMultiviewCreateInfo));
[&]() {
*(result)=deserialize_VkRenderPassMultiviewCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassMultiviewCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkRenderPassMultiviewCreateInfoKHR...\n");
        VkRenderPassMultiviewCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassMultiviewCreateInfoKHR*)malloc(sizeof(VkRenderPassMultiviewCreateInfoKHR));
[&]() {
*(result)=deserialize_VkRenderPassMultiviewCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfaceCapabilities2EXT_pNext(json& name){
        printf("Deserializing VkSurfaceCapabilities2EXT...\n");
        VkSurfaceCapabilities2EXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfaceCapabilities2EXT*)malloc(sizeof(VkSurfaceCapabilities2EXT));
[&]() {
*(result)=deserialize_VkSurfaceCapabilities2EXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPowerInfoEXT_pNext(json& name){
        printf("Deserializing VkDisplayPowerInfoEXT...\n");
        VkDisplayPowerInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPowerInfoEXT*)malloc(sizeof(VkDisplayPowerInfoEXT));
[&]() {
*(result)=deserialize_VkDisplayPowerInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceEventInfoEXT_pNext(json& name){
        printf("Deserializing VkDeviceEventInfoEXT...\n");
        VkDeviceEventInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceEventInfoEXT*)malloc(sizeof(VkDeviceEventInfoEXT));
[&]() {
*(result)=deserialize_VkDeviceEventInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayEventInfoEXT_pNext(json& name){
        printf("Deserializing VkDisplayEventInfoEXT...\n");
        VkDisplayEventInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayEventInfoEXT*)malloc(sizeof(VkDisplayEventInfoEXT));
[&]() {
*(result)=deserialize_VkDisplayEventInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainCounterCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkSwapchainCounterCreateInfoEXT...\n");
        VkSwapchainCounterCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainCounterCreateInfoEXT*)malloc(sizeof(VkSwapchainCounterCreateInfoEXT));
[&]() {
*(result)=deserialize_VkSwapchainCounterCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceGroupProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceGroupProperties...\n");
        VkPhysicalDeviceGroupProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceGroupProperties*)malloc(sizeof(VkPhysicalDeviceGroupProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceGroupProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceGroupPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceGroupPropertiesKHR...\n");
        VkPhysicalDeviceGroupPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceGroupPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceGroupPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceGroupPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryAllocateFlagsInfo_pNext(json& name){
        printf("Deserializing VkMemoryAllocateFlagsInfo...\n");
        VkMemoryAllocateFlagsInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryAllocateFlagsInfo*)malloc(sizeof(VkMemoryAllocateFlagsInfo));
[&]() {
*(result)=deserialize_VkMemoryAllocateFlagsInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryAllocateFlagsInfoKHR_pNext(json& name){
        printf("Deserializing VkMemoryAllocateFlagsInfoKHR...\n");
        VkMemoryAllocateFlagsInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryAllocateFlagsInfoKHR*)malloc(sizeof(VkMemoryAllocateFlagsInfoKHR));
[&]() {
*(result)=deserialize_VkMemoryAllocateFlagsInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindBufferMemoryInfo_pNext(json& name){
        printf("Deserializing VkBindBufferMemoryInfo...\n");
        VkBindBufferMemoryInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindBufferMemoryInfo*)malloc(sizeof(VkBindBufferMemoryInfo));
[&]() {
*(result)=deserialize_VkBindBufferMemoryInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindBufferMemoryInfoKHR_pNext(json& name){
        printf("Deserializing VkBindBufferMemoryInfoKHR...\n");
        VkBindBufferMemoryInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindBufferMemoryInfoKHR*)malloc(sizeof(VkBindBufferMemoryInfoKHR));
[&]() {
*(result)=deserialize_VkBindBufferMemoryInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindBufferMemoryDeviceGroupInfo_pNext(json& name){
        printf("Deserializing VkBindBufferMemoryDeviceGroupInfo...\n");
        VkBindBufferMemoryDeviceGroupInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindBufferMemoryDeviceGroupInfo*)malloc(sizeof(VkBindBufferMemoryDeviceGroupInfo));
[&]() {
*(result)=deserialize_VkBindBufferMemoryDeviceGroupInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindBufferMemoryDeviceGroupInfoKHR_pNext(json& name){
        printf("Deserializing VkBindBufferMemoryDeviceGroupInfoKHR...\n");
        VkBindBufferMemoryDeviceGroupInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindBufferMemoryDeviceGroupInfoKHR*)malloc(sizeof(VkBindBufferMemoryDeviceGroupInfoKHR));
[&]() {
*(result)=deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindImageMemoryInfo_pNext(json& name){
        printf("Deserializing VkBindImageMemoryInfo...\n");
        VkBindImageMemoryInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindImageMemoryInfo*)malloc(sizeof(VkBindImageMemoryInfo));
[&]() {
*(result)=deserialize_VkBindImageMemoryInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindImageMemoryInfoKHR_pNext(json& name){
        printf("Deserializing VkBindImageMemoryInfoKHR...\n");
        VkBindImageMemoryInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindImageMemoryInfoKHR*)malloc(sizeof(VkBindImageMemoryInfoKHR));
[&]() {
*(result)=deserialize_VkBindImageMemoryInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindImageMemoryDeviceGroupInfo_pNext(json& name){
        printf("Deserializing VkBindImageMemoryDeviceGroupInfo...\n");
        VkBindImageMemoryDeviceGroupInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindImageMemoryDeviceGroupInfo*)malloc(sizeof(VkBindImageMemoryDeviceGroupInfo));
[&]() {
*(result)=deserialize_VkBindImageMemoryDeviceGroupInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindImageMemoryDeviceGroupInfoKHR_pNext(json& name){
        printf("Deserializing VkBindImageMemoryDeviceGroupInfoKHR...\n");
        VkBindImageMemoryDeviceGroupInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindImageMemoryDeviceGroupInfoKHR*)malloc(sizeof(VkBindImageMemoryDeviceGroupInfoKHR));
[&]() {
*(result)=deserialize_VkBindImageMemoryDeviceGroupInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupRenderPassBeginInfo_pNext(json& name){
        printf("Deserializing VkDeviceGroupRenderPassBeginInfo...\n");
        VkDeviceGroupRenderPassBeginInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupRenderPassBeginInfo*)malloc(sizeof(VkDeviceGroupRenderPassBeginInfo));
[&]() {
*(result)=deserialize_VkDeviceGroupRenderPassBeginInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupRenderPassBeginInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupRenderPassBeginInfoKHR...\n");
        VkDeviceGroupRenderPassBeginInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupRenderPassBeginInfoKHR*)malloc(sizeof(VkDeviceGroupRenderPassBeginInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupRenderPassBeginInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupCommandBufferBeginInfo_pNext(json& name){
        printf("Deserializing VkDeviceGroupCommandBufferBeginInfo...\n");
        VkDeviceGroupCommandBufferBeginInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupCommandBufferBeginInfo*)malloc(sizeof(VkDeviceGroupCommandBufferBeginInfo));
[&]() {
*(result)=deserialize_VkDeviceGroupCommandBufferBeginInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupCommandBufferBeginInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupCommandBufferBeginInfoKHR...\n");
        VkDeviceGroupCommandBufferBeginInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupCommandBufferBeginInfoKHR*)malloc(sizeof(VkDeviceGroupCommandBufferBeginInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupSubmitInfo_pNext(json& name){
        printf("Deserializing VkDeviceGroupSubmitInfo...\n");
        VkDeviceGroupSubmitInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupSubmitInfo*)malloc(sizeof(VkDeviceGroupSubmitInfo));
[&]() {
*(result)=deserialize_VkDeviceGroupSubmitInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupSubmitInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupSubmitInfoKHR...\n");
        VkDeviceGroupSubmitInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupSubmitInfoKHR*)malloc(sizeof(VkDeviceGroupSubmitInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupSubmitInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupBindSparseInfo_pNext(json& name){
        printf("Deserializing VkDeviceGroupBindSparseInfo...\n");
        VkDeviceGroupBindSparseInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupBindSparseInfo*)malloc(sizeof(VkDeviceGroupBindSparseInfo));
[&]() {
*(result)=deserialize_VkDeviceGroupBindSparseInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupBindSparseInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupBindSparseInfoKHR...\n");
        VkDeviceGroupBindSparseInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupBindSparseInfoKHR*)malloc(sizeof(VkDeviceGroupBindSparseInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupBindSparseInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupPresentCapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupPresentCapabilitiesKHR...\n");
        VkDeviceGroupPresentCapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupPresentCapabilitiesKHR*)malloc(sizeof(VkDeviceGroupPresentCapabilitiesKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupPresentCapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSwapchainCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkImageSwapchainCreateInfoKHR...\n");
        VkImageSwapchainCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSwapchainCreateInfoKHR*)malloc(sizeof(VkImageSwapchainCreateInfoKHR));
[&]() {
*(result)=deserialize_VkImageSwapchainCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindImageMemorySwapchainInfoKHR_pNext(json& name){
        printf("Deserializing VkBindImageMemorySwapchainInfoKHR...\n");
        VkBindImageMemorySwapchainInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindImageMemorySwapchainInfoKHR*)malloc(sizeof(VkBindImageMemorySwapchainInfoKHR));
[&]() {
*(result)=deserialize_VkBindImageMemorySwapchainInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAcquireNextImageInfoKHR_pNext(json& name){
        printf("Deserializing VkAcquireNextImageInfoKHR...\n");
        VkAcquireNextImageInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAcquireNextImageInfoKHR*)malloc(sizeof(VkAcquireNextImageInfoKHR));
[&]() {
*(result)=deserialize_VkAcquireNextImageInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupPresentInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupPresentInfoKHR...\n");
        VkDeviceGroupPresentInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupPresentInfoKHR*)malloc(sizeof(VkDeviceGroupPresentInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupPresentInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupDeviceCreateInfo_pNext(json& name){
        printf("Deserializing VkDeviceGroupDeviceCreateInfo...\n");
        VkDeviceGroupDeviceCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupDeviceCreateInfo*)malloc(sizeof(VkDeviceGroupDeviceCreateInfo));
[&]() {
*(result)=deserialize_VkDeviceGroupDeviceCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupDeviceCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupDeviceCreateInfoKHR...\n");
        VkDeviceGroupDeviceCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupDeviceCreateInfoKHR*)malloc(sizeof(VkDeviceGroupDeviceCreateInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupDeviceCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceGroupSwapchainCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceGroupSwapchainCreateInfoKHR...\n");
        VkDeviceGroupSwapchainCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceGroupSwapchainCreateInfoKHR*)malloc(sizeof(VkDeviceGroupSwapchainCreateInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceGroupSwapchainCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorUpdateTemplateEntry_pNext(json& name){
        printf("Deserializing VkDescriptorUpdateTemplateEntry...\n");
        VkDescriptorUpdateTemplateEntry* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorUpdateTemplateEntry*)malloc(sizeof(VkDescriptorUpdateTemplateEntry));
[&]() {
*(result)=deserialize_VkDescriptorUpdateTemplateEntry(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorUpdateTemplateEntryKHR_pNext(json& name){
        printf("Deserializing VkDescriptorUpdateTemplateEntryKHR...\n");
        VkDescriptorUpdateTemplateEntryKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorUpdateTemplateEntryKHR*)malloc(sizeof(VkDescriptorUpdateTemplateEntryKHR));
[&]() {
*(result)=deserialize_VkDescriptorUpdateTemplateEntryKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorUpdateTemplateCreateInfo_pNext(json& name){
        printf("Deserializing VkDescriptorUpdateTemplateCreateInfo...\n");
        VkDescriptorUpdateTemplateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorUpdateTemplateCreateInfo*)malloc(sizeof(VkDescriptorUpdateTemplateCreateInfo));
[&]() {
*(result)=deserialize_VkDescriptorUpdateTemplateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorUpdateTemplateCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkDescriptorUpdateTemplateCreateInfoKHR...\n");
        VkDescriptorUpdateTemplateCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorUpdateTemplateCreateInfoKHR*)malloc(sizeof(VkDescriptorUpdateTemplateCreateInfoKHR));
[&]() {
*(result)=deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkXYColorEXT_pNext(json& name){
        printf("Deserializing VkXYColorEXT...\n");
        VkXYColorEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkXYColorEXT*)malloc(sizeof(VkXYColorEXT));
[&]() {
*(result)=deserialize_VkXYColorEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePresentIdFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePresentIdFeaturesKHR...\n");
        VkPhysicalDevicePresentIdFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePresentIdFeaturesKHR*)malloc(sizeof(VkPhysicalDevicePresentIdFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevicePresentIdFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPresentIdKHR_pNext(json& name){
        printf("Deserializing VkPresentIdKHR...\n");
        VkPresentIdKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPresentIdKHR*)malloc(sizeof(VkPresentIdKHR));
[&]() {
*(result)=deserialize_VkPresentIdKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePresentWaitFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePresentWaitFeaturesKHR...\n");
        VkPhysicalDevicePresentWaitFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePresentWaitFeaturesKHR*)malloc(sizeof(VkPhysicalDevicePresentWaitFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkHdrMetadataEXT_pNext(json& name){
        printf("Deserializing VkHdrMetadataEXT...\n");
        VkHdrMetadataEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkHdrMetadataEXT*)malloc(sizeof(VkHdrMetadataEXT));
[&]() {
*(result)=deserialize_VkHdrMetadataEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD_pNext(json& name){
        printf("Deserializing VkDisplayNativeHdrSurfaceCapabilitiesAMD...\n");
        VkDisplayNativeHdrSurfaceCapabilitiesAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayNativeHdrSurfaceCapabilitiesAMD*)malloc(sizeof(VkDisplayNativeHdrSurfaceCapabilitiesAMD));
[&]() {
*(result)=deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD_pNext(json& name){
        printf("Deserializing VkSwapchainDisplayNativeHdrCreateInfoAMD...\n");
        VkSwapchainDisplayNativeHdrCreateInfoAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainDisplayNativeHdrCreateInfoAMD*)malloc(sizeof(VkSwapchainDisplayNativeHdrCreateInfoAMD));
[&]() {
*(result)=deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRefreshCycleDurationGOOGLE_pNext(json& name){
        printf("Deserializing VkRefreshCycleDurationGOOGLE...\n");
        VkRefreshCycleDurationGOOGLE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRefreshCycleDurationGOOGLE*)malloc(sizeof(VkRefreshCycleDurationGOOGLE));
[&]() {
*(result)=deserialize_VkRefreshCycleDurationGOOGLE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPastPresentationTimingGOOGLE_pNext(json& name){
        printf("Deserializing VkPastPresentationTimingGOOGLE...\n");
        VkPastPresentationTimingGOOGLE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPastPresentationTimingGOOGLE*)malloc(sizeof(VkPastPresentationTimingGOOGLE));
[&]() {
*(result)=deserialize_VkPastPresentationTimingGOOGLE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPresentTimesInfoGOOGLE_pNext(json& name){
        printf("Deserializing VkPresentTimesInfoGOOGLE...\n");
        VkPresentTimesInfoGOOGLE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPresentTimesInfoGOOGLE*)malloc(sizeof(VkPresentTimesInfoGOOGLE));
[&]() {
*(result)=deserialize_VkPresentTimesInfoGOOGLE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPresentTimeGOOGLE_pNext(json& name){
        printf("Deserializing VkPresentTimeGOOGLE...\n");
        VkPresentTimeGOOGLE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPresentTimeGOOGLE*)malloc(sizeof(VkPresentTimeGOOGLE));
[&]() {
*(result)=deserialize_VkPresentTimeGOOGLE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkViewportWScalingNV_pNext(json& name){
        printf("Deserializing VkViewportWScalingNV...\n");
        VkViewportWScalingNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkViewportWScalingNV*)malloc(sizeof(VkViewportWScalingNV));
[&]() {
*(result)=deserialize_VkViewportWScalingNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineViewportWScalingStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineViewportWScalingStateCreateInfoNV...\n");
        VkPipelineViewportWScalingStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineViewportWScalingStateCreateInfoNV*)malloc(sizeof(VkPipelineViewportWScalingStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineViewportWScalingStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkViewportSwizzleNV_pNext(json& name){
        printf("Deserializing VkViewportSwizzleNV...\n");
        VkViewportSwizzleNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkViewportSwizzleNV*)malloc(sizeof(VkViewportSwizzleNV));
[&]() {
*(result)=deserialize_VkViewportSwizzleNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineViewportSwizzleStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineViewportSwizzleStateCreateInfoNV...\n");
        VkPipelineViewportSwizzleStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineViewportSwizzleStateCreateInfoNV*)malloc(sizeof(VkPipelineViewportSwizzleStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDiscardRectanglePropertiesEXT...\n");
        VkPhysicalDeviceDiscardRectanglePropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDiscardRectanglePropertiesEXT*)malloc(sizeof(VkPhysicalDeviceDiscardRectanglePropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineDiscardRectangleStateCreateInfoEXT...\n");
        VkPipelineDiscardRectangleStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineDiscardRectangleStateCreateInfoEXT*)malloc(sizeof(VkPipelineDiscardRectangleStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX...\n");
        VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX*)malloc(sizeof(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkInputAttachmentAspectReference_pNext(json& name){
        printf("Deserializing VkInputAttachmentAspectReference...\n");
        VkInputAttachmentAspectReference* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkInputAttachmentAspectReference*)malloc(sizeof(VkInputAttachmentAspectReference));
[&]() {
*(result)=deserialize_VkInputAttachmentAspectReference(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkInputAttachmentAspectReferenceKHR_pNext(json& name){
        printf("Deserializing VkInputAttachmentAspectReferenceKHR...\n");
        VkInputAttachmentAspectReferenceKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkInputAttachmentAspectReferenceKHR*)malloc(sizeof(VkInputAttachmentAspectReferenceKHR));
[&]() {
*(result)=deserialize_VkInputAttachmentAspectReferenceKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassInputAttachmentAspectCreateInfo_pNext(json& name){
        printf("Deserializing VkRenderPassInputAttachmentAspectCreateInfo...\n");
        VkRenderPassInputAttachmentAspectCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassInputAttachmentAspectCreateInfo*)malloc(sizeof(VkRenderPassInputAttachmentAspectCreateInfo));
[&]() {
*(result)=deserialize_VkRenderPassInputAttachmentAspectCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkRenderPassInputAttachmentAspectCreateInfoKHR...\n");
        VkRenderPassInputAttachmentAspectCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassInputAttachmentAspectCreateInfoKHR*)malloc(sizeof(VkRenderPassInputAttachmentAspectCreateInfoKHR));
[&]() {
*(result)=deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSurfaceInfo2KHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSurfaceInfo2KHR...\n");
        VkPhysicalDeviceSurfaceInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSurfaceInfo2KHR*)malloc(sizeof(VkPhysicalDeviceSurfaceInfo2KHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSurfaceInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfaceCapabilities2KHR_pNext(json& name){
        printf("Deserializing VkSurfaceCapabilities2KHR...\n");
        VkSurfaceCapabilities2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfaceCapabilities2KHR*)malloc(sizeof(VkSurfaceCapabilities2KHR));
[&]() {
*(result)=deserialize_VkSurfaceCapabilities2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfaceFormat2KHR_pNext(json& name){
        printf("Deserializing VkSurfaceFormat2KHR...\n");
        VkSurfaceFormat2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfaceFormat2KHR*)malloc(sizeof(VkSurfaceFormat2KHR));
[&]() {
*(result)=deserialize_VkSurfaceFormat2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayProperties2KHR_pNext(json& name){
        printf("Deserializing VkDisplayProperties2KHR...\n");
        VkDisplayProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayProperties2KHR*)malloc(sizeof(VkDisplayProperties2KHR));
[&]() {
*(result)=deserialize_VkDisplayProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPlaneProperties2KHR_pNext(json& name){
        printf("Deserializing VkDisplayPlaneProperties2KHR...\n");
        VkDisplayPlaneProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPlaneProperties2KHR*)malloc(sizeof(VkDisplayPlaneProperties2KHR));
[&]() {
*(result)=deserialize_VkDisplayPlaneProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayModeProperties2KHR_pNext(json& name){
        printf("Deserializing VkDisplayModeProperties2KHR...\n");
        VkDisplayModeProperties2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayModeProperties2KHR*)malloc(sizeof(VkDisplayModeProperties2KHR));
[&]() {
*(result)=deserialize_VkDisplayModeProperties2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPlaneInfo2KHR_pNext(json& name){
        printf("Deserializing VkDisplayPlaneInfo2KHR...\n");
        VkDisplayPlaneInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPlaneInfo2KHR*)malloc(sizeof(VkDisplayPlaneInfo2KHR));
[&]() {
*(result)=deserialize_VkDisplayPlaneInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDisplayPlaneCapabilities2KHR_pNext(json& name){
        printf("Deserializing VkDisplayPlaneCapabilities2KHR...\n");
        VkDisplayPlaneCapabilities2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDisplayPlaneCapabilities2KHR*)malloc(sizeof(VkDisplayPlaneCapabilities2KHR));
[&]() {
*(result)=deserialize_VkDisplayPlaneCapabilities2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSharedPresentSurfaceCapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkSharedPresentSurfaceCapabilitiesKHR...\n");
        VkSharedPresentSurfaceCapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSharedPresentSurfaceCapabilitiesKHR*)malloc(sizeof(VkSharedPresentSurfaceCapabilitiesKHR));
[&]() {
*(result)=deserialize_VkSharedPresentSurfaceCapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevice16BitStorageFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDevice16BitStorageFeatures...\n");
        VkPhysicalDevice16BitStorageFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevice16BitStorageFeatures*)malloc(sizeof(VkPhysicalDevice16BitStorageFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDevice16BitStorageFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevice16BitStorageFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevice16BitStorageFeaturesKHR...\n");
        VkPhysicalDevice16BitStorageFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevice16BitStorageFeaturesKHR*)malloc(sizeof(VkPhysicalDevice16BitStorageFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubgroupProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubgroupProperties...\n");
        VkPhysicalDeviceSubgroupProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubgroupProperties*)malloc(sizeof(VkPhysicalDeviceSubgroupProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubgroupProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures...\n");
        VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures*)malloc(sizeof(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR...\n");
        VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferMemoryRequirementsInfo2_pNext(json& name){
        printf("Deserializing VkBufferMemoryRequirementsInfo2...\n");
        VkBufferMemoryRequirementsInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferMemoryRequirementsInfo2*)malloc(sizeof(VkBufferMemoryRequirementsInfo2));
[&]() {
*(result)=deserialize_VkBufferMemoryRequirementsInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferMemoryRequirementsInfo2KHR_pNext(json& name){
        printf("Deserializing VkBufferMemoryRequirementsInfo2KHR...\n");
        VkBufferMemoryRequirementsInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferMemoryRequirementsInfo2KHR*)malloc(sizeof(VkBufferMemoryRequirementsInfo2KHR));
[&]() {
*(result)=deserialize_VkBufferMemoryRequirementsInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceBufferMemoryRequirements_pNext(json& name){
        printf("Deserializing VkDeviceBufferMemoryRequirements...\n");
        VkDeviceBufferMemoryRequirements* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceBufferMemoryRequirements*)malloc(sizeof(VkDeviceBufferMemoryRequirements));
[&]() {
*(result)=deserialize_VkDeviceBufferMemoryRequirements(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceBufferMemoryRequirementsKHR_pNext(json& name){
        printf("Deserializing VkDeviceBufferMemoryRequirementsKHR...\n");
        VkDeviceBufferMemoryRequirementsKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceBufferMemoryRequirementsKHR*)malloc(sizeof(VkDeviceBufferMemoryRequirementsKHR));
[&]() {
*(result)=deserialize_VkDeviceBufferMemoryRequirementsKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageMemoryRequirementsInfo2_pNext(json& name){
        printf("Deserializing VkImageMemoryRequirementsInfo2...\n");
        VkImageMemoryRequirementsInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageMemoryRequirementsInfo2*)malloc(sizeof(VkImageMemoryRequirementsInfo2));
[&]() {
*(result)=deserialize_VkImageMemoryRequirementsInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageMemoryRequirementsInfo2KHR_pNext(json& name){
        printf("Deserializing VkImageMemoryRequirementsInfo2KHR...\n");
        VkImageMemoryRequirementsInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageMemoryRequirementsInfo2KHR*)malloc(sizeof(VkImageMemoryRequirementsInfo2KHR));
[&]() {
*(result)=deserialize_VkImageMemoryRequirementsInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSparseMemoryRequirementsInfo2_pNext(json& name){
        printf("Deserializing VkImageSparseMemoryRequirementsInfo2...\n");
        VkImageSparseMemoryRequirementsInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSparseMemoryRequirementsInfo2*)malloc(sizeof(VkImageSparseMemoryRequirementsInfo2));
[&]() {
*(result)=deserialize_VkImageSparseMemoryRequirementsInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSparseMemoryRequirementsInfo2KHR_pNext(json& name){
        printf("Deserializing VkImageSparseMemoryRequirementsInfo2KHR...\n");
        VkImageSparseMemoryRequirementsInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSparseMemoryRequirementsInfo2KHR*)malloc(sizeof(VkImageSparseMemoryRequirementsInfo2KHR));
[&]() {
*(result)=deserialize_VkImageSparseMemoryRequirementsInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceImageMemoryRequirements_pNext(json& name){
        printf("Deserializing VkDeviceImageMemoryRequirements...\n");
        VkDeviceImageMemoryRequirements* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceImageMemoryRequirements*)malloc(sizeof(VkDeviceImageMemoryRequirements));
[&]() {
*(result)=deserialize_VkDeviceImageMemoryRequirements(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceImageMemoryRequirementsKHR_pNext(json& name){
        printf("Deserializing VkDeviceImageMemoryRequirementsKHR...\n");
        VkDeviceImageMemoryRequirementsKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceImageMemoryRequirementsKHR*)malloc(sizeof(VkDeviceImageMemoryRequirementsKHR));
[&]() {
*(result)=deserialize_VkDeviceImageMemoryRequirementsKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryRequirements2_pNext(json& name){
        printf("Deserializing VkMemoryRequirements2...\n");
        VkMemoryRequirements2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryRequirements2*)malloc(sizeof(VkMemoryRequirements2));
[&]() {
*(result)=deserialize_VkMemoryRequirements2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryRequirements2KHR_pNext(json& name){
        printf("Deserializing VkMemoryRequirements2KHR...\n");
        VkMemoryRequirements2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryRequirements2KHR*)malloc(sizeof(VkMemoryRequirements2KHR));
[&]() {
*(result)=deserialize_VkMemoryRequirements2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageMemoryRequirements2_pNext(json& name){
        printf("Deserializing VkSparseImageMemoryRequirements2...\n");
        VkSparseImageMemoryRequirements2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageMemoryRequirements2*)malloc(sizeof(VkSparseImageMemoryRequirements2));
[&]() {
*(result)=deserialize_VkSparseImageMemoryRequirements2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSparseImageMemoryRequirements2KHR_pNext(json& name){
        printf("Deserializing VkSparseImageMemoryRequirements2KHR...\n");
        VkSparseImageMemoryRequirements2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSparseImageMemoryRequirements2KHR*)malloc(sizeof(VkSparseImageMemoryRequirements2KHR));
[&]() {
*(result)=deserialize_VkSparseImageMemoryRequirements2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePointClippingProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePointClippingProperties...\n");
        VkPhysicalDevicePointClippingProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePointClippingProperties*)malloc(sizeof(VkPhysicalDevicePointClippingProperties));
[&]() {
*(result)=deserialize_VkPhysicalDevicePointClippingProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePointClippingPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePointClippingPropertiesKHR...\n");
        VkPhysicalDevicePointClippingPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePointClippingPropertiesKHR*)malloc(sizeof(VkPhysicalDevicePointClippingPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevicePointClippingPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryDedicatedRequirements_pNext(json& name){
        printf("Deserializing VkMemoryDedicatedRequirements...\n");
        VkMemoryDedicatedRequirements* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryDedicatedRequirements*)malloc(sizeof(VkMemoryDedicatedRequirements));
[&]() {
*(result)=deserialize_VkMemoryDedicatedRequirements(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryDedicatedRequirementsKHR_pNext(json& name){
        printf("Deserializing VkMemoryDedicatedRequirementsKHR...\n");
        VkMemoryDedicatedRequirementsKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryDedicatedRequirementsKHR*)malloc(sizeof(VkMemoryDedicatedRequirementsKHR));
[&]() {
*(result)=deserialize_VkMemoryDedicatedRequirementsKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryDedicatedAllocateInfo_pNext(json& name){
        printf("Deserializing VkMemoryDedicatedAllocateInfo...\n");
        VkMemoryDedicatedAllocateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryDedicatedAllocateInfo*)malloc(sizeof(VkMemoryDedicatedAllocateInfo));
[&]() {
*(result)=deserialize_VkMemoryDedicatedAllocateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryDedicatedAllocateInfoKHR_pNext(json& name){
        printf("Deserializing VkMemoryDedicatedAllocateInfoKHR...\n");
        VkMemoryDedicatedAllocateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryDedicatedAllocateInfoKHR*)malloc(sizeof(VkMemoryDedicatedAllocateInfoKHR));
[&]() {
*(result)=deserialize_VkMemoryDedicatedAllocateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewUsageCreateInfo_pNext(json& name){
        printf("Deserializing VkImageViewUsageCreateInfo...\n");
        VkImageViewUsageCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewUsageCreateInfo*)malloc(sizeof(VkImageViewUsageCreateInfo));
[&]() {
*(result)=deserialize_VkImageViewUsageCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewSlicedCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkImageViewSlicedCreateInfoEXT...\n");
        VkImageViewSlicedCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewSlicedCreateInfoEXT*)malloc(sizeof(VkImageViewSlicedCreateInfoEXT));
[&]() {
*(result)=deserialize_VkImageViewSlicedCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewUsageCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkImageViewUsageCreateInfoKHR...\n");
        VkImageViewUsageCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewUsageCreateInfoKHR*)malloc(sizeof(VkImageViewUsageCreateInfoKHR));
[&]() {
*(result)=deserialize_VkImageViewUsageCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineTessellationDomainOriginStateCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineTessellationDomainOriginStateCreateInfo...\n");
        VkPipelineTessellationDomainOriginStateCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineTessellationDomainOriginStateCreateInfo*)malloc(sizeof(VkPipelineTessellationDomainOriginStateCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkPipelineTessellationDomainOriginStateCreateInfoKHR...\n");
        VkPipelineTessellationDomainOriginStateCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineTessellationDomainOriginStateCreateInfoKHR*)malloc(sizeof(VkPipelineTessellationDomainOriginStateCreateInfoKHR));
[&]() {
*(result)=deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerYcbcrConversionInfo_pNext(json& name){
        printf("Deserializing VkSamplerYcbcrConversionInfo...\n");
        VkSamplerYcbcrConversionInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerYcbcrConversionInfo*)malloc(sizeof(VkSamplerYcbcrConversionInfo));
[&]() {
*(result)=deserialize_VkSamplerYcbcrConversionInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerYcbcrConversionInfoKHR_pNext(json& name){
        printf("Deserializing VkSamplerYcbcrConversionInfoKHR...\n");
        VkSamplerYcbcrConversionInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerYcbcrConversionInfoKHR*)malloc(sizeof(VkSamplerYcbcrConversionInfoKHR));
[&]() {
*(result)=deserialize_VkSamplerYcbcrConversionInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerYcbcrConversionCreateInfo_pNext(json& name){
        printf("Deserializing VkSamplerYcbcrConversionCreateInfo...\n");
        VkSamplerYcbcrConversionCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerYcbcrConversionCreateInfo*)malloc(sizeof(VkSamplerYcbcrConversionCreateInfo));
[&]() {
*(result)=deserialize_VkSamplerYcbcrConversionCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerYcbcrConversionCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkSamplerYcbcrConversionCreateInfoKHR...\n");
        VkSamplerYcbcrConversionCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerYcbcrConversionCreateInfoKHR*)malloc(sizeof(VkSamplerYcbcrConversionCreateInfoKHR));
[&]() {
*(result)=deserialize_VkSamplerYcbcrConversionCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindImagePlaneMemoryInfo_pNext(json& name){
        printf("Deserializing VkBindImagePlaneMemoryInfo...\n");
        VkBindImagePlaneMemoryInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindImagePlaneMemoryInfo*)malloc(sizeof(VkBindImagePlaneMemoryInfo));
[&]() {
*(result)=deserialize_VkBindImagePlaneMemoryInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindImagePlaneMemoryInfoKHR_pNext(json& name){
        printf("Deserializing VkBindImagePlaneMemoryInfoKHR...\n");
        VkBindImagePlaneMemoryInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindImagePlaneMemoryInfoKHR*)malloc(sizeof(VkBindImagePlaneMemoryInfoKHR));
[&]() {
*(result)=deserialize_VkBindImagePlaneMemoryInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImagePlaneMemoryRequirementsInfo_pNext(json& name){
        printf("Deserializing VkImagePlaneMemoryRequirementsInfo...\n");
        VkImagePlaneMemoryRequirementsInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImagePlaneMemoryRequirementsInfo*)malloc(sizeof(VkImagePlaneMemoryRequirementsInfo));
[&]() {
*(result)=deserialize_VkImagePlaneMemoryRequirementsInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImagePlaneMemoryRequirementsInfoKHR_pNext(json& name){
        printf("Deserializing VkImagePlaneMemoryRequirementsInfoKHR...\n");
        VkImagePlaneMemoryRequirementsInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImagePlaneMemoryRequirementsInfoKHR*)malloc(sizeof(VkImagePlaneMemoryRequirementsInfoKHR));
[&]() {
*(result)=deserialize_VkImagePlaneMemoryRequirementsInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSamplerYcbcrConversionFeatures...\n");
        VkPhysicalDeviceSamplerYcbcrConversionFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSamplerYcbcrConversionFeatures*)malloc(sizeof(VkPhysicalDeviceSamplerYcbcrConversionFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR...\n");
        VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerYcbcrConversionImageFormatProperties_pNext(json& name){
        printf("Deserializing VkSamplerYcbcrConversionImageFormatProperties...\n");
        VkSamplerYcbcrConversionImageFormatProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerYcbcrConversionImageFormatProperties*)malloc(sizeof(VkSamplerYcbcrConversionImageFormatProperties));
[&]() {
*(result)=deserialize_VkSamplerYcbcrConversionImageFormatProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR_pNext(json& name){
        printf("Deserializing VkSamplerYcbcrConversionImageFormatPropertiesKHR...\n");
        VkSamplerYcbcrConversionImageFormatPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerYcbcrConversionImageFormatPropertiesKHR*)malloc(sizeof(VkSamplerYcbcrConversionImageFormatPropertiesKHR));
[&]() {
*(result)=deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTextureLODGatherFormatPropertiesAMD_pNext(json& name){
        printf("Deserializing VkTextureLODGatherFormatPropertiesAMD...\n");
        VkTextureLODGatherFormatPropertiesAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTextureLODGatherFormatPropertiesAMD*)malloc(sizeof(VkTextureLODGatherFormatPropertiesAMD));
[&]() {
*(result)=deserialize_VkTextureLODGatherFormatPropertiesAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkConditionalRenderingBeginInfoEXT_pNext(json& name){
        printf("Deserializing VkConditionalRenderingBeginInfoEXT...\n");
        VkConditionalRenderingBeginInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkConditionalRenderingBeginInfoEXT*)malloc(sizeof(VkConditionalRenderingBeginInfoEXT));
[&]() {
*(result)=deserialize_VkConditionalRenderingBeginInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkProtectedSubmitInfo_pNext(json& name){
        printf("Deserializing VkProtectedSubmitInfo...\n");
        VkProtectedSubmitInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkProtectedSubmitInfo*)malloc(sizeof(VkProtectedSubmitInfo));
[&]() {
*(result)=deserialize_VkProtectedSubmitInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceProtectedMemoryFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceProtectedMemoryFeatures...\n");
        VkPhysicalDeviceProtectedMemoryFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceProtectedMemoryFeatures*)malloc(sizeof(VkPhysicalDeviceProtectedMemoryFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceProtectedMemoryFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceProtectedMemoryProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceProtectedMemoryProperties...\n");
        VkPhysicalDeviceProtectedMemoryProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceProtectedMemoryProperties*)malloc(sizeof(VkPhysicalDeviceProtectedMemoryProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceProtectedMemoryProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceQueueInfo2_pNext(json& name){
        printf("Deserializing VkDeviceQueueInfo2...\n");
        VkDeviceQueueInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceQueueInfo2*)malloc(sizeof(VkDeviceQueueInfo2));
[&]() {
*(result)=deserialize_VkDeviceQueueInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCoverageToColorStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineCoverageToColorStateCreateInfoNV...\n");
        VkPipelineCoverageToColorStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCoverageToColorStateCreateInfoNV*)malloc(sizeof(VkPipelineCoverageToColorStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineCoverageToColorStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSamplerFilterMinmaxProperties...\n");
        VkPhysicalDeviceSamplerFilterMinmaxProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSamplerFilterMinmaxProperties*)malloc(sizeof(VkPhysicalDeviceSamplerFilterMinmaxProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT...\n");
        VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSampleLocationEXT_pNext(json& name){
        printf("Deserializing VkSampleLocationEXT...\n");
        VkSampleLocationEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSampleLocationEXT*)malloc(sizeof(VkSampleLocationEXT));
[&]() {
*(result)=deserialize_VkSampleLocationEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSampleLocationsInfoEXT_pNext(json& name){
        printf("Deserializing VkSampleLocationsInfoEXT...\n");
        VkSampleLocationsInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSampleLocationsInfoEXT*)malloc(sizeof(VkSampleLocationsInfoEXT));
[&]() {
*(result)=deserialize_VkSampleLocationsInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentSampleLocationsEXT_pNext(json& name){
        printf("Deserializing VkAttachmentSampleLocationsEXT...\n");
        VkAttachmentSampleLocationsEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentSampleLocationsEXT*)malloc(sizeof(VkAttachmentSampleLocationsEXT));
[&]() {
*(result)=deserialize_VkAttachmentSampleLocationsEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassSampleLocationsEXT_pNext(json& name){
        printf("Deserializing VkSubpassSampleLocationsEXT...\n");
        VkSubpassSampleLocationsEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassSampleLocationsEXT*)malloc(sizeof(VkSubpassSampleLocationsEXT));
[&]() {
*(result)=deserialize_VkSubpassSampleLocationsEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassSampleLocationsBeginInfoEXT_pNext(json& name){
        printf("Deserializing VkRenderPassSampleLocationsBeginInfoEXT...\n");
        VkRenderPassSampleLocationsBeginInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassSampleLocationsBeginInfoEXT*)malloc(sizeof(VkRenderPassSampleLocationsBeginInfoEXT));
[&]() {
*(result)=deserialize_VkRenderPassSampleLocationsBeginInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineSampleLocationsStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineSampleLocationsStateCreateInfoEXT...\n");
        VkPipelineSampleLocationsStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineSampleLocationsStateCreateInfoEXT*)malloc(sizeof(VkPipelineSampleLocationsStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSampleLocationsPropertiesEXT...\n");
        VkPhysicalDeviceSampleLocationsPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSampleLocationsPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceSampleLocationsPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMultisamplePropertiesEXT_pNext(json& name){
        printf("Deserializing VkMultisamplePropertiesEXT...\n");
        VkMultisamplePropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMultisamplePropertiesEXT*)malloc(sizeof(VkMultisamplePropertiesEXT));
[&]() {
*(result)=deserialize_VkMultisamplePropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerReductionModeCreateInfo_pNext(json& name){
        printf("Deserializing VkSamplerReductionModeCreateInfo...\n");
        VkSamplerReductionModeCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerReductionModeCreateInfo*)malloc(sizeof(VkSamplerReductionModeCreateInfo));
[&]() {
*(result)=deserialize_VkSamplerReductionModeCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerReductionModeCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkSamplerReductionModeCreateInfoEXT...\n");
        VkSamplerReductionModeCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerReductionModeCreateInfoEXT*)malloc(sizeof(VkSamplerReductionModeCreateInfoEXT));
[&]() {
*(result)=deserialize_VkSamplerReductionModeCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT...\n");
        VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiDrawFeaturesEXT...\n");
        VkPhysicalDeviceMultiDrawFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiDrawFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceMultiDrawFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT...\n");
        VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineColorBlendAdvancedStateCreateInfoEXT...\n");
        VkPipelineColorBlendAdvancedStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineColorBlendAdvancedStateCreateInfoEXT*)malloc(sizeof(VkPipelineColorBlendAdvancedStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceInlineUniformBlockFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceInlineUniformBlockFeatures...\n");
        VkPhysicalDeviceInlineUniformBlockFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceInlineUniformBlockFeatures*)malloc(sizeof(VkPhysicalDeviceInlineUniformBlockFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceInlineUniformBlockFeaturesEXT...\n");
        VkPhysicalDeviceInlineUniformBlockFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceInlineUniformBlockFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceInlineUniformBlockFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceInlineUniformBlockProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceInlineUniformBlockProperties...\n");
        VkPhysicalDeviceInlineUniformBlockProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceInlineUniformBlockProperties*)malloc(sizeof(VkPhysicalDeviceInlineUniformBlockProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceInlineUniformBlockProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceInlineUniformBlockPropertiesEXT...\n");
        VkPhysicalDeviceInlineUniformBlockPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceInlineUniformBlockPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceInlineUniformBlockPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkWriteDescriptorSetInlineUniformBlock_pNext(json& name){
        printf("Deserializing VkWriteDescriptorSetInlineUniformBlock...\n");
        VkWriteDescriptorSetInlineUniformBlock* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkWriteDescriptorSetInlineUniformBlock*)malloc(sizeof(VkWriteDescriptorSetInlineUniformBlock));
[&]() {
*(result)=deserialize_VkWriteDescriptorSetInlineUniformBlock(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkWriteDescriptorSetInlineUniformBlockEXT_pNext(json& name){
        printf("Deserializing VkWriteDescriptorSetInlineUniformBlockEXT...\n");
        VkWriteDescriptorSetInlineUniformBlockEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkWriteDescriptorSetInlineUniformBlockEXT*)malloc(sizeof(VkWriteDescriptorSetInlineUniformBlockEXT));
[&]() {
*(result)=deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo_pNext(json& name){
        printf("Deserializing VkDescriptorPoolInlineUniformBlockCreateInfo...\n");
        VkDescriptorPoolInlineUniformBlockCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorPoolInlineUniformBlockCreateInfo*)malloc(sizeof(VkDescriptorPoolInlineUniformBlockCreateInfo));
[&]() {
*(result)=deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkDescriptorPoolInlineUniformBlockCreateInfoEXT...\n");
        VkDescriptorPoolInlineUniformBlockCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorPoolInlineUniformBlockCreateInfoEXT*)malloc(sizeof(VkDescriptorPoolInlineUniformBlockCreateInfoEXT));
[&]() {
*(result)=deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCoverageModulationStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineCoverageModulationStateCreateInfoNV...\n");
        VkPipelineCoverageModulationStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCoverageModulationStateCreateInfoNV*)malloc(sizeof(VkPipelineCoverageModulationStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineCoverageModulationStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageFormatListCreateInfo_pNext(json& name){
        printf("Deserializing VkImageFormatListCreateInfo...\n");
        VkImageFormatListCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageFormatListCreateInfo*)malloc(sizeof(VkImageFormatListCreateInfo));
[&]() {
*(result)=deserialize_VkImageFormatListCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageFormatListCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkImageFormatListCreateInfoKHR...\n");
        VkImageFormatListCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageFormatListCreateInfoKHR*)malloc(sizeof(VkImageFormatListCreateInfoKHR));
[&]() {
*(result)=deserialize_VkImageFormatListCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkValidationCacheCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkValidationCacheCreateInfoEXT...\n");
        VkValidationCacheCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkValidationCacheCreateInfoEXT*)malloc(sizeof(VkValidationCacheCreateInfoEXT));
[&]() {
*(result)=deserialize_VkValidationCacheCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShaderModuleValidationCacheCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkShaderModuleValidationCacheCreateInfoEXT...\n");
        VkShaderModuleValidationCacheCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShaderModuleValidationCacheCreateInfoEXT*)malloc(sizeof(VkShaderModuleValidationCacheCreateInfoEXT));
[&]() {
*(result)=deserialize_VkShaderModuleValidationCacheCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance3Properties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance3Properties...\n");
        VkPhysicalDeviceMaintenance3Properties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance3Properties*)malloc(sizeof(VkPhysicalDeviceMaintenance3Properties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance3Properties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance3PropertiesKHR...\n");
        VkPhysicalDeviceMaintenance3PropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance3PropertiesKHR*)malloc(sizeof(VkPhysicalDeviceMaintenance3PropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance4Features_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance4Features...\n");
        VkPhysicalDeviceMaintenance4Features* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance4Features*)malloc(sizeof(VkPhysicalDeviceMaintenance4Features));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance4Features(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance4FeaturesKHR...\n");
        VkPhysicalDeviceMaintenance4FeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance4FeaturesKHR*)malloc(sizeof(VkPhysicalDeviceMaintenance4FeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance4Properties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance4Properties...\n");
        VkPhysicalDeviceMaintenance4Properties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance4Properties*)malloc(sizeof(VkPhysicalDeviceMaintenance4Properties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance4Properties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance4PropertiesKHR...\n");
        VkPhysicalDeviceMaintenance4PropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance4PropertiesKHR*)malloc(sizeof(VkPhysicalDeviceMaintenance4PropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance5FeaturesKHR...\n");
        VkPhysicalDeviceMaintenance5FeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance5FeaturesKHR*)malloc(sizeof(VkPhysicalDeviceMaintenance5FeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMaintenance5PropertiesKHR...\n");
        VkPhysicalDeviceMaintenance5PropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMaintenance5PropertiesKHR*)malloc(sizeof(VkPhysicalDeviceMaintenance5PropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderingAreaInfoKHR_pNext(json& name){
        printf("Deserializing VkRenderingAreaInfoKHR...\n");
        VkRenderingAreaInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderingAreaInfoKHR*)malloc(sizeof(VkRenderingAreaInfoKHR));
[&]() {
*(result)=deserialize_VkRenderingAreaInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetLayoutSupport_pNext(json& name){
        printf("Deserializing VkDescriptorSetLayoutSupport...\n");
        VkDescriptorSetLayoutSupport* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetLayoutSupport*)malloc(sizeof(VkDescriptorSetLayoutSupport));
[&]() {
*(result)=deserialize_VkDescriptorSetLayoutSupport(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetLayoutSupportKHR_pNext(json& name){
        printf("Deserializing VkDescriptorSetLayoutSupportKHR...\n");
        VkDescriptorSetLayoutSupportKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetLayoutSupportKHR*)malloc(sizeof(VkDescriptorSetLayoutSupportKHR));
[&]() {
*(result)=deserialize_VkDescriptorSetLayoutSupportKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderDrawParametersFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderDrawParametersFeatures...\n");
        VkPhysicalDeviceShaderDrawParametersFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderDrawParametersFeatures*)malloc(sizeof(VkPhysicalDeviceShaderDrawParametersFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderDrawParameterFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderDrawParameterFeatures...\n");
        VkPhysicalDeviceShaderDrawParameterFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderDrawParameterFeatures*)malloc(sizeof(VkPhysicalDeviceShaderDrawParameterFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderFloat16Int8Features_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderFloat16Int8Features...\n");
        VkPhysicalDeviceShaderFloat16Int8Features* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderFloat16Int8Features*)malloc(sizeof(VkPhysicalDeviceShaderFloat16Int8Features));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderFloat16Int8Features(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderFloat16Int8FeaturesKHR...\n");
        VkPhysicalDeviceShaderFloat16Int8FeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR*)malloc(sizeof(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFloat16Int8FeaturesKHR...\n");
        VkPhysicalDeviceFloat16Int8FeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFloat16Int8FeaturesKHR*)malloc(sizeof(VkPhysicalDeviceFloat16Int8FeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFloatControlsProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFloatControlsProperties...\n");
        VkPhysicalDeviceFloatControlsProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFloatControlsProperties*)malloc(sizeof(VkPhysicalDeviceFloatControlsProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFloatControlsProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFloatControlsPropertiesKHR...\n");
        VkPhysicalDeviceFloatControlsPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFloatControlsPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceFloatControlsPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceHostQueryResetFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceHostQueryResetFeatures...\n");
        VkPhysicalDeviceHostQueryResetFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceHostQueryResetFeatures*)malloc(sizeof(VkPhysicalDeviceHostQueryResetFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceHostQueryResetFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceHostQueryResetFeaturesEXT...\n");
        VkPhysicalDeviceHostQueryResetFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceHostQueryResetFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceHostQueryResetFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShaderResourceUsageAMD_pNext(json& name){
        printf("Deserializing VkShaderResourceUsageAMD...\n");
        VkShaderResourceUsageAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShaderResourceUsageAMD*)malloc(sizeof(VkShaderResourceUsageAMD));
[&]() {
*(result)=deserialize_VkShaderResourceUsageAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShaderStatisticsInfoAMD_pNext(json& name){
        printf("Deserializing VkShaderStatisticsInfoAMD...\n");
        VkShaderStatisticsInfoAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShaderStatisticsInfoAMD*)malloc(sizeof(VkShaderStatisticsInfoAMD));
[&]() {
*(result)=deserialize_VkShaderStatisticsInfoAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceQueueGlobalPriorityCreateInfoKHR...\n");
        VkDeviceQueueGlobalPriorityCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceQueueGlobalPriorityCreateInfoKHR*)malloc(sizeof(VkDeviceQueueGlobalPriorityCreateInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkDeviceQueueGlobalPriorityCreateInfoEXT...\n");
        VkDeviceQueueGlobalPriorityCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceQueueGlobalPriorityCreateInfoEXT*)malloc(sizeof(VkDeviceQueueGlobalPriorityCreateInfoEXT));
[&]() {
*(result)=deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR...\n");
        VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT...\n");
        VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR_pNext(json& name){
        printf("Deserializing VkQueueFamilyGlobalPriorityPropertiesKHR...\n");
        VkQueueFamilyGlobalPriorityPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyGlobalPriorityPropertiesKHR*)malloc(sizeof(VkQueueFamilyGlobalPriorityPropertiesKHR));
[&]() {
*(result)=deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT_pNext(json& name){
        printf("Deserializing VkQueueFamilyGlobalPriorityPropertiesEXT...\n");
        VkQueueFamilyGlobalPriorityPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyGlobalPriorityPropertiesEXT*)malloc(sizeof(VkQueueFamilyGlobalPriorityPropertiesEXT));
[&]() {
*(result)=deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugUtilsObjectNameInfoEXT_pNext(json& name){
        printf("Deserializing VkDebugUtilsObjectNameInfoEXT...\n");
        VkDebugUtilsObjectNameInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugUtilsObjectNameInfoEXT*)malloc(sizeof(VkDebugUtilsObjectNameInfoEXT));
[&]() {
*(result)=deserialize_VkDebugUtilsObjectNameInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugUtilsObjectTagInfoEXT_pNext(json& name){
        printf("Deserializing VkDebugUtilsObjectTagInfoEXT...\n");
        VkDebugUtilsObjectTagInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugUtilsObjectTagInfoEXT*)malloc(sizeof(VkDebugUtilsObjectTagInfoEXT));
[&]() {
*(result)=deserialize_VkDebugUtilsObjectTagInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugUtilsLabelEXT_pNext(json& name){
        printf("Deserializing VkDebugUtilsLabelEXT...\n");
        VkDebugUtilsLabelEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugUtilsLabelEXT*)malloc(sizeof(VkDebugUtilsLabelEXT));
[&]() {
*(result)=deserialize_VkDebugUtilsLabelEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugUtilsMessengerCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkDebugUtilsMessengerCreateInfoEXT...\n");
        VkDebugUtilsMessengerCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugUtilsMessengerCreateInfoEXT*)malloc(sizeof(VkDebugUtilsMessengerCreateInfoEXT));
[&]() {
*(result)=deserialize_VkDebugUtilsMessengerCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDebugUtilsMessengerCallbackDataEXT_pNext(json& name){
        printf("Deserializing VkDebugUtilsMessengerCallbackDataEXT...\n");
        VkDebugUtilsMessengerCallbackDataEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDebugUtilsMessengerCallbackDataEXT*)malloc(sizeof(VkDebugUtilsMessengerCallbackDataEXT));
[&]() {
*(result)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDeviceMemoryReportFeaturesEXT...\n");
        VkPhysicalDeviceDeviceMemoryReportFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkDeviceDeviceMemoryReportCreateInfoEXT...\n");
        VkDeviceDeviceMemoryReportCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceDeviceMemoryReportCreateInfoEXT*)malloc(sizeof(VkDeviceDeviceMemoryReportCreateInfoEXT));
[&]() {
*(result)=deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceMemoryReportCallbackDataEXT_pNext(json& name){
        printf("Deserializing VkDeviceMemoryReportCallbackDataEXT...\n");
        VkDeviceMemoryReportCallbackDataEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceMemoryReportCallbackDataEXT*)malloc(sizeof(VkDeviceMemoryReportCallbackDataEXT));
[&]() {
*(result)=deserialize_VkDeviceMemoryReportCallbackDataEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImportMemoryHostPointerInfoEXT_pNext(json& name){
        printf("Deserializing VkImportMemoryHostPointerInfoEXT...\n");
        VkImportMemoryHostPointerInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImportMemoryHostPointerInfoEXT*)malloc(sizeof(VkImportMemoryHostPointerInfoEXT));
[&]() {
*(result)=deserialize_VkImportMemoryHostPointerInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryHostPointerPropertiesEXT_pNext(json& name){
        printf("Deserializing VkMemoryHostPointerPropertiesEXT...\n");
        VkMemoryHostPointerPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryHostPointerPropertiesEXT*)malloc(sizeof(VkMemoryHostPointerPropertiesEXT));
[&]() {
*(result)=deserialize_VkMemoryHostPointerPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalMemoryHostPropertiesEXT...\n");
        VkPhysicalDeviceExternalMemoryHostPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalMemoryHostPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceExternalMemoryHostPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceConservativeRasterizationPropertiesEXT...\n");
        VkPhysicalDeviceConservativeRasterizationPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceConservativeRasterizationPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceConservativeRasterizationPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCalibratedTimestampInfoEXT_pNext(json& name){
        printf("Deserializing VkCalibratedTimestampInfoEXT...\n");
        VkCalibratedTimestampInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCalibratedTimestampInfoEXT*)malloc(sizeof(VkCalibratedTimestampInfoEXT));
[&]() {
*(result)=deserialize_VkCalibratedTimestampInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderCorePropertiesAMD_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderCorePropertiesAMD...\n");
        VkPhysicalDeviceShaderCorePropertiesAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderCorePropertiesAMD*)malloc(sizeof(VkPhysicalDeviceShaderCorePropertiesAMD));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderCoreProperties2AMD_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderCoreProperties2AMD...\n");
        VkPhysicalDeviceShaderCoreProperties2AMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderCoreProperties2AMD*)malloc(sizeof(VkPhysicalDeviceShaderCoreProperties2AMD));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineRasterizationConservativeStateCreateInfoEXT...\n");
        VkPipelineRasterizationConservativeStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRasterizationConservativeStateCreateInfoEXT*)malloc(sizeof(VkPipelineRasterizationConservativeStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorIndexingFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorIndexingFeatures...\n");
        VkPhysicalDeviceDescriptorIndexingFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorIndexingFeatures*)malloc(sizeof(VkPhysicalDeviceDescriptorIndexingFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorIndexingFeaturesEXT...\n");
        VkPhysicalDeviceDescriptorIndexingFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorIndexingFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDescriptorIndexingFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorIndexingProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorIndexingProperties...\n");
        VkPhysicalDeviceDescriptorIndexingProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorIndexingProperties*)malloc(sizeof(VkPhysicalDeviceDescriptorIndexingProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorIndexingProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorIndexingPropertiesEXT...\n");
        VkPhysicalDeviceDescriptorIndexingPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorIndexingPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceDescriptorIndexingPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo_pNext(json& name){
        printf("Deserializing VkDescriptorSetLayoutBindingFlagsCreateInfo...\n");
        VkDescriptorSetLayoutBindingFlagsCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetLayoutBindingFlagsCreateInfo*)malloc(sizeof(VkDescriptorSetLayoutBindingFlagsCreateInfo));
[&]() {
*(result)=deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkDescriptorSetLayoutBindingFlagsCreateInfoEXT...\n");
        VkDescriptorSetLayoutBindingFlagsCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT*)malloc(sizeof(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT));
[&]() {
*(result)=deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo_pNext(json& name){
        printf("Deserializing VkDescriptorSetVariableDescriptorCountAllocateInfo...\n");
        VkDescriptorSetVariableDescriptorCountAllocateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetVariableDescriptorCountAllocateInfo*)malloc(sizeof(VkDescriptorSetVariableDescriptorCountAllocateInfo));
[&]() {
*(result)=deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT_pNext(json& name){
        printf("Deserializing VkDescriptorSetVariableDescriptorCountAllocateInfoEXT...\n");
        VkDescriptorSetVariableDescriptorCountAllocateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT*)malloc(sizeof(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT));
[&]() {
*(result)=deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport_pNext(json& name){
        printf("Deserializing VkDescriptorSetVariableDescriptorCountLayoutSupport...\n");
        VkDescriptorSetVariableDescriptorCountLayoutSupport* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetVariableDescriptorCountLayoutSupport*)malloc(sizeof(VkDescriptorSetVariableDescriptorCountLayoutSupport));
[&]() {
*(result)=deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT_pNext(json& name){
        printf("Deserializing VkDescriptorSetVariableDescriptorCountLayoutSupportEXT...\n");
        VkDescriptorSetVariableDescriptorCountLayoutSupportEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT*)malloc(sizeof(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT));
[&]() {
*(result)=deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentDescription2_pNext(json& name){
        printf("Deserializing VkAttachmentDescription2...\n");
        VkAttachmentDescription2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentDescription2*)malloc(sizeof(VkAttachmentDescription2));
[&]() {
*(result)=deserialize_VkAttachmentDescription2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentDescription2KHR_pNext(json& name){
        printf("Deserializing VkAttachmentDescription2KHR...\n");
        VkAttachmentDescription2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentDescription2KHR*)malloc(sizeof(VkAttachmentDescription2KHR));
[&]() {
*(result)=deserialize_VkAttachmentDescription2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentReference2_pNext(json& name){
        printf("Deserializing VkAttachmentReference2...\n");
        VkAttachmentReference2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(result)=deserialize_VkAttachmentReference2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentReference2KHR_pNext(json& name){
        printf("Deserializing VkAttachmentReference2KHR...\n");
        VkAttachmentReference2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentReference2KHR*)malloc(sizeof(VkAttachmentReference2KHR));
[&]() {
*(result)=deserialize_VkAttachmentReference2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDescription2_pNext(json& name){
        printf("Deserializing VkSubpassDescription2...\n");
        VkSubpassDescription2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDescription2*)malloc(sizeof(VkSubpassDescription2));
[&]() {
*(result)=deserialize_VkSubpassDescription2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDescription2KHR_pNext(json& name){
        printf("Deserializing VkSubpassDescription2KHR...\n");
        VkSubpassDescription2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDescription2KHR*)malloc(sizeof(VkSubpassDescription2KHR));
[&]() {
*(result)=deserialize_VkSubpassDescription2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDependency2_pNext(json& name){
        printf("Deserializing VkSubpassDependency2...\n");
        VkSubpassDependency2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDependency2*)malloc(sizeof(VkSubpassDependency2));
[&]() {
*(result)=deserialize_VkSubpassDependency2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDependency2KHR_pNext(json& name){
        printf("Deserializing VkSubpassDependency2KHR...\n");
        VkSubpassDependency2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDependency2KHR*)malloc(sizeof(VkSubpassDependency2KHR));
[&]() {
*(result)=deserialize_VkSubpassDependency2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassCreateInfo2_pNext(json& name){
        printf("Deserializing VkRenderPassCreateInfo2...\n");
        VkRenderPassCreateInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassCreateInfo2*)malloc(sizeof(VkRenderPassCreateInfo2));
[&]() {
*(result)=deserialize_VkRenderPassCreateInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassCreateInfo2KHR_pNext(json& name){
        printf("Deserializing VkRenderPassCreateInfo2KHR...\n");
        VkRenderPassCreateInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassCreateInfo2KHR*)malloc(sizeof(VkRenderPassCreateInfo2KHR));
[&]() {
*(result)=deserialize_VkRenderPassCreateInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassBeginInfo_pNext(json& name){
        printf("Deserializing VkSubpassBeginInfo...\n");
        VkSubpassBeginInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassBeginInfo*)malloc(sizeof(VkSubpassBeginInfo));
[&]() {
*(result)=deserialize_VkSubpassBeginInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassBeginInfoKHR_pNext(json& name){
        printf("Deserializing VkSubpassBeginInfoKHR...\n");
        VkSubpassBeginInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassBeginInfoKHR*)malloc(sizeof(VkSubpassBeginInfoKHR));
[&]() {
*(result)=deserialize_VkSubpassBeginInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassEndInfo_pNext(json& name){
        printf("Deserializing VkSubpassEndInfo...\n");
        VkSubpassEndInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassEndInfo*)malloc(sizeof(VkSubpassEndInfo));
[&]() {
*(result)=deserialize_VkSubpassEndInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassEndInfoKHR_pNext(json& name){
        printf("Deserializing VkSubpassEndInfoKHR...\n");
        VkSubpassEndInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassEndInfoKHR*)malloc(sizeof(VkSubpassEndInfoKHR));
[&]() {
*(result)=deserialize_VkSubpassEndInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTimelineSemaphoreFeatures...\n");
        VkPhysicalDeviceTimelineSemaphoreFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTimelineSemaphoreFeatures*)malloc(sizeof(VkPhysicalDeviceTimelineSemaphoreFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTimelineSemaphoreFeaturesKHR...\n");
        VkPhysicalDeviceTimelineSemaphoreFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTimelineSemaphoreProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTimelineSemaphoreProperties...\n");
        VkPhysicalDeviceTimelineSemaphoreProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTimelineSemaphoreProperties*)malloc(sizeof(VkPhysicalDeviceTimelineSemaphoreProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTimelineSemaphorePropertiesKHR...\n");
        VkPhysicalDeviceTimelineSemaphorePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTimelineSemaphorePropertiesKHR*)malloc(sizeof(VkPhysicalDeviceTimelineSemaphorePropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreTypeCreateInfo_pNext(json& name){
        printf("Deserializing VkSemaphoreTypeCreateInfo...\n");
        VkSemaphoreTypeCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreTypeCreateInfo*)malloc(sizeof(VkSemaphoreTypeCreateInfo));
[&]() {
*(result)=deserialize_VkSemaphoreTypeCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreTypeCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkSemaphoreTypeCreateInfoKHR...\n");
        VkSemaphoreTypeCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreTypeCreateInfoKHR*)malloc(sizeof(VkSemaphoreTypeCreateInfoKHR));
[&]() {
*(result)=deserialize_VkSemaphoreTypeCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTimelineSemaphoreSubmitInfo_pNext(json& name){
        printf("Deserializing VkTimelineSemaphoreSubmitInfo...\n");
        VkTimelineSemaphoreSubmitInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTimelineSemaphoreSubmitInfo*)malloc(sizeof(VkTimelineSemaphoreSubmitInfo));
[&]() {
*(result)=deserialize_VkTimelineSemaphoreSubmitInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTimelineSemaphoreSubmitInfoKHR_pNext(json& name){
        printf("Deserializing VkTimelineSemaphoreSubmitInfoKHR...\n");
        VkTimelineSemaphoreSubmitInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTimelineSemaphoreSubmitInfoKHR*)malloc(sizeof(VkTimelineSemaphoreSubmitInfoKHR));
[&]() {
*(result)=deserialize_VkTimelineSemaphoreSubmitInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreWaitInfo_pNext(json& name){
        printf("Deserializing VkSemaphoreWaitInfo...\n");
        VkSemaphoreWaitInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreWaitInfo*)malloc(sizeof(VkSemaphoreWaitInfo));
[&]() {
*(result)=deserialize_VkSemaphoreWaitInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreWaitInfoKHR_pNext(json& name){
        printf("Deserializing VkSemaphoreWaitInfoKHR...\n");
        VkSemaphoreWaitInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreWaitInfoKHR*)malloc(sizeof(VkSemaphoreWaitInfoKHR));
[&]() {
*(result)=deserialize_VkSemaphoreWaitInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreSignalInfo_pNext(json& name){
        printf("Deserializing VkSemaphoreSignalInfo...\n");
        VkSemaphoreSignalInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreSignalInfo*)malloc(sizeof(VkSemaphoreSignalInfo));
[&]() {
*(result)=deserialize_VkSemaphoreSignalInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreSignalInfoKHR_pNext(json& name){
        printf("Deserializing VkSemaphoreSignalInfoKHR...\n");
        VkSemaphoreSignalInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreSignalInfoKHR*)malloc(sizeof(VkSemaphoreSignalInfoKHR));
[&]() {
*(result)=deserialize_VkSemaphoreSignalInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVertexInputBindingDivisorDescriptionEXT_pNext(json& name){
        printf("Deserializing VkVertexInputBindingDivisorDescriptionEXT...\n");
        VkVertexInputBindingDivisorDescriptionEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(sizeof(VkVertexInputBindingDivisorDescriptionEXT));
[&]() {
*(result)=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineVertexInputDivisorStateCreateInfoEXT...\n");
        VkPipelineVertexInputDivisorStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineVertexInputDivisorStateCreateInfoEXT*)malloc(sizeof(VkPipelineVertexInputDivisorStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT...\n");
        VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePCIBusInfoPropertiesEXT...\n");
        VkPhysicalDevicePCIBusInfoPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePCIBusInfoPropertiesEXT*)malloc(sizeof(VkPhysicalDevicePCIBusInfoPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT_pNext(json& name){
        printf("Deserializing VkCommandBufferInheritanceConditionalRenderingInfoEXT...\n");
        VkCommandBufferInheritanceConditionalRenderingInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferInheritanceConditionalRenderingInfoEXT*)malloc(sizeof(VkCommandBufferInheritanceConditionalRenderingInfoEXT));
[&]() {
*(result)=deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevice8BitStorageFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDevice8BitStorageFeatures...\n");
        VkPhysicalDevice8BitStorageFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevice8BitStorageFeatures*)malloc(sizeof(VkPhysicalDevice8BitStorageFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDevice8BitStorageFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevice8BitStorageFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevice8BitStorageFeaturesKHR...\n");
        VkPhysicalDevice8BitStorageFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevice8BitStorageFeaturesKHR*)malloc(sizeof(VkPhysicalDevice8BitStorageFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceConditionalRenderingFeaturesEXT...\n");
        VkPhysicalDeviceConditionalRenderingFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceConditionalRenderingFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceConditionalRenderingFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkanMemoryModelFeatures...\n");
        VkPhysicalDeviceVulkanMemoryModelFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkanMemoryModelFeatures*)malloc(sizeof(VkPhysicalDeviceVulkanMemoryModelFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkanMemoryModelFeaturesKHR...\n");
        VkPhysicalDeviceVulkanMemoryModelFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderAtomicInt64Features_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderAtomicInt64Features...\n");
        VkPhysicalDeviceShaderAtomicInt64Features* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderAtomicInt64Features*)malloc(sizeof(VkPhysicalDeviceShaderAtomicInt64Features));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderAtomicInt64Features(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderAtomicInt64FeaturesKHR...\n");
        VkPhysicalDeviceShaderAtomicInt64FeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR*)malloc(sizeof(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderAtomicFloatFeaturesEXT...\n");
        VkPhysicalDeviceShaderAtomicFloatFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT...\n");
        VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT...\n");
        VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyCheckpointPropertiesNV_pNext(json& name){
        printf("Deserializing VkQueueFamilyCheckpointPropertiesNV...\n");
        VkQueueFamilyCheckpointPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyCheckpointPropertiesNV*)malloc(sizeof(VkQueueFamilyCheckpointPropertiesNV));
[&]() {
*(result)=deserialize_VkQueueFamilyCheckpointPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCheckpointDataNV_pNext(json& name){
        printf("Deserializing VkCheckpointDataNV...\n");
        VkCheckpointDataNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCheckpointDataNV*)malloc(sizeof(VkCheckpointDataNV));
[&]() {
*(result)=deserialize_VkCheckpointDataNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDepthStencilResolveProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDepthStencilResolveProperties...\n");
        VkPhysicalDeviceDepthStencilResolveProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDepthStencilResolveProperties*)malloc(sizeof(VkPhysicalDeviceDepthStencilResolveProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDepthStencilResolveProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDepthStencilResolvePropertiesKHR...\n");
        VkPhysicalDeviceDepthStencilResolvePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDepthStencilResolvePropertiesKHR*)malloc(sizeof(VkPhysicalDeviceDepthStencilResolvePropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDescriptionDepthStencilResolve_pNext(json& name){
        printf("Deserializing VkSubpassDescriptionDepthStencilResolve...\n");
        VkSubpassDescriptionDepthStencilResolve* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDescriptionDepthStencilResolve*)malloc(sizeof(VkSubpassDescriptionDepthStencilResolve));
[&]() {
*(result)=deserialize_VkSubpassDescriptionDepthStencilResolve(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassDescriptionDepthStencilResolveKHR_pNext(json& name){
        printf("Deserializing VkSubpassDescriptionDepthStencilResolveKHR...\n");
        VkSubpassDescriptionDepthStencilResolveKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassDescriptionDepthStencilResolveKHR*)malloc(sizeof(VkSubpassDescriptionDepthStencilResolveKHR));
[&]() {
*(result)=deserialize_VkSubpassDescriptionDepthStencilResolveKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewASTCDecodeModeEXT_pNext(json& name){
        printf("Deserializing VkImageViewASTCDecodeModeEXT...\n");
        VkImageViewASTCDecodeModeEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewASTCDecodeModeEXT*)malloc(sizeof(VkImageViewASTCDecodeModeEXT));
[&]() {
*(result)=deserialize_VkImageViewASTCDecodeModeEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceASTCDecodeFeaturesEXT...\n");
        VkPhysicalDeviceASTCDecodeFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceASTCDecodeFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceASTCDecodeFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTransformFeedbackFeaturesEXT...\n");
        VkPhysicalDeviceTransformFeedbackFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTransformFeedbackFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceTransformFeedbackFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTransformFeedbackPropertiesEXT...\n");
        VkPhysicalDeviceTransformFeedbackPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTransformFeedbackPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceTransformFeedbackPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineRasterizationStateStreamCreateInfoEXT...\n");
        VkPipelineRasterizationStateStreamCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRasterizationStateStreamCreateInfoEXT*)malloc(sizeof(VkPipelineRasterizationStateStreamCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV...\n");
        VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV*)malloc(sizeof(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineRepresentativeFragmentTestStateCreateInfoNV...\n");
        VkPipelineRepresentativeFragmentTestStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRepresentativeFragmentTestStateCreateInfoNV*)malloc(sizeof(VkPipelineRepresentativeFragmentTestStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExclusiveScissorFeaturesNV...\n");
        VkPhysicalDeviceExclusiveScissorFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExclusiveScissorFeaturesNV*)malloc(sizeof(VkPhysicalDeviceExclusiveScissorFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineViewportExclusiveScissorStateCreateInfoNV...\n");
        VkPipelineViewportExclusiveScissorStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineViewportExclusiveScissorStateCreateInfoNV*)malloc(sizeof(VkPipelineViewportExclusiveScissorStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCornerSampledImageFeaturesNV...\n");
        VkPhysicalDeviceCornerSampledImageFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCornerSampledImageFeaturesNV*)malloc(sizeof(VkPhysicalDeviceCornerSampledImageFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceComputeShaderDerivativesFeaturesNV...\n");
        VkPhysicalDeviceComputeShaderDerivativesFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV*)malloc(sizeof(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderImageFootprintFeaturesNV...\n");
        VkPhysicalDeviceShaderImageFootprintFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderImageFootprintFeaturesNV*)malloc(sizeof(VkPhysicalDeviceShaderImageFootprintFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV...\n");
        VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV*)malloc(sizeof(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCopyMemoryIndirectFeaturesNV...\n");
        VkPhysicalDeviceCopyMemoryIndirectFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV*)malloc(sizeof(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCopyMemoryIndirectPropertiesNV...\n");
        VkPhysicalDeviceCopyMemoryIndirectPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV*)malloc(sizeof(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMemoryDecompressionFeaturesNV...\n");
        VkPhysicalDeviceMemoryDecompressionFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMemoryDecompressionFeaturesNV*)malloc(sizeof(VkPhysicalDeviceMemoryDecompressionFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMemoryDecompressionPropertiesNV...\n");
        VkPhysicalDeviceMemoryDecompressionPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMemoryDecompressionPropertiesNV*)malloc(sizeof(VkPhysicalDeviceMemoryDecompressionPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShadingRatePaletteNV_pNext(json& name){
        printf("Deserializing VkShadingRatePaletteNV...\n");
        VkShadingRatePaletteNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShadingRatePaletteNV*)malloc(sizeof(VkShadingRatePaletteNV));
[&]() {
*(result)=deserialize_VkShadingRatePaletteNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineViewportShadingRateImageStateCreateInfoNV...\n");
        VkPipelineViewportShadingRateImageStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineViewportShadingRateImageStateCreateInfoNV*)malloc(sizeof(VkPipelineViewportShadingRateImageStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShadingRateImageFeaturesNV...\n");
        VkPhysicalDeviceShadingRateImageFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShadingRateImageFeaturesNV*)malloc(sizeof(VkPhysicalDeviceShadingRateImageFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShadingRateImagePropertiesNV...\n");
        VkPhysicalDeviceShadingRateImagePropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShadingRateImagePropertiesNV*)malloc(sizeof(VkPhysicalDeviceShadingRateImagePropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceInvocationMaskFeaturesHUAWEI...\n");
        VkPhysicalDeviceInvocationMaskFeaturesHUAWEI* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI*)malloc(sizeof(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI));
[&]() {
*(result)=deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCoarseSampleLocationNV_pNext(json& name){
        printf("Deserializing VkCoarseSampleLocationNV...\n");
        VkCoarseSampleLocationNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCoarseSampleLocationNV*)malloc(sizeof(VkCoarseSampleLocationNV));
[&]() {
*(result)=deserialize_VkCoarseSampleLocationNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCoarseSampleOrderCustomNV_pNext(json& name){
        printf("Deserializing VkCoarseSampleOrderCustomNV...\n");
        VkCoarseSampleOrderCustomNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCoarseSampleOrderCustomNV*)malloc(sizeof(VkCoarseSampleOrderCustomNV));
[&]() {
*(result)=deserialize_VkCoarseSampleOrderCustomNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineViewportCoarseSampleOrderStateCreateInfoNV...\n");
        VkPipelineViewportCoarseSampleOrderStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV*)malloc(sizeof(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMeshShaderFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMeshShaderFeaturesNV...\n");
        VkPhysicalDeviceMeshShaderFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMeshShaderFeaturesNV*)malloc(sizeof(VkPhysicalDeviceMeshShaderFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMeshShaderPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMeshShaderPropertiesNV...\n");
        VkPhysicalDeviceMeshShaderPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMeshShaderPropertiesNV*)malloc(sizeof(VkPhysicalDeviceMeshShaderPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrawMeshTasksIndirectCommandNV_pNext(json& name){
        printf("Deserializing VkDrawMeshTasksIndirectCommandNV...\n");
        VkDrawMeshTasksIndirectCommandNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrawMeshTasksIndirectCommandNV*)malloc(sizeof(VkDrawMeshTasksIndirectCommandNV));
[&]() {
*(result)=deserialize_VkDrawMeshTasksIndirectCommandNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMeshShaderFeaturesEXT...\n");
        VkPhysicalDeviceMeshShaderFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMeshShaderFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceMeshShaderFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMeshShaderPropertiesEXT...\n");
        VkPhysicalDeviceMeshShaderPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMeshShaderPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceMeshShaderPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrawMeshTasksIndirectCommandEXT_pNext(json& name){
        printf("Deserializing VkDrawMeshTasksIndirectCommandEXT...\n");
        VkDrawMeshTasksIndirectCommandEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrawMeshTasksIndirectCommandEXT*)malloc(sizeof(VkDrawMeshTasksIndirectCommandEXT));
[&]() {
*(result)=deserialize_VkDrawMeshTasksIndirectCommandEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRayTracingShaderGroupCreateInfoNV_pNext(json& name){
        printf("Deserializing VkRayTracingShaderGroupCreateInfoNV...\n");
        VkRayTracingShaderGroupCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRayTracingShaderGroupCreateInfoNV*)malloc(sizeof(VkRayTracingShaderGroupCreateInfoNV));
[&]() {
*(result)=deserialize_VkRayTracingShaderGroupCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRayTracingShaderGroupCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkRayTracingShaderGroupCreateInfoKHR...\n");
        VkRayTracingShaderGroupCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(sizeof(VkRayTracingShaderGroupCreateInfoKHR));
[&]() {
*(result)=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRayTracingPipelineCreateInfoNV_pNext(json& name){
        printf("Deserializing VkRayTracingPipelineCreateInfoNV...\n");
        VkRayTracingPipelineCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRayTracingPipelineCreateInfoNV*)malloc(sizeof(VkRayTracingPipelineCreateInfoNV));
[&]() {
*(result)=deserialize_VkRayTracingPipelineCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRayTracingPipelineCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkRayTracingPipelineCreateInfoKHR...\n");
        VkRayTracingPipelineCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRayTracingPipelineCreateInfoKHR*)malloc(sizeof(VkRayTracingPipelineCreateInfoKHR));
[&]() {
*(result)=deserialize_VkRayTracingPipelineCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGeometryTrianglesNV_pNext(json& name){
        printf("Deserializing VkGeometryTrianglesNV...\n");
        VkGeometryTrianglesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGeometryTrianglesNV*)malloc(sizeof(VkGeometryTrianglesNV));
[&]() {
*(result)=deserialize_VkGeometryTrianglesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGeometryAABBNV_pNext(json& name){
        printf("Deserializing VkGeometryAABBNV...\n");
        VkGeometryAABBNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGeometryAABBNV*)malloc(sizeof(VkGeometryAABBNV));
[&]() {
*(result)=deserialize_VkGeometryAABBNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGeometryDataNV_pNext(json& name){
        printf("Deserializing VkGeometryDataNV...\n");
        VkGeometryDataNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGeometryDataNV*)malloc(sizeof(VkGeometryDataNV));
[&]() {
*(result)=deserialize_VkGeometryDataNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGeometryNV_pNext(json& name){
        printf("Deserializing VkGeometryNV...\n");
        VkGeometryNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGeometryNV*)malloc(sizeof(VkGeometryNV));
[&]() {
*(result)=deserialize_VkGeometryNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureInfoNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureInfoNV...\n");
        VkAccelerationStructureInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureInfoNV*)malloc(sizeof(VkAccelerationStructureInfoNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureCreateInfoNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureCreateInfoNV...\n");
        VkAccelerationStructureCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureCreateInfoNV*)malloc(sizeof(VkAccelerationStructureCreateInfoNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindAccelerationStructureMemoryInfoNV_pNext(json& name){
        printf("Deserializing VkBindAccelerationStructureMemoryInfoNV...\n");
        VkBindAccelerationStructureMemoryInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindAccelerationStructureMemoryInfoNV*)malloc(sizeof(VkBindAccelerationStructureMemoryInfoNV));
[&]() {
*(result)=deserialize_VkBindAccelerationStructureMemoryInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkWriteDescriptorSetAccelerationStructureKHR_pNext(json& name){
        printf("Deserializing VkWriteDescriptorSetAccelerationStructureKHR...\n");
        VkWriteDescriptorSetAccelerationStructureKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkWriteDescriptorSetAccelerationStructureKHR*)malloc(sizeof(VkWriteDescriptorSetAccelerationStructureKHR));
[&]() {
*(result)=deserialize_VkWriteDescriptorSetAccelerationStructureKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkWriteDescriptorSetAccelerationStructureNV_pNext(json& name){
        printf("Deserializing VkWriteDescriptorSetAccelerationStructureNV...\n");
        VkWriteDescriptorSetAccelerationStructureNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkWriteDescriptorSetAccelerationStructureNV*)malloc(sizeof(VkWriteDescriptorSetAccelerationStructureNV));
[&]() {
*(result)=deserialize_VkWriteDescriptorSetAccelerationStructureNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureMemoryRequirementsInfoNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureMemoryRequirementsInfoNV...\n");
        VkAccelerationStructureMemoryRequirementsInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureMemoryRequirementsInfoNV*)malloc(sizeof(VkAccelerationStructureMemoryRequirementsInfoNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceAccelerationStructureFeaturesKHR...\n");
        VkPhysicalDeviceAccelerationStructureFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceAccelerationStructureFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceAccelerationStructureFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingPipelineFeaturesKHR...\n");
        VkPhysicalDeviceRayTracingPipelineFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingPipelineFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceRayTracingPipelineFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayQueryFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayQueryFeaturesKHR...\n");
        VkPhysicalDeviceRayQueryFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayQueryFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceRayQueryFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceAccelerationStructurePropertiesKHR...\n");
        VkPhysicalDeviceAccelerationStructurePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceAccelerationStructurePropertiesKHR*)malloc(sizeof(VkPhysicalDeviceAccelerationStructurePropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingPipelinePropertiesKHR...\n");
        VkPhysicalDeviceRayTracingPipelinePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingPipelinePropertiesKHR*)malloc(sizeof(VkPhysicalDeviceRayTracingPipelinePropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingPropertiesNV...\n");
        VkPhysicalDeviceRayTracingPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingPropertiesNV*)malloc(sizeof(VkPhysicalDeviceRayTracingPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkStridedDeviceAddressRegionKHR_pNext(json& name){
        printf("Deserializing VkStridedDeviceAddressRegionKHR...\n");
        VkStridedDeviceAddressRegionKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkStridedDeviceAddressRegionKHR*)malloc(sizeof(VkStridedDeviceAddressRegionKHR));
[&]() {
*(result)=deserialize_VkStridedDeviceAddressRegionKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTraceRaysIndirectCommandKHR_pNext(json& name){
        printf("Deserializing VkTraceRaysIndirectCommandKHR...\n");
        VkTraceRaysIndirectCommandKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTraceRaysIndirectCommandKHR*)malloc(sizeof(VkTraceRaysIndirectCommandKHR));
[&]() {
*(result)=deserialize_VkTraceRaysIndirectCommandKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTraceRaysIndirectCommand2KHR_pNext(json& name){
        printf("Deserializing VkTraceRaysIndirectCommand2KHR...\n");
        VkTraceRaysIndirectCommand2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTraceRaysIndirectCommand2KHR*)malloc(sizeof(VkTraceRaysIndirectCommand2KHR));
[&]() {
*(result)=deserialize_VkTraceRaysIndirectCommand2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR...\n");
        VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR*)malloc(sizeof(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrmFormatModifierPropertiesListEXT_pNext(json& name){
        printf("Deserializing VkDrmFormatModifierPropertiesListEXT...\n");
        VkDrmFormatModifierPropertiesListEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrmFormatModifierPropertiesListEXT*)malloc(sizeof(VkDrmFormatModifierPropertiesListEXT));
[&]() {
*(result)=deserialize_VkDrmFormatModifierPropertiesListEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrmFormatModifierPropertiesEXT_pNext(json& name){
        printf("Deserializing VkDrmFormatModifierPropertiesEXT...\n");
        VkDrmFormatModifierPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrmFormatModifierPropertiesEXT*)malloc(sizeof(VkDrmFormatModifierPropertiesEXT));
[&]() {
*(result)=deserialize_VkDrmFormatModifierPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageDrmFormatModifierInfoEXT...\n");
        VkPhysicalDeviceImageDrmFormatModifierInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageDrmFormatModifierInfoEXT*)malloc(sizeof(VkPhysicalDeviceImageDrmFormatModifierInfoEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageDrmFormatModifierListCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkImageDrmFormatModifierListCreateInfoEXT...\n");
        VkImageDrmFormatModifierListCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageDrmFormatModifierListCreateInfoEXT*)malloc(sizeof(VkImageDrmFormatModifierListCreateInfoEXT));
[&]() {
*(result)=deserialize_VkImageDrmFormatModifierListCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkImageDrmFormatModifierExplicitCreateInfoEXT...\n");
        VkImageDrmFormatModifierExplicitCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageDrmFormatModifierExplicitCreateInfoEXT*)malloc(sizeof(VkImageDrmFormatModifierExplicitCreateInfoEXT));
[&]() {
*(result)=deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageDrmFormatModifierPropertiesEXT_pNext(json& name){
        printf("Deserializing VkImageDrmFormatModifierPropertiesEXT...\n");
        VkImageDrmFormatModifierPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageDrmFormatModifierPropertiesEXT*)malloc(sizeof(VkImageDrmFormatModifierPropertiesEXT));
[&]() {
*(result)=deserialize_VkImageDrmFormatModifierPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageStencilUsageCreateInfo_pNext(json& name){
        printf("Deserializing VkImageStencilUsageCreateInfo...\n");
        VkImageStencilUsageCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageStencilUsageCreateInfo*)malloc(sizeof(VkImageStencilUsageCreateInfo));
[&]() {
*(result)=deserialize_VkImageStencilUsageCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageStencilUsageCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkImageStencilUsageCreateInfoEXT...\n");
        VkImageStencilUsageCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageStencilUsageCreateInfoEXT*)malloc(sizeof(VkImageStencilUsageCreateInfoEXT));
[&]() {
*(result)=deserialize_VkImageStencilUsageCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceMemoryOverallocationCreateInfoAMD_pNext(json& name){
        printf("Deserializing VkDeviceMemoryOverallocationCreateInfoAMD...\n");
        VkDeviceMemoryOverallocationCreateInfoAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceMemoryOverallocationCreateInfoAMD*)malloc(sizeof(VkDeviceMemoryOverallocationCreateInfoAMD));
[&]() {
*(result)=deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentDensityMapFeaturesEXT...\n");
        VkPhysicalDeviceFragmentDensityMapFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentDensityMapFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceFragmentDensityMapFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentDensityMap2FeaturesEXT...\n");
        VkPhysicalDeviceFragmentDensityMap2FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM...\n");
        VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentDensityMapPropertiesEXT...\n");
        VkPhysicalDeviceFragmentDensityMapPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentDensityMapPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceFragmentDensityMapPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentDensityMap2PropertiesEXT...\n");
        VkPhysicalDeviceFragmentDensityMap2PropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT*)malloc(sizeof(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM...\n");
        VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM*)malloc(sizeof(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkRenderPassFragmentDensityMapCreateInfoEXT...\n");
        VkRenderPassFragmentDensityMapCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassFragmentDensityMapCreateInfoEXT*)malloc(sizeof(VkRenderPassFragmentDensityMapCreateInfoEXT));
[&]() {
*(result)=deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM_pNext(json& name){
        printf("Deserializing VkSubpassFragmentDensityMapOffsetEndInfoQCOM...\n");
        VkSubpassFragmentDensityMapOffsetEndInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassFragmentDensityMapOffsetEndInfoQCOM*)malloc(sizeof(VkSubpassFragmentDensityMapOffsetEndInfoQCOM));
[&]() {
*(result)=deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceScalarBlockLayoutFeatures...\n");
        VkPhysicalDeviceScalarBlockLayoutFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceScalarBlockLayoutFeatures*)malloc(sizeof(VkPhysicalDeviceScalarBlockLayoutFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceScalarBlockLayoutFeaturesEXT...\n");
        VkPhysicalDeviceScalarBlockLayoutFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfaceProtectedCapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkSurfaceProtectedCapabilitiesKHR...\n");
        VkSurfaceProtectedCapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfaceProtectedCapabilitiesKHR*)malloc(sizeof(VkSurfaceProtectedCapabilitiesKHR));
[&]() {
*(result)=deserialize_VkSurfaceProtectedCapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceUniformBufferStandardLayoutFeatures...\n");
        VkPhysicalDeviceUniformBufferStandardLayoutFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceUniformBufferStandardLayoutFeatures*)malloc(sizeof(VkPhysicalDeviceUniformBufferStandardLayoutFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR...\n");
        VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDepthClipEnableFeaturesEXT...\n");
        VkPhysicalDeviceDepthClipEnableFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDepthClipEnableFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDepthClipEnableFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineRasterizationDepthClipStateCreateInfoEXT...\n");
        VkPipelineRasterizationDepthClipStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRasterizationDepthClipStateCreateInfoEXT*)malloc(sizeof(VkPipelineRasterizationDepthClipStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMemoryBudgetPropertiesEXT...\n");
        VkPhysicalDeviceMemoryBudgetPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMemoryBudgetPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceMemoryBudgetPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMemoryPriorityFeaturesEXT...\n");
        VkPhysicalDeviceMemoryPriorityFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMemoryPriorityFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceMemoryPriorityFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryPriorityAllocateInfoEXT_pNext(json& name){
        printf("Deserializing VkMemoryPriorityAllocateInfoEXT...\n");
        VkMemoryPriorityAllocateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryPriorityAllocateInfoEXT*)malloc(sizeof(VkMemoryPriorityAllocateInfoEXT));
[&]() {
*(result)=deserialize_VkMemoryPriorityAllocateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT...\n");
        VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceBufferDeviceAddressFeatures...\n");
        VkPhysicalDeviceBufferDeviceAddressFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceBufferDeviceAddressFeatures*)malloc(sizeof(VkPhysicalDeviceBufferDeviceAddressFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceBufferDeviceAddressFeaturesKHR...\n");
        VkPhysicalDeviceBufferDeviceAddressFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceBufferDeviceAddressFeaturesEXT...\n");
        VkPhysicalDeviceBufferDeviceAddressFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceBufferAddressFeaturesEXT...\n");
        VkPhysicalDeviceBufferAddressFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceBufferAddressFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceBufferAddressFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferDeviceAddressInfo_pNext(json& name){
        printf("Deserializing VkBufferDeviceAddressInfo...\n");
        VkBufferDeviceAddressInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferDeviceAddressInfo*)malloc(sizeof(VkBufferDeviceAddressInfo));
[&]() {
*(result)=deserialize_VkBufferDeviceAddressInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferDeviceAddressInfoKHR_pNext(json& name){
        printf("Deserializing VkBufferDeviceAddressInfoKHR...\n");
        VkBufferDeviceAddressInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferDeviceAddressInfoKHR*)malloc(sizeof(VkBufferDeviceAddressInfoKHR));
[&]() {
*(result)=deserialize_VkBufferDeviceAddressInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferDeviceAddressInfoEXT_pNext(json& name){
        printf("Deserializing VkBufferDeviceAddressInfoEXT...\n");
        VkBufferDeviceAddressInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferDeviceAddressInfoEXT*)malloc(sizeof(VkBufferDeviceAddressInfoEXT));
[&]() {
*(result)=deserialize_VkBufferDeviceAddressInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferOpaqueCaptureAddressCreateInfo_pNext(json& name){
        printf("Deserializing VkBufferOpaqueCaptureAddressCreateInfo...\n");
        VkBufferOpaqueCaptureAddressCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferOpaqueCaptureAddressCreateInfo*)malloc(sizeof(VkBufferOpaqueCaptureAddressCreateInfo));
[&]() {
*(result)=deserialize_VkBufferOpaqueCaptureAddressCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkBufferOpaqueCaptureAddressCreateInfoKHR...\n");
        VkBufferOpaqueCaptureAddressCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferOpaqueCaptureAddressCreateInfoKHR*)malloc(sizeof(VkBufferOpaqueCaptureAddressCreateInfoKHR));
[&]() {
*(result)=deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferDeviceAddressCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkBufferDeviceAddressCreateInfoEXT...\n");
        VkBufferDeviceAddressCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferDeviceAddressCreateInfoEXT*)malloc(sizeof(VkBufferDeviceAddressCreateInfoEXT));
[&]() {
*(result)=deserialize_VkBufferDeviceAddressCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageViewImageFormatInfoEXT...\n");
        VkPhysicalDeviceImageViewImageFormatInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageViewImageFormatInfoEXT*)malloc(sizeof(VkPhysicalDeviceImageViewImageFormatInfoEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT_pNext(json& name){
        printf("Deserializing VkFilterCubicImageViewImageFormatPropertiesEXT...\n");
        VkFilterCubicImageViewImageFormatPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFilterCubicImageViewImageFormatPropertiesEXT*)malloc(sizeof(VkFilterCubicImageViewImageFormatPropertiesEXT));
[&]() {
*(result)=deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImagelessFramebufferFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImagelessFramebufferFeatures...\n");
        VkPhysicalDeviceImagelessFramebufferFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImagelessFramebufferFeatures*)malloc(sizeof(VkPhysicalDeviceImagelessFramebufferFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImagelessFramebufferFeaturesKHR...\n");
        VkPhysicalDeviceImagelessFramebufferFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImagelessFramebufferFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceImagelessFramebufferFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFramebufferAttachmentsCreateInfo_pNext(json& name){
        printf("Deserializing VkFramebufferAttachmentsCreateInfo...\n");
        VkFramebufferAttachmentsCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFramebufferAttachmentsCreateInfo*)malloc(sizeof(VkFramebufferAttachmentsCreateInfo));
[&]() {
*(result)=deserialize_VkFramebufferAttachmentsCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFramebufferAttachmentsCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkFramebufferAttachmentsCreateInfoKHR...\n");
        VkFramebufferAttachmentsCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFramebufferAttachmentsCreateInfoKHR*)malloc(sizeof(VkFramebufferAttachmentsCreateInfoKHR));
[&]() {
*(result)=deserialize_VkFramebufferAttachmentsCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFramebufferAttachmentImageInfo_pNext(json& name){
        printf("Deserializing VkFramebufferAttachmentImageInfo...\n");
        VkFramebufferAttachmentImageInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFramebufferAttachmentImageInfo*)malloc(sizeof(VkFramebufferAttachmentImageInfo));
[&]() {
*(result)=deserialize_VkFramebufferAttachmentImageInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFramebufferAttachmentImageInfoKHR_pNext(json& name){
        printf("Deserializing VkFramebufferAttachmentImageInfoKHR...\n");
        VkFramebufferAttachmentImageInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFramebufferAttachmentImageInfoKHR*)malloc(sizeof(VkFramebufferAttachmentImageInfoKHR));
[&]() {
*(result)=deserialize_VkFramebufferAttachmentImageInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassAttachmentBeginInfo_pNext(json& name){
        printf("Deserializing VkRenderPassAttachmentBeginInfo...\n");
        VkRenderPassAttachmentBeginInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassAttachmentBeginInfo*)malloc(sizeof(VkRenderPassAttachmentBeginInfo));
[&]() {
*(result)=deserialize_VkRenderPassAttachmentBeginInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassAttachmentBeginInfoKHR_pNext(json& name){
        printf("Deserializing VkRenderPassAttachmentBeginInfoKHR...\n");
        VkRenderPassAttachmentBeginInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassAttachmentBeginInfoKHR*)malloc(sizeof(VkRenderPassAttachmentBeginInfoKHR));
[&]() {
*(result)=deserialize_VkRenderPassAttachmentBeginInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTextureCompressionASTCHDRFeatures...\n");
        VkPhysicalDeviceTextureCompressionASTCHDRFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTextureCompressionASTCHDRFeatures*)malloc(sizeof(VkPhysicalDeviceTextureCompressionASTCHDRFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT...\n");
        VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCooperativeMatrixFeaturesNV...\n");
        VkPhysicalDeviceCooperativeMatrixFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCooperativeMatrixFeaturesNV*)malloc(sizeof(VkPhysicalDeviceCooperativeMatrixFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCooperativeMatrixPropertiesNV...\n");
        VkPhysicalDeviceCooperativeMatrixPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCooperativeMatrixPropertiesNV*)malloc(sizeof(VkPhysicalDeviceCooperativeMatrixPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCooperativeMatrixPropertiesNV_pNext(json& name){
        printf("Deserializing VkCooperativeMatrixPropertiesNV...\n");
        VkCooperativeMatrixPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCooperativeMatrixPropertiesNV*)malloc(sizeof(VkCooperativeMatrixPropertiesNV));
[&]() {
*(result)=deserialize_VkCooperativeMatrixPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceYcbcrImageArraysFeaturesEXT...\n");
        VkPhysicalDeviceYcbcrImageArraysFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewHandleInfoNVX_pNext(json& name){
        printf("Deserializing VkImageViewHandleInfoNVX...\n");
        VkImageViewHandleInfoNVX* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewHandleInfoNVX*)malloc(sizeof(VkImageViewHandleInfoNVX));
[&]() {
*(result)=deserialize_VkImageViewHandleInfoNVX(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewAddressPropertiesNVX_pNext(json& name){
        printf("Deserializing VkImageViewAddressPropertiesNVX...\n");
        VkImageViewAddressPropertiesNVX* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewAddressPropertiesNVX*)malloc(sizeof(VkImageViewAddressPropertiesNVX));
[&]() {
*(result)=deserialize_VkImageViewAddressPropertiesNVX(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCreationFeedback_pNext(json& name){
        printf("Deserializing VkPipelineCreationFeedback...\n");
        VkPipelineCreationFeedback* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCreationFeedback*)malloc(sizeof(VkPipelineCreationFeedback));
[&]() {
*(result)=deserialize_VkPipelineCreationFeedback(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCreationFeedbackEXT_pNext(json& name){
        printf("Deserializing VkPipelineCreationFeedbackEXT...\n");
        VkPipelineCreationFeedbackEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCreationFeedbackEXT*)malloc(sizeof(VkPipelineCreationFeedbackEXT));
[&]() {
*(result)=deserialize_VkPipelineCreationFeedbackEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCreationFeedbackCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineCreationFeedbackCreateInfo...\n");
        VkPipelineCreationFeedbackCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCreationFeedbackCreateInfo*)malloc(sizeof(VkPipelineCreationFeedbackCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineCreationFeedbackCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCreationFeedbackCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineCreationFeedbackCreateInfoEXT...\n");
        VkPipelineCreationFeedbackCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCreationFeedbackCreateInfoEXT*)malloc(sizeof(VkPipelineCreationFeedbackCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineCreationFeedbackCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePresentBarrierFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePresentBarrierFeaturesNV...\n");
        VkPhysicalDevicePresentBarrierFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePresentBarrierFeaturesNV*)malloc(sizeof(VkPhysicalDevicePresentBarrierFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfaceCapabilitiesPresentBarrierNV_pNext(json& name){
        printf("Deserializing VkSurfaceCapabilitiesPresentBarrierNV...\n");
        VkSurfaceCapabilitiesPresentBarrierNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfaceCapabilitiesPresentBarrierNV*)malloc(sizeof(VkSurfaceCapabilitiesPresentBarrierNV));
[&]() {
*(result)=deserialize_VkSurfaceCapabilitiesPresentBarrierNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainPresentBarrierCreateInfoNV_pNext(json& name){
        printf("Deserializing VkSwapchainPresentBarrierCreateInfoNV...\n");
        VkSwapchainPresentBarrierCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainPresentBarrierCreateInfoNV*)malloc(sizeof(VkSwapchainPresentBarrierCreateInfoNV));
[&]() {
*(result)=deserialize_VkSwapchainPresentBarrierCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePerformanceQueryFeaturesKHR...\n");
        VkPhysicalDevicePerformanceQueryFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePerformanceQueryFeaturesKHR*)malloc(sizeof(VkPhysicalDevicePerformanceQueryFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePerformanceQueryPropertiesKHR...\n");
        VkPhysicalDevicePerformanceQueryPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePerformanceQueryPropertiesKHR*)malloc(sizeof(VkPhysicalDevicePerformanceQueryPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceCounterKHR_pNext(json& name){
        printf("Deserializing VkPerformanceCounterKHR...\n");
        VkPerformanceCounterKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceCounterKHR*)malloc(sizeof(VkPerformanceCounterKHR));
[&]() {
*(result)=deserialize_VkPerformanceCounterKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceCounterDescriptionKHR_pNext(json& name){
        printf("Deserializing VkPerformanceCounterDescriptionKHR...\n");
        VkPerformanceCounterDescriptionKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceCounterDescriptionKHR*)malloc(sizeof(VkPerformanceCounterDescriptionKHR));
[&]() {
*(result)=deserialize_VkPerformanceCounterDescriptionKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueryPoolPerformanceCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkQueryPoolPerformanceCreateInfoKHR...\n");
        VkQueryPoolPerformanceCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueryPoolPerformanceCreateInfoKHR*)malloc(sizeof(VkQueryPoolPerformanceCreateInfoKHR));
[&]() {
*(result)=deserialize_VkQueryPoolPerformanceCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceCounterResultKHR_pNext(json& name){
        printf("Deserializing VkPerformanceCounterResultKHR...\n");
        VkPerformanceCounterResultKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceCounterResultKHR*)malloc(sizeof(VkPerformanceCounterResultKHR));
[&]() {
*(result)=deserialize_VkPerformanceCounterResultKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAcquireProfilingLockInfoKHR_pNext(json& name){
        printf("Deserializing VkAcquireProfilingLockInfoKHR...\n");
        VkAcquireProfilingLockInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAcquireProfilingLockInfoKHR*)malloc(sizeof(VkAcquireProfilingLockInfoKHR));
[&]() {
*(result)=deserialize_VkAcquireProfilingLockInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceQuerySubmitInfoKHR_pNext(json& name){
        printf("Deserializing VkPerformanceQuerySubmitInfoKHR...\n");
        VkPerformanceQuerySubmitInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceQuerySubmitInfoKHR*)malloc(sizeof(VkPerformanceQuerySubmitInfoKHR));
[&]() {
*(result)=deserialize_VkPerformanceQuerySubmitInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkHeadlessSurfaceCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkHeadlessSurfaceCreateInfoEXT...\n");
        VkHeadlessSurfaceCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkHeadlessSurfaceCreateInfoEXT*)malloc(sizeof(VkHeadlessSurfaceCreateInfoEXT));
[&]() {
*(result)=deserialize_VkHeadlessSurfaceCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCoverageReductionModeFeaturesNV...\n");
        VkPhysicalDeviceCoverageReductionModeFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCoverageReductionModeFeaturesNV*)malloc(sizeof(VkPhysicalDeviceCoverageReductionModeFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCoverageReductionStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineCoverageReductionStateCreateInfoNV...\n");
        VkPipelineCoverageReductionStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCoverageReductionStateCreateInfoNV*)malloc(sizeof(VkPipelineCoverageReductionStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineCoverageReductionStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFramebufferMixedSamplesCombinationNV_pNext(json& name){
        printf("Deserializing VkFramebufferMixedSamplesCombinationNV...\n");
        VkFramebufferMixedSamplesCombinationNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFramebufferMixedSamplesCombinationNV*)malloc(sizeof(VkFramebufferMixedSamplesCombinationNV));
[&]() {
*(result)=deserialize_VkFramebufferMixedSamplesCombinationNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL...\n");
        VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL*)malloc(sizeof(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceValueDataINTEL_pNext(json& name){
        printf("Deserializing VkPerformanceValueDataINTEL...\n");
        VkPerformanceValueDataINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceValueDataINTEL*)malloc(sizeof(VkPerformanceValueDataINTEL));
[&]() {
*(result)=deserialize_VkPerformanceValueDataINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceValueINTEL_pNext(json& name){
        printf("Deserializing VkPerformanceValueINTEL...\n");
        VkPerformanceValueINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceValueINTEL*)malloc(sizeof(VkPerformanceValueINTEL));
[&]() {
*(result)=deserialize_VkPerformanceValueINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkInitializePerformanceApiInfoINTEL_pNext(json& name){
        printf("Deserializing VkInitializePerformanceApiInfoINTEL...\n");
        VkInitializePerformanceApiInfoINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkInitializePerformanceApiInfoINTEL*)malloc(sizeof(VkInitializePerformanceApiInfoINTEL));
[&]() {
*(result)=deserialize_VkInitializePerformanceApiInfoINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL_pNext(json& name){
        printf("Deserializing VkQueryPoolPerformanceQueryCreateInfoINTEL...\n");
        VkQueryPoolPerformanceQueryCreateInfoINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueryPoolPerformanceQueryCreateInfoINTEL*)malloc(sizeof(VkQueryPoolPerformanceQueryCreateInfoINTEL));
[&]() {
*(result)=deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueryPoolCreateInfoINTEL_pNext(json& name){
        printf("Deserializing VkQueryPoolCreateInfoINTEL...\n");
        VkQueryPoolCreateInfoINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueryPoolCreateInfoINTEL*)malloc(sizeof(VkQueryPoolCreateInfoINTEL));
[&]() {
*(result)=deserialize_VkQueryPoolCreateInfoINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceMarkerInfoINTEL_pNext(json& name){
        printf("Deserializing VkPerformanceMarkerInfoINTEL...\n");
        VkPerformanceMarkerInfoINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceMarkerInfoINTEL*)malloc(sizeof(VkPerformanceMarkerInfoINTEL));
[&]() {
*(result)=deserialize_VkPerformanceMarkerInfoINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceStreamMarkerInfoINTEL_pNext(json& name){
        printf("Deserializing VkPerformanceStreamMarkerInfoINTEL...\n");
        VkPerformanceStreamMarkerInfoINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceStreamMarkerInfoINTEL*)malloc(sizeof(VkPerformanceStreamMarkerInfoINTEL));
[&]() {
*(result)=deserialize_VkPerformanceStreamMarkerInfoINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceOverrideInfoINTEL_pNext(json& name){
        printf("Deserializing VkPerformanceOverrideInfoINTEL...\n");
        VkPerformanceOverrideInfoINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceOverrideInfoINTEL*)malloc(sizeof(VkPerformanceOverrideInfoINTEL));
[&]() {
*(result)=deserialize_VkPerformanceOverrideInfoINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPerformanceConfigurationAcquireInfoINTEL_pNext(json& name){
        printf("Deserializing VkPerformanceConfigurationAcquireInfoINTEL...\n");
        VkPerformanceConfigurationAcquireInfoINTEL* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPerformanceConfigurationAcquireInfoINTEL*)malloc(sizeof(VkPerformanceConfigurationAcquireInfoINTEL));
[&]() {
*(result)=deserialize_VkPerformanceConfigurationAcquireInfoINTEL(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderClockFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderClockFeaturesKHR...\n");
        VkPhysicalDeviceShaderClockFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderClockFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceShaderClockFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceIndexTypeUint8FeaturesEXT...\n");
        VkPhysicalDeviceIndexTypeUint8FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceIndexTypeUint8FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceIndexTypeUint8FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderSMBuiltinsPropertiesNV...\n");
        VkPhysicalDeviceShaderSMBuiltinsPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV*)malloc(sizeof(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderSMBuiltinsFeaturesNV...\n");
        VkPhysicalDeviceShaderSMBuiltinsFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV*)malloc(sizeof(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT...\n");
        VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures...\n");
        VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures*)malloc(sizeof(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR...\n");
        VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentReferenceStencilLayout_pNext(json& name){
        printf("Deserializing VkAttachmentReferenceStencilLayout...\n");
        VkAttachmentReferenceStencilLayout* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentReferenceStencilLayout*)malloc(sizeof(VkAttachmentReferenceStencilLayout));
[&]() {
*(result)=deserialize_VkAttachmentReferenceStencilLayout(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT...\n");
        VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentReferenceStencilLayoutKHR_pNext(json& name){
        printf("Deserializing VkAttachmentReferenceStencilLayoutKHR...\n");
        VkAttachmentReferenceStencilLayoutKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentReferenceStencilLayoutKHR*)malloc(sizeof(VkAttachmentReferenceStencilLayoutKHR));
[&]() {
*(result)=deserialize_VkAttachmentReferenceStencilLayoutKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentDescriptionStencilLayout_pNext(json& name){
        printf("Deserializing VkAttachmentDescriptionStencilLayout...\n");
        VkAttachmentDescriptionStencilLayout* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentDescriptionStencilLayout*)malloc(sizeof(VkAttachmentDescriptionStencilLayout));
[&]() {
*(result)=deserialize_VkAttachmentDescriptionStencilLayout(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentDescriptionStencilLayoutKHR_pNext(json& name){
        printf("Deserializing VkAttachmentDescriptionStencilLayoutKHR...\n");
        VkAttachmentDescriptionStencilLayoutKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentDescriptionStencilLayoutKHR*)malloc(sizeof(VkAttachmentDescriptionStencilLayoutKHR));
[&]() {
*(result)=deserialize_VkAttachmentDescriptionStencilLayoutKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR...\n");
        VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR*)malloc(sizeof(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineInfoKHR_pNext(json& name){
        printf("Deserializing VkPipelineInfoKHR...\n");
        VkPipelineInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineInfoKHR*)malloc(sizeof(VkPipelineInfoKHR));
[&]() {
*(result)=deserialize_VkPipelineInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineInfoEXT...\n");
        VkPipelineInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineInfoEXT*)malloc(sizeof(VkPipelineInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineExecutablePropertiesKHR_pNext(json& name){
        printf("Deserializing VkPipelineExecutablePropertiesKHR...\n");
        VkPipelineExecutablePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineExecutablePropertiesKHR*)malloc(sizeof(VkPipelineExecutablePropertiesKHR));
[&]() {
*(result)=deserialize_VkPipelineExecutablePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineExecutableInfoKHR_pNext(json& name){
        printf("Deserializing VkPipelineExecutableInfoKHR...\n");
        VkPipelineExecutableInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineExecutableInfoKHR*)malloc(sizeof(VkPipelineExecutableInfoKHR));
[&]() {
*(result)=deserialize_VkPipelineExecutableInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineExecutableStatisticValueKHR_pNext(json& name){
        printf("Deserializing VkPipelineExecutableStatisticValueKHR...\n");
        VkPipelineExecutableStatisticValueKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineExecutableStatisticValueKHR*)malloc(sizeof(VkPipelineExecutableStatisticValueKHR));
[&]() {
*(result)=deserialize_VkPipelineExecutableStatisticValueKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineExecutableStatisticKHR_pNext(json& name){
        printf("Deserializing VkPipelineExecutableStatisticKHR...\n");
        VkPipelineExecutableStatisticKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineExecutableStatisticKHR*)malloc(sizeof(VkPipelineExecutableStatisticKHR));
[&]() {
*(result)=deserialize_VkPipelineExecutableStatisticKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineExecutableInternalRepresentationKHR_pNext(json& name){
        printf("Deserializing VkPipelineExecutableInternalRepresentationKHR...\n");
        VkPipelineExecutableInternalRepresentationKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineExecutableInternalRepresentationKHR*)malloc(sizeof(VkPipelineExecutableInternalRepresentationKHR));
[&]() {
*(result)=deserialize_VkPipelineExecutableInternalRepresentationKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures...\n");
        VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures*)malloc(sizeof(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT...\n");
        VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT...\n");
        VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTexelBufferAlignmentProperties...\n");
        VkPhysicalDeviceTexelBufferAlignmentProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTexelBufferAlignmentProperties*)malloc(sizeof(VkPhysicalDeviceTexelBufferAlignmentProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT...\n");
        VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubgroupSizeControlFeatures...\n");
        VkPhysicalDeviceSubgroupSizeControlFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubgroupSizeControlFeatures*)malloc(sizeof(VkPhysicalDeviceSubgroupSizeControlFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubgroupSizeControlFeaturesEXT...\n");
        VkPhysicalDeviceSubgroupSizeControlFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubgroupSizeControlProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubgroupSizeControlProperties...\n");
        VkPhysicalDeviceSubgroupSizeControlProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubgroupSizeControlProperties*)malloc(sizeof(VkPhysicalDeviceSubgroupSizeControlProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubgroupSizeControlPropertiesEXT...\n");
        VkPhysicalDeviceSubgroupSizeControlPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineShaderStageRequiredSubgroupSizeCreateInfo...\n");
        VkPipelineShaderStageRequiredSubgroupSizeCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo*)malloc(sizeof(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT...\n");
        VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT*)malloc(sizeof(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkShaderRequiredSubgroupSizeCreateInfoEXT...\n");
        VkShaderRequiredSubgroupSizeCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShaderRequiredSubgroupSizeCreateInfoEXT*)malloc(sizeof(VkShaderRequiredSubgroupSizeCreateInfoEXT));
[&]() {
*(result)=deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI_pNext(json& name){
        printf("Deserializing VkSubpassShadingPipelineCreateInfoHUAWEI...\n");
        VkSubpassShadingPipelineCreateInfoHUAWEI* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassShadingPipelineCreateInfoHUAWEI*)malloc(sizeof(VkSubpassShadingPipelineCreateInfoHUAWEI));
[&]() {
*(result)=deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubpassShadingPropertiesHUAWEI...\n");
        VkPhysicalDeviceSubpassShadingPropertiesHUAWEI* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI*)malloc(sizeof(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI...\n");
        VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI*)malloc(sizeof(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI));
[&]() {
*(result)=deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo_pNext(json& name){
        printf("Deserializing VkMemoryOpaqueCaptureAddressAllocateInfo...\n");
        VkMemoryOpaqueCaptureAddressAllocateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryOpaqueCaptureAddressAllocateInfo*)malloc(sizeof(VkMemoryOpaqueCaptureAddressAllocateInfo));
[&]() {
*(result)=deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR_pNext(json& name){
        printf("Deserializing VkMemoryOpaqueCaptureAddressAllocateInfoKHR...\n");
        VkMemoryOpaqueCaptureAddressAllocateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryOpaqueCaptureAddressAllocateInfoKHR*)malloc(sizeof(VkMemoryOpaqueCaptureAddressAllocateInfoKHR));
[&]() {
*(result)=deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo_pNext(json& name){
        printf("Deserializing VkDeviceMemoryOpaqueCaptureAddressInfo...\n");
        VkDeviceMemoryOpaqueCaptureAddressInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceMemoryOpaqueCaptureAddressInfo*)malloc(sizeof(VkDeviceMemoryOpaqueCaptureAddressInfo));
[&]() {
*(result)=deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceMemoryOpaqueCaptureAddressInfoKHR...\n");
        VkDeviceMemoryOpaqueCaptureAddressInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceMemoryOpaqueCaptureAddressInfoKHR*)malloc(sizeof(VkDeviceMemoryOpaqueCaptureAddressInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceLineRasterizationFeaturesEXT...\n");
        VkPhysicalDeviceLineRasterizationFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceLineRasterizationFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceLineRasterizationFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceLineRasterizationPropertiesEXT...\n");
        VkPhysicalDeviceLineRasterizationPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceLineRasterizationPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceLineRasterizationPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRasterizationLineStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineRasterizationLineStateCreateInfoEXT...\n");
        VkPipelineRasterizationLineStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRasterizationLineStateCreateInfoEXT*)malloc(sizeof(VkPipelineRasterizationLineStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelineCreationCacheControlFeatures...\n");
        VkPhysicalDevicePipelineCreationCacheControlFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelineCreationCacheControlFeatures*)malloc(sizeof(VkPhysicalDevicePipelineCreationCacheControlFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT...\n");
        VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkan11Features_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkan11Features...\n");
        VkPhysicalDeviceVulkan11Features* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkan11Features*)malloc(sizeof(VkPhysicalDeviceVulkan11Features));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkan11Features(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkan11Properties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkan11Properties...\n");
        VkPhysicalDeviceVulkan11Properties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkan11Properties*)malloc(sizeof(VkPhysicalDeviceVulkan11Properties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkan11Properties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkan12Features_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkan12Features...\n");
        VkPhysicalDeviceVulkan12Features* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkan12Features*)malloc(sizeof(VkPhysicalDeviceVulkan12Features));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkan12Features(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkan12Properties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkan12Properties...\n");
        VkPhysicalDeviceVulkan12Properties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkan12Properties*)malloc(sizeof(VkPhysicalDeviceVulkan12Properties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkan12Properties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkan13Features_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkan13Features...\n");
        VkPhysicalDeviceVulkan13Features* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkan13Features*)malloc(sizeof(VkPhysicalDeviceVulkan13Features));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkan13Features(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVulkan13Properties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVulkan13Properties...\n");
        VkPhysicalDeviceVulkan13Properties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVulkan13Properties*)malloc(sizeof(VkPhysicalDeviceVulkan13Properties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVulkan13Properties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineCompilerControlCreateInfoAMD_pNext(json& name){
        printf("Deserializing VkPipelineCompilerControlCreateInfoAMD...\n");
        VkPipelineCompilerControlCreateInfoAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineCompilerControlCreateInfoAMD*)malloc(sizeof(VkPipelineCompilerControlCreateInfoAMD));
[&]() {
*(result)=deserialize_VkPipelineCompilerControlCreateInfoAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCoherentMemoryFeaturesAMD...\n");
        VkPhysicalDeviceCoherentMemoryFeaturesAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCoherentMemoryFeaturesAMD*)malloc(sizeof(VkPhysicalDeviceCoherentMemoryFeaturesAMD));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceToolProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceToolProperties...\n");
        VkPhysicalDeviceToolProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceToolProperties*)malloc(sizeof(VkPhysicalDeviceToolProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceToolProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceToolPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceToolPropertiesEXT...\n");
        VkPhysicalDeviceToolPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceToolPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceToolPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceToolPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerCustomBorderColorCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkSamplerCustomBorderColorCreateInfoEXT...\n");
        VkSamplerCustomBorderColorCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerCustomBorderColorCreateInfoEXT*)malloc(sizeof(VkSamplerCustomBorderColorCreateInfoEXT));
[&]() {
*(result)=deserialize_VkSamplerCustomBorderColorCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCustomBorderColorPropertiesEXT...\n");
        VkPhysicalDeviceCustomBorderColorPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCustomBorderColorPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceCustomBorderColorPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCustomBorderColorFeaturesEXT...\n");
        VkPhysicalDeviceCustomBorderColorFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCustomBorderColorFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceCustomBorderColorFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkSamplerBorderColorComponentMappingCreateInfoEXT...\n");
        VkSamplerBorderColorComponentMappingCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerBorderColorComponentMappingCreateInfoEXT*)malloc(sizeof(VkSamplerBorderColorComponentMappingCreateInfoEXT));
[&]() {
*(result)=deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceBorderColorSwizzleFeaturesEXT...\n");
        VkPhysicalDeviceBorderColorSwizzleFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceOrHostAddressKHR_pNext(json& name){
        printf("Deserializing VkDeviceOrHostAddressKHR...\n");
        VkDeviceOrHostAddressKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceOrHostAddressKHR*)malloc(sizeof(VkDeviceOrHostAddressKHR));
[&]() {
*(result)=deserialize_VkDeviceOrHostAddressKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceOrHostAddressConstKHR_pNext(json& name){
        printf("Deserializing VkDeviceOrHostAddressConstKHR...\n");
        VkDeviceOrHostAddressConstKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceOrHostAddressConstKHR*)malloc(sizeof(VkDeviceOrHostAddressConstKHR));
[&]() {
*(result)=deserialize_VkDeviceOrHostAddressConstKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureGeometryTrianglesDataKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureGeometryTrianglesDataKHR...\n");
        VkAccelerationStructureGeometryTrianglesDataKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureGeometryTrianglesDataKHR*)malloc(sizeof(VkAccelerationStructureGeometryTrianglesDataKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureGeometryAabbsDataKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureGeometryAabbsDataKHR...\n");
        VkAccelerationStructureGeometryAabbsDataKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureGeometryAabbsDataKHR*)malloc(sizeof(VkAccelerationStructureGeometryAabbsDataKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureGeometryInstancesDataKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureGeometryInstancesDataKHR...\n");
        VkAccelerationStructureGeometryInstancesDataKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureGeometryInstancesDataKHR*)malloc(sizeof(VkAccelerationStructureGeometryInstancesDataKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureGeometryDataKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureGeometryDataKHR...\n");
        VkAccelerationStructureGeometryDataKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureGeometryDataKHR*)malloc(sizeof(VkAccelerationStructureGeometryDataKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureGeometryDataKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureGeometryKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureGeometryKHR...\n");
        VkAccelerationStructureGeometryKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureGeometryKHR*)malloc(sizeof(VkAccelerationStructureGeometryKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureGeometryKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureBuildGeometryInfoKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureBuildGeometryInfoKHR...\n");
        VkAccelerationStructureBuildGeometryInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureBuildGeometryInfoKHR*)malloc(sizeof(VkAccelerationStructureBuildGeometryInfoKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureBuildGeometryInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureBuildRangeInfoKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureBuildRangeInfoKHR...\n");
        VkAccelerationStructureBuildRangeInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureBuildRangeInfoKHR*)malloc(sizeof(VkAccelerationStructureBuildRangeInfoKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureBuildRangeInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureCreateInfoKHR...\n");
        VkAccelerationStructureCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureCreateInfoKHR*)malloc(sizeof(VkAccelerationStructureCreateInfoKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAabbPositionsKHR_pNext(json& name){
        printf("Deserializing VkAabbPositionsKHR...\n");
        VkAabbPositionsKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAabbPositionsKHR*)malloc(sizeof(VkAabbPositionsKHR));
[&]() {
*(result)=deserialize_VkAabbPositionsKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAabbPositionsNV_pNext(json& name){
        printf("Deserializing VkAabbPositionsNV...\n");
        VkAabbPositionsNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAabbPositionsNV*)malloc(sizeof(VkAabbPositionsNV));
[&]() {
*(result)=deserialize_VkAabbPositionsNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTransformMatrixKHR_pNext(json& name){
        printf("Deserializing VkTransformMatrixKHR...\n");
        VkTransformMatrixKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTransformMatrixKHR*)malloc(sizeof(VkTransformMatrixKHR));
[&]() {
*(result)=deserialize_VkTransformMatrixKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTransformMatrixNV_pNext(json& name){
        printf("Deserializing VkTransformMatrixNV...\n");
        VkTransformMatrixNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTransformMatrixNV*)malloc(sizeof(VkTransformMatrixNV));
[&]() {
*(result)=deserialize_VkTransformMatrixNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureInstanceKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureInstanceKHR...\n");
        VkAccelerationStructureInstanceKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureInstanceKHR*)malloc(sizeof(VkAccelerationStructureInstanceKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureInstanceKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureInstanceNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureInstanceNV...\n");
        VkAccelerationStructureInstanceNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureInstanceNV*)malloc(sizeof(VkAccelerationStructureInstanceNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureInstanceNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureDeviceAddressInfoKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureDeviceAddressInfoKHR...\n");
        VkAccelerationStructureDeviceAddressInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureDeviceAddressInfoKHR*)malloc(sizeof(VkAccelerationStructureDeviceAddressInfoKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureDeviceAddressInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureVersionInfoKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureVersionInfoKHR...\n");
        VkAccelerationStructureVersionInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureVersionInfoKHR*)malloc(sizeof(VkAccelerationStructureVersionInfoKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureVersionInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyAccelerationStructureInfoKHR_pNext(json& name){
        printf("Deserializing VkCopyAccelerationStructureInfoKHR...\n");
        VkCopyAccelerationStructureInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyAccelerationStructureInfoKHR*)malloc(sizeof(VkCopyAccelerationStructureInfoKHR));
[&]() {
*(result)=deserialize_VkCopyAccelerationStructureInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyAccelerationStructureToMemoryInfoKHR_pNext(json& name){
        printf("Deserializing VkCopyAccelerationStructureToMemoryInfoKHR...\n");
        VkCopyAccelerationStructureToMemoryInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyAccelerationStructureToMemoryInfoKHR*)malloc(sizeof(VkCopyAccelerationStructureToMemoryInfoKHR));
[&]() {
*(result)=deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyMemoryToAccelerationStructureInfoKHR_pNext(json& name){
        printf("Deserializing VkCopyMemoryToAccelerationStructureInfoKHR...\n");
        VkCopyMemoryToAccelerationStructureInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyMemoryToAccelerationStructureInfoKHR*)malloc(sizeof(VkCopyMemoryToAccelerationStructureInfoKHR));
[&]() {
*(result)=deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkRayTracingPipelineInterfaceCreateInfoKHR...\n");
        VkRayTracingPipelineInterfaceCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRayTracingPipelineInterfaceCreateInfoKHR*)malloc(sizeof(VkRayTracingPipelineInterfaceCreateInfoKHR));
[&]() {
*(result)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineLibraryCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkPipelineLibraryCreateInfoKHR...\n");
        VkPipelineLibraryCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineLibraryCreateInfoKHR*)malloc(sizeof(VkPipelineLibraryCreateInfoKHR));
[&]() {
*(result)=deserialize_VkPipelineLibraryCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExtendedDynamicStateFeaturesEXT...\n");
        VkPhysicalDeviceExtendedDynamicStateFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExtendedDynamicState2FeaturesEXT...\n");
        VkPhysicalDeviceExtendedDynamicState2FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExtendedDynamicState3FeaturesEXT...\n");
        VkPhysicalDeviceExtendedDynamicState3FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExtendedDynamicState3PropertiesEXT...\n");
        VkPhysicalDeviceExtendedDynamicState3PropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT*)malloc(sizeof(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkColorBlendEquationEXT_pNext(json& name){
        printf("Deserializing VkColorBlendEquationEXT...\n");
        VkColorBlendEquationEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkColorBlendEquationEXT*)malloc(sizeof(VkColorBlendEquationEXT));
[&]() {
*(result)=deserialize_VkColorBlendEquationEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkColorBlendAdvancedEXT_pNext(json& name){
        printf("Deserializing VkColorBlendAdvancedEXT...\n");
        VkColorBlendAdvancedEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkColorBlendAdvancedEXT*)malloc(sizeof(VkColorBlendAdvancedEXT));
[&]() {
*(result)=deserialize_VkColorBlendAdvancedEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassTransformBeginInfoQCOM_pNext(json& name){
        printf("Deserializing VkRenderPassTransformBeginInfoQCOM...\n");
        VkRenderPassTransformBeginInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassTransformBeginInfoQCOM*)malloc(sizeof(VkRenderPassTransformBeginInfoQCOM));
[&]() {
*(result)=deserialize_VkRenderPassTransformBeginInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyCommandTransformInfoQCOM_pNext(json& name){
        printf("Deserializing VkCopyCommandTransformInfoQCOM...\n");
        VkCopyCommandTransformInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyCommandTransformInfoQCOM*)malloc(sizeof(VkCopyCommandTransformInfoQCOM));
[&]() {
*(result)=deserialize_VkCopyCommandTransformInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM_pNext(json& name){
        printf("Deserializing VkCommandBufferInheritanceRenderPassTransformInfoQCOM...\n");
        VkCommandBufferInheritanceRenderPassTransformInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferInheritanceRenderPassTransformInfoQCOM*)malloc(sizeof(VkCommandBufferInheritanceRenderPassTransformInfoQCOM));
[&]() {
*(result)=deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDiagnosticsConfigFeaturesNV...\n");
        VkPhysicalDeviceDiagnosticsConfigFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDiagnosticsConfigFeaturesNV*)malloc(sizeof(VkPhysicalDeviceDiagnosticsConfigFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceDiagnosticsConfigCreateInfoNV_pNext(json& name){
        printf("Deserializing VkDeviceDiagnosticsConfigCreateInfoNV...\n");
        VkDeviceDiagnosticsConfigCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceDiagnosticsConfigCreateInfoNV*)malloc(sizeof(VkDeviceDiagnosticsConfigCreateInfoNV));
[&]() {
*(result)=deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures...\n");
        VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures*)malloc(sizeof(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR...\n");
        VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR...\n");
        VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRobustness2FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRobustness2FeaturesEXT...\n");
        VkPhysicalDeviceRobustness2FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRobustness2FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceRobustness2FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRobustness2PropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRobustness2PropertiesEXT...\n");
        VkPhysicalDeviceRobustness2PropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRobustness2PropertiesEXT*)malloc(sizeof(VkPhysicalDeviceRobustness2PropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageRobustnessFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageRobustnessFeatures...\n");
        VkPhysicalDeviceImageRobustnessFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageRobustnessFeatures*)malloc(sizeof(VkPhysicalDeviceImageRobustnessFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageRobustnessFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageRobustnessFeaturesEXT...\n");
        VkPhysicalDeviceImageRobustnessFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageRobustnessFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceImageRobustnessFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR...\n");
        VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevice4444FormatsFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevice4444FormatsFeaturesEXT...\n");
        VkPhysicalDevice4444FormatsFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevice4444FormatsFeaturesEXT*)malloc(sizeof(VkPhysicalDevice4444FormatsFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubpassShadingFeaturesHUAWEI...\n");
        VkPhysicalDeviceSubpassShadingFeaturesHUAWEI* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI*)malloc(sizeof(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI...\n");
        VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI*)malloc(sizeof(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI));
[&]() {
*(result)=deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferCopy2_pNext(json& name){
        printf("Deserializing VkBufferCopy2...\n");
        VkBufferCopy2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferCopy2*)malloc(sizeof(VkBufferCopy2));
[&]() {
*(result)=deserialize_VkBufferCopy2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferCopy2KHR_pNext(json& name){
        printf("Deserializing VkBufferCopy2KHR...\n");
        VkBufferCopy2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferCopy2KHR*)malloc(sizeof(VkBufferCopy2KHR));
[&]() {
*(result)=deserialize_VkBufferCopy2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageCopy2_pNext(json& name){
        printf("Deserializing VkImageCopy2...\n");
        VkImageCopy2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageCopy2*)malloc(sizeof(VkImageCopy2));
[&]() {
*(result)=deserialize_VkImageCopy2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageCopy2KHR_pNext(json& name){
        printf("Deserializing VkImageCopy2KHR...\n");
        VkImageCopy2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageCopy2KHR*)malloc(sizeof(VkImageCopy2KHR));
[&]() {
*(result)=deserialize_VkImageCopy2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageBlit2_pNext(json& name){
        printf("Deserializing VkImageBlit2...\n");
        VkImageBlit2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageBlit2*)malloc(sizeof(VkImageBlit2));
[&]() {
*(result)=deserialize_VkImageBlit2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageBlit2KHR_pNext(json& name){
        printf("Deserializing VkImageBlit2KHR...\n");
        VkImageBlit2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageBlit2KHR*)malloc(sizeof(VkImageBlit2KHR));
[&]() {
*(result)=deserialize_VkImageBlit2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferImageCopy2_pNext(json& name){
        printf("Deserializing VkBufferImageCopy2...\n");
        VkBufferImageCopy2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferImageCopy2*)malloc(sizeof(VkBufferImageCopy2));
[&]() {
*(result)=deserialize_VkBufferImageCopy2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferImageCopy2KHR_pNext(json& name){
        printf("Deserializing VkBufferImageCopy2KHR...\n");
        VkBufferImageCopy2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferImageCopy2KHR*)malloc(sizeof(VkBufferImageCopy2KHR));
[&]() {
*(result)=deserialize_VkBufferImageCopy2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageResolve2_pNext(json& name){
        printf("Deserializing VkImageResolve2...\n");
        VkImageResolve2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageResolve2*)malloc(sizeof(VkImageResolve2));
[&]() {
*(result)=deserialize_VkImageResolve2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageResolve2KHR_pNext(json& name){
        printf("Deserializing VkImageResolve2KHR...\n");
        VkImageResolve2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageResolve2KHR*)malloc(sizeof(VkImageResolve2KHR));
[&]() {
*(result)=deserialize_VkImageResolve2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyBufferInfo2_pNext(json& name){
        printf("Deserializing VkCopyBufferInfo2...\n");
        VkCopyBufferInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyBufferInfo2*)malloc(sizeof(VkCopyBufferInfo2));
[&]() {
*(result)=deserialize_VkCopyBufferInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyBufferInfo2KHR_pNext(json& name){
        printf("Deserializing VkCopyBufferInfo2KHR...\n");
        VkCopyBufferInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyBufferInfo2KHR*)malloc(sizeof(VkCopyBufferInfo2KHR));
[&]() {
*(result)=deserialize_VkCopyBufferInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyImageInfo2_pNext(json& name){
        printf("Deserializing VkCopyImageInfo2...\n");
        VkCopyImageInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyImageInfo2*)malloc(sizeof(VkCopyImageInfo2));
[&]() {
*(result)=deserialize_VkCopyImageInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyImageInfo2KHR_pNext(json& name){
        printf("Deserializing VkCopyImageInfo2KHR...\n");
        VkCopyImageInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyImageInfo2KHR*)malloc(sizeof(VkCopyImageInfo2KHR));
[&]() {
*(result)=deserialize_VkCopyImageInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBlitImageInfo2_pNext(json& name){
        printf("Deserializing VkBlitImageInfo2...\n");
        VkBlitImageInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBlitImageInfo2*)malloc(sizeof(VkBlitImageInfo2));
[&]() {
*(result)=deserialize_VkBlitImageInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBlitImageInfo2KHR_pNext(json& name){
        printf("Deserializing VkBlitImageInfo2KHR...\n");
        VkBlitImageInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBlitImageInfo2KHR*)malloc(sizeof(VkBlitImageInfo2KHR));
[&]() {
*(result)=deserialize_VkBlitImageInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyBufferToImageInfo2_pNext(json& name){
        printf("Deserializing VkCopyBufferToImageInfo2...\n");
        VkCopyBufferToImageInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyBufferToImageInfo2*)malloc(sizeof(VkCopyBufferToImageInfo2));
[&]() {
*(result)=deserialize_VkCopyBufferToImageInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyBufferToImageInfo2KHR_pNext(json& name){
        printf("Deserializing VkCopyBufferToImageInfo2KHR...\n");
        VkCopyBufferToImageInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyBufferToImageInfo2KHR*)malloc(sizeof(VkCopyBufferToImageInfo2KHR));
[&]() {
*(result)=deserialize_VkCopyBufferToImageInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyImageToBufferInfo2_pNext(json& name){
        printf("Deserializing VkCopyImageToBufferInfo2...\n");
        VkCopyImageToBufferInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyImageToBufferInfo2*)malloc(sizeof(VkCopyImageToBufferInfo2));
[&]() {
*(result)=deserialize_VkCopyImageToBufferInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyImageToBufferInfo2KHR_pNext(json& name){
        printf("Deserializing VkCopyImageToBufferInfo2KHR...\n");
        VkCopyImageToBufferInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyImageToBufferInfo2KHR*)malloc(sizeof(VkCopyImageToBufferInfo2KHR));
[&]() {
*(result)=deserialize_VkCopyImageToBufferInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkResolveImageInfo2_pNext(json& name){
        printf("Deserializing VkResolveImageInfo2...\n");
        VkResolveImageInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkResolveImageInfo2*)malloc(sizeof(VkResolveImageInfo2));
[&]() {
*(result)=deserialize_VkResolveImageInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkResolveImageInfo2KHR_pNext(json& name){
        printf("Deserializing VkResolveImageInfo2KHR...\n");
        VkResolveImageInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkResolveImageInfo2KHR*)malloc(sizeof(VkResolveImageInfo2KHR));
[&]() {
*(result)=deserialize_VkResolveImageInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT...\n");
        VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFragmentShadingRateAttachmentInfoKHR_pNext(json& name){
        printf("Deserializing VkFragmentShadingRateAttachmentInfoKHR...\n");
        VkFragmentShadingRateAttachmentInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFragmentShadingRateAttachmentInfoKHR*)malloc(sizeof(VkFragmentShadingRateAttachmentInfoKHR));
[&]() {
*(result)=deserialize_VkFragmentShadingRateAttachmentInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkPipelineFragmentShadingRateStateCreateInfoKHR...\n");
        VkPipelineFragmentShadingRateStateCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineFragmentShadingRateStateCreateInfoKHR*)malloc(sizeof(VkPipelineFragmentShadingRateStateCreateInfoKHR));
[&]() {
*(result)=deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShadingRateFeaturesKHR...\n");
        VkPhysicalDeviceFragmentShadingRateFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShadingRateFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceFragmentShadingRateFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShadingRatePropertiesKHR...\n");
        VkPhysicalDeviceFragmentShadingRatePropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShadingRatePropertiesKHR*)malloc(sizeof(VkPhysicalDeviceFragmentShadingRatePropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShadingRateKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShadingRateKHR...\n");
        VkPhysicalDeviceFragmentShadingRateKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShadingRateKHR*)malloc(sizeof(VkPhysicalDeviceFragmentShadingRateKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShadingRateKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderTerminateInvocationFeatures...\n");
        VkPhysicalDeviceShaderTerminateInvocationFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderTerminateInvocationFeatures*)malloc(sizeof(VkPhysicalDeviceShaderTerminateInvocationFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR...\n");
        VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV...\n");
        VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV*)malloc(sizeof(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV...\n");
        VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV*)malloc(sizeof(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV_pNext(json& name){
        printf("Deserializing VkPipelineFragmentShadingRateEnumStateCreateInfoNV...\n");
        VkPipelineFragmentShadingRateEnumStateCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineFragmentShadingRateEnumStateCreateInfoNV*)malloc(sizeof(VkPipelineFragmentShadingRateEnumStateCreateInfoNV));
[&]() {
*(result)=deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureBuildSizesInfoKHR_pNext(json& name){
        printf("Deserializing VkAccelerationStructureBuildSizesInfoKHR...\n");
        VkAccelerationStructureBuildSizesInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureBuildSizesInfoKHR*)malloc(sizeof(VkAccelerationStructureBuildSizesInfoKHR));
[&]() {
*(result)=deserialize_VkAccelerationStructureBuildSizesInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImage2DViewOf3DFeaturesEXT...\n");
        VkPhysicalDeviceImage2DViewOf3DFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT...\n");
        VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT...\n");
        VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT...\n");
        VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE...\n");
        VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE*)malloc(sizeof(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMutableDescriptorTypeListEXT_pNext(json& name){
        printf("Deserializing VkMutableDescriptorTypeListEXT...\n");
        VkMutableDescriptorTypeListEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMutableDescriptorTypeListEXT*)malloc(sizeof(VkMutableDescriptorTypeListEXT));
[&]() {
*(result)=deserialize_VkMutableDescriptorTypeListEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMutableDescriptorTypeListVALVE_pNext(json& name){
        printf("Deserializing VkMutableDescriptorTypeListVALVE...\n");
        VkMutableDescriptorTypeListVALVE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMutableDescriptorTypeListVALVE*)malloc(sizeof(VkMutableDescriptorTypeListVALVE));
[&]() {
*(result)=deserialize_VkMutableDescriptorTypeListVALVE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMutableDescriptorTypeCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkMutableDescriptorTypeCreateInfoEXT...\n");
        VkMutableDescriptorTypeCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMutableDescriptorTypeCreateInfoEXT*)malloc(sizeof(VkMutableDescriptorTypeCreateInfoEXT));
[&]() {
*(result)=deserialize_VkMutableDescriptorTypeCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMutableDescriptorTypeCreateInfoVALVE_pNext(json& name){
        printf("Deserializing VkMutableDescriptorTypeCreateInfoVALVE...\n");
        VkMutableDescriptorTypeCreateInfoVALVE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMutableDescriptorTypeCreateInfoVALVE*)malloc(sizeof(VkMutableDescriptorTypeCreateInfoVALVE));
[&]() {
*(result)=deserialize_VkMutableDescriptorTypeCreateInfoVALVE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDepthClipControlFeaturesEXT...\n");
        VkPhysicalDeviceDepthClipControlFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDepthClipControlFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDepthClipControlFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineViewportDepthClipControlCreateInfoEXT...\n");
        VkPipelineViewportDepthClipControlCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineViewportDepthClipControlCreateInfoEXT*)malloc(sizeof(VkPipelineViewportDepthClipControlCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT...\n");
        VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceExternalMemoryRDMAFeaturesNV...\n");
        VkPhysicalDeviceExternalMemoryRDMAFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV*)malloc(sizeof(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVertexInputBindingDescription2EXT_pNext(json& name){
        printf("Deserializing VkVertexInputBindingDescription2EXT...\n");
        VkVertexInputBindingDescription2EXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVertexInputBindingDescription2EXT*)malloc(sizeof(VkVertexInputBindingDescription2EXT));
[&]() {
*(result)=deserialize_VkVertexInputBindingDescription2EXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVertexInputAttributeDescription2EXT_pNext(json& name){
        printf("Deserializing VkVertexInputAttributeDescription2EXT...\n");
        VkVertexInputAttributeDescription2EXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVertexInputAttributeDescription2EXT*)malloc(sizeof(VkVertexInputAttributeDescription2EXT));
[&]() {
*(result)=deserialize_VkVertexInputAttributeDescription2EXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceColorWriteEnableFeaturesEXT...\n");
        VkPhysicalDeviceColorWriteEnableFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceColorWriteEnableFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceColorWriteEnableFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineColorWriteCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineColorWriteCreateInfoEXT...\n");
        VkPipelineColorWriteCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineColorWriteCreateInfoEXT*)malloc(sizeof(VkPipelineColorWriteCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineColorWriteCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryBarrier2_pNext(json& name){
        printf("Deserializing VkMemoryBarrier2...\n");
        VkMemoryBarrier2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryBarrier2*)malloc(sizeof(VkMemoryBarrier2));
[&]() {
*(result)=deserialize_VkMemoryBarrier2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryBarrier2KHR_pNext(json& name){
        printf("Deserializing VkMemoryBarrier2KHR...\n");
        VkMemoryBarrier2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryBarrier2KHR*)malloc(sizeof(VkMemoryBarrier2KHR));
[&]() {
*(result)=deserialize_VkMemoryBarrier2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageMemoryBarrier2_pNext(json& name){
        printf("Deserializing VkImageMemoryBarrier2...\n");
        VkImageMemoryBarrier2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageMemoryBarrier2*)malloc(sizeof(VkImageMemoryBarrier2));
[&]() {
*(result)=deserialize_VkImageMemoryBarrier2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageMemoryBarrier2KHR_pNext(json& name){
        printf("Deserializing VkImageMemoryBarrier2KHR...\n");
        VkImageMemoryBarrier2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageMemoryBarrier2KHR*)malloc(sizeof(VkImageMemoryBarrier2KHR));
[&]() {
*(result)=deserialize_VkImageMemoryBarrier2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferMemoryBarrier2_pNext(json& name){
        printf("Deserializing VkBufferMemoryBarrier2...\n");
        VkBufferMemoryBarrier2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferMemoryBarrier2*)malloc(sizeof(VkBufferMemoryBarrier2));
[&]() {
*(result)=deserialize_VkBufferMemoryBarrier2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferMemoryBarrier2KHR_pNext(json& name){
        printf("Deserializing VkBufferMemoryBarrier2KHR...\n");
        VkBufferMemoryBarrier2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferMemoryBarrier2KHR*)malloc(sizeof(VkBufferMemoryBarrier2KHR));
[&]() {
*(result)=deserialize_VkBufferMemoryBarrier2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDependencyInfo_pNext(json& name){
        printf("Deserializing VkDependencyInfo...\n");
        VkDependencyInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDependencyInfo*)malloc(sizeof(VkDependencyInfo));
[&]() {
*(result)=deserialize_VkDependencyInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDependencyInfoKHR_pNext(json& name){
        printf("Deserializing VkDependencyInfoKHR...\n");
        VkDependencyInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDependencyInfoKHR*)malloc(sizeof(VkDependencyInfoKHR));
[&]() {
*(result)=deserialize_VkDependencyInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreSubmitInfo_pNext(json& name){
        printf("Deserializing VkSemaphoreSubmitInfo...\n");
        VkSemaphoreSubmitInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreSubmitInfo*)malloc(sizeof(VkSemaphoreSubmitInfo));
[&]() {
*(result)=deserialize_VkSemaphoreSubmitInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSemaphoreSubmitInfoKHR_pNext(json& name){
        printf("Deserializing VkSemaphoreSubmitInfoKHR...\n");
        VkSemaphoreSubmitInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSemaphoreSubmitInfoKHR*)malloc(sizeof(VkSemaphoreSubmitInfoKHR));
[&]() {
*(result)=deserialize_VkSemaphoreSubmitInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferSubmitInfo_pNext(json& name){
        printf("Deserializing VkCommandBufferSubmitInfo...\n");
        VkCommandBufferSubmitInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferSubmitInfo*)malloc(sizeof(VkCommandBufferSubmitInfo));
[&]() {
*(result)=deserialize_VkCommandBufferSubmitInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferSubmitInfoKHR_pNext(json& name){
        printf("Deserializing VkCommandBufferSubmitInfoKHR...\n");
        VkCommandBufferSubmitInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferSubmitInfoKHR*)malloc(sizeof(VkCommandBufferSubmitInfoKHR));
[&]() {
*(result)=deserialize_VkCommandBufferSubmitInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubmitInfo2_pNext(json& name){
        printf("Deserializing VkSubmitInfo2...\n");
        VkSubmitInfo2* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubmitInfo2*)malloc(sizeof(VkSubmitInfo2));
[&]() {
*(result)=deserialize_VkSubmitInfo2(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubmitInfo2KHR_pNext(json& name){
        printf("Deserializing VkSubmitInfo2KHR...\n");
        VkSubmitInfo2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubmitInfo2KHR*)malloc(sizeof(VkSubmitInfo2KHR));
[&]() {
*(result)=deserialize_VkSubmitInfo2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyCheckpointProperties2NV_pNext(json& name){
        printf("Deserializing VkQueueFamilyCheckpointProperties2NV...\n");
        VkQueueFamilyCheckpointProperties2NV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyCheckpointProperties2NV*)malloc(sizeof(VkQueueFamilyCheckpointProperties2NV));
[&]() {
*(result)=deserialize_VkQueueFamilyCheckpointProperties2NV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCheckpointData2NV_pNext(json& name){
        printf("Deserializing VkCheckpointData2NV...\n");
        VkCheckpointData2NV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCheckpointData2NV*)malloc(sizeof(VkCheckpointData2NV));
[&]() {
*(result)=deserialize_VkCheckpointData2NV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSynchronization2Features_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSynchronization2Features...\n");
        VkPhysicalDeviceSynchronization2Features* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSynchronization2Features*)malloc(sizeof(VkPhysicalDeviceSynchronization2Features));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSynchronization2Features(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSynchronization2FeaturesKHR...\n");
        VkPhysicalDeviceSynchronization2FeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSynchronization2FeaturesKHR*)malloc(sizeof(VkPhysicalDeviceSynchronization2FeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceHostImageCopyFeaturesEXT...\n");
        VkPhysicalDeviceHostImageCopyFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceHostImageCopyFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceHostImageCopyFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceHostImageCopyPropertiesEXT...\n");
        VkPhysicalDeviceHostImageCopyPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceHostImageCopyPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceHostImageCopyPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryToImageCopyEXT_pNext(json& name){
        printf("Deserializing VkMemoryToImageCopyEXT...\n");
        VkMemoryToImageCopyEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryToImageCopyEXT*)malloc(sizeof(VkMemoryToImageCopyEXT));
[&]() {
*(result)=deserialize_VkMemoryToImageCopyEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageToMemoryCopyEXT_pNext(json& name){
        printf("Deserializing VkImageToMemoryCopyEXT...\n");
        VkImageToMemoryCopyEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageToMemoryCopyEXT*)malloc(sizeof(VkImageToMemoryCopyEXT));
[&]() {
*(result)=deserialize_VkImageToMemoryCopyEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyMemoryToImageInfoEXT_pNext(json& name){
        printf("Deserializing VkCopyMemoryToImageInfoEXT...\n");
        VkCopyMemoryToImageInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyMemoryToImageInfoEXT*)malloc(sizeof(VkCopyMemoryToImageInfoEXT));
[&]() {
*(result)=deserialize_VkCopyMemoryToImageInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyImageToMemoryInfoEXT_pNext(json& name){
        printf("Deserializing VkCopyImageToMemoryInfoEXT...\n");
        VkCopyImageToMemoryInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyImageToMemoryInfoEXT*)malloc(sizeof(VkCopyImageToMemoryInfoEXT));
[&]() {
*(result)=deserialize_VkCopyImageToMemoryInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyImageToImageInfoEXT_pNext(json& name){
        printf("Deserializing VkCopyImageToImageInfoEXT...\n");
        VkCopyImageToImageInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyImageToImageInfoEXT*)malloc(sizeof(VkCopyImageToImageInfoEXT));
[&]() {
*(result)=deserialize_VkCopyImageToImageInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkHostImageLayoutTransitionInfoEXT_pNext(json& name){
        printf("Deserializing VkHostImageLayoutTransitionInfoEXT...\n");
        VkHostImageLayoutTransitionInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkHostImageLayoutTransitionInfoEXT*)malloc(sizeof(VkHostImageLayoutTransitionInfoEXT));
[&]() {
*(result)=deserialize_VkHostImageLayoutTransitionInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubresourceHostMemcpySizeEXT_pNext(json& name){
        printf("Deserializing VkSubresourceHostMemcpySizeEXT...\n");
        VkSubresourceHostMemcpySizeEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubresourceHostMemcpySizeEXT*)malloc(sizeof(VkSubresourceHostMemcpySizeEXT));
[&]() {
*(result)=deserialize_VkSubresourceHostMemcpySizeEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkHostImageCopyDevicePerformanceQueryEXT_pNext(json& name){
        printf("Deserializing VkHostImageCopyDevicePerformanceQueryEXT...\n");
        VkHostImageCopyDevicePerformanceQueryEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkHostImageCopyDevicePerformanceQueryEXT*)malloc(sizeof(VkHostImageCopyDevicePerformanceQueryEXT));
[&]() {
*(result)=deserialize_VkHostImageCopyDevicePerformanceQueryEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT...\n");
        VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceLegacyDitheringFeaturesEXT...\n");
        VkPhysicalDeviceLegacyDitheringFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceLegacyDitheringFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceLegacyDitheringFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT...\n");
        VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubpassResolvePerformanceQueryEXT_pNext(json& name){
        printf("Deserializing VkSubpassResolvePerformanceQueryEXT...\n");
        VkSubpassResolvePerformanceQueryEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubpassResolvePerformanceQueryEXT*)malloc(sizeof(VkSubpassResolvePerformanceQueryEXT));
[&]() {
*(result)=deserialize_VkSubpassResolvePerformanceQueryEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMultisampledRenderToSingleSampledInfoEXT_pNext(json& name){
        printf("Deserializing VkMultisampledRenderToSingleSampledInfoEXT...\n");
        VkMultisampledRenderToSingleSampledInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMultisampledRenderToSingleSampledInfoEXT*)malloc(sizeof(VkMultisampledRenderToSingleSampledInfoEXT));
[&]() {
*(result)=deserialize_VkMultisampledRenderToSingleSampledInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelineProtectedAccessFeaturesEXT...\n");
        VkPhysicalDevicePipelineProtectedAccessFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyVideoPropertiesKHR_pNext(json& name){
        printf("Deserializing VkQueueFamilyVideoPropertiesKHR...\n");
        VkQueueFamilyVideoPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyVideoPropertiesKHR*)malloc(sizeof(VkQueueFamilyVideoPropertiesKHR));
[&]() {
*(result)=deserialize_VkQueueFamilyVideoPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR_pNext(json& name){
        printf("Deserializing VkQueueFamilyQueryResultStatusPropertiesKHR...\n");
        VkQueueFamilyQueryResultStatusPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueueFamilyQueryResultStatusPropertiesKHR*)malloc(sizeof(VkQueueFamilyQueryResultStatusPropertiesKHR));
[&]() {
*(result)=deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoProfileListInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoProfileListInfoKHR...\n");
        VkVideoProfileListInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoProfileListInfoKHR*)malloc(sizeof(VkVideoProfileListInfoKHR));
[&]() {
*(result)=deserialize_VkVideoProfileListInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceVideoFormatInfoKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceVideoFormatInfoKHR...\n");
        VkPhysicalDeviceVideoFormatInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceVideoFormatInfoKHR*)malloc(sizeof(VkPhysicalDeviceVideoFormatInfoKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceVideoFormatInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoFormatPropertiesKHR_pNext(json& name){
        printf("Deserializing VkVideoFormatPropertiesKHR...\n");
        VkVideoFormatPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoFormatPropertiesKHR*)malloc(sizeof(VkVideoFormatPropertiesKHR));
[&]() {
*(result)=deserialize_VkVideoFormatPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoProfileInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoProfileInfoKHR...\n");
        VkVideoProfileInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoProfileInfoKHR*)malloc(sizeof(VkVideoProfileInfoKHR));
[&]() {
*(result)=deserialize_VkVideoProfileInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoCapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkVideoCapabilitiesKHR...\n");
        VkVideoCapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoCapabilitiesKHR*)malloc(sizeof(VkVideoCapabilitiesKHR));
[&]() {
*(result)=deserialize_VkVideoCapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoSessionMemoryRequirementsKHR_pNext(json& name){
        printf("Deserializing VkVideoSessionMemoryRequirementsKHR...\n");
        VkVideoSessionMemoryRequirementsKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoSessionMemoryRequirementsKHR*)malloc(sizeof(VkVideoSessionMemoryRequirementsKHR));
[&]() {
*(result)=deserialize_VkVideoSessionMemoryRequirementsKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBindVideoSessionMemoryInfoKHR_pNext(json& name){
        printf("Deserializing VkBindVideoSessionMemoryInfoKHR...\n");
        VkBindVideoSessionMemoryInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBindVideoSessionMemoryInfoKHR*)malloc(sizeof(VkBindVideoSessionMemoryInfoKHR));
[&]() {
*(result)=deserialize_VkBindVideoSessionMemoryInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoPictureResourceInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoPictureResourceInfoKHR...\n");
        VkVideoPictureResourceInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoPictureResourceInfoKHR*)malloc(sizeof(VkVideoPictureResourceInfoKHR));
[&]() {
*(result)=deserialize_VkVideoPictureResourceInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoReferenceSlotInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoReferenceSlotInfoKHR...\n");
        VkVideoReferenceSlotInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoReferenceSlotInfoKHR*)malloc(sizeof(VkVideoReferenceSlotInfoKHR));
[&]() {
*(result)=deserialize_VkVideoReferenceSlotInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeCapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeCapabilitiesKHR...\n");
        VkVideoDecodeCapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeCapabilitiesKHR*)malloc(sizeof(VkVideoDecodeCapabilitiesKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeCapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeUsageInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeUsageInfoKHR...\n");
        VkVideoDecodeUsageInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeUsageInfoKHR*)malloc(sizeof(VkVideoDecodeUsageInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeUsageInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeInfoKHR...\n");
        VkVideoDecodeInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeInfoKHR*)malloc(sizeof(VkVideoDecodeInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH264ProfileInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH264ProfileInfoKHR...\n");
        VkVideoDecodeH264ProfileInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH264ProfileInfoKHR*)malloc(sizeof(VkVideoDecodeH264ProfileInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH264ProfileInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH264CapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH264CapabilitiesKHR...\n");
        VkVideoDecodeH264CapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH264CapabilitiesKHR*)malloc(sizeof(VkVideoDecodeH264CapabilitiesKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH264CapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH264SessionParametersAddInfoKHR...\n");
        VkVideoDecodeH264SessionParametersAddInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH264SessionParametersAddInfoKHR*)malloc(sizeof(VkVideoDecodeH264SessionParametersAddInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH264SessionParametersCreateInfoKHR...\n");
        VkVideoDecodeH264SessionParametersCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH264SessionParametersCreateInfoKHR*)malloc(sizeof(VkVideoDecodeH264SessionParametersCreateInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH264PictureInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH264PictureInfoKHR...\n");
        VkVideoDecodeH264PictureInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH264PictureInfoKHR*)malloc(sizeof(VkVideoDecodeH264PictureInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH264PictureInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH264DpbSlotInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH264DpbSlotInfoKHR...\n");
        VkVideoDecodeH264DpbSlotInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH264DpbSlotInfoKHR*)malloc(sizeof(VkVideoDecodeH264DpbSlotInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH264DpbSlotInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH265ProfileInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH265ProfileInfoKHR...\n");
        VkVideoDecodeH265ProfileInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH265ProfileInfoKHR*)malloc(sizeof(VkVideoDecodeH265ProfileInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH265ProfileInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH265CapabilitiesKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH265CapabilitiesKHR...\n");
        VkVideoDecodeH265CapabilitiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH265CapabilitiesKHR*)malloc(sizeof(VkVideoDecodeH265CapabilitiesKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH265CapabilitiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH265SessionParametersAddInfoKHR...\n");
        VkVideoDecodeH265SessionParametersAddInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH265SessionParametersAddInfoKHR*)malloc(sizeof(VkVideoDecodeH265SessionParametersAddInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH265SessionParametersCreateInfoKHR...\n");
        VkVideoDecodeH265SessionParametersCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH265SessionParametersCreateInfoKHR*)malloc(sizeof(VkVideoDecodeH265SessionParametersCreateInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH265PictureInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH265PictureInfoKHR...\n");
        VkVideoDecodeH265PictureInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH265PictureInfoKHR*)malloc(sizeof(VkVideoDecodeH265PictureInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH265PictureInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoDecodeH265DpbSlotInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoDecodeH265DpbSlotInfoKHR...\n");
        VkVideoDecodeH265DpbSlotInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoDecodeH265DpbSlotInfoKHR*)malloc(sizeof(VkVideoDecodeH265DpbSlotInfoKHR));
[&]() {
*(result)=deserialize_VkVideoDecodeH265DpbSlotInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoSessionCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoSessionCreateInfoKHR...\n");
        VkVideoSessionCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoSessionCreateInfoKHR*)malloc(sizeof(VkVideoSessionCreateInfoKHR));
[&]() {
*(result)=deserialize_VkVideoSessionCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoSessionParametersCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoSessionParametersCreateInfoKHR...\n");
        VkVideoSessionParametersCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoSessionParametersCreateInfoKHR*)malloc(sizeof(VkVideoSessionParametersCreateInfoKHR));
[&]() {
*(result)=deserialize_VkVideoSessionParametersCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoSessionParametersUpdateInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoSessionParametersUpdateInfoKHR...\n");
        VkVideoSessionParametersUpdateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoSessionParametersUpdateInfoKHR*)malloc(sizeof(VkVideoSessionParametersUpdateInfoKHR));
[&]() {
*(result)=deserialize_VkVideoSessionParametersUpdateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoBeginCodingInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoBeginCodingInfoKHR...\n");
        VkVideoBeginCodingInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoBeginCodingInfoKHR*)malloc(sizeof(VkVideoBeginCodingInfoKHR));
[&]() {
*(result)=deserialize_VkVideoBeginCodingInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoEndCodingInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoEndCodingInfoKHR...\n");
        VkVideoEndCodingInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoEndCodingInfoKHR*)malloc(sizeof(VkVideoEndCodingInfoKHR));
[&]() {
*(result)=deserialize_VkVideoEndCodingInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkVideoCodingControlInfoKHR_pNext(json& name){
        printf("Deserializing VkVideoCodingControlInfoKHR...\n");
        VkVideoCodingControlInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkVideoCodingControlInfoKHR*)malloc(sizeof(VkVideoCodingControlInfoKHR));
[&]() {
*(result)=deserialize_VkVideoCodingControlInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceInheritedViewportScissorFeaturesNV...\n");
        VkPhysicalDeviceInheritedViewportScissorFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceInheritedViewportScissorFeaturesNV*)malloc(sizeof(VkPhysicalDeviceInheritedViewportScissorFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferInheritanceViewportScissorInfoNV_pNext(json& name){
        printf("Deserializing VkCommandBufferInheritanceViewportScissorInfoNV...\n");
        VkCommandBufferInheritanceViewportScissorInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferInheritanceViewportScissorInfoNV*)malloc(sizeof(VkCommandBufferInheritanceViewportScissorInfoNV));
[&]() {
*(result)=deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT...\n");
        VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceProvokingVertexFeaturesEXT...\n");
        VkPhysicalDeviceProvokingVertexFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceProvokingVertexFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceProvokingVertexFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceProvokingVertexPropertiesEXT...\n");
        VkPhysicalDeviceProvokingVertexPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceProvokingVertexPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceProvokingVertexPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineRasterizationProvokingVertexStateCreateInfoEXT...\n");
        VkPipelineRasterizationProvokingVertexStateCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT*)malloc(sizeof(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCuModuleCreateInfoNVX_pNext(json& name){
        printf("Deserializing VkCuModuleCreateInfoNVX...\n");
        VkCuModuleCreateInfoNVX* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCuModuleCreateInfoNVX*)malloc(sizeof(VkCuModuleCreateInfoNVX));
[&]() {
*(result)=deserialize_VkCuModuleCreateInfoNVX(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCuFunctionCreateInfoNVX_pNext(json& name){
        printf("Deserializing VkCuFunctionCreateInfoNVX...\n");
        VkCuFunctionCreateInfoNVX* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCuFunctionCreateInfoNVX*)malloc(sizeof(VkCuFunctionCreateInfoNVX));
[&]() {
*(result)=deserialize_VkCuFunctionCreateInfoNVX(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCuLaunchInfoNVX_pNext(json& name){
        printf("Deserializing VkCuLaunchInfoNVX...\n");
        VkCuLaunchInfoNVX* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCuLaunchInfoNVX*)malloc(sizeof(VkCuLaunchInfoNVX));
[&]() {
*(result)=deserialize_VkCuLaunchInfoNVX(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorBufferFeaturesEXT...\n");
        VkPhysicalDeviceDescriptorBufferFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorBufferFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDescriptorBufferFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorBufferPropertiesEXT...\n");
        VkPhysicalDeviceDescriptorBufferPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorBufferPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceDescriptorBufferPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT...\n");
        VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorAddressInfoEXT_pNext(json& name){
        printf("Deserializing VkDescriptorAddressInfoEXT...\n");
        VkDescriptorAddressInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(result)=deserialize_VkDescriptorAddressInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorBufferBindingInfoEXT_pNext(json& name){
        printf("Deserializing VkDescriptorBufferBindingInfoEXT...\n");
        VkDescriptorBufferBindingInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorBufferBindingInfoEXT*)malloc(sizeof(VkDescriptorBufferBindingInfoEXT));
[&]() {
*(result)=deserialize_VkDescriptorBufferBindingInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT_pNext(json& name){
        printf("Deserializing VkDescriptorBufferBindingPushDescriptorBufferHandleEXT...\n");
        VkDescriptorBufferBindingPushDescriptorBufferHandleEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT*)malloc(sizeof(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT));
[&]() {
*(result)=deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorDataEXT_pNext(json& name){
        printf("Deserializing VkDescriptorDataEXT...\n");
        VkDescriptorDataEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorDataEXT*)malloc(sizeof(VkDescriptorDataEXT));
[&]() {
*(result)=deserialize_VkDescriptorDataEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorGetInfoEXT_pNext(json& name){
        printf("Deserializing VkDescriptorGetInfoEXT...\n");
        VkDescriptorGetInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorGetInfoEXT*)malloc(sizeof(VkDescriptorGetInfoEXT));
[&]() {
*(result)=deserialize_VkDescriptorGetInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBufferCaptureDescriptorDataInfoEXT_pNext(json& name){
        printf("Deserializing VkBufferCaptureDescriptorDataInfoEXT...\n");
        VkBufferCaptureDescriptorDataInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBufferCaptureDescriptorDataInfoEXT*)malloc(sizeof(VkBufferCaptureDescriptorDataInfoEXT));
[&]() {
*(result)=deserialize_VkBufferCaptureDescriptorDataInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageCaptureDescriptorDataInfoEXT_pNext(json& name){
        printf("Deserializing VkImageCaptureDescriptorDataInfoEXT...\n");
        VkImageCaptureDescriptorDataInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageCaptureDescriptorDataInfoEXT*)malloc(sizeof(VkImageCaptureDescriptorDataInfoEXT));
[&]() {
*(result)=deserialize_VkImageCaptureDescriptorDataInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewCaptureDescriptorDataInfoEXT_pNext(json& name){
        printf("Deserializing VkImageViewCaptureDescriptorDataInfoEXT...\n");
        VkImageViewCaptureDescriptorDataInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewCaptureDescriptorDataInfoEXT*)malloc(sizeof(VkImageViewCaptureDescriptorDataInfoEXT));
[&]() {
*(result)=deserialize_VkImageViewCaptureDescriptorDataInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerCaptureDescriptorDataInfoEXT_pNext(json& name){
        printf("Deserializing VkSamplerCaptureDescriptorDataInfoEXT...\n");
        VkSamplerCaptureDescriptorDataInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerCaptureDescriptorDataInfoEXT*)malloc(sizeof(VkSamplerCaptureDescriptorDataInfoEXT));
[&]() {
*(result)=deserialize_VkSamplerCaptureDescriptorDataInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT_pNext(json& name){
        printf("Deserializing VkAccelerationStructureCaptureDescriptorDataInfoEXT...\n");
        VkAccelerationStructureCaptureDescriptorDataInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureCaptureDescriptorDataInfoEXT*)malloc(sizeof(VkAccelerationStructureCaptureDescriptorDataInfoEXT));
[&]() {
*(result)=deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkOpaqueCaptureDescriptorDataCreateInfoEXT...\n");
        VkOpaqueCaptureDescriptorDataCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOpaqueCaptureDescriptorDataCreateInfoEXT*)malloc(sizeof(VkOpaqueCaptureDescriptorDataCreateInfoEXT));
[&]() {
*(result)=deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderIntegerDotProductFeatures...\n");
        VkPhysicalDeviceShaderIntegerDotProductFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderIntegerDotProductFeatures*)malloc(sizeof(VkPhysicalDeviceShaderIntegerDotProductFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR...\n");
        VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderIntegerDotProductProperties...\n");
        VkPhysicalDeviceShaderIntegerDotProductProperties* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderIntegerDotProductProperties*)malloc(sizeof(VkPhysicalDeviceShaderIntegerDotProductProperties));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR...\n");
        VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDrmPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDrmPropertiesEXT...\n");
        VkPhysicalDeviceDrmPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDrmPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceDrmPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDrmPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR...\n");
        VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV...\n");
        VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV*)malloc(sizeof(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR...\n");
        VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingMotionBlurFeaturesNV...\n");
        VkPhysicalDeviceRayTracingMotionBlurFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV*)malloc(sizeof(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureGeometryMotionTrianglesDataNV...\n");
        VkAccelerationStructureGeometryMotionTrianglesDataNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureGeometryMotionTrianglesDataNV*)malloc(sizeof(VkAccelerationStructureGeometryMotionTrianglesDataNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureMotionInfoNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureMotionInfoNV...\n");
        VkAccelerationStructureMotionInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureMotionInfoNV*)malloc(sizeof(VkAccelerationStructureMotionInfoNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureMotionInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSRTDataNV_pNext(json& name){
        printf("Deserializing VkSRTDataNV...\n");
        VkSRTDataNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSRTDataNV*)malloc(sizeof(VkSRTDataNV));
[&]() {
*(result)=deserialize_VkSRTDataNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureSRTMotionInstanceNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureSRTMotionInstanceNV...\n");
        VkAccelerationStructureSRTMotionInstanceNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureSRTMotionInstanceNV*)malloc(sizeof(VkAccelerationStructureSRTMotionInstanceNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureMatrixMotionInstanceNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureMatrixMotionInstanceNV...\n");
        VkAccelerationStructureMatrixMotionInstanceNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureMatrixMotionInstanceNV*)malloc(sizeof(VkAccelerationStructureMatrixMotionInstanceNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureMotionInstanceDataNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureMotionInstanceDataNV...\n");
        VkAccelerationStructureMotionInstanceDataNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureMotionInstanceDataNV*)malloc(sizeof(VkAccelerationStructureMotionInstanceDataNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureMotionInstanceDataNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureMotionInstanceNV_pNext(json& name){
        printf("Deserializing VkAccelerationStructureMotionInstanceNV...\n");
        VkAccelerationStructureMotionInstanceNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureMotionInstanceNV*)malloc(sizeof(VkAccelerationStructureMotionInstanceNV));
[&]() {
*(result)=deserialize_VkAccelerationStructureMotionInstanceNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryGetRemoteAddressInfoNV_pNext(json& name){
        printf("Deserializing VkMemoryGetRemoteAddressInfoNV...\n");
        VkMemoryGetRemoteAddressInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryGetRemoteAddressInfoNV*)malloc(sizeof(VkMemoryGetRemoteAddressInfoNV));
[&]() {
*(result)=deserialize_VkMemoryGetRemoteAddressInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT...\n");
        VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFormatProperties3_pNext(json& name){
        printf("Deserializing VkFormatProperties3...\n");
        VkFormatProperties3* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFormatProperties3*)malloc(sizeof(VkFormatProperties3));
[&]() {
*(result)=deserialize_VkFormatProperties3(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFormatProperties3KHR_pNext(json& name){
        printf("Deserializing VkFormatProperties3KHR...\n");
        VkFormatProperties3KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFormatProperties3KHR*)malloc(sizeof(VkFormatProperties3KHR));
[&]() {
*(result)=deserialize_VkFormatProperties3KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrmFormatModifierPropertiesList2EXT_pNext(json& name){
        printf("Deserializing VkDrmFormatModifierPropertiesList2EXT...\n");
        VkDrmFormatModifierPropertiesList2EXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrmFormatModifierPropertiesList2EXT*)malloc(sizeof(VkDrmFormatModifierPropertiesList2EXT));
[&]() {
*(result)=deserialize_VkDrmFormatModifierPropertiesList2EXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDrmFormatModifierProperties2EXT_pNext(json& name){
        printf("Deserializing VkDrmFormatModifierProperties2EXT...\n");
        VkDrmFormatModifierProperties2EXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDrmFormatModifierProperties2EXT*)malloc(sizeof(VkDrmFormatModifierProperties2EXT));
[&]() {
*(result)=deserialize_VkDrmFormatModifierProperties2EXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRenderingCreateInfo_pNext(json& name){
        printf("Deserializing VkPipelineRenderingCreateInfo...\n");
        VkPipelineRenderingCreateInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRenderingCreateInfo*)malloc(sizeof(VkPipelineRenderingCreateInfo));
[&]() {
*(result)=deserialize_VkPipelineRenderingCreateInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRenderingCreateInfoKHR_pNext(json& name){
        printf("Deserializing VkPipelineRenderingCreateInfoKHR...\n");
        VkPipelineRenderingCreateInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRenderingCreateInfoKHR*)malloc(sizeof(VkPipelineRenderingCreateInfoKHR));
[&]() {
*(result)=deserialize_VkPipelineRenderingCreateInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderingInfo_pNext(json& name){
        printf("Deserializing VkRenderingInfo...\n");
        VkRenderingInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderingInfo*)malloc(sizeof(VkRenderingInfo));
[&]() {
*(result)=deserialize_VkRenderingInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderingInfoKHR_pNext(json& name){
        printf("Deserializing VkRenderingInfoKHR...\n");
        VkRenderingInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderingInfoKHR*)malloc(sizeof(VkRenderingInfoKHR));
[&]() {
*(result)=deserialize_VkRenderingInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderingAttachmentInfo_pNext(json& name){
        printf("Deserializing VkRenderingAttachmentInfo...\n");
        VkRenderingAttachmentInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(result)=deserialize_VkRenderingAttachmentInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderingAttachmentInfoKHR_pNext(json& name){
        printf("Deserializing VkRenderingAttachmentInfoKHR...\n");
        VkRenderingAttachmentInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderingAttachmentInfoKHR*)malloc(sizeof(VkRenderingAttachmentInfoKHR));
[&]() {
*(result)=deserialize_VkRenderingAttachmentInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR_pNext(json& name){
        printf("Deserializing VkRenderingFragmentShadingRateAttachmentInfoKHR...\n");
        VkRenderingFragmentShadingRateAttachmentInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderingFragmentShadingRateAttachmentInfoKHR*)malloc(sizeof(VkRenderingFragmentShadingRateAttachmentInfoKHR));
[&]() {
*(result)=deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT_pNext(json& name){
        printf("Deserializing VkRenderingFragmentDensityMapAttachmentInfoEXT...\n");
        VkRenderingFragmentDensityMapAttachmentInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderingFragmentDensityMapAttachmentInfoEXT*)malloc(sizeof(VkRenderingFragmentDensityMapAttachmentInfoEXT));
[&]() {
*(result)=deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDynamicRenderingFeatures_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDynamicRenderingFeatures...\n");
        VkPhysicalDeviceDynamicRenderingFeatures* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDynamicRenderingFeatures*)malloc(sizeof(VkPhysicalDeviceDynamicRenderingFeatures));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDynamicRenderingFeatures(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDynamicRenderingFeaturesKHR...\n");
        VkPhysicalDeviceDynamicRenderingFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDynamicRenderingFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceDynamicRenderingFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferInheritanceRenderingInfo_pNext(json& name){
        printf("Deserializing VkCommandBufferInheritanceRenderingInfo...\n");
        VkCommandBufferInheritanceRenderingInfo* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferInheritanceRenderingInfo*)malloc(sizeof(VkCommandBufferInheritanceRenderingInfo));
[&]() {
*(result)=deserialize_VkCommandBufferInheritanceRenderingInfo(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCommandBufferInheritanceRenderingInfoKHR_pNext(json& name){
        printf("Deserializing VkCommandBufferInheritanceRenderingInfoKHR...\n");
        VkCommandBufferInheritanceRenderingInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCommandBufferInheritanceRenderingInfoKHR*)malloc(sizeof(VkCommandBufferInheritanceRenderingInfoKHR));
[&]() {
*(result)=deserialize_VkCommandBufferInheritanceRenderingInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentSampleCountInfoAMD_pNext(json& name){
        printf("Deserializing VkAttachmentSampleCountInfoAMD...\n");
        VkAttachmentSampleCountInfoAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentSampleCountInfoAMD*)malloc(sizeof(VkAttachmentSampleCountInfoAMD));
[&]() {
*(result)=deserialize_VkAttachmentSampleCountInfoAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAttachmentSampleCountInfoNV_pNext(json& name){
        printf("Deserializing VkAttachmentSampleCountInfoNV...\n");
        VkAttachmentSampleCountInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAttachmentSampleCountInfoNV*)malloc(sizeof(VkAttachmentSampleCountInfoNV));
[&]() {
*(result)=deserialize_VkAttachmentSampleCountInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMultiviewPerViewAttributesInfoNVX_pNext(json& name){
        printf("Deserializing VkMultiviewPerViewAttributesInfoNVX...\n");
        VkMultiviewPerViewAttributesInfoNVX* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMultiviewPerViewAttributesInfoNVX*)malloc(sizeof(VkMultiviewPerViewAttributesInfoNVX));
[&]() {
*(result)=deserialize_VkMultiviewPerViewAttributesInfoNVX(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageViewMinLodFeaturesEXT...\n");
        VkPhysicalDeviceImageViewMinLodFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageViewMinLodFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceImageViewMinLodFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewMinLodCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkImageViewMinLodCreateInfoEXT...\n");
        VkImageViewMinLodCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewMinLodCreateInfoEXT*)malloc(sizeof(VkImageViewMinLodCreateInfoEXT));
[&]() {
*(result)=deserialize_VkImageViewMinLodCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT...\n");
        VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM...\n");
        VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM*)malloc(sizeof(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceLinearColorAttachmentFeaturesNV...\n");
        VkPhysicalDeviceLinearColorAttachmentFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceLinearColorAttachmentFeaturesNV*)malloc(sizeof(VkPhysicalDeviceLinearColorAttachmentFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT...\n");
        VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT...\n");
        VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkGraphicsPipelineLibraryCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkGraphicsPipelineLibraryCreateInfoEXT...\n");
        VkGraphicsPipelineLibraryCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkGraphicsPipelineLibraryCreateInfoEXT*)malloc(sizeof(VkGraphicsPipelineLibraryCreateInfoEXT));
[&]() {
*(result)=deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE...\n");
        VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE*)malloc(sizeof(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetBindingReferenceVALVE_pNext(json& name){
        printf("Deserializing VkDescriptorSetBindingReferenceVALVE...\n");
        VkDescriptorSetBindingReferenceVALVE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetBindingReferenceVALVE*)malloc(sizeof(VkDescriptorSetBindingReferenceVALVE));
[&]() {
*(result)=deserialize_VkDescriptorSetBindingReferenceVALVE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE_pNext(json& name){
        printf("Deserializing VkDescriptorSetLayoutHostMappingInfoVALVE...\n");
        VkDescriptorSetLayoutHostMappingInfoVALVE* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDescriptorSetLayoutHostMappingInfoVALVE*)malloc(sizeof(VkDescriptorSetLayoutHostMappingInfoVALVE));
[&]() {
*(result)=deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT...\n");
        VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT...\n");
        VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineShaderStageModuleIdentifierCreateInfoEXT...\n");
        VkPipelineShaderStageModuleIdentifierCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineShaderStageModuleIdentifierCreateInfoEXT*)malloc(sizeof(VkPipelineShaderStageModuleIdentifierCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShaderModuleIdentifierEXT_pNext(json& name){
        printf("Deserializing VkShaderModuleIdentifierEXT...\n");
        VkShaderModuleIdentifierEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShaderModuleIdentifierEXT*)malloc(sizeof(VkShaderModuleIdentifierEXT));
[&]() {
*(result)=deserialize_VkShaderModuleIdentifierEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageCompressionControlEXT_pNext(json& name){
        printf("Deserializing VkImageCompressionControlEXT...\n");
        VkImageCompressionControlEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageCompressionControlEXT*)malloc(sizeof(VkImageCompressionControlEXT));
[&]() {
*(result)=deserialize_VkImageCompressionControlEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageCompressionControlFeaturesEXT...\n");
        VkPhysicalDeviceImageCompressionControlFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageCompressionControlFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceImageCompressionControlFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageCompressionPropertiesEXT_pNext(json& name){
        printf("Deserializing VkImageCompressionPropertiesEXT...\n");
        VkImageCompressionPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageCompressionPropertiesEXT*)malloc(sizeof(VkImageCompressionPropertiesEXT));
[&]() {
*(result)=deserialize_VkImageCompressionPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT...\n");
        VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSubresource2KHR_pNext(json& name){
        printf("Deserializing VkImageSubresource2KHR...\n");
        VkImageSubresource2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSubresource2KHR*)malloc(sizeof(VkImageSubresource2KHR));
[&]() {
*(result)=deserialize_VkImageSubresource2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageSubresource2EXT_pNext(json& name){
        printf("Deserializing VkImageSubresource2EXT...\n");
        VkImageSubresource2EXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageSubresource2EXT*)malloc(sizeof(VkImageSubresource2EXT));
[&]() {
*(result)=deserialize_VkImageSubresource2EXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubresourceLayout2KHR_pNext(json& name){
        printf("Deserializing VkSubresourceLayout2KHR...\n");
        VkSubresourceLayout2KHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubresourceLayout2KHR*)malloc(sizeof(VkSubresourceLayout2KHR));
[&]() {
*(result)=deserialize_VkSubresourceLayout2KHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSubresourceLayout2EXT_pNext(json& name){
        printf("Deserializing VkSubresourceLayout2EXT...\n");
        VkSubresourceLayout2EXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSubresourceLayout2EXT*)malloc(sizeof(VkSubresourceLayout2EXT));
[&]() {
*(result)=deserialize_VkSubresourceLayout2EXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassCreationControlEXT_pNext(json& name){
        printf("Deserializing VkRenderPassCreationControlEXT...\n");
        VkRenderPassCreationControlEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassCreationControlEXT*)malloc(sizeof(VkRenderPassCreationControlEXT));
[&]() {
*(result)=deserialize_VkRenderPassCreationControlEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassCreationFeedbackInfoEXT_pNext(json& name){
        printf("Deserializing VkRenderPassCreationFeedbackInfoEXT...\n");
        VkRenderPassCreationFeedbackInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassCreationFeedbackInfoEXT*)malloc(sizeof(VkRenderPassCreationFeedbackInfoEXT));
[&]() {
*(result)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassCreationFeedbackCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkRenderPassCreationFeedbackCreateInfoEXT...\n");
        VkRenderPassCreationFeedbackCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassCreationFeedbackCreateInfoEXT*)malloc(sizeof(VkRenderPassCreationFeedbackCreateInfoEXT));
[&]() {
*(result)=deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassSubpassFeedbackInfoEXT_pNext(json& name){
        printf("Deserializing VkRenderPassSubpassFeedbackInfoEXT...\n");
        VkRenderPassSubpassFeedbackInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassSubpassFeedbackInfoEXT*)malloc(sizeof(VkRenderPassSubpassFeedbackInfoEXT));
[&]() {
*(result)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkRenderPassSubpassFeedbackCreateInfoEXT...\n");
        VkRenderPassSubpassFeedbackCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkRenderPassSubpassFeedbackCreateInfoEXT*)malloc(sizeof(VkRenderPassSubpassFeedbackCreateInfoEXT));
[&]() {
*(result)=deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT...\n");
        VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMicromapBuildInfoEXT_pNext(json& name){
        printf("Deserializing VkMicromapBuildInfoEXT...\n");
        VkMicromapBuildInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMicromapBuildInfoEXT*)malloc(sizeof(VkMicromapBuildInfoEXT));
[&]() {
*(result)=deserialize_VkMicromapBuildInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMicromapCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkMicromapCreateInfoEXT...\n");
        VkMicromapCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMicromapCreateInfoEXT*)malloc(sizeof(VkMicromapCreateInfoEXT));
[&]() {
*(result)=deserialize_VkMicromapCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMicromapVersionInfoEXT_pNext(json& name){
        printf("Deserializing VkMicromapVersionInfoEXT...\n");
        VkMicromapVersionInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMicromapVersionInfoEXT*)malloc(sizeof(VkMicromapVersionInfoEXT));
[&]() {
*(result)=deserialize_VkMicromapVersionInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyMicromapInfoEXT_pNext(json& name){
        printf("Deserializing VkCopyMicromapInfoEXT...\n");
        VkCopyMicromapInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyMicromapInfoEXT*)malloc(sizeof(VkCopyMicromapInfoEXT));
[&]() {
*(result)=deserialize_VkCopyMicromapInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyMicromapToMemoryInfoEXT_pNext(json& name){
        printf("Deserializing VkCopyMicromapToMemoryInfoEXT...\n");
        VkCopyMicromapToMemoryInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyMicromapToMemoryInfoEXT*)malloc(sizeof(VkCopyMicromapToMemoryInfoEXT));
[&]() {
*(result)=deserialize_VkCopyMicromapToMemoryInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCopyMemoryToMicromapInfoEXT_pNext(json& name){
        printf("Deserializing VkCopyMemoryToMicromapInfoEXT...\n");
        VkCopyMemoryToMicromapInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCopyMemoryToMicromapInfoEXT*)malloc(sizeof(VkCopyMemoryToMicromapInfoEXT));
[&]() {
*(result)=deserialize_VkCopyMemoryToMicromapInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMicromapBuildSizesInfoEXT_pNext(json& name){
        printf("Deserializing VkMicromapBuildSizesInfoEXT...\n");
        VkMicromapBuildSizesInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMicromapBuildSizesInfoEXT*)malloc(sizeof(VkMicromapBuildSizesInfoEXT));
[&]() {
*(result)=deserialize_VkMicromapBuildSizesInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMicromapUsageEXT_pNext(json& name){
        printf("Deserializing VkMicromapUsageEXT...\n");
        VkMicromapUsageEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMicromapUsageEXT*)malloc(sizeof(VkMicromapUsageEXT));
[&]() {
*(result)=deserialize_VkMicromapUsageEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMicromapTriangleEXT_pNext(json& name){
        printf("Deserializing VkMicromapTriangleEXT...\n");
        VkMicromapTriangleEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMicromapTriangleEXT*)malloc(sizeof(VkMicromapTriangleEXT));
[&]() {
*(result)=deserialize_VkMicromapTriangleEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceOpacityMicromapFeaturesEXT...\n");
        VkPhysicalDeviceOpacityMicromapFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceOpacityMicromapFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceOpacityMicromapFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceOpacityMicromapPropertiesEXT...\n");
        VkPhysicalDeviceOpacityMicromapPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceOpacityMicromapPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceOpacityMicromapPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT_pNext(json& name){
        printf("Deserializing VkAccelerationStructureTrianglesOpacityMicromapEXT...\n");
        VkAccelerationStructureTrianglesOpacityMicromapEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAccelerationStructureTrianglesOpacityMicromapEXT*)malloc(sizeof(VkAccelerationStructureTrianglesOpacityMicromapEXT));
[&]() {
*(result)=deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelinePropertiesIdentifierEXT_pNext(json& name){
        printf("Deserializing VkPipelinePropertiesIdentifierEXT...\n");
        VkPipelinePropertiesIdentifierEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelinePropertiesIdentifierEXT*)malloc(sizeof(VkPipelinePropertiesIdentifierEXT));
[&]() {
*(result)=deserialize_VkPipelinePropertiesIdentifierEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelinePropertiesFeaturesEXT...\n");
        VkPhysicalDevicePipelinePropertiesFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelinePropertiesFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePipelinePropertiesFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD...\n");
        VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD*)malloc(sizeof(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkExternalMemoryAcquireUnmodifiedEXT_pNext(json& name){
        printf("Deserializing VkExternalMemoryAcquireUnmodifiedEXT...\n");
        VkExternalMemoryAcquireUnmodifiedEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkExternalMemoryAcquireUnmodifiedEXT*)malloc(sizeof(VkExternalMemoryAcquireUnmodifiedEXT));
[&]() {
*(result)=deserialize_VkExternalMemoryAcquireUnmodifiedEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT...\n");
        VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelineRobustnessFeaturesEXT...\n");
        VkPhysicalDevicePipelineRobustnessFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelineRobustnessFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePipelineRobustnessFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPipelineRobustnessCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkPipelineRobustnessCreateInfoEXT...\n");
        VkPipelineRobustnessCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPipelineRobustnessCreateInfoEXT*)malloc(sizeof(VkPipelineRobustnessCreateInfoEXT));
[&]() {
*(result)=deserialize_VkPipelineRobustnessCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelineRobustnessPropertiesEXT...\n");
        VkPhysicalDevicePipelineRobustnessPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelineRobustnessPropertiesEXT*)malloc(sizeof(VkPhysicalDevicePipelineRobustnessPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkImageViewSampleWeightCreateInfoQCOM_pNext(json& name){
        printf("Deserializing VkImageViewSampleWeightCreateInfoQCOM...\n");
        VkImageViewSampleWeightCreateInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkImageViewSampleWeightCreateInfoQCOM*)malloc(sizeof(VkImageViewSampleWeightCreateInfoQCOM));
[&]() {
*(result)=deserialize_VkImageViewSampleWeightCreateInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageProcessingFeaturesQCOM...\n");
        VkPhysicalDeviceImageProcessingFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageProcessingFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceImageProcessingFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageProcessingPropertiesQCOM...\n");
        VkPhysicalDeviceImageProcessingPropertiesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageProcessingPropertiesQCOM*)malloc(sizeof(VkPhysicalDeviceImageProcessingPropertiesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceTilePropertiesFeaturesQCOM...\n");
        VkPhysicalDeviceTilePropertiesFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceTilePropertiesFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceTilePropertiesFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkTilePropertiesQCOM_pNext(json& name){
        printf("Deserializing VkTilePropertiesQCOM...\n");
        VkTilePropertiesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkTilePropertiesQCOM*)malloc(sizeof(VkTilePropertiesQCOM));
[&]() {
*(result)=deserialize_VkTilePropertiesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceAmigoProfilingFeaturesSEC...\n");
        VkPhysicalDeviceAmigoProfilingFeaturesSEC* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceAmigoProfilingFeaturesSEC*)malloc(sizeof(VkPhysicalDeviceAmigoProfilingFeaturesSEC));
[&]() {
*(result)=deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkAmigoProfilingSubmitInfoSEC_pNext(json& name){
        printf("Deserializing VkAmigoProfilingSubmitInfoSEC...\n");
        VkAmigoProfilingSubmitInfoSEC* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkAmigoProfilingSubmitInfoSEC*)malloc(sizeof(VkAmigoProfilingSubmitInfoSEC));
[&]() {
*(result)=deserialize_VkAmigoProfilingSubmitInfoSEC(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT...\n");
        VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDepthClampZeroOneFeaturesEXT...\n");
        VkPhysicalDeviceDepthClampZeroOneFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceAddressBindingReportFeaturesEXT...\n");
        VkPhysicalDeviceAddressBindingReportFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceAddressBindingReportFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceAddressBindingReportFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceAddressBindingCallbackDataEXT_pNext(json& name){
        printf("Deserializing VkDeviceAddressBindingCallbackDataEXT...\n");
        VkDeviceAddressBindingCallbackDataEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceAddressBindingCallbackDataEXT*)malloc(sizeof(VkDeviceAddressBindingCallbackDataEXT));
[&]() {
*(result)=deserialize_VkDeviceAddressBindingCallbackDataEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceOpticalFlowFeaturesNV...\n");
        VkPhysicalDeviceOpticalFlowFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceOpticalFlowFeaturesNV*)malloc(sizeof(VkPhysicalDeviceOpticalFlowFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceOpticalFlowPropertiesNV...\n");
        VkPhysicalDeviceOpticalFlowPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceOpticalFlowPropertiesNV*)malloc(sizeof(VkPhysicalDeviceOpticalFlowPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOpticalFlowImageFormatInfoNV_pNext(json& name){
        printf("Deserializing VkOpticalFlowImageFormatInfoNV...\n");
        VkOpticalFlowImageFormatInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOpticalFlowImageFormatInfoNV*)malloc(sizeof(VkOpticalFlowImageFormatInfoNV));
[&]() {
*(result)=deserialize_VkOpticalFlowImageFormatInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOpticalFlowImageFormatPropertiesNV_pNext(json& name){
        printf("Deserializing VkOpticalFlowImageFormatPropertiesNV...\n");
        VkOpticalFlowImageFormatPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOpticalFlowImageFormatPropertiesNV*)malloc(sizeof(VkOpticalFlowImageFormatPropertiesNV));
[&]() {
*(result)=deserialize_VkOpticalFlowImageFormatPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOpticalFlowSessionCreateInfoNV_pNext(json& name){
        printf("Deserializing VkOpticalFlowSessionCreateInfoNV...\n");
        VkOpticalFlowSessionCreateInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOpticalFlowSessionCreateInfoNV*)malloc(sizeof(VkOpticalFlowSessionCreateInfoNV));
[&]() {
*(result)=deserialize_VkOpticalFlowSessionCreateInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV_pNext(json& name){
        printf("Deserializing VkOpticalFlowSessionCreatePrivateDataInfoNV...\n");
        VkOpticalFlowSessionCreatePrivateDataInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOpticalFlowSessionCreatePrivateDataInfoNV*)malloc(sizeof(VkOpticalFlowSessionCreatePrivateDataInfoNV));
[&]() {
*(result)=deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkOpticalFlowExecuteInfoNV_pNext(json& name){
        printf("Deserializing VkOpticalFlowExecuteInfoNV...\n");
        VkOpticalFlowExecuteInfoNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkOpticalFlowExecuteInfoNV*)malloc(sizeof(VkOpticalFlowExecuteInfoNV));
[&]() {
*(result)=deserialize_VkOpticalFlowExecuteInfoNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFaultFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFaultFeaturesEXT...\n");
        VkPhysicalDeviceFaultFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFaultFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceFaultFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFaultFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceFaultAddressInfoEXT_pNext(json& name){
        printf("Deserializing VkDeviceFaultAddressInfoEXT...\n");
        VkDeviceFaultAddressInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceFaultAddressInfoEXT*)malloc(sizeof(VkDeviceFaultAddressInfoEXT));
[&]() {
*(result)=deserialize_VkDeviceFaultAddressInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceFaultVendorInfoEXT_pNext(json& name){
        printf("Deserializing VkDeviceFaultVendorInfoEXT...\n");
        VkDeviceFaultVendorInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceFaultVendorInfoEXT*)malloc(sizeof(VkDeviceFaultVendorInfoEXT));
[&]() {
*(result)=deserialize_VkDeviceFaultVendorInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceFaultCountsEXT_pNext(json& name){
        printf("Deserializing VkDeviceFaultCountsEXT...\n");
        VkDeviceFaultCountsEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceFaultCountsEXT*)malloc(sizeof(VkDeviceFaultCountsEXT));
[&]() {
*(result)=deserialize_VkDeviceFaultCountsEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceFaultInfoEXT_pNext(json& name){
        printf("Deserializing VkDeviceFaultInfoEXT...\n");
        VkDeviceFaultInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceFaultInfoEXT*)malloc(sizeof(VkDeviceFaultInfoEXT));
[&]() {
*(result)=deserialize_VkDeviceFaultInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT_pNext(json& name){
        printf("Deserializing VkDeviceFaultVendorBinaryHeaderVersionOneEXT...\n");
        VkDeviceFaultVendorBinaryHeaderVersionOneEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceFaultVendorBinaryHeaderVersionOneEXT*)malloc(sizeof(VkDeviceFaultVendorBinaryHeaderVersionOneEXT));
[&]() {
*(result)=deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT...\n");
        VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT*)malloc(sizeof(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDepthBiasInfoEXT_pNext(json& name){
        printf("Deserializing VkDepthBiasInfoEXT...\n");
        VkDepthBiasInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDepthBiasInfoEXT*)malloc(sizeof(VkDepthBiasInfoEXT));
[&]() {
*(result)=deserialize_VkDepthBiasInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDepthBiasRepresentationInfoEXT_pNext(json& name){
        printf("Deserializing VkDepthBiasRepresentationInfoEXT...\n");
        VkDepthBiasRepresentationInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDepthBiasRepresentationInfoEXT*)malloc(sizeof(VkDepthBiasRepresentationInfoEXT));
[&]() {
*(result)=deserialize_VkDepthBiasRepresentationInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDecompressMemoryRegionNV_pNext(json& name){
        printf("Deserializing VkDecompressMemoryRegionNV...\n");
        VkDecompressMemoryRegionNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDecompressMemoryRegionNV*)malloc(sizeof(VkDecompressMemoryRegionNV));
[&]() {
*(result)=deserialize_VkDecompressMemoryRegionNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM...\n");
        VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM*)malloc(sizeof(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM...\n");
        VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM*)malloc(sizeof(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkFrameBoundaryEXT_pNext(json& name){
        printf("Deserializing VkFrameBoundaryEXT...\n");
        VkFrameBoundaryEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkFrameBoundaryEXT*)malloc(sizeof(VkFrameBoundaryEXT));
[&]() {
*(result)=deserialize_VkFrameBoundaryEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceFrameBoundaryFeaturesEXT...\n");
        VkPhysicalDeviceFrameBoundaryFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceFrameBoundaryFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceFrameBoundaryFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT...\n");
        VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfacePresentModeEXT_pNext(json& name){
        printf("Deserializing VkSurfacePresentModeEXT...\n");
        VkSurfacePresentModeEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfacePresentModeEXT*)malloc(sizeof(VkSurfacePresentModeEXT));
[&]() {
*(result)=deserialize_VkSurfacePresentModeEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfacePresentScalingCapabilitiesEXT_pNext(json& name){
        printf("Deserializing VkSurfacePresentScalingCapabilitiesEXT...\n");
        VkSurfacePresentScalingCapabilitiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfacePresentScalingCapabilitiesEXT*)malloc(sizeof(VkSurfacePresentScalingCapabilitiesEXT));
[&]() {
*(result)=deserialize_VkSurfacePresentScalingCapabilitiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSurfacePresentModeCompatibilityEXT_pNext(json& name){
        printf("Deserializing VkSurfacePresentModeCompatibilityEXT...\n");
        VkSurfacePresentModeCompatibilityEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSurfacePresentModeCompatibilityEXT*)malloc(sizeof(VkSurfacePresentModeCompatibilityEXT));
[&]() {
*(result)=deserialize_VkSurfacePresentModeCompatibilityEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT...\n");
        VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT*)malloc(sizeof(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainPresentFenceInfoEXT_pNext(json& name){
        printf("Deserializing VkSwapchainPresentFenceInfoEXT...\n");
        VkSwapchainPresentFenceInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainPresentFenceInfoEXT*)malloc(sizeof(VkSwapchainPresentFenceInfoEXT));
[&]() {
*(result)=deserialize_VkSwapchainPresentFenceInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainPresentModesCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkSwapchainPresentModesCreateInfoEXT...\n");
        VkSwapchainPresentModesCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainPresentModesCreateInfoEXT*)malloc(sizeof(VkSwapchainPresentModesCreateInfoEXT));
[&]() {
*(result)=deserialize_VkSwapchainPresentModesCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainPresentModeInfoEXT_pNext(json& name){
        printf("Deserializing VkSwapchainPresentModeInfoEXT...\n");
        VkSwapchainPresentModeInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainPresentModeInfoEXT*)malloc(sizeof(VkSwapchainPresentModeInfoEXT));
[&]() {
*(result)=deserialize_VkSwapchainPresentModeInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSwapchainPresentScalingCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkSwapchainPresentScalingCreateInfoEXT...\n");
        VkSwapchainPresentScalingCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSwapchainPresentScalingCreateInfoEXT*)malloc(sizeof(VkSwapchainPresentScalingCreateInfoEXT));
[&]() {
*(result)=deserialize_VkSwapchainPresentScalingCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkReleaseSwapchainImagesInfoEXT_pNext(json& name){
        printf("Deserializing VkReleaseSwapchainImagesInfoEXT...\n");
        VkReleaseSwapchainImagesInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkReleaseSwapchainImagesInfoEXT*)malloc(sizeof(VkReleaseSwapchainImagesInfoEXT));
[&]() {
*(result)=deserialize_VkReleaseSwapchainImagesInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDepthBiasControlFeaturesEXT...\n");
        VkPhysicalDeviceDepthBiasControlFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDepthBiasControlFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceDepthBiasControlFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV...\n");
        VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV*)malloc(sizeof(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV...\n");
        VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV*)malloc(sizeof(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDirectDriverLoadingInfoLUNARG_pNext(json& name){
        printf("Deserializing VkDirectDriverLoadingInfoLUNARG...\n");
        VkDirectDriverLoadingInfoLUNARG* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDirectDriverLoadingInfoLUNARG*)malloc(sizeof(VkDirectDriverLoadingInfoLUNARG));
[&]() {
*(result)=deserialize_VkDirectDriverLoadingInfoLUNARG(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDirectDriverLoadingListLUNARG_pNext(json& name){
        printf("Deserializing VkDirectDriverLoadingListLUNARG...\n");
        VkDirectDriverLoadingListLUNARG* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDirectDriverLoadingListLUNARG*)malloc(sizeof(VkDirectDriverLoadingListLUNARG));
[&]() {
*(result)=deserialize_VkDirectDriverLoadingListLUNARG(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM...\n");
        VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR...\n");
        VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkDeviceImageSubresourceInfoKHR_pNext(json& name){
        printf("Deserializing VkDeviceImageSubresourceInfoKHR...\n");
        VkDeviceImageSubresourceInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkDeviceImageSubresourceInfoKHR*)malloc(sizeof(VkDeviceImageSubresourceInfoKHR));
[&]() {
*(result)=deserialize_VkDeviceImageSubresourceInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderCorePropertiesARM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderCorePropertiesARM...\n");
        VkPhysicalDeviceShaderCorePropertiesARM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderCorePropertiesARM*)malloc(sizeof(VkPhysicalDeviceShaderCorePropertiesARM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderCorePropertiesARM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM...\n");
        VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM_pNext(json& name){
        printf("Deserializing VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM...\n");
        VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM*)malloc(sizeof(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM));
[&]() {
*(result)=deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkQueryLowLatencySupportNV_pNext(json& name){
        printf("Deserializing VkQueryLowLatencySupportNV...\n");
        VkQueryLowLatencySupportNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkQueryLowLatencySupportNV*)malloc(sizeof(VkQueryLowLatencySupportNV));
[&]() {
*(result)=deserialize_VkQueryLowLatencySupportNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryMapInfoKHR_pNext(json& name){
        printf("Deserializing VkMemoryMapInfoKHR...\n");
        VkMemoryMapInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryMapInfoKHR*)malloc(sizeof(VkMemoryMapInfoKHR));
[&]() {
*(result)=deserialize_VkMemoryMapInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkMemoryUnmapInfoKHR_pNext(json& name){
        printf("Deserializing VkMemoryUnmapInfoKHR...\n");
        VkMemoryUnmapInfoKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkMemoryUnmapInfoKHR*)malloc(sizeof(VkMemoryUnmapInfoKHR));
[&]() {
*(result)=deserialize_VkMemoryUnmapInfoKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderObjectFeaturesEXT...\n");
        VkPhysicalDeviceShaderObjectFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderObjectFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceShaderObjectFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderObjectPropertiesEXT...\n");
        VkPhysicalDeviceShaderObjectPropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderObjectPropertiesEXT*)malloc(sizeof(VkPhysicalDeviceShaderObjectPropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkShaderCreateInfoEXT_pNext(json& name){
        printf("Deserializing VkShaderCreateInfoEXT...\n");
        VkShaderCreateInfoEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkShaderCreateInfoEXT*)malloc(sizeof(VkShaderCreateInfoEXT));
[&]() {
*(result)=deserialize_VkShaderCreateInfoEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderTileImageFeaturesEXT...\n");
        VkPhysicalDeviceShaderTileImageFeaturesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderTileImageFeaturesEXT*)malloc(sizeof(VkPhysicalDeviceShaderTileImageFeaturesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceShaderTileImagePropertiesEXT...\n");
        VkPhysicalDeviceShaderTileImagePropertiesEXT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceShaderTileImagePropertiesEXT*)malloc(sizeof(VkPhysicalDeviceShaderTileImagePropertiesEXT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCooperativeMatrixFeaturesKHR...\n");
        VkPhysicalDeviceCooperativeMatrixFeaturesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCooperativeMatrixFeaturesKHR*)malloc(sizeof(VkPhysicalDeviceCooperativeMatrixFeaturesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkCooperativeMatrixPropertiesKHR_pNext(json& name){
        printf("Deserializing VkCooperativeMatrixPropertiesKHR...\n");
        VkCooperativeMatrixPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkCooperativeMatrixPropertiesKHR*)malloc(sizeof(VkCooperativeMatrixPropertiesKHR));
[&]() {
*(result)=deserialize_VkCooperativeMatrixPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCooperativeMatrixPropertiesKHR...\n");
        VkPhysicalDeviceCooperativeMatrixPropertiesKHR* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCooperativeMatrixPropertiesKHR*)malloc(sizeof(VkPhysicalDeviceCooperativeMatrixPropertiesKHR));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCubicClampFeaturesQCOM...\n");
        VkPhysicalDeviceCubicClampFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCubicClampFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceCubicClampFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceYcbcrDegammaFeaturesQCOM...\n");
        VkPhysicalDeviceYcbcrDegammaFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM_pNext(json& name){
        printf("Deserializing VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM...\n");
        VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM*)malloc(sizeof(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM));
[&]() {
*(result)=deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceCubicWeightsFeaturesQCOM...\n");
        VkPhysicalDeviceCubicWeightsFeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceCubicWeightsFeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceCubicWeightsFeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerCubicWeightsCreateInfoQCOM_pNext(json& name){
        printf("Deserializing VkSamplerCubicWeightsCreateInfoQCOM...\n");
        VkSamplerCubicWeightsCreateInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerCubicWeightsCreateInfoQCOM*)malloc(sizeof(VkSamplerCubicWeightsCreateInfoQCOM));
[&]() {
*(result)=deserialize_VkSamplerCubicWeightsCreateInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkBlitImageCubicWeightsInfoQCOM_pNext(json& name){
        printf("Deserializing VkBlitImageCubicWeightsInfoQCOM...\n");
        VkBlitImageCubicWeightsInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkBlitImageCubicWeightsInfoQCOM*)malloc(sizeof(VkBlitImageCubicWeightsInfoQCOM));
[&]() {
*(result)=deserialize_VkBlitImageCubicWeightsInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageProcessing2FeaturesQCOM...\n");
        VkPhysicalDeviceImageProcessing2FeaturesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageProcessing2FeaturesQCOM*)malloc(sizeof(VkPhysicalDeviceImageProcessing2FeaturesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceImageProcessing2PropertiesQCOM...\n");
        VkPhysicalDeviceImageProcessing2PropertiesQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceImageProcessing2PropertiesQCOM*)malloc(sizeof(VkPhysicalDeviceImageProcessing2PropertiesQCOM));
[&]() {
*(result)=deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM_pNext(json& name){
        printf("Deserializing VkSamplerBlockMatchWindowCreateInfoQCOM...\n");
        VkSamplerBlockMatchWindowCreateInfoQCOM* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkSamplerBlockMatchWindowCreateInfoQCOM*)malloc(sizeof(VkSamplerBlockMatchWindowCreateInfoQCOM));
[&]() {
*(result)=deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV...\n");
        VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV*)malloc(sizeof(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV));
[&]() {
*(result)=deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(name);}();
}();
        return (void*)result;
        }
    

        void* deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT_pNext(json& name){
        printf("Deserializing VkPhysicalDeviceLayeredDriverPropertiesMSFT...\n");
        VkPhysicalDeviceLayeredDriverPropertiesMSFT* result;
        [&]() {

        if (name.contains("null")){
        result=NULL;
        return;
        }
    result=(VkPhysicalDeviceLayeredDriverPropertiesMSFT*)malloc(sizeof(VkPhysicalDeviceLayeredDriverPropertiesMSFT));
[&]() {
*(result)=deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(name);}();
}();
        return (void*)result;
        }
    
std::map<VkStructureType, std::function<void*(json&)>> deserialize_pNext_dispatch={
{VK_STRUCTURE_TYPE_APPLICATION_INFO,deserialize_VkApplicationInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,deserialize_VkDeviceQueueCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,deserialize_VkDeviceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,deserialize_VkInstanceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,deserialize_VkMemoryAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,deserialize_VkMappedMemoryRange_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,deserialize_VkWriteDescriptorSet_pNext},
{VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,deserialize_VkCopyDescriptorSet_pNext},
{VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR,deserialize_VkBufferUsageFlags2CreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,deserialize_VkBufferCreateInfo_pNext},
{VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,deserialize_VkBufferViewCreateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_BARRIER,deserialize_VkMemoryBarrier_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,deserialize_VkBufferMemoryBarrier_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,deserialize_VkImageMemoryBarrier_pNext},
{VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,deserialize_VkImageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,deserialize_VkImageViewCreateInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,deserialize_VkBindSparseInfo_pNext},
{VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,deserialize_VkShaderModuleCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,deserialize_VkDescriptorSetLayoutCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,deserialize_VkDescriptorPoolCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,deserialize_VkDescriptorSetAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,deserialize_VkPipelineShaderStageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,deserialize_VkComputePipelineCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV,deserialize_VkComputePipelineIndirectBufferInfoNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR,deserialize_VkPipelineCreateFlags2CreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,deserialize_VkPipelineVertexInputStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,deserialize_VkPipelineInputAssemblyStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,deserialize_VkPipelineTessellationStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,deserialize_VkPipelineViewportStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,deserialize_VkPipelineRasterizationStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,deserialize_VkPipelineMultisampleStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,deserialize_VkPipelineColorBlendStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,deserialize_VkPipelineDynamicStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,deserialize_VkPipelineDepthStencilStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,deserialize_VkGraphicsPipelineCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,deserialize_VkPipelineCacheCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,deserialize_VkPipelineLayoutCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,deserialize_VkSamplerCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,deserialize_VkCommandPoolCreateInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,deserialize_VkCommandBufferAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,deserialize_VkCommandBufferInheritanceInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,deserialize_VkCommandBufferBeginInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,deserialize_VkRenderPassBeginInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,deserialize_VkRenderPassCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,deserialize_VkEventCreateInfo_pNext},
{VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,deserialize_VkFenceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,deserialize_VkSemaphoreCreateInfo_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,deserialize_VkQueryPoolCreateInfo_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,deserialize_VkFramebufferCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SUBMIT_INFO,deserialize_VkSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR,deserialize_VkDisplayModeCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR,deserialize_VkDisplaySurfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR,deserialize_VkDisplayPresentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR,deserialize_VkXlibSurfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR,deserialize_VkXcbSurfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,deserialize_VkSwapchainCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,deserialize_VkPresentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,deserialize_VkDebugReportCallbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,deserialize_VkValidationFlagsEXT_pNext},
{VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,deserialize_VkValidationFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD,deserialize_VkPipelineRasterizationStateRasterizationOrderAMD_pNext},
{VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT,deserialize_VkDebugMarkerObjectNameInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT,deserialize_VkDebugMarkerObjectTagInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT,deserialize_VkDebugMarkerMarkerInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV,deserialize_VkDedicatedAllocationImageCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV,deserialize_VkDedicatedAllocationBufferCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV,deserialize_VkDedicatedAllocationMemoryAllocateInfoNV_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV,deserialize_VkExternalMemoryImageCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV,deserialize_VkExportMemoryAllocateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV,deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV,deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,deserialize_VkDevicePrivateDataCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,deserialize_VkDevicePrivateDataCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,deserialize_VkPrivateDataSlotCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,deserialize_VkPrivateDataSlotCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,deserialize_VkPhysicalDevicePrivateDataFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,deserialize_VkPhysicalDevicePrivateDataFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV,deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT,deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV,deserialize_VkGraphicsShaderGroupCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV,deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV,deserialize_VkIndirectCommandsLayoutTokenNV_pNext},
{VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV,deserialize_VkIndirectCommandsLayoutCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV,deserialize_VkGeneratedCommandsInfoNV_pNext},
{VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV,deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV,deserialize_VkPipelineIndirectDeviceAddressInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,deserialize_VkPhysicalDeviceFeatures2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,deserialize_VkPhysicalDeviceFeatures2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,deserialize_VkPhysicalDeviceProperties2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,deserialize_VkPhysicalDeviceProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,deserialize_VkFormatProperties2_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,deserialize_VkFormatProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,deserialize_VkImageFormatProperties2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,deserialize_VkImageFormatProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,deserialize_VkPhysicalDeviceImageFormatInfo2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,deserialize_VkPhysicalDeviceImageFormatInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,deserialize_VkQueueFamilyProperties2_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,deserialize_VkQueueFamilyProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,deserialize_VkPhysicalDeviceMemoryProperties2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,deserialize_VkPhysicalDeviceMemoryProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,deserialize_VkSparseImageFormatProperties2_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,deserialize_VkSparseImageFormatProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,deserialize_VkPhysicalDeviceSparseImageFormatInfo2_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR,deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,deserialize_VkPhysicalDeviceDriverProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,deserialize_VkPhysicalDeviceDriverPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR,deserialize_VkPresentRegionsKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,deserialize_VkPhysicalDeviceVariablePointersFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,deserialize_VkPhysicalDeviceVariablePointerFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,deserialize_VkPhysicalDeviceExternalImageFormatInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,deserialize_VkExternalImageFormatProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,deserialize_VkExternalImageFormatPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,deserialize_VkPhysicalDeviceExternalBufferInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,deserialize_VkPhysicalDeviceExternalBufferInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,deserialize_VkExternalBufferProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,deserialize_VkExternalBufferPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,deserialize_VkPhysicalDeviceIDProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,deserialize_VkPhysicalDeviceIDPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,deserialize_VkExternalMemoryImageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,deserialize_VkExternalMemoryImageCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,deserialize_VkExternalMemoryBufferCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,deserialize_VkExternalMemoryBufferCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,deserialize_VkExportMemoryAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,deserialize_VkExportMemoryAllocateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR,deserialize_VkImportMemoryFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR,deserialize_VkMemoryFdPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR,deserialize_VkMemoryGetFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,deserialize_VkPhysicalDeviceExternalSemaphoreInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,deserialize_VkExternalSemaphoreProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,deserialize_VkExternalSemaphorePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,deserialize_VkExportSemaphoreCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,deserialize_VkExportSemaphoreCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR,deserialize_VkImportSemaphoreFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR,deserialize_VkSemaphoreGetFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,deserialize_VkPhysicalDeviceExternalFenceInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,deserialize_VkPhysicalDeviceExternalFenceInfoKHR_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,deserialize_VkExternalFenceProperties_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,deserialize_VkExternalFencePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,deserialize_VkExportFenceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,deserialize_VkExportFenceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR,deserialize_VkImportFenceFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR,deserialize_VkFenceGetFdInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,deserialize_VkPhysicalDeviceMultiviewFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,deserialize_VkPhysicalDeviceMultiviewFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,deserialize_VkPhysicalDeviceMultiviewProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,deserialize_VkPhysicalDeviceMultiviewPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,deserialize_VkRenderPassMultiviewCreateInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,deserialize_VkRenderPassMultiviewCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,deserialize_VkSurfaceCapabilities2EXT_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT,deserialize_VkDisplayPowerInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT,deserialize_VkDeviceEventInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT,deserialize_VkDisplayEventInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT,deserialize_VkSwapchainCounterCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,deserialize_VkPhysicalDeviceGroupProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,deserialize_VkPhysicalDeviceGroupPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,deserialize_VkMemoryAllocateFlagsInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,deserialize_VkMemoryAllocateFlagsInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,deserialize_VkBindBufferMemoryInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,deserialize_VkBindBufferMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,deserialize_VkBindBufferMemoryDeviceGroupInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,deserialize_VkBindBufferMemoryDeviceGroupInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,deserialize_VkBindImageMemoryInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,deserialize_VkBindImageMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,deserialize_VkBindImageMemoryDeviceGroupInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,deserialize_VkBindImageMemoryDeviceGroupInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,deserialize_VkDeviceGroupRenderPassBeginInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,deserialize_VkDeviceGroupRenderPassBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,deserialize_VkDeviceGroupCommandBufferBeginInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,deserialize_VkDeviceGroupCommandBufferBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,deserialize_VkDeviceGroupSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,deserialize_VkDeviceGroupSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,deserialize_VkDeviceGroupBindSparseInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,deserialize_VkDeviceGroupBindSparseInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR,deserialize_VkDeviceGroupPresentCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR,deserialize_VkImageSwapchainCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR,deserialize_VkBindImageMemorySwapchainInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR,deserialize_VkAcquireNextImageInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR,deserialize_VkDeviceGroupPresentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,deserialize_VkDeviceGroupDeviceCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,deserialize_VkDeviceGroupDeviceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR,deserialize_VkDeviceGroupSwapchainCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,deserialize_VkDescriptorUpdateTemplateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,deserialize_VkDescriptorUpdateTemplateCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR,deserialize_VkPhysicalDevicePresentIdFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PRESENT_ID_KHR,deserialize_VkPresentIdKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR,deserialize_VkPhysicalDevicePresentWaitFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_HDR_METADATA_EXT,deserialize_VkHdrMetadataEXT_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD,deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD,deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD_pNext},
{VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE,deserialize_VkPresentTimesInfoGOOGLE_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV,deserialize_VkPipelineViewportWScalingStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV,deserialize_VkPipelineViewportSwizzleStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT,deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT,deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX,deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,deserialize_VkRenderPassInputAttachmentAspectCreateInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR,deserialize_VkPhysicalDeviceSurfaceInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR,deserialize_VkSurfaceCapabilities2KHR_pNext},
{VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR,deserialize_VkSurfaceFormat2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR,deserialize_VkDisplayProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR,deserialize_VkDisplayPlaneProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR,deserialize_VkDisplayModeProperties2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR,deserialize_VkDisplayPlaneInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR,deserialize_VkDisplayPlaneCapabilities2KHR_pNext},
{VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR,deserialize_VkSharedPresentSurfaceCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,deserialize_VkPhysicalDevice16BitStorageFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,deserialize_VkPhysicalDevice16BitStorageFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,deserialize_VkPhysicalDeviceSubgroupProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,deserialize_VkBufferMemoryRequirementsInfo2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,deserialize_VkBufferMemoryRequirementsInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,deserialize_VkDeviceBufferMemoryRequirements_pNext},
{VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,deserialize_VkDeviceBufferMemoryRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,deserialize_VkImageMemoryRequirementsInfo2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,deserialize_VkImageMemoryRequirementsInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,deserialize_VkImageSparseMemoryRequirementsInfo2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,deserialize_VkImageSparseMemoryRequirementsInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS,deserialize_VkDeviceImageMemoryRequirements_pNext},
{VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS,deserialize_VkDeviceImageMemoryRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,deserialize_VkMemoryRequirements2_pNext},
{VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,deserialize_VkMemoryRequirements2KHR_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,deserialize_VkSparseImageMemoryRequirements2_pNext},
{VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,deserialize_VkSparseImageMemoryRequirements2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,deserialize_VkPhysicalDevicePointClippingProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,deserialize_VkPhysicalDevicePointClippingPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,deserialize_VkMemoryDedicatedRequirements_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,deserialize_VkMemoryDedicatedRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,deserialize_VkMemoryDedicatedAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,deserialize_VkMemoryDedicatedAllocateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,deserialize_VkImageViewUsageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT,deserialize_VkImageViewSlicedCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,deserialize_VkImageViewUsageCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,deserialize_VkPipelineTessellationDomainOriginStateCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,deserialize_VkSamplerYcbcrConversionInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,deserialize_VkSamplerYcbcrConversionInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,deserialize_VkSamplerYcbcrConversionCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,deserialize_VkSamplerYcbcrConversionCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,deserialize_VkBindImagePlaneMemoryInfo_pNext},
{VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,deserialize_VkBindImagePlaneMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,deserialize_VkImagePlaneMemoryRequirementsInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,deserialize_VkImagePlaneMemoryRequirementsInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,deserialize_VkSamplerYcbcrConversionImageFormatProperties_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD,deserialize_VkTextureLODGatherFormatPropertiesAMD_pNext},
{VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT,deserialize_VkConditionalRenderingBeginInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,deserialize_VkProtectedSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,deserialize_VkPhysicalDeviceProtectedMemoryFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,deserialize_VkPhysicalDeviceProtectedMemoryProperties_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,deserialize_VkDeviceQueueInfo2_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV,deserialize_VkPipelineCoverageToColorStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT,deserialize_VkSampleLocationsInfoEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT,deserialize_VkRenderPassSampleLocationsBeginInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT,deserialize_VkPipelineSampleLocationsStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT,deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT,deserialize_VkMultisamplePropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,deserialize_VkSamplerReductionModeCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,deserialize_VkSamplerReductionModeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT,deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT,deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT,deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT,deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,deserialize_VkPhysicalDeviceInlineUniformBlockFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,deserialize_VkPhysicalDeviceInlineUniformBlockProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,deserialize_VkWriteDescriptorSetInlineUniformBlock_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,deserialize_VkWriteDescriptorSetInlineUniformBlockEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV,deserialize_VkPipelineCoverageModulationStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,deserialize_VkImageFormatListCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,deserialize_VkImageFormatListCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT,deserialize_VkValidationCacheCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT,deserialize_VkShaderModuleValidationCacheCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,deserialize_VkPhysicalDeviceMaintenance3Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,deserialize_VkPhysicalDeviceMaintenance4Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,deserialize_VkPhysicalDeviceMaintenance4Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR,deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR,deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR,deserialize_VkRenderingAreaInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,deserialize_VkDescriptorSetLayoutSupport_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,deserialize_VkDescriptorSetLayoutSupportKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,deserialize_VkPhysicalDeviceShaderDrawParametersFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,deserialize_VkPhysicalDeviceShaderDrawParameterFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,deserialize_VkPhysicalDeviceShaderFloat16Int8Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,deserialize_VkPhysicalDeviceFloatControlsProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,deserialize_VkPhysicalDeviceHostQueryResetFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR,deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR,deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR,deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR,deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR,deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR,deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,deserialize_VkDebugUtilsObjectNameInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT,deserialize_VkDebugUtilsObjectTagInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT,deserialize_VkDebugUtilsLabelEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT,deserialize_VkDebugUtilsMessengerCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT,deserialize_VkDebugUtilsMessengerCallbackDataEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT,deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT,deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT,deserialize_VkDeviceMemoryReportCallbackDataEXT_pNext},
{VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT,deserialize_VkImportMemoryHostPointerInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT,deserialize_VkMemoryHostPointerPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT,deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT,deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT,deserialize_VkCalibratedTimestampInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD,deserialize_VkPhysicalDeviceShaderCorePropertiesAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD,deserialize_VkPhysicalDeviceShaderCoreProperties2AMD_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT,deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,deserialize_VkPhysicalDeviceDescriptorIndexingFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,deserialize_VkPhysicalDeviceDescriptorIndexingProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,deserialize_VkAttachmentDescription2_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,deserialize_VkAttachmentDescription2KHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,deserialize_VkAttachmentReference2_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,deserialize_VkAttachmentReference2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,deserialize_VkSubpassDescription2_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,deserialize_VkSubpassDescription2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,deserialize_VkSubpassDependency2_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,deserialize_VkSubpassDependency2KHR_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,deserialize_VkRenderPassCreateInfo2_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,deserialize_VkRenderPassCreateInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,deserialize_VkSubpassBeginInfo_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,deserialize_VkSubpassBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_END_INFO,deserialize_VkSubpassEndInfo_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_END_INFO,deserialize_VkSubpassEndInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,deserialize_VkPhysicalDeviceTimelineSemaphoreProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,deserialize_VkSemaphoreTypeCreateInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,deserialize_VkSemaphoreTypeCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,deserialize_VkTimelineSemaphoreSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,deserialize_VkTimelineSemaphoreSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,deserialize_VkSemaphoreWaitInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,deserialize_VkSemaphoreWaitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,deserialize_VkSemaphoreSignalInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,deserialize_VkSemaphoreSignalInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT,deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT,deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT,deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT,deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,deserialize_VkPhysicalDevice8BitStorageFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,deserialize_VkPhysicalDevice8BitStorageFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT,deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,deserialize_VkPhysicalDeviceShaderAtomicInt64Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT,deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT,deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT,deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV,deserialize_VkQueueFamilyCheckpointPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV,deserialize_VkCheckpointDataNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,deserialize_VkPhysicalDeviceDepthStencilResolveProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,deserialize_VkSubpassDescriptionDepthStencilResolve_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,deserialize_VkSubpassDescriptionDepthStencilResolveKHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT,deserialize_VkImageViewASTCDecodeModeEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT,deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT,deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT,deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT,deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV,deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV,deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV,deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV,deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV,deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV,deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV,deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV,deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV,deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV,deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV,deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV,deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV,deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV,deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV,deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI,deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV,deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV,deserialize_VkPhysicalDeviceMeshShaderFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV,deserialize_VkPhysicalDeviceMeshShaderPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT,deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT,deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV,deserialize_VkRayTracingShaderGroupCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR,deserialize_VkRayTracingShaderGroupCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV,deserialize_VkRayTracingPipelineCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR,deserialize_VkRayTracingPipelineCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV,deserialize_VkGeometryTrianglesNV_pNext},
{VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV,deserialize_VkGeometryAABBNV_pNext},
{VK_STRUCTURE_TYPE_GEOMETRY_NV,deserialize_VkGeometryNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV,deserialize_VkAccelerationStructureInfoNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV,deserialize_VkAccelerationStructureCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV,deserialize_VkBindAccelerationStructureMemoryInfoNV_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR,deserialize_VkWriteDescriptorSetAccelerationStructureKHR_pNext},
{VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV,deserialize_VkWriteDescriptorSetAccelerationStructureNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV,deserialize_VkAccelerationStructureMemoryRequirementsInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR,deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR,deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR,deserialize_VkPhysicalDeviceRayQueryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR,deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR,deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV,deserialize_VkPhysicalDeviceRayTracingPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR,deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT,deserialize_VkDrmFormatModifierPropertiesListEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT,deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT,deserialize_VkImageDrmFormatModifierListCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT,deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,deserialize_VkImageDrmFormatModifierPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,deserialize_VkImageStencilUsageCreateInfo_pNext},
{VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,deserialize_VkImageStencilUsageCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD,deserialize_VkDeviceMemoryOverallocationCreateInfoAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT,deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT,deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM,deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT,deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT,deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM,deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT,deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM,deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR,deserialize_VkSurfaceProtectedCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT,deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT,deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT,deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT,deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT,deserialize_VkMemoryPriorityAllocateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT,deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,deserialize_VkBufferDeviceAddressInfo_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,deserialize_VkBufferDeviceAddressInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,deserialize_VkBufferDeviceAddressInfoEXT_pNext},
{VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,deserialize_VkBufferOpaqueCaptureAddressCreateInfo_pNext},
{VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT,deserialize_VkBufferDeviceAddressCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT,deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT_pNext},
{VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT,deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,deserialize_VkPhysicalDeviceImagelessFramebufferFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,deserialize_VkFramebufferAttachmentsCreateInfo_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,deserialize_VkFramebufferAttachmentsCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,deserialize_VkFramebufferAttachmentImageInfo_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,deserialize_VkFramebufferAttachmentImageInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,deserialize_VkRenderPassAttachmentBeginInfo_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,deserialize_VkRenderPassAttachmentBeginInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV,deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV,deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV,deserialize_VkCooperativeMatrixPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT,deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX,deserialize_VkImageViewHandleInfoNVX_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX,deserialize_VkImageViewAddressPropertiesNVX_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,deserialize_VkPipelineCreationFeedbackCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,deserialize_VkPipelineCreationFeedbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV,deserialize_VkPhysicalDevicePresentBarrierFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV,deserialize_VkSurfaceCapabilitiesPresentBarrierNV_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV,deserialize_VkSwapchainPresentBarrierCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR,deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR,deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR,deserialize_VkPerformanceCounterKHR_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR,deserialize_VkPerformanceCounterDescriptionKHR_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR,deserialize_VkQueryPoolPerformanceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR,deserialize_VkAcquireProfilingLockInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR,deserialize_VkPerformanceQuerySubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT,deserialize_VkHeadlessSurfaceCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV,deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV,deserialize_VkPipelineCoverageReductionStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV,deserialize_VkFramebufferMixedSamplesCombinationNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL,deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL_pNext},
{VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL,deserialize_VkInitializePerformanceApiInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,deserialize_VkQueryPoolCreateInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL,deserialize_VkPerformanceMarkerInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL,deserialize_VkPerformanceStreamMarkerInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL,deserialize_VkPerformanceOverrideInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL,deserialize_VkPerformanceConfigurationAcquireInfoINTEL_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR,deserialize_VkPhysicalDeviceShaderClockFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT,deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV,deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV,deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT,deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,deserialize_VkAttachmentReferenceStencilLayout_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT,deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,deserialize_VkAttachmentReferenceStencilLayoutKHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,deserialize_VkAttachmentDescriptionStencilLayout_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,deserialize_VkAttachmentDescriptionStencilLayoutKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR,deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR,deserialize_VkPipelineInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR,deserialize_VkPipelineInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR,deserialize_VkPipelineExecutablePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR,deserialize_VkPipelineExecutableInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR,deserialize_VkPipelineExecutableStatisticKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR,deserialize_VkPipelineExecutableInternalRepresentationKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT,deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,deserialize_VkPhysicalDeviceSubgroupSizeControlProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI,deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI,deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI,deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo_pNext},
{VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo_pNext},
{VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT,deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT,deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT,deserialize_VkPipelineRasterizationLineStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES,deserialize_VkPhysicalDeviceVulkan11Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES,deserialize_VkPhysicalDeviceVulkan11Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES,deserialize_VkPhysicalDeviceVulkan12Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES,deserialize_VkPhysicalDeviceVulkan12Properties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES,deserialize_VkPhysicalDeviceVulkan13Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES,deserialize_VkPhysicalDeviceVulkan13Properties_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD,deserialize_VkPipelineCompilerControlCreateInfoAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD,deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,deserialize_VkPhysicalDeviceToolProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,deserialize_VkPhysicalDeviceToolPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT,deserialize_VkSamplerCustomBorderColorCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT,deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT,deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT,deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT,deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR,deserialize_VkAccelerationStructureGeometryTrianglesDataKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR,deserialize_VkAccelerationStructureGeometryAabbsDataKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR,deserialize_VkAccelerationStructureGeometryInstancesDataKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR,deserialize_VkAccelerationStructureGeometryKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR,deserialize_VkAccelerationStructureBuildGeometryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR,deserialize_VkAccelerationStructureCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR,deserialize_VkAccelerationStructureDeviceAddressInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR,deserialize_VkAccelerationStructureVersionInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR,deserialize_VkCopyAccelerationStructureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR,deserialize_VkCopyAccelerationStructureToMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR,deserialize_VkCopyMemoryToAccelerationStructureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR,deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR,deserialize_VkPipelineLibraryCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT,deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT,deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT,deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT,deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM,deserialize_VkRenderPassTransformBeginInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM,deserialize_VkCopyCommandTransformInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM,deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV,deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV,deserialize_VkDeviceDiagnosticsConfigCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR,deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT,deserialize_VkPhysicalDeviceRobustness2FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT,deserialize_VkPhysicalDeviceRobustness2PropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,deserialize_VkPhysicalDeviceImageRobustnessFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR,deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT,deserialize_VkPhysicalDevice4444FormatsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI,deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI,deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI_pNext},
{VK_STRUCTURE_TYPE_BUFFER_COPY_2,deserialize_VkBufferCopy2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_COPY_2,deserialize_VkBufferCopy2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COPY_2,deserialize_VkImageCopy2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COPY_2,deserialize_VkImageCopy2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_BLIT_2,deserialize_VkImageBlit2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_BLIT_2,deserialize_VkImageBlit2KHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,deserialize_VkBufferImageCopy2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,deserialize_VkBufferImageCopy2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2,deserialize_VkImageResolve2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2,deserialize_VkImageResolve2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2,deserialize_VkCopyBufferInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2,deserialize_VkCopyBufferInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2,deserialize_VkCopyImageInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2,deserialize_VkCopyImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,deserialize_VkBlitImageInfo2_pNext},
{VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,deserialize_VkBlitImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,deserialize_VkCopyBufferToImageInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,deserialize_VkCopyBufferToImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,deserialize_VkCopyImageToBufferInfo2_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,deserialize_VkCopyImageToBufferInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,deserialize_VkResolveImageInfo2_pNext},
{VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,deserialize_VkResolveImageInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT,deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,deserialize_VkFragmentShadingRateAttachmentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR,deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR,deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR,deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR,deserialize_VkPhysicalDeviceFragmentShadingRateKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV,deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV,deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV,deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR,deserialize_VkAccelerationStructureBuildSizesInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT,deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT,deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT,deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT,deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT,deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE_pNext},
{VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT,deserialize_VkMutableDescriptorTypeCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT,deserialize_VkMutableDescriptorTypeCreateInfoVALVE_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT,deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT,deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT,deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV,deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT,deserialize_VkVertexInputBindingDescription2EXT_pNext},
{VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT,deserialize_VkVertexInputAttributeDescription2EXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT,deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT,deserialize_VkPipelineColorWriteCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_BARRIER_2,deserialize_VkMemoryBarrier2_pNext},
{VK_STRUCTURE_TYPE_MEMORY_BARRIER_2,deserialize_VkMemoryBarrier2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,deserialize_VkImageMemoryBarrier2_pNext},
{VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,deserialize_VkImageMemoryBarrier2KHR_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,deserialize_VkBufferMemoryBarrier2_pNext},
{VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,deserialize_VkBufferMemoryBarrier2KHR_pNext},
{VK_STRUCTURE_TYPE_DEPENDENCY_INFO,deserialize_VkDependencyInfo_pNext},
{VK_STRUCTURE_TYPE_DEPENDENCY_INFO,deserialize_VkDependencyInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,deserialize_VkSemaphoreSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,deserialize_VkSemaphoreSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,deserialize_VkCommandBufferSubmitInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,deserialize_VkCommandBufferSubmitInfoKHR_pNext},
{VK_STRUCTURE_TYPE_SUBMIT_INFO_2,deserialize_VkSubmitInfo2_pNext},
{VK_STRUCTURE_TYPE_SUBMIT_INFO_2,deserialize_VkSubmitInfo2KHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV,deserialize_VkQueueFamilyCheckpointProperties2NV_pNext},
{VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV,deserialize_VkCheckpointData2NV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,deserialize_VkPhysicalDeviceSynchronization2Features_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT,deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT,deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT,deserialize_VkMemoryToImageCopyEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT,deserialize_VkImageToMemoryCopyEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT,deserialize_VkCopyMemoryToImageInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT,deserialize_VkCopyImageToMemoryInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT,deserialize_VkCopyImageToImageInfoEXT_pNext},
{VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT,deserialize_VkHostImageLayoutTransitionInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT,deserialize_VkSubresourceHostMemcpySizeEXT_pNext},
{VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT,deserialize_VkHostImageCopyDevicePerformanceQueryEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT,deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT,deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT,deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT,deserialize_VkSubpassResolvePerformanceQueryEXT_pNext},
{VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT,deserialize_VkMultisampledRenderToSingleSampledInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT,deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR,deserialize_VkQueueFamilyVideoPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR,deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR,deserialize_VkVideoProfileListInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR,deserialize_VkPhysicalDeviceVideoFormatInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR,deserialize_VkVideoFormatPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR,deserialize_VkVideoProfileInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR,deserialize_VkVideoCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR,deserialize_VkVideoSessionMemoryRequirementsKHR_pNext},
{VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR,deserialize_VkBindVideoSessionMemoryInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR,deserialize_VkVideoPictureResourceInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR,deserialize_VkVideoReferenceSlotInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR,deserialize_VkVideoDecodeCapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR,deserialize_VkVideoDecodeUsageInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR,deserialize_VkVideoDecodeInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR,deserialize_VkVideoDecodeH264ProfileInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR,deserialize_VkVideoDecodeH264CapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR,deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR,deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR,deserialize_VkVideoDecodeH264PictureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR,deserialize_VkVideoDecodeH264DpbSlotInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR,deserialize_VkVideoDecodeH265ProfileInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR,deserialize_VkVideoDecodeH265CapabilitiesKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR,deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR,deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR,deserialize_VkVideoDecodeH265PictureInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR,deserialize_VkVideoDecodeH265DpbSlotInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR,deserialize_VkVideoSessionCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR,deserialize_VkVideoSessionParametersCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR,deserialize_VkVideoSessionParametersUpdateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR,deserialize_VkVideoBeginCodingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR,deserialize_VkVideoEndCodingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR,deserialize_VkVideoCodingControlInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV,deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV,deserialize_VkCommandBufferInheritanceViewportScissorInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT,deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT,deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT,deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT,deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX,deserialize_VkCuModuleCreateInfoNVX_pNext},
{VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX,deserialize_VkCuFunctionCreateInfoNVX_pNext},
{VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX,deserialize_VkCuLaunchInfoNVX_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT,deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT,deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT,deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT,deserialize_VkDescriptorAddressInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT,deserialize_VkDescriptorBufferBindingInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT,deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT,deserialize_VkDescriptorGetInfoEXT_pNext},
{VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,deserialize_VkBufferCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,deserialize_VkImageCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,deserialize_VkImageViewCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,deserialize_VkSamplerCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT_pNext},
{VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT,deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT,deserialize_VkPhysicalDeviceDrmPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR,deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR,deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR,deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV,deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV,deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV,deserialize_VkAccelerationStructureMotionInfoNV_pNext},
{VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV,deserialize_VkMemoryGetRemoteAddressInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT,deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3,deserialize_VkFormatProperties3_pNext},
{VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3,deserialize_VkFormatProperties3KHR_pNext},
{VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT,deserialize_VkDrmFormatModifierPropertiesList2EXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,deserialize_VkPipelineRenderingCreateInfo_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,deserialize_VkPipelineRenderingCreateInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_INFO,deserialize_VkRenderingInfo_pNext},
{VK_STRUCTURE_TYPE_RENDERING_INFO,deserialize_VkRenderingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,deserialize_VkRenderingAttachmentInfo_pNext},
{VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,deserialize_VkRenderingAttachmentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR_pNext},
{VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT,deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,deserialize_VkPhysicalDeviceDynamicRenderingFeatures_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,deserialize_VkCommandBufferInheritanceRenderingInfo_pNext},
{VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,deserialize_VkCommandBufferInheritanceRenderingInfoKHR_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD,deserialize_VkAttachmentSampleCountInfoAMD_pNext},
{VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD,deserialize_VkAttachmentSampleCountInfoNV_pNext},
{VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX,deserialize_VkMultiviewPerViewAttributesInfoNVX_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT,deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT,deserialize_VkImageViewMinLodCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT,deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT,deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV,deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT,deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT,deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT,deserialize_VkGraphicsPipelineLibraryCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE,deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE,deserialize_VkDescriptorSetBindingReferenceVALVE_pNext},
{VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE,deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT,deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT,deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT,deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT,deserialize_VkShaderModuleIdentifierEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT,deserialize_VkImageCompressionControlEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT,deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT,deserialize_VkImageCompressionPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT,deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR,deserialize_VkImageSubresource2KHR_pNext},
{VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR,deserialize_VkImageSubresource2EXT_pNext},
{VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR,deserialize_VkSubresourceLayout2KHR_pNext},
{VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR,deserialize_VkSubresourceLayout2EXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT,deserialize_VkRenderPassCreationControlEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT,deserialize_VkRenderPassCreationFeedbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT,deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT,deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT,deserialize_VkMicromapBuildInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT,deserialize_VkMicromapCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT,deserialize_VkMicromapVersionInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT,deserialize_VkCopyMicromapInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT,deserialize_VkCopyMicromapToMemoryInfoEXT_pNext},
{VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT,deserialize_VkCopyMemoryToMicromapInfoEXT_pNext},
{VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT,deserialize_VkMicromapBuildSizesInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT,deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT,deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT,deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT,deserialize_VkPipelinePropertiesIdentifierEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT,deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD,deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD_pNext},
{VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT,deserialize_VkExternalMemoryAcquireUnmodifiedEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT,deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT,deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT,deserialize_VkPipelineRobustnessCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT,deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM,deserialize_VkImageViewSampleWeightCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM,deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM,deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM,deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM,deserialize_VkTilePropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC,deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC_pNext},
{VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC,deserialize_VkAmigoProfilingSubmitInfoSEC_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT,deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT,deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT,deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT,deserialize_VkDeviceAddressBindingCallbackDataEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV,deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV,deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV,deserialize_VkOpticalFlowImageFormatInfoNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV,deserialize_VkOpticalFlowImageFormatPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV,deserialize_VkOpticalFlowSessionCreateInfoNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV,deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV_pNext},
{VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV,deserialize_VkOpticalFlowExecuteInfoNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT,deserialize_VkPhysicalDeviceFaultFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT,deserialize_VkDeviceFaultCountsEXT_pNext},
{VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT,deserialize_VkDeviceFaultInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT,deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT,deserialize_VkDepthBiasInfoEXT_pNext},
{VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT,deserialize_VkDepthBiasRepresentationInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM,deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM,deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM_pNext},
{VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT,deserialize_VkFrameBoundaryEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT,deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT,deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT,deserialize_VkSurfacePresentModeEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT,deserialize_VkSurfacePresentScalingCapabilitiesEXT_pNext},
{VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT,deserialize_VkSurfacePresentModeCompatibilityEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT,deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT,deserialize_VkSwapchainPresentFenceInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT,deserialize_VkSwapchainPresentModesCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT,deserialize_VkSwapchainPresentModeInfoEXT_pNext},
{VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT,deserialize_VkSwapchainPresentScalingCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT,deserialize_VkReleaseSwapchainImagesInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT,deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV,deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV,deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV_pNext},
{VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG,deserialize_VkDirectDriverLoadingInfoLUNARG_pNext},
{VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG,deserialize_VkDirectDriverLoadingListLUNARG_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM,deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR,deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR,deserialize_VkDeviceImageSubresourceInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM,deserialize_VkPhysicalDeviceShaderCorePropertiesARM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM,deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM,deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV,deserialize_VkQueryLowLatencySupportNV_pNext},
{VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR,deserialize_VkMemoryMapInfoKHR_pNext},
{VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR,deserialize_VkMemoryUnmapInfoKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT,deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT,deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT,deserialize_VkShaderCreateInfoEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT,deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT,deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR,deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR_pNext},
{VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR,deserialize_VkCooperativeMatrixPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR,deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM,deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM,deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM,deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM,deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM,deserialize_VkSamplerCubicWeightsCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM,deserialize_VkBlitImageCubicWeightsInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM,deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM,deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM_pNext},
{VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM,deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV,deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV_pNext},
{VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT,deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT_pNext},
};

void* deserialize_pNext(json &name){
void* result;
if (name.contains("null")){
    result=NULL;
    return result;
}

return deserialize_pNext_dispatch[(VkStructureType)name["members"]["sType"]["value"]](name);
}


    json serialize_VkBaseOutStructure(VkBaseOutStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bRMCyHm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bmnQyVL=json({});
    
        if (name.pNext==NULL){
            return_bmnQyVL["null"]=true;
            return return_bmnQyVL;
        }
        return_bmnQyVL=[&]() {
    json return_tiehufe=json({});
    return serialize_VkBaseOutStructure(*name.pNext);}();
return return_bmnQyVL;}();
return result;}

    VkBaseOutStructure deserialize_VkBaseOutStructure(json &name){
        auto result=VkBaseOutStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    result.pNext=(VkBaseOutStructure*)malloc(sizeof(VkBaseOutStructure));
[&]() {
*(result.pNext)=deserialize_VkBaseOutStructure(name["members"]["pNext"]);}();
}();
return result;}

    json serialize_VkBaseInStructure(VkBaseInStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bRMCyHm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_onuscma=json({});
    
        if (name.pNext==NULL){
            return_onuscma["null"]=true;
            return return_onuscma;
        }
        return_onuscma=[&]() {
    json return_OFJvovE=json({});
    return serialize_VkBaseInStructure(*name.pNext);}();
return return_onuscma;}();
return result;}

    VkBaseInStructure deserialize_VkBaseInStructure(json &name){
        auto result=VkBaseInStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
VkBaseInStructure* temp_mEdSUBy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mEdSUBy=NULL;
        return;
        }
    temp_mEdSUBy=(VkBaseInStructure*)malloc(sizeof(VkBaseInStructure));
[&]() {
*(temp_mEdSUBy)=deserialize_VkBaseInStructure(name["members"]["pNext"]);}();
}();result.pNext=temp_mEdSUBy;}();
return result;}

    json serialize_VkOffset2D(VkOffset2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_kwykwEw=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_jtdAsBS=json({});
    return serialize_int32_t(name.y);}();
return result;}

    VkOffset2D deserialize_VkOffset2D(json &name){
        auto result=VkOffset2D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
return result;}

    json serialize_VkOffset3D(VkOffset3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_kwykwEw=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_vwWtTpE=json({});
    return serialize_int32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_WgahTts=json({});
    return serialize_int32_t(name.z);}();
return result;}

    VkOffset3D deserialize_VkOffset3D(json &name){
        auto result=VkOffset3D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_int32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkExtent2D(VkExtent2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_LnGpZiM=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_jYkrNWp=json({});
    return serialize_uint32_t(name.height);}();
return result;}

    VkExtent2D deserialize_VkExtent2D(json &name){
        auto result=VkExtent2D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
return result;}

    json serialize_VkExtent3D(VkExtent3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_LnGpZiM=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_yucQYTA=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_WTPzuZb=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkExtent3D deserialize_VkExtent3D(json &name){
        auto result=VkExtent3D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkViewport(VkViewport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_erCTXjC=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_aFfybSN=json({});
    return serialize_float(name.y);}();
result["members"]["width"]=[&]() {
    json return_ySRXlSj=json({});
    return serialize_float(name.width);}();
result["members"]["height"]=[&]() {
    json return_gCZmhFV=json({});
    return serialize_float(name.height);}();
result["members"]["minDepth"]=[&]() {
    json return_QnAbjHh=json({});
    return serialize_float(name.minDepth);}();
result["members"]["maxDepth"]=[&]() {
    json return_zUDPbih=json({});
    return serialize_float(name.maxDepth);}();
return result;}

    VkViewport deserialize_VkViewport(json &name){
        auto result=VkViewport();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
[&]() {
result.width=deserialize_float(name["members"]["width"]);}();
[&]() {
result.height=deserialize_float(name["members"]["height"]);}();
[&]() {
result.minDepth=deserialize_float(name["members"]["minDepth"]);}();
[&]() {
result.maxDepth=deserialize_float(name["members"]["maxDepth"]);}();
return result;}

    json serialize_VkRect2D(VkRect2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_HwMemJz=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_mNStxyS=json({});
    return serialize_VkExtent2D(name.extent);}();
return result;}

    VkRect2D deserialize_VkRect2D(json &name){
        auto result=VkRect2D();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
return result;}

    json serialize_VkClearRect(VkClearRect name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rect"]=[&]() {
    json return_RusTmzW=json({});
    return serialize_VkRect2D(name.rect);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_NaJIXxm=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_WFPTDln=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkClearRect deserialize_VkClearRect(json &name){
        auto result=VkClearRect();
    
[&]() {
result.rect=deserialize_VkRect2D(name["members"]["rect"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkComponentMapping(VkComponentMapping name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["r"]=[&]() {
    json return_yFaznCP=json({});
    return serialize_VkComponentSwizzle(name.r);}();
result["members"]["g"]=[&]() {
    json return_STPylUj=json({});
    return serialize_VkComponentSwizzle(name.g);}();
result["members"]["b"]=[&]() {
    json return_jdBCLaQ=json({});
    return serialize_VkComponentSwizzle(name.b);}();
result["members"]["a"]=[&]() {
    json return_rDhsqHn=json({});
    return serialize_VkComponentSwizzle(name.a);}();
return result;}

    VkComponentMapping deserialize_VkComponentMapping(json &name){
        auto result=VkComponentMapping();
    
[&]() {
result.r=deserialize_VkComponentSwizzle(name["members"]["r"]);}();
[&]() {
result.g=deserialize_VkComponentSwizzle(name["members"]["g"]);}();
[&]() {
result.b=deserialize_VkComponentSwizzle(name["members"]["b"]);}();
[&]() {
result.a=deserialize_VkComponentSwizzle(name["members"]["a"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties(VkPhysicalDeviceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["apiVersion"]=[&]() {
    json return_wvVYSFG=json({});
    return serialize_uint32_t(name.apiVersion);}();
result["members"]["driverVersion"]=[&]() {
    json return_JjLbUbx=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_NxvpBmf=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_ylFFGTz=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["deviceType"]=[&]() {
    json return_sXSnzml=json({});
    return serialize_VkPhysicalDeviceType(name.deviceType);}();
result["members"]["deviceName"]=[&]() {
    json return_bDDVWZI=json({});
    
        return_bDDVWZI["members"]={};
        for(int bDDVWZI=0; bDDVWZI < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; bDDVWZI++){
            json temp;
            temp=[&]() {
    json return_WEYjfIb=json({});
    return serialize_char(name.deviceName[bDDVWZI]);}();
            return_bDDVWZI["members"].push_back(temp);
        }
        return return_bDDVWZI;
        }();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_zqHmaVu=json({});
    
        return_zqHmaVu["members"]={};
        for(int zqHmaVu=0; zqHmaVu < VK_UUID_SIZE; zqHmaVu++){
            json temp;
            temp=[&]() {
    json return_PMdjiez=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[zqHmaVu]);}();
            return_zqHmaVu["members"].push_back(temp);
        }
        return return_zqHmaVu;
        }();
result["members"]["limits"]=[&]() {
    json return_ojLrRnW=json({});
    return serialize_VkPhysicalDeviceLimits(name.limits);}();
result["members"]["sparseProperties"]=[&]() {
    json return_DpQLLWK=json({});
    return serialize_VkPhysicalDeviceSparseProperties(name.sparseProperties);}();
return result;}

    VkPhysicalDeviceProperties deserialize_VkPhysicalDeviceProperties(json &name){
        auto result=VkPhysicalDeviceProperties();
    
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.deviceType=deserialize_VkPhysicalDeviceType(name["members"]["deviceType"]);}();
[&]() {

        for (int kJACqbi=0; kJACqbi < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; kJACqbi++){
            [&]() {
result.deviceName[kJACqbi]=deserialize_char(name["members"]["deviceName"]["members"][kJACqbi]);}();;
        }
        }();
[&]() {

        for (int wbUuLSS=0; wbUuLSS < VK_UUID_SIZE; wbUuLSS++){
            [&]() {
result.pipelineCacheUUID[wbUuLSS]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][wbUuLSS]);}();;
        }
        }();
[&]() {
result.limits=deserialize_VkPhysicalDeviceLimits(name["members"]["limits"]);}();
[&]() {
result.sparseProperties=deserialize_VkPhysicalDeviceSparseProperties(name["members"]["sparseProperties"]);}();
return result;}

    json serialize_VkExtensionProperties(VkExtensionProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["extensionName"]=[&]() {
    json return_BcUNloF=json({});
    
        return_BcUNloF["members"]={};
        for(int BcUNloF=0; BcUNloF < VK_MAX_EXTENSION_NAME_SIZE; BcUNloF++){
            json temp;
            temp=[&]() {
    json return_wNtoNjw=json({});
    return serialize_char(name.extensionName[BcUNloF]);}();
            return_BcUNloF["members"].push_back(temp);
        }
        return return_BcUNloF;
        }();
result["members"]["specVersion"]=[&]() {
    json return_bZtaLFk=json({});
    return serialize_uint32_t(name.specVersion);}();
return result;}

    VkExtensionProperties deserialize_VkExtensionProperties(json &name){
        auto result=VkExtensionProperties();
    
[&]() {

        for (int AFGfamJ=0; AFGfamJ < VK_MAX_EXTENSION_NAME_SIZE; AFGfamJ++){
            [&]() {
result.extensionName[AFGfamJ]=deserialize_char(name["members"]["extensionName"]["members"][AFGfamJ]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
return result;}

    json serialize_VkLayerProperties(VkLayerProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["layerName"]=[&]() {
    json return_bwLBMcT=json({});
    
        return_bwLBMcT["members"]={};
        for(int bwLBMcT=0; bwLBMcT < VK_MAX_EXTENSION_NAME_SIZE; bwLBMcT++){
            json temp;
            temp=[&]() {
    json return_okKbVJk=json({});
    return serialize_char(name.layerName[bwLBMcT]);}();
            return_bwLBMcT["members"].push_back(temp);
        }
        return return_bwLBMcT;
        }();
result["members"]["specVersion"]=[&]() {
    json return_vRMGKtl=json({});
    return serialize_uint32_t(name.specVersion);}();
result["members"]["implementationVersion"]=[&]() {
    json return_bEWXshp=json({});
    return serialize_uint32_t(name.implementationVersion);}();
result["members"]["description"]=[&]() {
    json return_bOoFcCw=json({});
    
        return_bOoFcCw["members"]={};
        for(int bOoFcCw=0; bOoFcCw < VK_MAX_DESCRIPTION_SIZE; bOoFcCw++){
            json temp;
            temp=[&]() {
    json return_rWqdJoT=json({});
    return serialize_char(name.description[bOoFcCw]);}();
            return_bOoFcCw["members"].push_back(temp);
        }
        return return_bOoFcCw;
        }();
return result;}

    VkLayerProperties deserialize_VkLayerProperties(json &name){
        auto result=VkLayerProperties();
    
[&]() {

        for (int wTeILMA=0; wTeILMA < VK_MAX_EXTENSION_NAME_SIZE; wTeILMA++){
            [&]() {
result.layerName[wTeILMA]=deserialize_char(name["members"]["layerName"]["members"][wTeILMA]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
[&]() {
result.implementationVersion=deserialize_uint32_t(name["members"]["implementationVersion"]);}();
[&]() {

        for (int OhnOZuu=0; OhnOZuu < VK_MAX_DESCRIPTION_SIZE; OhnOZuu++){
            [&]() {
result.description[OhnOZuu]=deserialize_char(name["members"]["description"]["members"][OhnOZuu]);}();;
        }
        }();
return result;}

    json serialize_VkApplicationInfo(VkApplicationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RdGORiv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pFjYjfs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pApplicationName"]=[&]() {
    json return_nmjImiS=json({});
    
        if (name.pApplicationName==NULL){
            return_nmjImiS["null"]=true;
            return return_nmjImiS;
        }
        
        return_nmjImiS["members"]={};
        for(int nmjImiS=0; nmjImiS < strlen(name.pApplicationName)+1; nmjImiS++){
            json temp;
            temp=[&]() {
    json return_dTvepqH=json({});
    return serialize_char(name.pApplicationName[nmjImiS]);}();
            return_nmjImiS["members"].push_back(temp);
        }
        return return_nmjImiS;
        }();
result["members"]["applicationVersion"]=[&]() {
    json return_GhgaeUW=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["pEngineName"]=[&]() {
    json return_cUtHalo=json({});
    
        if (name.pEngineName==NULL){
            return_cUtHalo["null"]=true;
            return return_cUtHalo;
        }
        
        return_cUtHalo["members"]={};
        for(int cUtHalo=0; cUtHalo < strlen(name.pEngineName)+1; cUtHalo++){
            json temp;
            temp=[&]() {
    json return_CxLUBrE=json({});
    return serialize_char(name.pEngineName[cUtHalo]);}();
            return_cUtHalo["members"].push_back(temp);
        }
        return return_cUtHalo;
        }();
result["members"]["engineVersion"]=[&]() {
    json return_yndjpwC=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_XVboKyY=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkApplicationInfo deserialize_VkApplicationInfo(json &name){
        auto result=VkApplicationInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qSwiNsk;[&]() {
temp_qSwiNsk=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qSwiNsk;}();
[&]() {
char* temp_ETNfrMs;[&]() {

        if (name["members"]["pApplicationName"].contains("null")){
        temp_ETNfrMs=NULL;
        return;
        }
    temp_ETNfrMs=(char*)malloc(name["members"]["pApplicationName"]["members"].size()*sizeof(char));
        for (int eCRqvBP=0; eCRqvBP < name["members"]["pApplicationName"]["members"].size(); eCRqvBP++){
            [&]() {
temp_ETNfrMs[eCRqvBP]=deserialize_char(name["members"]["pApplicationName"]["members"][eCRqvBP]);}();;
        }
        }();result.pApplicationName=temp_ETNfrMs;}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
char* temp_SpyExSg;[&]() {

        if (name["members"]["pEngineName"].contains("null")){
        temp_SpyExSg=NULL;
        return;
        }
    temp_SpyExSg=(char*)malloc(name["members"]["pEngineName"]["members"].size()*sizeof(char));
        for (int KzRAhvZ=0; KzRAhvZ < name["members"]["pEngineName"]["members"].size(); KzRAhvZ++){
            [&]() {
temp_SpyExSg[KzRAhvZ]=deserialize_char(name["members"]["pEngineName"]["members"][KzRAhvZ]);}();;
        }
        }();result.pEngineName=temp_SpyExSg;}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkAllocationCallbacks(VkAllocationCallbacks name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pUserData"]=[&]() {
    json return_KstpEWr=json({});
    
        if (name.pUserData==NULL){
            return_KstpEWr["null"]=true;
            return return_KstpEWr;
        }
        return_KstpEWr=[&]() {
    json return_TXmyGac=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_TXmyGac["null"]=true;
            return return_TXmyGac;
        }
        
        return_TXmyGac["members"]={};
        for(int TXmyGac=0; TXmyGac < strlen(((char*)(name.pUserData)))+1; TXmyGac++){
            json temp;
            temp=[&]() {
    json return_cjbxYZw=json({});
    return serialize_char(((char*)(name.pUserData))[TXmyGac]);}();
            return_TXmyGac["members"].push_back(temp);
        }
        return return_TXmyGac;
        }();return return_KstpEWr;}();
result["members"]["pfnAllocation"]=[&]() {
    json return_XkKMmFd=json({});
    return serialize_PFN_vkAllocationFunction(name.pfnAllocation);}();
result["members"]["pfnReallocation"]=[&]() {
    json return_uSJLoXB=json({});
    return serialize_PFN_vkReallocationFunction(name.pfnReallocation);}();
result["members"]["pfnFree"]=[&]() {
    json return_irrjbgG=json({});
    return serialize_PFN_vkFreeFunction(name.pfnFree);}();
result["members"]["pfnInternalAllocation"]=[&]() {
    json return_FLFlCjp=json({});
    return serialize_PFN_vkInternalAllocationNotification(name.pfnInternalAllocation);}();
result["members"]["pfnInternalFree"]=[&]() {
    json return_UlpDDgM=json({});
    return serialize_PFN_vkInternalFreeNotification(name.pfnInternalFree);}();
return result;}
typedef struct {
void* pUserData;
uintptr_t PFN_vkAllocationFunction_id;
uintptr_t PFN_vkReallocationFunction_id;
uintptr_t PFN_vkFreeFunction_id;
uintptr_t PFN_vkInternalAllocationNotification_id;
uintptr_t PFN_vkInternalFreeNotification_id;
} VkAllocationCallbacks_struct;

    VkAllocationCallbacks deserialize_VkAllocationCallbacks(json &name){
        auto result=VkAllocationCallbacks();
    
auto _struct = new VkAllocationCallbacks_struct;
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp_NSPrZtv;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp_NSPrZtv=NULL;
        return;
        }
    temp_NSPrZtv=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int fIjYIKZ=0; fIjYIKZ < name["members"]["pUserData"]["members"].size(); fIjYIKZ++){
            [&]() {
temp_NSPrZtv[fIjYIKZ]=deserialize_char(name["members"]["pUserData"]["members"][fIjYIKZ]);}();;
        }
        }();result.pUserData=(void*)temp_NSPrZtv;
}();
[&]() {

        #ifndef CLIENT
        result.pfnAllocation=deserialize_PFN_vkAllocationFunction(name["members"]["pfnAllocation"]);
        #endif
        }();
_struct->PFN_vkAllocationFunction_id=name["members"]["pfnAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnReallocation=deserialize_PFN_vkReallocationFunction(name["members"]["pfnReallocation"]);
        #endif
        }();
_struct->PFN_vkReallocationFunction_id=name["members"]["pfnReallocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnFree=deserialize_PFN_vkFreeFunction(name["members"]["pfnFree"]);
        #endif
        }();
_struct->PFN_vkFreeFunction_id=name["members"]["pfnFree"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalAllocation=deserialize_PFN_vkInternalAllocationNotification(name["members"]["pfnInternalAllocation"]);
        #endif
        }();
_struct->PFN_vkInternalAllocationNotification_id=name["members"]["pfnInternalAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalFree=deserialize_PFN_vkInternalFreeNotification(name["members"]["pfnInternalFree"]);
        #endif
        }();
_struct->PFN_vkInternalFreeNotification_id=name["members"]["pfnInternalFree"]["id"];
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceQueueCreateInfo(VkDeviceQueueCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OlbDGau=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pFjYjfs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_vBvmwCz=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_KpKRCDG=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueCount"]=[&]() {
    json return_wEWfxOg=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["pQueuePriorities"]=[&]() {
    json return_AtWLqdX=json({});
    
        if (name.pQueuePriorities==NULL){
            return_AtWLqdX["null"]=true;
            return return_AtWLqdX;
        }
        
        return_AtWLqdX["members"]={};
        for(int AtWLqdX=0; AtWLqdX < name.queueCount; AtWLqdX++){
            json temp;
            temp=[&]() {
    json return_mIAcBjr=json({});
    return serialize_float(name.pQueuePriorities[AtWLqdX]);}();
            return_AtWLqdX["members"].push_back(temp);
        }
        return return_AtWLqdX;
        }();
return result;}

    VkDeviceQueueCreateInfo deserialize_VkDeviceQueueCreateInfo(json &name){
        auto result=VkDeviceQueueCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qSwiNsk;[&]() {
temp_qSwiNsk=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qSwiNsk;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
float* temp_KLVWsZr;[&]() {

        if (name["members"]["pQueuePriorities"].contains("null")){
        temp_KLVWsZr=NULL;
        return;
        }
    temp_KLVWsZr=(float*)malloc(result.queueCount*sizeof(float));
        for (int CPqCQTD=0; CPqCQTD < result.queueCount; CPqCQTD++){
            [&]() {
temp_KLVWsZr[CPqCQTD]=deserialize_float(name["members"]["pQueuePriorities"]["members"][CPqCQTD]);}();;
        }
        }();result.pQueuePriorities=temp_KLVWsZr;}();
return result;}

    json serialize_VkDeviceCreateInfo(VkDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yytgBRN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pFjYjfs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_lAitDSq=json({});
    return serialize_VkDeviceCreateFlags(name.flags);}();
result["members"]["queueCreateInfoCount"]=[&]() {
    json return_leRsvZW=json({});
    return serialize_uint32_t(name.queueCreateInfoCount);}();
result["members"]["pQueueCreateInfos"]=[&]() {
    json return_GuWBKLm=json({});
    
        if (name.pQueueCreateInfos==NULL){
            return_GuWBKLm["null"]=true;
            return return_GuWBKLm;
        }
        
        return_GuWBKLm["members"]={};
        for(int GuWBKLm=0; GuWBKLm < name.queueCreateInfoCount; GuWBKLm++){
            json temp;
            temp=[&]() {
    json return_sPPsgPE=json({});
    return serialize_VkDeviceQueueCreateInfo(name.pQueueCreateInfos[GuWBKLm]);}();
            return_GuWBKLm["members"].push_back(temp);
        }
        return return_GuWBKLm;
        }();
result["members"]["enabledLayerCount"]=[&]() {
    json return_aQGBkAK=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_PFraHBo=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_PFraHBo["null"]=true;
            return return_PFraHBo;
        }
        
        return_PFraHBo["members"]={};
        for(int PFraHBo=0; PFraHBo < name.enabledLayerCount; PFraHBo++){
            json temp;
            temp=[&]() {
    json return_yObkTNc=json({});
    
        if (name.ppEnabledLayerNames[PFraHBo]==NULL){
            return_yObkTNc["null"]=true;
            return return_yObkTNc;
        }
        
        return_yObkTNc["members"]={};
        for(int yObkTNc=0; yObkTNc < strlen(name.ppEnabledLayerNames[PFraHBo])+1; yObkTNc++){
            json temp;
            temp=[&]() {
    json return_SUAPsMd=json({});
    return serialize_char(name.ppEnabledLayerNames[PFraHBo][yObkTNc]);}();
            return_yObkTNc["members"].push_back(temp);
        }
        return return_yObkTNc;
        }();
            return_PFraHBo["members"].push_back(temp);
        }
        return return_PFraHBo;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_DheipYp=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_vgCZpnf=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_vgCZpnf["null"]=true;
            return return_vgCZpnf;
        }
        
        return_vgCZpnf["members"]={};
        for(int vgCZpnf=0; vgCZpnf < name.enabledExtensionCount; vgCZpnf++){
            json temp;
            temp=[&]() {
    json return_EpUdDRi=json({});
    
        if (name.ppEnabledExtensionNames[vgCZpnf]==NULL){
            return_EpUdDRi["null"]=true;
            return return_EpUdDRi;
        }
        
        return_EpUdDRi["members"]={};
        for(int EpUdDRi=0; EpUdDRi < strlen(name.ppEnabledExtensionNames[vgCZpnf])+1; EpUdDRi++){
            json temp;
            temp=[&]() {
    json return_obllrtX=json({});
    return serialize_char(name.ppEnabledExtensionNames[vgCZpnf][EpUdDRi]);}();
            return_EpUdDRi["members"].push_back(temp);
        }
        return return_EpUdDRi;
        }();
            return_vgCZpnf["members"].push_back(temp);
        }
        return return_vgCZpnf;
        }();
result["members"]["pEnabledFeatures"]=[&]() {
    json return_hAsadZb=json({});
    
        if (name.pEnabledFeatures==NULL){
            return_hAsadZb["null"]=true;
            return return_hAsadZb;
        }
        return_hAsadZb=[&]() {
    json return_yguxmCV=json({});
    return serialize_VkPhysicalDeviceFeatures(*name.pEnabledFeatures);}();
return return_hAsadZb;}();
return result;}

    VkDeviceCreateInfo deserialize_VkDeviceCreateInfo(json &name){
        auto result=VkDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qSwiNsk;[&]() {
temp_qSwiNsk=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qSwiNsk;}();
[&]() {
result.flags=deserialize_VkDeviceCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueCreateInfoCount=deserialize_uint32_t(name["members"]["queueCreateInfoCount"]);}();
[&]() {
VkDeviceQueueCreateInfo* temp_FJajTsI;[&]() {

        if (name["members"]["pQueueCreateInfos"].contains("null")){
        temp_FJajTsI=NULL;
        return;
        }
    temp_FJajTsI=(VkDeviceQueueCreateInfo*)malloc(result.queueCreateInfoCount*sizeof(VkDeviceQueueCreateInfo));
        for (int Ywvxwam=0; Ywvxwam < result.queueCreateInfoCount; Ywvxwam++){
            [&]() {
temp_FJajTsI[Ywvxwam]=deserialize_VkDeviceQueueCreateInfo(name["members"]["pQueueCreateInfos"]["members"][Ywvxwam]);}();;
        }
        }();result.pQueueCreateInfos=temp_FJajTsI;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_ACpNbJz;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_ACpNbJz=NULL;
        return;
        }
    temp_ACpNbJz=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int AHJkUVJ=0; AHJkUVJ < result.enabledLayerCount; AHJkUVJ++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ].contains("null")){
        temp_ACpNbJz[AHJkUVJ]=NULL;
        return;
        }
    temp_ACpNbJz[AHJkUVJ]=(char*)malloc(name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ]["members"].size()*sizeof(char));
        for (int ITcGrMo=0; ITcGrMo < name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ]["members"].size(); ITcGrMo++){
            [&]() {
temp_ACpNbJz[AHJkUVJ][ITcGrMo]=deserialize_char(name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ]["members"][ITcGrMo]);}();;
        }
        }();;
        }
        }();result.ppEnabledLayerNames=temp_ACpNbJz;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_fObibOc;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_fObibOc=NULL;
        return;
        }
    temp_fObibOc=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int xSgnDqI=0; xSgnDqI < result.enabledExtensionCount; xSgnDqI++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][xSgnDqI].contains("null")){
        temp_fObibOc[xSgnDqI]=NULL;
        return;
        }
    temp_fObibOc[xSgnDqI]=(char*)malloc(name["members"]["ppEnabledExtensionNames"]["members"][xSgnDqI]["members"].size()*sizeof(char));
        for (int qxsXAXd=0; qxsXAXd < name["members"]["ppEnabledExtensionNames"]["members"][xSgnDqI]["members"].size(); qxsXAXd++){
            [&]() {
temp_fObibOc[xSgnDqI][qxsXAXd]=deserialize_char(name["members"]["ppEnabledExtensionNames"]["members"][xSgnDqI]["members"][qxsXAXd]);}();;
        }
        }();;
        }
        }();result.ppEnabledExtensionNames=temp_fObibOc;}();
[&]() {
VkPhysicalDeviceFeatures* temp_FjNMrqd;[&]() {

        if (name["members"]["pEnabledFeatures"].contains("null")){
        temp_FjNMrqd=NULL;
        return;
        }
    temp_FjNMrqd=(VkPhysicalDeviceFeatures*)malloc(sizeof(VkPhysicalDeviceFeatures));
[&]() {
*(temp_FjNMrqd)=deserialize_VkPhysicalDeviceFeatures(name["members"]["pEnabledFeatures"]);}();
}();result.pEnabledFeatures=temp_FjNMrqd;}();
return result;}

    json serialize_VkInstanceCreateInfo(VkInstanceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MMNzsuU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pFjYjfs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_xiGaBMD=json({});
    return serialize_VkInstanceCreateFlags(name.flags);}();
result["members"]["pApplicationInfo"]=[&]() {
    json return_khMBYZp=json({});
    
        if (name.pApplicationInfo==NULL){
            return_khMBYZp["null"]=true;
            return return_khMBYZp;
        }
        return_khMBYZp=[&]() {
    json return_WZwlTej=json({});
    return serialize_VkApplicationInfo(*name.pApplicationInfo);}();
return return_khMBYZp;}();
result["members"]["enabledLayerCount"]=[&]() {
    json return_aQGBkAK=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_PFraHBo=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_PFraHBo["null"]=true;
            return return_PFraHBo;
        }
        
        return_PFraHBo["members"]={};
        for(int PFraHBo=0; PFraHBo < name.enabledLayerCount; PFraHBo++){
            json temp;
            temp=[&]() {
    json return_yObkTNc=json({});
    
        if (name.ppEnabledLayerNames[PFraHBo]==NULL){
            return_yObkTNc["null"]=true;
            return return_yObkTNc;
        }
        
        return_yObkTNc["members"]={};
        for(int yObkTNc=0; yObkTNc < strlen(name.ppEnabledLayerNames[PFraHBo])+1; yObkTNc++){
            json temp;
            temp=[&]() {
    json return_SUAPsMd=json({});
    return serialize_char(name.ppEnabledLayerNames[PFraHBo][yObkTNc]);}();
            return_yObkTNc["members"].push_back(temp);
        }
        return return_yObkTNc;
        }();
            return_PFraHBo["members"].push_back(temp);
        }
        return return_PFraHBo;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_DheipYp=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_JUvPAze=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_JUvPAze["null"]=true;
            return return_JUvPAze;
        }
        
        return_JUvPAze["members"]={};
        for(int JUvPAze=0; JUvPAze < name.enabledExtensionCount; JUvPAze++){
            json temp;
            temp=[&]() {
    json return_VnOxExG=json({});
    
        if (name.ppEnabledExtensionNames[JUvPAze]==NULL){
            return_VnOxExG["null"]=true;
            return return_VnOxExG;
        }
        
        return_VnOxExG["members"]={};
        for(int VnOxExG=0; VnOxExG < strlen(name.ppEnabledExtensionNames[JUvPAze])+1; VnOxExG++){
            json temp;
            temp=[&]() {
    json return_omtHRRr=json({});
    return serialize_char(name.ppEnabledExtensionNames[JUvPAze][VnOxExG]);}();
            return_VnOxExG["members"].push_back(temp);
        }
        return return_VnOxExG;
        }();
            return_JUvPAze["members"].push_back(temp);
        }
        return return_JUvPAze;
        }();
return result;}

    VkInstanceCreateInfo deserialize_VkInstanceCreateInfo(json &name){
        auto result=VkInstanceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qSwiNsk;[&]() {
temp_qSwiNsk=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qSwiNsk;}();
[&]() {
result.flags=deserialize_VkInstanceCreateFlags(name["members"]["flags"]);}();
[&]() {
VkApplicationInfo* temp_MWxHfnM;[&]() {

        if (name["members"]["pApplicationInfo"].contains("null")){
        temp_MWxHfnM=NULL;
        return;
        }
    temp_MWxHfnM=(VkApplicationInfo*)malloc(sizeof(VkApplicationInfo));
[&]() {
*(temp_MWxHfnM)=deserialize_VkApplicationInfo(name["members"]["pApplicationInfo"]);}();
}();result.pApplicationInfo=temp_MWxHfnM;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_ACpNbJz;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_ACpNbJz=NULL;
        return;
        }
    temp_ACpNbJz=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int AHJkUVJ=0; AHJkUVJ < result.enabledLayerCount; AHJkUVJ++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ].contains("null")){
        temp_ACpNbJz[AHJkUVJ]=NULL;
        return;
        }
    temp_ACpNbJz[AHJkUVJ]=(char*)malloc(name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ]["members"].size()*sizeof(char));
        for (int ITcGrMo=0; ITcGrMo < name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ]["members"].size(); ITcGrMo++){
            [&]() {
temp_ACpNbJz[AHJkUVJ][ITcGrMo]=deserialize_char(name["members"]["ppEnabledLayerNames"]["members"][AHJkUVJ]["members"][ITcGrMo]);}();;
        }
        }();;
        }
        }();result.ppEnabledLayerNames=temp_ACpNbJz;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_FnmpErD;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_FnmpErD=NULL;
        return;
        }
    temp_FnmpErD=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int xtkTyyU=0; xtkTyyU < result.enabledExtensionCount; xtkTyyU++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][xtkTyyU].contains("null")){
        temp_FnmpErD[xtkTyyU]=NULL;
        return;
        }
    temp_FnmpErD[xtkTyyU]=(char*)malloc(name["members"]["ppEnabledExtensionNames"]["members"][xtkTyyU]["members"].size()*sizeof(char));
        for (int lnVvKtp=0; lnVvKtp < name["members"]["ppEnabledExtensionNames"]["members"][xtkTyyU]["members"].size(); lnVvKtp++){
            [&]() {
temp_FnmpErD[xtkTyyU][lnVvKtp]=deserialize_char(name["members"]["ppEnabledExtensionNames"]["members"][xtkTyyU]["members"][lnVvKtp]);}();;
        }
        }();;
        }
        }();result.ppEnabledExtensionNames=temp_FnmpErD;}();
return result;}

    json serialize_VkQueueFamilyProperties(VkQueueFamilyProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["queueFlags"]=[&]() {
    json return_cZRvbqE=json({});
    return serialize_VkQueueFlags(name.queueFlags);}();
result["members"]["queueCount"]=[&]() {
    json return_CpvBPVk=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["timestampValidBits"]=[&]() {
    json return_xEPkIsv=json({});
    return serialize_uint32_t(name.timestampValidBits);}();
result["members"]["minImageTransferGranularity"]=[&]() {
    json return_uVWvUCo=json({});
    return serialize_VkExtent3D(name.minImageTransferGranularity);}();
return result;}

    VkQueueFamilyProperties deserialize_VkQueueFamilyProperties(json &name){
        auto result=VkQueueFamilyProperties();
    
[&]() {
result.queueFlags=deserialize_VkQueueFlags(name["members"]["queueFlags"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
result.timestampValidBits=deserialize_uint32_t(name["members"]["timestampValidBits"]);}();
[&]() {
result.minImageTransferGranularity=deserialize_VkExtent3D(name["members"]["minImageTransferGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties(VkPhysicalDeviceMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["memoryTypeCount"]=[&]() {
    json return_SbXZGTp=json({});
    return serialize_uint32_t(name.memoryTypeCount);}();
result["members"]["memoryTypes"]=[&]() {
    json return_OFOhrlH=json({});
    
        return_OFOhrlH["members"]={};
        for(int OFOhrlH=0; OFOhrlH < VK_MAX_MEMORY_TYPES; OFOhrlH++){
            json temp;
            temp=[&]() {
    json return_rlSpTsI=json({});
    return serialize_VkMemoryType(name.memoryTypes[OFOhrlH]);}();
            return_OFOhrlH["members"].push_back(temp);
        }
        return return_OFOhrlH;
        }();
result["members"]["memoryHeapCount"]=[&]() {
    json return_qAdegsO=json({});
    return serialize_uint32_t(name.memoryHeapCount);}();
result["members"]["memoryHeaps"]=[&]() {
    json return_TeVJLkF=json({});
    
        return_TeVJLkF["members"]={};
        for(int TeVJLkF=0; TeVJLkF < VK_MAX_MEMORY_HEAPS; TeVJLkF++){
            json temp;
            temp=[&]() {
    json return_SUfScfp=json({});
    return serialize_VkMemoryHeap(name.memoryHeaps[TeVJLkF]);}();
            return_TeVJLkF["members"].push_back(temp);
        }
        return return_TeVJLkF;
        }();
return result;}

    VkPhysicalDeviceMemoryProperties deserialize_VkPhysicalDeviceMemoryProperties(json &name){
        auto result=VkPhysicalDeviceMemoryProperties();
    
[&]() {
result.memoryTypeCount=deserialize_uint32_t(name["members"]["memoryTypeCount"]);}();
[&]() {

        for (int yJhEEFV=0; yJhEEFV < VK_MAX_MEMORY_TYPES; yJhEEFV++){
            [&]() {
result.memoryTypes[yJhEEFV]=deserialize_VkMemoryType(name["members"]["memoryTypes"]["members"][yJhEEFV]);}();;
        }
        }();
[&]() {
result.memoryHeapCount=deserialize_uint32_t(name["members"]["memoryHeapCount"]);}();
[&]() {

        for (int OeDqhMZ=0; OeDqhMZ < VK_MAX_MEMORY_HEAPS; OeDqhMZ++){
            [&]() {
result.memoryHeaps[OeDqhMZ]=deserialize_VkMemoryHeap(name["members"]["memoryHeaps"]["members"][OeDqhMZ]);}();;
        }
        }();
return result;}

    json serialize_VkMemoryAllocateInfo(VkMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BufBzae=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["allocationSize"]=[&]() {
    json return_uDjfINL=json({});
    return_uDjfINL=[&]() {
    json return_zdxhJyD=json({});
    return serialize_uint64_t(name.allocationSize);}();return return_uDjfINL;}();
result["members"]["memoryTypeIndex"]=[&]() {
    json return_RwWyqtA=json({});
    return serialize_uint32_t(name.memoryTypeIndex);}();
return result;}

    VkMemoryAllocateInfo deserialize_VkMemoryAllocateInfo(json &name){
        auto result=VkMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
[&]() {
result.allocationSize=deserialize_uint64_t(name["members"]["allocationSize"]);}();}();
[&]() {
result.memoryTypeIndex=deserialize_uint32_t(name["members"]["memoryTypeIndex"]);}();
return result;}

    json serialize_VkMemoryRequirements(VkMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_csCxvmo=json({});
    return_csCxvmo=[&]() {
    json return_mzwIvPh=json({});
    return serialize_uint64_t(name.size);}();return return_csCxvmo;}();
result["members"]["alignment"]=[&]() {
    json return_eIiQEqr=json({});
    return_eIiQEqr=[&]() {
    json return_jJvmUjk=json({});
    return serialize_uint64_t(name.alignment);}();return return_eIiQEqr;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_NiewAfF=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryRequirements deserialize_VkMemoryRequirements(json &name){
        auto result=VkMemoryRequirements();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.alignment=deserialize_uint64_t(name["members"]["alignment"]);}();}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties(VkSparseImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_sBhLhcJ=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["imageGranularity"]=[&]() {
    json return_TPzXIgD=json({});
    return serialize_VkExtent3D(name.imageGranularity);}();
result["members"]["flags"]=[&]() {
    json return_habvveZ=json({});
    return serialize_VkSparseImageFormatFlags(name.flags);}();
return result;}

    VkSparseImageFormatProperties deserialize_VkSparseImageFormatProperties(json &name){
        auto result=VkSparseImageFormatProperties();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.imageGranularity=deserialize_VkExtent3D(name["members"]["imageGranularity"]);}();
[&]() {
result.flags=deserialize_VkSparseImageFormatFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements(VkSparseImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["formatProperties"]=[&]() {
    json return_rBrKjmC=json({});
    return serialize_VkSparseImageFormatProperties(name.formatProperties);}();
result["members"]["imageMipTailFirstLod"]=[&]() {
    json return_eKtClCE=json({});
    return serialize_uint32_t(name.imageMipTailFirstLod);}();
result["members"]["imageMipTailSize"]=[&]() {
    json return_Qkqqiyg=json({});
    return_Qkqqiyg=[&]() {
    json return_MOvEJrg=json({});
    return serialize_uint64_t(name.imageMipTailSize);}();return return_Qkqqiyg;}();
result["members"]["imageMipTailOffset"]=[&]() {
    json return_yuHLJPa=json({});
    return_yuHLJPa=[&]() {
    json return_WyuEUzt=json({});
    return serialize_uint64_t(name.imageMipTailOffset);}();return return_yuHLJPa;}();
result["members"]["imageMipTailStride"]=[&]() {
    json return_vqmjKLk=json({});
    return_vqmjKLk=[&]() {
    json return_TbKTxCN=json({});
    return serialize_uint64_t(name.imageMipTailStride);}();return return_vqmjKLk;}();
return result;}

    VkSparseImageMemoryRequirements deserialize_VkSparseImageMemoryRequirements(json &name){
        auto result=VkSparseImageMemoryRequirements();
    
[&]() {
result.formatProperties=deserialize_VkSparseImageFormatProperties(name["members"]["formatProperties"]);}();
[&]() {
result.imageMipTailFirstLod=deserialize_uint32_t(name["members"]["imageMipTailFirstLod"]);}();
[&]() {
[&]() {
result.imageMipTailSize=deserialize_uint64_t(name["members"]["imageMipTailSize"]);}();}();
[&]() {
[&]() {
result.imageMipTailOffset=deserialize_uint64_t(name["members"]["imageMipTailOffset"]);}();}();
[&]() {
[&]() {
result.imageMipTailStride=deserialize_uint64_t(name["members"]["imageMipTailStride"]);}();}();
return result;}

    json serialize_VkMemoryType(VkMemoryType name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["propertyFlags"]=[&]() {
    json return_TMiCsfp=json({});
    return serialize_VkMemoryPropertyFlags(name.propertyFlags);}();
result["members"]["heapIndex"]=[&]() {
    json return_dZNxbDN=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkMemoryType deserialize_VkMemoryType(json &name){
        auto result=VkMemoryType();
    
[&]() {
result.propertyFlags=deserialize_VkMemoryPropertyFlags(name["members"]["propertyFlags"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkMemoryHeap(VkMemoryHeap name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_ocIfNxP=json({});
    return_ocIfNxP=[&]() {
    json return_CTgXLXh=json({});
    return serialize_uint64_t(name.size);}();return return_ocIfNxP;}();
result["members"]["flags"]=[&]() {
    json return_xbiTGWs=json({});
    return serialize_VkMemoryHeapFlags(name.flags);}();
return result;}

    VkMemoryHeap deserialize_VkMemoryHeap(json &name){
        auto result=VkMemoryHeap();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.flags=deserialize_VkMemoryHeapFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkMappedMemoryRange(VkMappedMemoryRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vICjcOt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memory"]=[&]() {
    json return_kczLTFy=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_IVhehtl=json({});
    return_IVhehtl=[&]() {
    json return_ssWXoRS=json({});
    return serialize_uint64_t(name.offset);}();return return_IVhehtl;}();
result["members"]["size"]=[&]() {
    json return_PoXuFjc=json({});
    return_PoXuFjc=[&]() {
    json return_nuUsMMZ=json({});
    return serialize_uint64_t(name.size);}();return return_PoXuFjc;}();
return result;}

    VkMappedMemoryRange deserialize_VkMappedMemoryRange(json &name){
        auto result=VkMappedMemoryRange();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkFormatProperties(VkFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["linearTilingFeatures"]=[&]() {
    json return_wrUzNJR=json({});
    return serialize_VkFormatFeatureFlags(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_NlrctCr=json({});
    return serialize_VkFormatFeatureFlags(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_avKjrYZ=json({});
    return serialize_VkFormatFeatureFlags(name.bufferFeatures);}();
return result;}

    VkFormatProperties deserialize_VkFormatProperties(json &name){
        auto result=VkFormatProperties();
    
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkImageFormatProperties(VkImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxExtent"]=[&]() {
    json return_NPGfaRq=json({});
    return serialize_VkExtent3D(name.maxExtent);}();
result["members"]["maxMipLevels"]=[&]() {
    json return_uZzPgIf=json({});
    return serialize_uint32_t(name.maxMipLevels);}();
result["members"]["maxArrayLayers"]=[&]() {
    json return_xeyncOd=json({});
    return serialize_uint32_t(name.maxArrayLayers);}();
result["members"]["sampleCounts"]=[&]() {
    json return_fICjFMV=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["maxResourceSize"]=[&]() {
    json return_gAjkCWi=json({});
    return_gAjkCWi=[&]() {
    json return_hePfWmt=json({});
    return serialize_uint64_t(name.maxResourceSize);}();return return_gAjkCWi;}();
return result;}

    VkImageFormatProperties deserialize_VkImageFormatProperties(json &name){
        auto result=VkImageFormatProperties();
    
[&]() {
result.maxExtent=deserialize_VkExtent3D(name["members"]["maxExtent"]);}();
[&]() {
result.maxMipLevels=deserialize_uint32_t(name["members"]["maxMipLevels"]);}();
[&]() {
result.maxArrayLayers=deserialize_uint32_t(name["members"]["maxArrayLayers"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
[&]() {
result.maxResourceSize=deserialize_uint64_t(name["members"]["maxResourceSize"]);}();}();
return result;}

    json serialize_VkDescriptorBufferInfo(VkDescriptorBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_BElIUyV=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_VlnGlPL=json({});
    return_VlnGlPL=[&]() {
    json return_EaqjHln=json({});
    return serialize_uint64_t(name.offset);}();return return_VlnGlPL;}();
result["members"]["range"]=[&]() {
    json return_lalNCxg=json({});
    return_lalNCxg=[&]() {
    json return_TdnOnny=json({});
    return serialize_uint64_t(name.range);}();return return_lalNCxg;}();
return result;}

    VkDescriptorBufferInfo deserialize_VkDescriptorBufferInfo(json &name){
        auto result=VkDescriptorBufferInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkDescriptorImageInfo(VkDescriptorImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sampler"]=[&]() {
    json return_cyVnegq=json({});
    return serialize_VkSampler(name.sampler);}();
result["members"]["imageView"]=[&]() {
    json return_XSaRrdF=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_ryDyrLb=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkDescriptorImageInfo deserialize_VkDescriptorImageInfo(json &name){
        auto result=VkDescriptorImageInfo();
    
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkWriteDescriptorSet(VkWriteDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GysWQEg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dstSet"]=[&]() {
    json return_hzFKAQT=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_ddQiJeF=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_rMnmDqb=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_tFWtllx=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_BDYLcHo=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["pImageInfo"]=[&]() {
    json return_TaqPgkK=json({});
    
        if (name.pImageInfo==NULL){
            return_TaqPgkK["null"]=true;
            return return_TaqPgkK;
        }
        
        return_TaqPgkK["members"]={};
        for(int TaqPgkK=0; TaqPgkK < name.descriptorCount; TaqPgkK++){
            json temp;
            temp=[&]() {
    json return_jVmpjyk=json({});
    return serialize_VkDescriptorImageInfo(name.pImageInfo[TaqPgkK]);}();
            return_TaqPgkK["members"].push_back(temp);
        }
        return return_TaqPgkK;
        }();
result["members"]["pBufferInfo"]=[&]() {
    json return_cTNGxQJ=json({});
    
        if (name.pBufferInfo==NULL){
            return_cTNGxQJ["null"]=true;
            return return_cTNGxQJ;
        }
        
        return_cTNGxQJ["members"]={};
        for(int cTNGxQJ=0; cTNGxQJ < name.descriptorCount; cTNGxQJ++){
            json temp;
            temp=[&]() {
    json return_ZszEWHB=json({});
    return serialize_VkDescriptorBufferInfo(name.pBufferInfo[cTNGxQJ]);}();
            return_cTNGxQJ["members"].push_back(temp);
        }
        return return_cTNGxQJ;
        }();
result["members"]["pTexelBufferView"]=[&]() {
    json return_ZXjDrDY=json({});
    
        if (name.pTexelBufferView==NULL){
            return_ZXjDrDY["null"]=true;
            return return_ZXjDrDY;
        }
        
        return_ZXjDrDY["members"]={};
        for(int ZXjDrDY=0; ZXjDrDY < name.descriptorCount; ZXjDrDY++){
            json temp;
            temp=[&]() {
    json return_RmcbnKE=json({});
    return serialize_VkBufferView(name.pTexelBufferView[ZXjDrDY]);}();
            return_ZXjDrDY["members"].push_back(temp);
        }
        return return_ZXjDrDY;
        }();
return result;}

    VkWriteDescriptorSet deserialize_VkWriteDescriptorSet(json &name){
        auto result=VkWriteDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
VkDescriptorImageInfo* temp_OvHyFRi;[&]() {

        if (name["members"]["pImageInfo"].contains("null")){
        temp_OvHyFRi=NULL;
        return;
        }
    temp_OvHyFRi=(VkDescriptorImageInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorImageInfo));
        for (int vzcpQfz=0; vzcpQfz < result.descriptorCount; vzcpQfz++){
            [&]() {
temp_OvHyFRi[vzcpQfz]=deserialize_VkDescriptorImageInfo(name["members"]["pImageInfo"]["members"][vzcpQfz]);}();;
        }
        }();result.pImageInfo=temp_OvHyFRi;}();
[&]() {
VkDescriptorBufferInfo* temp_bdxECVg;[&]() {

        if (name["members"]["pBufferInfo"].contains("null")){
        temp_bdxECVg=NULL;
        return;
        }
    temp_bdxECVg=(VkDescriptorBufferInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorBufferInfo));
        for (int tGJCYBO=0; tGJCYBO < result.descriptorCount; tGJCYBO++){
            [&]() {
temp_bdxECVg[tGJCYBO]=deserialize_VkDescriptorBufferInfo(name["members"]["pBufferInfo"]["members"][tGJCYBO]);}();;
        }
        }();result.pBufferInfo=temp_bdxECVg;}();
[&]() {
VkBufferView* temp_faZIGyk;[&]() {

        if (name["members"]["pTexelBufferView"].contains("null")){
        temp_faZIGyk=NULL;
        return;
        }
    temp_faZIGyk=(VkBufferView*)malloc(result.descriptorCount*sizeof(VkBufferView));
        for (int XjHEWNC=0; XjHEWNC < result.descriptorCount; XjHEWNC++){
            [&]() {
temp_faZIGyk[XjHEWNC]=deserialize_VkBufferView(name["members"]["pTexelBufferView"]["members"][XjHEWNC]);}();;
        }
        }();result.pTexelBufferView=temp_faZIGyk;}();
return result;}

    json serialize_VkCopyDescriptorSet(VkCopyDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FYUrgZL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSet"]=[&]() {
    json return_nshthzB=json({});
    return serialize_VkDescriptorSet(name.srcSet);}();
result["members"]["srcBinding"]=[&]() {
    json return_fOgydel=json({});
    return serialize_uint32_t(name.srcBinding);}();
result["members"]["srcArrayElement"]=[&]() {
    json return_PwjrEfA=json({});
    return serialize_uint32_t(name.srcArrayElement);}();
result["members"]["dstSet"]=[&]() {
    json return_hzFKAQT=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_mpKKXsB=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_AHisOWa=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_kyBuNed=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkCopyDescriptorSet deserialize_VkCopyDescriptorSet(json &name){
        auto result=VkCopyDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.srcSet=deserialize_VkDescriptorSet(name["members"]["srcSet"]);}();
[&]() {
result.srcBinding=deserialize_uint32_t(name["members"]["srcBinding"]);}();
[&]() {
result.srcArrayElement=deserialize_uint32_t(name["members"]["srcArrayElement"]);}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkBufferUsageFlags2CreateInfoKHR(VkBufferUsageFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aygRAqN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fJVPDUH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["usage"]=[&]() {
    json return_dtcDzeb=json({});
    return serialize_VkBufferUsageFlags2KHR(name.usage);}();
return result;}

    VkBufferUsageFlags2CreateInfoKHR deserialize_VkBufferUsageFlags2CreateInfoKHR(json &name){
        auto result=VkBufferUsageFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_sKVZcum;[&]() {
temp_sKVZcum=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_sKVZcum;}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags2KHR(name["members"]["usage"]);}();
return result;}

    json serialize_VkBufferCreateInfo(VkBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Tpqbbxv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_TRkrDGa=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["size"]=[&]() {
    json return_csCxvmo=json({});
    return_csCxvmo=[&]() {
    json return_mzwIvPh=json({});
    return serialize_uint64_t(name.size);}();return return_csCxvmo;}();
result["members"]["usage"]=[&]() {
    json return_efGvmZr=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_JlguYMC=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_DfkmtNC=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_VRHJOmL=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_VRHJOmL["null"]=true;
            return return_VRHJOmL;
        }
        
        return_VRHJOmL["members"]={};
        for(int VRHJOmL=0; VRHJOmL < name.queueFamilyIndexCount; VRHJOmL++){
            json temp;
            temp=[&]() {
    json return_iwUbRTM=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[VRHJOmL]);}();
            return_VRHJOmL["members"].push_back(temp);
        }
        return return_VRHJOmL;
        }();
return result;}

    VkBufferCreateInfo deserialize_VkBufferCreateInfo(json &name){
        auto result=VkBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_xznJoek;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_xznJoek=NULL;
        return;
        }
    temp_xznJoek=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int OGKFpMj=0; OGKFpMj < result.queueFamilyIndexCount; OGKFpMj++){
            [&]() {
temp_xznJoek[OGKFpMj]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][OGKFpMj]);}();;
        }
        }();result.pQueueFamilyIndices=temp_xznJoek;}();
return result;}

    json serialize_VkBufferViewCreateInfo(VkBufferViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rljbUXz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_GyFAtON=json({});
    return serialize_VkBufferViewCreateFlags(name.flags);}();
result["members"]["buffer"]=[&]() {
    json return_ZpZUBUD=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["format"]=[&]() {
    json return_SSMWxqG=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_RWZxLQO=json({});
    return_RWZxLQO=[&]() {
    json return_GiAgpas=json({});
    return serialize_uint64_t(name.offset);}();return return_RWZxLQO;}();
result["members"]["range"]=[&]() {
    json return_ynBrRkn=json({});
    return_ynBrRkn=[&]() {
    json return_PtryqVF=json({});
    return serialize_uint64_t(name.range);}();return return_ynBrRkn;}();
return result;}

    VkBufferViewCreateInfo deserialize_VkBufferViewCreateInfo(json &name){
        auto result=VkBufferViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkBufferViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkImageSubresource(VkImageSubresource name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_XdZXBtP=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_XogZuAP=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["arrayLayer"]=[&]() {
    json return_PcrYQme=json({});
    return serialize_uint32_t(name.arrayLayer);}();
return result;}

    VkImageSubresource deserialize_VkImageSubresource(json &name){
        auto result=VkImageSubresource();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.arrayLayer=deserialize_uint32_t(name["members"]["arrayLayer"]);}();
return result;}

    json serialize_VkImageSubresourceLayers(VkImageSubresourceLayers name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_XdZXBtP=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_XogZuAP=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_XcBMTyK=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_tSRXBOH=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceLayers deserialize_VkImageSubresourceLayers(json &name){
        auto result=VkImageSubresourceLayers();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkImageSubresourceRange(VkImageSubresourceRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_XdZXBtP=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["baseMipLevel"]=[&]() {
    json return_NveEpPo=json({});
    return serialize_uint32_t(name.baseMipLevel);}();
result["members"]["levelCount"]=[&]() {
    json return_DUaLmoE=json({});
    return serialize_uint32_t(name.levelCount);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_XcBMTyK=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_tSRXBOH=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceRange deserialize_VkImageSubresourceRange(json &name){
        auto result=VkImageSubresourceRange();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.baseMipLevel=deserialize_uint32_t(name["members"]["baseMipLevel"]);}();
[&]() {
result.levelCount=deserialize_uint32_t(name["members"]["levelCount"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkMemoryBarrier(VkMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OeDNsFh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_SNLNcxb=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_cJkMCni=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier deserialize_VkMemoryBarrier(json &name){
        auto result=VkMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier(VkBufferMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aQmlDcj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_SNLNcxb=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_ZdnTNXI=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_dUhTkyv=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_DNNIddX=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_zYRbtzQ=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_DGXRWJR=json({});
    return_DGXRWJR=[&]() {
    json return_hVwIlgZ=json({});
    return serialize_uint64_t(name.offset);}();return return_DGXRWJR;}();
result["members"]["size"]=[&]() {
    json return_KhkaDmw=json({});
    return_KhkaDmw=[&]() {
    json return_UWiVjWu=json({});
    return serialize_uint64_t(name.size);}();return return_KhkaDmw;}();
return result;}

    VkBufferMemoryBarrier deserialize_VkBufferMemoryBarrier(json &name){
        auto result=VkBufferMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageMemoryBarrier(VkImageMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cgpLKnX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_SNLNcxb=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_ZdnTNXI=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_ONdeTeT=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_vGAecDQ=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_dUhTkyv=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_DNNIddX=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_BlZKfsx=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_SZAsTxv=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier deserialize_VkImageMemoryBarrier(json &name){
        auto result=VkImageMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageCreateInfo(VkImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sdoFSbG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_wYOFTPg=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["imageType"]=[&]() {
    json return_hoqRcwr=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["format"]=[&]() {
    json return_RlkOmQY=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["extent"]=[&]() {
    json return_sOIYPXA=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["mipLevels"]=[&]() {
    json return_CCFgsLS=json({});
    return serialize_uint32_t(name.mipLevels);}();
result["members"]["arrayLayers"]=[&]() {
    json return_TSrIKLR=json({});
    return serialize_uint32_t(name.arrayLayers);}();
result["members"]["samples"]=[&]() {
    json return_tChyDxA=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["tiling"]=[&]() {
    json return_YsVJgTz=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_HaCekii=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_uJAYkbP=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_DOknwHT=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_DHuLcDW=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_DHuLcDW["null"]=true;
            return return_DHuLcDW;
        }
        
        return_DHuLcDW["members"]={};
        for(int DHuLcDW=0; DHuLcDW < name.queueFamilyIndexCount; DHuLcDW++){
            json temp;
            temp=[&]() {
    json return_pTenVle=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[DHuLcDW]);}();
            return_DHuLcDW["members"].push_back(temp);
        }
        return return_DHuLcDW;
        }();
result["members"]["initialLayout"]=[&]() {
    json return_hsHlfZK=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
return result;}

    VkImageCreateInfo deserialize_VkImageCreateInfo(json &name){
        auto result=VkImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.mipLevels=deserialize_uint32_t(name["members"]["mipLevels"]);}();
[&]() {
result.arrayLayers=deserialize_uint32_t(name["members"]["arrayLayers"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_acKDYSc;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_acKDYSc=NULL;
        return;
        }
    temp_acKDYSc=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int NtzjRmU=0; NtzjRmU < result.queueFamilyIndexCount; NtzjRmU++){
            [&]() {
temp_acKDYSc[NtzjRmU]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][NtzjRmU]);}();;
        }
        }();result.pQueueFamilyIndices=temp_acKDYSc;}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout(VkSubresourceLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_RWZxLQO=json({});
    return_RWZxLQO=[&]() {
    json return_GiAgpas=json({});
    return serialize_uint64_t(name.offset);}();return return_RWZxLQO;}();
result["members"]["size"]=[&]() {
    json return_csCxvmo=json({});
    return_csCxvmo=[&]() {
    json return_mzwIvPh=json({});
    return serialize_uint64_t(name.size);}();return return_csCxvmo;}();
result["members"]["rowPitch"]=[&]() {
    json return_sSzTLsB=json({});
    return_sSzTLsB=[&]() {
    json return_RGrWJRB=json({});
    return serialize_uint64_t(name.rowPitch);}();return return_sSzTLsB;}();
result["members"]["arrayPitch"]=[&]() {
    json return_hWiymgG=json({});
    return_hWiymgG=[&]() {
    json return_riDnNAS=json({});
    return serialize_uint64_t(name.arrayPitch);}();return return_hWiymgG;}();
result["members"]["depthPitch"]=[&]() {
    json return_keCnEbD=json({});
    return_keCnEbD=[&]() {
    json return_BlebTBI=json({});
    return serialize_uint64_t(name.depthPitch);}();return return_keCnEbD;}();
return result;}

    VkSubresourceLayout deserialize_VkSubresourceLayout(json &name){
        auto result=VkSubresourceLayout();
    
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.rowPitch=deserialize_uint64_t(name["members"]["rowPitch"]);}();}();
[&]() {
[&]() {
result.arrayPitch=deserialize_uint64_t(name["members"]["arrayPitch"]);}();}();
[&]() {
[&]() {
result.depthPitch=deserialize_uint64_t(name["members"]["depthPitch"]);}();}();
return result;}

    json serialize_VkImageViewCreateInfo(VkImageViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_whRpZsc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_nRqdapb=json({});
    return serialize_VkImageViewCreateFlags(name.flags);}();
result["members"]["image"]=[&]() {
    json return_vokePnH=json({});
    return serialize_VkImage(name.image);}();
result["members"]["viewType"]=[&]() {
    json return_FyPRcEb=json({});
    return serialize_VkImageViewType(name.viewType);}();
result["members"]["format"]=[&]() {
    json return_RlkOmQY=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["components"]=[&]() {
    json return_kVlqUVJ=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["subresourceRange"]=[&]() {
    json return_rFcREpU=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageViewCreateInfo deserialize_VkImageViewCreateInfo(json &name){
        auto result=VkImageViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkImageViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.viewType=deserialize_VkImageViewType(name["members"]["viewType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferCopy(VkBufferCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcOffset"]=[&]() {
    json return_IeEdxuW=json({});
    return_IeEdxuW=[&]() {
    json return_uqddvKz=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_IeEdxuW;}();
result["members"]["dstOffset"]=[&]() {
    json return_XqlTRiW=json({});
    return_XqlTRiW=[&]() {
    json return_VvxKAgD=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_XqlTRiW;}();
result["members"]["size"]=[&]() {
    json return_cpbWwOK=json({});
    return_cpbWwOK=[&]() {
    json return_IaLcCqL=json({});
    return serialize_uint64_t(name.size);}();return return_cpbWwOK;}();
return result;}

    VkBufferCopy deserialize_VkBufferCopy(json &name){
        auto result=VkBufferCopy();
    
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkSparseMemoryBind(VkSparseMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["resourceOffset"]=[&]() {
    json return_uyUxZYi=json({});
    return_uyUxZYi=[&]() {
    json return_urGLerb=json({});
    return serialize_uint64_t(name.resourceOffset);}();return return_uyUxZYi;}();
result["members"]["size"]=[&]() {
    json return_csCxvmo=json({});
    return_csCxvmo=[&]() {
    json return_mzwIvPh=json({});
    return serialize_uint64_t(name.size);}();return return_csCxvmo;}();
result["members"]["memory"]=[&]() {
    json return_FiQwpRg=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_svRoiOB=json({});
    return_svRoiOB=[&]() {
    json return_dltDrmv=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_svRoiOB;}();
result["members"]["flags"]=[&]() {
    json return_naukbhN=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseMemoryBind deserialize_VkSparseMemoryBind(json &name){
        auto result=VkSparseMemoryBind();
    
[&]() {
[&]() {
result.resourceOffset=deserialize_uint64_t(name["members"]["resourceOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryBind(VkSparseImageMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subresource"]=[&]() {
    json return_SctMBGC=json({});
    return serialize_VkImageSubresource(name.subresource);}();
result["members"]["offset"]=[&]() {
    json return_zMGAJmd=json({});
    return serialize_VkOffset3D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_sOIYPXA=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["memory"]=[&]() {
    json return_FiQwpRg=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_svRoiOB=json({});
    return_svRoiOB=[&]() {
    json return_dltDrmv=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_svRoiOB;}();
result["members"]["flags"]=[&]() {
    json return_naukbhN=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseImageMemoryBind deserialize_VkSparseImageMemoryBind(json &name){
        auto result=VkSparseImageMemoryBind();
    
[&]() {
result.subresource=deserialize_VkImageSubresource(name["members"]["subresource"]);}();
[&]() {
result.offset=deserialize_VkOffset3D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseBufferMemoryBindInfo(VkSparseBufferMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_kqYKrwT=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["bindCount"]=[&]() {
    json return_QcjBAyJ=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_fWVJujS=json({});
    
        if (name.pBinds==NULL){
            return_fWVJujS["null"]=true;
            return return_fWVJujS;
        }
        
        return_fWVJujS["members"]={};
        for(int fWVJujS=0; fWVJujS < name.bindCount; fWVJujS++){
            json temp;
            temp=[&]() {
    json return_bCyljIU=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[fWVJujS]);}();
            return_fWVJujS["members"].push_back(temp);
        }
        return return_fWVJujS;
        }();
return result;}

    VkSparseBufferMemoryBindInfo deserialize_VkSparseBufferMemoryBindInfo(json &name){
        auto result=VkSparseBufferMemoryBindInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_zklMxDc;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_zklMxDc=NULL;
        return;
        }
    temp_zklMxDc=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int QvaaJVG=0; QvaaJVG < result.bindCount; QvaaJVG++){
            [&]() {
temp_zklMxDc[QvaaJVG]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][QvaaJVG]);}();;
        }
        }();result.pBinds=temp_zklMxDc;}();
return result;}

    json serialize_VkSparseImageOpaqueMemoryBindInfo(VkSparseImageOpaqueMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_WGBKEta=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_QcjBAyJ=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_fWVJujS=json({});
    
        if (name.pBinds==NULL){
            return_fWVJujS["null"]=true;
            return return_fWVJujS;
        }
        
        return_fWVJujS["members"]={};
        for(int fWVJujS=0; fWVJujS < name.bindCount; fWVJujS++){
            json temp;
            temp=[&]() {
    json return_bCyljIU=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[fWVJujS]);}();
            return_fWVJujS["members"].push_back(temp);
        }
        return return_fWVJujS;
        }();
return result;}

    VkSparseImageOpaqueMemoryBindInfo deserialize_VkSparseImageOpaqueMemoryBindInfo(json &name){
        auto result=VkSparseImageOpaqueMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_zklMxDc;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_zklMxDc=NULL;
        return;
        }
    temp_zklMxDc=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int QvaaJVG=0; QvaaJVG < result.bindCount; QvaaJVG++){
            [&]() {
temp_zklMxDc[QvaaJVG]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][QvaaJVG]);}();;
        }
        }();result.pBinds=temp_zklMxDc;}();
return result;}

    json serialize_VkSparseImageMemoryBindInfo(VkSparseImageMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_WGBKEta=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_QcjBAyJ=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_GghBbWS=json({});
    
        if (name.pBinds==NULL){
            return_GghBbWS["null"]=true;
            return return_GghBbWS;
        }
        
        return_GghBbWS["members"]={};
        for(int GghBbWS=0; GghBbWS < name.bindCount; GghBbWS++){
            json temp;
            temp=[&]() {
    json return_qOcOfIe=json({});
    return serialize_VkSparseImageMemoryBind(name.pBinds[GghBbWS]);}();
            return_GghBbWS["members"].push_back(temp);
        }
        return return_GghBbWS;
        }();
return result;}

    VkSparseImageMemoryBindInfo deserialize_VkSparseImageMemoryBindInfo(json &name){
        auto result=VkSparseImageMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseImageMemoryBind* temp_QqVhtmJ;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_QqVhtmJ=NULL;
        return;
        }
    temp_QqVhtmJ=(VkSparseImageMemoryBind*)malloc(result.bindCount*sizeof(VkSparseImageMemoryBind));
        for (int QGqUIwh=0; QGqUIwh < result.bindCount; QGqUIwh++){
            [&]() {
temp_QqVhtmJ[QGqUIwh]=deserialize_VkSparseImageMemoryBind(name["members"]["pBinds"]["members"][QGqUIwh]);}();;
        }
        }();result.pBinds=temp_QqVhtmJ;}();
return result;}

    json serialize_VkBindSparseInfo(VkBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FDqkAKo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_vypJLgL=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_ekMTVrN=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_ekMTVrN["null"]=true;
            return return_ekMTVrN;
        }
        
        return_ekMTVrN["members"]={};
        for(int ekMTVrN=0; ekMTVrN < name.waitSemaphoreCount; ekMTVrN++){
            json temp;
            temp=[&]() {
    json return_vwEwTlT=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[ekMTVrN]);}();
            return_ekMTVrN["members"].push_back(temp);
        }
        return return_ekMTVrN;
        }();
result["members"]["bufferBindCount"]=[&]() {
    json return_XONMztk=json({});
    return serialize_uint32_t(name.bufferBindCount);}();
result["members"]["pBufferBinds"]=[&]() {
    json return_DwkfIqW=json({});
    
        if (name.pBufferBinds==NULL){
            return_DwkfIqW["null"]=true;
            return return_DwkfIqW;
        }
        
        return_DwkfIqW["members"]={};
        for(int DwkfIqW=0; DwkfIqW < name.bufferBindCount; DwkfIqW++){
            json temp;
            temp=[&]() {
    json return_sOlyRSI=json({});
    return serialize_VkSparseBufferMemoryBindInfo(name.pBufferBinds[DwkfIqW]);}();
            return_DwkfIqW["members"].push_back(temp);
        }
        return return_DwkfIqW;
        }();
result["members"]["imageOpaqueBindCount"]=[&]() {
    json return_nTkvneV=json({});
    return serialize_uint32_t(name.imageOpaqueBindCount);}();
result["members"]["pImageOpaqueBinds"]=[&]() {
    json return_dXTYDbV=json({});
    
        if (name.pImageOpaqueBinds==NULL){
            return_dXTYDbV["null"]=true;
            return return_dXTYDbV;
        }
        
        return_dXTYDbV["members"]={};
        for(int dXTYDbV=0; dXTYDbV < name.imageOpaqueBindCount; dXTYDbV++){
            json temp;
            temp=[&]() {
    json return_OeUBQfC=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(name.pImageOpaqueBinds[dXTYDbV]);}();
            return_dXTYDbV["members"].push_back(temp);
        }
        return return_dXTYDbV;
        }();
result["members"]["imageBindCount"]=[&]() {
    json return_oCsBlEa=json({});
    return serialize_uint32_t(name.imageBindCount);}();
result["members"]["pImageBinds"]=[&]() {
    json return_JOPDVGT=json({});
    
        if (name.pImageBinds==NULL){
            return_JOPDVGT["null"]=true;
            return return_JOPDVGT;
        }
        
        return_JOPDVGT["members"]={};
        for(int JOPDVGT=0; JOPDVGT < name.imageBindCount; JOPDVGT++){
            json temp;
            temp=[&]() {
    json return_nFFieAT=json({});
    return serialize_VkSparseImageMemoryBindInfo(name.pImageBinds[JOPDVGT]);}();
            return_JOPDVGT["members"].push_back(temp);
        }
        return return_JOPDVGT;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_HLnZgKe=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_QuuhUhh=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_QuuhUhh["null"]=true;
            return return_QuuhUhh;
        }
        
        return_QuuhUhh["members"]={};
        for(int QuuhUhh=0; QuuhUhh < name.signalSemaphoreCount; QuuhUhh++){
            json temp;
            temp=[&]() {
    json return_IOpMgOf=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[QuuhUhh]);}();
            return_QuuhUhh["members"].push_back(temp);
        }
        return return_QuuhUhh;
        }();
return result;}

    VkBindSparseInfo deserialize_VkBindSparseInfo(json &name){
        auto result=VkBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_yOjTvcQ;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_yOjTvcQ=NULL;
        return;
        }
    temp_yOjTvcQ=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int fqzdJCB=0; fqzdJCB < result.waitSemaphoreCount; fqzdJCB++){
            [&]() {
temp_yOjTvcQ[fqzdJCB]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][fqzdJCB]);}();;
        }
        }();result.pWaitSemaphores=temp_yOjTvcQ;}();
[&]() {
result.bufferBindCount=deserialize_uint32_t(name["members"]["bufferBindCount"]);}();
[&]() {
VkSparseBufferMemoryBindInfo* temp_kaWYqZc;[&]() {

        if (name["members"]["pBufferBinds"].contains("null")){
        temp_kaWYqZc=NULL;
        return;
        }
    temp_kaWYqZc=(VkSparseBufferMemoryBindInfo*)malloc(result.bufferBindCount*sizeof(VkSparseBufferMemoryBindInfo));
        for (int gxNKmds=0; gxNKmds < result.bufferBindCount; gxNKmds++){
            [&]() {
temp_kaWYqZc[gxNKmds]=deserialize_VkSparseBufferMemoryBindInfo(name["members"]["pBufferBinds"]["members"][gxNKmds]);}();;
        }
        }();result.pBufferBinds=temp_kaWYqZc;}();
[&]() {
result.imageOpaqueBindCount=deserialize_uint32_t(name["members"]["imageOpaqueBindCount"]);}();
[&]() {
VkSparseImageOpaqueMemoryBindInfo* temp_ecGeOgT;[&]() {

        if (name["members"]["pImageOpaqueBinds"].contains("null")){
        temp_ecGeOgT=NULL;
        return;
        }
    temp_ecGeOgT=(VkSparseImageOpaqueMemoryBindInfo*)malloc(result.imageOpaqueBindCount*sizeof(VkSparseImageOpaqueMemoryBindInfo));
        for (int SWIpBVh=0; SWIpBVh < result.imageOpaqueBindCount; SWIpBVh++){
            [&]() {
temp_ecGeOgT[SWIpBVh]=deserialize_VkSparseImageOpaqueMemoryBindInfo(name["members"]["pImageOpaqueBinds"]["members"][SWIpBVh]);}();;
        }
        }();result.pImageOpaqueBinds=temp_ecGeOgT;}();
[&]() {
result.imageBindCount=deserialize_uint32_t(name["members"]["imageBindCount"]);}();
[&]() {
VkSparseImageMemoryBindInfo* temp_YEbTBqR;[&]() {

        if (name["members"]["pImageBinds"].contains("null")){
        temp_YEbTBqR=NULL;
        return;
        }
    temp_YEbTBqR=(VkSparseImageMemoryBindInfo*)malloc(result.imageBindCount*sizeof(VkSparseImageMemoryBindInfo));
        for (int esOfPqb=0; esOfPqb < result.imageBindCount; esOfPqb++){
            [&]() {
temp_YEbTBqR[esOfPqb]=deserialize_VkSparseImageMemoryBindInfo(name["members"]["pImageBinds"]["members"][esOfPqb]);}();;
        }
        }();result.pImageBinds=temp_YEbTBqR;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_EdyDTLf;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_EdyDTLf=NULL;
        return;
        }
    temp_EdyDTLf=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int xDhNcbI=0; xDhNcbI < result.signalSemaphoreCount; xDhNcbI++){
            [&]() {
temp_EdyDTLf[xDhNcbI]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][xDhNcbI]);}();;
        }
        }();result.pSignalSemaphores=temp_EdyDTLf;}();
return result;}

    json serialize_VkImageCopy(VkImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_XtynCdJ=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_bUbYWsD=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_tGDbUMU=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_FYXfcYP=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_qVyAuXI=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy deserialize_VkImageCopy(json &name){
        auto result=VkImageCopy();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit(VkImageBlit name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_XtynCdJ=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_NFWvcmN=json({});
    
        return_NFWvcmN["members"]={};
        for(int NFWvcmN=0; NFWvcmN < 2; NFWvcmN++){
            json temp;
            temp=[&]() {
    json return_SwSrUyo=json({});
    return serialize_VkOffset3D(name.srcOffsets[NFWvcmN]);}();
            return_NFWvcmN["members"].push_back(temp);
        }
        return return_NFWvcmN;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_tGDbUMU=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_NNgKpmi=json({});
    
        return_NNgKpmi["members"]={};
        for(int NNgKpmi=0; NNgKpmi < 2; NNgKpmi++){
            json temp;
            temp=[&]() {
    json return_SGzNObI=json({});
    return serialize_VkOffset3D(name.dstOffsets[NNgKpmi]);}();
            return_NNgKpmi["members"].push_back(temp);
        }
        return return_NNgKpmi;
        }();
return result;}

    VkImageBlit deserialize_VkImageBlit(json &name){
        auto result=VkImageBlit();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int PvtvqEm=0; PvtvqEm < 2; PvtvqEm++){
            [&]() {
result.srcOffsets[PvtvqEm]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][PvtvqEm]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int HtjBVKY=0; HtjBVKY < 2; HtjBVKY++){
            [&]() {
result.dstOffsets[HtjBVKY]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][HtjBVKY]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy(VkBufferImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferOffset"]=[&]() {
    json return_AwWnrFu=json({});
    return_AwWnrFu=[&]() {
    json return_qhEIYmp=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_AwWnrFu;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_tssACCI=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_qgWzodf=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_rnKfWnp=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_zOukjhN=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_BgjakrI=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy deserialize_VkBufferImageCopy(json &name){
        auto result=VkBufferImageCopy();
    
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryIndirectCommandNV(VkCopyMemoryIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_DLnkFFw=json({});
    return_DLnkFFw=[&]() {
    json return_HtQBhtz=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_DLnkFFw;}();
result["members"]["dstAddress"]=[&]() {
    json return_cjmbVOh=json({});
    return_cjmbVOh=[&]() {
    json return_XlKmDVF=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_cjmbVOh;}();
result["members"]["size"]=[&]() {
    json return_VgYHkVR=json({});
    return_VgYHkVR=[&]() {
    json return_nAEUbuN=json({});
    return serialize_uint64_t(name.size);}();return return_VgYHkVR;}();
return result;}

    VkCopyMemoryIndirectCommandNV deserialize_VkCopyMemoryIndirectCommandNV(json &name){
        auto result=VkCopyMemoryIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkCopyMemoryToImageIndirectCommandNV(VkCopyMemoryToImageIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_DLnkFFw=json({});
    return_DLnkFFw=[&]() {
    json return_HtQBhtz=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_DLnkFFw;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_pgsamam=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_whTqMXT=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_vYkRGDv=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_KwsnrLo=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_QTFROTx=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkCopyMemoryToImageIndirectCommandNV deserialize_VkCopyMemoryToImageIndirectCommandNV(json &name){
        auto result=VkCopyMemoryToImageIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve(VkImageResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_XtynCdJ=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_vPTAIoJ=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_tGDbUMU=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_TdNDHTp=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_BeipcRw=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve deserialize_VkImageResolve(json &name){
        auto result=VkImageResolve();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkShaderModuleCreateInfo(VkShaderModuleCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zrmZweO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DniweKE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_fdTUIMH=json({});
    return serialize_VkShaderModuleCreateFlags(name.flags);}();
result["members"]["codeSize"]=[&]() {
    json return_nmFRNEE=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_faVhcjf=json({});
    
        if (name.pCode==NULL){
            return_faVhcjf["null"]=true;
            return return_faVhcjf;
        }
        
        return_faVhcjf["members"]={};
        for(int faVhcjf=0; faVhcjf < name.codeSize / 4; faVhcjf++){
            json temp;
            temp=[&]() {
    json return_XiPiVZR=json({});
    return serialize_uint32_t(name.pCode[faVhcjf]);}();
            return_faVhcjf["members"].push_back(temp);
        }
        return return_faVhcjf;
        }();
return result;}

    VkShaderModuleCreateInfo deserialize_VkShaderModuleCreateInfo(json &name){
        auto result=VkShaderModuleCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_zizPuAo;[&]() {
temp_zizPuAo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_zizPuAo;}();
[&]() {
result.flags=deserialize_VkShaderModuleCreateFlags(name["members"]["flags"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
uint32_t* temp_OUAJcpw;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_OUAJcpw=NULL;
        return;
        }
    temp_OUAJcpw=(uint32_t*)malloc(result.codeSize / 4*sizeof(uint32_t));
        for (int yLbptcx=0; yLbptcx < result.codeSize / 4; yLbptcx++){
            [&]() {
temp_OUAJcpw[yLbptcx]=deserialize_uint32_t(name["members"]["pCode"]["members"][yLbptcx]);}();;
        }
        }();result.pCode=temp_OUAJcpw;}();
return result;}

    json serialize_VkDescriptorSetLayoutBinding(VkDescriptorSetLayoutBinding name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_GbEelWg=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["descriptorType"]=[&]() {
    json return_czWRRIo=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["descriptorCount"]=[&]() {
    json return_QHUrbzG=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["stageFlags"]=[&]() {
    json return_lhjgiuQ=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["pImmutableSamplers"]=[&]() {
    json return_WVtTKzI=json({});
    
        if (name.pImmutableSamplers==NULL){
            return_WVtTKzI["null"]=true;
            return return_WVtTKzI;
        }
        
        return_WVtTKzI["members"]={};
        for(int WVtTKzI=0; WVtTKzI < name.descriptorCount; WVtTKzI++){
            json temp;
            temp=[&]() {
    json return_nqfsram=json({});
    return serialize_VkSampler(name.pImmutableSamplers[WVtTKzI]);}();
            return_WVtTKzI["members"].push_back(temp);
        }
        return return_WVtTKzI;
        }();
return result;}

    VkDescriptorSetLayoutBinding deserialize_VkDescriptorSetLayoutBinding(json &name){
        auto result=VkDescriptorSetLayoutBinding();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
VkSampler* temp_akIRZXl;[&]() {

        if (name["members"]["pImmutableSamplers"].contains("null")){
        temp_akIRZXl=NULL;
        return;
        }
    temp_akIRZXl=(VkSampler*)malloc(result.descriptorCount*sizeof(VkSampler));
        for (int JyECPea=0; JyECPea < result.descriptorCount; JyECPea++){
            [&]() {
temp_akIRZXl[JyECPea]=deserialize_VkSampler(name["members"]["pImmutableSamplers"]["members"][JyECPea]);}();;
        }
        }();result.pImmutableSamplers=temp_akIRZXl;}();
return result;}

    json serialize_VkDescriptorSetLayoutCreateInfo(VkDescriptorSetLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_npxWwNK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_IUsdGsy=json({});
    return serialize_VkDescriptorSetLayoutCreateFlags(name.flags);}();
result["members"]["bindingCount"]=[&]() {
    json return_XhtpqyK=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindings"]=[&]() {
    json return_mfNBUcS=json({});
    
        if (name.pBindings==NULL){
            return_mfNBUcS["null"]=true;
            return return_mfNBUcS;
        }
        
        return_mfNBUcS["members"]={};
        for(int mfNBUcS=0; mfNBUcS < name.bindingCount; mfNBUcS++){
            json temp;
            temp=[&]() {
    json return_huFbeKG=json({});
    return serialize_VkDescriptorSetLayoutBinding(name.pBindings[mfNBUcS]);}();
            return_mfNBUcS["members"].push_back(temp);
        }
        return return_mfNBUcS;
        }();
return result;}

    VkDescriptorSetLayoutCreateInfo deserialize_VkDescriptorSetLayoutCreateInfo(json &name){
        auto result=VkDescriptorSetLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkDescriptorSetLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorSetLayoutBinding* temp_jyQZaBy;[&]() {

        if (name["members"]["pBindings"].contains("null")){
        temp_jyQZaBy=NULL;
        return;
        }
    temp_jyQZaBy=(VkDescriptorSetLayoutBinding*)malloc(result.bindingCount*sizeof(VkDescriptorSetLayoutBinding));
        for (int IWjMozV=0; IWjMozV < result.bindingCount; IWjMozV++){
            [&]() {
temp_jyQZaBy[IWjMozV]=deserialize_VkDescriptorSetLayoutBinding(name["members"]["pBindings"]["members"][IWjMozV]);}();;
        }
        }();result.pBindings=temp_jyQZaBy;}();
return result;}

    json serialize_VkDescriptorPoolSize(VkDescriptorPoolSize name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_WNKGRaa=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["descriptorCount"]=[&]() {
    json return_gdXaOFa=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkDescriptorPoolSize deserialize_VkDescriptorPoolSize(json &name){
        auto result=VkDescriptorPoolSize();
    
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkDescriptorPoolCreateInfo(VkDescriptorPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qRwaRDp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_uGXArLz=json({});
    return serialize_VkDescriptorPoolCreateFlags(name.flags);}();
result["members"]["maxSets"]=[&]() {
    json return_nFToPFn=json({});
    return serialize_uint32_t(name.maxSets);}();
result["members"]["poolSizeCount"]=[&]() {
    json return_XEXNFvt=json({});
    return serialize_uint32_t(name.poolSizeCount);}();
result["members"]["pPoolSizes"]=[&]() {
    json return_Udsduqf=json({});
    
        if (name.pPoolSizes==NULL){
            return_Udsduqf["null"]=true;
            return return_Udsduqf;
        }
        
        return_Udsduqf["members"]={};
        for(int Udsduqf=0; Udsduqf < name.poolSizeCount; Udsduqf++){
            json temp;
            temp=[&]() {
    json return_aZBgIxN=json({});
    return serialize_VkDescriptorPoolSize(name.pPoolSizes[Udsduqf]);}();
            return_Udsduqf["members"].push_back(temp);
        }
        return return_Udsduqf;
        }();
return result;}

    VkDescriptorPoolCreateInfo deserialize_VkDescriptorPoolCreateInfo(json &name){
        auto result=VkDescriptorPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkDescriptorPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.maxSets=deserialize_uint32_t(name["members"]["maxSets"]);}();
[&]() {
result.poolSizeCount=deserialize_uint32_t(name["members"]["poolSizeCount"]);}();
[&]() {
VkDescriptorPoolSize* temp_XQCIJMG;[&]() {

        if (name["members"]["pPoolSizes"].contains("null")){
        temp_XQCIJMG=NULL;
        return;
        }
    temp_XQCIJMG=(VkDescriptorPoolSize*)malloc(result.poolSizeCount*sizeof(VkDescriptorPoolSize));
        for (int wlKrAyQ=0; wlKrAyQ < result.poolSizeCount; wlKrAyQ++){
            [&]() {
temp_XQCIJMG[wlKrAyQ]=deserialize_VkDescriptorPoolSize(name["members"]["pPoolSizes"]["members"][wlKrAyQ]);}();;
        }
        }();result.pPoolSizes=temp_XQCIJMG;}();
return result;}

    json serialize_VkDescriptorSetAllocateInfo(VkDescriptorSetAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sxKNZrt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorPool"]=[&]() {
    json return_eThZbBQ=json({});
    return serialize_VkDescriptorPool(name.descriptorPool);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_BSDRnKX=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_qJTfNJy=json({});
    
        if (name.pSetLayouts==NULL){
            return_qJTfNJy["null"]=true;
            return return_qJTfNJy;
        }
        
        return_qJTfNJy["members"]={};
        for(int qJTfNJy=0; qJTfNJy < name.descriptorSetCount; qJTfNJy++){
            json temp;
            temp=[&]() {
    json return_CcZTtQL=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[qJTfNJy]);}();
            return_qJTfNJy["members"].push_back(temp);
        }
        return return_qJTfNJy;
        }();
return result;}

    VkDescriptorSetAllocateInfo deserialize_VkDescriptorSetAllocateInfo(json &name){
        auto result=VkDescriptorSetAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.descriptorPool=deserialize_VkDescriptorPool(name["members"]["descriptorPool"]);}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_IHUaMiz;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_IHUaMiz=NULL;
        return;
        }
    temp_IHUaMiz=(VkDescriptorSetLayout*)malloc(result.descriptorSetCount*sizeof(VkDescriptorSetLayout));
        for (int LLLHdWF=0; LLLHdWF < result.descriptorSetCount; LLLHdWF++){
            [&]() {
temp_IHUaMiz[LLLHdWF]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][LLLHdWF]);}();;
        }
        }();result.pSetLayouts=temp_IHUaMiz;}();
return result;}

    json serialize_VkSpecializationMapEntry(VkSpecializationMapEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["constantID"]=[&]() {
    json return_xHfmznL=json({});
    return serialize_uint32_t(name.constantID);}();
result["members"]["offset"]=[&]() {
    json return_UwMNlcU=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_vMsEmtw=json({});
    return serialize_size_t(name.size);}();
return result;}

    VkSpecializationMapEntry deserialize_VkSpecializationMapEntry(json &name){
        auto result=VkSpecializationMapEntry();
    
[&]() {
result.constantID=deserialize_uint32_t(name["members"]["constantID"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_size_t(name["members"]["size"]);}();
return result;}

    json serialize_VkSpecializationInfo(VkSpecializationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["mapEntryCount"]=[&]() {
    json return_cfOsqZg=json({});
    return serialize_uint32_t(name.mapEntryCount);}();
result["members"]["pMapEntries"]=[&]() {
    json return_mCgDvbs=json({});
    
        if (name.pMapEntries==NULL){
            return_mCgDvbs["null"]=true;
            return return_mCgDvbs;
        }
        
        return_mCgDvbs["members"]={};
        for(int mCgDvbs=0; mCgDvbs < name.mapEntryCount; mCgDvbs++){
            json temp;
            temp=[&]() {
    json return_vztmjEl=json({});
    return serialize_VkSpecializationMapEntry(name.pMapEntries[mCgDvbs]);}();
            return_mCgDvbs["members"].push_back(temp);
        }
        return return_mCgDvbs;
        }();
result["members"]["dataSize"]=[&]() {
    json return_PobATjH=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_thNmjSs=json({});
    
        if (name.pData==NULL){
            return_thNmjSs["null"]=true;
            return return_thNmjSs;
        }
        return_thNmjSs=[&]() {
    json return_OqTFHQo=json({});
    
        if (((char*)(name.pData))==NULL){
            return_OqTFHQo["null"]=true;
            return return_OqTFHQo;
        }
        
        return_OqTFHQo["members"]={};
        for(int OqTFHQo=0; OqTFHQo < name.dataSize; OqTFHQo++){
            json temp;
            temp=[&]() {
    json return_vOGGQSZ=json({});
    return serialize_char(((char*)(name.pData))[OqTFHQo]);}();
            return_OqTFHQo["members"].push_back(temp);
        }
        return return_OqTFHQo;
        }();return return_thNmjSs;}();
return result;}

    VkSpecializationInfo deserialize_VkSpecializationInfo(json &name){
        auto result=VkSpecializationInfo();
    
[&]() {
result.mapEntryCount=deserialize_uint32_t(name["members"]["mapEntryCount"]);}();
[&]() {
VkSpecializationMapEntry* temp_nIbayju;[&]() {

        if (name["members"]["pMapEntries"].contains("null")){
        temp_nIbayju=NULL;
        return;
        }
    temp_nIbayju=(VkSpecializationMapEntry*)malloc(result.mapEntryCount*sizeof(VkSpecializationMapEntry));
        for (int stvApIR=0; stvApIR < result.mapEntryCount; stvApIR++){
            [&]() {
temp_nIbayju[stvApIR]=deserialize_VkSpecializationMapEntry(name["members"]["pMapEntries"]["members"][stvApIR]);}();;
        }
        }();result.pMapEntries=temp_nIbayju;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_KSLIsbP;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_KSLIsbP=NULL;
        return;
        }
    char* temp_kcHXviG;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_kcHXviG=NULL;
        return;
        }
    temp_kcHXviG=(char*)malloc(result.dataSize*sizeof(char));
        for (int xsKPlDy=0; xsKPlDy < result.dataSize; xsKPlDy++){
            [&]() {
temp_kcHXviG[xsKPlDy]=deserialize_char(name["members"]["pData"]["members"][xsKPlDy]);}();;
        }
        }();temp_KSLIsbP=(void*)temp_kcHXviG;
}();result.pData=temp_KSLIsbP;}();
return result;}

    json serialize_VkPipelineShaderStageCreateInfo(VkPipelineShaderStageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Xbohcxe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_kjrreNz=json({});
    return serialize_VkPipelineShaderStageCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_EtBSzEH=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["module"]=[&]() {
    json return_WkHCryM=json({});
    return serialize_VkShaderModule(name.module);}();
result["members"]["pName"]=[&]() {
    json return_qhbHsRs=json({});
    
        if (name.pName==NULL){
            return_qhbHsRs["null"]=true;
            return return_qhbHsRs;
        }
        
        return_qhbHsRs["members"]={};
        for(int qhbHsRs=0; qhbHsRs < strlen(name.pName)+1; qhbHsRs++){
            json temp;
            temp=[&]() {
    json return_jMHqXlW=json({});
    return serialize_char(name.pName[qhbHsRs]);}();
            return_qhbHsRs["members"].push_back(temp);
        }
        return return_qhbHsRs;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_HWvlJRz=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_HWvlJRz["null"]=true;
            return return_HWvlJRz;
        }
        return_HWvlJRz=[&]() {
    json return_McgvhVq=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_HWvlJRz;}();
return result;}

    VkPipelineShaderStageCreateInfo deserialize_VkPipelineShaderStageCreateInfo(json &name){
        auto result=VkPipelineShaderStageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineShaderStageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.module=deserialize_VkShaderModule(name["members"]["module"]);}();
[&]() {
char* temp_yvzAhtd;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_yvzAhtd=NULL;
        return;
        }
    temp_yvzAhtd=(char*)malloc(name["members"]["pName"]["members"].size()*sizeof(char));
        for (int RoiizzJ=0; RoiizzJ < name["members"]["pName"]["members"].size(); RoiizzJ++){
            [&]() {
temp_yvzAhtd[RoiizzJ]=deserialize_char(name["members"]["pName"]["members"][RoiizzJ]);}();;
        }
        }();result.pName=temp_yvzAhtd;}();
[&]() {
VkSpecializationInfo* temp_sxdHwHL;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_sxdHwHL=NULL;
        return;
        }
    temp_sxdHwHL=(VkSpecializationInfo*)malloc(sizeof(VkSpecializationInfo));
[&]() {
*(temp_sxdHwHL)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_sxdHwHL;}();
return result;}

    json serialize_VkComputePipelineCreateInfo(VkComputePipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KgnkIlY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_uwRslpd=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_qfoKYGi=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.stage);}();
result["members"]["layout"]=[&]() {
    json return_EnxCiqv=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_mzQMqce=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_qTbPAQN=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkComputePipelineCreateInfo deserialize_VkComputePipelineCreateInfo(json &name){
        auto result=VkComputePipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["stage"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkComputePipelineIndirectBufferInfoNV(VkComputePipelineIndirectBufferInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ioStFBU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TDxuxbE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceAddress"]=[&]() {
    json return_UHBTGtH=json({});
    return_UHBTGtH=[&]() {
    json return_vdaXEbJ=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_UHBTGtH;}();
result["members"]["size"]=[&]() {
    json return_nlQwMlw=json({});
    return_nlQwMlw=[&]() {
    json return_qrXCacO=json({});
    return serialize_uint64_t(name.size);}();return return_nlQwMlw;}();
result["members"]["pipelineDeviceAddressCaptureReplay"]=[&]() {
    json return_XfqKjFe=json({});
    return_XfqKjFe=[&]() {
    json return_RnYICuA=json({});
    return serialize_uint64_t(name.pipelineDeviceAddressCaptureReplay);}();return return_XfqKjFe;}();
return result;}

    VkComputePipelineIndirectBufferInfoNV deserialize_VkComputePipelineIndirectBufferInfoNV(json &name){
        auto result=VkComputePipelineIndirectBufferInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_wNPKlhZ;[&]() {
temp_wNPKlhZ=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_wNPKlhZ;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.pipelineDeviceAddressCaptureReplay=deserialize_uint64_t(name["members"]["pipelineDeviceAddressCaptureReplay"]);}();}();
return result;}

    json serialize_VkPipelineCreateFlags2CreateInfoKHR(VkPipelineCreateFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FRDVraK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fJVPDUH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_ucvWVxz=json({});
    return serialize_VkPipelineCreateFlags2KHR(name.flags);}();
return result;}

    VkPipelineCreateFlags2CreateInfoKHR deserialize_VkPipelineCreateFlags2CreateInfoKHR(json &name){
        auto result=VkPipelineCreateFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_sKVZcum;[&]() {
temp_sKVZcum=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_sKVZcum;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags2KHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVertexInputBindingDescription(VkVertexInputBindingDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_aRPWnwT=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_PWCMVTv=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_OqgFgTp=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
return result;}

    VkVertexInputBindingDescription deserialize_VkVertexInputBindingDescription(json &name){
        auto result=VkVertexInputBindingDescription();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription(VkVertexInputAttributeDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["location"]=[&]() {
    json return_cNdBfhz=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_aRPWnwT=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_AKeyRtB=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_dsswzQc=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription deserialize_VkVertexInputAttributeDescription(json &name){
        auto result=VkVertexInputAttributeDescription();
    
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPipelineVertexInputStateCreateInfo(VkPipelineVertexInputStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OQaGfmE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_abMXTMX=json({});
    return serialize_VkPipelineVertexInputStateCreateFlags(name.flags);}();
result["members"]["vertexBindingDescriptionCount"]=[&]() {
    json return_RruJWxZ=json({});
    return serialize_uint32_t(name.vertexBindingDescriptionCount);}();
result["members"]["pVertexBindingDescriptions"]=[&]() {
    json return_aUeviHI=json({});
    
        if (name.pVertexBindingDescriptions==NULL){
            return_aUeviHI["null"]=true;
            return return_aUeviHI;
        }
        
        return_aUeviHI["members"]={};
        for(int aUeviHI=0; aUeviHI < name.vertexBindingDescriptionCount; aUeviHI++){
            json temp;
            temp=[&]() {
    json return_ucoLemd=json({});
    return serialize_VkVertexInputBindingDescription(name.pVertexBindingDescriptions[aUeviHI]);}();
            return_aUeviHI["members"].push_back(temp);
        }
        return return_aUeviHI;
        }();
result["members"]["vertexAttributeDescriptionCount"]=[&]() {
    json return_kQhUOlo=json({});
    return serialize_uint32_t(name.vertexAttributeDescriptionCount);}();
result["members"]["pVertexAttributeDescriptions"]=[&]() {
    json return_pjfIkUZ=json({});
    
        if (name.pVertexAttributeDescriptions==NULL){
            return_pjfIkUZ["null"]=true;
            return return_pjfIkUZ;
        }
        
        return_pjfIkUZ["members"]={};
        for(int pjfIkUZ=0; pjfIkUZ < name.vertexAttributeDescriptionCount; pjfIkUZ++){
            json temp;
            temp=[&]() {
    json return_xSAFrlc=json({});
    return serialize_VkVertexInputAttributeDescription(name.pVertexAttributeDescriptions[pjfIkUZ]);}();
            return_pjfIkUZ["members"].push_back(temp);
        }
        return return_pjfIkUZ;
        }();
return result;}

    VkPipelineVertexInputStateCreateInfo deserialize_VkPipelineVertexInputStateCreateInfo(json &name){
        auto result=VkPipelineVertexInputStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineVertexInputStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.vertexBindingDescriptionCount=deserialize_uint32_t(name["members"]["vertexBindingDescriptionCount"]);}();
[&]() {
VkVertexInputBindingDescription* temp_jiAgEVy;[&]() {

        if (name["members"]["pVertexBindingDescriptions"].contains("null")){
        temp_jiAgEVy=NULL;
        return;
        }
    temp_jiAgEVy=(VkVertexInputBindingDescription*)malloc(result.vertexBindingDescriptionCount*sizeof(VkVertexInputBindingDescription));
        for (int JwJbCTN=0; JwJbCTN < result.vertexBindingDescriptionCount; JwJbCTN++){
            [&]() {
temp_jiAgEVy[JwJbCTN]=deserialize_VkVertexInputBindingDescription(name["members"]["pVertexBindingDescriptions"]["members"][JwJbCTN]);}();;
        }
        }();result.pVertexBindingDescriptions=temp_jiAgEVy;}();
[&]() {
result.vertexAttributeDescriptionCount=deserialize_uint32_t(name["members"]["vertexAttributeDescriptionCount"]);}();
[&]() {
VkVertexInputAttributeDescription* temp_bHDvUME;[&]() {

        if (name["members"]["pVertexAttributeDescriptions"].contains("null")){
        temp_bHDvUME=NULL;
        return;
        }
    temp_bHDvUME=(VkVertexInputAttributeDescription*)malloc(result.vertexAttributeDescriptionCount*sizeof(VkVertexInputAttributeDescription));
        for (int SJwGzqI=0; SJwGzqI < result.vertexAttributeDescriptionCount; SJwGzqI++){
            [&]() {
temp_bHDvUME[SJwGzqI]=deserialize_VkVertexInputAttributeDescription(name["members"]["pVertexAttributeDescriptions"]["members"][SJwGzqI]);}();;
        }
        }();result.pVertexAttributeDescriptions=temp_bHDvUME;}();
return result;}

    json serialize_VkPipelineInputAssemblyStateCreateInfo(VkPipelineInputAssemblyStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YcNLIZD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_VsWcAsF=json({});
    return serialize_VkPipelineInputAssemblyStateCreateFlags(name.flags);}();
result["members"]["topology"]=[&]() {
    json return_FSZaKxx=json({});
    return serialize_VkPrimitiveTopology(name.topology);}();
result["members"]["primitiveRestartEnable"]=[&]() {
    json return_bJFxoyo=json({});
    return_bJFxoyo=[&]() {
    json return_MKCMloX=json({});
    return serialize_uint32_t(name.primitiveRestartEnable);}();return return_bJFxoyo;}();
return result;}

    VkPipelineInputAssemblyStateCreateInfo deserialize_VkPipelineInputAssemblyStateCreateInfo(json &name){
        auto result=VkPipelineInputAssemblyStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineInputAssemblyStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.topology=deserialize_VkPrimitiveTopology(name["members"]["topology"]);}();
[&]() {
[&]() {
result.primitiveRestartEnable=deserialize_uint32_t(name["members"]["primitiveRestartEnable"]);}();}();
return result;}

    json serialize_VkPipelineTessellationStateCreateInfo(VkPipelineTessellationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vpMtFNp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_UcDKDzL=json({});
    return serialize_VkPipelineTessellationStateCreateFlags(name.flags);}();
result["members"]["patchControlPoints"]=[&]() {
    json return_JHOzEJV=json({});
    return serialize_uint32_t(name.patchControlPoints);}();
return result;}

    VkPipelineTessellationStateCreateInfo deserialize_VkPipelineTessellationStateCreateInfo(json &name){
        auto result=VkPipelineTessellationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineTessellationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.patchControlPoints=deserialize_uint32_t(name["members"]["patchControlPoints"]);}();
return result;}

    json serialize_VkPipelineViewportStateCreateInfo(VkPipelineViewportStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zrvoiTa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_MDtcAEh=json({});
    return serialize_VkPipelineViewportStateCreateFlags(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_GMpEfsp=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewports"]=[&]() {
    json return_LoXKepD=json({});
    
        if (name.pViewports==NULL){
            return_LoXKepD["null"]=true;
            return return_LoXKepD;
        }
        
        return_LoXKepD["members"]={};
        for(int LoXKepD=0; LoXKepD < name.viewportCount; LoXKepD++){
            json temp;
            temp=[&]() {
    json return_GRGRzrV=json({});
    return serialize_VkViewport(name.pViewports[LoXKepD]);}();
            return_LoXKepD["members"].push_back(temp);
        }
        return return_LoXKepD;
        }();
result["members"]["scissorCount"]=[&]() {
    json return_nypsJgC=json({});
    return serialize_uint32_t(name.scissorCount);}();
result["members"]["pScissors"]=[&]() {
    json return_LWntQbD=json({});
    
        if (name.pScissors==NULL){
            return_LWntQbD["null"]=true;
            return return_LWntQbD;
        }
        
        return_LWntQbD["members"]={};
        for(int LWntQbD=0; LWntQbD < name.scissorCount; LWntQbD++){
            json temp;
            temp=[&]() {
    json return_QthBtEN=json({});
    return serialize_VkRect2D(name.pScissors[LWntQbD]);}();
            return_LWntQbD["members"].push_back(temp);
        }
        return return_LWntQbD;
        }();
return result;}

    VkPipelineViewportStateCreateInfo deserialize_VkPipelineViewportStateCreateInfo(json &name){
        auto result=VkPipelineViewportStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineViewportStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewport* temp_krFvgIW;[&]() {

        if (name["members"]["pViewports"].contains("null")){
        temp_krFvgIW=NULL;
        return;
        }
    temp_krFvgIW=(VkViewport*)malloc(result.viewportCount*sizeof(VkViewport));
        for (int IbpqJTq=0; IbpqJTq < result.viewportCount; IbpqJTq++){
            [&]() {
temp_krFvgIW[IbpqJTq]=deserialize_VkViewport(name["members"]["pViewports"]["members"][IbpqJTq]);}();;
        }
        }();result.pViewports=temp_krFvgIW;}();
[&]() {
result.scissorCount=deserialize_uint32_t(name["members"]["scissorCount"]);}();
[&]() {
VkRect2D* temp_FhlxVJO;[&]() {

        if (name["members"]["pScissors"].contains("null")){
        temp_FhlxVJO=NULL;
        return;
        }
    temp_FhlxVJO=(VkRect2D*)malloc(result.scissorCount*sizeof(VkRect2D));
        for (int OvwiFtN=0; OvwiFtN < result.scissorCount; OvwiFtN++){
            [&]() {
temp_FhlxVJO[OvwiFtN]=deserialize_VkRect2D(name["members"]["pScissors"]["members"][OvwiFtN]);}();;
        }
        }();result.pScissors=temp_FhlxVJO;}();
return result;}

    json serialize_VkPipelineRasterizationStateCreateInfo(VkPipelineRasterizationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qByoPnS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_UUaEcQd=json({});
    return serialize_VkPipelineRasterizationStateCreateFlags(name.flags);}();
result["members"]["depthClampEnable"]=[&]() {
    json return_LfTWxgH=json({});
    return_LfTWxgH=[&]() {
    json return_ZNOiTpV=json({});
    return serialize_uint32_t(name.depthClampEnable);}();return return_LfTWxgH;}();
result["members"]["rasterizerDiscardEnable"]=[&]() {
    json return_nfBbtks=json({});
    return_nfBbtks=[&]() {
    json return_WArhxoF=json({});
    return serialize_uint32_t(name.rasterizerDiscardEnable);}();return return_nfBbtks;}();
result["members"]["polygonMode"]=[&]() {
    json return_UTXutGc=json({});
    return serialize_VkPolygonMode(name.polygonMode);}();
result["members"]["cullMode"]=[&]() {
    json return_VzrfYgM=json({});
    return serialize_VkCullModeFlags(name.cullMode);}();
result["members"]["frontFace"]=[&]() {
    json return_gCueKEE=json({});
    return serialize_VkFrontFace(name.frontFace);}();
result["members"]["depthBiasEnable"]=[&]() {
    json return_ShKwwdU=json({});
    return_ShKwwdU=[&]() {
    json return_CdAAhqr=json({});
    return serialize_uint32_t(name.depthBiasEnable);}();return return_ShKwwdU;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_GlyuvXP=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_dKRFXVQ=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_IrdHIoL=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
result["members"]["lineWidth"]=[&]() {
    json return_NEzyPDl=json({});
    return serialize_float(name.lineWidth);}();
return result;}

    VkPipelineRasterizationStateCreateInfo deserialize_VkPipelineRasterizationStateCreateInfo(json &name){
        auto result=VkPipelineRasterizationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClampEnable=deserialize_uint32_t(name["members"]["depthClampEnable"]);}();}();
[&]() {
[&]() {
result.rasterizerDiscardEnable=deserialize_uint32_t(name["members"]["rasterizerDiscardEnable"]);}();}();
[&]() {
result.polygonMode=deserialize_VkPolygonMode(name["members"]["polygonMode"]);}();
[&]() {
result.cullMode=deserialize_VkCullModeFlags(name["members"]["cullMode"]);}();
[&]() {
result.frontFace=deserialize_VkFrontFace(name["members"]["frontFace"]);}();
[&]() {
[&]() {
result.depthBiasEnable=deserialize_uint32_t(name["members"]["depthBiasEnable"]);}();}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
[&]() {
result.lineWidth=deserialize_float(name["members"]["lineWidth"]);}();
return result;}

    json serialize_VkPipelineMultisampleStateCreateInfo(VkPipelineMultisampleStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ofRgphU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_VtzhIqf=json({});
    return serialize_VkPipelineMultisampleStateCreateFlags(name.flags);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_dqqyrcA=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["sampleShadingEnable"]=[&]() {
    json return_fjOOTXY=json({});
    return_fjOOTXY=[&]() {
    json return_bwPivfc=json({});
    return serialize_uint32_t(name.sampleShadingEnable);}();return return_fjOOTXY;}();
result["members"]["minSampleShading"]=[&]() {
    json return_NSckhqq=json({});
    return serialize_float(name.minSampleShading);}();
result["members"]["pSampleMask"]=[&]() {
    json return_kRzgxTk=json({});
    
        if (name.pSampleMask==NULL){
            return_kRzgxTk["null"]=true;
            return return_kRzgxTk;
        }
        
        return_kRzgxTk["members"]={};
        for(int kRzgxTk=0; kRzgxTk < (name.rasterizationSamples + 31) / 32; kRzgxTk++){
            json temp;
            temp=[&]() {
    json return_kDaQpdc=json({});
    return_kDaQpdc=[&]() {
    json return_WuxIHuJ=json({});
    return serialize_uint32_t(name.pSampleMask[kRzgxTk]);}();return return_kDaQpdc;}();
            return_kRzgxTk["members"].push_back(temp);
        }
        return return_kRzgxTk;
        }();
result["members"]["alphaToCoverageEnable"]=[&]() {
    json return_mJSfqix=json({});
    return_mJSfqix=[&]() {
    json return_mPhvPyt=json({});
    return serialize_uint32_t(name.alphaToCoverageEnable);}();return return_mJSfqix;}();
result["members"]["alphaToOneEnable"]=[&]() {
    json return_vnTsrch=json({});
    return_vnTsrch=[&]() {
    json return_DWKYMjK=json({});
    return serialize_uint32_t(name.alphaToOneEnable);}();return return_vnTsrch;}();
return result;}

    VkPipelineMultisampleStateCreateInfo deserialize_VkPipelineMultisampleStateCreateInfo(json &name){
        auto result=VkPipelineMultisampleStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineMultisampleStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
[&]() {
result.sampleShadingEnable=deserialize_uint32_t(name["members"]["sampleShadingEnable"]);}();}();
[&]() {
result.minSampleShading=deserialize_float(name["members"]["minSampleShading"]);}();
[&]() {
VkSampleMask* temp_xrmhoOG;[&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_xrmhoOG=NULL;
        return;
        }
    [&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_xrmhoOG=NULL;
        return;
        }
    temp_xrmhoOG=(uint32_t*)malloc((result.rasterizationSamples + 31) / 32*sizeof(uint32_t));
        for (int oaNePkS=0; oaNePkS < (result.rasterizationSamples + 31) / 32; oaNePkS++){
            [&]() {
temp_xrmhoOG[oaNePkS]=deserialize_uint32_t(name["members"]["pSampleMask"]["members"][oaNePkS]);}();;
        }
        }();}();result.pSampleMask=temp_xrmhoOG;}();
[&]() {
[&]() {
result.alphaToCoverageEnable=deserialize_uint32_t(name["members"]["alphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.alphaToOneEnable=deserialize_uint32_t(name["members"]["alphaToOneEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAttachmentState(VkPipelineColorBlendAttachmentState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["blendEnable"]=[&]() {
    json return_LpZqSRX=json({});
    return_LpZqSRX=[&]() {
    json return_XsMNZut=json({});
    return serialize_uint32_t(name.blendEnable);}();return return_LpZqSRX;}();
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_FRqFLmk=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_rUqQVyJ=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_rwsNsIx=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_dYTiQPP=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_sONmaTa=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_CxSHNvC=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
result["members"]["colorWriteMask"]=[&]() {
    json return_EyiIzMj=json({});
    return serialize_VkColorComponentFlags(name.colorWriteMask);}();
return result;}

    VkPipelineColorBlendAttachmentState deserialize_VkPipelineColorBlendAttachmentState(json &name){
        auto result=VkPipelineColorBlendAttachmentState();
    
[&]() {
[&]() {
result.blendEnable=deserialize_uint32_t(name["members"]["blendEnable"]);}();}();
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
[&]() {
result.colorWriteMask=deserialize_VkColorComponentFlags(name["members"]["colorWriteMask"]);}();
return result;}

    json serialize_VkPipelineColorBlendStateCreateInfo(VkPipelineColorBlendStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_amROKCV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_DipEhaR=json({});
    return serialize_VkPipelineColorBlendStateCreateFlags(name.flags);}();
result["members"]["logicOpEnable"]=[&]() {
    json return_ybtCLmh=json({});
    return_ybtCLmh=[&]() {
    json return_vpRSVBy=json({});
    return serialize_uint32_t(name.logicOpEnable);}();return return_ybtCLmh;}();
result["members"]["logicOp"]=[&]() {
    json return_PSlyyyw=json({});
    return serialize_VkLogicOp(name.logicOp);}();
result["members"]["attachmentCount"]=[&]() {
    json return_oYRYbKy=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_kqNxdpb=json({});
    
        if (name.pAttachments==NULL){
            return_kqNxdpb["null"]=true;
            return return_kqNxdpb;
        }
        
        return_kqNxdpb["members"]={};
        for(int kqNxdpb=0; kqNxdpb < name.attachmentCount; kqNxdpb++){
            json temp;
            temp=[&]() {
    json return_HhgiZZj=json({});
    return serialize_VkPipelineColorBlendAttachmentState(name.pAttachments[kqNxdpb]);}();
            return_kqNxdpb["members"].push_back(temp);
        }
        return return_kqNxdpb;
        }();
result["members"]["blendConstants"]=[&]() {
    json return_yWttPfI=json({});
    
        return_yWttPfI["members"]={};
        for(int yWttPfI=0; yWttPfI < 4; yWttPfI++){
            json temp;
            temp=[&]() {
    json return_ncQbIAU=json({});
    return serialize_float(name.blendConstants[yWttPfI]);}();
            return_yWttPfI["members"].push_back(temp);
        }
        return return_yWttPfI;
        }();
return result;}

    VkPipelineColorBlendStateCreateInfo deserialize_VkPipelineColorBlendStateCreateInfo(json &name){
        auto result=VkPipelineColorBlendStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineColorBlendStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.logicOpEnable=deserialize_uint32_t(name["members"]["logicOpEnable"]);}();}();
[&]() {
result.logicOp=deserialize_VkLogicOp(name["members"]["logicOp"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkPipelineColorBlendAttachmentState* temp_eJnqzOV;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_eJnqzOV=NULL;
        return;
        }
    temp_eJnqzOV=(VkPipelineColorBlendAttachmentState*)malloc(result.attachmentCount*sizeof(VkPipelineColorBlendAttachmentState));
        for (int kpthclP=0; kpthclP < result.attachmentCount; kpthclP++){
            [&]() {
temp_eJnqzOV[kpthclP]=deserialize_VkPipelineColorBlendAttachmentState(name["members"]["pAttachments"]["members"][kpthclP]);}();;
        }
        }();result.pAttachments=temp_eJnqzOV;}();
[&]() {

        for (int PorpNlm=0; PorpNlm < 4; PorpNlm++){
            [&]() {
result.blendConstants[PorpNlm]=deserialize_float(name["members"]["blendConstants"]["members"][PorpNlm]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineDynamicStateCreateInfo(VkPipelineDynamicStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fOVynNb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_zPdRSRb=json({});
    return serialize_VkPipelineDynamicStateCreateFlags(name.flags);}();
result["members"]["dynamicStateCount"]=[&]() {
    json return_PTZUmRm=json({});
    return serialize_uint32_t(name.dynamicStateCount);}();
result["members"]["pDynamicStates"]=[&]() {
    json return_xJsoBip=json({});
    
        if (name.pDynamicStates==NULL){
            return_xJsoBip["null"]=true;
            return return_xJsoBip;
        }
        
        return_xJsoBip["members"]={};
        for(int xJsoBip=0; xJsoBip < name.dynamicStateCount; xJsoBip++){
            json temp;
            temp=[&]() {
    json return_Arykivn=json({});
    return serialize_VkDynamicState(name.pDynamicStates[xJsoBip]);}();
            return_xJsoBip["members"].push_back(temp);
        }
        return return_xJsoBip;
        }();
return result;}

    VkPipelineDynamicStateCreateInfo deserialize_VkPipelineDynamicStateCreateInfo(json &name){
        auto result=VkPipelineDynamicStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineDynamicStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.dynamicStateCount=deserialize_uint32_t(name["members"]["dynamicStateCount"]);}();
[&]() {
VkDynamicState* temp_SKvRfIe;[&]() {

        if (name["members"]["pDynamicStates"].contains("null")){
        temp_SKvRfIe=NULL;
        return;
        }
    temp_SKvRfIe=(VkDynamicState*)malloc(result.dynamicStateCount*sizeof(VkDynamicState));
        for (int FYcUAGz=0; FYcUAGz < result.dynamicStateCount; FYcUAGz++){
            [&]() {
temp_SKvRfIe[FYcUAGz]=deserialize_VkDynamicState(name["members"]["pDynamicStates"]["members"][FYcUAGz]);}();;
        }
        }();result.pDynamicStates=temp_SKvRfIe;}();
return result;}

    json serialize_VkStencilOpState(VkStencilOpState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["failOp"]=[&]() {
    json return_vYFcRHb=json({});
    return serialize_VkStencilOp(name.failOp);}();
result["members"]["passOp"]=[&]() {
    json return_UJZAfJU=json({});
    return serialize_VkStencilOp(name.passOp);}();
result["members"]["depthFailOp"]=[&]() {
    json return_kIJiaGg=json({});
    return serialize_VkStencilOp(name.depthFailOp);}();
result["members"]["compareOp"]=[&]() {
    json return_SCJOqNd=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["compareMask"]=[&]() {
    json return_xEsucIA=json({});
    return serialize_uint32_t(name.compareMask);}();
result["members"]["writeMask"]=[&]() {
    json return_HLXsRoa=json({});
    return serialize_uint32_t(name.writeMask);}();
result["members"]["reference"]=[&]() {
    json return_ImKlhDy=json({});
    return serialize_uint32_t(name.reference);}();
return result;}

    VkStencilOpState deserialize_VkStencilOpState(json &name){
        auto result=VkStencilOpState();
    
[&]() {
result.failOp=deserialize_VkStencilOp(name["members"]["failOp"]);}();
[&]() {
result.passOp=deserialize_VkStencilOp(name["members"]["passOp"]);}();
[&]() {
result.depthFailOp=deserialize_VkStencilOp(name["members"]["depthFailOp"]);}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.compareMask=deserialize_uint32_t(name["members"]["compareMask"]);}();
[&]() {
result.writeMask=deserialize_uint32_t(name["members"]["writeMask"]);}();
[&]() {
result.reference=deserialize_uint32_t(name["members"]["reference"]);}();
return result;}

    json serialize_VkPipelineDepthStencilStateCreateInfo(VkPipelineDepthStencilStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lorTkBn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_YonQBqz=json({});
    return serialize_VkPipelineDepthStencilStateCreateFlags(name.flags);}();
result["members"]["depthTestEnable"]=[&]() {
    json return_zTKXdkr=json({});
    return_zTKXdkr=[&]() {
    json return_YxASfXQ=json({});
    return serialize_uint32_t(name.depthTestEnable);}();return return_zTKXdkr;}();
result["members"]["depthWriteEnable"]=[&]() {
    json return_fColMVj=json({});
    return_fColMVj=[&]() {
    json return_yGONiqz=json({});
    return serialize_uint32_t(name.depthWriteEnable);}();return return_fColMVj;}();
result["members"]["depthCompareOp"]=[&]() {
    json return_GngSaBI=json({});
    return serialize_VkCompareOp(name.depthCompareOp);}();
result["members"]["depthBoundsTestEnable"]=[&]() {
    json return_PgqpiVC=json({});
    return_PgqpiVC=[&]() {
    json return_nWEsHmD=json({});
    return serialize_uint32_t(name.depthBoundsTestEnable);}();return return_PgqpiVC;}();
result["members"]["stencilTestEnable"]=[&]() {
    json return_GcpXYfr=json({});
    return_GcpXYfr=[&]() {
    json return_gYqmbpz=json({});
    return serialize_uint32_t(name.stencilTestEnable);}();return return_GcpXYfr;}();
result["members"]["front"]=[&]() {
    json return_tbouVVZ=json({});
    return serialize_VkStencilOpState(name.front);}();
result["members"]["back"]=[&]() {
    json return_IudTiaQ=json({});
    return serialize_VkStencilOpState(name.back);}();
result["members"]["minDepthBounds"]=[&]() {
    json return_eOhutMq=json({});
    return serialize_float(name.minDepthBounds);}();
result["members"]["maxDepthBounds"]=[&]() {
    json return_PwDkQXL=json({});
    return serialize_float(name.maxDepthBounds);}();
return result;}

    VkPipelineDepthStencilStateCreateInfo deserialize_VkPipelineDepthStencilStateCreateInfo(json &name){
        auto result=VkPipelineDepthStencilStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineDepthStencilStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthTestEnable=deserialize_uint32_t(name["members"]["depthTestEnable"]);}();}();
[&]() {
[&]() {
result.depthWriteEnable=deserialize_uint32_t(name["members"]["depthWriteEnable"]);}();}();
[&]() {
result.depthCompareOp=deserialize_VkCompareOp(name["members"]["depthCompareOp"]);}();
[&]() {
[&]() {
result.depthBoundsTestEnable=deserialize_uint32_t(name["members"]["depthBoundsTestEnable"]);}();}();
[&]() {
[&]() {
result.stencilTestEnable=deserialize_uint32_t(name["members"]["stencilTestEnable"]);}();}();
[&]() {
result.front=deserialize_VkStencilOpState(name["members"]["front"]);}();
[&]() {
result.back=deserialize_VkStencilOpState(name["members"]["back"]);}();
[&]() {
result.minDepthBounds=deserialize_float(name["members"]["minDepthBounds"]);}();
[&]() {
result.maxDepthBounds=deserialize_float(name["members"]["maxDepthBounds"]);}();
return result;}

    json serialize_VkGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TPpoacX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_uwRslpd=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_EacaIqK=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_ysyNzRE=json({});
    
        if (name.pStages==NULL){
            return_ysyNzRE["null"]=true;
            return return_ysyNzRE;
        }
        
        return_ysyNzRE["members"]={};
        for(int ysyNzRE=0; ysyNzRE < name.stageCount; ysyNzRE++){
            json temp;
            temp=[&]() {
    json return_kdBeuvH=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[ysyNzRE]);}();
            return_ysyNzRE["members"].push_back(temp);
        }
        return return_ysyNzRE;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_DJcNwlm=json({});
    
        if (name.pVertexInputState==NULL){
            return_DJcNwlm["null"]=true;
            return return_DJcNwlm;
        }
        return_DJcNwlm=[&]() {
    json return_nqpzEoK=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_DJcNwlm;}();
result["members"]["pInputAssemblyState"]=[&]() {
    json return_khaqLEr=json({});
    
        if (name.pInputAssemblyState==NULL){
            return_khaqLEr["null"]=true;
            return return_khaqLEr;
        }
        return_khaqLEr=[&]() {
    json return_JdsUiNI=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*name.pInputAssemblyState);}();
return return_khaqLEr;}();
result["members"]["pTessellationState"]=[&]() {
    json return_olSbaiV=json({});
    
        if (name.pTessellationState==NULL){
            return_olSbaiV["null"]=true;
            return return_olSbaiV;
        }
        return_olSbaiV=[&]() {
    json return_idRlNJi=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_olSbaiV;}();
result["members"]["pViewportState"]=[&]() {
    json return_hoUfOKP=json({});
    
        if (name.pViewportState==NULL){
            return_hoUfOKP["null"]=true;
            return return_hoUfOKP;
        }
        return_hoUfOKP=[&]() {
    json return_PVNQCel=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*name.pViewportState);}();
return return_hoUfOKP;}();
result["members"]["pRasterizationState"]=[&]() {
    json return_WCWpOHo=json({});
    
        if (name.pRasterizationState==NULL){
            return_WCWpOHo["null"]=true;
            return return_WCWpOHo;
        }
        return_WCWpOHo=[&]() {
    json return_MjEdmRD=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*name.pRasterizationState);}();
return return_WCWpOHo;}();
result["members"]["pMultisampleState"]=[&]() {
    json return_zYcZKpq=json({});
    
        if (name.pMultisampleState==NULL){
            return_zYcZKpq["null"]=true;
            return return_zYcZKpq;
        }
        return_zYcZKpq=[&]() {
    json return_fWYAzOv=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*name.pMultisampleState);}();
return return_zYcZKpq;}();
result["members"]["pDepthStencilState"]=[&]() {
    json return_PFoNwYA=json({});
    
        if (name.pDepthStencilState==NULL){
            return_PFoNwYA["null"]=true;
            return return_PFoNwYA;
        }
        return_PFoNwYA=[&]() {
    json return_tCGVkNA=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*name.pDepthStencilState);}();
return return_PFoNwYA;}();
result["members"]["pColorBlendState"]=[&]() {
    json return_lGQhuaO=json({});
    
        if (name.pColorBlendState==NULL){
            return_lGQhuaO["null"]=true;
            return return_lGQhuaO;
        }
        return_lGQhuaO=[&]() {
    json return_ErcqZGH=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*name.pColorBlendState);}();
return return_lGQhuaO;}();
result["members"]["pDynamicState"]=[&]() {
    json return_UPekLXx=json({});
    
        if (name.pDynamicState==NULL){
            return_UPekLXx["null"]=true;
            return return_UPekLXx;
        }
        return_UPekLXx=[&]() {
    json return_FdIYQxL=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_UPekLXx;}();
result["members"]["layout"]=[&]() {
    json return_EnxCiqv=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["renderPass"]=[&]() {
    json return_KtIQXAp=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_bRLHPxv=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_mzQMqce=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_qTbPAQN=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkGraphicsPipelineCreateInfo deserialize_VkGraphicsPipelineCreateInfo(json &name){
        auto result=VkGraphicsPipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_jfWNNWL;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_jfWNNWL=NULL;
        return;
        }
    temp_jfWNNWL=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int jGQFgKI=0; jGQFgKI < result.stageCount; jGQFgKI++){
            [&]() {
temp_jfWNNWL[jGQFgKI]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][jGQFgKI]);}();;
        }
        }();result.pStages=temp_jfWNNWL;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_tKHHjjW;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_tKHHjjW=NULL;
        return;
        }
    temp_tKHHjjW=(VkPipelineVertexInputStateCreateInfo*)malloc(sizeof(VkPipelineVertexInputStateCreateInfo));
[&]() {
*(temp_tKHHjjW)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_tKHHjjW;}();
[&]() {
VkPipelineInputAssemblyStateCreateInfo* temp_kdlYFmy;[&]() {

        if (name["members"]["pInputAssemblyState"].contains("null")){
        temp_kdlYFmy=NULL;
        return;
        }
    temp_kdlYFmy=(VkPipelineInputAssemblyStateCreateInfo*)malloc(sizeof(VkPipelineInputAssemblyStateCreateInfo));
[&]() {
*(temp_kdlYFmy)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name["members"]["pInputAssemblyState"]);}();
}();result.pInputAssemblyState=temp_kdlYFmy;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_tZiKaRh;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_tZiKaRh=NULL;
        return;
        }
    temp_tZiKaRh=(VkPipelineTessellationStateCreateInfo*)malloc(sizeof(VkPipelineTessellationStateCreateInfo));
[&]() {
*(temp_tZiKaRh)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_tZiKaRh;}();
[&]() {
VkPipelineViewportStateCreateInfo* temp_lXZAUHG;[&]() {

        if (name["members"]["pViewportState"].contains("null")){
        temp_lXZAUHG=NULL;
        return;
        }
    temp_lXZAUHG=(VkPipelineViewportStateCreateInfo*)malloc(sizeof(VkPipelineViewportStateCreateInfo));
[&]() {
*(temp_lXZAUHG)=deserialize_VkPipelineViewportStateCreateInfo(name["members"]["pViewportState"]);}();
}();result.pViewportState=temp_lXZAUHG;}();
[&]() {
VkPipelineRasterizationStateCreateInfo* temp_RpsQfdL;[&]() {

        if (name["members"]["pRasterizationState"].contains("null")){
        temp_RpsQfdL=NULL;
        return;
        }
    temp_RpsQfdL=(VkPipelineRasterizationStateCreateInfo*)malloc(sizeof(VkPipelineRasterizationStateCreateInfo));
[&]() {
*(temp_RpsQfdL)=deserialize_VkPipelineRasterizationStateCreateInfo(name["members"]["pRasterizationState"]);}();
}();result.pRasterizationState=temp_RpsQfdL;}();
[&]() {
VkPipelineMultisampleStateCreateInfo* temp_RNKWanq;[&]() {

        if (name["members"]["pMultisampleState"].contains("null")){
        temp_RNKWanq=NULL;
        return;
        }
    temp_RNKWanq=(VkPipelineMultisampleStateCreateInfo*)malloc(sizeof(VkPipelineMultisampleStateCreateInfo));
[&]() {
*(temp_RNKWanq)=deserialize_VkPipelineMultisampleStateCreateInfo(name["members"]["pMultisampleState"]);}();
}();result.pMultisampleState=temp_RNKWanq;}();
[&]() {
VkPipelineDepthStencilStateCreateInfo* temp_FUICgWD;[&]() {

        if (name["members"]["pDepthStencilState"].contains("null")){
        temp_FUICgWD=NULL;
        return;
        }
    temp_FUICgWD=(VkPipelineDepthStencilStateCreateInfo*)malloc(sizeof(VkPipelineDepthStencilStateCreateInfo));
[&]() {
*(temp_FUICgWD)=deserialize_VkPipelineDepthStencilStateCreateInfo(name["members"]["pDepthStencilState"]);}();
}();result.pDepthStencilState=temp_FUICgWD;}();
[&]() {
VkPipelineColorBlendStateCreateInfo* temp_UNPULqa;[&]() {

        if (name["members"]["pColorBlendState"].contains("null")){
        temp_UNPULqa=NULL;
        return;
        }
    temp_UNPULqa=(VkPipelineColorBlendStateCreateInfo*)malloc(sizeof(VkPipelineColorBlendStateCreateInfo));
[&]() {
*(temp_UNPULqa)=deserialize_VkPipelineColorBlendStateCreateInfo(name["members"]["pColorBlendState"]);}();
}();result.pColorBlendState=temp_UNPULqa;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_wCqqLuf;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_wCqqLuf=NULL;
        return;
        }
    temp_wCqqLuf=(VkPipelineDynamicStateCreateInfo*)malloc(sizeof(VkPipelineDynamicStateCreateInfo));
[&]() {
*(temp_wCqqLuf)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_wCqqLuf;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkPipelineCacheCreateInfo(VkPipelineCacheCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AgyPRzg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_jGegdnI=json({});
    return serialize_VkPipelineCacheCreateFlags(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_IjXRWXv=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_cqlJPAm=json({});
    
        if (name.pInitialData==NULL){
            return_cqlJPAm["null"]=true;
            return return_cqlJPAm;
        }
        return_cqlJPAm=[&]() {
    json return_tuGjuJQ=json({});
    
        if (((char*)(name.pInitialData))==NULL){
            return_tuGjuJQ["null"]=true;
            return return_tuGjuJQ;
        }
        
        return_tuGjuJQ["members"]={};
        for(int tuGjuJQ=0; tuGjuJQ < name.initialDataSize; tuGjuJQ++){
            json temp;
            temp=[&]() {
    json return_osThnBq=json({});
    return serialize_char(((char*)(name.pInitialData))[tuGjuJQ]);}();
            return_tuGjuJQ["members"].push_back(temp);
        }
        return return_tuGjuJQ;
        }();return return_cqlJPAm;}();
return result;}

    VkPipelineCacheCreateInfo deserialize_VkPipelineCacheCreateInfo(json &name){
        auto result=VkPipelineCacheCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineCacheCreateFlags(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_ZbwnsZl;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_ZbwnsZl=NULL;
        return;
        }
    char* temp_ZCFuztC;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_ZCFuztC=NULL;
        return;
        }
    temp_ZCFuztC=(char*)malloc(result.initialDataSize*sizeof(char));
        for (int qdvMXxp=0; qdvMXxp < result.initialDataSize; qdvMXxp++){
            [&]() {
temp_ZCFuztC[qdvMXxp]=deserialize_char(name["members"]["pInitialData"]["members"][qdvMXxp]);}();;
        }
        }();temp_ZbwnsZl=(void*)temp_ZCFuztC;
}();result.pInitialData=temp_ZbwnsZl;}();
return result;}

    json serialize_VkPipelineCacheHeaderVersionOne(VkPipelineCacheHeaderVersionOne name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_KRurgmB=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_YaMYEna=json({});
    return serialize_VkPipelineCacheHeaderVersion(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_sYbmtTD=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_yrilIdT=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_osmFpPm=json({});
    
        return_osmFpPm["members"]={};
        for(int osmFpPm=0; osmFpPm < VK_UUID_SIZE; osmFpPm++){
            json temp;
            temp=[&]() {
    json return_CXsljCN=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[osmFpPm]);}();
            return_osmFpPm["members"].push_back(temp);
        }
        return return_osmFpPm;
        }();
return result;}

    VkPipelineCacheHeaderVersionOne deserialize_VkPipelineCacheHeaderVersionOne(json &name){
        auto result=VkPipelineCacheHeaderVersionOne();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkPipelineCacheHeaderVersion(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {

        for (int eQdvfxi=0; eQdvfxi < VK_UUID_SIZE; eQdvfxi++){
            [&]() {
result.pipelineCacheUUID[eQdvfxi]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][eQdvfxi]);}();;
        }
        }();
return result;}

    json serialize_VkPushConstantRange(VkPushConstantRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["stageFlags"]=[&]() {
    json return_DkCBxJm=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["offset"]=[&]() {
    json return_WzqsKHU=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_LKejaKl=json({});
    return serialize_uint32_t(name.size);}();
return result;}

    VkPushConstantRange deserialize_VkPushConstantRange(json &name){
        auto result=VkPushConstantRange();
    
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
return result;}

    json serialize_VkPipelineLayoutCreateInfo(VkPipelineLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oRzZWUL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_NRecIKC=json({});
    return serialize_VkPipelineLayoutCreateFlags(name.flags);}();
result["members"]["setLayoutCount"]=[&]() {
    json return_JltzpwR=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_hkClsSf=json({});
    
        if (name.pSetLayouts==NULL){
            return_hkClsSf["null"]=true;
            return return_hkClsSf;
        }
        
        return_hkClsSf["members"]={};
        for(int hkClsSf=0; hkClsSf < name.setLayoutCount; hkClsSf++){
            json temp;
            temp=[&]() {
    json return_utaLDmG=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[hkClsSf]);}();
            return_hkClsSf["members"].push_back(temp);
        }
        return return_hkClsSf;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_IuZDqko=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_cdGLIJg=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_cdGLIJg["null"]=true;
            return return_cdGLIJg;
        }
        
        return_cdGLIJg["members"]={};
        for(int cdGLIJg=0; cdGLIJg < name.pushConstantRangeCount; cdGLIJg++){
            json temp;
            temp=[&]() {
    json return_tpUCIbi=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[cdGLIJg]);}();
            return_cdGLIJg["members"].push_back(temp);
        }
        return return_cdGLIJg;
        }();
return result;}

    VkPipelineLayoutCreateInfo deserialize_VkPipelineLayoutCreateInfo(json &name){
        auto result=VkPipelineLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_NjfEzHv;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_NjfEzHv=NULL;
        return;
        }
    temp_NjfEzHv=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int cwIWyGQ=0; cwIWyGQ < result.setLayoutCount; cwIWyGQ++){
            [&]() {
temp_NjfEzHv[cwIWyGQ]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][cwIWyGQ]);}();;
        }
        }();result.pSetLayouts=temp_NjfEzHv;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_sLsswxB;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_sLsswxB=NULL;
        return;
        }
    temp_sLsswxB=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int KzQPmSi=0; KzQPmSi < result.pushConstantRangeCount; KzQPmSi++){
            [&]() {
temp_sLsswxB[KzQPmSi]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][KzQPmSi]);}();;
        }
        }();result.pPushConstantRanges=temp_sLsswxB;}();
return result;}

    json serialize_VkSamplerCreateInfo(VkSamplerCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XKccXsU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_TFhmdmh=json({});
    return serialize_VkSamplerCreateFlags(name.flags);}();
result["members"]["magFilter"]=[&]() {
    json return_eBnoeCc=json({});
    return serialize_VkFilter(name.magFilter);}();
result["members"]["minFilter"]=[&]() {
    json return_zWiNBei=json({});
    return serialize_VkFilter(name.minFilter);}();
result["members"]["mipmapMode"]=[&]() {
    json return_mMdXOua=json({});
    return serialize_VkSamplerMipmapMode(name.mipmapMode);}();
result["members"]["addressModeU"]=[&]() {
    json return_aBIzEfr=json({});
    return serialize_VkSamplerAddressMode(name.addressModeU);}();
result["members"]["addressModeV"]=[&]() {
    json return_MODDhMi=json({});
    return serialize_VkSamplerAddressMode(name.addressModeV);}();
result["members"]["addressModeW"]=[&]() {
    json return_trldjrd=json({});
    return serialize_VkSamplerAddressMode(name.addressModeW);}();
result["members"]["mipLodBias"]=[&]() {
    json return_BvkaUjW=json({});
    return serialize_float(name.mipLodBias);}();
result["members"]["anisotropyEnable"]=[&]() {
    json return_XfneVZN=json({});
    return_XfneVZN=[&]() {
    json return_hZpkgIE=json({});
    return serialize_uint32_t(name.anisotropyEnable);}();return return_XfneVZN;}();
result["members"]["maxAnisotropy"]=[&]() {
    json return_SMUXzqW=json({});
    return serialize_float(name.maxAnisotropy);}();
result["members"]["compareEnable"]=[&]() {
    json return_brlsUFp=json({});
    return_brlsUFp=[&]() {
    json return_AjXOcFr=json({});
    return serialize_uint32_t(name.compareEnable);}();return return_brlsUFp;}();
result["members"]["compareOp"]=[&]() {
    json return_SCJOqNd=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["minLod"]=[&]() {
    json return_VdFEmgD=json({});
    return serialize_float(name.minLod);}();
result["members"]["maxLod"]=[&]() {
    json return_uPGDNrd=json({});
    return serialize_float(name.maxLod);}();
result["members"]["borderColor"]=[&]() {
    json return_yUZCEgO=json({});
    return serialize_VkBorderColor(name.borderColor);}();
result["members"]["unnormalizedCoordinates"]=[&]() {
    json return_hMJORnm=json({});
    return_hMJORnm=[&]() {
    json return_ZpZAQun=json({});
    return serialize_uint32_t(name.unnormalizedCoordinates);}();return return_hMJORnm;}();
return result;}

    VkSamplerCreateInfo deserialize_VkSamplerCreateInfo(json &name){
        auto result=VkSamplerCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkSamplerCreateFlags(name["members"]["flags"]);}();
[&]() {
result.magFilter=deserialize_VkFilter(name["members"]["magFilter"]);}();
[&]() {
result.minFilter=deserialize_VkFilter(name["members"]["minFilter"]);}();
[&]() {
result.mipmapMode=deserialize_VkSamplerMipmapMode(name["members"]["mipmapMode"]);}();
[&]() {
result.addressModeU=deserialize_VkSamplerAddressMode(name["members"]["addressModeU"]);}();
[&]() {
result.addressModeV=deserialize_VkSamplerAddressMode(name["members"]["addressModeV"]);}();
[&]() {
result.addressModeW=deserialize_VkSamplerAddressMode(name["members"]["addressModeW"]);}();
[&]() {
result.mipLodBias=deserialize_float(name["members"]["mipLodBias"]);}();
[&]() {
[&]() {
result.anisotropyEnable=deserialize_uint32_t(name["members"]["anisotropyEnable"]);}();}();
[&]() {
result.maxAnisotropy=deserialize_float(name["members"]["maxAnisotropy"]);}();
[&]() {
[&]() {
result.compareEnable=deserialize_uint32_t(name["members"]["compareEnable"]);}();}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
[&]() {
result.maxLod=deserialize_float(name["members"]["maxLod"]);}();
[&]() {
result.borderColor=deserialize_VkBorderColor(name["members"]["borderColor"]);}();
[&]() {
[&]() {
result.unnormalizedCoordinates=deserialize_uint32_t(name["members"]["unnormalizedCoordinates"]);}();}();
return result;}

    json serialize_VkCommandPoolCreateInfo(VkCommandPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bUcMTLo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_XKXEXXA=json({});
    return serialize_VkCommandPoolCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_uaxmYeQ=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
return result;}

    VkCommandPoolCreateInfo deserialize_VkCommandPoolCreateInfo(json &name){
        auto result=VkCommandPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkCommandPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
return result;}

    json serialize_VkCommandBufferAllocateInfo(VkCommandBufferAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HDqFnXI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["commandPool"]=[&]() {
    json return_dJNiPNB=json({});
    return serialize_VkCommandPool(name.commandPool);}();
result["members"]["level"]=[&]() {
    json return_BoLncSl=json({});
    return serialize_VkCommandBufferLevel(name.level);}();
result["members"]["commandBufferCount"]=[&]() {
    json return_VICFsAE=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
return result;}

    VkCommandBufferAllocateInfo deserialize_VkCommandBufferAllocateInfo(json &name){
        auto result=VkCommandBufferAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.commandPool=deserialize_VkCommandPool(name["members"]["commandPool"]);}();
[&]() {
result.level=deserialize_VkCommandBufferLevel(name["members"]["level"]);}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceInfo(VkCommandBufferInheritanceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MMUSFJq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["renderPass"]=[&]() {
    json return_XiEaxOh=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_bRLHPxv=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["framebuffer"]=[&]() {
    json return_uZLuFVB=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["occlusionQueryEnable"]=[&]() {
    json return_DGJTrYl=json({});
    return_DGJTrYl=[&]() {
    json return_bZAqabB=json({});
    return serialize_uint32_t(name.occlusionQueryEnable);}();return return_DGJTrYl;}();
result["members"]["queryFlags"]=[&]() {
    json return_QzxwjFe=json({});
    return serialize_VkQueryControlFlags(name.queryFlags);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_aAyqwac=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkCommandBufferInheritanceInfo deserialize_VkCommandBufferInheritanceInfo(json &name){
        auto result=VkCommandBufferInheritanceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
[&]() {
result.occlusionQueryEnable=deserialize_uint32_t(name["members"]["occlusionQueryEnable"]);}();}();
[&]() {
result.queryFlags=deserialize_VkQueryControlFlags(name["members"]["queryFlags"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkCommandBufferBeginInfo(VkCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qLdGwxS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_xSgGGpw=json({});
    return serialize_VkCommandBufferUsageFlags(name.flags);}();
result["members"]["pInheritanceInfo"]=[&]() {
    json return_avXUsrj=json({});
    
        if (name.pInheritanceInfo==NULL){
            return_avXUsrj["null"]=true;
            return return_avXUsrj;
        }
        return_avXUsrj=[&]() {
    json return_ylgTfNI=json({});
    return serialize_VkCommandBufferInheritanceInfo(*name.pInheritanceInfo);}();
return return_avXUsrj;}();
return result;}

    VkCommandBufferBeginInfo deserialize_VkCommandBufferBeginInfo(json &name){
        auto result=VkCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkCommandBufferUsageFlags(name["members"]["flags"]);}();
[&]() {
VkCommandBufferInheritanceInfo* temp_djSbXpp;[&]() {

        if (name["members"]["pInheritanceInfo"].contains("null")){
        temp_djSbXpp=NULL;
        return;
        }
    temp_djSbXpp=(VkCommandBufferInheritanceInfo*)malloc(sizeof(VkCommandBufferInheritanceInfo));
[&]() {
*(temp_djSbXpp)=deserialize_VkCommandBufferInheritanceInfo(name["members"]["pInheritanceInfo"]);}();
}();result.pInheritanceInfo=temp_djSbXpp;}();
return result;}

    json serialize_VkRenderPassBeginInfo(VkRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XiAebxy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["renderPass"]=[&]() {
    json return_KtIQXAp=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["framebuffer"]=[&]() {
    json return_VFEjrqO=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["renderArea"]=[&]() {
    json return_UlMXxXB=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["clearValueCount"]=[&]() {
    json return_BkmUUxo=json({});
    return serialize_uint32_t(name.clearValueCount);}();
result["members"]["pClearValues"]=[&]() {
    json return_ksvBdtM=json({});
    
        if (name.pClearValues==NULL){
            return_ksvBdtM["null"]=true;
            return return_ksvBdtM;
        }
        
        return_ksvBdtM["members"]={};
        for(int ksvBdtM=0; ksvBdtM < name.clearValueCount; ksvBdtM++){
            json temp;
            temp=[&]() {
    json return_IqZPgHw=json({});
    return serialize_VkClearValue(name.pClearValues[ksvBdtM]);}();
            return_ksvBdtM["members"].push_back(temp);
        }
        return return_ksvBdtM;
        }();
return result;}

    VkRenderPassBeginInfo deserialize_VkRenderPassBeginInfo(json &name){
        auto result=VkRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.clearValueCount=deserialize_uint32_t(name["members"]["clearValueCount"]);}();
[&]() {
VkClearValue* temp_DchCTQA;[&]() {

        if (name["members"]["pClearValues"].contains("null")){
        temp_DchCTQA=NULL;
        return;
        }
    temp_DchCTQA=(VkClearValue*)malloc(result.clearValueCount*sizeof(VkClearValue));
        for (int vGsnbMu=0; vGsnbMu < result.clearValueCount; vGsnbMu++){
            [&]() {
temp_DchCTQA[vGsnbMu]=deserialize_VkClearValue(name["members"]["pClearValues"]["members"][vGsnbMu]);}();;
        }
        }();result.pClearValues=temp_DchCTQA;}();
return result;}

    json serialize_VkClearColorValue(VkClearColorValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["float32"]=[&]() {
    json return_yFzwufb=json({});
    
        return_yFzwufb["members"]={};
        for(int yFzwufb=0; yFzwufb < 4; yFzwufb++){
            json temp;
            temp=[&]() {
    json return_ZXJnSeB=json({});
    return serialize_float(name.float32[yFzwufb]);}();
            return_yFzwufb["members"].push_back(temp);
        }
        return return_yFzwufb;
        }();
result["members"]["int32"]=[&]() {
    json return_gKAfMNC=json({});
    
        return_gKAfMNC["members"]={};
        for(int gKAfMNC=0; gKAfMNC < 4; gKAfMNC++){
            json temp;
            temp=[&]() {
    json return_GmkiSKZ=json({});
    return serialize_int32_t(name.int32[gKAfMNC]);}();
            return_gKAfMNC["members"].push_back(temp);
        }
        return return_gKAfMNC;
        }();
result["members"]["uint32"]=[&]() {
    json return_UwLHAem=json({});
    
        return_UwLHAem["members"]={};
        for(int UwLHAem=0; UwLHAem < 4; UwLHAem++){
            json temp;
            temp=[&]() {
    json return_gwFCoDp=json({});
    return serialize_uint32_t(name.uint32[UwLHAem]);}();
            return_UwLHAem["members"].push_back(temp);
        }
        return return_UwLHAem;
        }();
return result;}

    VkClearColorValue deserialize_VkClearColorValue(json &name){
        auto result=VkClearColorValue();
    
[&]() {

        for (int pSfwSdo=0; pSfwSdo < 4; pSfwSdo++){
            [&]() {
result.float32[pSfwSdo]=deserialize_float(name["members"]["float32"]["members"][pSfwSdo]);}();;
        }
        }();
[&]() {

        for (int iswrURK=0; iswrURK < 4; iswrURK++){
            [&]() {
result.int32[iswrURK]=deserialize_int32_t(name["members"]["int32"]["members"][iswrURK]);}();;
        }
        }();
[&]() {

        for (int raQHFWD=0; raQHFWD < 4; raQHFWD++){
            [&]() {
result.uint32[raQHFWD]=deserialize_uint32_t(name["members"]["uint32"]["members"][raQHFWD]);}();;
        }
        }();
return result;}

    json serialize_VkClearDepthStencilValue(VkClearDepthStencilValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["depth"]=[&]() {
    json return_sfWCqoY=json({});
    return serialize_float(name.depth);}();
result["members"]["stencil"]=[&]() {
    json return_KVkdQeL=json({});
    return serialize_uint32_t(name.stencil);}();
return result;}

    VkClearDepthStencilValue deserialize_VkClearDepthStencilValue(json &name){
        auto result=VkClearDepthStencilValue();
    
[&]() {
result.depth=deserialize_float(name["members"]["depth"]);}();
[&]() {
result.stencil=deserialize_uint32_t(name["members"]["stencil"]);}();
return result;}

    json serialize_VkClearValue(VkClearValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["color"]=[&]() {
    json return_TOBoAOF=json({});
    return serialize_VkClearColorValue(name.color);}();
result["members"]["depthStencil"]=[&]() {
    json return_NmZTKwX=json({});
    return serialize_VkClearDepthStencilValue(name.depthStencil);}();
return result;}

    VkClearValue deserialize_VkClearValue(json &name){
        auto result=VkClearValue();
    
[&]() {
result.color=deserialize_VkClearColorValue(name["members"]["color"]);}();
[&]() {
result.depthStencil=deserialize_VkClearDepthStencilValue(name["members"]["depthStencil"]);}();
return result;}

    json serialize_VkClearAttachment(VkClearAttachment name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_XdZXBtP=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["colorAttachment"]=[&]() {
    json return_HysCdMd=json({});
    return serialize_uint32_t(name.colorAttachment);}();
result["members"]["clearValue"]=[&]() {
    json return_OBVCeNk=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkClearAttachment deserialize_VkClearAttachment(json &name){
        auto result=VkClearAttachment();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.colorAttachment=deserialize_uint32_t(name["members"]["colorAttachment"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkAttachmentDescription(VkAttachmentDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_PtwCfAW=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_RlkOmQY=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_tChyDxA=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_ppSIsXS=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_RNNmAnr=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_gGvpjaD=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_JbUOLBp=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_QUGkYWV=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_QdnYDEK=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription deserialize_VkAttachmentDescription(json &name){
        auto result=VkAttachmentDescription();
    
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference(VkAttachmentReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachment"]=[&]() {
    json return_OxjGbEQ=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_XVxEOpT=json({});
    return serialize_VkImageLayout(name.layout);}();
return result;}

    VkAttachmentReference deserialize_VkAttachmentReference(json &name){
        auto result=VkAttachmentReference();
    
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
return result;}

    json serialize_VkSubpassDescription(VkSubpassDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_xTYWvwr=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_SYnCcVw=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_cFCfkVp=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_cFrbiQS=json({});
    
        if (name.pInputAttachments==NULL){
            return_cFrbiQS["null"]=true;
            return return_cFrbiQS;
        }
        
        return_cFrbiQS["members"]={};
        for(int cFrbiQS=0; cFrbiQS < name.inputAttachmentCount; cFrbiQS++){
            json temp;
            temp=[&]() {
    json return_MZYbYMM=json({});
    return serialize_VkAttachmentReference(name.pInputAttachments[cFrbiQS]);}();
            return_cFrbiQS["members"].push_back(temp);
        }
        return return_cFrbiQS;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_WBNrycj=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_VdpUogo=json({});
    
        if (name.pColorAttachments==NULL){
            return_VdpUogo["null"]=true;
            return return_VdpUogo;
        }
        
        return_VdpUogo["members"]={};
        for(int VdpUogo=0; VdpUogo < name.colorAttachmentCount; VdpUogo++){
            json temp;
            temp=[&]() {
    json return_fOfvOYG=json({});
    return serialize_VkAttachmentReference(name.pColorAttachments[VdpUogo]);}();
            return_VdpUogo["members"].push_back(temp);
        }
        return return_VdpUogo;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_eIAUgME=json({});
    
        if (name.pResolveAttachments==NULL){
            return_eIAUgME["null"]=true;
            return return_eIAUgME;
        }
        
        return_eIAUgME["members"]={};
        for(int eIAUgME=0; eIAUgME < name.colorAttachmentCount; eIAUgME++){
            json temp;
            temp=[&]() {
    json return_KZwgthx=json({});
    return serialize_VkAttachmentReference(name.pResolveAttachments[eIAUgME]);}();
            return_eIAUgME["members"].push_back(temp);
        }
        return return_eIAUgME;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_SVnztlv=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_SVnztlv["null"]=true;
            return return_SVnztlv;
        }
        return_SVnztlv=[&]() {
    json return_hlPzYSA=json({});
    return serialize_VkAttachmentReference(*name.pDepthStencilAttachment);}();
return return_SVnztlv;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_IyNgzyf=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_XDGHrAW=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_XDGHrAW["null"]=true;
            return return_XDGHrAW;
        }
        
        return_XDGHrAW["members"]={};
        for(int XDGHrAW=0; XDGHrAW < name.preserveAttachmentCount; XDGHrAW++){
            json temp;
            temp=[&]() {
    json return_TiKCfHB=json({});
    return serialize_uint32_t(name.pPreserveAttachments[XDGHrAW]);}();
            return_XDGHrAW["members"].push_back(temp);
        }
        return return_XDGHrAW;
        }();
return result;}

    VkSubpassDescription deserialize_VkSubpassDescription(json &name){
        auto result=VkSubpassDescription();
    
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_ZcomOoa;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_ZcomOoa=NULL;
        return;
        }
    temp_ZcomOoa=(VkAttachmentReference*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference));
        for (int ISAKcea=0; ISAKcea < result.inputAttachmentCount; ISAKcea++){
            [&]() {
temp_ZcomOoa[ISAKcea]=deserialize_VkAttachmentReference(name["members"]["pInputAttachments"]["members"][ISAKcea]);}();;
        }
        }();result.pInputAttachments=temp_ZcomOoa;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_FzrbieZ;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_FzrbieZ=NULL;
        return;
        }
    temp_FzrbieZ=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int AJJbMQZ=0; AJJbMQZ < result.colorAttachmentCount; AJJbMQZ++){
            [&]() {
temp_FzrbieZ[AJJbMQZ]=deserialize_VkAttachmentReference(name["members"]["pColorAttachments"]["members"][AJJbMQZ]);}();;
        }
        }();result.pColorAttachments=temp_FzrbieZ;}();
[&]() {
VkAttachmentReference* temp_ewYonQg;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_ewYonQg=NULL;
        return;
        }
    temp_ewYonQg=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int gCebQSr=0; gCebQSr < result.colorAttachmentCount; gCebQSr++){
            [&]() {
temp_ewYonQg[gCebQSr]=deserialize_VkAttachmentReference(name["members"]["pResolveAttachments"]["members"][gCebQSr]);}();;
        }
        }();result.pResolveAttachments=temp_ewYonQg;}();
[&]() {
VkAttachmentReference* temp_qEeGrtR;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_qEeGrtR=NULL;
        return;
        }
    temp_qEeGrtR=(VkAttachmentReference*)malloc(sizeof(VkAttachmentReference));
[&]() {
*(temp_qEeGrtR)=deserialize_VkAttachmentReference(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_qEeGrtR;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_ewegxzI;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_ewegxzI=NULL;
        return;
        }
    temp_ewegxzI=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int AanqwPj=0; AanqwPj < result.preserveAttachmentCount; AanqwPj++){
            [&]() {
temp_ewegxzI[AanqwPj]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][AanqwPj]);}();;
        }
        }();result.pPreserveAttachments=temp_ewegxzI;}();
return result;}

    json serialize_VkSubpassDependency(VkSubpassDependency name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubpass"]=[&]() {
    json return_pXsqIWU=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_FQAHOLg=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_npIVHJb=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_PYwjVrN=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_SNLNcxb=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_ZdnTNXI=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_OEUJSbZ=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
return result;}

    VkSubpassDependency deserialize_VkSubpassDependency(json &name){
        auto result=VkSubpassDependency();
    
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo(VkRenderPassCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VPSOQXi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_oCKlbej=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_ukIMKAI=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_WdFmFvo=json({});
    
        if (name.pAttachments==NULL){
            return_WdFmFvo["null"]=true;
            return return_WdFmFvo;
        }
        
        return_WdFmFvo["members"]={};
        for(int WdFmFvo=0; WdFmFvo < name.attachmentCount; WdFmFvo++){
            json temp;
            temp=[&]() {
    json return_CEUKowG=json({});
    return serialize_VkAttachmentDescription(name.pAttachments[WdFmFvo]);}();
            return_WdFmFvo["members"].push_back(temp);
        }
        return return_WdFmFvo;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_sqKYbrW=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_lJfcDlS=json({});
    
        if (name.pSubpasses==NULL){
            return_lJfcDlS["null"]=true;
            return return_lJfcDlS;
        }
        
        return_lJfcDlS["members"]={};
        for(int lJfcDlS=0; lJfcDlS < name.subpassCount; lJfcDlS++){
            json temp;
            temp=[&]() {
    json return_uTbOpNV=json({});
    return serialize_VkSubpassDescription(name.pSubpasses[lJfcDlS]);}();
            return_lJfcDlS["members"].push_back(temp);
        }
        return return_lJfcDlS;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_ptFpqjU=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_aEzZfBD=json({});
    
        if (name.pDependencies==NULL){
            return_aEzZfBD["null"]=true;
            return return_aEzZfBD;
        }
        
        return_aEzZfBD["members"]={};
        for(int aEzZfBD=0; aEzZfBD < name.dependencyCount; aEzZfBD++){
            json temp;
            temp=[&]() {
    json return_YLTFAwf=json({});
    return serialize_VkSubpassDependency(name.pDependencies[aEzZfBD]);}();
            return_aEzZfBD["members"].push_back(temp);
        }
        return return_aEzZfBD;
        }();
return result;}

    VkRenderPassCreateInfo deserialize_VkRenderPassCreateInfo(json &name){
        auto result=VkRenderPassCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription* temp_DOkGIbO;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_DOkGIbO=NULL;
        return;
        }
    temp_DOkGIbO=(VkAttachmentDescription*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription));
        for (int RGDPxcQ=0; RGDPxcQ < result.attachmentCount; RGDPxcQ++){
            [&]() {
temp_DOkGIbO[RGDPxcQ]=deserialize_VkAttachmentDescription(name["members"]["pAttachments"]["members"][RGDPxcQ]);}();;
        }
        }();result.pAttachments=temp_DOkGIbO;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription* temp_onrBTFg;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_onrBTFg=NULL;
        return;
        }
    temp_onrBTFg=(VkSubpassDescription*)malloc(result.subpassCount*sizeof(VkSubpassDescription));
        for (int SKWcMub=0; SKWcMub < result.subpassCount; SKWcMub++){
            [&]() {
temp_onrBTFg[SKWcMub]=deserialize_VkSubpassDescription(name["members"]["pSubpasses"]["members"][SKWcMub]);}();;
        }
        }();result.pSubpasses=temp_onrBTFg;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency* temp_fWAvGID;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_fWAvGID=NULL;
        return;
        }
    temp_fWAvGID=(VkSubpassDependency*)malloc(result.dependencyCount*sizeof(VkSubpassDependency));
        for (int yotDmZo=0; yotDmZo < result.dependencyCount; yotDmZo++){
            [&]() {
temp_fWAvGID[yotDmZo]=deserialize_VkSubpassDependency(name["members"]["pDependencies"]["members"][yotDmZo]);}();;
        }
        }();result.pDependencies=temp_fWAvGID;}();
return result;}

    json serialize_VkEventCreateInfo(VkEventCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pAmfnVe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_eavUKxc=json({});
    return serialize_VkEventCreateFlags(name.flags);}();
return result;}

    VkEventCreateInfo deserialize_VkEventCreateInfo(json &name){
        auto result=VkEventCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkEventCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkFenceCreateInfo(VkFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oTTDueq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_pZbmbWd=json({});
    return serialize_VkFenceCreateFlags(name.flags);}();
return result;}

    VkFenceCreateInfo deserialize_VkFenceCreateInfo(json &name){
        auto result=VkFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkFenceCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures(VkPhysicalDeviceFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["robustBufferAccess"]=[&]() {
    json return_BJWidVG=json({});
    return_BJWidVG=[&]() {
    json return_NoCifag=json({});
    return serialize_uint32_t(name.robustBufferAccess);}();return return_BJWidVG;}();
result["members"]["fullDrawIndexUint32"]=[&]() {
    json return_omeDChP=json({});
    return_omeDChP=[&]() {
    json return_EtBeDlu=json({});
    return serialize_uint32_t(name.fullDrawIndexUint32);}();return return_omeDChP;}();
result["members"]["imageCubeArray"]=[&]() {
    json return_AlNgsRJ=json({});
    return_AlNgsRJ=[&]() {
    json return_bOOcERL=json({});
    return serialize_uint32_t(name.imageCubeArray);}();return return_AlNgsRJ;}();
result["members"]["independentBlend"]=[&]() {
    json return_KZNXwwH=json({});
    return_KZNXwwH=[&]() {
    json return_sulCmUK=json({});
    return serialize_uint32_t(name.independentBlend);}();return return_KZNXwwH;}();
result["members"]["geometryShader"]=[&]() {
    json return_IqdWKOe=json({});
    return_IqdWKOe=[&]() {
    json return_geBwNTy=json({});
    return serialize_uint32_t(name.geometryShader);}();return return_IqdWKOe;}();
result["members"]["tessellationShader"]=[&]() {
    json return_LqZoOnc=json({});
    return_LqZoOnc=[&]() {
    json return_dbdSxOt=json({});
    return serialize_uint32_t(name.tessellationShader);}();return return_LqZoOnc;}();
result["members"]["sampleRateShading"]=[&]() {
    json return_gPwXjZU=json({});
    return_gPwXjZU=[&]() {
    json return_pjfGHbU=json({});
    return serialize_uint32_t(name.sampleRateShading);}();return return_gPwXjZU;}();
result["members"]["dualSrcBlend"]=[&]() {
    json return_FNrkWUt=json({});
    return_FNrkWUt=[&]() {
    json return_fIVZKUa=json({});
    return serialize_uint32_t(name.dualSrcBlend);}();return return_FNrkWUt;}();
result["members"]["logicOp"]=[&]() {
    json return_EgmWZTZ=json({});
    return_EgmWZTZ=[&]() {
    json return_dWnMtSX=json({});
    return serialize_uint32_t(name.logicOp);}();return return_EgmWZTZ;}();
result["members"]["multiDrawIndirect"]=[&]() {
    json return_ZTZtWYk=json({});
    return_ZTZtWYk=[&]() {
    json return_SrEAhpj=json({});
    return serialize_uint32_t(name.multiDrawIndirect);}();return return_ZTZtWYk;}();
result["members"]["drawIndirectFirstInstance"]=[&]() {
    json return_hRRFFpO=json({});
    return_hRRFFpO=[&]() {
    json return_lqTRoHC=json({});
    return serialize_uint32_t(name.drawIndirectFirstInstance);}();return return_hRRFFpO;}();
result["members"]["depthClamp"]=[&]() {
    json return_UwNIjwx=json({});
    return_UwNIjwx=[&]() {
    json return_BtyLtKP=json({});
    return serialize_uint32_t(name.depthClamp);}();return return_UwNIjwx;}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_hCgSuOe=json({});
    return_hCgSuOe=[&]() {
    json return_bDGDZkf=json({});
    return serialize_uint32_t(name.depthBiasClamp);}();return return_hCgSuOe;}();
result["members"]["fillModeNonSolid"]=[&]() {
    json return_kgcUgQu=json({});
    return_kgcUgQu=[&]() {
    json return_OTMjALu=json({});
    return serialize_uint32_t(name.fillModeNonSolid);}();return return_kgcUgQu;}();
result["members"]["depthBounds"]=[&]() {
    json return_lRBfjHj=json({});
    return_lRBfjHj=[&]() {
    json return_omMFTOK=json({});
    return serialize_uint32_t(name.depthBounds);}();return return_lRBfjHj;}();
result["members"]["wideLines"]=[&]() {
    json return_gUaFEwc=json({});
    return_gUaFEwc=[&]() {
    json return_FLNQbEj=json({});
    return serialize_uint32_t(name.wideLines);}();return return_gUaFEwc;}();
result["members"]["largePoints"]=[&]() {
    json return_YgldnrB=json({});
    return_YgldnrB=[&]() {
    json return_QzEwVmp=json({});
    return serialize_uint32_t(name.largePoints);}();return return_YgldnrB;}();
result["members"]["alphaToOne"]=[&]() {
    json return_XxDbLPr=json({});
    return_XxDbLPr=[&]() {
    json return_vyGuIIm=json({});
    return serialize_uint32_t(name.alphaToOne);}();return return_XxDbLPr;}();
result["members"]["multiViewport"]=[&]() {
    json return_xmmfXzJ=json({});
    return_xmmfXzJ=[&]() {
    json return_AHIbOQv=json({});
    return serialize_uint32_t(name.multiViewport);}();return return_xmmfXzJ;}();
result["members"]["samplerAnisotropy"]=[&]() {
    json return_nomsDLe=json({});
    return_nomsDLe=[&]() {
    json return_kYvOMfJ=json({});
    return serialize_uint32_t(name.samplerAnisotropy);}();return return_nomsDLe;}();
result["members"]["textureCompressionETC2"]=[&]() {
    json return_pCZvfHW=json({});
    return_pCZvfHW=[&]() {
    json return_eEJAYIO=json({});
    return serialize_uint32_t(name.textureCompressionETC2);}();return return_pCZvfHW;}();
result["members"]["textureCompressionASTC_LDR"]=[&]() {
    json return_HRfuYXe=json({});
    return_HRfuYXe=[&]() {
    json return_rzHyQir=json({});
    return serialize_uint32_t(name.textureCompressionASTC_LDR);}();return return_HRfuYXe;}();
result["members"]["textureCompressionBC"]=[&]() {
    json return_NAPQuQr=json({});
    return_NAPQuQr=[&]() {
    json return_kkqsfmW=json({});
    return serialize_uint32_t(name.textureCompressionBC);}();return return_NAPQuQr;}();
result["members"]["occlusionQueryPrecise"]=[&]() {
    json return_rlMqDEH=json({});
    return_rlMqDEH=[&]() {
    json return_XoFvykC=json({});
    return serialize_uint32_t(name.occlusionQueryPrecise);}();return return_rlMqDEH;}();
result["members"]["pipelineStatisticsQuery"]=[&]() {
    json return_weTmMqL=json({});
    return_weTmMqL=[&]() {
    json return_gZtHKMS=json({});
    return serialize_uint32_t(name.pipelineStatisticsQuery);}();return return_weTmMqL;}();
result["members"]["vertexPipelineStoresAndAtomics"]=[&]() {
    json return_QlREzvf=json({});
    return_QlREzvf=[&]() {
    json return_YDlWqlh=json({});
    return serialize_uint32_t(name.vertexPipelineStoresAndAtomics);}();return return_QlREzvf;}();
result["members"]["fragmentStoresAndAtomics"]=[&]() {
    json return_QxQLmaD=json({});
    return_QxQLmaD=[&]() {
    json return_pshBCVq=json({});
    return serialize_uint32_t(name.fragmentStoresAndAtomics);}();return return_QxQLmaD;}();
result["members"]["shaderTessellationAndGeometryPointSize"]=[&]() {
    json return_HdgEThj=json({});
    return_HdgEThj=[&]() {
    json return_hdxZDri=json({});
    return serialize_uint32_t(name.shaderTessellationAndGeometryPointSize);}();return return_HdgEThj;}();
result["members"]["shaderImageGatherExtended"]=[&]() {
    json return_nIHvLzn=json({});
    return_nIHvLzn=[&]() {
    json return_IEFghsq=json({});
    return serialize_uint32_t(name.shaderImageGatherExtended);}();return return_nIHvLzn;}();
result["members"]["shaderStorageImageExtendedFormats"]=[&]() {
    json return_sudmGLe=json({});
    return_sudmGLe=[&]() {
    json return_SgqZBlk=json({});
    return serialize_uint32_t(name.shaderStorageImageExtendedFormats);}();return return_sudmGLe;}();
result["members"]["shaderStorageImageMultisample"]=[&]() {
    json return_xbmXQsf=json({});
    return_xbmXQsf=[&]() {
    json return_dzpTnRi=json({});
    return serialize_uint32_t(name.shaderStorageImageMultisample);}();return return_xbmXQsf;}();
result["members"]["shaderStorageImageReadWithoutFormat"]=[&]() {
    json return_CSjJCpL=json({});
    return_CSjJCpL=[&]() {
    json return_PnmXDUm=json({});
    return serialize_uint32_t(name.shaderStorageImageReadWithoutFormat);}();return return_CSjJCpL;}();
result["members"]["shaderStorageImageWriteWithoutFormat"]=[&]() {
    json return_pPmrpMJ=json({});
    return_pPmrpMJ=[&]() {
    json return_vtqbBER=json({});
    return serialize_uint32_t(name.shaderStorageImageWriteWithoutFormat);}();return return_pPmrpMJ;}();
result["members"]["shaderUniformBufferArrayDynamicIndexing"]=[&]() {
    json return_YygDPsR=json({});
    return_YygDPsR=[&]() {
    json return_ZfTOZag=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayDynamicIndexing);}();return return_YygDPsR;}();
result["members"]["shaderSampledImageArrayDynamicIndexing"]=[&]() {
    json return_nvVlxSg=json({});
    return_nvVlxSg=[&]() {
    json return_QVukEAc=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayDynamicIndexing);}();return return_nvVlxSg;}();
result["members"]["shaderStorageBufferArrayDynamicIndexing"]=[&]() {
    json return_UmqXYiU=json({});
    return_UmqXYiU=[&]() {
    json return_bHBfuXF=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayDynamicIndexing);}();return return_UmqXYiU;}();
result["members"]["shaderStorageImageArrayDynamicIndexing"]=[&]() {
    json return_KPnfneM=json({});
    return_KPnfneM=[&]() {
    json return_zBZxdWO=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayDynamicIndexing);}();return return_KPnfneM;}();
result["members"]["shaderClipDistance"]=[&]() {
    json return_xfAXGbt=json({});
    return_xfAXGbt=[&]() {
    json return_xStBcfg=json({});
    return serialize_uint32_t(name.shaderClipDistance);}();return return_xfAXGbt;}();
result["members"]["shaderCullDistance"]=[&]() {
    json return_XRToRad=json({});
    return_XRToRad=[&]() {
    json return_GGdicUg=json({});
    return serialize_uint32_t(name.shaderCullDistance);}();return return_XRToRad;}();
result["members"]["shaderFloat64"]=[&]() {
    json return_PNDgcdh=json({});
    return_PNDgcdh=[&]() {
    json return_lRLGzUb=json({});
    return serialize_uint32_t(name.shaderFloat64);}();return return_PNDgcdh;}();
result["members"]["shaderInt64"]=[&]() {
    json return_fJDrQik=json({});
    return_fJDrQik=[&]() {
    json return_qumNwUc=json({});
    return serialize_uint32_t(name.shaderInt64);}();return return_fJDrQik;}();
result["members"]["shaderInt16"]=[&]() {
    json return_GRyWALo=json({});
    return_GRyWALo=[&]() {
    json return_nEJJunc=json({});
    return serialize_uint32_t(name.shaderInt16);}();return return_GRyWALo;}();
result["members"]["shaderResourceResidency"]=[&]() {
    json return_Nfqdesl=json({});
    return_Nfqdesl=[&]() {
    json return_vYhChmc=json({});
    return serialize_uint32_t(name.shaderResourceResidency);}();return return_Nfqdesl;}();
result["members"]["shaderResourceMinLod"]=[&]() {
    json return_RjHSGlu=json({});
    return_RjHSGlu=[&]() {
    json return_vUPqwVd=json({});
    return serialize_uint32_t(name.shaderResourceMinLod);}();return return_RjHSGlu;}();
result["members"]["sparseBinding"]=[&]() {
    json return_lWSwcRN=json({});
    return_lWSwcRN=[&]() {
    json return_BcAMlrk=json({});
    return serialize_uint32_t(name.sparseBinding);}();return return_lWSwcRN;}();
result["members"]["sparseResidencyBuffer"]=[&]() {
    json return_pyTcCuk=json({});
    return_pyTcCuk=[&]() {
    json return_EGMcExq=json({});
    return serialize_uint32_t(name.sparseResidencyBuffer);}();return return_pyTcCuk;}();
result["members"]["sparseResidencyImage2D"]=[&]() {
    json return_fggcGHY=json({});
    return_fggcGHY=[&]() {
    json return_cnUqtEr=json({});
    return serialize_uint32_t(name.sparseResidencyImage2D);}();return return_fggcGHY;}();
result["members"]["sparseResidencyImage3D"]=[&]() {
    json return_mKddBzU=json({});
    return_mKddBzU=[&]() {
    json return_NtOMvmB=json({});
    return serialize_uint32_t(name.sparseResidencyImage3D);}();return return_mKddBzU;}();
result["members"]["sparseResidency2Samples"]=[&]() {
    json return_YiGxStf=json({});
    return_YiGxStf=[&]() {
    json return_wbVXdLp=json({});
    return serialize_uint32_t(name.sparseResidency2Samples);}();return return_YiGxStf;}();
result["members"]["sparseResidency4Samples"]=[&]() {
    json return_NjGSjrR=json({});
    return_NjGSjrR=[&]() {
    json return_tkWtWkt=json({});
    return serialize_uint32_t(name.sparseResidency4Samples);}();return return_NjGSjrR;}();
result["members"]["sparseResidency8Samples"]=[&]() {
    json return_ohEYYiU=json({});
    return_ohEYYiU=[&]() {
    json return_nYHUbeN=json({});
    return serialize_uint32_t(name.sparseResidency8Samples);}();return return_ohEYYiU;}();
result["members"]["sparseResidency16Samples"]=[&]() {
    json return_CWBHwEX=json({});
    return_CWBHwEX=[&]() {
    json return_qGLgrco=json({});
    return serialize_uint32_t(name.sparseResidency16Samples);}();return return_CWBHwEX;}();
result["members"]["sparseResidencyAliased"]=[&]() {
    json return_Wusglkj=json({});
    return_Wusglkj=[&]() {
    json return_hfiealE=json({});
    return serialize_uint32_t(name.sparseResidencyAliased);}();return return_Wusglkj;}();
result["members"]["variableMultisampleRate"]=[&]() {
    json return_bELXRIa=json({});
    return_bELXRIa=[&]() {
    json return_FtDyqRF=json({});
    return serialize_uint32_t(name.variableMultisampleRate);}();return return_bELXRIa;}();
result["members"]["inheritedQueries"]=[&]() {
    json return_AhFZlew=json({});
    return_AhFZlew=[&]() {
    json return_ylWIOHj=json({});
    return serialize_uint32_t(name.inheritedQueries);}();return return_AhFZlew;}();
return result;}

    VkPhysicalDeviceFeatures deserialize_VkPhysicalDeviceFeatures(json &name){
        auto result=VkPhysicalDeviceFeatures();
    
[&]() {
[&]() {
result.robustBufferAccess=deserialize_uint32_t(name["members"]["robustBufferAccess"]);}();}();
[&]() {
[&]() {
result.fullDrawIndexUint32=deserialize_uint32_t(name["members"]["fullDrawIndexUint32"]);}();}();
[&]() {
[&]() {
result.imageCubeArray=deserialize_uint32_t(name["members"]["imageCubeArray"]);}();}();
[&]() {
[&]() {
result.independentBlend=deserialize_uint32_t(name["members"]["independentBlend"]);}();}();
[&]() {
[&]() {
result.geometryShader=deserialize_uint32_t(name["members"]["geometryShader"]);}();}();
[&]() {
[&]() {
result.tessellationShader=deserialize_uint32_t(name["members"]["tessellationShader"]);}();}();
[&]() {
[&]() {
result.sampleRateShading=deserialize_uint32_t(name["members"]["sampleRateShading"]);}();}();
[&]() {
[&]() {
result.dualSrcBlend=deserialize_uint32_t(name["members"]["dualSrcBlend"]);}();}();
[&]() {
[&]() {
result.logicOp=deserialize_uint32_t(name["members"]["logicOp"]);}();}();
[&]() {
[&]() {
result.multiDrawIndirect=deserialize_uint32_t(name["members"]["multiDrawIndirect"]);}();}();
[&]() {
[&]() {
result.drawIndirectFirstInstance=deserialize_uint32_t(name["members"]["drawIndirectFirstInstance"]);}();}();
[&]() {
[&]() {
result.depthClamp=deserialize_uint32_t(name["members"]["depthClamp"]);}();}();
[&]() {
[&]() {
result.depthBiasClamp=deserialize_uint32_t(name["members"]["depthBiasClamp"]);}();}();
[&]() {
[&]() {
result.fillModeNonSolid=deserialize_uint32_t(name["members"]["fillModeNonSolid"]);}();}();
[&]() {
[&]() {
result.depthBounds=deserialize_uint32_t(name["members"]["depthBounds"]);}();}();
[&]() {
[&]() {
result.wideLines=deserialize_uint32_t(name["members"]["wideLines"]);}();}();
[&]() {
[&]() {
result.largePoints=deserialize_uint32_t(name["members"]["largePoints"]);}();}();
[&]() {
[&]() {
result.alphaToOne=deserialize_uint32_t(name["members"]["alphaToOne"]);}();}();
[&]() {
[&]() {
result.multiViewport=deserialize_uint32_t(name["members"]["multiViewport"]);}();}();
[&]() {
[&]() {
result.samplerAnisotropy=deserialize_uint32_t(name["members"]["samplerAnisotropy"]);}();}();
[&]() {
[&]() {
result.textureCompressionETC2=deserialize_uint32_t(name["members"]["textureCompressionETC2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_LDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_LDR"]);}();}();
[&]() {
[&]() {
result.textureCompressionBC=deserialize_uint32_t(name["members"]["textureCompressionBC"]);}();}();
[&]() {
[&]() {
result.occlusionQueryPrecise=deserialize_uint32_t(name["members"]["occlusionQueryPrecise"]);}();}();
[&]() {
[&]() {
result.pipelineStatisticsQuery=deserialize_uint32_t(name["members"]["pipelineStatisticsQuery"]);}();}();
[&]() {
[&]() {
result.vertexPipelineStoresAndAtomics=deserialize_uint32_t(name["members"]["vertexPipelineStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.fragmentStoresAndAtomics=deserialize_uint32_t(name["members"]["fragmentStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.shaderTessellationAndGeometryPointSize=deserialize_uint32_t(name["members"]["shaderTessellationAndGeometryPointSize"]);}();}();
[&]() {
[&]() {
result.shaderImageGatherExtended=deserialize_uint32_t(name["members"]["shaderImageGatherExtended"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageExtendedFormats=deserialize_uint32_t(name["members"]["shaderStorageImageExtendedFormats"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageMultisample=deserialize_uint32_t(name["members"]["shaderStorageImageMultisample"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageReadWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageReadWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageWriteWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageWriteWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderClipDistance=deserialize_uint32_t(name["members"]["shaderClipDistance"]);}();}();
[&]() {
[&]() {
result.shaderCullDistance=deserialize_uint32_t(name["members"]["shaderCullDistance"]);}();}();
[&]() {
[&]() {
result.shaderFloat64=deserialize_uint32_t(name["members"]["shaderFloat64"]);}();}();
[&]() {
[&]() {
result.shaderInt64=deserialize_uint32_t(name["members"]["shaderInt64"]);}();}();
[&]() {
[&]() {
result.shaderInt16=deserialize_uint32_t(name["members"]["shaderInt16"]);}();}();
[&]() {
[&]() {
result.shaderResourceResidency=deserialize_uint32_t(name["members"]["shaderResourceResidency"]);}();}();
[&]() {
[&]() {
result.shaderResourceMinLod=deserialize_uint32_t(name["members"]["shaderResourceMinLod"]);}();}();
[&]() {
[&]() {
result.sparseBinding=deserialize_uint32_t(name["members"]["sparseBinding"]);}();}();
[&]() {
[&]() {
result.sparseResidencyBuffer=deserialize_uint32_t(name["members"]["sparseResidencyBuffer"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage2D=deserialize_uint32_t(name["members"]["sparseResidencyImage2D"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage3D=deserialize_uint32_t(name["members"]["sparseResidencyImage3D"]);}();}();
[&]() {
[&]() {
result.sparseResidency2Samples=deserialize_uint32_t(name["members"]["sparseResidency2Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency4Samples=deserialize_uint32_t(name["members"]["sparseResidency4Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency8Samples=deserialize_uint32_t(name["members"]["sparseResidency8Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency16Samples=deserialize_uint32_t(name["members"]["sparseResidency16Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidencyAliased=deserialize_uint32_t(name["members"]["sparseResidencyAliased"]);}();}();
[&]() {
[&]() {
result.variableMultisampleRate=deserialize_uint32_t(name["members"]["variableMultisampleRate"]);}();}();
[&]() {
[&]() {
result.inheritedQueries=deserialize_uint32_t(name["members"]["inheritedQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSparseProperties(VkPhysicalDeviceSparseProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["residencyStandard2DBlockShape"]=[&]() {
    json return_jWQImNz=json({});
    return_jWQImNz=[&]() {
    json return_tXEvcBy=json({});
    return serialize_uint32_t(name.residencyStandard2DBlockShape);}();return return_jWQImNz;}();
result["members"]["residencyStandard2DMultisampleBlockShape"]=[&]() {
    json return_YIMmXBJ=json({});
    return_YIMmXBJ=[&]() {
    json return_vFWsmij=json({});
    return serialize_uint32_t(name.residencyStandard2DMultisampleBlockShape);}();return return_YIMmXBJ;}();
result["members"]["residencyStandard3DBlockShape"]=[&]() {
    json return_qkEAmhy=json({});
    return_qkEAmhy=[&]() {
    json return_RNIQyVg=json({});
    return serialize_uint32_t(name.residencyStandard3DBlockShape);}();return return_qkEAmhy;}();
result["members"]["residencyAlignedMipSize"]=[&]() {
    json return_aPPnadL=json({});
    return_aPPnadL=[&]() {
    json return_sIxDUUB=json({});
    return serialize_uint32_t(name.residencyAlignedMipSize);}();return return_aPPnadL;}();
result["members"]["residencyNonResidentStrict"]=[&]() {
    json return_WfpHexd=json({});
    return_WfpHexd=[&]() {
    json return_nrfXsWD=json({});
    return serialize_uint32_t(name.residencyNonResidentStrict);}();return return_WfpHexd;}();
return result;}

    VkPhysicalDeviceSparseProperties deserialize_VkPhysicalDeviceSparseProperties(json &name){
        auto result=VkPhysicalDeviceSparseProperties();
    
[&]() {
[&]() {
result.residencyStandard2DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard2DMultisampleBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DMultisampleBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard3DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard3DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyAlignedMipSize=deserialize_uint32_t(name["members"]["residencyAlignedMipSize"]);}();}();
[&]() {
[&]() {
result.residencyNonResidentStrict=deserialize_uint32_t(name["members"]["residencyNonResidentStrict"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLimits(VkPhysicalDeviceLimits name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxImageDimension1D"]=[&]() {
    json return_ygrGKQx=json({});
    return serialize_uint32_t(name.maxImageDimension1D);}();
result["members"]["maxImageDimension2D"]=[&]() {
    json return_OGyDihw=json({});
    return serialize_uint32_t(name.maxImageDimension2D);}();
result["members"]["maxImageDimension3D"]=[&]() {
    json return_ZUWQYsz=json({});
    return serialize_uint32_t(name.maxImageDimension3D);}();
result["members"]["maxImageDimensionCube"]=[&]() {
    json return_HHsfaLF=json({});
    return serialize_uint32_t(name.maxImageDimensionCube);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_tUEPcCC=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["maxTexelBufferElements"]=[&]() {
    json return_lfXrSXI=json({});
    return serialize_uint32_t(name.maxTexelBufferElements);}();
result["members"]["maxUniformBufferRange"]=[&]() {
    json return_kqlPjgk=json({});
    return serialize_uint32_t(name.maxUniformBufferRange);}();
result["members"]["maxStorageBufferRange"]=[&]() {
    json return_lPhsYBG=json({});
    return serialize_uint32_t(name.maxStorageBufferRange);}();
result["members"]["maxPushConstantsSize"]=[&]() {
    json return_IseqPZo=json({});
    return serialize_uint32_t(name.maxPushConstantsSize);}();
result["members"]["maxMemoryAllocationCount"]=[&]() {
    json return_yJMPZyv=json({});
    return serialize_uint32_t(name.maxMemoryAllocationCount);}();
result["members"]["maxSamplerAllocationCount"]=[&]() {
    json return_mXLhmQt=json({});
    return serialize_uint32_t(name.maxSamplerAllocationCount);}();
result["members"]["bufferImageGranularity"]=[&]() {
    json return_RzkgCoZ=json({});
    return_RzkgCoZ=[&]() {
    json return_WCeKBsz=json({});
    return serialize_uint64_t(name.bufferImageGranularity);}();return return_RzkgCoZ;}();
result["members"]["sparseAddressSpaceSize"]=[&]() {
    json return_eTyPeUx=json({});
    return_eTyPeUx=[&]() {
    json return_hUMnYyb=json({});
    return serialize_uint64_t(name.sparseAddressSpaceSize);}();return return_eTyPeUx;}();
result["members"]["maxBoundDescriptorSets"]=[&]() {
    json return_lUkTpKW=json({});
    return serialize_uint32_t(name.maxBoundDescriptorSets);}();
result["members"]["maxPerStageDescriptorSamplers"]=[&]() {
    json return_MlaWqkX=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSamplers);}();
result["members"]["maxPerStageDescriptorUniformBuffers"]=[&]() {
    json return_ndELJux=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUniformBuffers);}();
result["members"]["maxPerStageDescriptorStorageBuffers"]=[&]() {
    json return_lwjRHuV=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageBuffers);}();
result["members"]["maxPerStageDescriptorSampledImages"]=[&]() {
    json return_GrpWHyk=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSampledImages);}();
result["members"]["maxPerStageDescriptorStorageImages"]=[&]() {
    json return_zKzDoSt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageImages);}();
result["members"]["maxPerStageDescriptorInputAttachments"]=[&]() {
    json return_VJkqIIe=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInputAttachments);}();
result["members"]["maxPerStageResources"]=[&]() {
    json return_exmroaY=json({});
    return serialize_uint32_t(name.maxPerStageResources);}();
result["members"]["maxDescriptorSetSamplers"]=[&]() {
    json return_VoOFajs=json({});
    return serialize_uint32_t(name.maxDescriptorSetSamplers);}();
result["members"]["maxDescriptorSetUniformBuffers"]=[&]() {
    json return_rkQaSdq=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffers);}();
result["members"]["maxDescriptorSetUniformBuffersDynamic"]=[&]() {
    json return_UrNiYaM=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetStorageBuffers"]=[&]() {
    json return_ecYziQy=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffers);}();
result["members"]["maxDescriptorSetStorageBuffersDynamic"]=[&]() {
    json return_rqfMRpD=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetSampledImages"]=[&]() {
    json return_zxPxgRp=json({});
    return serialize_uint32_t(name.maxDescriptorSetSampledImages);}();
result["members"]["maxDescriptorSetStorageImages"]=[&]() {
    json return_pHLrYrt=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageImages);}();
result["members"]["maxDescriptorSetInputAttachments"]=[&]() {
    json return_JoBcLjR=json({});
    return serialize_uint32_t(name.maxDescriptorSetInputAttachments);}();
result["members"]["maxVertexInputAttributes"]=[&]() {
    json return_whuUNul=json({});
    return serialize_uint32_t(name.maxVertexInputAttributes);}();
result["members"]["maxVertexInputBindings"]=[&]() {
    json return_ucXlqgD=json({});
    return serialize_uint32_t(name.maxVertexInputBindings);}();
result["members"]["maxVertexInputAttributeOffset"]=[&]() {
    json return_KwHeUTM=json({});
    return serialize_uint32_t(name.maxVertexInputAttributeOffset);}();
result["members"]["maxVertexInputBindingStride"]=[&]() {
    json return_jpeBrvs=json({});
    return serialize_uint32_t(name.maxVertexInputBindingStride);}();
result["members"]["maxVertexOutputComponents"]=[&]() {
    json return_rqTSMlq=json({});
    return serialize_uint32_t(name.maxVertexOutputComponents);}();
result["members"]["maxTessellationGenerationLevel"]=[&]() {
    json return_FzHjlCR=json({});
    return serialize_uint32_t(name.maxTessellationGenerationLevel);}();
result["members"]["maxTessellationPatchSize"]=[&]() {
    json return_JljWnej=json({});
    return serialize_uint32_t(name.maxTessellationPatchSize);}();
result["members"]["maxTessellationControlPerVertexInputComponents"]=[&]() {
    json return_aXKESWV=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexInputComponents);}();
result["members"]["maxTessellationControlPerVertexOutputComponents"]=[&]() {
    json return_KEfKtoe=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexOutputComponents);}();
result["members"]["maxTessellationControlPerPatchOutputComponents"]=[&]() {
    json return_kWukTJc=json({});
    return serialize_uint32_t(name.maxTessellationControlPerPatchOutputComponents);}();
result["members"]["maxTessellationControlTotalOutputComponents"]=[&]() {
    json return_iuuMnfG=json({});
    return serialize_uint32_t(name.maxTessellationControlTotalOutputComponents);}();
result["members"]["maxTessellationEvaluationInputComponents"]=[&]() {
    json return_CJXjNZX=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationInputComponents);}();
result["members"]["maxTessellationEvaluationOutputComponents"]=[&]() {
    json return_slEpHhz=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationOutputComponents);}();
result["members"]["maxGeometryShaderInvocations"]=[&]() {
    json return_XWwcICd=json({});
    return serialize_uint32_t(name.maxGeometryShaderInvocations);}();
result["members"]["maxGeometryInputComponents"]=[&]() {
    json return_kCszfQO=json({});
    return serialize_uint32_t(name.maxGeometryInputComponents);}();
result["members"]["maxGeometryOutputComponents"]=[&]() {
    json return_tKrTCUI=json({});
    return serialize_uint32_t(name.maxGeometryOutputComponents);}();
result["members"]["maxGeometryOutputVertices"]=[&]() {
    json return_pyXJwSj=json({});
    return serialize_uint32_t(name.maxGeometryOutputVertices);}();
result["members"]["maxGeometryTotalOutputComponents"]=[&]() {
    json return_DqebazT=json({});
    return serialize_uint32_t(name.maxGeometryTotalOutputComponents);}();
result["members"]["maxFragmentInputComponents"]=[&]() {
    json return_jMiwehC=json({});
    return serialize_uint32_t(name.maxFragmentInputComponents);}();
result["members"]["maxFragmentOutputAttachments"]=[&]() {
    json return_oOsuSru=json({});
    return serialize_uint32_t(name.maxFragmentOutputAttachments);}();
result["members"]["maxFragmentDualSrcAttachments"]=[&]() {
    json return_KxaGrIC=json({});
    return serialize_uint32_t(name.maxFragmentDualSrcAttachments);}();
result["members"]["maxFragmentCombinedOutputResources"]=[&]() {
    json return_uYCzIqd=json({});
    return serialize_uint32_t(name.maxFragmentCombinedOutputResources);}();
result["members"]["maxComputeSharedMemorySize"]=[&]() {
    json return_VHoTajw=json({});
    return serialize_uint32_t(name.maxComputeSharedMemorySize);}();
result["members"]["maxComputeWorkGroupCount"]=[&]() {
    json return_ZnHHwNj=json({});
    
        return_ZnHHwNj["members"]={};
        for(int ZnHHwNj=0; ZnHHwNj < 3; ZnHHwNj++){
            json temp;
            temp=[&]() {
    json return_flwsyzq=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupCount[ZnHHwNj]);}();
            return_ZnHHwNj["members"].push_back(temp);
        }
        return return_ZnHHwNj;
        }();
result["members"]["maxComputeWorkGroupInvocations"]=[&]() {
    json return_hsxHQpC=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupInvocations);}();
result["members"]["maxComputeWorkGroupSize"]=[&]() {
    json return_bFArgQU=json({});
    
        return_bFArgQU["members"]={};
        for(int bFArgQU=0; bFArgQU < 3; bFArgQU++){
            json temp;
            temp=[&]() {
    json return_BHqOYFC=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupSize[bFArgQU]);}();
            return_bFArgQU["members"].push_back(temp);
        }
        return return_bFArgQU;
        }();
result["members"]["subPixelPrecisionBits"]=[&]() {
    json return_zIqBBQm=json({});
    return serialize_uint32_t(name.subPixelPrecisionBits);}();
result["members"]["subTexelPrecisionBits"]=[&]() {
    json return_OJNlNAt=json({});
    return serialize_uint32_t(name.subTexelPrecisionBits);}();
result["members"]["mipmapPrecisionBits"]=[&]() {
    json return_upvgzRF=json({});
    return serialize_uint32_t(name.mipmapPrecisionBits);}();
result["members"]["maxDrawIndexedIndexValue"]=[&]() {
    json return_AEoxZNl=json({});
    return serialize_uint32_t(name.maxDrawIndexedIndexValue);}();
result["members"]["maxDrawIndirectCount"]=[&]() {
    json return_iHdkdZu=json({});
    return serialize_uint32_t(name.maxDrawIndirectCount);}();
result["members"]["maxSamplerLodBias"]=[&]() {
    json return_RpPkocp=json({});
    return serialize_float(name.maxSamplerLodBias);}();
result["members"]["maxSamplerAnisotropy"]=[&]() {
    json return_PAzGhjX=json({});
    return serialize_float(name.maxSamplerAnisotropy);}();
result["members"]["maxViewports"]=[&]() {
    json return_ODYrFAW=json({});
    return serialize_uint32_t(name.maxViewports);}();
result["members"]["maxViewportDimensions"]=[&]() {
    json return_eapNzSK=json({});
    
        return_eapNzSK["members"]={};
        for(int eapNzSK=0; eapNzSK < 2; eapNzSK++){
            json temp;
            temp=[&]() {
    json return_yCWfjAm=json({});
    return serialize_uint32_t(name.maxViewportDimensions[eapNzSK]);}();
            return_eapNzSK["members"].push_back(temp);
        }
        return return_eapNzSK;
        }();
result["members"]["viewportBoundsRange"]=[&]() {
    json return_FYQErJN=json({});
    
        return_FYQErJN["members"]={};
        for(int FYQErJN=0; FYQErJN < 2; FYQErJN++){
            json temp;
            temp=[&]() {
    json return_qdzuwKq=json({});
    return serialize_float(name.viewportBoundsRange[FYQErJN]);}();
            return_FYQErJN["members"].push_back(temp);
        }
        return return_FYQErJN;
        }();
result["members"]["viewportSubPixelBits"]=[&]() {
    json return_ugydWdo=json({});
    return serialize_uint32_t(name.viewportSubPixelBits);}();
result["members"]["minMemoryMapAlignment"]=[&]() {
    json return_ysoeVqE=json({});
    return serialize_size_t(name.minMemoryMapAlignment);}();
result["members"]["minTexelBufferOffsetAlignment"]=[&]() {
    json return_VXkMIXL=json({});
    return_VXkMIXL=[&]() {
    json return_ACkLqPU=json({});
    return serialize_uint64_t(name.minTexelBufferOffsetAlignment);}();return return_VXkMIXL;}();
result["members"]["minUniformBufferOffsetAlignment"]=[&]() {
    json return_QEfjUOg=json({});
    return_QEfjUOg=[&]() {
    json return_NFudcLs=json({});
    return serialize_uint64_t(name.minUniformBufferOffsetAlignment);}();return return_QEfjUOg;}();
result["members"]["minStorageBufferOffsetAlignment"]=[&]() {
    json return_micqwKl=json({});
    return_micqwKl=[&]() {
    json return_jtTiNrx=json({});
    return serialize_uint64_t(name.minStorageBufferOffsetAlignment);}();return return_micqwKl;}();
result["members"]["minTexelOffset"]=[&]() {
    json return_cPZMtDu=json({});
    return serialize_int32_t(name.minTexelOffset);}();
result["members"]["maxTexelOffset"]=[&]() {
    json return_BOzTboT=json({});
    return serialize_uint32_t(name.maxTexelOffset);}();
result["members"]["minTexelGatherOffset"]=[&]() {
    json return_KqRrvjr=json({});
    return serialize_int32_t(name.minTexelGatherOffset);}();
result["members"]["maxTexelGatherOffset"]=[&]() {
    json return_vXCtCTQ=json({});
    return serialize_uint32_t(name.maxTexelGatherOffset);}();
result["members"]["minInterpolationOffset"]=[&]() {
    json return_OLMbLcu=json({});
    return serialize_float(name.minInterpolationOffset);}();
result["members"]["maxInterpolationOffset"]=[&]() {
    json return_iruAIQZ=json({});
    return serialize_float(name.maxInterpolationOffset);}();
result["members"]["subPixelInterpolationOffsetBits"]=[&]() {
    json return_mgKTKqE=json({});
    return serialize_uint32_t(name.subPixelInterpolationOffsetBits);}();
result["members"]["maxFramebufferWidth"]=[&]() {
    json return_klwhoxn=json({});
    return serialize_uint32_t(name.maxFramebufferWidth);}();
result["members"]["maxFramebufferHeight"]=[&]() {
    json return_bPCAxJx=json({});
    return serialize_uint32_t(name.maxFramebufferHeight);}();
result["members"]["maxFramebufferLayers"]=[&]() {
    json return_DNoZqAZ=json({});
    return serialize_uint32_t(name.maxFramebufferLayers);}();
result["members"]["framebufferColorSampleCounts"]=[&]() {
    json return_eVuMYzK=json({});
    return serialize_VkSampleCountFlags(name.framebufferColorSampleCounts);}();
result["members"]["framebufferDepthSampleCounts"]=[&]() {
    json return_VxHaeEX=json({});
    return serialize_VkSampleCountFlags(name.framebufferDepthSampleCounts);}();
result["members"]["framebufferStencilSampleCounts"]=[&]() {
    json return_bOXJFOr=json({});
    return serialize_VkSampleCountFlags(name.framebufferStencilSampleCounts);}();
result["members"]["framebufferNoAttachmentsSampleCounts"]=[&]() {
    json return_bEodWCn=json({});
    return serialize_VkSampleCountFlags(name.framebufferNoAttachmentsSampleCounts);}();
result["members"]["maxColorAttachments"]=[&]() {
    json return_UsRRueE=json({});
    return serialize_uint32_t(name.maxColorAttachments);}();
result["members"]["sampledImageColorSampleCounts"]=[&]() {
    json return_lLDldce=json({});
    return serialize_VkSampleCountFlags(name.sampledImageColorSampleCounts);}();
result["members"]["sampledImageIntegerSampleCounts"]=[&]() {
    json return_orPbRJK=json({});
    return serialize_VkSampleCountFlags(name.sampledImageIntegerSampleCounts);}();
result["members"]["sampledImageDepthSampleCounts"]=[&]() {
    json return_BmRuwyt=json({});
    return serialize_VkSampleCountFlags(name.sampledImageDepthSampleCounts);}();
result["members"]["sampledImageStencilSampleCounts"]=[&]() {
    json return_wVcIWjV=json({});
    return serialize_VkSampleCountFlags(name.sampledImageStencilSampleCounts);}();
result["members"]["storageImageSampleCounts"]=[&]() {
    json return_ZNIjcGU=json({});
    return serialize_VkSampleCountFlags(name.storageImageSampleCounts);}();
result["members"]["maxSampleMaskWords"]=[&]() {
    json return_ZIIUFlu=json({});
    return serialize_uint32_t(name.maxSampleMaskWords);}();
result["members"]["timestampComputeAndGraphics"]=[&]() {
    json return_IOryCKe=json({});
    return_IOryCKe=[&]() {
    json return_pKkAMCp=json({});
    return serialize_uint32_t(name.timestampComputeAndGraphics);}();return return_IOryCKe;}();
result["members"]["timestampPeriod"]=[&]() {
    json return_dTEjCiT=json({});
    return serialize_float(name.timestampPeriod);}();
result["members"]["maxClipDistances"]=[&]() {
    json return_CpWTYik=json({});
    return serialize_uint32_t(name.maxClipDistances);}();
result["members"]["maxCullDistances"]=[&]() {
    json return_MjiXyZY=json({});
    return serialize_uint32_t(name.maxCullDistances);}();
result["members"]["maxCombinedClipAndCullDistances"]=[&]() {
    json return_ddNafwa=json({});
    return serialize_uint32_t(name.maxCombinedClipAndCullDistances);}();
result["members"]["discreteQueuePriorities"]=[&]() {
    json return_AaPREmM=json({});
    return serialize_uint32_t(name.discreteQueuePriorities);}();
result["members"]["pointSizeRange"]=[&]() {
    json return_YnFHven=json({});
    
        return_YnFHven["members"]={};
        for(int YnFHven=0; YnFHven < 2; YnFHven++){
            json temp;
            temp=[&]() {
    json return_inESrAH=json({});
    return serialize_float(name.pointSizeRange[YnFHven]);}();
            return_YnFHven["members"].push_back(temp);
        }
        return return_YnFHven;
        }();

            printf("%f\n",name.lineWidthRange[0]);
            printf("%f\n",name.lineWidthRange[1]);
            
result["members"]["lineWidthRange"]=[&]() {
    json return_AxKFcmN=json({});
    
        return_AxKFcmN["members"]={};
        for(int AxKFcmN=0; AxKFcmN < 2; AxKFcmN++){
            json temp;
            temp=[&]() {
    json return_BEjxCDm=json({});
    return serialize_float(name.lineWidthRange[AxKFcmN]);}();
            return_AxKFcmN["members"].push_back(temp);
        }
        return return_AxKFcmN;
        }();
result["members"]["pointSizeGranularity"]=[&]() {
    json return_kairyhj=json({});
    return serialize_float(name.pointSizeGranularity);}();
result["members"]["lineWidthGranularity"]=[&]() {
    json return_jEKIhcw=json({});
    return serialize_float(name.lineWidthGranularity);}();
result["members"]["strictLines"]=[&]() {
    json return_SWIkgct=json({});
    return_SWIkgct=[&]() {
    json return_xLHEtPo=json({});
    return serialize_uint32_t(name.strictLines);}();return return_SWIkgct;}();
result["members"]["standardSampleLocations"]=[&]() {
    json return_cEgMRmH=json({});
    return_cEgMRmH=[&]() {
    json return_BfFNPNB=json({});
    return serialize_uint32_t(name.standardSampleLocations);}();return return_cEgMRmH;}();
result["members"]["optimalBufferCopyOffsetAlignment"]=[&]() {
    json return_ZupdbkD=json({});
    return_ZupdbkD=[&]() {
    json return_DAjSSqg=json({});
    return serialize_uint64_t(name.optimalBufferCopyOffsetAlignment);}();return return_ZupdbkD;}();
result["members"]["optimalBufferCopyRowPitchAlignment"]=[&]() {
    json return_Zvgbgux=json({});
    return_Zvgbgux=[&]() {
    json return_DkOjxiJ=json({});
    return serialize_uint64_t(name.optimalBufferCopyRowPitchAlignment);}();return return_Zvgbgux;}();
result["members"]["nonCoherentAtomSize"]=[&]() {
    json return_WEgZnDd=json({});
    return_WEgZnDd=[&]() {
    json return_bNzKeiX=json({});
    return serialize_uint64_t(name.nonCoherentAtomSize);}();return return_WEgZnDd;}();
return result;}

    VkPhysicalDeviceLimits deserialize_VkPhysicalDeviceLimits(json &name){
        auto result=VkPhysicalDeviceLimits();
    
[&]() {
result.maxImageDimension1D=deserialize_uint32_t(name["members"]["maxImageDimension1D"]);}();
[&]() {
result.maxImageDimension2D=deserialize_uint32_t(name["members"]["maxImageDimension2D"]);}();
[&]() {
result.maxImageDimension3D=deserialize_uint32_t(name["members"]["maxImageDimension3D"]);}();
[&]() {
result.maxImageDimensionCube=deserialize_uint32_t(name["members"]["maxImageDimensionCube"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.maxTexelBufferElements=deserialize_uint32_t(name["members"]["maxTexelBufferElements"]);}();
[&]() {
result.maxUniformBufferRange=deserialize_uint32_t(name["members"]["maxUniformBufferRange"]);}();
[&]() {
result.maxStorageBufferRange=deserialize_uint32_t(name["members"]["maxStorageBufferRange"]);}();
[&]() {
result.maxPushConstantsSize=deserialize_uint32_t(name["members"]["maxPushConstantsSize"]);}();
[&]() {
result.maxMemoryAllocationCount=deserialize_uint32_t(name["members"]["maxMemoryAllocationCount"]);}();
[&]() {
result.maxSamplerAllocationCount=deserialize_uint32_t(name["members"]["maxSamplerAllocationCount"]);}();
[&]() {
[&]() {
result.bufferImageGranularity=deserialize_uint64_t(name["members"]["bufferImageGranularity"]);}();}();
[&]() {
[&]() {
result.sparseAddressSpaceSize=deserialize_uint64_t(name["members"]["sparseAddressSpaceSize"]);}();}();
[&]() {
result.maxBoundDescriptorSets=deserialize_uint32_t(name["members"]["maxBoundDescriptorSets"]);}();
[&]() {
result.maxPerStageDescriptorSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInputAttachments"]);}();
[&]() {
result.maxPerStageResources=deserialize_uint32_t(name["members"]["maxPerStageResources"]);}();
[&]() {
result.maxDescriptorSetSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSamplers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetSampledImages"]);}();
[&]() {
result.maxDescriptorSetStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageImages"]);}();
[&]() {
result.maxDescriptorSetInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetInputAttachments"]);}();
[&]() {
result.maxVertexInputAttributes=deserialize_uint32_t(name["members"]["maxVertexInputAttributes"]);}();
[&]() {
result.maxVertexInputBindings=deserialize_uint32_t(name["members"]["maxVertexInputBindings"]);}();
[&]() {
result.maxVertexInputAttributeOffset=deserialize_uint32_t(name["members"]["maxVertexInputAttributeOffset"]);}();
[&]() {
result.maxVertexInputBindingStride=deserialize_uint32_t(name["members"]["maxVertexInputBindingStride"]);}();
[&]() {
result.maxVertexOutputComponents=deserialize_uint32_t(name["members"]["maxVertexOutputComponents"]);}();
[&]() {
result.maxTessellationGenerationLevel=deserialize_uint32_t(name["members"]["maxTessellationGenerationLevel"]);}();
[&]() {
result.maxTessellationPatchSize=deserialize_uint32_t(name["members"]["maxTessellationPatchSize"]);}();
[&]() {
result.maxTessellationControlPerVertexInputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexInputComponents"]);}();
[&]() {
result.maxTessellationControlPerVertexOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexOutputComponents"]);}();
[&]() {
result.maxTessellationControlPerPatchOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerPatchOutputComponents"]);}();
[&]() {
result.maxTessellationControlTotalOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlTotalOutputComponents"]);}();
[&]() {
result.maxTessellationEvaluationInputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationInputComponents"]);}();
[&]() {
result.maxTessellationEvaluationOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationOutputComponents"]);}();
[&]() {
result.maxGeometryShaderInvocations=deserialize_uint32_t(name["members"]["maxGeometryShaderInvocations"]);}();
[&]() {
result.maxGeometryInputComponents=deserialize_uint32_t(name["members"]["maxGeometryInputComponents"]);}();
[&]() {
result.maxGeometryOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryOutputComponents"]);}();
[&]() {
result.maxGeometryOutputVertices=deserialize_uint32_t(name["members"]["maxGeometryOutputVertices"]);}();
[&]() {
result.maxGeometryTotalOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryTotalOutputComponents"]);}();
[&]() {
result.maxFragmentInputComponents=deserialize_uint32_t(name["members"]["maxFragmentInputComponents"]);}();
[&]() {
result.maxFragmentOutputAttachments=deserialize_uint32_t(name["members"]["maxFragmentOutputAttachments"]);}();
[&]() {
result.maxFragmentDualSrcAttachments=deserialize_uint32_t(name["members"]["maxFragmentDualSrcAttachments"]);}();
[&]() {
result.maxFragmentCombinedOutputResources=deserialize_uint32_t(name["members"]["maxFragmentCombinedOutputResources"]);}();
[&]() {
result.maxComputeSharedMemorySize=deserialize_uint32_t(name["members"]["maxComputeSharedMemorySize"]);}();
[&]() {

        for (int nKtiKqe=0; nKtiKqe < 3; nKtiKqe++){
            [&]() {
result.maxComputeWorkGroupCount[nKtiKqe]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupCount"]["members"][nKtiKqe]);}();;
        }
        }();
[&]() {
result.maxComputeWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxComputeWorkGroupInvocations"]);}();
[&]() {

        for (int TBcZeUc=0; TBcZeUc < 3; TBcZeUc++){
            [&]() {
result.maxComputeWorkGroupSize[TBcZeUc]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupSize"]["members"][TBcZeUc]);}();;
        }
        }();
[&]() {
result.subPixelPrecisionBits=deserialize_uint32_t(name["members"]["subPixelPrecisionBits"]);}();
[&]() {
result.subTexelPrecisionBits=deserialize_uint32_t(name["members"]["subTexelPrecisionBits"]);}();
[&]() {
result.mipmapPrecisionBits=deserialize_uint32_t(name["members"]["mipmapPrecisionBits"]);}();
[&]() {
result.maxDrawIndexedIndexValue=deserialize_uint32_t(name["members"]["maxDrawIndexedIndexValue"]);}();
[&]() {
result.maxDrawIndirectCount=deserialize_uint32_t(name["members"]["maxDrawIndirectCount"]);}();
[&]() {
result.maxSamplerLodBias=deserialize_float(name["members"]["maxSamplerLodBias"]);}();
[&]() {
result.maxSamplerAnisotropy=deserialize_float(name["members"]["maxSamplerAnisotropy"]);}();
[&]() {
result.maxViewports=deserialize_uint32_t(name["members"]["maxViewports"]);}();
[&]() {

        for (int DDNoNRG=0; DDNoNRG < 2; DDNoNRG++){
            [&]() {
result.maxViewportDimensions[DDNoNRG]=deserialize_uint32_t(name["members"]["maxViewportDimensions"]["members"][DDNoNRG]);}();;
        }
        }();
[&]() {

        for (int DsjYCIu=0; DsjYCIu < 2; DsjYCIu++){
            [&]() {
result.viewportBoundsRange[DsjYCIu]=deserialize_float(name["members"]["viewportBoundsRange"]["members"][DsjYCIu]);}();;
        }
        }();
[&]() {
result.viewportSubPixelBits=deserialize_uint32_t(name["members"]["viewportSubPixelBits"]);}();
[&]() {
result.minMemoryMapAlignment=deserialize_size_t(name["members"]["minMemoryMapAlignment"]);}();
[&]() {
[&]() {
result.minTexelBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minTexelBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minUniformBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minUniformBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minStorageBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minStorageBufferOffsetAlignment"]);}();}();
[&]() {
result.minTexelOffset=deserialize_int32_t(name["members"]["minTexelOffset"]);}();
[&]() {
result.maxTexelOffset=deserialize_uint32_t(name["members"]["maxTexelOffset"]);}();
[&]() {
result.minTexelGatherOffset=deserialize_int32_t(name["members"]["minTexelGatherOffset"]);}();
[&]() {
result.maxTexelGatherOffset=deserialize_uint32_t(name["members"]["maxTexelGatherOffset"]);}();
[&]() {
result.minInterpolationOffset=deserialize_float(name["members"]["minInterpolationOffset"]);}();
[&]() {
result.maxInterpolationOffset=deserialize_float(name["members"]["maxInterpolationOffset"]);}();
[&]() {
result.subPixelInterpolationOffsetBits=deserialize_uint32_t(name["members"]["subPixelInterpolationOffsetBits"]);}();
[&]() {
result.maxFramebufferWidth=deserialize_uint32_t(name["members"]["maxFramebufferWidth"]);}();
[&]() {
result.maxFramebufferHeight=deserialize_uint32_t(name["members"]["maxFramebufferHeight"]);}();
[&]() {
result.maxFramebufferLayers=deserialize_uint32_t(name["members"]["maxFramebufferLayers"]);}();
[&]() {
result.framebufferColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferColorSampleCounts"]);}();
[&]() {
result.framebufferDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferDepthSampleCounts"]);}();
[&]() {
result.framebufferStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferStencilSampleCounts"]);}();
[&]() {
result.framebufferNoAttachmentsSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferNoAttachmentsSampleCounts"]);}();
[&]() {
result.maxColorAttachments=deserialize_uint32_t(name["members"]["maxColorAttachments"]);}();
[&]() {
result.sampledImageColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageColorSampleCounts"]);}();
[&]() {
result.sampledImageIntegerSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageIntegerSampleCounts"]);}();
[&]() {
result.sampledImageDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageDepthSampleCounts"]);}();
[&]() {
result.sampledImageStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageStencilSampleCounts"]);}();
[&]() {
result.storageImageSampleCounts=deserialize_VkSampleCountFlags(name["members"]["storageImageSampleCounts"]);}();
[&]() {
result.maxSampleMaskWords=deserialize_uint32_t(name["members"]["maxSampleMaskWords"]);}();
[&]() {
[&]() {
result.timestampComputeAndGraphics=deserialize_uint32_t(name["members"]["timestampComputeAndGraphics"]);}();}();
[&]() {
result.timestampPeriod=deserialize_float(name["members"]["timestampPeriod"]);}();
[&]() {
result.maxClipDistances=deserialize_uint32_t(name["members"]["maxClipDistances"]);}();
[&]() {
result.maxCullDistances=deserialize_uint32_t(name["members"]["maxCullDistances"]);}();
[&]() {
result.maxCombinedClipAndCullDistances=deserialize_uint32_t(name["members"]["maxCombinedClipAndCullDistances"]);}();
[&]() {
result.discreteQueuePriorities=deserialize_uint32_t(name["members"]["discreteQueuePriorities"]);}();
[&]() {

        for (int RucGlDA=0; RucGlDA < 2; RucGlDA++){
            [&]() {
result.pointSizeRange[RucGlDA]=deserialize_float(name["members"]["pointSizeRange"]["members"][RucGlDA]);}();;
        }
        }();
[&]() {

        for (int xEiMOgg=0; xEiMOgg < 2; xEiMOgg++){
            [&]() {
result.lineWidthRange[xEiMOgg]=deserialize_float(name["members"]["lineWidthRange"]["members"][xEiMOgg]);}();;
        }
        }();
[&]() {
result.pointSizeGranularity=deserialize_float(name["members"]["pointSizeGranularity"]);}();
[&]() {
result.lineWidthGranularity=deserialize_float(name["members"]["lineWidthGranularity"]);}();
[&]() {
[&]() {
result.strictLines=deserialize_uint32_t(name["members"]["strictLines"]);}();}();
[&]() {
[&]() {
result.standardSampleLocations=deserialize_uint32_t(name["members"]["standardSampleLocations"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyOffsetAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyRowPitchAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyRowPitchAlignment"]);}();}();
[&]() {
[&]() {
result.nonCoherentAtomSize=deserialize_uint64_t(name["members"]["nonCoherentAtomSize"]);}();}();
return result;}

    json serialize_VkSemaphoreCreateInfo(VkSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CZxixGH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_xpzRQpY=json({});
    return serialize_VkSemaphoreCreateFlags(name.flags);}();
return result;}

    VkSemaphoreCreateInfo deserialize_VkSemaphoreCreateInfo(json &name){
        auto result=VkSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkSemaphoreCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfo(VkQueryPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EduYvse=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_dsOhOLf=json({});
    return serialize_VkQueryPoolCreateFlags(name.flags);}();
result["members"]["queryType"]=[&]() {
    json return_eCtZxRJ=json({});
    return serialize_VkQueryType(name.queryType);}();
result["members"]["queryCount"]=[&]() {
    json return_Nxycduw=json({});
    return serialize_uint32_t(name.queryCount);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_VyIgCXL=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkQueryPoolCreateInfo deserialize_VkQueryPoolCreateInfo(json &name){
        auto result=VkQueryPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkQueryPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queryType=deserialize_VkQueryType(name["members"]["queryType"]);}();
[&]() {
result.queryCount=deserialize_uint32_t(name["members"]["queryCount"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkFramebufferCreateInfo(VkFramebufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZxcNhHV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_PzyNHUO=json({});
    return serialize_VkFramebufferCreateFlags(name.flags);}();
result["members"]["renderPass"]=[&]() {
    json return_IiWXvww=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["attachmentCount"]=[&]() {
    json return_utvRtKZ=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_FqGyuNV=json({});
    
        if (name.pAttachments==NULL){
            return_FqGyuNV["null"]=true;
            return return_FqGyuNV;
        }
        
        return_FqGyuNV["members"]={};
        for(int FqGyuNV=0; FqGyuNV < name.attachmentCount; FqGyuNV++){
            json temp;
            temp=[&]() {
    json return_SYjhRwD=json({});
    return serialize_VkImageView(name.pAttachments[FqGyuNV]);}();
            return_FqGyuNV["members"].push_back(temp);
        }
        return return_FqGyuNV;
        }();
result["members"]["width"]=[&]() {
    json return_fwSgSID=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_PPKTtcZ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layers"]=[&]() {
    json return_QLiCqPY=json({});
    return serialize_uint32_t(name.layers);}();
return result;}

    VkFramebufferCreateInfo deserialize_VkFramebufferCreateInfo(json &name){
        auto result=VkFramebufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkFramebufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_qAxKKZK;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_qAxKKZK=NULL;
        return;
        }
    temp_qAxKKZK=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int chEYfKn=0; chEYfKn < result.attachmentCount; chEYfKn++){
            [&]() {
temp_qAxKKZK[chEYfKn]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][chEYfKn]);}();;
        }
        }();result.pAttachments=temp_qAxKKZK;}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layers=deserialize_uint32_t(name["members"]["layers"]);}();
return result;}

    json serialize_VkDrawIndirectCommand(VkDrawIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["vertexCount"]=[&]() {
    json return_mKdEiYN=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_kQymmeT=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstVertex"]=[&]() {
    json return_QsFrNqF=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["firstInstance"]=[&]() {
    json return_pCKgySt=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndirectCommand deserialize_VkDrawIndirectCommand(json &name){
        auto result=VkDrawIndirectCommand();
    
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDrawIndexedIndirectCommand(VkDrawIndexedIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["indexCount"]=[&]() {
    json return_JLlyzAw=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_kQymmeT=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstIndex"]=[&]() {
    json return_xvqTRCk=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["vertexOffset"]=[&]() {
    json return_xuKQOcB=json({});
    return serialize_int32_t(name.vertexOffset);}();
result["members"]["firstInstance"]=[&]() {
    json return_pCKgySt=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndexedIndirectCommand deserialize_VkDrawIndexedIndirectCommand(json &name){
        auto result=VkDrawIndexedIndirectCommand();
    
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDispatchIndirectCommand(VkDispatchIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ARZmqzI=json({});
    return serialize_uint32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_OHBQFwd=json({});
    return serialize_uint32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_zxGwkJC=json({});
    return serialize_uint32_t(name.z);}();
return result;}

    VkDispatchIndirectCommand deserialize_VkDispatchIndirectCommand(json &name){
        auto result=VkDispatchIndirectCommand();
    
[&]() {
result.x=deserialize_uint32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_uint32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_uint32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkMultiDrawInfoEXT(VkMultiDrawInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstVertex"]=[&]() {
    json return_IljqGJk=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["vertexCount"]=[&]() {
    json return_CjdOwyH=json({});
    return serialize_uint32_t(name.vertexCount);}();
return result;}

    VkMultiDrawInfoEXT deserialize_VkMultiDrawInfoEXT(json &name){
        auto result=VkMultiDrawInfoEXT();
    
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
return result;}

    json serialize_VkMultiDrawIndexedInfoEXT(VkMultiDrawIndexedInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstIndex"]=[&]() {
    json return_FOAUnXF=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["indexCount"]=[&]() {
    json return_jeOVrrT=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["vertexOffset"]=[&]() {
    json return_HZsIDAN=json({});
    return serialize_int32_t(name.vertexOffset);}();
return result;}

    VkMultiDrawIndexedInfoEXT deserialize_VkMultiDrawIndexedInfoEXT(json &name){
        auto result=VkMultiDrawIndexedInfoEXT();
    
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
return result;}

    json serialize_VkSubmitInfo(VkSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WaUWNhg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_taACTFE=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_ekMTVrN=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_ekMTVrN["null"]=true;
            return return_ekMTVrN;
        }
        
        return_ekMTVrN["members"]={};
        for(int ekMTVrN=0; ekMTVrN < name.waitSemaphoreCount; ekMTVrN++){
            json temp;
            temp=[&]() {
    json return_vwEwTlT=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[ekMTVrN]);}();
            return_ekMTVrN["members"].push_back(temp);
        }
        return return_ekMTVrN;
        }();
result["members"]["pWaitDstStageMask"]=[&]() {
    json return_MOKSEdg=json({});
    
        if (name.pWaitDstStageMask==NULL){
            return_MOKSEdg["null"]=true;
            return return_MOKSEdg;
        }
        
        return_MOKSEdg["members"]={};
        for(int MOKSEdg=0; MOKSEdg < name.waitSemaphoreCount; MOKSEdg++){
            json temp;
            temp=[&]() {
    json return_sTypkzE=json({});
    return serialize_VkPipelineStageFlags(name.pWaitDstStageMask[MOKSEdg]);}();
            return_MOKSEdg["members"].push_back(temp);
        }
        return return_MOKSEdg;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_VLbnqKg=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBuffers"]=[&]() {
    json return_QNXUSys=json({});
    
        if (name.pCommandBuffers==NULL){
            return_QNXUSys["null"]=true;
            return return_QNXUSys;
        }
        
        return_QNXUSys["members"]={};
        for(int QNXUSys=0; QNXUSys < name.commandBufferCount; QNXUSys++){
            json temp;
            temp=[&]() {
    json return_JTIyHnk=json({});
    return serialize_VkCommandBuffer(name.pCommandBuffers[QNXUSys]);}();
            return_QNXUSys["members"].push_back(temp);
        }
        return return_QNXUSys;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_cyiIBkk=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_QuuhUhh=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_QuuhUhh["null"]=true;
            return return_QuuhUhh;
        }
        
        return_QuuhUhh["members"]={};
        for(int QuuhUhh=0; QuuhUhh < name.signalSemaphoreCount; QuuhUhh++){
            json temp;
            temp=[&]() {
    json return_IOpMgOf=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[QuuhUhh]);}();
            return_QuuhUhh["members"].push_back(temp);
        }
        return return_QuuhUhh;
        }();
return result;}

    VkSubmitInfo deserialize_VkSubmitInfo(json &name){
        auto result=VkSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_yOjTvcQ;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_yOjTvcQ=NULL;
        return;
        }
    temp_yOjTvcQ=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int fqzdJCB=0; fqzdJCB < result.waitSemaphoreCount; fqzdJCB++){
            [&]() {
temp_yOjTvcQ[fqzdJCB]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][fqzdJCB]);}();;
        }
        }();result.pWaitSemaphores=temp_yOjTvcQ;}();
[&]() {
VkPipelineStageFlags* temp_kNXcIVf;[&]() {

        if (name["members"]["pWaitDstStageMask"].contains("null")){
        temp_kNXcIVf=NULL;
        return;
        }
    temp_kNXcIVf=(VkPipelineStageFlags*)malloc(result.waitSemaphoreCount*sizeof(VkPipelineStageFlags));
        for (int bKKAXYd=0; bKKAXYd < result.waitSemaphoreCount; bKKAXYd++){
            [&]() {
temp_kNXcIVf[bKKAXYd]=deserialize_VkPipelineStageFlags(name["members"]["pWaitDstStageMask"]["members"][bKKAXYd]);}();;
        }
        }();result.pWaitDstStageMask=temp_kNXcIVf;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
VkCommandBuffer* temp_kfbSGkh;[&]() {

        if (name["members"]["pCommandBuffers"].contains("null")){
        temp_kfbSGkh=NULL;
        return;
        }
    temp_kfbSGkh=(VkCommandBuffer*)malloc(result.commandBufferCount*sizeof(VkCommandBuffer));
        for (int TGlJXWd=0; TGlJXWd < result.commandBufferCount; TGlJXWd++){
            [&]() {
temp_kfbSGkh[TGlJXWd]=deserialize_VkCommandBuffer(name["members"]["pCommandBuffers"]["members"][TGlJXWd]);}();;
        }
        }();result.pCommandBuffers=temp_kfbSGkh;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_EdyDTLf;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_EdyDTLf=NULL;
        return;
        }
    temp_EdyDTLf=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int xDhNcbI=0; xDhNcbI < result.signalSemaphoreCount; xDhNcbI++){
            [&]() {
temp_EdyDTLf[xDhNcbI]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][xDhNcbI]);}();;
        }
        }();result.pSignalSemaphores=temp_EdyDTLf;}();
return result;}

    json serialize_VkDisplayPropertiesKHR(VkDisplayPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["display"]=[&]() {
    json return_hOIwAbR=json({});
    return serialize_VkDisplayKHR(name.display);}();
result["members"]["displayName"]=[&]() {
    json return_GcDcSVG=json({});
    
        if (name.displayName==NULL){
            return_GcDcSVG["null"]=true;
            return return_GcDcSVG;
        }
        
        return_GcDcSVG["members"]={};
        for(int GcDcSVG=0; GcDcSVG < strlen(name.displayName)+1; GcDcSVG++){
            json temp;
            temp=[&]() {
    json return_ylnisIM=json({});
    return serialize_char(name.displayName[GcDcSVG]);}();
            return_GcDcSVG["members"].push_back(temp);
        }
        return return_GcDcSVG;
        }();
result["members"]["physicalDimensions"]=[&]() {
    json return_PajpQex=json({});
    return serialize_VkExtent2D(name.physicalDimensions);}();
result["members"]["physicalResolution"]=[&]() {
    json return_JiwHvDJ=json({});
    return serialize_VkExtent2D(name.physicalResolution);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_dJSmEUU=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["planeReorderPossible"]=[&]() {
    json return_xnTWEHj=json({});
    return_xnTWEHj=[&]() {
    json return_QfRcftJ=json({});
    return serialize_uint32_t(name.planeReorderPossible);}();return return_xnTWEHj;}();
result["members"]["persistentContent"]=[&]() {
    json return_ytRaDSe=json({});
    return_ytRaDSe=[&]() {
    json return_xierOuh=json({});
    return serialize_uint32_t(name.persistentContent);}();return return_ytRaDSe;}();
return result;}

    VkDisplayPropertiesKHR deserialize_VkDisplayPropertiesKHR(json &name){
        auto result=VkDisplayPropertiesKHR();
    
[&]() {
result.display=deserialize_VkDisplayKHR(name["members"]["display"]);}();
[&]() {
char* temp_lFvuNHu;[&]() {

        if (name["members"]["displayName"].contains("null")){
        temp_lFvuNHu=NULL;
        return;
        }
    temp_lFvuNHu=(char*)malloc(name["members"]["displayName"]["members"].size()*sizeof(char));
        for (int wTFnyDy=0; wTFnyDy < name["members"]["displayName"]["members"].size(); wTFnyDy++){
            [&]() {
temp_lFvuNHu[wTFnyDy]=deserialize_char(name["members"]["displayName"]["members"][wTFnyDy]);}();;
        }
        }();result.displayName=temp_lFvuNHu;}();
[&]() {
result.physicalDimensions=deserialize_VkExtent2D(name["members"]["physicalDimensions"]);}();
[&]() {
result.physicalResolution=deserialize_VkExtent2D(name["members"]["physicalResolution"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
[&]() {
result.planeReorderPossible=deserialize_uint32_t(name["members"]["planeReorderPossible"]);}();}();
[&]() {
[&]() {
result.persistentContent=deserialize_uint32_t(name["members"]["persistentContent"]);}();}();
return result;}

    json serialize_VkDisplayPlanePropertiesKHR(VkDisplayPlanePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["currentDisplay"]=[&]() {
    json return_AFbzAjT=json({});
    return serialize_VkDisplayKHR(name.currentDisplay);}();
result["members"]["currentStackIndex"]=[&]() {
    json return_PquvXYP=json({});
    return serialize_uint32_t(name.currentStackIndex);}();
return result;}

    VkDisplayPlanePropertiesKHR deserialize_VkDisplayPlanePropertiesKHR(json &name){
        auto result=VkDisplayPlanePropertiesKHR();
    
[&]() {
result.currentDisplay=deserialize_VkDisplayKHR(name["members"]["currentDisplay"]);}();
[&]() {
result.currentStackIndex=deserialize_uint32_t(name["members"]["currentStackIndex"]);}();
return result;}

    json serialize_VkDisplayModeParametersKHR(VkDisplayModeParametersKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["visibleRegion"]=[&]() {
    json return_enUtMkp=json({});
    return serialize_VkExtent2D(name.visibleRegion);}();
result["members"]["refreshRate"]=[&]() {
    json return_qZMiimB=json({});
    return serialize_uint32_t(name.refreshRate);}();
return result;}

    VkDisplayModeParametersKHR deserialize_VkDisplayModeParametersKHR(json &name){
        auto result=VkDisplayModeParametersKHR();
    
[&]() {
result.visibleRegion=deserialize_VkExtent2D(name["members"]["visibleRegion"]);}();
[&]() {
result.refreshRate=deserialize_uint32_t(name["members"]["refreshRate"]);}();
return result;}

    json serialize_VkDisplayModePropertiesKHR(VkDisplayModePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["displayMode"]=[&]() {
    json return_FveyvkQ=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["parameters"]=[&]() {
    json return_YxECTSI=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModePropertiesKHR deserialize_VkDisplayModePropertiesKHR(json &name){
        auto result=VkDisplayModePropertiesKHR();
    
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayModeCreateInfoKHR(VkDisplayModeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qKpaHpk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_kNHNBar=json({});
    return serialize_VkDisplayModeCreateFlagsKHR(name.flags);}();
result["members"]["parameters"]=[&]() {
    json return_YxECTSI=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModeCreateInfoKHR deserialize_VkDisplayModeCreateInfoKHR(json &name){
        auto result=VkDisplayModeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkDisplayModeCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilitiesKHR(VkDisplayPlaneCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["supportedAlpha"]=[&]() {
    json return_jORgnMe=json({});
    return serialize_VkDisplayPlaneAlphaFlagsKHR(name.supportedAlpha);}();
result["members"]["minSrcPosition"]=[&]() {
    json return_DvomVxO=json({});
    return serialize_VkOffset2D(name.minSrcPosition);}();
result["members"]["maxSrcPosition"]=[&]() {
    json return_enefQsl=json({});
    return serialize_VkOffset2D(name.maxSrcPosition);}();
result["members"]["minSrcExtent"]=[&]() {
    json return_DfMPLoT=json({});
    return serialize_VkExtent2D(name.minSrcExtent);}();
result["members"]["maxSrcExtent"]=[&]() {
    json return_XpzeGrd=json({});
    return serialize_VkExtent2D(name.maxSrcExtent);}();
result["members"]["minDstPosition"]=[&]() {
    json return_APbMOkA=json({});
    return serialize_VkOffset2D(name.minDstPosition);}();
result["members"]["maxDstPosition"]=[&]() {
    json return_hOzDdqs=json({});
    return serialize_VkOffset2D(name.maxDstPosition);}();
result["members"]["minDstExtent"]=[&]() {
    json return_bbBUndD=json({});
    return serialize_VkExtent2D(name.minDstExtent);}();
result["members"]["maxDstExtent"]=[&]() {
    json return_vdgoebT=json({});
    return serialize_VkExtent2D(name.maxDstExtent);}();
return result;}

    VkDisplayPlaneCapabilitiesKHR deserialize_VkDisplayPlaneCapabilitiesKHR(json &name){
        auto result=VkDisplayPlaneCapabilitiesKHR();
    
[&]() {
result.supportedAlpha=deserialize_VkDisplayPlaneAlphaFlagsKHR(name["members"]["supportedAlpha"]);}();
[&]() {
result.minSrcPosition=deserialize_VkOffset2D(name["members"]["minSrcPosition"]);}();
[&]() {
result.maxSrcPosition=deserialize_VkOffset2D(name["members"]["maxSrcPosition"]);}();
[&]() {
result.minSrcExtent=deserialize_VkExtent2D(name["members"]["minSrcExtent"]);}();
[&]() {
result.maxSrcExtent=deserialize_VkExtent2D(name["members"]["maxSrcExtent"]);}();
[&]() {
result.minDstPosition=deserialize_VkOffset2D(name["members"]["minDstPosition"]);}();
[&]() {
result.maxDstPosition=deserialize_VkOffset2D(name["members"]["maxDstPosition"]);}();
[&]() {
result.minDstExtent=deserialize_VkExtent2D(name["members"]["minDstExtent"]);}();
[&]() {
result.maxDstExtent=deserialize_VkExtent2D(name["members"]["maxDstExtent"]);}();
return result;}

    json serialize_VkDisplaySurfaceCreateInfoKHR(VkDisplaySurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JBdWbKr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_YMsnIZc=json({});
    return serialize_VkDisplaySurfaceCreateFlagsKHR(name.flags);}();
result["members"]["displayMode"]=[&]() {
    json return_CkvTahs=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["planeIndex"]=[&]() {
    json return_FkStWoP=json({});
    return serialize_uint32_t(name.planeIndex);}();
result["members"]["planeStackIndex"]=[&]() {
    json return_fhTgcJC=json({});
    return serialize_uint32_t(name.planeStackIndex);}();
result["members"]["transform"]=[&]() {
    json return_jgOlAGq=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["globalAlpha"]=[&]() {
    json return_mFNosVi=json({});
    return serialize_float(name.globalAlpha);}();
result["members"]["alphaMode"]=[&]() {
    json return_SNqrIWr=json({});
    return serialize_VkDisplayPlaneAlphaFlagBitsKHR(name.alphaMode);}();
result["members"]["imageExtent"]=[&]() {
    json return_Dntdapk=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
return result;}

    VkDisplaySurfaceCreateInfoKHR deserialize_VkDisplaySurfaceCreateInfoKHR(json &name){
        auto result=VkDisplaySurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkDisplaySurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
[&]() {
result.planeStackIndex=deserialize_uint32_t(name["members"]["planeStackIndex"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.globalAlpha=deserialize_float(name["members"]["globalAlpha"]);}();
[&]() {
result.alphaMode=deserialize_VkDisplayPlaneAlphaFlagBitsKHR(name["members"]["alphaMode"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkDisplayPresentInfoKHR(VkDisplayPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OmucjQL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcRect"]=[&]() {
    json return_VjPWRbT=json({});
    return serialize_VkRect2D(name.srcRect);}();
result["members"]["dstRect"]=[&]() {
    json return_NNZlrYr=json({});
    return serialize_VkRect2D(name.dstRect);}();
result["members"]["persistent"]=[&]() {
    json return_OPFboSN=json({});
    return_OPFboSN=[&]() {
    json return_EdAujgL=json({});
    return serialize_uint32_t(name.persistent);}();return return_OPFboSN;}();
return result;}

    VkDisplayPresentInfoKHR deserialize_VkDisplayPresentInfoKHR(json &name){
        auto result=VkDisplayPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.srcRect=deserialize_VkRect2D(name["members"]["srcRect"]);}();
[&]() {
result.dstRect=deserialize_VkRect2D(name["members"]["dstRect"]);}();
[&]() {
[&]() {
result.persistent=deserialize_uint32_t(name["members"]["persistent"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesKHR(VkSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minImageCount"]=[&]() {
    json return_vIQmfsU=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_xrOLDCh=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_UfKSrrB=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_MIKUTBm=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_haDojgG=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_gDqYpsn=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_RKmZDHF=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_ylIfAkz=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_vxWhNYG=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_EfJLajo=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
return result;}

    VkSurfaceCapabilitiesKHR deserialize_VkSurfaceCapabilitiesKHR(json &name){
        auto result=VkSurfaceCapabilitiesKHR();
    
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
return result;}

    json serialize_VkXlibSurfaceCreateInfoKHR(VkXlibSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yMXhpoZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_IIeIpWO=json({});
    return serialize_VkXlibSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["dpy"]=[&]() {
    json return_VAZuMhJ=json({});
    
        if (name.dpy==NULL){
            return_VAZuMhJ["null"]=true;
            return return_VAZuMhJ;
        }
        return serialize_Display_p(name.dpy);
}();
result["members"]["window"]=[&]() {
    json return_LXjZdzT=json({});
    return serialize_Window(name.window);
}();
return result;}

    VkXlibSurfaceCreateInfoKHR deserialize_VkXlibSurfaceCreateInfoKHR(json &name){
        auto result=VkXlibSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkXlibSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["dpy"].contains("null")){
        result.dpy=NULL;
        return;
        }
    result.dpy=deserialize_Display_p(name["members"]["dpy"]);
}();
[&]() {
result.window=deserialize_Window(name["members"]["window"]);
}();
return result;}

    json serialize_VkXcbSurfaceCreateInfoKHR(VkXcbSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bPZEwBX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_fPJXPbA=json({});
    return serialize_VkXcbSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["connection"]=[&]() {
    json return_bszNdot=json({});
    
        if (name.connection==NULL){
            return_bszNdot["null"]=true;
            return return_bszNdot;
        }
        return serialize_xcb_connection_t_p(name.connection);
}();
result["members"]["window"]=[&]() {
    json return_LbEdsgm=json({});
    return serialize_xcb_window_t(name.window);
}();
return result;}

    VkXcbSurfaceCreateInfoKHR deserialize_VkXcbSurfaceCreateInfoKHR(json &name){
        auto result=VkXcbSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkXcbSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["connection"].contains("null")){
        result.connection=NULL;
        return;
        }
    result.connection=deserialize_xcb_connection_t_p(name["members"]["connection"]);
}();
[&]() {
result.window=deserialize_xcb_window_t(name["members"]["window"]);
}();
return result;}

    json serialize_VkSurfaceFormatKHR(VkSurfaceFormatKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["format"]=[&]() {
    json return_HsShCkp=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["colorSpace"]=[&]() {
    json return_ECKVUQh=json({});
    return serialize_VkColorSpaceKHR(name.colorSpace);}();
return result;}

    VkSurfaceFormatKHR deserialize_VkSurfaceFormatKHR(json &name){
        auto result=VkSurfaceFormatKHR();
    
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.colorSpace=deserialize_VkColorSpaceKHR(name["members"]["colorSpace"]);}();
return result;}

    json serialize_VkSwapchainCreateInfoKHR(VkSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hqCGfPG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_jzSKniA=json({});
    return serialize_VkSwapchainCreateFlagsKHR(name.flags);}();
result["members"]["surface"]=[&]() {
    json return_sKBbyDp=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
result["members"]["minImageCount"]=[&]() {
    json return_IeCnQDz=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["imageFormat"]=[&]() {
    json return_LArTqmT=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["imageColorSpace"]=[&]() {
    json return_aejcQTi=json({});
    return serialize_VkColorSpaceKHR(name.imageColorSpace);}();
result["members"]["imageExtent"]=[&]() {
    json return_BIasqpP=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
result["members"]["imageArrayLayers"]=[&]() {
    json return_brILcqk=json({});
    return serialize_uint32_t(name.imageArrayLayers);}();
result["members"]["imageUsage"]=[&]() {
    json return_MMYcqig=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
result["members"]["imageSharingMode"]=[&]() {
    json return_dixVXCt=json({});
    return serialize_VkSharingMode(name.imageSharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_DYphUWK=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_SIuDtGJ=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_SIuDtGJ["null"]=true;
            return return_SIuDtGJ;
        }
        
        return_SIuDtGJ["members"]={};
        for(int SIuDtGJ=0; SIuDtGJ < name.queueFamilyIndexCount; SIuDtGJ++){
            json temp;
            temp=[&]() {
    json return_vCrjPwo=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[SIuDtGJ]);}();
            return_SIuDtGJ["members"].push_back(temp);
        }
        return return_SIuDtGJ;
        }();
result["members"]["preTransform"]=[&]() {
    json return_rOcefsb=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.preTransform);}();
result["members"]["compositeAlpha"]=[&]() {
    json return_mBpwyMw=json({});
    return serialize_VkCompositeAlphaFlagBitsKHR(name.compositeAlpha);}();
result["members"]["presentMode"]=[&]() {
    json return_XQOQIDc=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
result["members"]["clipped"]=[&]() {
    json return_xKQrvMM=json({});
    return_xKQrvMM=[&]() {
    json return_FsRcdoJ=json({});
    return serialize_uint32_t(name.clipped);}();return return_xKQrvMM;}();
result["members"]["oldSwapchain"]=[&]() {
    json return_EhdRcCr=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
return result;}

    VkSwapchainCreateInfoKHR deserialize_VkSwapchainCreateInfoKHR(json &name){
        auto result=VkSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkSwapchainCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.imageColorSpace=deserialize_VkColorSpaceKHR(name["members"]["imageColorSpace"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
[&]() {
result.imageArrayLayers=deserialize_uint32_t(name["members"]["imageArrayLayers"]);}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
[&]() {
result.imageSharingMode=deserialize_VkSharingMode(name["members"]["imageSharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_JREKOba;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_JREKOba=NULL;
        return;
        }
    temp_JREKOba=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int kpNAwbb=0; kpNAwbb < result.queueFamilyIndexCount; kpNAwbb++){
            [&]() {
temp_JREKOba[kpNAwbb]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][kpNAwbb]);}();;
        }
        }();result.pQueueFamilyIndices=temp_JREKOba;}();
[&]() {
result.preTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["preTransform"]);}();
[&]() {
result.compositeAlpha=deserialize_VkCompositeAlphaFlagBitsKHR(name["members"]["compositeAlpha"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
[&]() {
[&]() {
result.clipped=deserialize_uint32_t(name["members"]["clipped"]);}();}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
return result;}

    json serialize_VkPresentInfoKHR(VkPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kahreBS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ezEOKPE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_UhEvfPJ=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_ElimVdP=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_ElimVdP["null"]=true;
            return return_ElimVdP;
        }
        
        return_ElimVdP["members"]={};
        for(int ElimVdP=0; ElimVdP < name.waitSemaphoreCount; ElimVdP++){
            json temp;
            temp=[&]() {
    json return_QBsmqeA=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[ElimVdP]);}();
            return_ElimVdP["members"].push_back(temp);
        }
        return return_ElimVdP;
        }();
result["members"]["swapchainCount"]=[&]() {
    json return_VaItnNV=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pSwapchains"]=[&]() {
    json return_VHMpzIf=json({});
    
        if (name.pSwapchains==NULL){
            return_VHMpzIf["null"]=true;
            return return_VHMpzIf;
        }
        
        return_VHMpzIf["members"]={};
        for(int VHMpzIf=0; VHMpzIf < name.swapchainCount; VHMpzIf++){
            json temp;
            temp=[&]() {
    json return_jZPwkbd=json({});
    return serialize_VkSwapchainKHR(name.pSwapchains[VHMpzIf]);}();
            return_VHMpzIf["members"].push_back(temp);
        }
        return return_VHMpzIf;
        }();
result["members"]["pImageIndices"]=[&]() {
    json return_BMWFeyL=json({});
    
        if (name.pImageIndices==NULL){
            return_BMWFeyL["null"]=true;
            return return_BMWFeyL;
        }
        
        return_BMWFeyL["members"]={};
        for(int BMWFeyL=0; BMWFeyL < name.swapchainCount; BMWFeyL++){
            json temp;
            temp=[&]() {
    json return_BLJufHe=json({});
    return serialize_uint32_t(name.pImageIndices[BMWFeyL]);}();
            return_BMWFeyL["members"].push_back(temp);
        }
        return return_BMWFeyL;
        }();
result["members"]["pResults"]=[&]() {
    json return_hcBRzuN=json({});
    
        if (name.pResults==NULL){
            return_hcBRzuN["null"]=true;
            return return_hcBRzuN;
        }
        
        return_hcBRzuN["members"]={};
        for(int hcBRzuN=0; hcBRzuN < name.swapchainCount; hcBRzuN++){
            json temp;
            temp=[&]() {
    json return_iIcyvGb=json({});
    return serialize_VkResult(name.pResults[hcBRzuN]);}();
            return_hcBRzuN["members"].push_back(temp);
        }
        return return_hcBRzuN;
        }();
return result;}

    VkPresentInfoKHR deserialize_VkPresentInfoKHR(json &name){
        auto result=VkPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_YdXSoFF;[&]() {
temp_YdXSoFF=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_YdXSoFF;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_jpgxyDK;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_jpgxyDK=NULL;
        return;
        }
    temp_jpgxyDK=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int ebzsLNH=0; ebzsLNH < result.waitSemaphoreCount; ebzsLNH++){
            [&]() {
temp_jpgxyDK[ebzsLNH]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][ebzsLNH]);}();;
        }
        }();result.pWaitSemaphores=temp_jpgxyDK;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkSwapchainKHR* temp_kBuZQNY;[&]() {

        if (name["members"]["pSwapchains"].contains("null")){
        temp_kBuZQNY=NULL;
        return;
        }
    temp_kBuZQNY=(VkSwapchainKHR*)malloc(result.swapchainCount*sizeof(VkSwapchainKHR));
        for (int JmSAMou=0; JmSAMou < result.swapchainCount; JmSAMou++){
            [&]() {
temp_kBuZQNY[JmSAMou]=deserialize_VkSwapchainKHR(name["members"]["pSwapchains"]["members"][JmSAMou]);}();;
        }
        }();result.pSwapchains=temp_kBuZQNY;}();
[&]() {
uint32_t* temp_mtaWFmy;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_mtaWFmy=NULL;
        return;
        }
    temp_mtaWFmy=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int UczkWmh=0; UczkWmh < result.swapchainCount; UczkWmh++){
            [&]() {
temp_mtaWFmy[UczkWmh]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][UczkWmh]);}();;
        }
        }();result.pImageIndices=temp_mtaWFmy;}();
[&]() {

        if (name["members"]["pResults"].contains("null")){
        result.pResults=NULL;
        return;
        }
    result.pResults=(VkResult*)malloc(result.swapchainCount*sizeof(VkResult));
        for (int XJPKeVJ=0; XJPKeVJ < result.swapchainCount; XJPKeVJ++){
            [&]() {
result.pResults[XJPKeVJ]=deserialize_VkResult(name["members"]["pResults"]["members"][XJPKeVJ]);}();;
        }
        }();
return result;}

    json serialize_VkDebugReportCallbackCreateInfoEXT(VkDebugReportCallbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_thZjshw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_AttBlnM=json({});
    return serialize_VkDebugReportFlagsEXT(name.flags);}();
result["members"]["pfnCallback"]=[&]() {
    json return_MKcZLIS=json({});
    return serialize_PFN_vkDebugReportCallbackEXT(name.pfnCallback);}();
result["members"]["pUserData"]=[&]() {
    json return_RfiwOkf=json({});
    
        if (name.pUserData==NULL){
            return_RfiwOkf["null"]=true;
            return return_RfiwOkf;
        }
        return_RfiwOkf=[&]() {
    json return_KjbBIgx=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_KjbBIgx["null"]=true;
            return return_KjbBIgx;
        }
        
        return_KjbBIgx["members"]={};
        for(int KjbBIgx=0; KjbBIgx < strlen(((char*)(name.pUserData)))+1; KjbBIgx++){
            json temp;
            temp=[&]() {
    json return_IEhCgWt=json({});
    return serialize_char(((char*)(name.pUserData))[KjbBIgx]);}();
            return_KjbBIgx["members"].push_back(temp);
        }
        return return_KjbBIgx;
        }();return return_RfiwOkf;}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t pNext_id;
uintptr_t VkDebugReportFlagsEXT_id;
uintptr_t PFN_vkDebugReportCallbackEXT_id;
void* pUserData;
} VkDebugReportCallbackCreateInfoEXT_struct;

    VkDebugReportCallbackCreateInfoEXT deserialize_VkDebugReportCallbackCreateInfoEXT(json &name){
        auto result=VkDebugReportCallbackCreateInfoEXT();
    
auto _struct = new VkDebugReportCallbackCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkDebugReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnCallback=deserialize_PFN_vkDebugReportCallbackEXT(name["members"]["pfnCallback"]);
        #endif
        }();
_struct->PFN_vkDebugReportCallbackEXT_id=name["members"]["pfnCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp_xGRRIbb;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp_xGRRIbb=NULL;
        return;
        }
    temp_xGRRIbb=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int KHkwkWM=0; KHkwkWM < name["members"]["pUserData"]["members"].size(); KHkwkWM++){
            [&]() {
temp_xGRRIbb[KHkwkWM]=deserialize_char(name["members"]["pUserData"]["members"][KHkwkWM]);}();;
        }
        }();result.pUserData=(void*)temp_xGRRIbb;
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkValidationFlagsEXT(VkValidationFlagsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KCGXwBs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["disabledValidationCheckCount"]=[&]() {
    json return_JfqUUND=json({});
    return serialize_uint32_t(name.disabledValidationCheckCount);}();
result["members"]["pDisabledValidationChecks"]=[&]() {
    json return_sqIUNla=json({});
    
        if (name.pDisabledValidationChecks==NULL){
            return_sqIUNla["null"]=true;
            return return_sqIUNla;
        }
        
        return_sqIUNla["members"]={};
        for(int sqIUNla=0; sqIUNla < name.disabledValidationCheckCount; sqIUNla++){
            json temp;
            temp=[&]() {
    json return_feckggw=json({});
    return serialize_VkValidationCheckEXT(name.pDisabledValidationChecks[sqIUNla]);}();
            return_sqIUNla["members"].push_back(temp);
        }
        return return_sqIUNla;
        }();
return result;}

    VkValidationFlagsEXT deserialize_VkValidationFlagsEXT(json &name){
        auto result=VkValidationFlagsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.disabledValidationCheckCount=deserialize_uint32_t(name["members"]["disabledValidationCheckCount"]);}();
[&]() {
VkValidationCheckEXT* temp_pPuHfso;[&]() {

        if (name["members"]["pDisabledValidationChecks"].contains("null")){
        temp_pPuHfso=NULL;
        return;
        }
    temp_pPuHfso=(VkValidationCheckEXT*)malloc(result.disabledValidationCheckCount*sizeof(VkValidationCheckEXT));
        for (int hnaxHUR=0; hnaxHUR < result.disabledValidationCheckCount; hnaxHUR++){
            [&]() {
temp_pPuHfso[hnaxHUR]=deserialize_VkValidationCheckEXT(name["members"]["pDisabledValidationChecks"]["members"][hnaxHUR]);}();;
        }
        }();result.pDisabledValidationChecks=temp_pPuHfso;}();
return result;}

    json serialize_VkValidationFeaturesEXT(VkValidationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sLmolvI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["enabledValidationFeatureCount"]=[&]() {
    json return_TItHjQV=json({});
    return serialize_uint32_t(name.enabledValidationFeatureCount);}();
result["members"]["pEnabledValidationFeatures"]=[&]() {
    json return_TWYGAaH=json({});
    
        if (name.pEnabledValidationFeatures==NULL){
            return_TWYGAaH["null"]=true;
            return return_TWYGAaH;
        }
        
        return_TWYGAaH["members"]={};
        for(int TWYGAaH=0; TWYGAaH < name.enabledValidationFeatureCount; TWYGAaH++){
            json temp;
            temp=[&]() {
    json return_KBwQdjA=json({});
    return serialize_VkValidationFeatureEnableEXT(name.pEnabledValidationFeatures[TWYGAaH]);}();
            return_TWYGAaH["members"].push_back(temp);
        }
        return return_TWYGAaH;
        }();
result["members"]["disabledValidationFeatureCount"]=[&]() {
    json return_lSaPNKK=json({});
    return serialize_uint32_t(name.disabledValidationFeatureCount);}();
result["members"]["pDisabledValidationFeatures"]=[&]() {
    json return_FUjVZdt=json({});
    
        if (name.pDisabledValidationFeatures==NULL){
            return_FUjVZdt["null"]=true;
            return return_FUjVZdt;
        }
        
        return_FUjVZdt["members"]={};
        for(int FUjVZdt=0; FUjVZdt < name.disabledValidationFeatureCount; FUjVZdt++){
            json temp;
            temp=[&]() {
    json return_maBDlQL=json({});
    return serialize_VkValidationFeatureDisableEXT(name.pDisabledValidationFeatures[FUjVZdt]);}();
            return_FUjVZdt["members"].push_back(temp);
        }
        return return_FUjVZdt;
        }();
return result;}

    VkValidationFeaturesEXT deserialize_VkValidationFeaturesEXT(json &name){
        auto result=VkValidationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.enabledValidationFeatureCount=deserialize_uint32_t(name["members"]["enabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureEnableEXT* temp_EKGCBqt;[&]() {

        if (name["members"]["pEnabledValidationFeatures"].contains("null")){
        temp_EKGCBqt=NULL;
        return;
        }
    temp_EKGCBqt=(VkValidationFeatureEnableEXT*)malloc(result.enabledValidationFeatureCount*sizeof(VkValidationFeatureEnableEXT));
        for (int eESutBt=0; eESutBt < result.enabledValidationFeatureCount; eESutBt++){
            [&]() {
temp_EKGCBqt[eESutBt]=deserialize_VkValidationFeatureEnableEXT(name["members"]["pEnabledValidationFeatures"]["members"][eESutBt]);}();;
        }
        }();result.pEnabledValidationFeatures=temp_EKGCBqt;}();
[&]() {
result.disabledValidationFeatureCount=deserialize_uint32_t(name["members"]["disabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureDisableEXT* temp_OiWcTuP;[&]() {

        if (name["members"]["pDisabledValidationFeatures"].contains("null")){
        temp_OiWcTuP=NULL;
        return;
        }
    temp_OiWcTuP=(VkValidationFeatureDisableEXT*)malloc(result.disabledValidationFeatureCount*sizeof(VkValidationFeatureDisableEXT));
        for (int vCtMqlg=0; vCtMqlg < result.disabledValidationFeatureCount; vCtMqlg++){
            [&]() {
temp_OiWcTuP[vCtMqlg]=deserialize_VkValidationFeatureDisableEXT(name["members"]["pDisabledValidationFeatures"]["members"][vCtMqlg]);}();;
        }
        }();result.pDisabledValidationFeatures=temp_OiWcTuP;}();
return result;}

    json serialize_VkPipelineRasterizationStateRasterizationOrderAMD(VkPipelineRasterizationStateRasterizationOrderAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vRsyQkW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rasterizationOrder"]=[&]() {
    json return_rTXhppO=json({});
    return serialize_VkRasterizationOrderAMD(name.rasterizationOrder);}();
return result;}

    VkPipelineRasterizationStateRasterizationOrderAMD deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(json &name){
        auto result=VkPipelineRasterizationStateRasterizationOrderAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.rasterizationOrder=deserialize_VkRasterizationOrderAMD(name["members"]["rasterizationOrder"]);}();
return result;}

    json serialize_VkDebugMarkerObjectNameInfoEXT(VkDebugMarkerObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hXaUVtD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["objectType"]=[&]() {
    json return_EoiXmBl=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_fFvZWZF=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["pObjectName"]=[&]() {
    json return_NorbMvg=json({});
    
        if (name.pObjectName==NULL){
            return_NorbMvg["null"]=true;
            return return_NorbMvg;
        }
        
        return_NorbMvg["members"]={};
        for(int NorbMvg=0; NorbMvg < strlen(name.pObjectName)+1; NorbMvg++){
            json temp;
            temp=[&]() {
    json return_HBpeHVp=json({});
    return serialize_char(name.pObjectName[NorbMvg]);}();
            return_NorbMvg["members"].push_back(temp);
        }
        return return_NorbMvg;
        }();
return result;}

    VkDebugMarkerObjectNameInfoEXT deserialize_VkDebugMarkerObjectNameInfoEXT(json &name){
        auto result=VkDebugMarkerObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
char* temp_zmHmXva;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_zmHmXva=NULL;
        return;
        }
    temp_zmHmXva=(char*)malloc(name["members"]["pObjectName"]["members"].size()*sizeof(char));
        for (int eYFDjVw=0; eYFDjVw < name["members"]["pObjectName"]["members"].size(); eYFDjVw++){
            [&]() {
temp_zmHmXva[eYFDjVw]=deserialize_char(name["members"]["pObjectName"]["members"][eYFDjVw]);}();;
        }
        }();result.pObjectName=temp_zmHmXva;}();
return result;}

    json serialize_VkDebugMarkerObjectTagInfoEXT(VkDebugMarkerObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LqMKdBy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["objectType"]=[&]() {
    json return_EoiXmBl=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_fFvZWZF=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["tagName"]=[&]() {
    json return_iyfgjEO=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_gfYsqNe=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_MBtPgFu=json({});
    
        if (name.pTag==NULL){
            return_MBtPgFu["null"]=true;
            return return_MBtPgFu;
        }
        return_MBtPgFu=[&]() {
    json return_INJxdGL=json({});
    
        if (((char*)(name.pTag))==NULL){
            return_INJxdGL["null"]=true;
            return return_INJxdGL;
        }
        
        return_INJxdGL["members"]={};
        for(int INJxdGL=0; INJxdGL < name.tagSize; INJxdGL++){
            json temp;
            temp=[&]() {
    json return_GgPtxXv=json({});
    return serialize_char(((char*)(name.pTag))[INJxdGL]);}();
            return_INJxdGL["members"].push_back(temp);
        }
        return return_INJxdGL;
        }();return return_MBtPgFu;}();
return result;}

    VkDebugMarkerObjectTagInfoEXT deserialize_VkDebugMarkerObjectTagInfoEXT(json &name){
        auto result=VkDebugMarkerObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_yPRuKyC;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_yPRuKyC=NULL;
        return;
        }
    char* temp_xKXTsWw;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_xKXTsWw=NULL;
        return;
        }
    temp_xKXTsWw=(char*)malloc(result.tagSize*sizeof(char));
        for (int mLQHBFk=0; mLQHBFk < result.tagSize; mLQHBFk++){
            [&]() {
temp_xKXTsWw[mLQHBFk]=deserialize_char(name["members"]["pTag"]["members"][mLQHBFk]);}();;
        }
        }();temp_yPRuKyC=(void*)temp_xKXTsWw;
}();result.pTag=temp_yPRuKyC;}();
return result;}

    json serialize_VkDebugMarkerMarkerInfoEXT(VkDebugMarkerMarkerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zYNOvAy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pMarkerName"]=[&]() {
    json return_JpGaqrq=json({});
    
        if (name.pMarkerName==NULL){
            return_JpGaqrq["null"]=true;
            return return_JpGaqrq;
        }
        
        return_JpGaqrq["members"]={};
        for(int JpGaqrq=0; JpGaqrq < strlen(name.pMarkerName)+1; JpGaqrq++){
            json temp;
            temp=[&]() {
    json return_QazTeyb=json({});
    return serialize_char(name.pMarkerName[JpGaqrq]);}();
            return_JpGaqrq["members"].push_back(temp);
        }
        return return_JpGaqrq;
        }();
result["members"]["color"]=[&]() {
    json return_FNahXqy=json({});
    
        return_FNahXqy["members"]={};
        for(int FNahXqy=0; FNahXqy < 4; FNahXqy++){
            json temp;
            temp=[&]() {
    json return_qKKMDjH=json({});
    return serialize_float(name.color[FNahXqy]);}();
            return_FNahXqy["members"].push_back(temp);
        }
        return return_FNahXqy;
        }();
return result;}

    VkDebugMarkerMarkerInfoEXT deserialize_VkDebugMarkerMarkerInfoEXT(json &name){
        auto result=VkDebugMarkerMarkerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
char* temp_xjyNRYt;[&]() {

        if (name["members"]["pMarkerName"].contains("null")){
        temp_xjyNRYt=NULL;
        return;
        }
    temp_xjyNRYt=(char*)malloc(name["members"]["pMarkerName"]["members"].size()*sizeof(char));
        for (int cTOTBOu=0; cTOTBOu < name["members"]["pMarkerName"]["members"].size(); cTOTBOu++){
            [&]() {
temp_xjyNRYt[cTOTBOu]=deserialize_char(name["members"]["pMarkerName"]["members"][cTOTBOu]);}();;
        }
        }();result.pMarkerName=temp_xjyNRYt;}();
[&]() {

        for (int opxYUSD=0; opxYUSD < 4; opxYUSD++){
            [&]() {
result.color[opxYUSD]=deserialize_float(name["members"]["color"]["members"][opxYUSD]);}();;
        }
        }();
return result;}

    json serialize_VkDedicatedAllocationImageCreateInfoNV(VkDedicatedAllocationImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UekGPLx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_JEcjuOq=json({});
    return_JEcjuOq=[&]() {
    json return_luquZcu=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_JEcjuOq;}();
return result;}

    VkDedicatedAllocationImageCreateInfoNV deserialize_VkDedicatedAllocationImageCreateInfoNV(json &name){
        auto result=VkDedicatedAllocationImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationBufferCreateInfoNV(VkDedicatedAllocationBufferCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UwHofyq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_FdxMFAM=json({});
    return_FdxMFAM=[&]() {
    json return_VYqPHNE=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_FdxMFAM;}();
return result;}

    VkDedicatedAllocationBufferCreateInfoNV deserialize_VkDedicatedAllocationBufferCreateInfoNV(json &name){
        auto result=VkDedicatedAllocationBufferCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationMemoryAllocateInfoNV(VkDedicatedAllocationMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_goUBjgx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_hcdoCuf=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_TlAKuxg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDedicatedAllocationMemoryAllocateInfoNV deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(json &name){
        auto result=VkDedicatedAllocationMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesNV(VkExternalImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["imageFormatProperties"]=[&]() {
    json return_yCSSnTp=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_kMCKLnk=json({});
    return serialize_VkExternalMemoryFeatureFlagsNV(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_ffKCNBV=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_sBBLDkP=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.compatibleHandleTypes);}();
return result;}

    VkExternalImageFormatPropertiesNV deserialize_VkExternalImageFormatPropertiesNV(json &name){
        auto result=VkExternalImageFormatPropertiesNV();
    
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlagsNV(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoNV(VkExternalMemoryImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aFZsjvx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_LZihjUd=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoNV deserialize_VkExternalMemoryImageCreateInfoNV(json &name){
        auto result=VkExternalMemoryImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoNV(VkExportMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oUgDhBB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_LZihjUd=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoNV deserialize_VkExportMemoryAllocateInfoNV(json &name){
        auto result=VkExportMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FeqTFbz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceGeneratedCommands"]=[&]() {
    json return_GCCaqCL=json({});
    return_GCCaqCL=[&]() {
    json return_OThwBqv=json({});
    return serialize_uint32_t(name.deviceGeneratedCommands);}();return return_GCCaqCL;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(json &name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.deviceGeneratedCommands=deserialize_uint32_t(name["members"]["deviceGeneratedCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WumVhAh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JxLibiQ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceGeneratedCompute"]=[&]() {
    json return_qSifEvF=json({});
    return_qSifEvF=[&]() {
    json return_XwtWPVF=json({});
    return serialize_uint32_t(name.deviceGeneratedCompute);}();return return_qSifEvF;}();
result["members"]["deviceGeneratedComputePipelines"]=[&]() {
    json return_JIqGgfA=json({});
    return_JIqGgfA=[&]() {
    json return_mCufBtk=json({});
    return serialize_uint32_t(name.deviceGeneratedComputePipelines);}();return return_JIqGgfA;}();
result["members"]["deviceGeneratedComputeCaptureReplay"]=[&]() {
    json return_BaMNjAe=json({});
    return_BaMNjAe=[&]() {
    json return_eEaDaak=json({});
    return serialize_uint32_t(name.deviceGeneratedComputeCaptureReplay);}();return return_BaMNjAe;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(json &name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.deviceGeneratedCompute=deserialize_uint32_t(name["members"]["deviceGeneratedCompute"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputePipelines=deserialize_uint32_t(name["members"]["deviceGeneratedComputePipelines"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputeCaptureReplay=deserialize_uint32_t(name["members"]["deviceGeneratedComputeCaptureReplay"]);}();}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfo(VkDevicePrivateDataCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EFZojyd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_MmmcwbP=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfo deserialize_VkDevicePrivateDataCreateInfo(json &name){
        auto result=VkDevicePrivateDataCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfoEXT(VkDevicePrivateDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EFZojyd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_MmmcwbP=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfoEXT deserialize_VkDevicePrivateDataCreateInfoEXT(json &name){
        auto result=VkDevicePrivateDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfo(VkPrivateDataSlotCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NFCgGdY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_XEILlZn=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfo deserialize_VkPrivateDataSlotCreateInfo(json &name){
        auto result=VkPrivateDataSlotCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfoEXT(VkPrivateDataSlotCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NFCgGdY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_XEILlZn=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfoEXT deserialize_VkPrivateDataSlotCreateInfoEXT(json &name){
        auto result=VkPrivateDataSlotCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeatures(VkPhysicalDevicePrivateDataFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AMwnzXa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cLMbQUP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["privateData"]=[&]() {
    json return_VMwhFcE=json({});
    return_VMwhFcE=[&]() {
    json return_PhPUMFF=json({});
    return serialize_uint32_t(name.privateData);}();return return_VMwhFcE;}();
return result;}

    VkPhysicalDevicePrivateDataFeatures deserialize_VkPhysicalDevicePrivateDataFeatures(json &name){
        auto result=VkPhysicalDevicePrivateDataFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeaturesEXT(VkPhysicalDevicePrivateDataFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AMwnzXa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cLMbQUP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["privateData"]=[&]() {
    json return_VMwhFcE=json({});
    return_VMwhFcE=[&]() {
    json return_PhPUMFF=json({});
    return serialize_uint32_t(name.privateData);}();return return_VMwhFcE;}();
return result;}

    VkPhysicalDevicePrivateDataFeaturesEXT deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePrivateDataFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_raTDrhV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxGraphicsShaderGroupCount"]=[&]() {
    json return_uWcEiha=json({});
    return serialize_uint32_t(name.maxGraphicsShaderGroupCount);}();
result["members"]["maxIndirectSequenceCount"]=[&]() {
    json return_hEZARwx=json({});
    return serialize_uint32_t(name.maxIndirectSequenceCount);}();
result["members"]["maxIndirectCommandsTokenCount"]=[&]() {
    json return_ngYmoyw=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenCount);}();
result["members"]["maxIndirectCommandsStreamCount"]=[&]() {
    json return_dzKNKnu=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamCount);}();
result["members"]["maxIndirectCommandsTokenOffset"]=[&]() {
    json return_doxDESG=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenOffset);}();
result["members"]["maxIndirectCommandsStreamStride"]=[&]() {
    json return_TBnknhl=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamStride);}();
result["members"]["minSequencesCountBufferOffsetAlignment"]=[&]() {
    json return_DwlEGEP=json({});
    return serialize_uint32_t(name.minSequencesCountBufferOffsetAlignment);}();
result["members"]["minSequencesIndexBufferOffsetAlignment"]=[&]() {
    json return_nofcJaj=json({});
    return serialize_uint32_t(name.minSequencesIndexBufferOffsetAlignment);}();
result["members"]["minIndirectCommandsBufferOffsetAlignment"]=[&]() {
    json return_EvGOWJz=json({});
    return serialize_uint32_t(name.minIndirectCommandsBufferOffsetAlignment);}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(json &name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxGraphicsShaderGroupCount=deserialize_uint32_t(name["members"]["maxGraphicsShaderGroupCount"]);}();
[&]() {
result.maxIndirectSequenceCount=deserialize_uint32_t(name["members"]["maxIndirectSequenceCount"]);}();
[&]() {
result.maxIndirectCommandsTokenCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenCount"]);}();
[&]() {
result.maxIndirectCommandsStreamCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamCount"]);}();
[&]() {
result.maxIndirectCommandsTokenOffset=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenOffset"]);}();
[&]() {
result.maxIndirectCommandsStreamStride=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamStride"]);}();
[&]() {
result.minSequencesCountBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesCountBufferOffsetAlignment"]);}();
[&]() {
result.minSequencesIndexBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesIndexBufferOffsetAlignment"]);}();
[&]() {
result.minIndirectCommandsBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minIndirectCommandsBufferOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(VkPhysicalDeviceMultiDrawPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_obfHouF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxMultiDrawCount"]=[&]() {
    json return_RbKfbhB=json({});
    return serialize_uint32_t(name.maxMultiDrawCount);}();
return result;}

    VkPhysicalDeviceMultiDrawPropertiesEXT deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceMultiDrawPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxMultiDrawCount=deserialize_uint32_t(name["members"]["maxMultiDrawCount"]);}();
return result;}

    json serialize_VkGraphicsShaderGroupCreateInfoNV(VkGraphicsShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSeRTqQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stageCount"]=[&]() {
    json return_eMmDMVt=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_CPaRMLX=json({});
    
        if (name.pStages==NULL){
            return_CPaRMLX["null"]=true;
            return return_CPaRMLX;
        }
        
        return_CPaRMLX["members"]={};
        for(int CPaRMLX=0; CPaRMLX < name.stageCount; CPaRMLX++){
            json temp;
            temp=[&]() {
    json return_EKRKkZo=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[CPaRMLX]);}();
            return_CPaRMLX["members"].push_back(temp);
        }
        return return_CPaRMLX;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_JoeXNBB=json({});
    
        if (name.pVertexInputState==NULL){
            return_JoeXNBB["null"]=true;
            return return_JoeXNBB;
        }
        return_JoeXNBB=[&]() {
    json return_MfPPVSU=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_JoeXNBB;}();
result["members"]["pTessellationState"]=[&]() {
    json return_yqdmBnR=json({});
    
        if (name.pTessellationState==NULL){
            return_yqdmBnR["null"]=true;
            return return_yqdmBnR;
        }
        return_yqdmBnR=[&]() {
    json return_rqidDJB=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_yqdmBnR;}();
return result;}

    VkGraphicsShaderGroupCreateInfoNV deserialize_VkGraphicsShaderGroupCreateInfoNV(json &name){
        auto result=VkGraphicsShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_tjeKyYq;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_tjeKyYq=NULL;
        return;
        }
    temp_tjeKyYq=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int ucHdQeN=0; ucHdQeN < result.stageCount; ucHdQeN++){
            [&]() {
temp_tjeKyYq[ucHdQeN]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][ucHdQeN]);}();;
        }
        }();result.pStages=temp_tjeKyYq;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_TgdxDvE;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_TgdxDvE=NULL;
        return;
        }
    temp_TgdxDvE=(VkPipelineVertexInputStateCreateInfo*)malloc(sizeof(VkPipelineVertexInputStateCreateInfo));
[&]() {
*(temp_TgdxDvE)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_TgdxDvE;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_ioXmTgu;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_ioXmTgu=NULL;
        return;
        }
    temp_ioXmTgu=(VkPipelineTessellationStateCreateInfo*)malloc(sizeof(VkPipelineTessellationStateCreateInfo));
[&]() {
*(temp_ioXmTgu)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_ioXmTgu;}();
return result;}

    json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(VkGraphicsPipelineShaderGroupsCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YFBjllv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nNniLrj=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["groupCount"]=[&]() {
    json return_MVYsZnn=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_RzkRLeU=json({});
    
        if (name.pGroups==NULL){
            return_RzkRLeU["null"]=true;
            return return_RzkRLeU;
        }
        
        return_RzkRLeU["members"]={};
        for(int RzkRLeU=0; RzkRLeU < name.groupCount; RzkRLeU++){
            json temp;
            temp=[&]() {
    json return_pTuaSbH=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(name.pGroups[RzkRLeU]);}();
            return_RzkRLeU["members"].push_back(temp);
        }
        return return_RzkRLeU;
        }();
result["members"]["pipelineCount"]=[&]() {
    json return_sFFFCtD=json({});
    return serialize_uint32_t(name.pipelineCount);}();
result["members"]["pPipelines"]=[&]() {
    json return_VasEtRm=json({});
    
        if (name.pPipelines==NULL){
            return_VasEtRm["null"]=true;
            return return_VasEtRm;
        }
        
        return_VasEtRm["members"]={};
        for(int VasEtRm=0; VasEtRm < name.pipelineCount; VasEtRm++){
            json temp;
            temp=[&]() {
    json return_OHhAKDF=json({});
    return serialize_VkPipeline(name.pPipelines[VasEtRm]);}();
            return_VasEtRm["members"].push_back(temp);
        }
        return return_VasEtRm;
        }();
return result;}

    VkGraphicsPipelineShaderGroupsCreateInfoNV deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(json &name){
        auto result=VkGraphicsPipelineShaderGroupsCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_eJPiWGi;[&]() {
temp_eJPiWGi=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_eJPiWGi;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkGraphicsShaderGroupCreateInfoNV* temp_xhrraew;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_xhrraew=NULL;
        return;
        }
    temp_xhrraew=(VkGraphicsShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkGraphicsShaderGroupCreateInfoNV));
        for (int TrKJOow=0; TrKJOow < result.groupCount; TrKJOow++){
            [&]() {
temp_xhrraew[TrKJOow]=deserialize_VkGraphicsShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][TrKJOow]);}();;
        }
        }();result.pGroups=temp_xhrraew;}();
[&]() {
result.pipelineCount=deserialize_uint32_t(name["members"]["pipelineCount"]);}();
[&]() {
VkPipeline* temp_ZoHDgzU;[&]() {

        if (name["members"]["pPipelines"].contains("null")){
        temp_ZoHDgzU=NULL;
        return;
        }
    temp_ZoHDgzU=(VkPipeline*)malloc(result.pipelineCount*sizeof(VkPipeline));
        for (int yWtaMEI=0; yWtaMEI < result.pipelineCount; yWtaMEI++){
            [&]() {
temp_ZoHDgzU[yWtaMEI]=deserialize_VkPipeline(name["members"]["pPipelines"]["members"][yWtaMEI]);}();;
        }
        }();result.pPipelines=temp_ZoHDgzU;}();
return result;}

    json serialize_VkBindShaderGroupIndirectCommandNV(VkBindShaderGroupIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupIndex"]=[&]() {
    json return_baEYJtP=json({});
    return serialize_uint32_t(name.groupIndex);}();
return result;}

    VkBindShaderGroupIndirectCommandNV deserialize_VkBindShaderGroupIndirectCommandNV(json &name){
        auto result=VkBindShaderGroupIndirectCommandNV();
    
[&]() {
result.groupIndex=deserialize_uint32_t(name["members"]["groupIndex"]);}();
return result;}

    json serialize_VkBindIndexBufferIndirectCommandNV(VkBindIndexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_KyGNdYF=json({});
    return_KyGNdYF=[&]() {
    json return_UPROyTR=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_KyGNdYF;}();
result["members"]["size"]=[&]() {
    json return_xqwnilZ=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["indexType"]=[&]() {
    json return_XQRTvqs=json({});
    return serialize_VkIndexType(name.indexType);}();
return result;}

    VkBindIndexBufferIndirectCommandNV deserialize_VkBindIndexBufferIndirectCommandNV(json &name){
        auto result=VkBindIndexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
return result;}

    json serialize_VkBindVertexBufferIndirectCommandNV(VkBindVertexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_KyGNdYF=json({});
    return_KyGNdYF=[&]() {
    json return_UPROyTR=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_KyGNdYF;}();
result["members"]["size"]=[&]() {
    json return_xqwnilZ=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["stride"]=[&]() {
    json return_bifFqCJ=json({});
    return serialize_uint32_t(name.stride);}();
return result;}

    VkBindVertexBufferIndirectCommandNV deserialize_VkBindVertexBufferIndirectCommandNV(json &name){
        auto result=VkBindVertexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkSetStateFlagsIndirectCommandNV(VkSetStateFlagsIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["data"]=[&]() {
    json return_qmgUAOC=json({});
    return serialize_uint32_t(name.data);}();
return result;}

    VkSetStateFlagsIndirectCommandNV deserialize_VkSetStateFlagsIndirectCommandNV(json &name){
        auto result=VkSetStateFlagsIndirectCommandNV();
    
[&]() {
result.data=deserialize_uint32_t(name["members"]["data"]);}();
return result;}

    json serialize_VkIndirectCommandsStreamNV(VkIndirectCommandsStreamNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_SKhmQYd=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_KVoSIbj=json({});
    return_KVoSIbj=[&]() {
    json return_YMJaLUN=json({});
    return serialize_uint64_t(name.offset);}();return return_KVoSIbj;}();
return result;}

    VkIndirectCommandsStreamNV deserialize_VkIndirectCommandsStreamNV(json &name){
        auto result=VkIndirectCommandsStreamNV();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkIndirectCommandsLayoutTokenNV(VkIndirectCommandsLayoutTokenNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_APepgDS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["tokenType"]=[&]() {
    json return_ezbmccp=json({});
    return serialize_VkIndirectCommandsTokenTypeNV(name.tokenType);}();
result["members"]["stream"]=[&]() {
    json return_CmirdPB=json({});
    return serialize_uint32_t(name.stream);}();
result["members"]["offset"]=[&]() {
    json return_QkNtDha=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["vertexBindingUnit"]=[&]() {
    json return_NxoLZdJ=json({});
    return serialize_uint32_t(name.vertexBindingUnit);}();
result["members"]["vertexDynamicStride"]=[&]() {
    json return_owARqge=json({});
    return_owARqge=[&]() {
    json return_ADazXOv=json({});
    return serialize_uint32_t(name.vertexDynamicStride);}();return return_owARqge;}();
result["members"]["pushconstantPipelineLayout"]=[&]() {
    json return_OXFasEn=json({});
    return serialize_VkPipelineLayout(name.pushconstantPipelineLayout);}();
result["members"]["pushconstantShaderStageFlags"]=[&]() {
    json return_lSenZUY=json({});
    return serialize_VkShaderStageFlags(name.pushconstantShaderStageFlags);}();
result["members"]["pushconstantOffset"]=[&]() {
    json return_AgdIYEI=json({});
    return serialize_uint32_t(name.pushconstantOffset);}();
result["members"]["pushconstantSize"]=[&]() {
    json return_bmhWXln=json({});
    return serialize_uint32_t(name.pushconstantSize);}();
result["members"]["indirectStateFlags"]=[&]() {
    json return_mDUqXXI=json({});
    return serialize_VkIndirectStateFlagsNV(name.indirectStateFlags);}();
result["members"]["indexTypeCount"]=[&]() {
    json return_hlKodkQ=json({});
    return serialize_uint32_t(name.indexTypeCount);}();
result["members"]["pIndexTypes"]=[&]() {
    json return_iFYfPNW=json({});
    
        if (name.pIndexTypes==NULL){
            return_iFYfPNW["null"]=true;
            return return_iFYfPNW;
        }
        
        return_iFYfPNW["members"]={};
        for(int iFYfPNW=0; iFYfPNW < name.indexTypeCount; iFYfPNW++){
            json temp;
            temp=[&]() {
    json return_owFYpuv=json({});
    return serialize_VkIndexType(name.pIndexTypes[iFYfPNW]);}();
            return_iFYfPNW["members"].push_back(temp);
        }
        return return_iFYfPNW;
        }();
result["members"]["pIndexTypeValues"]=[&]() {
    json return_NFRJVeh=json({});
    
        if (name.pIndexTypeValues==NULL){
            return_NFRJVeh["null"]=true;
            return return_NFRJVeh;
        }
        
        return_NFRJVeh["members"]={};
        for(int NFRJVeh=0; NFRJVeh < name.indexTypeCount; NFRJVeh++){
            json temp;
            temp=[&]() {
    json return_BodtOQf=json({});
    return serialize_uint32_t(name.pIndexTypeValues[NFRJVeh]);}();
            return_NFRJVeh["members"].push_back(temp);
        }
        return return_NFRJVeh;
        }();
return result;}

    VkIndirectCommandsLayoutTokenNV deserialize_VkIndirectCommandsLayoutTokenNV(json &name){
        auto result=VkIndirectCommandsLayoutTokenNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {
result.tokenType=deserialize_VkIndirectCommandsTokenTypeNV(name["members"]["tokenType"]);}();
[&]() {
result.stream=deserialize_uint32_t(name["members"]["stream"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.vertexBindingUnit=deserialize_uint32_t(name["members"]["vertexBindingUnit"]);}();
[&]() {
[&]() {
result.vertexDynamicStride=deserialize_uint32_t(name["members"]["vertexDynamicStride"]);}();}();
[&]() {
result.pushconstantPipelineLayout=deserialize_VkPipelineLayout(name["members"]["pushconstantPipelineLayout"]);}();
[&]() {
result.pushconstantShaderStageFlags=deserialize_VkShaderStageFlags(name["members"]["pushconstantShaderStageFlags"]);}();
[&]() {
result.pushconstantOffset=deserialize_uint32_t(name["members"]["pushconstantOffset"]);}();
[&]() {
result.pushconstantSize=deserialize_uint32_t(name["members"]["pushconstantSize"]);}();
[&]() {
result.indirectStateFlags=deserialize_VkIndirectStateFlagsNV(name["members"]["indirectStateFlags"]);}();
[&]() {
result.indexTypeCount=deserialize_uint32_t(name["members"]["indexTypeCount"]);}();
[&]() {
VkIndexType* temp_VdtxtBf;[&]() {

        if (name["members"]["pIndexTypes"].contains("null")){
        temp_VdtxtBf=NULL;
        return;
        }
    temp_VdtxtBf=(VkIndexType*)malloc(result.indexTypeCount*sizeof(VkIndexType));
        for (int lvPizFF=0; lvPizFF < result.indexTypeCount; lvPizFF++){
            [&]() {
temp_VdtxtBf[lvPizFF]=deserialize_VkIndexType(name["members"]["pIndexTypes"]["members"][lvPizFF]);}();;
        }
        }();result.pIndexTypes=temp_VdtxtBf;}();
[&]() {
uint32_t* temp_xScMsXX;[&]() {

        if (name["members"]["pIndexTypeValues"].contains("null")){
        temp_xScMsXX=NULL;
        return;
        }
    temp_xScMsXX=(uint32_t*)malloc(result.indexTypeCount*sizeof(uint32_t));
        for (int tVtFhPg=0; tVtFhPg < result.indexTypeCount; tVtFhPg++){
            [&]() {
temp_xScMsXX[tVtFhPg]=deserialize_uint32_t(name["members"]["pIndexTypeValues"]["members"][tVtFhPg]);}();;
        }
        }();result.pIndexTypeValues=temp_xScMsXX;}();
return result;}

    json serialize_VkIndirectCommandsLayoutCreateInfoNV(VkIndirectCommandsLayoutCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bFwsiez=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jjpEuVo=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_MfefrwG=json({});
    return serialize_VkIndirectCommandsLayoutUsageFlagsNV(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_QIGlJkE=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["tokenCount"]=[&]() {
    json return_ixQezsc=json({});
    return serialize_uint32_t(name.tokenCount);}();
result["members"]["pTokens"]=[&]() {
    json return_xEFEcls=json({});
    
        if (name.pTokens==NULL){
            return_xEFEcls["null"]=true;
            return return_xEFEcls;
        }
        
        return_xEFEcls["members"]={};
        for(int xEFEcls=0; xEFEcls < name.tokenCount; xEFEcls++){
            json temp;
            temp=[&]() {
    json return_UORRZtP=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(name.pTokens[xEFEcls]);}();
            return_xEFEcls["members"].push_back(temp);
        }
        return return_xEFEcls;
        }();
result["members"]["streamCount"]=[&]() {
    json return_YSXxzAf=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreamStrides"]=[&]() {
    json return_TMdgQkA=json({});
    
        if (name.pStreamStrides==NULL){
            return_TMdgQkA["null"]=true;
            return return_TMdgQkA;
        }
        
        return_TMdgQkA["members"]={};
        for(int TMdgQkA=0; TMdgQkA < name.streamCount; TMdgQkA++){
            json temp;
            temp=[&]() {
    json return_rsCawAl=json({});
    return serialize_uint32_t(name.pStreamStrides[TMdgQkA]);}();
            return_TMdgQkA["members"].push_back(temp);
        }
        return return_TMdgQkA;
        }();
return result;}

    VkIndirectCommandsLayoutCreateInfoNV deserialize_VkIndirectCommandsLayoutCreateInfoNV(json &name){
        auto result=VkIndirectCommandsLayoutCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_MTVHsNm;[&]() {
temp_MTVHsNm=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_MTVHsNm;}();
[&]() {
result.flags=deserialize_VkIndirectCommandsLayoutUsageFlagsNV(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.tokenCount=deserialize_uint32_t(name["members"]["tokenCount"]);}();
[&]() {
VkIndirectCommandsLayoutTokenNV* temp_rULbUap;[&]() {

        if (name["members"]["pTokens"].contains("null")){
        temp_rULbUap=NULL;
        return;
        }
    temp_rULbUap=(VkIndirectCommandsLayoutTokenNV*)malloc(result.tokenCount*sizeof(VkIndirectCommandsLayoutTokenNV));
        for (int ZJSlmxt=0; ZJSlmxt < result.tokenCount; ZJSlmxt++){
            [&]() {
temp_rULbUap[ZJSlmxt]=deserialize_VkIndirectCommandsLayoutTokenNV(name["members"]["pTokens"]["members"][ZJSlmxt]);}();;
        }
        }();result.pTokens=temp_rULbUap;}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
uint32_t* temp_ZYWyUuP;[&]() {

        if (name["members"]["pStreamStrides"].contains("null")){
        temp_ZYWyUuP=NULL;
        return;
        }
    temp_ZYWyUuP=(uint32_t*)malloc(result.streamCount*sizeof(uint32_t));
        for (int psMTEYS=0; psMTEYS < result.streamCount; psMTEYS++){
            [&]() {
temp_ZYWyUuP[psMTEYS]=deserialize_uint32_t(name["members"]["pStreamStrides"]["members"][psMTEYS]);}();;
        }
        }();result.pStreamStrides=temp_ZYWyUuP;}();
return result;}

    json serialize_VkGeneratedCommandsInfoNV(VkGeneratedCommandsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CELMiEc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_sucepRy=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_VXLsLBk=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_iDxjNkk=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["streamCount"]=[&]() {
    json return_BdCVhMv=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreams"]=[&]() {
    json return_vUMdxqx=json({});
    
        if (name.pStreams==NULL){
            return_vUMdxqx["null"]=true;
            return return_vUMdxqx;
        }
        
        return_vUMdxqx["members"]={};
        for(int vUMdxqx=0; vUMdxqx < name.streamCount; vUMdxqx++){
            json temp;
            temp=[&]() {
    json return_QwERpXi=json({});
    return serialize_VkIndirectCommandsStreamNV(name.pStreams[vUMdxqx]);}();
            return_vUMdxqx["members"].push_back(temp);
        }
        return return_vUMdxqx;
        }();
result["members"]["sequencesCount"]=[&]() {
    json return_lWGSLjS=json({});
    return serialize_uint32_t(name.sequencesCount);}();
result["members"]["preprocessBuffer"]=[&]() {
    json return_fgBHAtG=json({});
    return serialize_VkBuffer(name.preprocessBuffer);}();
result["members"]["preprocessOffset"]=[&]() {
    json return_ZIahWkG=json({});
    return_ZIahWkG=[&]() {
    json return_ACcIEJW=json({});
    return serialize_uint64_t(name.preprocessOffset);}();return return_ZIahWkG;}();
result["members"]["preprocessSize"]=[&]() {
    json return_VtFdEqz=json({});
    return_VtFdEqz=[&]() {
    json return_MoIZeKs=json({});
    return serialize_uint64_t(name.preprocessSize);}();return return_VtFdEqz;}();
result["members"]["sequencesCountBuffer"]=[&]() {
    json return_IcfwZnX=json({});
    return serialize_VkBuffer(name.sequencesCountBuffer);}();
result["members"]["sequencesCountOffset"]=[&]() {
    json return_QukCXJx=json({});
    return_QukCXJx=[&]() {
    json return_lwNUyXU=json({});
    return serialize_uint64_t(name.sequencesCountOffset);}();return return_QukCXJx;}();
result["members"]["sequencesIndexBuffer"]=[&]() {
    json return_DVIbzyQ=json({});
    return serialize_VkBuffer(name.sequencesIndexBuffer);}();
result["members"]["sequencesIndexOffset"]=[&]() {
    json return_wPxUvyz=json({});
    return_wPxUvyz=[&]() {
    json return_APZktGb=json({});
    return serialize_uint64_t(name.sequencesIndexOffset);}();return return_wPxUvyz;}();
return result;}

    VkGeneratedCommandsInfoNV deserialize_VkGeneratedCommandsInfoNV(json &name){
        auto result=VkGeneratedCommandsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
VkIndirectCommandsStreamNV* temp_yNFcUFE;[&]() {

        if (name["members"]["pStreams"].contains("null")){
        temp_yNFcUFE=NULL;
        return;
        }
    temp_yNFcUFE=(VkIndirectCommandsStreamNV*)malloc(result.streamCount*sizeof(VkIndirectCommandsStreamNV));
        for (int KaILCYN=0; KaILCYN < result.streamCount; KaILCYN++){
            [&]() {
temp_yNFcUFE[KaILCYN]=deserialize_VkIndirectCommandsStreamNV(name["members"]["pStreams"]["members"][KaILCYN]);}();;
        }
        }();result.pStreams=temp_yNFcUFE;}();
[&]() {
result.sequencesCount=deserialize_uint32_t(name["members"]["sequencesCount"]);}();
[&]() {
result.preprocessBuffer=deserialize_VkBuffer(name["members"]["preprocessBuffer"]);}();
[&]() {
[&]() {
result.preprocessOffset=deserialize_uint64_t(name["members"]["preprocessOffset"]);}();}();
[&]() {
[&]() {
result.preprocessSize=deserialize_uint64_t(name["members"]["preprocessSize"]);}();}();
[&]() {
result.sequencesCountBuffer=deserialize_VkBuffer(name["members"]["sequencesCountBuffer"]);}();
[&]() {
[&]() {
result.sequencesCountOffset=deserialize_uint64_t(name["members"]["sequencesCountOffset"]);}();}();
[&]() {
result.sequencesIndexBuffer=deserialize_VkBuffer(name["members"]["sequencesIndexBuffer"]);}();
[&]() {
[&]() {
result.sequencesIndexOffset=deserialize_uint64_t(name["members"]["sequencesIndexOffset"]);}();}();
return result;}

    json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(VkGeneratedCommandsMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mqbUnCb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KlESVpD=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_qUKrtUP=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_oufFUHr=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_LlPuxew=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["maxSequencesCount"]=[&]() {
    json return_wzDVexD=json({});
    return serialize_uint32_t(name.maxSequencesCount);}();
return result;}

    VkGeneratedCommandsMemoryRequirementsInfoNV deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(json &name){
        auto result=VkGeneratedCommandsMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XeEuUtf;[&]() {
temp_XeEuUtf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XeEuUtf;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.maxSequencesCount=deserialize_uint32_t(name["members"]["maxSequencesCount"]);}();
return result;}

    json serialize_VkPipelineIndirectDeviceAddressInfoNV(VkPipelineIndirectDeviceAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yoRBwhD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TDxuxbE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_SMzwiJZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_gkZahXJ=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineIndirectDeviceAddressInfoNV deserialize_VkPipelineIndirectDeviceAddressInfoNV(json &name){
        auto result=VkPipelineIndirectDeviceAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_wNPKlhZ;[&]() {
temp_wNPKlhZ=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_wNPKlhZ;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkBindPipelineIndirectCommandNV(VkBindPipelineIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pipelineAddress"]=[&]() {
    json return_OrrdHHN=json({});
    return_OrrdHHN=[&]() {
    json return_wmAJtEg=json({});
    return serialize_uint64_t(name.pipelineAddress);}();return return_OrrdHHN;}();
return result;}

    VkBindPipelineIndirectCommandNV deserialize_VkBindPipelineIndirectCommandNV(json &name){
        auto result=VkBindPipelineIndirectCommandNV();
    
[&]() {
[&]() {
result.pipelineAddress=deserialize_uint64_t(name["members"]["pipelineAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2(VkPhysicalDeviceFeatures2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Symfkoj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["features"]=[&]() {
    json return_TgVftPL=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2 deserialize_VkPhysicalDeviceFeatures2(json &name){
        auto result=VkPhysicalDeviceFeatures2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2KHR(VkPhysicalDeviceFeatures2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Symfkoj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["features"]=[&]() {
    json return_TgVftPL=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2KHR deserialize_VkPhysicalDeviceFeatures2KHR(json &name){
        auto result=VkPhysicalDeviceFeatures2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2(VkPhysicalDeviceProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UDtAjFA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["properties"]=[&]() {
    json return_eGVkQUU=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2 deserialize_VkPhysicalDeviceProperties2(json &name){
        auto result=VkPhysicalDeviceProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2KHR(VkPhysicalDeviceProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UDtAjFA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["properties"]=[&]() {
    json return_eGVkQUU=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2KHR deserialize_VkPhysicalDeviceProperties2KHR(json &name){
        auto result=VkPhysicalDeviceProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkFormatProperties2(VkFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QSuhiGe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["formatProperties"]=[&]() {
    json return_dTZIRWi=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2 deserialize_VkFormatProperties2(json &name){
        auto result=VkFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkFormatProperties2KHR(VkFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QSuhiGe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["formatProperties"]=[&]() {
    json return_dTZIRWi=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2KHR deserialize_VkFormatProperties2KHR(json &name){
        auto result=VkFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2(VkImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yIriuwr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_ezHumci=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2 deserialize_VkImageFormatProperties2(json &name){
        auto result=VkImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2KHR(VkImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yIriuwr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_ezHumci=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2KHR deserialize_VkImageFormatProperties2KHR(json &name){
        auto result=VkImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2(VkPhysicalDeviceImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aKGXsHw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_IHIorIF=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_pOBWfPb=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_pCKQKVy=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_JtwAebM=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_xMlgiHt=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2 deserialize_VkPhysicalDeviceImageFormatInfo2(json &name){
        auto result=VkPhysicalDeviceImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2KHR(VkPhysicalDeviceImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aKGXsHw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_IHIorIF=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_pOBWfPb=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_pCKQKVy=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_JtwAebM=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_xMlgiHt=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2KHR deserialize_VkPhysicalDeviceImageFormatInfo2KHR(json &name){
        auto result=VkPhysicalDeviceImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2(VkQueueFamilyProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fiGjzXz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_dmqdrhD=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2 deserialize_VkQueueFamilyProperties2(json &name){
        auto result=VkQueueFamilyProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2KHR(VkQueueFamilyProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fiGjzXz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_dmqdrhD=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2KHR deserialize_VkQueueFamilyProperties2KHR(json &name){
        auto result=VkQueueFamilyProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2(VkPhysicalDeviceMemoryProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PWfbVIu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryProperties"]=[&]() {
    json return_PFMnPuT=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2 deserialize_VkPhysicalDeviceMemoryProperties2(json &name){
        auto result=VkPhysicalDeviceMemoryProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2KHR(VkPhysicalDeviceMemoryProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PWfbVIu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryProperties"]=[&]() {
    json return_PFMnPuT=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2KHR deserialize_VkPhysicalDeviceMemoryProperties2KHR(json &name){
        auto result=VkPhysicalDeviceMemoryProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2(VkSparseImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xURPIVm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["properties"]=[&]() {
    json return_FLMAjlU=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2 deserialize_VkSparseImageFormatProperties2(json &name){
        auto result=VkSparseImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2KHR(VkSparseImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xURPIVm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["properties"]=[&]() {
    json return_FLMAjlU=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2KHR deserialize_VkSparseImageFormatProperties2KHR(json &name){
        auto result=VkSparseImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2(VkPhysicalDeviceSparseImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pPsXtbD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_IHIorIF=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_pOBWfPb=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_RjinSwx=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_JtwAebM=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_TORZhNq=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2 deserialize_VkPhysicalDeviceSparseImageFormatInfo2(json &name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(VkPhysicalDeviceSparseImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pPsXtbD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_IHIorIF=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_pOBWfPb=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_RjinSwx=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_JtwAebM=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_TORZhNq=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2KHR deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(json &name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(VkPhysicalDevicePushDescriptorPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kAsoJHn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxPushDescriptors"]=[&]() {
    json return_spTTgJg=json({});
    return serialize_uint32_t(name.maxPushDescriptors);}();
return result;}

    VkPhysicalDevicePushDescriptorPropertiesKHR deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(json &name){
        auto result=VkPhysicalDevicePushDescriptorPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxPushDescriptors=deserialize_uint32_t(name["members"]["maxPushDescriptors"]);}();
return result;}

    json serialize_VkConformanceVersion(VkConformanceVersion name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_SyzMbrG=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_Edxfpyg=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_fChuRVV=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_GKMOyzd=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersion deserialize_VkConformanceVersion(json &name){
        auto result=VkConformanceVersion();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkConformanceVersionKHR(VkConformanceVersionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_SyzMbrG=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_Edxfpyg=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_fChuRVV=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_GKMOyzd=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersionKHR deserialize_VkConformanceVersionKHR(json &name){
        auto result=VkConformanceVersionKHR();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverProperties(VkPhysicalDeviceDriverProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LKJCiRo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["driverID"]=[&]() {
    json return_kNPTflK=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_bqMbDnW=json({});
    
        return_bqMbDnW["members"]={};
        for(int bqMbDnW=0; bqMbDnW < VK_MAX_DRIVER_NAME_SIZE; bqMbDnW++){
            json temp;
            temp=[&]() {
    json return_brycxJc=json({});
    return serialize_char(name.driverName[bqMbDnW]);}();
            return_bqMbDnW["members"].push_back(temp);
        }
        return return_bqMbDnW;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_QwzjkOk=json({});
    
        return_QwzjkOk["members"]={};
        for(int QwzjkOk=0; QwzjkOk < VK_MAX_DRIVER_INFO_SIZE; QwzjkOk++){
            json temp;
            temp=[&]() {
    json return_sutWGZw=json({});
    return serialize_char(name.driverInfo[QwzjkOk]);}();
            return_QwzjkOk["members"].push_back(temp);
        }
        return return_QwzjkOk;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_OTrjWAc=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverProperties deserialize_VkPhysicalDeviceDriverProperties(json &name){
        auto result=VkPhysicalDeviceDriverProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int PazGYxl=0; PazGYxl < VK_MAX_DRIVER_NAME_SIZE; PazGYxl++){
            [&]() {
result.driverName[PazGYxl]=deserialize_char(name["members"]["driverName"]["members"][PazGYxl]);}();;
        }
        }();
[&]() {

        for (int vNpEWYm=0; vNpEWYm < VK_MAX_DRIVER_INFO_SIZE; vNpEWYm++){
            [&]() {
result.driverInfo[vNpEWYm]=deserialize_char(name["members"]["driverInfo"]["members"][vNpEWYm]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverPropertiesKHR(VkPhysicalDeviceDriverPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LKJCiRo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["driverID"]=[&]() {
    json return_kNPTflK=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_bqMbDnW=json({});
    
        return_bqMbDnW["members"]={};
        for(int bqMbDnW=0; bqMbDnW < VK_MAX_DRIVER_NAME_SIZE; bqMbDnW++){
            json temp;
            temp=[&]() {
    json return_brycxJc=json({});
    return serialize_char(name.driverName[bqMbDnW]);}();
            return_bqMbDnW["members"].push_back(temp);
        }
        return return_bqMbDnW;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_QwzjkOk=json({});
    
        return_QwzjkOk["members"]={};
        for(int QwzjkOk=0; QwzjkOk < VK_MAX_DRIVER_INFO_SIZE; QwzjkOk++){
            json temp;
            temp=[&]() {
    json return_sutWGZw=json({});
    return serialize_char(name.driverInfo[QwzjkOk]);}();
            return_QwzjkOk["members"].push_back(temp);
        }
        return return_QwzjkOk;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_OTrjWAc=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverPropertiesKHR deserialize_VkPhysicalDeviceDriverPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceDriverPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int PazGYxl=0; PazGYxl < VK_MAX_DRIVER_NAME_SIZE; PazGYxl++){
            [&]() {
result.driverName[PazGYxl]=deserialize_char(name["members"]["driverName"]["members"][PazGYxl]);}();;
        }
        }();
[&]() {

        for (int vNpEWYm=0; vNpEWYm < VK_MAX_DRIVER_INFO_SIZE; vNpEWYm++){
            [&]() {
result.driverInfo[vNpEWYm]=deserialize_char(name["members"]["driverInfo"]["members"][vNpEWYm]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPresentRegionsKHR(VkPresentRegionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YgsHACD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchainCount"]=[&]() {
    json return_sIvDKaZ=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pRegions"]=[&]() {
    json return_dVbOGci=json({});
    
        if (name.pRegions==NULL){
            return_dVbOGci["null"]=true;
            return return_dVbOGci;
        }
        
        return_dVbOGci["members"]={};
        for(int dVbOGci=0; dVbOGci < name.swapchainCount; dVbOGci++){
            json temp;
            temp=[&]() {
    json return_LcCmxYN=json({});
    return serialize_VkPresentRegionKHR(name.pRegions[dVbOGci]);}();
            return_dVbOGci["members"].push_back(temp);
        }
        return return_dVbOGci;
        }();
return result;}

    VkPresentRegionsKHR deserialize_VkPresentRegionsKHR(json &name){
        auto result=VkPresentRegionsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentRegionKHR* temp_gyVeLcI;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_gyVeLcI=NULL;
        return;
        }
    temp_gyVeLcI=(VkPresentRegionKHR*)malloc(result.swapchainCount*sizeof(VkPresentRegionKHR));
        for (int zzGozBJ=0; zzGozBJ < result.swapchainCount; zzGozBJ++){
            [&]() {
temp_gyVeLcI[zzGozBJ]=deserialize_VkPresentRegionKHR(name["members"]["pRegions"]["members"][zzGozBJ]);}();;
        }
        }();result.pRegions=temp_gyVeLcI;}();
return result;}

    json serialize_VkPresentRegionKHR(VkPresentRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rectangleCount"]=[&]() {
    json return_nJsxOGI=json({});
    return serialize_uint32_t(name.rectangleCount);}();
result["members"]["pRectangles"]=[&]() {
    json return_LLgzTKX=json({});
    
        if (name.pRectangles==NULL){
            return_LLgzTKX["null"]=true;
            return return_LLgzTKX;
        }
        
        return_LLgzTKX["members"]={};
        for(int LLgzTKX=0; LLgzTKX < name.rectangleCount; LLgzTKX++){
            json temp;
            temp=[&]() {
    json return_yGsxfMq=json({});
    return serialize_VkRectLayerKHR(name.pRectangles[LLgzTKX]);}();
            return_LLgzTKX["members"].push_back(temp);
        }
        return return_LLgzTKX;
        }();
return result;}

    VkPresentRegionKHR deserialize_VkPresentRegionKHR(json &name){
        auto result=VkPresentRegionKHR();
    
[&]() {
result.rectangleCount=deserialize_uint32_t(name["members"]["rectangleCount"]);}();
[&]() {
VkRectLayerKHR* temp_didNsTd;[&]() {

        if (name["members"]["pRectangles"].contains("null")){
        temp_didNsTd=NULL;
        return;
        }
    temp_didNsTd=(VkRectLayerKHR*)malloc(result.rectangleCount*sizeof(VkRectLayerKHR));
        for (int lamqTZX=0; lamqTZX < result.rectangleCount; lamqTZX++){
            [&]() {
temp_didNsTd[lamqTZX]=deserialize_VkRectLayerKHR(name["members"]["pRectangles"]["members"][lamqTZX]);}();;
        }
        }();result.pRectangles=temp_didNsTd;}();
return result;}

    json serialize_VkRectLayerKHR(VkRectLayerKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_UJaLnuT=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_RryqFEB=json({});
    return serialize_VkExtent2D(name.extent);}();
result["members"]["layer"]=[&]() {
    json return_pygCjKr=json({});
    return serialize_uint32_t(name.layer);}();
return result;}

    VkRectLayerKHR deserialize_VkRectLayerKHR(json &name){
        auto result=VkRectLayerKHR();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
[&]() {
result.layer=deserialize_uint32_t(name["members"]["layer"]);}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeatures(VkPhysicalDeviceVariablePointersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cJoufWC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_bvmSoek=json({});
    return_bvmSoek=[&]() {
    json return_TOuGETk=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_bvmSoek;}();
result["members"]["variablePointers"]=[&]() {
    json return_OioOBYY=json({});
    return_OioOBYY=[&]() {
    json return_muIjfwP=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_OioOBYY;}();
return result;}

    VkPhysicalDeviceVariablePointersFeatures deserialize_VkPhysicalDeviceVariablePointersFeatures(json &name){
        auto result=VkPhysicalDeviceVariablePointersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(VkPhysicalDeviceVariablePointersFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cJoufWC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_bvmSoek=json({});
    return_bvmSoek=[&]() {
    json return_TOuGETk=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_bvmSoek;}();
result["members"]["variablePointers"]=[&]() {
    json return_OioOBYY=json({});
    return_OioOBYY=[&]() {
    json return_muIjfwP=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_OioOBYY;}();
return result;}

    VkPhysicalDeviceVariablePointersFeaturesKHR deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceVariablePointersFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(VkPhysicalDeviceVariablePointerFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cJoufWC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_bvmSoek=json({});
    return_bvmSoek=[&]() {
    json return_TOuGETk=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_bvmSoek;}();
result["members"]["variablePointers"]=[&]() {
    json return_OioOBYY=json({});
    return_OioOBYY=[&]() {
    json return_muIjfwP=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_OioOBYY;}();
return result;}

    VkPhysicalDeviceVariablePointerFeaturesKHR deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceVariablePointerFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeatures(VkPhysicalDeviceVariablePointerFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cJoufWC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_bvmSoek=json({});
    return_bvmSoek=[&]() {
    json return_TOuGETk=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_bvmSoek;}();
result["members"]["variablePointers"]=[&]() {
    json return_OioOBYY=json({});
    return_OioOBYY=[&]() {
    json return_muIjfwP=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_OioOBYY;}();
return result;}

    VkPhysicalDeviceVariablePointerFeatures deserialize_VkPhysicalDeviceVariablePointerFeatures(json &name){
        auto result=VkPhysicalDeviceVariablePointerFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkExternalMemoryProperties(VkExternalMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_aBArwQg=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_MJvhRbS=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_LNtzJnf=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryProperties deserialize_VkExternalMemoryProperties(json &name){
        auto result=VkExternalMemoryProperties();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryPropertiesKHR(VkExternalMemoryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_aBArwQg=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_MJvhRbS=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_LNtzJnf=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryPropertiesKHR deserialize_VkExternalMemoryPropertiesKHR(json &name){
        auto result=VkExternalMemoryPropertiesKHR();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfo(VkPhysicalDeviceExternalImageFormatInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pWsMhQi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_oXWuimY=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfo deserialize_VkPhysicalDeviceExternalImageFormatInfo(json &name){
        auto result=VkPhysicalDeviceExternalImageFormatInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(VkPhysicalDeviceExternalImageFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pWsMhQi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_oXWuimY=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfoKHR deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(json &name){
        auto result=VkPhysicalDeviceExternalImageFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalImageFormatProperties(VkExternalImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ddMOObT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_CAgCKFV=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatProperties deserialize_VkExternalImageFormatProperties(json &name){
        auto result=VkExternalImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesKHR(VkExternalImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ddMOObT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_CAgCKFV=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatPropertiesKHR deserialize_VkExternalImageFormatPropertiesKHR(json &name){
        auto result=VkExternalImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfo(VkPhysicalDeviceExternalBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pZVnBxM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_FCsoNoH=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_nVOLiFY=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_oXWuimY=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfo deserialize_VkPhysicalDeviceExternalBufferInfo(json &name){
        auto result=VkPhysicalDeviceExternalBufferInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfoKHR(VkPhysicalDeviceExternalBufferInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pZVnBxM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_FCsoNoH=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_nVOLiFY=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_oXWuimY=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfoKHR deserialize_VkPhysicalDeviceExternalBufferInfoKHR(json &name){
        auto result=VkPhysicalDeviceExternalBufferInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalBufferProperties(VkExternalBufferProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IqJStCn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_FUKSByO=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferProperties deserialize_VkExternalBufferProperties(json &name){
        auto result=VkExternalBufferProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalBufferPropertiesKHR(VkExternalBufferPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IqJStCn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_FUKSByO=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferPropertiesKHR deserialize_VkExternalBufferPropertiesKHR(json &name){
        auto result=VkExternalBufferPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceIDProperties(VkPhysicalDeviceIDProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wrgkyLY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceUUID"]=[&]() {
    json return_viysSkX=json({});
    
        return_viysSkX["members"]={};
        for(int viysSkX=0; viysSkX < VK_UUID_SIZE; viysSkX++){
            json temp;
            temp=[&]() {
    json return_NfFAZyB=json({});
    return serialize_uint8_t(name.deviceUUID[viysSkX]);}();
            return_viysSkX["members"].push_back(temp);
        }
        return return_viysSkX;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_BTspiJI=json({});
    
        return_BTspiJI["members"]={};
        for(int BTspiJI=0; BTspiJI < VK_UUID_SIZE; BTspiJI++){
            json temp;
            temp=[&]() {
    json return_CzJZnoB=json({});
    return serialize_uint8_t(name.driverUUID[BTspiJI]);}();
            return_BTspiJI["members"].push_back(temp);
        }
        return return_BTspiJI;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_iHiewEG=json({});
    
        return_iHiewEG["members"]={};
        for(int iHiewEG=0; iHiewEG < VK_LUID_SIZE; iHiewEG++){
            json temp;
            temp=[&]() {
    json return_MvIsUjL=json({});
    return serialize_uint8_t(name.deviceLUID[iHiewEG]);}();
            return_iHiewEG["members"].push_back(temp);
        }
        return return_iHiewEG;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_UXtHNqe=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_LEghEAG=json({});
    return_LEghEAG=[&]() {
    json return_MvDFGeJ=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_LEghEAG;}();
return result;}

    VkPhysicalDeviceIDProperties deserialize_VkPhysicalDeviceIDProperties(json &name){
        auto result=VkPhysicalDeviceIDProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int ENYozjA=0; ENYozjA < VK_UUID_SIZE; ENYozjA++){
            [&]() {
result.deviceUUID[ENYozjA]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][ENYozjA]);}();;
        }
        }();
[&]() {

        for (int kphdkkJ=0; kphdkkJ < VK_UUID_SIZE; kphdkkJ++){
            [&]() {
result.driverUUID[kphdkkJ]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][kphdkkJ]);}();;
        }
        }();
[&]() {

        for (int wZTepva=0; wZTepva < VK_LUID_SIZE; wZTepva++){
            [&]() {
result.deviceLUID[wZTepva]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][wZTepva]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIDPropertiesKHR(VkPhysicalDeviceIDPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wrgkyLY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceUUID"]=[&]() {
    json return_viysSkX=json({});
    
        return_viysSkX["members"]={};
        for(int viysSkX=0; viysSkX < VK_UUID_SIZE; viysSkX++){
            json temp;
            temp=[&]() {
    json return_NfFAZyB=json({});
    return serialize_uint8_t(name.deviceUUID[viysSkX]);}();
            return_viysSkX["members"].push_back(temp);
        }
        return return_viysSkX;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_BTspiJI=json({});
    
        return_BTspiJI["members"]={};
        for(int BTspiJI=0; BTspiJI < VK_UUID_SIZE; BTspiJI++){
            json temp;
            temp=[&]() {
    json return_CzJZnoB=json({});
    return serialize_uint8_t(name.driverUUID[BTspiJI]);}();
            return_BTspiJI["members"].push_back(temp);
        }
        return return_BTspiJI;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_iHiewEG=json({});
    
        return_iHiewEG["members"]={};
        for(int iHiewEG=0; iHiewEG < VK_LUID_SIZE; iHiewEG++){
            json temp;
            temp=[&]() {
    json return_MvIsUjL=json({});
    return serialize_uint8_t(name.deviceLUID[iHiewEG]);}();
            return_iHiewEG["members"].push_back(temp);
        }
        return return_iHiewEG;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_UXtHNqe=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_LEghEAG=json({});
    return_LEghEAG=[&]() {
    json return_MvDFGeJ=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_LEghEAG;}();
return result;}

    VkPhysicalDeviceIDPropertiesKHR deserialize_VkPhysicalDeviceIDPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceIDPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int ENYozjA=0; ENYozjA < VK_UUID_SIZE; ENYozjA++){
            [&]() {
result.deviceUUID[ENYozjA]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][ENYozjA]);}();;
        }
        }();
[&]() {

        for (int kphdkkJ=0; kphdkkJ < VK_UUID_SIZE; kphdkkJ++){
            [&]() {
result.driverUUID[kphdkkJ]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][kphdkkJ]);}();;
        }
        }();
[&]() {

        for (int wZTepva=0; wZTepva < VK_LUID_SIZE; wZTepva++){
            [&]() {
result.deviceLUID[wZTepva]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][wZTepva]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfo(VkExternalMemoryImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wIqPfGK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_zdnLSDh=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfo deserialize_VkExternalMemoryImageCreateInfo(json &name){
        auto result=VkExternalMemoryImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoKHR(VkExternalMemoryImageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wIqPfGK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_zdnLSDh=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoKHR deserialize_VkExternalMemoryImageCreateInfoKHR(json &name){
        auto result=VkExternalMemoryImageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfo(VkExternalMemoryBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ClgITkK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_zdnLSDh=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfo deserialize_VkExternalMemoryBufferCreateInfo(json &name){
        auto result=VkExternalMemoryBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfoKHR(VkExternalMemoryBufferCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ClgITkK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_zdnLSDh=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfoKHR deserialize_VkExternalMemoryBufferCreateInfoKHR(json &name){
        auto result=VkExternalMemoryBufferCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfo(VkExportMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZksHNdH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_zdnLSDh=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfo deserialize_VkExportMemoryAllocateInfo(json &name){
        auto result=VkExportMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoKHR(VkExportMemoryAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZksHNdH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_zdnLSDh=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoKHR deserialize_VkExportMemoryAllocateInfoKHR(json &name){
        auto result=VkExportMemoryAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportMemoryFdInfoKHR(VkImportMemoryFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UfAGfXA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_cIXUqaP=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_tYNNtTW=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportMemoryFdInfoKHR deserialize_VkImportMemoryFdInfoKHR(json &name){
        auto result=VkImportMemoryFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkMemoryFdPropertiesKHR(VkMemoryFdPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fcIzZQY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_Xxxohgu=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryFdPropertiesKHR deserialize_VkMemoryFdPropertiesKHR(json &name){
        auto result=VkMemoryFdPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkMemoryGetFdInfoKHR(VkMemoryGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nliyzdO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memory"]=[&]() {
    json return_ldnsFBJ=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_oXWuimY=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetFdInfoKHR deserialize_VkMemoryGetFdInfoKHR(json &name){
        auto result=VkMemoryGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfo(VkPhysicalDeviceExternalSemaphoreInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uLZEOPk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_DyumgmZ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfo deserialize_VkPhysicalDeviceExternalSemaphoreInfo(json &name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(VkPhysicalDeviceExternalSemaphoreInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uLZEOPk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_DyumgmZ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfoKHR deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(json &name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalSemaphoreProperties(VkExternalSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AjAmyLT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_ejpHrVf=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_STMvuoz=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_VineVYE=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphoreProperties deserialize_VkExternalSemaphoreProperties(json &name){
        auto result=VkExternalSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExternalSemaphorePropertiesKHR(VkExternalSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AjAmyLT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_ejpHrVf=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_STMvuoz=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_VineVYE=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphorePropertiesKHR deserialize_VkExternalSemaphorePropertiesKHR(json &name){
        auto result=VkExternalSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfo(VkExportSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fkQRFbo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_WbTihFl=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfo deserialize_VkExportSemaphoreCreateInfo(json &name){
        auto result=VkExportSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfoKHR(VkExportSemaphoreCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fkQRFbo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_WbTihFl=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfoKHR deserialize_VkExportSemaphoreCreateInfoKHR(json &name){
        auto result=VkExportSemaphoreCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportSemaphoreFdInfoKHR(VkImportSemaphoreFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GcVRSlN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphore"]=[&]() {
    json return_zchfdNy=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["flags"]=[&]() {
    json return_UZZLfgW=json({});
    return serialize_VkSemaphoreImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_QtJhVnR=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_tYNNtTW=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportSemaphoreFdInfoKHR deserialize_VkImportSemaphoreFdInfoKHR(json &name){
        auto result=VkImportSemaphoreFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.flags=deserialize_VkSemaphoreImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkSemaphoreGetFdInfoKHR(VkSemaphoreGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sfKpfSS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphore"]=[&]() {
    json return_WJSNMBb=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["handleType"]=[&]() {
    json return_DyumgmZ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkSemaphoreGetFdInfoKHR deserialize_VkSemaphoreGetFdInfoKHR(json &name){
        auto result=VkSemaphoreGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfo(VkPhysicalDeviceExternalFenceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hxzIeCq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_bcslVpl=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfo deserialize_VkPhysicalDeviceExternalFenceInfo(json &name){
        auto result=VkPhysicalDeviceExternalFenceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfoKHR(VkPhysicalDeviceExternalFenceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hxzIeCq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_bcslVpl=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfoKHR deserialize_VkPhysicalDeviceExternalFenceInfoKHR(json &name){
        auto result=VkPhysicalDeviceExternalFenceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalFenceProperties(VkExternalFenceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UDBanId=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_cZqHaNS=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_yrbqGhu=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_JQXJDYu=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFenceProperties deserialize_VkExternalFenceProperties(json &name){
        auto result=VkExternalFenceProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExternalFencePropertiesKHR(VkExternalFencePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UDBanId=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_cZqHaNS=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_yrbqGhu=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_JQXJDYu=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFencePropertiesKHR deserialize_VkExternalFencePropertiesKHR(json &name){
        auto result=VkExternalFencePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExportFenceCreateInfo(VkExportFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GlNkeRQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_uGMREeY=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfo deserialize_VkExportFenceCreateInfo(json &name){
        auto result=VkExportFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportFenceCreateInfoKHR(VkExportFenceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GlNkeRQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleTypes"]=[&]() {
    json return_uGMREeY=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfoKHR deserialize_VkExportFenceCreateInfoKHR(json &name){
        auto result=VkExportFenceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportFenceFdInfoKHR(VkImportFenceFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GXYmrvP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fence"]=[&]() {
    json return_abRQHis=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["flags"]=[&]() {
    json return_XuwANGU=json({});
    return serialize_VkFenceImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_Fxyhkub=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_UvRnmKy=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportFenceFdInfoKHR deserialize_VkImportFenceFdInfoKHR(json &name){
        auto result=VkImportFenceFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.flags=deserialize_VkFenceImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkFenceGetFdInfoKHR(VkFenceGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BQeSeOU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fence"]=[&]() {
    json return_AjZCrhF=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["handleType"]=[&]() {
    json return_qTIcJdG=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkFenceGetFdInfoKHR deserialize_VkFenceGetFdInfoKHR(json &name){
        auto result=VkFenceGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeatures(VkPhysicalDeviceMultiviewFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rrSCtQt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["multiview"]=[&]() {
    json return_FTdoSpQ=json({});
    return_FTdoSpQ=[&]() {
    json return_SXGPiIu=json({});
    return serialize_uint32_t(name.multiview);}();return return_FTdoSpQ;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_lEykoKK=json({});
    return_lEykoKK=[&]() {
    json return_vCdKYIv=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_lEykoKK;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_xWePxIm=json({});
    return_xWePxIm=[&]() {
    json return_TfPvMcX=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_xWePxIm;}();
return result;}

    VkPhysicalDeviceMultiviewFeatures deserialize_VkPhysicalDeviceMultiviewFeatures(json &name){
        auto result=VkPhysicalDeviceMultiviewFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeaturesKHR(VkPhysicalDeviceMultiviewFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rrSCtQt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["multiview"]=[&]() {
    json return_FTdoSpQ=json({});
    return_FTdoSpQ=[&]() {
    json return_SXGPiIu=json({});
    return serialize_uint32_t(name.multiview);}();return return_FTdoSpQ;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_lEykoKK=json({});
    return_lEykoKK=[&]() {
    json return_vCdKYIv=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_lEykoKK;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_xWePxIm=json({});
    return_xWePxIm=[&]() {
    json return_TfPvMcX=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_xWePxIm;}();
return result;}

    VkPhysicalDeviceMultiviewFeaturesKHR deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceMultiviewFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewProperties(VkPhysicalDeviceMultiviewProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uPRvsBD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_fQNZzSG=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_TymHaTL=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewProperties deserialize_VkPhysicalDeviceMultiviewProperties(json &name){
        auto result=VkPhysicalDeviceMultiviewProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPropertiesKHR(VkPhysicalDeviceMultiviewPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uPRvsBD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_fQNZzSG=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_TymHaTL=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewPropertiesKHR deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceMultiviewPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfo(VkRenderPassMultiviewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nJWnjyc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subpassCount"]=[&]() {
    json return_sqKYbrW=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_gkdKpNm=json({});
    
        if (name.pViewMasks==NULL){
            return_gkdKpNm["null"]=true;
            return return_gkdKpNm;
        }
        
        return_gkdKpNm["members"]={};
        for(int gkdKpNm=0; gkdKpNm < name.subpassCount; gkdKpNm++){
            json temp;
            temp=[&]() {
    json return_SpUJMVH=json({});
    return serialize_uint32_t(name.pViewMasks[gkdKpNm]);}();
            return_gkdKpNm["members"].push_back(temp);
        }
        return return_gkdKpNm;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_uSMkVzx=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_xwFnWTC=json({});
    
        if (name.pViewOffsets==NULL){
            return_xwFnWTC["null"]=true;
            return return_xwFnWTC;
        }
        
        return_xwFnWTC["members"]={};
        for(int xwFnWTC=0; xwFnWTC < name.dependencyCount; xwFnWTC++){
            json temp;
            temp=[&]() {
    json return_MlrCASx=json({});
    return serialize_int32_t(name.pViewOffsets[xwFnWTC]);}();
            return_xwFnWTC["members"].push_back(temp);
        }
        return return_xwFnWTC;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_XpYmfjD=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_jnWEfJO=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_jnWEfJO["null"]=true;
            return return_jnWEfJO;
        }
        
        return_jnWEfJO["members"]={};
        for(int jnWEfJO=0; jnWEfJO < name.correlationMaskCount; jnWEfJO++){
            json temp;
            temp=[&]() {
    json return_hGrkaVH=json({});
    return serialize_uint32_t(name.pCorrelationMasks[jnWEfJO]);}();
            return_jnWEfJO["members"].push_back(temp);
        }
        return return_jnWEfJO;
        }();
return result;}

    VkRenderPassMultiviewCreateInfo deserialize_VkRenderPassMultiviewCreateInfo(json &name){
        auto result=VkRenderPassMultiviewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_mLCJzAV;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_mLCJzAV=NULL;
        return;
        }
    temp_mLCJzAV=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int YtTqpYt=0; YtTqpYt < result.subpassCount; YtTqpYt++){
            [&]() {
temp_mLCJzAV[YtTqpYt]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][YtTqpYt]);}();;
        }
        }();result.pViewMasks=temp_mLCJzAV;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_jDfsbDx;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_jDfsbDx=NULL;
        return;
        }
    temp_jDfsbDx=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int aGXtMay=0; aGXtMay < result.dependencyCount; aGXtMay++){
            [&]() {
temp_jDfsbDx[aGXtMay]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][aGXtMay]);}();;
        }
        }();result.pViewOffsets=temp_jDfsbDx;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_HJywDWB;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_HJywDWB=NULL;
        return;
        }
    temp_HJywDWB=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int qMTDxNU=0; qMTDxNU < result.correlationMaskCount; qMTDxNU++){
            [&]() {
temp_HJywDWB[qMTDxNU]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][qMTDxNU]);}();;
        }
        }();result.pCorrelationMasks=temp_HJywDWB;}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfoKHR(VkRenderPassMultiviewCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nJWnjyc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subpassCount"]=[&]() {
    json return_sqKYbrW=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_gkdKpNm=json({});
    
        if (name.pViewMasks==NULL){
            return_gkdKpNm["null"]=true;
            return return_gkdKpNm;
        }
        
        return_gkdKpNm["members"]={};
        for(int gkdKpNm=0; gkdKpNm < name.subpassCount; gkdKpNm++){
            json temp;
            temp=[&]() {
    json return_SpUJMVH=json({});
    return serialize_uint32_t(name.pViewMasks[gkdKpNm]);}();
            return_gkdKpNm["members"].push_back(temp);
        }
        return return_gkdKpNm;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_uSMkVzx=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_xwFnWTC=json({});
    
        if (name.pViewOffsets==NULL){
            return_xwFnWTC["null"]=true;
            return return_xwFnWTC;
        }
        
        return_xwFnWTC["members"]={};
        for(int xwFnWTC=0; xwFnWTC < name.dependencyCount; xwFnWTC++){
            json temp;
            temp=[&]() {
    json return_MlrCASx=json({});
    return serialize_int32_t(name.pViewOffsets[xwFnWTC]);}();
            return_xwFnWTC["members"].push_back(temp);
        }
        return return_xwFnWTC;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_XpYmfjD=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_jnWEfJO=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_jnWEfJO["null"]=true;
            return return_jnWEfJO;
        }
        
        return_jnWEfJO["members"]={};
        for(int jnWEfJO=0; jnWEfJO < name.correlationMaskCount; jnWEfJO++){
            json temp;
            temp=[&]() {
    json return_hGrkaVH=json({});
    return serialize_uint32_t(name.pCorrelationMasks[jnWEfJO]);}();
            return_jnWEfJO["members"].push_back(temp);
        }
        return return_jnWEfJO;
        }();
return result;}

    VkRenderPassMultiviewCreateInfoKHR deserialize_VkRenderPassMultiviewCreateInfoKHR(json &name){
        auto result=VkRenderPassMultiviewCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_mLCJzAV;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_mLCJzAV=NULL;
        return;
        }
    temp_mLCJzAV=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int YtTqpYt=0; YtTqpYt < result.subpassCount; YtTqpYt++){
            [&]() {
temp_mLCJzAV[YtTqpYt]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][YtTqpYt]);}();;
        }
        }();result.pViewMasks=temp_mLCJzAV;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_jDfsbDx;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_jDfsbDx=NULL;
        return;
        }
    temp_jDfsbDx=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int aGXtMay=0; aGXtMay < result.dependencyCount; aGXtMay++){
            [&]() {
temp_jDfsbDx[aGXtMay]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][aGXtMay]);}();;
        }
        }();result.pViewOffsets=temp_jDfsbDx;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_HJywDWB;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_HJywDWB=NULL;
        return;
        }
    temp_HJywDWB=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int qMTDxNU=0; qMTDxNU < result.correlationMaskCount; qMTDxNU++){
            [&]() {
temp_HJywDWB[qMTDxNU]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][qMTDxNU]);}();;
        }
        }();result.pCorrelationMasks=temp_HJywDWB;}();
return result;}

    json serialize_VkSurfaceCapabilities2EXT(VkSurfaceCapabilities2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kRNgbWH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minImageCount"]=[&]() {
    json return_vIQmfsU=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_xrOLDCh=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_UfKSrrB=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_MIKUTBm=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_haDojgG=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_gDqYpsn=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_RKmZDHF=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_ylIfAkz=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_vxWhNYG=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_XiUzaQI=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
result["members"]["supportedSurfaceCounters"]=[&]() {
    json return_clPPhZj=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.supportedSurfaceCounters);}();
return result;}

    VkSurfaceCapabilities2EXT deserialize_VkSurfaceCapabilities2EXT(json &name){
        auto result=VkSurfaceCapabilities2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
[&]() {
result.supportedSurfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["supportedSurfaceCounters"]);}();
return result;}

    json serialize_VkDisplayPowerInfoEXT(VkDisplayPowerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vbwyBXj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["powerState"]=[&]() {
    json return_pgXnuFE=json({});
    return serialize_VkDisplayPowerStateEXT(name.powerState);}();
return result;}

    VkDisplayPowerInfoEXT deserialize_VkDisplayPowerInfoEXT(json &name){
        auto result=VkDisplayPowerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.powerState=deserialize_VkDisplayPowerStateEXT(name["members"]["powerState"]);}();
return result;}

    json serialize_VkDeviceEventInfoEXT(VkDeviceEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VYYIsjN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceEvent"]=[&]() {
    json return_UyvBpKV=json({});
    return serialize_VkDeviceEventTypeEXT(name.deviceEvent);}();
return result;}

    VkDeviceEventInfoEXT deserialize_VkDeviceEventInfoEXT(json &name){
        auto result=VkDeviceEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceEvent=deserialize_VkDeviceEventTypeEXT(name["members"]["deviceEvent"]);}();
return result;}

    json serialize_VkDisplayEventInfoEXT(VkDisplayEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ukdChgS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["displayEvent"]=[&]() {
    json return_HGHWmqf=json({});
    return serialize_VkDisplayEventTypeEXT(name.displayEvent);}();
return result;}

    VkDisplayEventInfoEXT deserialize_VkDisplayEventInfoEXT(json &name){
        auto result=VkDisplayEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.displayEvent=deserialize_VkDisplayEventTypeEXT(name["members"]["displayEvent"]);}();
return result;}

    json serialize_VkSwapchainCounterCreateInfoEXT(VkSwapchainCounterCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oHBfNjD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["surfaceCounters"]=[&]() {
    json return_nGcODbY=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.surfaceCounters);}();
return result;}

    VkSwapchainCounterCreateInfoEXT deserialize_VkSwapchainCounterCreateInfoEXT(json &name){
        auto result=VkSwapchainCounterCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.surfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["surfaceCounters"]);}();
return result;}

    json serialize_VkPhysicalDeviceGroupProperties(VkPhysicalDeviceGroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SxZCIDY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_fgXekeE=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_aySrLcI=json({});
    
        return_aySrLcI["members"]={};
        for(int aySrLcI=0; aySrLcI < VK_MAX_DEVICE_GROUP_SIZE; aySrLcI++){
            json temp;
            temp=[&]() {
    json return_tachPgn=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[aySrLcI]);}();
            return_aySrLcI["members"].push_back(temp);
        }
        return return_aySrLcI;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_EXKrStK=json({});
    return_EXKrStK=[&]() {
    json return_pjQtaPF=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_EXKrStK;}();
return result;}

    VkPhysicalDeviceGroupProperties deserialize_VkPhysicalDeviceGroupProperties(json &name){
        auto result=VkPhysicalDeviceGroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int PsysJDr=0; PsysJDr < VK_MAX_DEVICE_GROUP_SIZE; PsysJDr++){
            [&]() {
result.physicalDevices[PsysJDr]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][PsysJDr]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGroupPropertiesKHR(VkPhysicalDeviceGroupPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SxZCIDY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_fgXekeE=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_aySrLcI=json({});
    
        return_aySrLcI["members"]={};
        for(int aySrLcI=0; aySrLcI < VK_MAX_DEVICE_GROUP_SIZE; aySrLcI++){
            json temp;
            temp=[&]() {
    json return_tachPgn=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[aySrLcI]);}();
            return_aySrLcI["members"].push_back(temp);
        }
        return return_aySrLcI;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_EXKrStK=json({});
    return_EXKrStK=[&]() {
    json return_pjQtaPF=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_EXKrStK;}();
return result;}

    VkPhysicalDeviceGroupPropertiesKHR deserialize_VkPhysicalDeviceGroupPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceGroupPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int PsysJDr=0; PsysJDr < VK_MAX_DEVICE_GROUP_SIZE; PsysJDr++){
            [&]() {
result.physicalDevices[PsysJDr]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][PsysJDr]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfo(VkMemoryAllocateFlagsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QrzrBOx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_BcroyFF=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_GluKPNf=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfo deserialize_VkMemoryAllocateFlagsInfo(json &name){
        auto result=VkMemoryAllocateFlagsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfoKHR(VkMemoryAllocateFlagsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QrzrBOx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_BcroyFF=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_GluKPNf=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfoKHR deserialize_VkMemoryAllocateFlagsInfoKHR(json &name){
        auto result=VkMemoryAllocateFlagsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkBindBufferMemoryInfo(VkBindBufferMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_spXWbmO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_sJJwyuR=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_ldnsFBJ=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_dwQTDWr=json({});
    return_dwQTDWr=[&]() {
    json return_xVfiZsv=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_dwQTDWr;}();
return result;}

    VkBindBufferMemoryInfo deserialize_VkBindBufferMemoryInfo(json &name){
        auto result=VkBindBufferMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryInfoKHR(VkBindBufferMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_spXWbmO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_sJJwyuR=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_ldnsFBJ=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_dwQTDWr=json({});
    return_dwQTDWr=[&]() {
    json return_xVfiZsv=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_dwQTDWr;}();
return result;}

    VkBindBufferMemoryInfoKHR deserialize_VkBindBufferMemoryInfoKHR(json &name){
        auto result=VkBindBufferMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfo(VkBindBufferMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dypOrCz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_DHTxeQK=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_hwVfQQr=json({});
    
        if (name.pDeviceIndices==NULL){
            return_hwVfQQr["null"]=true;
            return return_hwVfQQr;
        }
        
        return_hwVfQQr["members"]={};
        for(int hwVfQQr=0; hwVfQQr < name.deviceIndexCount; hwVfQQr++){
            json temp;
            temp=[&]() {
    json return_aYLpPqH=json({});
    return serialize_uint32_t(name.pDeviceIndices[hwVfQQr]);}();
            return_hwVfQQr["members"].push_back(temp);
        }
        return return_hwVfQQr;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfo deserialize_VkBindBufferMemoryDeviceGroupInfo(json &name){
        auto result=VkBindBufferMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_pKsOUEb;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_pKsOUEb=NULL;
        return;
        }
    temp_pKsOUEb=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int dPtwtOH=0; dPtwtOH < result.deviceIndexCount; dPtwtOH++){
            [&]() {
temp_pKsOUEb[dPtwtOH]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][dPtwtOH]);}();;
        }
        }();result.pDeviceIndices=temp_pKsOUEb;}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfoKHR(VkBindBufferMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dypOrCz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_DHTxeQK=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_hwVfQQr=json({});
    
        if (name.pDeviceIndices==NULL){
            return_hwVfQQr["null"]=true;
            return return_hwVfQQr;
        }
        
        return_hwVfQQr["members"]={};
        for(int hwVfQQr=0; hwVfQQr < name.deviceIndexCount; hwVfQQr++){
            json temp;
            temp=[&]() {
    json return_aYLpPqH=json({});
    return serialize_uint32_t(name.pDeviceIndices[hwVfQQr]);}();
            return_hwVfQQr["members"].push_back(temp);
        }
        return return_hwVfQQr;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfoKHR deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(json &name){
        auto result=VkBindBufferMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_pKsOUEb;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_pKsOUEb=NULL;
        return;
        }
    temp_pKsOUEb=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int dPtwtOH=0; dPtwtOH < result.deviceIndexCount; dPtwtOH++){
            [&]() {
temp_pKsOUEb[dPtwtOH]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][dPtwtOH]);}();;
        }
        }();result.pDeviceIndices=temp_pKsOUEb;}();
return result;}

    json serialize_VkBindImageMemoryInfo(VkBindImageMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zoIqzwG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_YhDteyK=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_ldnsFBJ=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_dwQTDWr=json({});
    return_dwQTDWr=[&]() {
    json return_xVfiZsv=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_dwQTDWr;}();
return result;}

    VkBindImageMemoryInfo deserialize_VkBindImageMemoryInfo(json &name){
        auto result=VkBindImageMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryInfoKHR(VkBindImageMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zoIqzwG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_YhDteyK=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_ldnsFBJ=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_dwQTDWr=json({});
    return_dwQTDWr=[&]() {
    json return_xVfiZsv=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_dwQTDWr;}();
return result;}

    VkBindImageMemoryInfoKHR deserialize_VkBindImageMemoryInfoKHR(json &name){
        auto result=VkBindImageMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfo(VkBindImageMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DXSjcTf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_DHTxeQK=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_cdESSau=json({});
    
        if (name.pDeviceIndices==NULL){
            return_cdESSau["null"]=true;
            return return_cdESSau;
        }
        
        return_cdESSau["members"]={};
        for(int cdESSau=0; cdESSau < name.deviceIndexCount; cdESSau++){
            json temp;
            temp=[&]() {
    json return_WTzrxMm=json({});
    return serialize_uint32_t(name.pDeviceIndices[cdESSau]);}();
            return_cdESSau["members"].push_back(temp);
        }
        return return_cdESSau;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_qaPMMDD=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_irvFlEZ=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_irvFlEZ["null"]=true;
            return return_irvFlEZ;
        }
        
        return_irvFlEZ["members"]={};
        for(int irvFlEZ=0; irvFlEZ < name.splitInstanceBindRegionCount; irvFlEZ++){
            json temp;
            temp=[&]() {
    json return_IIKTtBp=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[irvFlEZ]);}();
            return_irvFlEZ["members"].push_back(temp);
        }
        return return_irvFlEZ;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfo deserialize_VkBindImageMemoryDeviceGroupInfo(json &name){
        auto result=VkBindImageMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_EDQIgcr;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_EDQIgcr=NULL;
        return;
        }
    temp_EDQIgcr=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int xivnVPa=0; xivnVPa < result.deviceIndexCount; xivnVPa++){
            [&]() {
temp_EDQIgcr[xivnVPa]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][xivnVPa]);}();;
        }
        }();result.pDeviceIndices=temp_EDQIgcr;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_GBShEOm;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_GBShEOm=NULL;
        return;
        }
    temp_GBShEOm=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int sPRJaoG=0; sPRJaoG < result.splitInstanceBindRegionCount; sPRJaoG++){
            [&]() {
temp_GBShEOm[sPRJaoG]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][sPRJaoG]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_GBShEOm;}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfoKHR(VkBindImageMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DXSjcTf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_DHTxeQK=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_cdESSau=json({});
    
        if (name.pDeviceIndices==NULL){
            return_cdESSau["null"]=true;
            return return_cdESSau;
        }
        
        return_cdESSau["members"]={};
        for(int cdESSau=0; cdESSau < name.deviceIndexCount; cdESSau++){
            json temp;
            temp=[&]() {
    json return_WTzrxMm=json({});
    return serialize_uint32_t(name.pDeviceIndices[cdESSau]);}();
            return_cdESSau["members"].push_back(temp);
        }
        return return_cdESSau;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_qaPMMDD=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_irvFlEZ=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_irvFlEZ["null"]=true;
            return return_irvFlEZ;
        }
        
        return_irvFlEZ["members"]={};
        for(int irvFlEZ=0; irvFlEZ < name.splitInstanceBindRegionCount; irvFlEZ++){
            json temp;
            temp=[&]() {
    json return_IIKTtBp=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[irvFlEZ]);}();
            return_irvFlEZ["members"].push_back(temp);
        }
        return return_irvFlEZ;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfoKHR deserialize_VkBindImageMemoryDeviceGroupInfoKHR(json &name){
        auto result=VkBindImageMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_EDQIgcr;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_EDQIgcr=NULL;
        return;
        }
    temp_EDQIgcr=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int xivnVPa=0; xivnVPa < result.deviceIndexCount; xivnVPa++){
            [&]() {
temp_EDQIgcr[xivnVPa]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][xivnVPa]);}();;
        }
        }();result.pDeviceIndices=temp_EDQIgcr;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_GBShEOm;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_GBShEOm=NULL;
        return;
        }
    temp_GBShEOm=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int sPRJaoG=0; sPRJaoG < result.splitInstanceBindRegionCount; sPRJaoG++){
            [&]() {
temp_GBShEOm[sPRJaoG]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][sPRJaoG]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_GBShEOm;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfo(VkDeviceGroupRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tveFYBJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceMask"]=[&]() {
    json return_dBGMNsc=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_wuZhPTo=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_DtHUeJB=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_DtHUeJB["null"]=true;
            return return_DtHUeJB;
        }
        
        return_DtHUeJB["members"]={};
        for(int DtHUeJB=0; DtHUeJB < name.deviceRenderAreaCount; DtHUeJB++){
            json temp;
            temp=[&]() {
    json return_NbZHjSM=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[DtHUeJB]);}();
            return_DtHUeJB["members"].push_back(temp);
        }
        return return_DtHUeJB;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfo deserialize_VkDeviceGroupRenderPassBeginInfo(json &name){
        auto result=VkDeviceGroupRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_YvtHLHa;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_YvtHLHa=NULL;
        return;
        }
    temp_YvtHLHa=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int BtqgdvN=0; BtqgdvN < result.deviceRenderAreaCount; BtqgdvN++){
            [&]() {
temp_YvtHLHa[BtqgdvN]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][BtqgdvN]);}();;
        }
        }();result.pDeviceRenderAreas=temp_YvtHLHa;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfoKHR(VkDeviceGroupRenderPassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tveFYBJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceMask"]=[&]() {
    json return_dBGMNsc=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_wuZhPTo=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_DtHUeJB=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_DtHUeJB["null"]=true;
            return return_DtHUeJB;
        }
        
        return_DtHUeJB["members"]={};
        for(int DtHUeJB=0; DtHUeJB < name.deviceRenderAreaCount; DtHUeJB++){
            json temp;
            temp=[&]() {
    json return_NbZHjSM=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[DtHUeJB]);}();
            return_DtHUeJB["members"].push_back(temp);
        }
        return return_DtHUeJB;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfoKHR deserialize_VkDeviceGroupRenderPassBeginInfoKHR(json &name){
        auto result=VkDeviceGroupRenderPassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_YvtHLHa;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_YvtHLHa=NULL;
        return;
        }
    temp_YvtHLHa=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int BtqgdvN=0; BtqgdvN < result.deviceRenderAreaCount; BtqgdvN++){
            [&]() {
temp_YvtHLHa[BtqgdvN]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][BtqgdvN]);}();;
        }
        }();result.pDeviceRenderAreas=temp_YvtHLHa;}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfo(VkDeviceGroupCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DLQPkUu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceMask"]=[&]() {
    json return_GluKPNf=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfo deserialize_VkDeviceGroupCommandBufferBeginInfo(json &name){
        auto result=VkDeviceGroupCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfoKHR(VkDeviceGroupCommandBufferBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DLQPkUu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceMask"]=[&]() {
    json return_GluKPNf=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfoKHR deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(json &name){
        auto result=VkDeviceGroupCommandBufferBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupSubmitInfo(VkDeviceGroupSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SIsNZSA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_PKhhcsL=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_OqKHSSf=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_OqKHSSf["null"]=true;
            return return_OqKHSSf;
        }
        
        return_OqKHSSf["members"]={};
        for(int OqKHSSf=0; OqKHSSf < name.waitSemaphoreCount; OqKHSSf++){
            json temp;
            temp=[&]() {
    json return_ZhgHUga=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[OqKHSSf]);}();
            return_OqKHSSf["members"].push_back(temp);
        }
        return return_OqKHSSf;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_yzEnUWe=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_gXIhwqg=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_gXIhwqg["null"]=true;
            return return_gXIhwqg;
        }
        
        return_gXIhwqg["members"]={};
        for(int gXIhwqg=0; gXIhwqg < name.commandBufferCount; gXIhwqg++){
            json temp;
            temp=[&]() {
    json return_DLAVXBq=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[gXIhwqg]);}();
            return_gXIhwqg["members"].push_back(temp);
        }
        return return_gXIhwqg;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_snnTXXE=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_nibVhHI=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_nibVhHI["null"]=true;
            return return_nibVhHI;
        }
        
        return_nibVhHI["members"]={};
        for(int nibVhHI=0; nibVhHI < name.signalSemaphoreCount; nibVhHI++){
            json temp;
            temp=[&]() {
    json return_XBJPetn=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[nibVhHI]);}();
            return_nibVhHI["members"].push_back(temp);
        }
        return return_nibVhHI;
        }();
return result;}

    VkDeviceGroupSubmitInfo deserialize_VkDeviceGroupSubmitInfo(json &name){
        auto result=VkDeviceGroupSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_CQxoiaJ;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_CQxoiaJ=NULL;
        return;
        }
    temp_CQxoiaJ=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int RWGJlUn=0; RWGJlUn < result.waitSemaphoreCount; RWGJlUn++){
            [&]() {
temp_CQxoiaJ[RWGJlUn]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][RWGJlUn]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_CQxoiaJ;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_YErmLhC;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_YErmLhC=NULL;
        return;
        }
    temp_YErmLhC=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int VbkwSEd=0; VbkwSEd < result.commandBufferCount; VbkwSEd++){
            [&]() {
temp_YErmLhC[VbkwSEd]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][VbkwSEd]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_YErmLhC;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_WJtxjbs;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_WJtxjbs=NULL;
        return;
        }
    temp_WJtxjbs=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int cbgNzdb=0; cbgNzdb < result.signalSemaphoreCount; cbgNzdb++){
            [&]() {
temp_WJtxjbs[cbgNzdb]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][cbgNzdb]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_WJtxjbs;}();
return result;}

    json serialize_VkDeviceGroupSubmitInfoKHR(VkDeviceGroupSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SIsNZSA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_PKhhcsL=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_OqKHSSf=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_OqKHSSf["null"]=true;
            return return_OqKHSSf;
        }
        
        return_OqKHSSf["members"]={};
        for(int OqKHSSf=0; OqKHSSf < name.waitSemaphoreCount; OqKHSSf++){
            json temp;
            temp=[&]() {
    json return_ZhgHUga=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[OqKHSSf]);}();
            return_OqKHSSf["members"].push_back(temp);
        }
        return return_OqKHSSf;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_yzEnUWe=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_gXIhwqg=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_gXIhwqg["null"]=true;
            return return_gXIhwqg;
        }
        
        return_gXIhwqg["members"]={};
        for(int gXIhwqg=0; gXIhwqg < name.commandBufferCount; gXIhwqg++){
            json temp;
            temp=[&]() {
    json return_DLAVXBq=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[gXIhwqg]);}();
            return_gXIhwqg["members"].push_back(temp);
        }
        return return_gXIhwqg;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_snnTXXE=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_nibVhHI=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_nibVhHI["null"]=true;
            return return_nibVhHI;
        }
        
        return_nibVhHI["members"]={};
        for(int nibVhHI=0; nibVhHI < name.signalSemaphoreCount; nibVhHI++){
            json temp;
            temp=[&]() {
    json return_XBJPetn=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[nibVhHI]);}();
            return_nibVhHI["members"].push_back(temp);
        }
        return return_nibVhHI;
        }();
return result;}

    VkDeviceGroupSubmitInfoKHR deserialize_VkDeviceGroupSubmitInfoKHR(json &name){
        auto result=VkDeviceGroupSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_CQxoiaJ;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_CQxoiaJ=NULL;
        return;
        }
    temp_CQxoiaJ=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int RWGJlUn=0; RWGJlUn < result.waitSemaphoreCount; RWGJlUn++){
            [&]() {
temp_CQxoiaJ[RWGJlUn]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][RWGJlUn]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_CQxoiaJ;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_YErmLhC;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_YErmLhC=NULL;
        return;
        }
    temp_YErmLhC=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int VbkwSEd=0; VbkwSEd < result.commandBufferCount; VbkwSEd++){
            [&]() {
temp_YErmLhC[VbkwSEd]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][VbkwSEd]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_YErmLhC;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_WJtxjbs;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_WJtxjbs=NULL;
        return;
        }
    temp_WJtxjbs=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int cbgNzdb=0; cbgNzdb < result.signalSemaphoreCount; cbgNzdb++){
            [&]() {
temp_WJtxjbs[cbgNzdb]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][cbgNzdb]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_WJtxjbs;}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfo(VkDeviceGroupBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WKzGlbE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_ZbLFsqr=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_AwcXHoG=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfo deserialize_VkDeviceGroupBindSparseInfo(json &name){
        auto result=VkDeviceGroupBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfoKHR(VkDeviceGroupBindSparseInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WKzGlbE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_ZbLFsqr=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_AwcXHoG=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfoKHR deserialize_VkDeviceGroupBindSparseInfoKHR(json &name){
        auto result=VkDeviceGroupBindSparseInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupPresentCapabilitiesKHR(VkDeviceGroupPresentCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oUVXFAK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentMask"]=[&]() {
    json return_wFVFWll=json({});
    
        return_wFVFWll["members"]={};
        for(int wFVFWll=0; wFVFWll < VK_MAX_DEVICE_GROUP_SIZE; wFVFWll++){
            json temp;
            temp=[&]() {
    json return_HDmicdO=json({});
    return serialize_uint32_t(name.presentMask[wFVFWll]);}();
            return_wFVFWll["members"].push_back(temp);
        }
        return return_wFVFWll;
        }();
result["members"]["modes"]=[&]() {
    json return_WHkbxOP=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupPresentCapabilitiesKHR deserialize_VkDeviceGroupPresentCapabilitiesKHR(json &name){
        auto result=VkDeviceGroupPresentCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int bjclqGH=0; bjclqGH < VK_MAX_DEVICE_GROUP_SIZE; bjclqGH++){
            [&]() {
result.presentMask[bjclqGH]=deserialize_uint32_t(name["members"]["presentMask"]["members"][bjclqGH]);}();;
        }
        }();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkImageSwapchainCreateInfoKHR(VkImageSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QhPHeEU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchain"]=[&]() {
    json return_mujrGOi=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
return result;}

    VkImageSwapchainCreateInfoKHR deserialize_VkImageSwapchainCreateInfoKHR(json &name){
        auto result=VkImageSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
return result;}

    json serialize_VkBindImageMemorySwapchainInfoKHR(VkBindImageMemorySwapchainInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MLlPYjQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchain"]=[&]() {
    json return_fGQSfib=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndex"]=[&]() {
    json return_ZXBuHMD=json({});
    return serialize_uint32_t(name.imageIndex);}();
return result;}

    VkBindImageMemorySwapchainInfoKHR deserialize_VkBindImageMemorySwapchainInfoKHR(json &name){
        auto result=VkBindImageMemorySwapchainInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndex=deserialize_uint32_t(name["members"]["imageIndex"]);}();
return result;}

    json serialize_VkAcquireNextImageInfoKHR(VkAcquireNextImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_utAfFaI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchain"]=[&]() {
    json return_fGQSfib=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["timeout"]=[&]() {
    json return_QrjNaiQ=json({});
    return serialize_uint64_t(name.timeout);}();
result["members"]["semaphore"]=[&]() {
    json return_cCqkmsB=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["fence"]=[&]() {
    json return_jsSRDLk=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["deviceMask"]=[&]() {
    json return_GluKPNf=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkAcquireNextImageInfoKHR deserialize_VkAcquireNextImageInfoKHR(json &name){
        auto result=VkAcquireNextImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupPresentInfoKHR(VkDeviceGroupPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OAqEvEK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchainCount"]=[&]() {
    json return_ovllgyB=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pDeviceMasks"]=[&]() {
    json return_IzQNAQv=json({});
    
        if (name.pDeviceMasks==NULL){
            return_IzQNAQv["null"]=true;
            return return_IzQNAQv;
        }
        
        return_IzQNAQv["members"]={};
        for(int IzQNAQv=0; IzQNAQv < name.swapchainCount; IzQNAQv++){
            json temp;
            temp=[&]() {
    json return_qGuDGrl=json({});
    return serialize_uint32_t(name.pDeviceMasks[IzQNAQv]);}();
            return_IzQNAQv["members"].push_back(temp);
        }
        return return_IzQNAQv;
        }();
result["members"]["mode"]=[&]() {
    json return_uJpExcY=json({});
    return serialize_VkDeviceGroupPresentModeFlagBitsKHR(name.mode);}();
return result;}

    VkDeviceGroupPresentInfoKHR deserialize_VkDeviceGroupPresentInfoKHR(json &name){
        auto result=VkDeviceGroupPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint32_t* temp_QETTEBi;[&]() {

        if (name["members"]["pDeviceMasks"].contains("null")){
        temp_QETTEBi=NULL;
        return;
        }
    temp_QETTEBi=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int LuAlIdt=0; LuAlIdt < result.swapchainCount; LuAlIdt++){
            [&]() {
temp_QETTEBi[LuAlIdt]=deserialize_uint32_t(name["members"]["pDeviceMasks"]["members"][LuAlIdt]);}();;
        }
        }();result.pDeviceMasks=temp_QETTEBi;}();
[&]() {
result.mode=deserialize_VkDeviceGroupPresentModeFlagBitsKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfo(VkDeviceGroupDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TzxsSyo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_fgXekeE=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_LTKgBEX=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_LTKgBEX["null"]=true;
            return return_LTKgBEX;
        }
        
        return_LTKgBEX["members"]={};
        for(int LTKgBEX=0; LTKgBEX < name.physicalDeviceCount; LTKgBEX++){
            json temp;
            temp=[&]() {
    json return_XjxuilP=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[LTKgBEX]);}();
            return_LTKgBEX["members"].push_back(temp);
        }
        return return_LTKgBEX;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfo deserialize_VkDeviceGroupDeviceCreateInfo(json &name){
        auto result=VkDeviceGroupDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_LUNSapR;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_LUNSapR=NULL;
        return;
        }
    temp_LUNSapR=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int yTVoloj=0; yTVoloj < result.physicalDeviceCount; yTVoloj++){
            [&]() {
temp_LUNSapR[yTVoloj]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][yTVoloj]);}();;
        }
        }();result.pPhysicalDevices=temp_LUNSapR;}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfoKHR(VkDeviceGroupDeviceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TzxsSyo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_fgXekeE=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_LTKgBEX=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_LTKgBEX["null"]=true;
            return return_LTKgBEX;
        }
        
        return_LTKgBEX["members"]={};
        for(int LTKgBEX=0; LTKgBEX < name.physicalDeviceCount; LTKgBEX++){
            json temp;
            temp=[&]() {
    json return_XjxuilP=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[LTKgBEX]);}();
            return_LTKgBEX["members"].push_back(temp);
        }
        return return_LTKgBEX;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfoKHR deserialize_VkDeviceGroupDeviceCreateInfoKHR(json &name){
        auto result=VkDeviceGroupDeviceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_LUNSapR;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_LUNSapR=NULL;
        return;
        }
    temp_LUNSapR=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int yTVoloj=0; yTVoloj < result.physicalDeviceCount; yTVoloj++){
            [&]() {
temp_LUNSapR[yTVoloj]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][yTVoloj]);}();;
        }
        }();result.pPhysicalDevices=temp_LUNSapR;}();
return result;}

    json serialize_VkDeviceGroupSwapchainCreateInfoKHR(VkDeviceGroupSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jwzVeSL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["modes"]=[&]() {
    json return_SJqSJEL=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupSwapchainCreateInfoKHR deserialize_VkDeviceGroupSwapchainCreateInfoKHR(json &name){
        auto result=VkDeviceGroupSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntry(VkDescriptorUpdateTemplateEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_jQlQHce=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_qYOJSGR=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_sJEznBA=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_KanxJef=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_akPMaax=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_kugcqbZ=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntry deserialize_VkDescriptorUpdateTemplateEntry(json &name){
        auto result=VkDescriptorUpdateTemplateEntry();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntryKHR(VkDescriptorUpdateTemplateEntryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_jQlQHce=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_qYOJSGR=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_sJEznBA=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_KanxJef=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_akPMaax=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_kugcqbZ=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntryKHR deserialize_VkDescriptorUpdateTemplateEntryKHR(json &name){
        auto result=VkDescriptorUpdateTemplateEntryKHR();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfo(VkDescriptorUpdateTemplateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fDBrBpu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gJSWMCd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_SmpdhhK=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_jMMsQmT=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_CKikeUE=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_CKikeUE["null"]=true;
            return return_CKikeUE;
        }
        
        return_CKikeUE["members"]={};
        for(int CKikeUE=0; CKikeUE < name.descriptorUpdateEntryCount; CKikeUE++){
            json temp;
            temp=[&]() {
    json return_FgolwPW=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[CKikeUE]);}();
            return_CKikeUE["members"].push_back(temp);
        }
        return return_CKikeUE;
        }();
result["members"]["templateType"]=[&]() {
    json return_SkJJiOv=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_ysdGEKX=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_dYcVFCD=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_epwtaHS=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_CSxsmaG=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfo deserialize_VkDescriptorUpdateTemplateCreateInfo(json &name){
        auto result=VkDescriptorUpdateTemplateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_cwnyweD;[&]() {
temp_cwnyweD=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_cwnyweD;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_MUWeinc;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_MUWeinc=NULL;
        return;
        }
    temp_MUWeinc=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int mvfynCO=0; mvfynCO < result.descriptorUpdateEntryCount; mvfynCO++){
            [&]() {
temp_MUWeinc[mvfynCO]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][mvfynCO]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_MUWeinc;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfoKHR(VkDescriptorUpdateTemplateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fDBrBpu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gJSWMCd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_SmpdhhK=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_jMMsQmT=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_CKikeUE=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_CKikeUE["null"]=true;
            return return_CKikeUE;
        }
        
        return_CKikeUE["members"]={};
        for(int CKikeUE=0; CKikeUE < name.descriptorUpdateEntryCount; CKikeUE++){
            json temp;
            temp=[&]() {
    json return_FgolwPW=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[CKikeUE]);}();
            return_CKikeUE["members"].push_back(temp);
        }
        return return_CKikeUE;
        }();
result["members"]["templateType"]=[&]() {
    json return_SkJJiOv=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_ysdGEKX=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_dYcVFCD=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_epwtaHS=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_CSxsmaG=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfoKHR deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(json &name){
        auto result=VkDescriptorUpdateTemplateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_cwnyweD;[&]() {
temp_cwnyweD=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_cwnyweD;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_MUWeinc;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_MUWeinc=NULL;
        return;
        }
    temp_MUWeinc=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int mvfynCO=0; mvfynCO < result.descriptorUpdateEntryCount; mvfynCO++){
            [&]() {
temp_MUWeinc[mvfynCO]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][mvfynCO]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_MUWeinc;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkXYColorEXT(VkXYColorEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_XGrbKZa=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_GAheQRN=json({});
    return serialize_float(name.y);}();
return result;}

    VkXYColorEXT deserialize_VkXYColorEXT(json &name){
        auto result=VkXYColorEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkPhysicalDevicePresentIdFeaturesKHR(VkPhysicalDevicePresentIdFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RllUeFs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentId"]=[&]() {
    json return_kKUDdAk=json({});
    return_kKUDdAk=[&]() {
    json return_zATspvH=json({});
    return serialize_uint32_t(name.presentId);}();return return_kKUDdAk;}();
return result;}

    VkPhysicalDevicePresentIdFeaturesKHR deserialize_VkPhysicalDevicePresentIdFeaturesKHR(json &name){
        auto result=VkPhysicalDevicePresentIdFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.presentId=deserialize_uint32_t(name["members"]["presentId"]);}();}();
return result;}

    json serialize_VkPresentIdKHR(VkPresentIdKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sJALYUj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchainCount"]=[&]() {
    json return_sIvDKaZ=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentIds"]=[&]() {
    json return_LZEudxi=json({});
    
        if (name.pPresentIds==NULL){
            return_LZEudxi["null"]=true;
            return return_LZEudxi;
        }
        
        return_LZEudxi["members"]={};
        for(int LZEudxi=0; LZEudxi < name.swapchainCount; LZEudxi++){
            json temp;
            temp=[&]() {
    json return_oagHTXI=json({});
    return serialize_uint64_t(name.pPresentIds[LZEudxi]);}();
            return_LZEudxi["members"].push_back(temp);
        }
        return return_LZEudxi;
        }();
return result;}

    VkPresentIdKHR deserialize_VkPresentIdKHR(json &name){
        auto result=VkPresentIdKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint64_t* temp_FzXeCuZ;[&]() {

        if (name["members"]["pPresentIds"].contains("null")){
        temp_FzXeCuZ=NULL;
        return;
        }
    temp_FzXeCuZ=(uint64_t*)malloc(result.swapchainCount*sizeof(uint64_t));
        for (int iIAJAWe=0; iIAJAWe < result.swapchainCount; iIAJAWe++){
            [&]() {
temp_FzXeCuZ[iIAJAWe]=deserialize_uint64_t(name["members"]["pPresentIds"]["members"][iIAJAWe]);}();;
        }
        }();result.pPresentIds=temp_FzXeCuZ;}();
return result;}

    json serialize_VkPhysicalDevicePresentWaitFeaturesKHR(VkPhysicalDevicePresentWaitFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PdQUjSI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentWait"]=[&]() {
    json return_jenarfv=json({});
    return_jenarfv=[&]() {
    json return_SmcLYAm=json({});
    return serialize_uint32_t(name.presentWait);}();return return_jenarfv;}();
return result;}

    VkPhysicalDevicePresentWaitFeaturesKHR deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(json &name){
        auto result=VkPhysicalDevicePresentWaitFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.presentWait=deserialize_uint32_t(name["members"]["presentWait"]);}();}();
return result;}

    json serialize_VkHdrMetadataEXT(VkHdrMetadataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_udVvGTB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yzGVqQV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["displayPrimaryRed"]=[&]() {
    json return_nICBSFa=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryRed);}();
result["members"]["displayPrimaryGreen"]=[&]() {
    json return_UAnCHUQ=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryGreen);}();
result["members"]["displayPrimaryBlue"]=[&]() {
    json return_QQCPazc=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryBlue);}();
result["members"]["whitePoint"]=[&]() {
    json return_zsVHyWO=json({});
    return serialize_VkXYColorEXT(name.whitePoint);}();
result["members"]["maxLuminance"]=[&]() {
    json return_EKyttKT=json({});
    return serialize_float(name.maxLuminance);}();
result["members"]["minLuminance"]=[&]() {
    json return_owCSBuj=json({});
    return serialize_float(name.minLuminance);}();
result["members"]["maxContentLightLevel"]=[&]() {
    json return_GPtQypw=json({});
    return serialize_float(name.maxContentLightLevel);}();
result["members"]["maxFrameAverageLightLevel"]=[&]() {
    json return_XqmvaeA=json({});
    return serialize_float(name.maxFrameAverageLightLevel);}();
return result;}

    VkHdrMetadataEXT deserialize_VkHdrMetadataEXT(json &name){
        auto result=VkHdrMetadataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_iXBUGzC;[&]() {
temp_iXBUGzC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_iXBUGzC;}();
[&]() {
result.displayPrimaryRed=deserialize_VkXYColorEXT(name["members"]["displayPrimaryRed"]);}();
[&]() {
result.displayPrimaryGreen=deserialize_VkXYColorEXT(name["members"]["displayPrimaryGreen"]);}();
[&]() {
result.displayPrimaryBlue=deserialize_VkXYColorEXT(name["members"]["displayPrimaryBlue"]);}();
[&]() {
result.whitePoint=deserialize_VkXYColorEXT(name["members"]["whitePoint"]);}();
[&]() {
result.maxLuminance=deserialize_float(name["members"]["maxLuminance"]);}();
[&]() {
result.minLuminance=deserialize_float(name["members"]["minLuminance"]);}();
[&]() {
result.maxContentLightLevel=deserialize_float(name["members"]["maxContentLightLevel"]);}();
[&]() {
result.maxFrameAverageLightLevel=deserialize_float(name["members"]["maxFrameAverageLightLevel"]);}();
return result;}

    json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkDisplayNativeHdrSurfaceCapabilitiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UwHJwBz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JxLibiQ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["localDimmingSupport"]=[&]() {
    json return_HxMyNZd=json({});
    return_HxMyNZd=[&]() {
    json return_HoBpiJk=json({});
    return serialize_uint32_t(name.localDimmingSupport);}();return return_HxMyNZd;}();
return result;}

    VkDisplayNativeHdrSurfaceCapabilitiesAMD deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(json &name){
        auto result=VkDisplayNativeHdrSurfaceCapabilitiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.localDimmingSupport=deserialize_uint32_t(name["members"]["localDimmingSupport"]);}();}();
return result;}

    json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(VkSwapchainDisplayNativeHdrCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IISoboe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fJVPDUH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["localDimmingEnable"]=[&]() {
    json return_ZycAkRz=json({});
    return_ZycAkRz=[&]() {
    json return_BKxfHUV=json({});
    return serialize_uint32_t(name.localDimmingEnable);}();return return_ZycAkRz;}();
return result;}

    VkSwapchainDisplayNativeHdrCreateInfoAMD deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(json &name){
        auto result=VkSwapchainDisplayNativeHdrCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_sKVZcum;[&]() {
temp_sKVZcum=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_sKVZcum;}();
[&]() {
[&]() {
result.localDimmingEnable=deserialize_uint32_t(name["members"]["localDimmingEnable"]);}();}();
return result;}

    json serialize_VkRefreshCycleDurationGOOGLE(VkRefreshCycleDurationGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["refreshDuration"]=[&]() {
    json return_iGIcbkT=json({});
    return serialize_uint64_t(name.refreshDuration);}();
return result;}

    VkRefreshCycleDurationGOOGLE deserialize_VkRefreshCycleDurationGOOGLE(json &name){
        auto result=VkRefreshCycleDurationGOOGLE();
    
[&]() {
result.refreshDuration=deserialize_uint64_t(name["members"]["refreshDuration"]);}();
return result;}

    json serialize_VkPastPresentationTimingGOOGLE(VkPastPresentationTimingGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_PlECcRL=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_oxUEPGg=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
result["members"]["actualPresentTime"]=[&]() {
    json return_ErioGDh=json({});
    return serialize_uint64_t(name.actualPresentTime);}();
result["members"]["earliestPresentTime"]=[&]() {
    json return_xmAKZRB=json({});
    return serialize_uint64_t(name.earliestPresentTime);}();
result["members"]["presentMargin"]=[&]() {
    json return_CnduJZe=json({});
    return serialize_uint64_t(name.presentMargin);}();
return result;}

    VkPastPresentationTimingGOOGLE deserialize_VkPastPresentationTimingGOOGLE(json &name){
        auto result=VkPastPresentationTimingGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
[&]() {
result.actualPresentTime=deserialize_uint64_t(name["members"]["actualPresentTime"]);}();
[&]() {
result.earliestPresentTime=deserialize_uint64_t(name["members"]["earliestPresentTime"]);}();
[&]() {
result.presentMargin=deserialize_uint64_t(name["members"]["presentMargin"]);}();
return result;}

    json serialize_VkPresentTimesInfoGOOGLE(VkPresentTimesInfoGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rTQZLRx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchainCount"]=[&]() {
    json return_sIvDKaZ=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pTimes"]=[&]() {
    json return_pYeSozI=json({});
    
        if (name.pTimes==NULL){
            return_pYeSozI["null"]=true;
            return return_pYeSozI;
        }
        
        return_pYeSozI["members"]={};
        for(int pYeSozI=0; pYeSozI < name.swapchainCount; pYeSozI++){
            json temp;
            temp=[&]() {
    json return_AQqsGRK=json({});
    return serialize_VkPresentTimeGOOGLE(name.pTimes[pYeSozI]);}();
            return_pYeSozI["members"].push_back(temp);
        }
        return return_pYeSozI;
        }();
return result;}

    VkPresentTimesInfoGOOGLE deserialize_VkPresentTimesInfoGOOGLE(json &name){
        auto result=VkPresentTimesInfoGOOGLE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentTimeGOOGLE* temp_LogMfaN;[&]() {

        if (name["members"]["pTimes"].contains("null")){
        temp_LogMfaN=NULL;
        return;
        }
    temp_LogMfaN=(VkPresentTimeGOOGLE*)malloc(result.swapchainCount*sizeof(VkPresentTimeGOOGLE));
        for (int ubtpaAc=0; ubtpaAc < result.swapchainCount; ubtpaAc++){
            [&]() {
temp_LogMfaN[ubtpaAc]=deserialize_VkPresentTimeGOOGLE(name["members"]["pTimes"]["members"][ubtpaAc]);}();;
        }
        }();result.pTimes=temp_LogMfaN;}();
return result;}

    json serialize_VkPresentTimeGOOGLE(VkPresentTimeGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_jMjtEth=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_ZFNvOam=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
return result;}

    VkPresentTimeGOOGLE deserialize_VkPresentTimeGOOGLE(json &name){
        auto result=VkPresentTimeGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
return result;}

    json serialize_VkViewportWScalingNV(VkViewportWScalingNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["xcoeff"]=[&]() {
    json return_uWadYjx=json({});
    return serialize_float(name.xcoeff);}();
result["members"]["ycoeff"]=[&]() {
    json return_veweiSc=json({});
    return serialize_float(name.ycoeff);}();
return result;}

    VkViewportWScalingNV deserialize_VkViewportWScalingNV(json &name){
        auto result=VkViewportWScalingNV();
    
[&]() {
result.xcoeff=deserialize_float(name["members"]["xcoeff"]);}();
[&]() {
result.ycoeff=deserialize_float(name["members"]["ycoeff"]);}();
return result;}

    json serialize_VkPipelineViewportWScalingStateCreateInfoNV(VkPipelineViewportWScalingStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wpKvccE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["viewportWScalingEnable"]=[&]() {
    json return_pGjzPyC=json({});
    return_pGjzPyC=[&]() {
    json return_tgyypWb=json({});
    return serialize_uint32_t(name.viewportWScalingEnable);}();return return_pGjzPyC;}();
result["members"]["viewportCount"]=[&]() {
    json return_GMpEfsp=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportWScalings"]=[&]() {
    json return_vPVjhen=json({});
    
        if (name.pViewportWScalings==NULL){
            return_vPVjhen["null"]=true;
            return return_vPVjhen;
        }
        
        return_vPVjhen["members"]={};
        for(int vPVjhen=0; vPVjhen < name.viewportCount; vPVjhen++){
            json temp;
            temp=[&]() {
    json return_rmIFGVA=json({});
    return serialize_VkViewportWScalingNV(name.pViewportWScalings[vPVjhen]);}();
            return_vPVjhen["members"].push_back(temp);
        }
        return return_vPVjhen;
        }();
return result;}

    VkPipelineViewportWScalingStateCreateInfoNV deserialize_VkPipelineViewportWScalingStateCreateInfoNV(json &name){
        auto result=VkPipelineViewportWScalingStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
[&]() {
result.viewportWScalingEnable=deserialize_uint32_t(name["members"]["viewportWScalingEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportWScalingNV* temp_EnWmjmG;[&]() {

        if (name["members"]["pViewportWScalings"].contains("null")){
        temp_EnWmjmG=NULL;
        return;
        }
    temp_EnWmjmG=(VkViewportWScalingNV*)malloc(result.viewportCount*sizeof(VkViewportWScalingNV));
        for (int XewVEVp=0; XewVEVp < result.viewportCount; XewVEVp++){
            [&]() {
temp_EnWmjmG[XewVEVp]=deserialize_VkViewportWScalingNV(name["members"]["pViewportWScalings"]["members"][XewVEVp]);}();;
        }
        }();result.pViewportWScalings=temp_EnWmjmG;}();
return result;}

    json serialize_VkViewportSwizzleNV(VkViewportSwizzleNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_nrTvCFo=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.x);}();
result["members"]["y"]=[&]() {
    json return_uYCqMgB=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.y);}();
result["members"]["z"]=[&]() {
    json return_SHowExY=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.z);}();
result["members"]["w"]=[&]() {
    json return_yjUwUtX=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.w);}();
return result;}

    VkViewportSwizzleNV deserialize_VkViewportSwizzleNV(json &name){
        auto result=VkViewportSwizzleNV();
    
[&]() {
result.x=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["x"]);}();
[&]() {
result.y=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["y"]);}();
[&]() {
result.z=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["z"]);}();
[&]() {
result.w=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["w"]);}();
return result;}

    json serialize_VkPipelineViewportSwizzleStateCreateInfoNV(VkPipelineViewportSwizzleStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FJYfAEg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_HEVORQI=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_GMpEfsp=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportSwizzles"]=[&]() {
    json return_tGCkFCn=json({});
    
        if (name.pViewportSwizzles==NULL){
            return_tGCkFCn["null"]=true;
            return return_tGCkFCn;
        }
        
        return_tGCkFCn["members"]={};
        for(int tGCkFCn=0; tGCkFCn < name.viewportCount; tGCkFCn++){
            json temp;
            temp=[&]() {
    json return_DBcIdKJ=json({});
    return serialize_VkViewportSwizzleNV(name.pViewportSwizzles[tGCkFCn]);}();
            return_tGCkFCn["members"].push_back(temp);
        }
        return return_tGCkFCn;
        }();
return result;}

    VkPipelineViewportSwizzleStateCreateInfoNV deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(json &name){
        auto result=VkPipelineViewportSwizzleStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportSwizzleNV* temp_pWLvtas;[&]() {

        if (name["members"]["pViewportSwizzles"].contains("null")){
        temp_pWLvtas=NULL;
        return;
        }
    temp_pWLvtas=(VkViewportSwizzleNV*)malloc(result.viewportCount*sizeof(VkViewportSwizzleNV));
        for (int KKnjzvJ=0; KKnjzvJ < result.viewportCount; KKnjzvJ++){
            [&]() {
temp_pWLvtas[KKnjzvJ]=deserialize_VkViewportSwizzleNV(name["members"]["pViewportSwizzles"]["members"][KKnjzvJ]);}();;
        }
        }();result.pViewportSwizzles=temp_pWLvtas;}();
return result;}

    json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkPhysicalDeviceDiscardRectanglePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MzFdZJs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxDiscardRectangles"]=[&]() {
    json return_XWmKsoQ=json({});
    return serialize_uint32_t(name.maxDiscardRectangles);}();
return result;}

    VkPhysicalDeviceDiscardRectanglePropertiesEXT deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(json &name){
        auto result=VkPhysicalDeviceDiscardRectanglePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxDiscardRectangles=deserialize_uint32_t(name["members"]["maxDiscardRectangles"]);}();
return result;}

    json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(VkPipelineDiscardRectangleStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rsKGfNl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DTnQGEG=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_JCzniMc=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name.flags);}();
result["members"]["discardRectangleMode"]=[&]() {
    json return_NUnQODv=json({});
    return serialize_VkDiscardRectangleModeEXT(name.discardRectangleMode);}();
result["members"]["discardRectangleCount"]=[&]() {
    json return_HvEsJkr=json({});
    return serialize_uint32_t(name.discardRectangleCount);}();
result["members"]["pDiscardRectangles"]=[&]() {
    json return_THtHbUf=json({});
    
        if (name.pDiscardRectangles==NULL){
            return_THtHbUf["null"]=true;
            return return_THtHbUf;
        }
        
        return_THtHbUf["members"]={};
        for(int THtHbUf=0; THtHbUf < name.discardRectangleCount; THtHbUf++){
            json temp;
            temp=[&]() {
    json return_tYEdKvf=json({});
    return serialize_VkRect2D(name.pDiscardRectangles[THtHbUf]);}();
            return_THtHbUf["members"].push_back(temp);
        }
        return return_THtHbUf;
        }();
return result;}

    VkPipelineDiscardRectangleStateCreateInfoEXT deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(json &name){
        auto result=VkPipelineDiscardRectangleStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_PnRMIUw;[&]() {
temp_PnRMIUw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_PnRMIUw;}();
[&]() {
result.flags=deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.discardRectangleMode=deserialize_VkDiscardRectangleModeEXT(name["members"]["discardRectangleMode"]);}();
[&]() {
result.discardRectangleCount=deserialize_uint32_t(name["members"]["discardRectangleCount"]);}();
[&]() {
VkRect2D* temp_mVRHFKD;[&]() {

        if (name["members"]["pDiscardRectangles"].contains("null")){
        temp_mVRHFKD=NULL;
        return;
        }
    temp_mVRHFKD=(VkRect2D*)malloc(result.discardRectangleCount*sizeof(VkRect2D));
        for (int QukjBHF=0; QukjBHF < result.discardRectangleCount; QukjBHF++){
            [&]() {
temp_mVRHFKD[QukjBHF]=deserialize_VkRect2D(name["members"]["pDiscardRectangles"]["members"][QukjBHF]);}();;
        }
        }();result.pDiscardRectangles=temp_mVRHFKD;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tJKGKeU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["perViewPositionAllComponents"]=[&]() {
    json return_mVKlrUi=json({});
    return_mVKlrUi=[&]() {
    json return_fyExbXl=json({});
    return serialize_uint32_t(name.perViewPositionAllComponents);}();return return_mVKlrUi;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(json &name){
        auto result=VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.perViewPositionAllComponents=deserialize_uint32_t(name["members"]["perViewPositionAllComponents"]);}();}();
return result;}

    json serialize_VkInputAttachmentAspectReference(VkInputAttachmentAspectReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_ylghxAl=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_LJSwJGj=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_wSISsQE=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReference deserialize_VkInputAttachmentAspectReference(json &name){
        auto result=VkInputAttachmentAspectReference();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkInputAttachmentAspectReferenceKHR(VkInputAttachmentAspectReferenceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_ylghxAl=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_LJSwJGj=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_wSISsQE=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReferenceKHR deserialize_VkInputAttachmentAspectReferenceKHR(json &name){
        auto result=VkInputAttachmentAspectReferenceKHR();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfo(VkRenderPassInputAttachmentAspectCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gRdEmWA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pvtWzSO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_TDTTpbd=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_XRxdriy=json({});
    
        if (name.pAspectReferences==NULL){
            return_XRxdriy["null"]=true;
            return return_XRxdriy;
        }
        
        return_XRxdriy["members"]={};
        for(int XRxdriy=0; XRxdriy < name.aspectReferenceCount; XRxdriy++){
            json temp;
            temp=[&]() {
    json return_LfvxjJe=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[XRxdriy]);}();
            return_XRxdriy["members"].push_back(temp);
        }
        return return_XRxdriy;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfo deserialize_VkRenderPassInputAttachmentAspectCreateInfo(json &name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_oruVcEA;[&]() {
temp_oruVcEA=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_oruVcEA;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_DwybZIx;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_DwybZIx=NULL;
        return;
        }
    temp_DwybZIx=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int BXsIguf=0; BXsIguf < result.aspectReferenceCount; BXsIguf++){
            [&]() {
temp_DwybZIx[BXsIguf]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][BXsIguf]);}();;
        }
        }();result.pAspectReferences=temp_DwybZIx;}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(VkRenderPassInputAttachmentAspectCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gRdEmWA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pvtWzSO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_TDTTpbd=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_XRxdriy=json({});
    
        if (name.pAspectReferences==NULL){
            return_XRxdriy["null"]=true;
            return return_XRxdriy;
        }
        
        return_XRxdriy["members"]={};
        for(int XRxdriy=0; XRxdriy < name.aspectReferenceCount; XRxdriy++){
            json temp;
            temp=[&]() {
    json return_LfvxjJe=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[XRxdriy]);}();
            return_XRxdriy["members"].push_back(temp);
        }
        return return_XRxdriy;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfoKHR deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(json &name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_oruVcEA;[&]() {
temp_oruVcEA=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_oruVcEA;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_DwybZIx;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_DwybZIx=NULL;
        return;
        }
    temp_DwybZIx=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int BXsIguf=0; BXsIguf < result.aspectReferenceCount; BXsIguf++){
            [&]() {
temp_DwybZIx[BXsIguf]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][BXsIguf]);}();;
        }
        }();result.pAspectReferences=temp_DwybZIx;}();
return result;}

    json serialize_VkPhysicalDeviceSurfaceInfo2KHR(VkPhysicalDeviceSurfaceInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DvbbjXX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["surface"]=[&]() {
    json return_RJGlfLN=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
return result;}

    VkPhysicalDeviceSurfaceInfo2KHR deserialize_VkPhysicalDeviceSurfaceInfo2KHR(json &name){
        auto result=VkPhysicalDeviceSurfaceInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
return result;}

    json serialize_VkSurfaceCapabilities2KHR(VkSurfaceCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qLKBsvU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEEdpgl=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["surfaceCapabilities"]=[&]() {
    json return_VJhMIxZ=json({});
    return serialize_VkSurfaceCapabilitiesKHR(name.surfaceCapabilities);}();
return result;}

    VkSurfaceCapabilities2KHR deserialize_VkSurfaceCapabilities2KHR(json &name){
        auto result=VkSurfaceCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.surfaceCapabilities=deserialize_VkSurfaceCapabilitiesKHR(name["members"]["surfaceCapabilities"]);}();
return result;}

    json serialize_VkSurfaceFormat2KHR(VkSurfaceFormat2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UnjFidS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["surfaceFormat"]=[&]() {
    json return_asGTtGT=json({});
    return serialize_VkSurfaceFormatKHR(name.surfaceFormat);}();
return result;}

    VkSurfaceFormat2KHR deserialize_VkSurfaceFormat2KHR(json &name){
        auto result=VkSurfaceFormat2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.surfaceFormat=deserialize_VkSurfaceFormatKHR(name["members"]["surfaceFormat"]);}();
return result;}

    json serialize_VkDisplayProperties2KHR(VkDisplayProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EBaPpek=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["displayProperties"]=[&]() {
    json return_XpHWYmX=json({});
    return serialize_VkDisplayPropertiesKHR(name.displayProperties);}();
return result;}

    VkDisplayProperties2KHR deserialize_VkDisplayProperties2KHR(json &name){
        auto result=VkDisplayProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.displayProperties=deserialize_VkDisplayPropertiesKHR(name["members"]["displayProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneProperties2KHR(VkDisplayPlaneProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ersFxLD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["displayPlaneProperties"]=[&]() {
    json return_cYZMyur=json({});
    return serialize_VkDisplayPlanePropertiesKHR(name.displayPlaneProperties);}();
return result;}

    VkDisplayPlaneProperties2KHR deserialize_VkDisplayPlaneProperties2KHR(json &name){
        auto result=VkDisplayPlaneProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.displayPlaneProperties=deserialize_VkDisplayPlanePropertiesKHR(name["members"]["displayPlaneProperties"]);}();
return result;}

    json serialize_VkDisplayModeProperties2KHR(VkDisplayModeProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gpLxwVm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["displayModeProperties"]=[&]() {
    json return_iGtXixS=json({});
    return serialize_VkDisplayModePropertiesKHR(name.displayModeProperties);}();
return result;}

    VkDisplayModeProperties2KHR deserialize_VkDisplayModeProperties2KHR(json &name){
        auto result=VkDisplayModeProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.displayModeProperties=deserialize_VkDisplayModePropertiesKHR(name["members"]["displayModeProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneInfo2KHR(VkDisplayPlaneInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_whEICuL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["mode"]=[&]() {
    json return_IOmMECO=json({});
    return serialize_VkDisplayModeKHR(name.mode);}();
result["members"]["planeIndex"]=[&]() {
    json return_VlMjbYn=json({});
    return serialize_uint32_t(name.planeIndex);}();
return result;}

    VkDisplayPlaneInfo2KHR deserialize_VkDisplayPlaneInfo2KHR(json &name){
        auto result=VkDisplayPlaneInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.mode=deserialize_VkDisplayModeKHR(name["members"]["mode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilities2KHR(VkDisplayPlaneCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oAevvMs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["capabilities"]=[&]() {
    json return_EylOEVh=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(name.capabilities);}();
return result;}

    VkDisplayPlaneCapabilities2KHR deserialize_VkDisplayPlaneCapabilities2KHR(json &name){
        auto result=VkDisplayPlaneCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.capabilities=deserialize_VkDisplayPlaneCapabilitiesKHR(name["members"]["capabilities"]);}();
return result;}

    json serialize_VkSharedPresentSurfaceCapabilitiesKHR(VkSharedPresentSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jezUtxS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sharedPresentSupportedUsageFlags"]=[&]() {
    json return_waJhPhZ=json({});
    return serialize_VkImageUsageFlags(name.sharedPresentSupportedUsageFlags);}();
return result;}

    VkSharedPresentSurfaceCapabilitiesKHR deserialize_VkSharedPresentSurfaceCapabilitiesKHR(json &name){
        auto result=VkSharedPresentSurfaceCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.sharedPresentSupportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["sharedPresentSupportedUsageFlags"]);}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeatures(VkPhysicalDevice16BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bhYmPRP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_MiRrbTk=json({});
    return_MiRrbTk=[&]() {
    json return_cgdXrGM=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_MiRrbTk;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_JtAQzbG=json({});
    return_JtAQzbG=[&]() {
    json return_PDSrSJS=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_JtAQzbG;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_jHhMKdk=json({});
    return_jHhMKdk=[&]() {
    json return_rtMZgIu=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_jHhMKdk;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_LQvHGdm=json({});
    return_LQvHGdm=[&]() {
    json return_CMTHmqu=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_LQvHGdm;}();
return result;}

    VkPhysicalDevice16BitStorageFeatures deserialize_VkPhysicalDevice16BitStorageFeatures(json &name){
        auto result=VkPhysicalDevice16BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeaturesKHR(VkPhysicalDevice16BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bhYmPRP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_MiRrbTk=json({});
    return_MiRrbTk=[&]() {
    json return_cgdXrGM=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_MiRrbTk;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_JtAQzbG=json({});
    return_JtAQzbG=[&]() {
    json return_PDSrSJS=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_JtAQzbG;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_jHhMKdk=json({});
    return_jHhMKdk=[&]() {
    json return_rtMZgIu=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_jHhMKdk;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_LQvHGdm=json({});
    return_LQvHGdm=[&]() {
    json return_CMTHmqu=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_LQvHGdm;}();
return result;}

    VkPhysicalDevice16BitStorageFeaturesKHR deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(json &name){
        auto result=VkPhysicalDevice16BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupProperties(VkPhysicalDeviceSubgroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lVAbvxD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXLilEx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subgroupSize"]=[&]() {
    json return_MRXKNPp=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["supportedStages"]=[&]() {
    json return_sfFOqHK=json({});
    return serialize_VkShaderStageFlags(name.supportedStages);}();
result["members"]["supportedOperations"]=[&]() {
    json return_RxsQyWn=json({});
    return serialize_VkSubgroupFeatureFlags(name.supportedOperations);}();
result["members"]["quadOperationsInAllStages"]=[&]() {
    json return_ILCyDwt=json({});
    return_ILCyDwt=[&]() {
    json return_MCZqLfW=json({});
    return serialize_uint32_t(name.quadOperationsInAllStages);}();return return_ILCyDwt;}();
return result;}

    VkPhysicalDeviceSubgroupProperties deserialize_VkPhysicalDeviceSubgroupProperties(json &name){
        auto result=VkPhysicalDeviceSubgroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.supportedStages=deserialize_VkShaderStageFlags(name["members"]["supportedStages"]);}();
[&]() {
result.supportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["supportedOperations"]);}();
[&]() {
[&]() {
result.quadOperationsInAllStages=deserialize_uint32_t(name["members"]["quadOperationsInAllStages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FqZdvOD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_LbbXOIF=json({});
    return_LbbXOIF=[&]() {
    json return_kCjzdLh=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_LbbXOIF;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(json &name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FqZdvOD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_LbbXOIF=json({});
    return_LbbXOIF=[&]() {
    json return_kCjzdLh=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_LbbXOIF;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2(VkBufferMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NeJQLUl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_ddmkUje=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2 deserialize_VkBufferMemoryRequirementsInfo2(json &name){
        auto result=VkBufferMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2KHR(VkBufferMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NeJQLUl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_ddmkUje=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2KHR deserialize_VkBufferMemoryRequirementsInfo2KHR(json &name){
        auto result=VkBufferMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirements(VkDeviceBufferMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QdwJSze=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LOwGhuS=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pCreateInfo"]=[&]() {
    json return_HQPEonY=json({});
    
        if (name.pCreateInfo==NULL){
            return_HQPEonY["null"]=true;
            return return_HQPEonY;
        }
        return_HQPEonY=[&]() {
    json return_CzQghgr=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_HQPEonY;}();
return result;}

    VkDeviceBufferMemoryRequirements deserialize_VkDeviceBufferMemoryRequirements(json &name){
        auto result=VkDeviceBufferMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qHEAwzl;[&]() {
temp_qHEAwzl=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qHEAwzl;}();
[&]() {
VkBufferCreateInfo* temp_HHqtMkr;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_HHqtMkr=NULL;
        return;
        }
    temp_HHqtMkr=(VkBufferCreateInfo*)malloc(sizeof(VkBufferCreateInfo));
[&]() {
*(temp_HHqtMkr)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_HHqtMkr;}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirementsKHR(VkDeviceBufferMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QdwJSze=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LOwGhuS=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pCreateInfo"]=[&]() {
    json return_HQPEonY=json({});
    
        if (name.pCreateInfo==NULL){
            return_HQPEonY["null"]=true;
            return return_HQPEonY;
        }
        return_HQPEonY=[&]() {
    json return_CzQghgr=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_HQPEonY;}();
return result;}

    VkDeviceBufferMemoryRequirementsKHR deserialize_VkDeviceBufferMemoryRequirementsKHR(json &name){
        auto result=VkDeviceBufferMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qHEAwzl;[&]() {
temp_qHEAwzl=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qHEAwzl;}();
[&]() {
VkBufferCreateInfo* temp_HHqtMkr;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_HHqtMkr=NULL;
        return;
        }
    temp_HHqtMkr=(VkBufferCreateInfo*)malloc(sizeof(VkBufferCreateInfo));
[&]() {
*(temp_HHqtMkr)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_HHqtMkr;}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2(VkImageMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSgtGDg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_HPSfeSt=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2 deserialize_VkImageMemoryRequirementsInfo2(json &name){
        auto result=VkImageMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2KHR(VkImageMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSgtGDg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_HPSfeSt=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2KHR deserialize_VkImageMemoryRequirementsInfo2KHR(json &name){
        auto result=VkImageMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2(VkImageSparseMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VpbErvG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_HPSfeSt=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2 deserialize_VkImageSparseMemoryRequirementsInfo2(json &name){
        auto result=VkImageSparseMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2KHR(VkImageSparseMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VpbErvG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_HPSfeSt=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2KHR deserialize_VkImageSparseMemoryRequirementsInfo2KHR(json &name){
        auto result=VkImageSparseMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirements(VkDeviceImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UjEjGwF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pCreateInfo"]=[&]() {
    json return_FqxuLGV=json({});
    
        if (name.pCreateInfo==NULL){
            return_FqxuLGV["null"]=true;
            return return_FqxuLGV;
        }
        return_FqxuLGV=[&]() {
    json return_QctBBXO=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_FqxuLGV;}();
result["members"]["planeAspect"]=[&]() {
    json return_PKItRQg=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirements deserialize_VkDeviceImageMemoryRequirements(json &name){
        auto result=VkDeviceImageMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
VkImageCreateInfo* temp_XtGjUer;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_XtGjUer=NULL;
        return;
        }
    temp_XtGjUer=(VkImageCreateInfo*)malloc(sizeof(VkImageCreateInfo));
[&]() {
*(temp_XtGjUer)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_XtGjUer;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirementsKHR(VkDeviceImageMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UjEjGwF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pCreateInfo"]=[&]() {
    json return_FqxuLGV=json({});
    
        if (name.pCreateInfo==NULL){
            return_FqxuLGV["null"]=true;
            return return_FqxuLGV;
        }
        return_FqxuLGV=[&]() {
    json return_QctBBXO=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_FqxuLGV;}();
result["members"]["planeAspect"]=[&]() {
    json return_PKItRQg=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirementsKHR deserialize_VkDeviceImageMemoryRequirementsKHR(json &name){
        auto result=VkDeviceImageMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
VkImageCreateInfo* temp_XtGjUer;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_XtGjUer=NULL;
        return;
        }
    temp_XtGjUer=(VkImageCreateInfo*)malloc(sizeof(VkImageCreateInfo));
[&]() {
*(temp_XtGjUer)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_XtGjUer;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkMemoryRequirements2(VkMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dxRDrlz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_FpCoMif=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2 deserialize_VkMemoryRequirements2(json &name){
        auto result=VkMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkMemoryRequirements2KHR(VkMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dxRDrlz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_FpCoMif=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2KHR deserialize_VkMemoryRequirements2KHR(json &name){
        auto result=VkMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2(VkSparseImageMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CLGYUlA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CzGilQV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_fCJXRvE=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2 deserialize_VkSparseImageMemoryRequirements2(json &name){
        auto result=VkSparseImageMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2KHR(VkSparseImageMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CLGYUlA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CzGilQV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_fCJXRvE=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2KHR deserialize_VkSparseImageMemoryRequirements2KHR(json &name){
        auto result=VkSparseImageMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingProperties(VkPhysicalDevicePointClippingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JhHbPOK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_nxgluDe=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingProperties deserialize_VkPhysicalDevicePointClippingProperties(json &name){
        auto result=VkPhysicalDevicePointClippingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingPropertiesKHR(VkPhysicalDevicePointClippingPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JhHbPOK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_nxgluDe=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingPropertiesKHR deserialize_VkPhysicalDevicePointClippingPropertiesKHR(json &name){
        auto result=VkPhysicalDevicePointClippingPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkMemoryDedicatedRequirements(VkMemoryDedicatedRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KgvEdzh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_lJzzMYB=json({});
    return_lJzzMYB=[&]() {
    json return_iKxRFlX=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_lJzzMYB;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_MIAvrXH=json({});
    return_MIAvrXH=[&]() {
    json return_zDXRuCM=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_MIAvrXH;}();
return result;}

    VkMemoryDedicatedRequirements deserialize_VkMemoryDedicatedRequirements(json &name){
        auto result=VkMemoryDedicatedRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedRequirementsKHR(VkMemoryDedicatedRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KgvEdzh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_lJzzMYB=json({});
    return_lJzzMYB=[&]() {
    json return_iKxRFlX=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_lJzzMYB;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_MIAvrXH=json({});
    return_MIAvrXH=[&]() {
    json return_zDXRuCM=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_MIAvrXH;}();
return result;}

    VkMemoryDedicatedRequirementsKHR deserialize_VkMemoryDedicatedRequirementsKHR(json &name){
        auto result=VkMemoryDedicatedRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfo(VkMemoryDedicatedAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PhbGtwL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_hcdoCuf=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_TlAKuxg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfo deserialize_VkMemoryDedicatedAllocateInfo(json &name){
        auto result=VkMemoryDedicatedAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfoKHR(VkMemoryDedicatedAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PhbGtwL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_hcdoCuf=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_TlAKuxg=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfoKHR deserialize_VkMemoryDedicatedAllocateInfoKHR(json &name){
        auto result=VkMemoryDedicatedAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfo(VkImageViewUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AgKElmS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["usage"]=[&]() {
    json return_IBJUCIc=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfo deserialize_VkImageViewUsageCreateInfo(json &name){
        auto result=VkImageViewUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkImageViewSlicedCreateInfoEXT(VkImageViewSlicedCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZfTGVuX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sliceOffset"]=[&]() {
    json return_VpLAwDV=json({});
    return serialize_uint32_t(name.sliceOffset);}();
result["members"]["sliceCount"]=[&]() {
    json return_JNmNlsM=json({});
    return serialize_uint32_t(name.sliceCount);}();
return result;}

    VkImageViewSlicedCreateInfoEXT deserialize_VkImageViewSlicedCreateInfoEXT(json &name){
        auto result=VkImageViewSlicedCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.sliceOffset=deserialize_uint32_t(name["members"]["sliceOffset"]);}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfoKHR(VkImageViewUsageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AgKElmS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["usage"]=[&]() {
    json return_IBJUCIc=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfoKHR deserialize_VkImageViewUsageCreateInfoKHR(json &name){
        auto result=VkImageViewUsageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfo(VkPipelineTessellationDomainOriginStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uJguRjz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["domainOrigin"]=[&]() {
    json return_NULGinc=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfo deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(json &name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(VkPipelineTessellationDomainOriginStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uJguRjz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["domainOrigin"]=[&]() {
    json return_NULGinc=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfoKHR deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(json &name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfo(VkSamplerYcbcrConversionInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nOosnDK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["conversion"]=[&]() {
    json return_DOMwZve=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfo deserialize_VkSamplerYcbcrConversionInfo(json &name){
        auto result=VkSamplerYcbcrConversionInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfoKHR(VkSamplerYcbcrConversionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nOosnDK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["conversion"]=[&]() {
    json return_DOMwZve=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfoKHR deserialize_VkSamplerYcbcrConversionInfoKHR(json &name){
        auto result=VkSamplerYcbcrConversionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfo(VkSamplerYcbcrConversionCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yufTkpW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_IHIorIF=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_cbLJftj=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_MMFlasV=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_VaStVXa=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_rjvkcLq=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_EvCATtV=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_BwlpFkL=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_RMMnwcq=json({});
    return_RMMnwcq=[&]() {
    json return_wwfqaTi=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_RMMnwcq;}();
return result;}

    VkSamplerYcbcrConversionCreateInfo deserialize_VkSamplerYcbcrConversionCreateInfo(json &name){
        auto result=VkSamplerYcbcrConversionCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfoKHR(VkSamplerYcbcrConversionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yufTkpW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_IHIorIF=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_cbLJftj=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_MMFlasV=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_VaStVXa=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_rjvkcLq=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_EvCATtV=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_BwlpFkL=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_RMMnwcq=json({});
    return_RMMnwcq=[&]() {
    json return_wwfqaTi=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_RMMnwcq;}();
return result;}

    VkSamplerYcbcrConversionCreateInfoKHR deserialize_VkSamplerYcbcrConversionCreateInfoKHR(json &name){
        auto result=VkSamplerYcbcrConversionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfo(VkBindImagePlaneMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uItXmRV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["planeAspect"]=[&]() {
    json return_izWkSlQ=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfo deserialize_VkBindImagePlaneMemoryInfo(json &name){
        auto result=VkBindImagePlaneMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfoKHR(VkBindImagePlaneMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uItXmRV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["planeAspect"]=[&]() {
    json return_izWkSlQ=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfoKHR deserialize_VkBindImagePlaneMemoryInfoKHR(json &name){
        auto result=VkBindImagePlaneMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfo(VkImagePlaneMemoryRequirementsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VucVpoB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["planeAspect"]=[&]() {
    json return_izWkSlQ=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfo deserialize_VkImagePlaneMemoryRequirementsInfo(json &name){
        auto result=VkImagePlaneMemoryRequirementsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfoKHR(VkImagePlaneMemoryRequirementsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VucVpoB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["planeAspect"]=[&]() {
    json return_izWkSlQ=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfoKHR deserialize_VkImagePlaneMemoryRequirementsInfoKHR(json &name){
        auto result=VkImagePlaneMemoryRequirementsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(VkPhysicalDeviceSamplerYcbcrConversionFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pOXlMGV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_HhFsJWS=json({});
    return_HhFsJWS=[&]() {
    json return_gBlPrmP=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_HhFsJWS;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeatures deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(json &name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pOXlMGV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_HhFsJWS=json({});
    return_HhFsJWS=[&]() {
    json return_gBlPrmP=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_HhFsJWS;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatProperties(VkSamplerYcbcrConversionImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JhvzAaz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_EClYyne=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatProperties deserialize_VkSamplerYcbcrConversionImageFormatProperties(json &name){
        auto result=VkSamplerYcbcrConversionImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(VkSamplerYcbcrConversionImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JhvzAaz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_EClYyne=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatPropertiesKHR deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(json &name){
        auto result=VkSamplerYcbcrConversionImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkTextureLODGatherFormatPropertiesAMD(VkTextureLODGatherFormatPropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bANBEDu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supportsTextureGatherLODBiasAMD"]=[&]() {
    json return_VJmJUwG=json({});
    return_VJmJUwG=[&]() {
    json return_GEKlrSl=json({});
    return serialize_uint32_t(name.supportsTextureGatherLODBiasAMD);}();return return_VJmJUwG;}();
return result;}

    VkTextureLODGatherFormatPropertiesAMD deserialize_VkTextureLODGatherFormatPropertiesAMD(json &name){
        auto result=VkTextureLODGatherFormatPropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.supportsTextureGatherLODBiasAMD=deserialize_uint32_t(name["members"]["supportsTextureGatherLODBiasAMD"]);}();}();
return result;}

    json serialize_VkConditionalRenderingBeginInfoEXT(VkConditionalRenderingBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uCADbYv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_sJJwyuR=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_DvZjrqj=json({});
    return_DvZjrqj=[&]() {
    json return_qOWzFWN=json({});
    return serialize_uint64_t(name.offset);}();return return_DvZjrqj;}();
result["members"]["flags"]=[&]() {
    json return_xRViNGk=json({});
    return serialize_VkConditionalRenderingFlagsEXT(name.flags);}();
return result;}

    VkConditionalRenderingBeginInfoEXT deserialize_VkConditionalRenderingBeginInfoEXT(json &name){
        auto result=VkConditionalRenderingBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
result.flags=deserialize_VkConditionalRenderingFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkProtectedSubmitInfo(VkProtectedSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CfXjqxT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pvtWzSO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["protectedSubmit"]=[&]() {
    json return_zgDGpug=json({});
    return_zgDGpug=[&]() {
    json return_MtKfFEf=json({});
    return serialize_uint32_t(name.protectedSubmit);}();return return_zgDGpug;}();
return result;}

    VkProtectedSubmitInfo deserialize_VkProtectedSubmitInfo(json &name){
        auto result=VkProtectedSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_oruVcEA;[&]() {
temp_oruVcEA=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_oruVcEA;}();
[&]() {
[&]() {
result.protectedSubmit=deserialize_uint32_t(name["members"]["protectedSubmit"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryFeatures(VkPhysicalDeviceProtectedMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lbamuBr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["protectedMemory"]=[&]() {
    json return_YfskAmc=json({});
    return_YfskAmc=[&]() {
    json return_agkUssO=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_YfskAmc;}();
return result;}

    VkPhysicalDeviceProtectedMemoryFeatures deserialize_VkPhysicalDeviceProtectedMemoryFeatures(json &name){
        auto result=VkPhysicalDeviceProtectedMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryProperties(VkPhysicalDeviceProtectedMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oeeYsBR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_XztYSKh=json({});
    return_XztYSKh=[&]() {
    json return_asnSQeA=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_XztYSKh;}();
return result;}

    VkPhysicalDeviceProtectedMemoryProperties deserialize_VkPhysicalDeviceProtectedMemoryProperties(json &name){
        auto result=VkPhysicalDeviceProtectedMemoryProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
return result;}

    json serialize_VkDeviceQueueInfo2(VkDeviceQueueInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZKmBFiJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_DtPPWtT=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_vKRZcbM=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueIndex"]=[&]() {
    json return_vuRcKjK=json({});
    return serialize_uint32_t(name.queueIndex);}();
return result;}

    VkDeviceQueueInfo2 deserialize_VkDeviceQueueInfo2(json &name){
        auto result=VkDeviceQueueInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueIndex=deserialize_uint32_t(name["members"]["queueIndex"]);}();
return result;}

    json serialize_VkPipelineCoverageToColorStateCreateInfoNV(VkPipelineCoverageToColorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iBjQXMU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TgCGsKC=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_BRhDAol=json({});
    return serialize_VkPipelineCoverageToColorStateCreateFlagsNV(name.flags);}();
result["members"]["coverageToColorEnable"]=[&]() {
    json return_ZYRkXQt=json({});
    return_ZYRkXQt=[&]() {
    json return_faUvLNS=json({});
    return serialize_uint32_t(name.coverageToColorEnable);}();return return_ZYRkXQt;}();
result["members"]["coverageToColorLocation"]=[&]() {
    json return_vGbZntX=json({});
    return serialize_uint32_t(name.coverageToColorLocation);}();
return result;}

    VkPipelineCoverageToColorStateCreateInfoNV deserialize_VkPipelineCoverageToColorStateCreateInfoNV(json &name){
        auto result=VkPipelineCoverageToColorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_HNMuFVl;[&]() {
temp_HNMuFVl=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_HNMuFVl;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
[&]() {
result.coverageToColorEnable=deserialize_uint32_t(name["members"]["coverageToColorEnable"]);}();}();
[&]() {
result.coverageToColorLocation=deserialize_uint32_t(name["members"]["coverageToColorLocation"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(VkPhysicalDeviceSamplerFilterMinmaxProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ScoRqBE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_vbhaWxf=json({});
    return_vbhaWxf=[&]() {
    json return_HnExjmy=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_vbhaWxf;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_WyjApGL=json({});
    return_WyjApGL=[&]() {
    json return_uwNlXXh=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_WyjApGL;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxProperties deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(json &name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ScoRqBE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_vbhaWxf=json({});
    return_vbhaWxf=[&]() {
    json return_HnExjmy=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_vbhaWxf;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_WyjApGL=json({});
    return_WyjApGL=[&]() {
    json return_uwNlXXh=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_WyjApGL;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkSampleLocationEXT(VkSampleLocationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_kQhkiAp=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_WFnCLAY=json({});
    return serialize_float(name.y);}();
return result;}

    VkSampleLocationEXT deserialize_VkSampleLocationEXT(json &name){
        auto result=VkSampleLocationEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkSampleLocationsInfoEXT(VkSampleLocationsInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gCdDQsp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sampleLocationsPerPixel"]=[&]() {
    json return_ksjsZTb=json({});
    return serialize_VkSampleCountFlagBits(name.sampleLocationsPerPixel);}();
result["members"]["sampleLocationGridSize"]=[&]() {
    json return_ziPkaVL=json({});
    return serialize_VkExtent2D(name.sampleLocationGridSize);}();
result["members"]["sampleLocationsCount"]=[&]() {
    json return_wFpfoLO=json({});
    return serialize_uint32_t(name.sampleLocationsCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_WByrSkG=json({});
    
        if (name.pSampleLocations==NULL){
            return_WByrSkG["null"]=true;
            return return_WByrSkG;
        }
        
        return_WByrSkG["members"]={};
        for(int WByrSkG=0; WByrSkG < name.sampleLocationsCount; WByrSkG++){
            json temp;
            temp=[&]() {
    json return_yFGdGgo=json({});
    return serialize_VkSampleLocationEXT(name.pSampleLocations[WByrSkG]);}();
            return_WByrSkG["members"].push_back(temp);
        }
        return return_WByrSkG;
        }();
return result;}

    VkSampleLocationsInfoEXT deserialize_VkSampleLocationsInfoEXT(json &name){
        auto result=VkSampleLocationsInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.sampleLocationsPerPixel=deserialize_VkSampleCountFlagBits(name["members"]["sampleLocationsPerPixel"]);}();
[&]() {
result.sampleLocationGridSize=deserialize_VkExtent2D(name["members"]["sampleLocationGridSize"]);}();
[&]() {
result.sampleLocationsCount=deserialize_uint32_t(name["members"]["sampleLocationsCount"]);}();
[&]() {
VkSampleLocationEXT* temp_TYTxTzJ;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_TYTxTzJ=NULL;
        return;
        }
    temp_TYTxTzJ=(VkSampleLocationEXT*)malloc(result.sampleLocationsCount*sizeof(VkSampleLocationEXT));
        for (int qDanRIf=0; qDanRIf < result.sampleLocationsCount; qDanRIf++){
            [&]() {
temp_TYTxTzJ[qDanRIf]=deserialize_VkSampleLocationEXT(name["members"]["pSampleLocations"]["members"][qDanRIf]);}();;
        }
        }();result.pSampleLocations=temp_TYTxTzJ;}();
return result;}

    json serialize_VkAttachmentSampleLocationsEXT(VkAttachmentSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachmentIndex"]=[&]() {
    json return_jjjzBIl=json({});
    return serialize_uint32_t(name.attachmentIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_gDCwozv=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkAttachmentSampleLocationsEXT deserialize_VkAttachmentSampleLocationsEXT(json &name){
        auto result=VkAttachmentSampleLocationsEXT();
    
[&]() {
result.attachmentIndex=deserialize_uint32_t(name["members"]["attachmentIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkSubpassSampleLocationsEXT(VkSubpassSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassIndex"]=[&]() {
    json return_ZqnVEkU=json({});
    return serialize_uint32_t(name.subpassIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_gDCwozv=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkSubpassSampleLocationsEXT deserialize_VkSubpassSampleLocationsEXT(json &name){
        auto result=VkSubpassSampleLocationsEXT();
    
[&]() {
result.subpassIndex=deserialize_uint32_t(name["members"]["subpassIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkRenderPassSampleLocationsBeginInfoEXT(VkRenderPassSampleLocationsBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zmudOlh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentInitialSampleLocationsCount"]=[&]() {
    json return_MnRUOJy=json({});
    return serialize_uint32_t(name.attachmentInitialSampleLocationsCount);}();
result["members"]["pAttachmentInitialSampleLocations"]=[&]() {
    json return_sZHudjI=json({});
    
        if (name.pAttachmentInitialSampleLocations==NULL){
            return_sZHudjI["null"]=true;
            return return_sZHudjI;
        }
        
        return_sZHudjI["members"]={};
        for(int sZHudjI=0; sZHudjI < name.attachmentInitialSampleLocationsCount; sZHudjI++){
            json temp;
            temp=[&]() {
    json return_oBcEoSY=json({});
    return serialize_VkAttachmentSampleLocationsEXT(name.pAttachmentInitialSampleLocations[sZHudjI]);}();
            return_sZHudjI["members"].push_back(temp);
        }
        return return_sZHudjI;
        }();
result["members"]["postSubpassSampleLocationsCount"]=[&]() {
    json return_xfoCDwE=json({});
    return serialize_uint32_t(name.postSubpassSampleLocationsCount);}();
result["members"]["pPostSubpassSampleLocations"]=[&]() {
    json return_lZxpxIL=json({});
    
        if (name.pPostSubpassSampleLocations==NULL){
            return_lZxpxIL["null"]=true;
            return return_lZxpxIL;
        }
        
        return_lZxpxIL["members"]={};
        for(int lZxpxIL=0; lZxpxIL < name.postSubpassSampleLocationsCount; lZxpxIL++){
            json temp;
            temp=[&]() {
    json return_chCHjsc=json({});
    return serialize_VkSubpassSampleLocationsEXT(name.pPostSubpassSampleLocations[lZxpxIL]);}();
            return_lZxpxIL["members"].push_back(temp);
        }
        return return_lZxpxIL;
        }();
return result;}

    VkRenderPassSampleLocationsBeginInfoEXT deserialize_VkRenderPassSampleLocationsBeginInfoEXT(json &name){
        auto result=VkRenderPassSampleLocationsBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.attachmentInitialSampleLocationsCount=deserialize_uint32_t(name["members"]["attachmentInitialSampleLocationsCount"]);}();
[&]() {
VkAttachmentSampleLocationsEXT* temp_aMOfHmG;[&]() {

        if (name["members"]["pAttachmentInitialSampleLocations"].contains("null")){
        temp_aMOfHmG=NULL;
        return;
        }
    temp_aMOfHmG=(VkAttachmentSampleLocationsEXT*)malloc(result.attachmentInitialSampleLocationsCount*sizeof(VkAttachmentSampleLocationsEXT));
        for (int UyXPKem=0; UyXPKem < result.attachmentInitialSampleLocationsCount; UyXPKem++){
            [&]() {
temp_aMOfHmG[UyXPKem]=deserialize_VkAttachmentSampleLocationsEXT(name["members"]["pAttachmentInitialSampleLocations"]["members"][UyXPKem]);}();;
        }
        }();result.pAttachmentInitialSampleLocations=temp_aMOfHmG;}();
[&]() {
result.postSubpassSampleLocationsCount=deserialize_uint32_t(name["members"]["postSubpassSampleLocationsCount"]);}();
[&]() {
VkSubpassSampleLocationsEXT* temp_UxADWpQ;[&]() {

        if (name["members"]["pPostSubpassSampleLocations"].contains("null")){
        temp_UxADWpQ=NULL;
        return;
        }
    temp_UxADWpQ=(VkSubpassSampleLocationsEXT*)malloc(result.postSubpassSampleLocationsCount*sizeof(VkSubpassSampleLocationsEXT));
        for (int sXSJkYD=0; sXSJkYD < result.postSubpassSampleLocationsCount; sXSJkYD++){
            [&]() {
temp_UxADWpQ[sXSJkYD]=deserialize_VkSubpassSampleLocationsEXT(name["members"]["pPostSubpassSampleLocations"]["members"][sXSJkYD]);}();;
        }
        }();result.pPostSubpassSampleLocations=temp_UxADWpQ;}();
return result;}

    json serialize_VkPipelineSampleLocationsStateCreateInfoEXT(VkPipelineSampleLocationsStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uBHDdok=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sampleLocationsEnable"]=[&]() {
    json return_lEeelAt=json({});
    return_lEeelAt=[&]() {
    json return_PdlFBRc=json({});
    return serialize_uint32_t(name.sampleLocationsEnable);}();return return_lEeelAt;}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_gDCwozv=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkPipelineSampleLocationsStateCreateInfoEXT deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(json &name){
        auto result=VkPipelineSampleLocationsStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
[&]() {
result.sampleLocationsEnable=deserialize_uint32_t(name["members"]["sampleLocationsEnable"]);}();}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(VkPhysicalDeviceSampleLocationsPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TLkoTYO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sampleLocationSampleCounts"]=[&]() {
    json return_JloDwUh=json({});
    return serialize_VkSampleCountFlags(name.sampleLocationSampleCounts);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_NchRBhp=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
result["members"]["sampleLocationCoordinateRange"]=[&]() {
    json return_ntOhUoZ=json({});
    
        return_ntOhUoZ["members"]={};
        for(int ntOhUoZ=0; ntOhUoZ < 2; ntOhUoZ++){
            json temp;
            temp=[&]() {
    json return_LdehFGX=json({});
    return serialize_float(name.sampleLocationCoordinateRange[ntOhUoZ]);}();
            return_ntOhUoZ["members"].push_back(temp);
        }
        return return_ntOhUoZ;
        }();
result["members"]["sampleLocationSubPixelBits"]=[&]() {
    json return_dOgFXSh=json({});
    return serialize_uint32_t(name.sampleLocationSubPixelBits);}();
result["members"]["variableSampleLocations"]=[&]() {
    json return_oaqAeaS=json({});
    return_oaqAeaS=[&]() {
    json return_SRZOLlU=json({});
    return serialize_uint32_t(name.variableSampleLocations);}();return return_oaqAeaS;}();
return result;}

    VkPhysicalDeviceSampleLocationsPropertiesEXT deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceSampleLocationsPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.sampleLocationSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleLocationSampleCounts"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
[&]() {

        for (int FGJinAS=0; FGJinAS < 2; FGJinAS++){
            [&]() {
result.sampleLocationCoordinateRange[FGJinAS]=deserialize_float(name["members"]["sampleLocationCoordinateRange"]["members"][FGJinAS]);}();;
        }
        }();
[&]() {
result.sampleLocationSubPixelBits=deserialize_uint32_t(name["members"]["sampleLocationSubPixelBits"]);}();
[&]() {
[&]() {
result.variableSampleLocations=deserialize_uint32_t(name["members"]["variableSampleLocations"]);}();}();
return result;}

    json serialize_VkMultisamplePropertiesEXT(VkMultisamplePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yKiULEo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_BqoJoew=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
return result;}

    VkMultisamplePropertiesEXT deserialize_VkMultisamplePropertiesEXT(json &name){
        auto result=VkMultisamplePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfo(VkSamplerReductionModeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wlVecTn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["reductionMode"]=[&]() {
    json return_pKsnmXq=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfo deserialize_VkSamplerReductionModeCreateInfo(json &name){
        auto result=VkSamplerReductionModeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfoEXT(VkSamplerReductionModeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wlVecTn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["reductionMode"]=[&]() {
    json return_pKsnmXq=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfoEXT deserialize_VkSamplerReductionModeCreateInfoEXT(json &name){
        auto result=VkSamplerReductionModeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DrbcVNH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["advancedBlendCoherentOperations"]=[&]() {
    json return_gRotXre=json({});
    return_gRotXre=[&]() {
    json return_YLCxTzD=json({});
    return serialize_uint32_t(name.advancedBlendCoherentOperations);}();return return_gRotXre;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.advancedBlendCoherentOperations=deserialize_uint32_t(name["members"]["advancedBlendCoherentOperations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(VkPhysicalDeviceMultiDrawFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pcgufmF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UHmLNOs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["multiDraw"]=[&]() {
    json return_tcLjvQm=json({});
    return_tcLjvQm=[&]() {
    json return_NakvAPV=json({});
    return serialize_uint32_t(name.multiDraw);}();return return_tcLjvQm;}();
return result;}

    VkPhysicalDeviceMultiDrawFeaturesEXT deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceMultiDrawFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.multiDraw=deserialize_uint32_t(name["members"]["multiDraw"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pycNrPY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["advancedBlendMaxColorAttachments"]=[&]() {
    json return_VPNqLsY=json({});
    return serialize_uint32_t(name.advancedBlendMaxColorAttachments);}();
result["members"]["advancedBlendIndependentBlend"]=[&]() {
    json return_Kahfbck=json({});
    return_Kahfbck=[&]() {
    json return_JEyqnIV=json({});
    return serialize_uint32_t(name.advancedBlendIndependentBlend);}();return return_Kahfbck;}();
result["members"]["advancedBlendNonPremultipliedSrcColor"]=[&]() {
    json return_kivpkTA=json({});
    return_kivpkTA=[&]() {
    json return_NZGfaUR=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedSrcColor);}();return return_kivpkTA;}();
result["members"]["advancedBlendNonPremultipliedDstColor"]=[&]() {
    json return_KzCoxYY=json({});
    return_KzCoxYY=[&]() {
    json return_AiACKqT=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedDstColor);}();return return_KzCoxYY;}();
result["members"]["advancedBlendCorrelatedOverlap"]=[&]() {
    json return_kuuSgeD=json({});
    return_kuuSgeD=[&]() {
    json return_oIuuQGG=json({});
    return serialize_uint32_t(name.advancedBlendCorrelatedOverlap);}();return return_kuuSgeD;}();
result["members"]["advancedBlendAllOperations"]=[&]() {
    json return_QxTpolz=json({});
    return_QxTpolz=[&]() {
    json return_gWiBmAv=json({});
    return serialize_uint32_t(name.advancedBlendAllOperations);}();return return_QxTpolz;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.advancedBlendMaxColorAttachments=deserialize_uint32_t(name["members"]["advancedBlendMaxColorAttachments"]);}();
[&]() {
[&]() {
result.advancedBlendIndependentBlend=deserialize_uint32_t(name["members"]["advancedBlendIndependentBlend"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedSrcColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedSrcColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedDstColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedDstColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendCorrelatedOverlap=deserialize_uint32_t(name["members"]["advancedBlendCorrelatedOverlap"]);}();}();
[&]() {
[&]() {
result.advancedBlendAllOperations=deserialize_uint32_t(name["members"]["advancedBlendAllOperations"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkPipelineColorBlendAdvancedStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_miUupRQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_spjQKan=json({});
    return_spjQKan=[&]() {
    json return_BUhBRqk=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_spjQKan;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_ACbIjSO=json({});
    return_ACbIjSO=[&]() {
    json return_VQkOErg=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_ACbIjSO;}();
result["members"]["blendOverlap"]=[&]() {
    json return_LfRjYDq=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
return result;}

    VkPipelineColorBlendAdvancedStateCreateInfoEXT deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(json &name){
        auto result=VkPipelineColorBlendAdvancedStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeatures(VkPhysicalDeviceInlineUniformBlockFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EVkFbAq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_cfHDTdW=json({});
    return_cfHDTdW=[&]() {
    json return_KLkHZKX=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_cfHDTdW;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_WipfDvt=json({});
    return_WipfDvt=[&]() {
    json return_PIVBiud=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_WipfDvt;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeatures deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(json &name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(VkPhysicalDeviceInlineUniformBlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EVkFbAq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_cfHDTdW=json({});
    return_cfHDTdW=[&]() {
    json return_KLkHZKX=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_cfHDTdW;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_WipfDvt=json({});
    return_WipfDvt=[&]() {
    json return_PIVBiud=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_WipfDvt;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeaturesEXT deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockProperties(VkPhysicalDeviceInlineUniformBlockProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HzUlPTu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_yIAejXz=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_kVpsXcA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_vAdKsTi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_oKAnuyt=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_BDIuTKa=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockProperties deserialize_VkPhysicalDeviceInlineUniformBlockProperties(json &name){
        auto result=VkPhysicalDeviceInlineUniformBlockProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(VkPhysicalDeviceInlineUniformBlockPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HzUlPTu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_yIAejXz=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_kVpsXcA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_vAdKsTi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_oKAnuyt=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_BDIuTKa=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockPropertiesEXT deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceInlineUniformBlockPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlock(VkWriteDescriptorSetInlineUniformBlock name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TYxGZaF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dataSize"]=[&]() {
    json return_JuYRfUh=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_lpgwhfA=json({});
    
        if (name.pData==NULL){
            return_lpgwhfA["null"]=true;
            return return_lpgwhfA;
        }
        return_lpgwhfA=[&]() {
    json return_MvNQACK=json({});
    
        if (((char*)(name.pData))==NULL){
            return_MvNQACK["null"]=true;
            return return_MvNQACK;
        }
        
        return_MvNQACK["members"]={};
        for(int MvNQACK=0; MvNQACK < name.dataSize; MvNQACK++){
            json temp;
            temp=[&]() {
    json return_AVGTCjU=json({});
    return serialize_char(((char*)(name.pData))[MvNQACK]);}();
            return_MvNQACK["members"].push_back(temp);
        }
        return return_MvNQACK;
        }();return return_lpgwhfA;}();
return result;}

    VkWriteDescriptorSetInlineUniformBlock deserialize_VkWriteDescriptorSetInlineUniformBlock(json &name){
        auto result=VkWriteDescriptorSetInlineUniformBlock();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_VtDtSDR;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_VtDtSDR=NULL;
        return;
        }
    char* temp_JbceXxu;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_JbceXxu=NULL;
        return;
        }
    temp_JbceXxu=(char*)malloc(result.dataSize*sizeof(char));
        for (int ZIbgYzy=0; ZIbgYzy < result.dataSize; ZIbgYzy++){
            [&]() {
temp_JbceXxu[ZIbgYzy]=deserialize_char(name["members"]["pData"]["members"][ZIbgYzy]);}();;
        }
        }();temp_VtDtSDR=(void*)temp_JbceXxu;
}();result.pData=temp_VtDtSDR;}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlockEXT(VkWriteDescriptorSetInlineUniformBlockEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TYxGZaF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dataSize"]=[&]() {
    json return_JuYRfUh=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_lpgwhfA=json({});
    
        if (name.pData==NULL){
            return_lpgwhfA["null"]=true;
            return return_lpgwhfA;
        }
        return_lpgwhfA=[&]() {
    json return_MvNQACK=json({});
    
        if (((char*)(name.pData))==NULL){
            return_MvNQACK["null"]=true;
            return return_MvNQACK;
        }
        
        return_MvNQACK["members"]={};
        for(int MvNQACK=0; MvNQACK < name.dataSize; MvNQACK++){
            json temp;
            temp=[&]() {
    json return_AVGTCjU=json({});
    return serialize_char(((char*)(name.pData))[MvNQACK]);}();
            return_MvNQACK["members"].push_back(temp);
        }
        return return_MvNQACK;
        }();return return_lpgwhfA;}();
return result;}

    VkWriteDescriptorSetInlineUniformBlockEXT deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(json &name){
        auto result=VkWriteDescriptorSetInlineUniformBlockEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_VtDtSDR;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_VtDtSDR=NULL;
        return;
        }
    char* temp_JbceXxu;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_JbceXxu=NULL;
        return;
        }
    temp_JbceXxu=(char*)malloc(result.dataSize*sizeof(char));
        for (int ZIbgYzy=0; ZIbgYzy < result.dataSize; ZIbgYzy++){
            [&]() {
temp_JbceXxu[ZIbgYzy]=deserialize_char(name["members"]["pData"]["members"][ZIbgYzy]);}();;
        }
        }();temp_VtDtSDR=(void*)temp_JbceXxu;
}();result.pData=temp_VtDtSDR;}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(VkDescriptorPoolInlineUniformBlockCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JbfyYEy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_HpQdqNF=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfo deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(json &name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(VkDescriptorPoolInlineUniformBlockCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JbfyYEy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_HpQdqNF=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfoEXT deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(json &name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkPipelineCoverageModulationStateCreateInfoNV(VkPipelineCoverageModulationStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nDZVWAV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TgCGsKC=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_YAkSwPn=json({});
    return serialize_VkPipelineCoverageModulationStateCreateFlagsNV(name.flags);}();
result["members"]["coverageModulationMode"]=[&]() {
    json return_qppZpsv=json({});
    return serialize_VkCoverageModulationModeNV(name.coverageModulationMode);}();
result["members"]["coverageModulationTableEnable"]=[&]() {
    json return_pmXLTYd=json({});
    return_pmXLTYd=[&]() {
    json return_WgyoQan=json({});
    return serialize_uint32_t(name.coverageModulationTableEnable);}();return return_pmXLTYd;}();
result["members"]["coverageModulationTableCount"]=[&]() {
    json return_LDCHRyB=json({});
    return serialize_uint32_t(name.coverageModulationTableCount);}();
result["members"]["pCoverageModulationTable"]=[&]() {
    json return_wsUJQaG=json({});
    
        if (name.pCoverageModulationTable==NULL){
            return_wsUJQaG["null"]=true;
            return return_wsUJQaG;
        }
        
        return_wsUJQaG["members"]={};
        for(int wsUJQaG=0; wsUJQaG < name.coverageModulationTableCount; wsUJQaG++){
            json temp;
            temp=[&]() {
    json return_rBokLjs=json({});
    return serialize_float(name.pCoverageModulationTable[wsUJQaG]);}();
            return_wsUJQaG["members"].push_back(temp);
        }
        return return_wsUJQaG;
        }();
return result;}

    VkPipelineCoverageModulationStateCreateInfoNV deserialize_VkPipelineCoverageModulationStateCreateInfoNV(json &name){
        auto result=VkPipelineCoverageModulationStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_HNMuFVl;[&]() {
temp_HNMuFVl=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_HNMuFVl;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageModulationMode=deserialize_VkCoverageModulationModeNV(name["members"]["coverageModulationMode"]);}();
[&]() {
[&]() {
result.coverageModulationTableEnable=deserialize_uint32_t(name["members"]["coverageModulationTableEnable"]);}();}();
[&]() {
result.coverageModulationTableCount=deserialize_uint32_t(name["members"]["coverageModulationTableCount"]);}();
[&]() {
float* temp_tWMSyvO;[&]() {

        if (name["members"]["pCoverageModulationTable"].contains("null")){
        temp_tWMSyvO=NULL;
        return;
        }
    temp_tWMSyvO=(float*)malloc(result.coverageModulationTableCount*sizeof(float));
        for (int luHMNQZ=0; luHMNQZ < result.coverageModulationTableCount; luHMNQZ++){
            [&]() {
temp_tWMSyvO[luHMNQZ]=deserialize_float(name["members"]["pCoverageModulationTable"]["members"][luHMNQZ]);}();;
        }
        }();result.pCoverageModulationTable=temp_tWMSyvO;}();
return result;}

    json serialize_VkImageFormatListCreateInfo(VkImageFormatListCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tPRGmQh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_pyqRflC=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_VLDkwUm=json({});
    
        if (name.pViewFormats==NULL){
            return_VLDkwUm["null"]=true;
            return return_VLDkwUm;
        }
        
        return_VLDkwUm["members"]={};
        for(int VLDkwUm=0; VLDkwUm < name.viewFormatCount; VLDkwUm++){
            json temp;
            temp=[&]() {
    json return_cohgvBt=json({});
    return serialize_VkFormat(name.pViewFormats[VLDkwUm]);}();
            return_VLDkwUm["members"].push_back(temp);
        }
        return return_VLDkwUm;
        }();
return result;}

    VkImageFormatListCreateInfo deserialize_VkImageFormatListCreateInfo(json &name){
        auto result=VkImageFormatListCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_WVVyWGB;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_WVVyWGB=NULL;
        return;
        }
    temp_WVVyWGB=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int WcFrtWB=0; WcFrtWB < result.viewFormatCount; WcFrtWB++){
            [&]() {
temp_WVVyWGB[WcFrtWB]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][WcFrtWB]);}();;
        }
        }();result.pViewFormats=temp_WVVyWGB;}();
return result;}

    json serialize_VkImageFormatListCreateInfoKHR(VkImageFormatListCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tPRGmQh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_pyqRflC=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_VLDkwUm=json({});
    
        if (name.pViewFormats==NULL){
            return_VLDkwUm["null"]=true;
            return return_VLDkwUm;
        }
        
        return_VLDkwUm["members"]={};
        for(int VLDkwUm=0; VLDkwUm < name.viewFormatCount; VLDkwUm++){
            json temp;
            temp=[&]() {
    json return_cohgvBt=json({});
    return serialize_VkFormat(name.pViewFormats[VLDkwUm]);}();
            return_VLDkwUm["members"].push_back(temp);
        }
        return return_VLDkwUm;
        }();
return result;}

    VkImageFormatListCreateInfoKHR deserialize_VkImageFormatListCreateInfoKHR(json &name){
        auto result=VkImageFormatListCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_WVVyWGB;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_WVVyWGB=NULL;
        return;
        }
    temp_WVVyWGB=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int WcFrtWB=0; WcFrtWB < result.viewFormatCount; WcFrtWB++){
            [&]() {
temp_WVVyWGB[WcFrtWB]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][WcFrtWB]);}();;
        }
        }();result.pViewFormats=temp_WVVyWGB;}();
return result;}

    json serialize_VkValidationCacheCreateInfoEXT(VkValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MyvuoSL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_CIsIPfb=json({});
    return serialize_VkValidationCacheCreateFlagsEXT(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_hjTnRLf=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_AjoSJta=json({});
    
        if (name.pInitialData==NULL){
            return_AjoSJta["null"]=true;
            return return_AjoSJta;
        }
        return_AjoSJta=[&]() {
    json return_xiabTrl=json({});
    
        if (((char*)(name.pInitialData))==NULL){
            return_xiabTrl["null"]=true;
            return return_xiabTrl;
        }
        
        return_xiabTrl["members"]={};
        for(int xiabTrl=0; xiabTrl < name.initialDataSize; xiabTrl++){
            json temp;
            temp=[&]() {
    json return_SFVIitp=json({});
    return serialize_char(((char*)(name.pInitialData))[xiabTrl]);}();
            return_xiabTrl["members"].push_back(temp);
        }
        return return_xiabTrl;
        }();return return_AjoSJta;}();
return result;}

    VkValidationCacheCreateInfoEXT deserialize_VkValidationCacheCreateInfoEXT(json &name){
        auto result=VkValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkValidationCacheCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_kqOyJGi;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_kqOyJGi=NULL;
        return;
        }
    char* temp_AtvagKP;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_AtvagKP=NULL;
        return;
        }
    temp_AtvagKP=(char*)malloc(result.initialDataSize*sizeof(char));
        for (int zSgGjnz=0; zSgGjnz < result.initialDataSize; zSgGjnz++){
            [&]() {
temp_AtvagKP[zSgGjnz]=deserialize_char(name["members"]["pInitialData"]["members"][zSgGjnz]);}();;
        }
        }();temp_kqOyJGi=(void*)temp_AtvagKP;
}();result.pInitialData=temp_kqOyJGi;}();
return result;}

    json serialize_VkShaderModuleValidationCacheCreateInfoEXT(VkShaderModuleValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ePODxLV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["validationCache"]=[&]() {
    json return_KsyEspW=json({});
    return serialize_VkValidationCacheEXT(name.validationCache);}();
return result;}

    VkShaderModuleValidationCacheCreateInfoEXT deserialize_VkShaderModuleValidationCacheCreateInfoEXT(json &name){
        auto result=VkShaderModuleValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.validationCache=deserialize_VkValidationCacheEXT(name["members"]["validationCache"]);}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3Properties(VkPhysicalDeviceMaintenance3Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gGqKcHo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_rVuszBf=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_lUluAbj=json({});
    return_lUluAbj=[&]() {
    json return_YNenBoZ=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_lUluAbj;}();
return result;}

    VkPhysicalDeviceMaintenance3Properties deserialize_VkPhysicalDeviceMaintenance3Properties(json &name){
        auto result=VkPhysicalDeviceMaintenance3Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(VkPhysicalDeviceMaintenance3PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gGqKcHo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_rVuszBf=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_lUluAbj=json({});
    return_lUluAbj=[&]() {
    json return_YNenBoZ=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_lUluAbj;}();
return result;}

    VkPhysicalDeviceMaintenance3PropertiesKHR deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(json &name){
        auto result=VkPhysicalDeviceMaintenance3PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Features(VkPhysicalDeviceMaintenance4Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LNOFXRH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maintenance4"]=[&]() {
    json return_wosqpRH=json({});
    return_wosqpRH=[&]() {
    json return_uJFuaYQ=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_wosqpRH;}();
return result;}

    VkPhysicalDeviceMaintenance4Features deserialize_VkPhysicalDeviceMaintenance4Features(json &name){
        auto result=VkPhysicalDeviceMaintenance4Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(VkPhysicalDeviceMaintenance4FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LNOFXRH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maintenance4"]=[&]() {
    json return_wosqpRH=json({});
    return_wosqpRH=[&]() {
    json return_uJFuaYQ=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_wosqpRH;}();
return result;}

    VkPhysicalDeviceMaintenance4FeaturesKHR deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(json &name){
        auto result=VkPhysicalDeviceMaintenance4FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Properties(VkPhysicalDeviceMaintenance4Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WSoSKea=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxBufferSize"]=[&]() {
    json return_JBSERWS=json({});
    return_JBSERWS=[&]() {
    json return_bRaYrvl=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_JBSERWS;}();
return result;}

    VkPhysicalDeviceMaintenance4Properties deserialize_VkPhysicalDeviceMaintenance4Properties(json &name){
        auto result=VkPhysicalDeviceMaintenance4Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(VkPhysicalDeviceMaintenance4PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WSoSKea=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxBufferSize"]=[&]() {
    json return_JBSERWS=json({});
    return_JBSERWS=[&]() {
    json return_bRaYrvl=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_JBSERWS;}();
return result;}

    VkPhysicalDeviceMaintenance4PropertiesKHR deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(json &name){
        auto result=VkPhysicalDeviceMaintenance4PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(VkPhysicalDeviceMaintenance5FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qMNOiPZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maintenance5"]=[&]() {
    json return_SRwOEhF=json({});
    return_SRwOEhF=[&]() {
    json return_jEolktZ=json({});
    return serialize_uint32_t(name.maintenance5);}();return return_SRwOEhF;}();
return result;}

    VkPhysicalDeviceMaintenance5FeaturesKHR deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(json &name){
        auto result=VkPhysicalDeviceMaintenance5FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.maintenance5=deserialize_uint32_t(name["members"]["maintenance5"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(VkPhysicalDeviceMaintenance5PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qwFADyU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]=[&]() {
    json return_rpLWhbk=json({});
    return_rpLWhbk=[&]() {
    json return_coCCJBS=json({});
    return serialize_uint32_t(name.earlyFragmentMultisampleCoverageAfterSampleCounting);}();return return_rpLWhbk;}();
result["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]=[&]() {
    json return_yjyJgjy=json({});
    return_yjyJgjy=[&]() {
    json return_zEvZHAF=json({});
    return serialize_uint32_t(name.earlyFragmentSampleMaskTestBeforeSampleCounting);}();return return_yjyJgjy;}();
result["members"]["depthStencilSwizzleOneSupport"]=[&]() {
    json return_CbaGKbz=json({});
    return_CbaGKbz=[&]() {
    json return_ErOrWMX=json({});
    return serialize_uint32_t(name.depthStencilSwizzleOneSupport);}();return return_CbaGKbz;}();
result["members"]["polygonModePointSize"]=[&]() {
    json return_DFtGEHK=json({});
    return_DFtGEHK=[&]() {
    json return_MMhybki=json({});
    return serialize_uint32_t(name.polygonModePointSize);}();return return_DFtGEHK;}();
result["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]=[&]() {
    json return_jtCCDyy=json({});
    return_jtCCDyy=[&]() {
    json return_mhWwgff=json({});
    return serialize_uint32_t(name.nonStrictSinglePixelWideLinesUseParallelogram);}();return return_jtCCDyy;}();
result["members"]["nonStrictWideLinesUseParallelogram"]=[&]() {
    json return_JOkMNwO=json({});
    return_JOkMNwO=[&]() {
    json return_nGGSHsB=json({});
    return serialize_uint32_t(name.nonStrictWideLinesUseParallelogram);}();return return_JOkMNwO;}();
return result;}

    VkPhysicalDeviceMaintenance5PropertiesKHR deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(json &name){
        auto result=VkPhysicalDeviceMaintenance5PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.earlyFragmentMultisampleCoverageAfterSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]);}();}();
[&]() {
[&]() {
result.earlyFragmentSampleMaskTestBeforeSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]);}();}();
[&]() {
[&]() {
result.depthStencilSwizzleOneSupport=deserialize_uint32_t(name["members"]["depthStencilSwizzleOneSupport"]);}();}();
[&]() {
[&]() {
result.polygonModePointSize=deserialize_uint32_t(name["members"]["polygonModePointSize"]);}();}();
[&]() {
[&]() {
result.nonStrictSinglePixelWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]);}();}();
[&]() {
[&]() {
result.nonStrictWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictWideLinesUseParallelogram"]);}();}();
return result;}

    json serialize_VkRenderingAreaInfoKHR(VkRenderingAreaInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VSVJPwg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["viewMask"]=[&]() {
    json return_DcMPGJc=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HrPhXdI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_eDQlBIF=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_eDQlBIF["null"]=true;
            return return_eDQlBIF;
        }
        
        return_eDQlBIF["members"]={};
        for(int eDQlBIF=0; eDQlBIF < name.colorAttachmentCount; eDQlBIF++){
            json temp;
            temp=[&]() {
    json return_SqnnrVh=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[eDQlBIF]);}();
            return_eDQlBIF["members"].push_back(temp);
        }
        return return_eDQlBIF;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_iyWBfkf=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_pXECKtz=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkRenderingAreaInfoKHR deserialize_VkRenderingAreaInfoKHR(json &name){
        auto result=VkRenderingAreaInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_zCgQows;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_zCgQows=NULL;
        return;
        }
    temp_zCgQows=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int gLBJtAT=0; gLBJtAT < result.colorAttachmentCount; gLBJtAT++){
            [&]() {
temp_zCgQows[gLBJtAT]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][gLBJtAT]);}();;
        }
        }();result.pColorAttachmentFormats=temp_zCgQows;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutSupport(VkDescriptorSetLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KfVQFMW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supported"]=[&]() {
    json return_rEDpfAq=json({});
    return_rEDpfAq=[&]() {
    json return_XFmTwCI=json({});
    return serialize_uint32_t(name.supported);}();return return_rEDpfAq;}();
return result;}

    VkDescriptorSetLayoutSupport deserialize_VkDescriptorSetLayoutSupport(json &name){
        auto result=VkDescriptorSetLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkDescriptorSetLayoutSupportKHR(VkDescriptorSetLayoutSupportKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KfVQFMW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supported"]=[&]() {
    json return_rEDpfAq=json({});
    return_rEDpfAq=[&]() {
    json return_XFmTwCI=json({});
    return serialize_uint32_t(name.supported);}();return return_rEDpfAq;}();
return result;}

    VkDescriptorSetLayoutSupportKHR deserialize_VkDescriptorSetLayoutSupportKHR(json &name){
        auto result=VkDescriptorSetLayoutSupportKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParametersFeatures(VkPhysicalDeviceShaderDrawParametersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cnxjMdg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_uCXwiGC=json({});
    return_uCXwiGC=[&]() {
    json return_TTNHWCS=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_uCXwiGC;}();
return result;}

    VkPhysicalDeviceShaderDrawParametersFeatures deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(json &name){
        auto result=VkPhysicalDeviceShaderDrawParametersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParameterFeatures(VkPhysicalDeviceShaderDrawParameterFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cnxjMdg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_uCXwiGC=json({});
    return_uCXwiGC=[&]() {
    json return_TTNHWCS=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_uCXwiGC;}();
return result;}

    VkPhysicalDeviceShaderDrawParameterFeatures deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(json &name){
        auto result=VkPhysicalDeviceShaderDrawParameterFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8Features(VkPhysicalDeviceShaderFloat16Int8Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cwdmlGN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderFloat16"]=[&]() {
    json return_KNhKiAn=json({});
    return_KNhKiAn=[&]() {
    json return_OnGgCTI=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_KNhKiAn;}();
result["members"]["shaderInt8"]=[&]() {
    json return_pjKtnGs=json({});
    return_pjKtnGs=[&]() {
    json return_qPVBbNZ=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_pjKtnGs;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8Features deserialize_VkPhysicalDeviceShaderFloat16Int8Features(json &name){
        auto result=VkPhysicalDeviceShaderFloat16Int8Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cwdmlGN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderFloat16"]=[&]() {
    json return_KNhKiAn=json({});
    return_KNhKiAn=[&]() {
    json return_OnGgCTI=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_KNhKiAn;}();
result["members"]["shaderInt8"]=[&]() {
    json return_pjKtnGs=json({});
    return_pjKtnGs=[&]() {
    json return_qPVBbNZ=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_pjKtnGs;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(json &name){
        auto result=VkPhysicalDeviceShaderFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(VkPhysicalDeviceFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cwdmlGN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderFloat16"]=[&]() {
    json return_KNhKiAn=json({});
    return_KNhKiAn=[&]() {
    json return_OnGgCTI=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_KNhKiAn;}();
result["members"]["shaderInt8"]=[&]() {
    json return_pjKtnGs=json({});
    return_pjKtnGs=[&]() {
    json return_qPVBbNZ=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_pjKtnGs;}();
return result;}

    VkPhysicalDeviceFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(json &name){
        auto result=VkPhysicalDeviceFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsProperties(VkPhysicalDeviceFloatControlsProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fZtuNSO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_xHGBjki=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_pUeUpQh=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_KvgjvfC=json({});
    return_KvgjvfC=[&]() {
    json return_AtQJtkc=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_KvgjvfC;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_SCIaJTV=json({});
    return_SCIaJTV=[&]() {
    json return_gkbvlYq=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_SCIaJTV;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_GSrFECX=json({});
    return_GSrFECX=[&]() {
    json return_bfpRjAN=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_GSrFECX;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_wzhQwdP=json({});
    return_wzhQwdP=[&]() {
    json return_wXRySBH=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_wzhQwdP;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_TXqiAou=json({});
    return_TXqiAou=[&]() {
    json return_awuPhPl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_TXqiAou;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_gEaOAUk=json({});
    return_gEaOAUk=[&]() {
    json return_MFpdPNu=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_gEaOAUk;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_eOzzXWM=json({});
    return_eOzzXWM=[&]() {
    json return_mMTOLOt=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_eOzzXWM;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_DOOaIkg=json({});
    return_DOOaIkg=[&]() {
    json return_rddCspD=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_DOOaIkg;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_NJaOBmK=json({});
    return_NJaOBmK=[&]() {
    json return_wgkWbjR=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_NJaOBmK;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_wnbjLWY=json({});
    return_wnbjLWY=[&]() {
    json return_WHXigcs=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_wnbjLWY;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_HUNXwIO=json({});
    return_HUNXwIO=[&]() {
    json return_KYpkPpC=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_HUNXwIO;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_ovkoOnI=json({});
    return_ovkoOnI=[&]() {
    json return_tWRawsC=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_ovkoOnI;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_iZNtVhA=json({});
    return_iZNtVhA=[&]() {
    json return_GCOsOyB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_iZNtVhA;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_tazbAXR=json({});
    return_tazbAXR=[&]() {
    json return_DohmFUw=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_tazbAXR;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_bzUzuqe=json({});
    return_bzUzuqe=[&]() {
    json return_ndImMKJ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_bzUzuqe;}();
return result;}

    VkPhysicalDeviceFloatControlsProperties deserialize_VkPhysicalDeviceFloatControlsProperties(json &name){
        auto result=VkPhysicalDeviceFloatControlsProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(VkPhysicalDeviceFloatControlsPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fZtuNSO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_xHGBjki=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_pUeUpQh=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_KvgjvfC=json({});
    return_KvgjvfC=[&]() {
    json return_AtQJtkc=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_KvgjvfC;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_SCIaJTV=json({});
    return_SCIaJTV=[&]() {
    json return_gkbvlYq=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_SCIaJTV;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_GSrFECX=json({});
    return_GSrFECX=[&]() {
    json return_bfpRjAN=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_GSrFECX;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_wzhQwdP=json({});
    return_wzhQwdP=[&]() {
    json return_wXRySBH=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_wzhQwdP;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_TXqiAou=json({});
    return_TXqiAou=[&]() {
    json return_awuPhPl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_TXqiAou;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_gEaOAUk=json({});
    return_gEaOAUk=[&]() {
    json return_MFpdPNu=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_gEaOAUk;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_eOzzXWM=json({});
    return_eOzzXWM=[&]() {
    json return_mMTOLOt=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_eOzzXWM;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_DOOaIkg=json({});
    return_DOOaIkg=[&]() {
    json return_rddCspD=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_DOOaIkg;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_NJaOBmK=json({});
    return_NJaOBmK=[&]() {
    json return_wgkWbjR=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_NJaOBmK;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_wnbjLWY=json({});
    return_wnbjLWY=[&]() {
    json return_WHXigcs=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_wnbjLWY;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_HUNXwIO=json({});
    return_HUNXwIO=[&]() {
    json return_KYpkPpC=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_HUNXwIO;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_ovkoOnI=json({});
    return_ovkoOnI=[&]() {
    json return_tWRawsC=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_ovkoOnI;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_iZNtVhA=json({});
    return_iZNtVhA=[&]() {
    json return_GCOsOyB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_iZNtVhA;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_tazbAXR=json({});
    return_tazbAXR=[&]() {
    json return_DohmFUw=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_tazbAXR;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_bzUzuqe=json({});
    return_bzUzuqe=[&]() {
    json return_ndImMKJ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_bzUzuqe;}();
return result;}

    VkPhysicalDeviceFloatControlsPropertiesKHR deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceFloatControlsPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeatures(VkPhysicalDeviceHostQueryResetFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tmClRgC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["hostQueryReset"]=[&]() {
    json return_jUhgCGJ=json({});
    return_jUhgCGJ=[&]() {
    json return_sMSmIOx=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_jUhgCGJ;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeatures deserialize_VkPhysicalDeviceHostQueryResetFeatures(json &name){
        auto result=VkPhysicalDeviceHostQueryResetFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(VkPhysicalDeviceHostQueryResetFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tmClRgC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["hostQueryReset"]=[&]() {
    json return_jUhgCGJ=json({});
    return_jUhgCGJ=[&]() {
    json return_sMSmIOx=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_jUhgCGJ;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeaturesEXT deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceHostQueryResetFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkShaderResourceUsageAMD(VkShaderResourceUsageAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["numUsedVgprs"]=[&]() {
    json return_AHBrwiv=json({});
    return serialize_uint32_t(name.numUsedVgprs);}();
result["members"]["numUsedSgprs"]=[&]() {
    json return_LfhYvyd=json({});
    return serialize_uint32_t(name.numUsedSgprs);}();
result["members"]["ldsSizePerLocalWorkGroup"]=[&]() {
    json return_DlkKscM=json({});
    return serialize_uint32_t(name.ldsSizePerLocalWorkGroup);}();
result["members"]["ldsUsageSizeInBytes"]=[&]() {
    json return_SrqjlSH=json({});
    return serialize_size_t(name.ldsUsageSizeInBytes);}();
result["members"]["scratchMemUsageInBytes"]=[&]() {
    json return_eYFeXmj=json({});
    return serialize_size_t(name.scratchMemUsageInBytes);}();
return result;}

    VkShaderResourceUsageAMD deserialize_VkShaderResourceUsageAMD(json &name){
        auto result=VkShaderResourceUsageAMD();
    
[&]() {
result.numUsedVgprs=deserialize_uint32_t(name["members"]["numUsedVgprs"]);}();
[&]() {
result.numUsedSgprs=deserialize_uint32_t(name["members"]["numUsedSgprs"]);}();
[&]() {
result.ldsSizePerLocalWorkGroup=deserialize_uint32_t(name["members"]["ldsSizePerLocalWorkGroup"]);}();
[&]() {
result.ldsUsageSizeInBytes=deserialize_size_t(name["members"]["ldsUsageSizeInBytes"]);}();
[&]() {
result.scratchMemUsageInBytes=deserialize_size_t(name["members"]["scratchMemUsageInBytes"]);}();
return result;}

    json serialize_VkShaderStatisticsInfoAMD(VkShaderStatisticsInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shaderStageMask"]=[&]() {
    json return_HfVjHRo=json({});
    return serialize_VkShaderStageFlags(name.shaderStageMask);}();
result["members"]["resourceUsage"]=[&]() {
    json return_vFIszJj=json({});
    return serialize_VkShaderResourceUsageAMD(name.resourceUsage);}();
result["members"]["numPhysicalVgprs"]=[&]() {
    json return_apPPrkV=json({});
    return serialize_uint32_t(name.numPhysicalVgprs);}();
result["members"]["numPhysicalSgprs"]=[&]() {
    json return_YaVlTyx=json({});
    return serialize_uint32_t(name.numPhysicalSgprs);}();
result["members"]["numAvailableVgprs"]=[&]() {
    json return_uSSNpLY=json({});
    return serialize_uint32_t(name.numAvailableVgprs);}();
result["members"]["numAvailableSgprs"]=[&]() {
    json return_gwLYQfO=json({});
    return serialize_uint32_t(name.numAvailableSgprs);}();
result["members"]["computeWorkGroupSize"]=[&]() {
    json return_pAlvjJd=json({});
    
        return_pAlvjJd["members"]={};
        for(int pAlvjJd=0; pAlvjJd < 3; pAlvjJd++){
            json temp;
            temp=[&]() {
    json return_GDxRFDq=json({});
    return serialize_uint32_t(name.computeWorkGroupSize[pAlvjJd]);}();
            return_pAlvjJd["members"].push_back(temp);
        }
        return return_pAlvjJd;
        }();
return result;}

    VkShaderStatisticsInfoAMD deserialize_VkShaderStatisticsInfoAMD(json &name){
        auto result=VkShaderStatisticsInfoAMD();
    
[&]() {
result.shaderStageMask=deserialize_VkShaderStageFlags(name["members"]["shaderStageMask"]);}();
[&]() {
result.resourceUsage=deserialize_VkShaderResourceUsageAMD(name["members"]["resourceUsage"]);}();
[&]() {
result.numPhysicalVgprs=deserialize_uint32_t(name["members"]["numPhysicalVgprs"]);}();
[&]() {
result.numPhysicalSgprs=deserialize_uint32_t(name["members"]["numPhysicalSgprs"]);}();
[&]() {
result.numAvailableVgprs=deserialize_uint32_t(name["members"]["numAvailableVgprs"]);}();
[&]() {
result.numAvailableSgprs=deserialize_uint32_t(name["members"]["numAvailableSgprs"]);}();
[&]() {

        for (int rUtYERd=0; rUtYERd < 3; rUtYERd++){
            [&]() {
result.computeWorkGroupSize[rUtYERd]=deserialize_uint32_t(name["members"]["computeWorkGroupSize"]["members"][rUtYERd]);}();;
        }
        }();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(VkDeviceQueueGlobalPriorityCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bHRZrGC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["globalPriority"]=[&]() {
    json return_tZWDWja=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoKHR deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(json &name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(VkDeviceQueueGlobalPriorityCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bHRZrGC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["globalPriority"]=[&]() {
    json return_tZWDWja=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoEXT deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(json &name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kzSidWe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_hKiWLlX=json({});
    return_hKiWLlX=[&]() {
    json return_CApyzsw=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_hKiWLlX;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kzSidWe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_hKiWLlX=json({});
    return_hKiWLlX=[&]() {
    json return_CApyzsw=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_hKiWLlX;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(VkQueueFamilyGlobalPriorityPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lsydkzq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["priorityCount"]=[&]() {
    json return_fYjsvZR=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_ISYkxlP=json({});
    
        return_ISYkxlP["members"]={};
        for(int ISYkxlP=0; ISYkxlP < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; ISYkxlP++){
            json temp;
            temp=[&]() {
    json return_xPRZDCw=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[ISYkxlP]);}();
            return_ISYkxlP["members"].push_back(temp);
        }
        return return_ISYkxlP;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesKHR deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(json &name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int VciYcak=0; VciYcak < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; VciYcak++){
            [&]() {
result.priorities[VciYcak]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][VciYcak]);}();;
        }
        }();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(VkQueueFamilyGlobalPriorityPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lsydkzq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["priorityCount"]=[&]() {
    json return_fYjsvZR=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_ISYkxlP=json({});
    
        return_ISYkxlP["members"]={};
        for(int ISYkxlP=0; ISYkxlP < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; ISYkxlP++){
            json temp;
            temp=[&]() {
    json return_xPRZDCw=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[ISYkxlP]);}();
            return_ISYkxlP["members"].push_back(temp);
        }
        return return_ISYkxlP;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesEXT deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(json &name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int VciYcak=0; VciYcak < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; VciYcak++){
            [&]() {
result.priorities[VciYcak]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][VciYcak]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsObjectNameInfoEXT(VkDebugUtilsObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xvsBpDg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["objectType"]=[&]() {
    json return_GJDvHOl=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_aZCcUAB=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["pObjectName"]=[&]() {
    json return_oRlPIZV=json({});
    
        if (name.pObjectName==NULL){
            return_oRlPIZV["null"]=true;
            return return_oRlPIZV;
        }
        
        return_oRlPIZV["members"]={};
        for(int oRlPIZV=0; oRlPIZV < strlen(name.pObjectName)+1; oRlPIZV++){
            json temp;
            temp=[&]() {
    json return_iElDBGD=json({});
    return serialize_char(name.pObjectName[oRlPIZV]);}();
            return_oRlPIZV["members"].push_back(temp);
        }
        return return_oRlPIZV;
        }();
return result;}

    VkDebugUtilsObjectNameInfoEXT deserialize_VkDebugUtilsObjectNameInfoEXT(json &name){
        auto result=VkDebugUtilsObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
char* temp_ZLAKAPC;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_ZLAKAPC=NULL;
        return;
        }
    temp_ZLAKAPC=(char*)malloc(name["members"]["pObjectName"]["members"].size()*sizeof(char));
        for (int OOrzaOQ=0; OOrzaOQ < name["members"]["pObjectName"]["members"].size(); OOrzaOQ++){
            [&]() {
temp_ZLAKAPC[OOrzaOQ]=deserialize_char(name["members"]["pObjectName"]["members"][OOrzaOQ]);}();;
        }
        }();result.pObjectName=temp_ZLAKAPC;}();
return result;}

    json serialize_VkDebugUtilsObjectTagInfoEXT(VkDebugUtilsObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sUvFIkF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["objectType"]=[&]() {
    json return_CuFghVM=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_wKvffop=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["tagName"]=[&]() {
    json return_ejDdwqY=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_RKaiVKi=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_jJtvycU=json({});
    
        if (name.pTag==NULL){
            return_jJtvycU["null"]=true;
            return return_jJtvycU;
        }
        return_jJtvycU=[&]() {
    json return_RhTvDSW=json({});
    
        if (((char*)(name.pTag))==NULL){
            return_RhTvDSW["null"]=true;
            return return_RhTvDSW;
        }
        
        return_RhTvDSW["members"]={};
        for(int RhTvDSW=0; RhTvDSW < name.tagSize; RhTvDSW++){
            json temp;
            temp=[&]() {
    json return_zllJNom=json({});
    return serialize_char(((char*)(name.pTag))[RhTvDSW]);}();
            return_RhTvDSW["members"].push_back(temp);
        }
        return return_RhTvDSW;
        }();return return_jJtvycU;}();
return result;}

    VkDebugUtilsObjectTagInfoEXT deserialize_VkDebugUtilsObjectTagInfoEXT(json &name){
        auto result=VkDebugUtilsObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_uYQPzMX;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_uYQPzMX=NULL;
        return;
        }
    char* temp_WHCawWF;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_WHCawWF=NULL;
        return;
        }
    temp_WHCawWF=(char*)malloc(result.tagSize*sizeof(char));
        for (int eBhXWFE=0; eBhXWFE < result.tagSize; eBhXWFE++){
            [&]() {
temp_WHCawWF[eBhXWFE]=deserialize_char(name["members"]["pTag"]["members"][eBhXWFE]);}();;
        }
        }();temp_uYQPzMX=(void*)temp_WHCawWF;
}();result.pTag=temp_uYQPzMX;}();
return result;}

    json serialize_VkDebugUtilsLabelEXT(VkDebugUtilsLabelEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wEPmVuF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pLabelName"]=[&]() {
    json return_KXErnIw=json({});
    
        if (name.pLabelName==NULL){
            return_KXErnIw["null"]=true;
            return return_KXErnIw;
        }
        
        return_KXErnIw["members"]={};
        for(int KXErnIw=0; KXErnIw < strlen(name.pLabelName)+1; KXErnIw++){
            json temp;
            temp=[&]() {
    json return_JAZAxdg=json({});
    return serialize_char(name.pLabelName[KXErnIw]);}();
            return_KXErnIw["members"].push_back(temp);
        }
        return return_KXErnIw;
        }();
result["members"]["color"]=[&]() {
    json return_bolTnZD=json({});
    
        return_bolTnZD["members"]={};
        for(int bolTnZD=0; bolTnZD < 4; bolTnZD++){
            json temp;
            temp=[&]() {
    json return_bdUlWNk=json({});
    return serialize_float(name.color[bolTnZD]);}();
            return_bolTnZD["members"].push_back(temp);
        }
        return return_bolTnZD;
        }();
return result;}

    VkDebugUtilsLabelEXT deserialize_VkDebugUtilsLabelEXT(json &name){
        auto result=VkDebugUtilsLabelEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
char* temp_Sxgtmpy;[&]() {

        if (name["members"]["pLabelName"].contains("null")){
        temp_Sxgtmpy=NULL;
        return;
        }
    temp_Sxgtmpy=(char*)malloc(name["members"]["pLabelName"]["members"].size()*sizeof(char));
        for (int tppstXM=0; tppstXM < name["members"]["pLabelName"]["members"].size(); tppstXM++){
            [&]() {
temp_Sxgtmpy[tppstXM]=deserialize_char(name["members"]["pLabelName"]["members"][tppstXM]);}();;
        }
        }();result.pLabelName=temp_Sxgtmpy;}();
[&]() {

        for (int RSzIwzK=0; RSzIwzK < 4; RSzIwzK++){
            [&]() {
result.color[RSzIwzK]=deserialize_float(name["members"]["color"]["members"][RSzIwzK]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsMessengerCreateInfoEXT(VkDebugUtilsMessengerCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WmXWajl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hPKeCRS=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_UNsHTwl=json({});
    return serialize_VkDebugUtilsMessengerCreateFlagsEXT(name.flags);}();
result["members"]["messageSeverity"]=[&]() {
    json return_qBkSISO=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagsEXT(name.messageSeverity);}();
result["members"]["messageType"]=[&]() {
    json return_yNCDLaq=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(name.messageType);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_DGkpMoD=json({});
    return serialize_PFN_vkDebugUtilsMessengerCallbackEXT(name.pfnUserCallback);}();
result["members"]["pUserData"]=[&]() {
    json return_VBZeaML=json({});
    
        if (name.pUserData==NULL){
            return_VBZeaML["null"]=true;
            return return_VBZeaML;
        }
        return_VBZeaML=[&]() {
    json return_ohuopFB=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_ohuopFB["null"]=true;
            return return_ohuopFB;
        }
        
        return_ohuopFB["members"]={};
        for(int ohuopFB=0; ohuopFB < strlen(((char*)(name.pUserData)))+1; ohuopFB++){
            json temp;
            temp=[&]() {
    json return_erMmOAa=json({});
    return serialize_char(((char*)(name.pUserData))[ohuopFB]);}();
            return_ohuopFB["members"].push_back(temp);
        }
        return return_ohuopFB;
        }();return return_VBZeaML;}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t pNext_id;
uintptr_t VkDebugUtilsMessengerCreateFlagsEXT_id;
uintptr_t VkDebugUtilsMessageSeverityFlagsEXT_id;
uintptr_t VkDebugUtilsMessageTypeFlagsEXT_id;
uintptr_t PFN_vkDebugUtilsMessengerCallbackEXT_id;
void* pUserData;
} VkDebugUtilsMessengerCreateInfoEXT_struct;

    VkDebugUtilsMessengerCreateInfoEXT deserialize_VkDebugUtilsMessengerCreateInfoEXT(json &name){
        auto result=VkDebugUtilsMessengerCreateInfoEXT();
    
auto _struct = new VkDebugUtilsMessengerCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_dVgsNPh;[&]() {
temp_dVgsNPh=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_dVgsNPh;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagsEXT(name["members"]["messageSeverity"]);}();
[&]() {
result.messageType=deserialize_VkDebugUtilsMessageTypeFlagsEXT(name["members"]["messageType"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp_FQUoneY;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp_FQUoneY=NULL;
        return;
        }
    temp_FQUoneY=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int yWPdbTt=0; yWPdbTt < name["members"]["pUserData"]["members"].size(); yWPdbTt++){
            [&]() {
temp_FQUoneY[yWPdbTt]=deserialize_char(name["members"]["pUserData"]["members"][yWPdbTt]);}();;
        }
        }();result.pUserData=(void*)temp_FQUoneY;
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDebugUtilsMessengerCallbackDataEXT(VkDebugUtilsMessengerCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NAKXMqW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HnciAlv=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_VZMvJpO=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name.flags);}();
result["members"]["pMessageIdName"]=[&]() {
    json return_NucVzap=json({});
    
        if (name.pMessageIdName==NULL){
            return_NucVzap["null"]=true;
            return return_NucVzap;
        }
        
        return_NucVzap["members"]={};
        for(int NucVzap=0; NucVzap < strlen(name.pMessageIdName)+1; NucVzap++){
            json temp;
            temp=[&]() {
    json return_HSFYKQb=json({});
    return serialize_char(name.pMessageIdName[NucVzap]);}();
            return_NucVzap["members"].push_back(temp);
        }
        return return_NucVzap;
        }();
result["members"]["messageIdNumber"]=[&]() {
    json return_kgBXqSo=json({});
    return serialize_int32_t(name.messageIdNumber);}();
result["members"]["pMessage"]=[&]() {
    json return_BgcltWQ=json({});
    
        if (name.pMessage==NULL){
            return_BgcltWQ["null"]=true;
            return return_BgcltWQ;
        }
        
        return_BgcltWQ["members"]={};
        for(int BgcltWQ=0; BgcltWQ < strlen(name.pMessage)+1; BgcltWQ++){
            json temp;
            temp=[&]() {
    json return_cFfJaAs=json({});
    return serialize_char(name.pMessage[BgcltWQ]);}();
            return_BgcltWQ["members"].push_back(temp);
        }
        return return_BgcltWQ;
        }();
result["members"]["queueLabelCount"]=[&]() {
    json return_PpuOnOh=json({});
    return serialize_uint32_t(name.queueLabelCount);}();
result["members"]["pQueueLabels"]=[&]() {
    json return_bQjLlsA=json({});
    
        if (name.pQueueLabels==NULL){
            return_bQjLlsA["null"]=true;
            return return_bQjLlsA;
        }
        
        return_bQjLlsA["members"]={};
        for(int bQjLlsA=0; bQjLlsA < name.queueLabelCount; bQjLlsA++){
            json temp;
            temp=[&]() {
    json return_WIgwwxW=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pQueueLabels[bQjLlsA]);}();
            return_bQjLlsA["members"].push_back(temp);
        }
        return return_bQjLlsA;
        }();
result["members"]["cmdBufLabelCount"]=[&]() {
    json return_cteZCjX=json({});
    return serialize_uint32_t(name.cmdBufLabelCount);}();
result["members"]["pCmdBufLabels"]=[&]() {
    json return_sdHNYsq=json({});
    
        if (name.pCmdBufLabels==NULL){
            return_sdHNYsq["null"]=true;
            return return_sdHNYsq;
        }
        
        return_sdHNYsq["members"]={};
        for(int sdHNYsq=0; sdHNYsq < name.cmdBufLabelCount; sdHNYsq++){
            json temp;
            temp=[&]() {
    json return_nZJDtpb=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pCmdBufLabels[sdHNYsq]);}();
            return_sdHNYsq["members"].push_back(temp);
        }
        return return_sdHNYsq;
        }();
result["members"]["objectCount"]=[&]() {
    json return_LDfqnNE=json({});
    return serialize_uint32_t(name.objectCount);}();
result["members"]["pObjects"]=[&]() {
    json return_uTqvLzy=json({});
    
        if (name.pObjects==NULL){
            return_uTqvLzy["null"]=true;
            return return_uTqvLzy;
        }
        
        return_uTqvLzy["members"]={};
        for(int uTqvLzy=0; uTqvLzy < name.objectCount; uTqvLzy++){
            json temp;
            temp=[&]() {
    json return_jVpVyzI=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(name.pObjects[uTqvLzy]);}();
            return_uTqvLzy["members"].push_back(temp);
        }
        return return_uTqvLzy;
        }();
return result;}

    VkDebugUtilsMessengerCallbackDataEXT deserialize_VkDebugUtilsMessengerCallbackDataEXT(json &name){
        auto result=VkDebugUtilsMessengerCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_vXGbmYO;[&]() {
temp_vXGbmYO=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_vXGbmYO;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name["members"]["flags"]);}();
[&]() {
char* temp_gMAnZjx;[&]() {

        if (name["members"]["pMessageIdName"].contains("null")){
        temp_gMAnZjx=NULL;
        return;
        }
    temp_gMAnZjx=(char*)malloc(name["members"]["pMessageIdName"]["members"].size()*sizeof(char));
        for (int cZljvHZ=0; cZljvHZ < name["members"]["pMessageIdName"]["members"].size(); cZljvHZ++){
            [&]() {
temp_gMAnZjx[cZljvHZ]=deserialize_char(name["members"]["pMessageIdName"]["members"][cZljvHZ]);}();;
        }
        }();result.pMessageIdName=temp_gMAnZjx;}();
[&]() {
result.messageIdNumber=deserialize_int32_t(name["members"]["messageIdNumber"]);}();
[&]() {
char* temp_NJrOqvI;[&]() {

        if (name["members"]["pMessage"].contains("null")){
        temp_NJrOqvI=NULL;
        return;
        }
    temp_NJrOqvI=(char*)malloc(name["members"]["pMessage"]["members"].size()*sizeof(char));
        for (int gYMlwOX=0; gYMlwOX < name["members"]["pMessage"]["members"].size(); gYMlwOX++){
            [&]() {
temp_NJrOqvI[gYMlwOX]=deserialize_char(name["members"]["pMessage"]["members"][gYMlwOX]);}();;
        }
        }();result.pMessage=temp_NJrOqvI;}();
[&]() {
result.queueLabelCount=deserialize_uint32_t(name["members"]["queueLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_PJkaHOO;[&]() {

        if (name["members"]["pQueueLabels"].contains("null")){
        temp_PJkaHOO=NULL;
        return;
        }
    temp_PJkaHOO=(VkDebugUtilsLabelEXT*)malloc(result.queueLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int YDiTOQR=0; YDiTOQR < result.queueLabelCount; YDiTOQR++){
            [&]() {
temp_PJkaHOO[YDiTOQR]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pQueueLabels"]["members"][YDiTOQR]);}();;
        }
        }();result.pQueueLabels=temp_PJkaHOO;}();
[&]() {
result.cmdBufLabelCount=deserialize_uint32_t(name["members"]["cmdBufLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_DGanQUg;[&]() {

        if (name["members"]["pCmdBufLabels"].contains("null")){
        temp_DGanQUg=NULL;
        return;
        }
    temp_DGanQUg=(VkDebugUtilsLabelEXT*)malloc(result.cmdBufLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int LtrqJFU=0; LtrqJFU < result.cmdBufLabelCount; LtrqJFU++){
            [&]() {
temp_DGanQUg[LtrqJFU]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pCmdBufLabels"]["members"][LtrqJFU]);}();;
        }
        }();result.pCmdBufLabels=temp_DGanQUg;}();
[&]() {
result.objectCount=deserialize_uint32_t(name["members"]["objectCount"]);}();
[&]() {
VkDebugUtilsObjectNameInfoEXT* temp_FGBOoHe;[&]() {

        if (name["members"]["pObjects"].contains("null")){
        temp_FGBOoHe=NULL;
        return;
        }
    temp_FGBOoHe=(VkDebugUtilsObjectNameInfoEXT*)malloc(result.objectCount*sizeof(VkDebugUtilsObjectNameInfoEXT));
        for (int uGHJKve=0; uGHJKve < result.objectCount; uGHJKve++){
            [&]() {
temp_FGBOoHe[uGHJKve]=deserialize_VkDebugUtilsObjectNameInfoEXT(name["members"]["pObjects"]["members"][uGHJKve]);}();;
        }
        }();result.pObjects=temp_FGBOoHe;}();
return result;}

    json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fWBbztV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceMemoryReport"]=[&]() {
    json return_bauLEPT=json({});
    return_bauLEPT=[&]() {
    json return_LAVLBwi=json({});
    return serialize_uint32_t(name.deviceMemoryReport);}();return return_bauLEPT;}();
return result;}

    VkPhysicalDeviceDeviceMemoryReportFeaturesEXT deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDeviceMemoryReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.deviceMemoryReport=deserialize_uint32_t(name["members"]["deviceMemoryReport"]);}();}();
return result;}

    json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(VkDeviceDeviceMemoryReportCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AAjdijG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_LPakIjk=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_aKqbmGz=json({});
    return serialize_PFN_vkDeviceMemoryReportCallbackEXT(name.pfnUserCallback);}();
result["members"]["pUserData"]=[&]() {
    json return_qsebVQg=json({});
    
        if (name.pUserData==NULL){
            return_qsebVQg["null"]=true;
            return return_qsebVQg;
        }
        return_qsebVQg=[&]() {
    json return_JeBkOMM=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_JeBkOMM["null"]=true;
            return return_JeBkOMM;
        }
        
        return_JeBkOMM["members"]={};
        for(int JeBkOMM=0; JeBkOMM < strlen(((char*)(name.pUserData)))+1; JeBkOMM++){
            json temp;
            temp=[&]() {
    json return_JiVlCWU=json({});
    return serialize_char(((char*)(name.pUserData))[JeBkOMM]);}();
            return_JeBkOMM["members"].push_back(temp);
        }
        return return_JeBkOMM;
        }();return return_qsebVQg;}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t pNext_id;
uintptr_t VkDeviceMemoryReportFlagsEXT_id;
uintptr_t PFN_vkDeviceMemoryReportCallbackEXT_id;
void* pUserData;
} VkDeviceDeviceMemoryReportCreateInfoEXT_struct;

    VkDeviceDeviceMemoryReportCreateInfoEXT deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(json &name){
        auto result=VkDeviceDeviceMemoryReportCreateInfoEXT();
    
auto _struct = new VkDeviceDeviceMemoryReportCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDeviceMemoryReportCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDeviceMemoryReportCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp_uoqWxcq;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp_uoqWxcq=NULL;
        return;
        }
    temp_uoqWxcq=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int tACWYqZ=0; tACWYqZ < name["members"]["pUserData"]["members"].size(); tACWYqZ++){
            [&]() {
temp_uoqWxcq[tACWYqZ]=deserialize_char(name["members"]["pUserData"]["members"][tACWYqZ]);}();;
        }
        }();result.pUserData=(void*)temp_uoqWxcq;
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceMemoryReportCallbackDataEXT(VkDeviceMemoryReportCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LZRVHDf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_jNXRluM=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["type"]=[&]() {
    json return_QYliIQk=json({});
    return serialize_VkDeviceMemoryReportEventTypeEXT(name.type);}();
result["members"]["memoryObjectId"]=[&]() {
    json return_IUOVuYa=json({});
    return serialize_uint64_t(name.memoryObjectId);}();
result["members"]["size"]=[&]() {
    json return_ECyGopw=json({});
    return_ECyGopw=[&]() {
    json return_vIRIvtu=json({});
    return serialize_uint64_t(name.size);}();return return_ECyGopw;}();
result["members"]["objectType"]=[&]() {
    json return_jHlIJkX=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_sWcnqCF=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["heapIndex"]=[&]() {
    json return_IuaOXuL=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkDeviceMemoryReportCallbackDataEXT deserialize_VkDeviceMemoryReportCallbackDataEXT(json &name){
        auto result=VkDeviceMemoryReportCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.type=deserialize_VkDeviceMemoryReportEventTypeEXT(name["members"]["type"]);}();
[&]() {
result.memoryObjectId=deserialize_uint64_t(name["members"]["memoryObjectId"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkImportMemoryHostPointerInfoEXT(VkImportMemoryHostPointerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OgPYgeF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["handleType"]=[&]() {
    json return_cIXUqaP=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["pHostPointer"]=[&]() {
    json return_ajdFMTy=json({});
    
        if (name.pHostPointer==NULL){
            return_ajdFMTy["null"]=true;
            return return_ajdFMTy;
        }
        return_ajdFMTy=[&]() {
    json return_EzSZYHB=json({});
    
        if (((char*)(name.pHostPointer))==NULL){
            return_EzSZYHB["null"]=true;
            return return_EzSZYHB;
        }
        
        return_EzSZYHB["members"]={};
        for(int EzSZYHB=0; EzSZYHB < strlen(((char*)(name.pHostPointer)))+1; EzSZYHB++){
            json temp;
            temp=[&]() {
    json return_JZetRqW=json({});
    return serialize_char(((char*)(name.pHostPointer))[EzSZYHB]);}();
            return_EzSZYHB["members"].push_back(temp);
        }
        return return_EzSZYHB;
        }();return return_ajdFMTy;}();
return result;}

    VkImportMemoryHostPointerInfoEXT deserialize_VkImportMemoryHostPointerInfoEXT(json &name){
        auto result=VkImportMemoryHostPointerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        return;
        }
    char* temp_tcKcPde;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_tcKcPde=NULL;
        return;
        }
    temp_tcKcPde=(char*)malloc(name["members"]["pHostPointer"]["members"].size()*sizeof(char));
        for (int omdhbYu=0; omdhbYu < name["members"]["pHostPointer"]["members"].size(); omdhbYu++){
            [&]() {
temp_tcKcPde[omdhbYu]=deserialize_char(name["members"]["pHostPointer"]["members"][omdhbYu]);}();;
        }
        }();result.pHostPointer=(void*)temp_tcKcPde;
}();
return result;}

    json serialize_VkMemoryHostPointerPropertiesEXT(VkMemoryHostPointerPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IZlXxuD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_nnqgEZI=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryHostPointerPropertiesEXT deserialize_VkMemoryHostPointerPropertiesEXT(json &name){
        auto result=VkMemoryHostPointerPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkPhysicalDeviceExternalMemoryHostPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UPXeJDI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minImportedHostPointerAlignment"]=[&]() {
    json return_KbFRROe=json({});
    return_KbFRROe=[&]() {
    json return_nGIqadp=json({});
    return serialize_uint64_t(name.minImportedHostPointerAlignment);}();return return_KbFRROe;}();
return result;}

    VkPhysicalDeviceExternalMemoryHostPropertiesEXT deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceExternalMemoryHostPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.minImportedHostPointerAlignment=deserialize_uint64_t(name["members"]["minImportedHostPointerAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkPhysicalDeviceConservativeRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fbOkPAy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["primitiveOverestimationSize"]=[&]() {
    json return_jaxkBXC=json({});
    return serialize_float(name.primitiveOverestimationSize);}();
result["members"]["maxExtraPrimitiveOverestimationSize"]=[&]() {
    json return_DbDAzWb=json({});
    return serialize_float(name.maxExtraPrimitiveOverestimationSize);}();
result["members"]["extraPrimitiveOverestimationSizeGranularity"]=[&]() {
    json return_biaYnTC=json({});
    return serialize_float(name.extraPrimitiveOverestimationSizeGranularity);}();
result["members"]["primitiveUnderestimation"]=[&]() {
    json return_yHEXcGg=json({});
    return_yHEXcGg=[&]() {
    json return_yFfAFTn=json({});
    return serialize_uint32_t(name.primitiveUnderestimation);}();return return_yHEXcGg;}();
result["members"]["conservativePointAndLineRasterization"]=[&]() {
    json return_DtoxhcY=json({});
    return_DtoxhcY=[&]() {
    json return_bpjtbjb=json({});
    return serialize_uint32_t(name.conservativePointAndLineRasterization);}();return return_DtoxhcY;}();
result["members"]["degenerateTrianglesRasterized"]=[&]() {
    json return_pZkaOzp=json({});
    return_pZkaOzp=[&]() {
    json return_rExKDMp=json({});
    return serialize_uint32_t(name.degenerateTrianglesRasterized);}();return return_pZkaOzp;}();
result["members"]["degenerateLinesRasterized"]=[&]() {
    json return_dXHOygG=json({});
    return_dXHOygG=[&]() {
    json return_riXOBdi=json({});
    return serialize_uint32_t(name.degenerateLinesRasterized);}();return return_dXHOygG;}();
result["members"]["fullyCoveredFragmentShaderInputVariable"]=[&]() {
    json return_wnZMWVx=json({});
    return_wnZMWVx=[&]() {
    json return_DDpzPXa=json({});
    return serialize_uint32_t(name.fullyCoveredFragmentShaderInputVariable);}();return return_wnZMWVx;}();
result["members"]["conservativeRasterizationPostDepthCoverage"]=[&]() {
    json return_LMnHXfP=json({});
    return_LMnHXfP=[&]() {
    json return_qVqsCut=json({});
    return serialize_uint32_t(name.conservativeRasterizationPostDepthCoverage);}();return return_LMnHXfP;}();
return result;}

    VkPhysicalDeviceConservativeRasterizationPropertiesEXT deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.primitiveOverestimationSize=deserialize_float(name["members"]["primitiveOverestimationSize"]);}();
[&]() {
result.maxExtraPrimitiveOverestimationSize=deserialize_float(name["members"]["maxExtraPrimitiveOverestimationSize"]);}();
[&]() {
result.extraPrimitiveOverestimationSizeGranularity=deserialize_float(name["members"]["extraPrimitiveOverestimationSizeGranularity"]);}();
[&]() {
[&]() {
result.primitiveUnderestimation=deserialize_uint32_t(name["members"]["primitiveUnderestimation"]);}();}();
[&]() {
[&]() {
result.conservativePointAndLineRasterization=deserialize_uint32_t(name["members"]["conservativePointAndLineRasterization"]);}();}();
[&]() {
[&]() {
result.degenerateTrianglesRasterized=deserialize_uint32_t(name["members"]["degenerateTrianglesRasterized"]);}();}();
[&]() {
[&]() {
result.degenerateLinesRasterized=deserialize_uint32_t(name["members"]["degenerateLinesRasterized"]);}();}();
[&]() {
[&]() {
result.fullyCoveredFragmentShaderInputVariable=deserialize_uint32_t(name["members"]["fullyCoveredFragmentShaderInputVariable"]);}();}();
[&]() {
[&]() {
result.conservativeRasterizationPostDepthCoverage=deserialize_uint32_t(name["members"]["conservativeRasterizationPostDepthCoverage"]);}();}();
return result;}

    json serialize_VkCalibratedTimestampInfoEXT(VkCalibratedTimestampInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OlbhxbL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["timeDomain"]=[&]() {
    json return_vOYYsfN=json({});
    return serialize_VkTimeDomainEXT(name.timeDomain);}();
return result;}

    VkCalibratedTimestampInfoEXT deserialize_VkCalibratedTimestampInfoEXT(json &name){
        auto result=VkCalibratedTimestampInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.timeDomain=deserialize_VkTimeDomainEXT(name["members"]["timeDomain"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesAMD(VkPhysicalDeviceShaderCorePropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NXSCZbh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderEngineCount"]=[&]() {
    json return_FOTyReK=json({});
    return serialize_uint32_t(name.shaderEngineCount);}();
result["members"]["shaderArraysPerEngineCount"]=[&]() {
    json return_pcDGkhP=json({});
    return serialize_uint32_t(name.shaderArraysPerEngineCount);}();
result["members"]["computeUnitsPerShaderArray"]=[&]() {
    json return_qzjuyBm=json({});
    return serialize_uint32_t(name.computeUnitsPerShaderArray);}();
result["members"]["simdPerComputeUnit"]=[&]() {
    json return_BnzQvyo=json({});
    return serialize_uint32_t(name.simdPerComputeUnit);}();
result["members"]["wavefrontsPerSimd"]=[&]() {
    json return_lDDaQIR=json({});
    return serialize_uint32_t(name.wavefrontsPerSimd);}();
result["members"]["wavefrontSize"]=[&]() {
    json return_wTbllrl=json({});
    return serialize_uint32_t(name.wavefrontSize);}();
result["members"]["sgprsPerSimd"]=[&]() {
    json return_MugyCCt=json({});
    return serialize_uint32_t(name.sgprsPerSimd);}();
result["members"]["minSgprAllocation"]=[&]() {
    json return_blRyyND=json({});
    return serialize_uint32_t(name.minSgprAllocation);}();
result["members"]["maxSgprAllocation"]=[&]() {
    json return_EDLdBOm=json({});
    return serialize_uint32_t(name.maxSgprAllocation);}();
result["members"]["sgprAllocationGranularity"]=[&]() {
    json return_lJmUKsd=json({});
    return serialize_uint32_t(name.sgprAllocationGranularity);}();
result["members"]["vgprsPerSimd"]=[&]() {
    json return_iJVkQFm=json({});
    return serialize_uint32_t(name.vgprsPerSimd);}();
result["members"]["minVgprAllocation"]=[&]() {
    json return_svqyEtu=json({});
    return serialize_uint32_t(name.minVgprAllocation);}();
result["members"]["maxVgprAllocation"]=[&]() {
    json return_XRrMzmr=json({});
    return serialize_uint32_t(name.maxVgprAllocation);}();
result["members"]["vgprAllocationGranularity"]=[&]() {
    json return_FhXwJpi=json({});
    return serialize_uint32_t(name.vgprAllocationGranularity);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesAMD deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(json &name){
        auto result=VkPhysicalDeviceShaderCorePropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.shaderEngineCount=deserialize_uint32_t(name["members"]["shaderEngineCount"]);}();
[&]() {
result.shaderArraysPerEngineCount=deserialize_uint32_t(name["members"]["shaderArraysPerEngineCount"]);}();
[&]() {
result.computeUnitsPerShaderArray=deserialize_uint32_t(name["members"]["computeUnitsPerShaderArray"]);}();
[&]() {
result.simdPerComputeUnit=deserialize_uint32_t(name["members"]["simdPerComputeUnit"]);}();
[&]() {
result.wavefrontsPerSimd=deserialize_uint32_t(name["members"]["wavefrontsPerSimd"]);}();
[&]() {
result.wavefrontSize=deserialize_uint32_t(name["members"]["wavefrontSize"]);}();
[&]() {
result.sgprsPerSimd=deserialize_uint32_t(name["members"]["sgprsPerSimd"]);}();
[&]() {
result.minSgprAllocation=deserialize_uint32_t(name["members"]["minSgprAllocation"]);}();
[&]() {
result.maxSgprAllocation=deserialize_uint32_t(name["members"]["maxSgprAllocation"]);}();
[&]() {
result.sgprAllocationGranularity=deserialize_uint32_t(name["members"]["sgprAllocationGranularity"]);}();
[&]() {
result.vgprsPerSimd=deserialize_uint32_t(name["members"]["vgprsPerSimd"]);}();
[&]() {
result.minVgprAllocation=deserialize_uint32_t(name["members"]["minVgprAllocation"]);}();
[&]() {
result.maxVgprAllocation=deserialize_uint32_t(name["members"]["maxVgprAllocation"]);}();
[&]() {
result.vgprAllocationGranularity=deserialize_uint32_t(name["members"]["vgprAllocationGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreProperties2AMD(VkPhysicalDeviceShaderCoreProperties2AMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lFXcweg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HEhtEkb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderCoreFeatures"]=[&]() {
    json return_zuPhONN=json({});
    return serialize_VkShaderCorePropertiesFlagsAMD(name.shaderCoreFeatures);}();
result["members"]["activeComputeUnitCount"]=[&]() {
    json return_ZUYbtfe=json({});
    return serialize_uint32_t(name.activeComputeUnitCount);}();
return result;}

    VkPhysicalDeviceShaderCoreProperties2AMD deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(json &name){
        auto result=VkPhysicalDeviceShaderCoreProperties2AMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.shaderCoreFeatures=deserialize_VkShaderCorePropertiesFlagsAMD(name["members"]["shaderCoreFeatures"]);}();
[&]() {
result.activeComputeUnitCount=deserialize_uint32_t(name["members"]["activeComputeUnitCount"]);}();
return result;}

    json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(VkPipelineRasterizationConservativeStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FcRXvRG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TgCGsKC=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_PrzfiCm=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name.flags);}();
result["members"]["conservativeRasterizationMode"]=[&]() {
    json return_QJXaEhP=json({});
    return serialize_VkConservativeRasterizationModeEXT(name.conservativeRasterizationMode);}();
result["members"]["extraPrimitiveOverestimationSize"]=[&]() {
    json return_WKMOeBp=json({});
    return serialize_float(name.extraPrimitiveOverestimationSize);}();
return result;}

    VkPipelineRasterizationConservativeStateCreateInfoEXT deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(json &name){
        auto result=VkPipelineRasterizationConservativeStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_HNMuFVl;[&]() {
temp_HNMuFVl=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_HNMuFVl;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.conservativeRasterizationMode=deserialize_VkConservativeRasterizationModeEXT(name["members"]["conservativeRasterizationMode"]);}();
[&]() {
result.extraPrimitiveOverestimationSize=deserialize_float(name["members"]["extraPrimitiveOverestimationSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeatures(VkPhysicalDeviceDescriptorIndexingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VgiiVJi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_olhPHmq=json({});
    return_olhPHmq=[&]() {
    json return_SaiaKsB=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_olhPHmq;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_CarZNNW=json({});
    return_CarZNNW=[&]() {
    json return_lqWtFCX=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_CarZNNW;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_LYwdevz=json({});
    return_LYwdevz=[&]() {
    json return_LbGemRC=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_LYwdevz;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_gpawYEe=json({});
    return_gpawYEe=[&]() {
    json return_gUyDYGF=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_gpawYEe;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_HdDMlcJ=json({});
    return_HdDMlcJ=[&]() {
    json return_ccikUGj=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_HdDMlcJ;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_TCJNtDh=json({});
    return_TCJNtDh=[&]() {
    json return_GfIgWSe=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_TCJNtDh;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_pwCaeTu=json({});
    return_pwCaeTu=[&]() {
    json return_AHEvTQg=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_pwCaeTu;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_aTsfeve=json({});
    return_aTsfeve=[&]() {
    json return_gwnWHhh=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_aTsfeve;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_WRinqTa=json({});
    return_WRinqTa=[&]() {
    json return_BWpDEPD=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_WRinqTa;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_vehbNEH=json({});
    return_vehbNEH=[&]() {
    json return_yqPrYCh=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_vehbNEH;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_BLGZWEG=json({});
    return_BLGZWEG=[&]() {
    json return_nZLuWOl=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_BLGZWEG;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_rvKmQgi=json({});
    return_rvKmQgi=[&]() {
    json return_UoqoJhT=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_rvKmQgi;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_tUNdgIc=json({});
    return_tUNdgIc=[&]() {
    json return_zvgvGzM=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_tUNdgIc;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_vEiYAKj=json({});
    return_vEiYAKj=[&]() {
    json return_SNVFkbi=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_vEiYAKj;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_MwJTNre=json({});
    return_MwJTNre=[&]() {
    json return_RYmQdwR=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_MwJTNre;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_ZEdzHNP=json({});
    return_ZEdzHNP=[&]() {
    json return_gwKYPGl=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_ZEdzHNP;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_rPnghKg=json({});
    return_rPnghKg=[&]() {
    json return_CQJXwqU=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_rPnghKg;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_RDfwXJG=json({});
    return_RDfwXJG=[&]() {
    json return_zfNENAt=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_RDfwXJG;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_iIRRqvm=json({});
    return_iIRRqvm=[&]() {
    json return_tMbfigo=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_iIRRqvm;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_MFLbMHU=json({});
    return_MFLbMHU=[&]() {
    json return_CtRmisL=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_MFLbMHU;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeatures deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(json &name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(VkPhysicalDeviceDescriptorIndexingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VgiiVJi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_olhPHmq=json({});
    return_olhPHmq=[&]() {
    json return_SaiaKsB=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_olhPHmq;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_CarZNNW=json({});
    return_CarZNNW=[&]() {
    json return_lqWtFCX=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_CarZNNW;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_LYwdevz=json({});
    return_LYwdevz=[&]() {
    json return_LbGemRC=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_LYwdevz;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_gpawYEe=json({});
    return_gpawYEe=[&]() {
    json return_gUyDYGF=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_gpawYEe;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_HdDMlcJ=json({});
    return_HdDMlcJ=[&]() {
    json return_ccikUGj=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_HdDMlcJ;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_TCJNtDh=json({});
    return_TCJNtDh=[&]() {
    json return_GfIgWSe=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_TCJNtDh;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_pwCaeTu=json({});
    return_pwCaeTu=[&]() {
    json return_AHEvTQg=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_pwCaeTu;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_aTsfeve=json({});
    return_aTsfeve=[&]() {
    json return_gwnWHhh=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_aTsfeve;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_WRinqTa=json({});
    return_WRinqTa=[&]() {
    json return_BWpDEPD=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_WRinqTa;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_vehbNEH=json({});
    return_vehbNEH=[&]() {
    json return_yqPrYCh=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_vehbNEH;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_BLGZWEG=json({});
    return_BLGZWEG=[&]() {
    json return_nZLuWOl=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_BLGZWEG;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_rvKmQgi=json({});
    return_rvKmQgi=[&]() {
    json return_UoqoJhT=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_rvKmQgi;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_tUNdgIc=json({});
    return_tUNdgIc=[&]() {
    json return_zvgvGzM=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_tUNdgIc;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_vEiYAKj=json({});
    return_vEiYAKj=[&]() {
    json return_SNVFkbi=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_vEiYAKj;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_MwJTNre=json({});
    return_MwJTNre=[&]() {
    json return_RYmQdwR=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_MwJTNre;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_ZEdzHNP=json({});
    return_ZEdzHNP=[&]() {
    json return_gwKYPGl=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_ZEdzHNP;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_rPnghKg=json({});
    return_rPnghKg=[&]() {
    json return_CQJXwqU=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_rPnghKg;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_RDfwXJG=json({});
    return_RDfwXJG=[&]() {
    json return_zfNENAt=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_RDfwXJG;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_iIRRqvm=json({});
    return_iIRRqvm=[&]() {
    json return_tMbfigo=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_iIRRqvm;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_MFLbMHU=json({});
    return_MFLbMHU=[&]() {
    json return_CtRmisL=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_MFLbMHU;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeaturesEXT deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingProperties(VkPhysicalDeviceDescriptorIndexingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AnubBnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_DCTwjXY=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_jHHUeCg=json({});
    return_jHHUeCg=[&]() {
    json return_avFJLHi=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_jHHUeCg;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_cemNsrw=json({});
    return_cemNsrw=[&]() {
    json return_oaGFcNi=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_cemNsrw;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_MxLjsAz=json({});
    return_MxLjsAz=[&]() {
    json return_siDGfjt=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_MxLjsAz;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_MYjARve=json({});
    return_MYjARve=[&]() {
    json return_vohqpEw=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_MYjARve;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_gIbkEMA=json({});
    return_gIbkEMA=[&]() {
    json return_uuMzPnl=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_gIbkEMA;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_AvaZCrn=json({});
    return_AvaZCrn=[&]() {
    json return_ZhdrhJe=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_AvaZCrn;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_VqrqfIG=json({});
    return_VqrqfIG=[&]() {
    json return_yqnghob=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_VqrqfIG;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_gVHDLtk=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_MUDdgUc=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_QrBjlak=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_Aolyfvt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_xtdyEkP=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_qrncOgh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_VUssZyK=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_HdvicbW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_gCgRFqP=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_RepeXfZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_RgVJzYx=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_MkSRFTx=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_XVCwVaw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_VxlSNru=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_jQqONGV=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingProperties deserialize_VkPhysicalDeviceDescriptorIndexingProperties(json &name){
        auto result=VkPhysicalDeviceDescriptorIndexingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(VkPhysicalDeviceDescriptorIndexingPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AnubBnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_DCTwjXY=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_jHHUeCg=json({});
    return_jHHUeCg=[&]() {
    json return_avFJLHi=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_jHHUeCg;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_cemNsrw=json({});
    return_cemNsrw=[&]() {
    json return_oaGFcNi=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_cemNsrw;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_MxLjsAz=json({});
    return_MxLjsAz=[&]() {
    json return_siDGfjt=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_MxLjsAz;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_MYjARve=json({});
    return_MYjARve=[&]() {
    json return_vohqpEw=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_MYjARve;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_gIbkEMA=json({});
    return_gIbkEMA=[&]() {
    json return_uuMzPnl=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_gIbkEMA;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_AvaZCrn=json({});
    return_AvaZCrn=[&]() {
    json return_ZhdrhJe=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_AvaZCrn;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_VqrqfIG=json({});
    return_VqrqfIG=[&]() {
    json return_yqnghob=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_VqrqfIG;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_gVHDLtk=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_MUDdgUc=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_QrBjlak=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_Aolyfvt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_xtdyEkP=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_qrncOgh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_VUssZyK=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_HdvicbW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_gCgRFqP=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_RepeXfZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_RgVJzYx=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_MkSRFTx=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_XVCwVaw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_VxlSNru=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_jQqONGV=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingPropertiesEXT deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceDescriptorIndexingPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(VkDescriptorSetLayoutBindingFlagsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SWMLpHc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HnciAlv=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bindingCount"]=[&]() {
    json return_WlAfyvY=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_wCnAKrG=json({});
    
        if (name.pBindingFlags==NULL){
            return_wCnAKrG["null"]=true;
            return return_wCnAKrG;
        }
        
        return_wCnAKrG["members"]={};
        for(int wCnAKrG=0; wCnAKrG < name.bindingCount; wCnAKrG++){
            json temp;
            temp=[&]() {
    json return_HVgIqDs=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[wCnAKrG]);}();
            return_wCnAKrG["members"].push_back(temp);
        }
        return return_wCnAKrG;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfo deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(json &name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_vXGbmYO;[&]() {
temp_vXGbmYO=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_vXGbmYO;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_nYLyaZc;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_nYLyaZc=NULL;
        return;
        }
    temp_nYLyaZc=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int qTvLhUT=0; qTvLhUT < result.bindingCount; qTvLhUT++){
            [&]() {
temp_nYLyaZc[qTvLhUT]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][qTvLhUT]);}();;
        }
        }();result.pBindingFlags=temp_nYLyaZc;}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SWMLpHc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HnciAlv=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bindingCount"]=[&]() {
    json return_WlAfyvY=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_wCnAKrG=json({});
    
        if (name.pBindingFlags==NULL){
            return_wCnAKrG["null"]=true;
            return return_wCnAKrG;
        }
        
        return_wCnAKrG["members"]={};
        for(int wCnAKrG=0; wCnAKrG < name.bindingCount; wCnAKrG++){
            json temp;
            temp=[&]() {
    json return_HVgIqDs=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[wCnAKrG]);}();
            return_wCnAKrG["members"].push_back(temp);
        }
        return return_wCnAKrG;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfoEXT deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(json &name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_vXGbmYO;[&]() {
temp_vXGbmYO=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_vXGbmYO;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_nYLyaZc;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_nYLyaZc=NULL;
        return;
        }
    temp_nYLyaZc=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int qTvLhUT=0; qTvLhUT < result.bindingCount; qTvLhUT++){
            [&]() {
temp_nYLyaZc[qTvLhUT]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][qTvLhUT]);}();;
        }
        }();result.pBindingFlags=temp_nYLyaZc;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(VkDescriptorSetVariableDescriptorCountAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HjDsVEv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_BSDRnKX=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_GSLyeKL=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_GSLyeKL["null"]=true;
            return return_GSLyeKL;
        }
        
        return_GSLyeKL["members"]={};
        for(int GSLyeKL=0; GSLyeKL < name.descriptorSetCount; GSLyeKL++){
            json temp;
            temp=[&]() {
    json return_lwPogLU=json({});
    return serialize_uint32_t(name.pDescriptorCounts[GSLyeKL]);}();
            return_GSLyeKL["members"].push_back(temp);
        }
        return return_GSLyeKL;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfo deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(json &name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_yCAKanp;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_yCAKanp=NULL;
        return;
        }
    temp_yCAKanp=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int YLvyhkx=0; YLvyhkx < result.descriptorSetCount; YLvyhkx++){
            [&]() {
temp_yCAKanp[YLvyhkx]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][YLvyhkx]);}();;
        }
        }();result.pDescriptorCounts=temp_yCAKanp;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HjDsVEv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_BSDRnKX=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_GSLyeKL=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_GSLyeKL["null"]=true;
            return return_GSLyeKL;
        }
        
        return_GSLyeKL["members"]={};
        for(int GSLyeKL=0; GSLyeKL < name.descriptorSetCount; GSLyeKL++){
            json temp;
            temp=[&]() {
    json return_lwPogLU=json({});
    return serialize_uint32_t(name.pDescriptorCounts[GSLyeKL]);}();
            return_GSLyeKL["members"].push_back(temp);
        }
        return return_GSLyeKL;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfoEXT deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(json &name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_yCAKanp;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_yCAKanp=NULL;
        return;
        }
    temp_yCAKanp=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int YLvyhkx=0; YLvyhkx < result.descriptorSetCount; YLvyhkx++){
            [&]() {
temp_yCAKanp[YLvyhkx]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][YLvyhkx]);}();;
        }
        }();result.pDescriptorCounts=temp_yCAKanp;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(VkDescriptorSetVariableDescriptorCountLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ByHMPwC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_eZyOYGa=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupport deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(json &name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ByHMPwC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_eZyOYGa=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupportEXT deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(json &name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupportEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkAttachmentDescription2(VkAttachmentDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZqwnQBZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_PtwCfAW=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_iwPIVeD=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_vWcqaWf=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_oYczsxV=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_ybaWxas=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_YcSYYHa=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_rULtqkG=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_mDVARdr=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_bNojCXU=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2 deserialize_VkAttachmentDescription2(json &name){
        auto result=VkAttachmentDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescription2KHR(VkAttachmentDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZqwnQBZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_PtwCfAW=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_iwPIVeD=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_vWcqaWf=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_oYczsxV=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_ybaWxas=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_YcSYYHa=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_rULtqkG=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_mDVARdr=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_bNojCXU=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2KHR deserialize_VkAttachmentDescription2KHR(json &name){
        auto result=VkAttachmentDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference2(VkAttachmentReference2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KrQeWqW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachment"]=[&]() {
    json return_dILHxIa=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_IUQNJFe=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_VcpGpNU=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2 deserialize_VkAttachmentReference2(json &name){
        auto result=VkAttachmentReference2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkAttachmentReference2KHR(VkAttachmentReference2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KrQeWqW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachment"]=[&]() {
    json return_dILHxIa=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_IUQNJFe=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_VcpGpNU=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2KHR deserialize_VkAttachmentReference2KHR(json &name){
        auto result=VkAttachmentReference2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkSubpassDescription2(VkSubpassDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mTWVaga=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eGMnHSi=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_JXrhXLw=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_bjgshcU=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_gVyVgvJ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_UTQZDXb=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_DPDnhhs=json({});
    
        if (name.pInputAttachments==NULL){
            return_DPDnhhs["null"]=true;
            return return_DPDnhhs;
        }
        
        return_DPDnhhs["members"]={};
        for(int DPDnhhs=0; DPDnhhs < name.inputAttachmentCount; DPDnhhs++){
            json temp;
            temp=[&]() {
    json return_HpgUutL=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[DPDnhhs]);}();
            return_DPDnhhs["members"].push_back(temp);
        }
        return return_DPDnhhs;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_CmlJmmD=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_hDRzWQw=json({});
    
        if (name.pColorAttachments==NULL){
            return_hDRzWQw["null"]=true;
            return return_hDRzWQw;
        }
        
        return_hDRzWQw["members"]={};
        for(int hDRzWQw=0; hDRzWQw < name.colorAttachmentCount; hDRzWQw++){
            json temp;
            temp=[&]() {
    json return_EgqFGPG=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[hDRzWQw]);}();
            return_hDRzWQw["members"].push_back(temp);
        }
        return return_hDRzWQw;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_SzgoJSh=json({});
    
        if (name.pResolveAttachments==NULL){
            return_SzgoJSh["null"]=true;
            return return_SzgoJSh;
        }
        
        return_SzgoJSh["members"]={};
        for(int SzgoJSh=0; SzgoJSh < name.colorAttachmentCount; SzgoJSh++){
            json temp;
            temp=[&]() {
    json return_PhAMRGs=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[SzgoJSh]);}();
            return_SzgoJSh["members"].push_back(temp);
        }
        return return_SzgoJSh;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_JmiBIjc=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_JmiBIjc["null"]=true;
            return return_JmiBIjc;
        }
        return_JmiBIjc=[&]() {
    json return_wPqAwAV=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_JmiBIjc;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_KDBcfKe=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_eIsPujO=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_eIsPujO["null"]=true;
            return return_eIsPujO;
        }
        
        return_eIsPujO["members"]={};
        for(int eIsPujO=0; eIsPujO < name.preserveAttachmentCount; eIsPujO++){
            json temp;
            temp=[&]() {
    json return_llcPpbI=json({});
    return serialize_uint32_t(name.pPreserveAttachments[eIsPujO]);}();
            return_eIsPujO["members"].push_back(temp);
        }
        return return_eIsPujO;
        }();
return result;}

    VkSubpassDescription2 deserialize_VkSubpassDescription2(json &name){
        auto result=VkSubpassDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_OsQmrId;[&]() {
temp_OsQmrId=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_OsQmrId;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_EfQcDaa;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_EfQcDaa=NULL;
        return;
        }
    temp_EfQcDaa=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int dDYPjee=0; dDYPjee < result.inputAttachmentCount; dDYPjee++){
            [&]() {
temp_EfQcDaa[dDYPjee]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][dDYPjee]);}();;
        }
        }();result.pInputAttachments=temp_EfQcDaa;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_HmEZttx;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_HmEZttx=NULL;
        return;
        }
    temp_HmEZttx=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int RhnlyMc=0; RhnlyMc < result.colorAttachmentCount; RhnlyMc++){
            [&]() {
temp_HmEZttx[RhnlyMc]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][RhnlyMc]);}();;
        }
        }();result.pColorAttachments=temp_HmEZttx;}();
[&]() {
VkAttachmentReference2* temp_VzvQLNt;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_VzvQLNt=NULL;
        return;
        }
    temp_VzvQLNt=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int ZDQaxQO=0; ZDQaxQO < result.colorAttachmentCount; ZDQaxQO++){
            [&]() {
temp_VzvQLNt[ZDQaxQO]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][ZDQaxQO]);}();;
        }
        }();result.pResolveAttachments=temp_VzvQLNt;}();
[&]() {
VkAttachmentReference2* temp_zKHGMdu;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_zKHGMdu=NULL;
        return;
        }
    temp_zKHGMdu=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_zKHGMdu)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_zKHGMdu;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_CCpicEG;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_CCpicEG=NULL;
        return;
        }
    temp_CCpicEG=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int VyguVLD=0; VyguVLD < result.preserveAttachmentCount; VyguVLD++){
            [&]() {
temp_CCpicEG[VyguVLD]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][VyguVLD]);}();;
        }
        }();result.pPreserveAttachments=temp_CCpicEG;}();
return result;}

    json serialize_VkSubpassDescription2KHR(VkSubpassDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mTWVaga=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eGMnHSi=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_JXrhXLw=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_bjgshcU=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_gVyVgvJ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_UTQZDXb=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_DPDnhhs=json({});
    
        if (name.pInputAttachments==NULL){
            return_DPDnhhs["null"]=true;
            return return_DPDnhhs;
        }
        
        return_DPDnhhs["members"]={};
        for(int DPDnhhs=0; DPDnhhs < name.inputAttachmentCount; DPDnhhs++){
            json temp;
            temp=[&]() {
    json return_HpgUutL=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[DPDnhhs]);}();
            return_DPDnhhs["members"].push_back(temp);
        }
        return return_DPDnhhs;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_CmlJmmD=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_hDRzWQw=json({});
    
        if (name.pColorAttachments==NULL){
            return_hDRzWQw["null"]=true;
            return return_hDRzWQw;
        }
        
        return_hDRzWQw["members"]={};
        for(int hDRzWQw=0; hDRzWQw < name.colorAttachmentCount; hDRzWQw++){
            json temp;
            temp=[&]() {
    json return_EgqFGPG=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[hDRzWQw]);}();
            return_hDRzWQw["members"].push_back(temp);
        }
        return return_hDRzWQw;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_SzgoJSh=json({});
    
        if (name.pResolveAttachments==NULL){
            return_SzgoJSh["null"]=true;
            return return_SzgoJSh;
        }
        
        return_SzgoJSh["members"]={};
        for(int SzgoJSh=0; SzgoJSh < name.colorAttachmentCount; SzgoJSh++){
            json temp;
            temp=[&]() {
    json return_PhAMRGs=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[SzgoJSh]);}();
            return_SzgoJSh["members"].push_back(temp);
        }
        return return_SzgoJSh;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_JmiBIjc=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_JmiBIjc["null"]=true;
            return return_JmiBIjc;
        }
        return_JmiBIjc=[&]() {
    json return_wPqAwAV=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_JmiBIjc;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_KDBcfKe=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_eIsPujO=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_eIsPujO["null"]=true;
            return return_eIsPujO;
        }
        
        return_eIsPujO["members"]={};
        for(int eIsPujO=0; eIsPujO < name.preserveAttachmentCount; eIsPujO++){
            json temp;
            temp=[&]() {
    json return_llcPpbI=json({});
    return serialize_uint32_t(name.pPreserveAttachments[eIsPujO]);}();
            return_eIsPujO["members"].push_back(temp);
        }
        return return_eIsPujO;
        }();
return result;}

    VkSubpassDescription2KHR deserialize_VkSubpassDescription2KHR(json &name){
        auto result=VkSubpassDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_OsQmrId;[&]() {
temp_OsQmrId=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_OsQmrId;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_EfQcDaa;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_EfQcDaa=NULL;
        return;
        }
    temp_EfQcDaa=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int dDYPjee=0; dDYPjee < result.inputAttachmentCount; dDYPjee++){
            [&]() {
temp_EfQcDaa[dDYPjee]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][dDYPjee]);}();;
        }
        }();result.pInputAttachments=temp_EfQcDaa;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_HmEZttx;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_HmEZttx=NULL;
        return;
        }
    temp_HmEZttx=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int RhnlyMc=0; RhnlyMc < result.colorAttachmentCount; RhnlyMc++){
            [&]() {
temp_HmEZttx[RhnlyMc]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][RhnlyMc]);}();;
        }
        }();result.pColorAttachments=temp_HmEZttx;}();
[&]() {
VkAttachmentReference2* temp_VzvQLNt;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_VzvQLNt=NULL;
        return;
        }
    temp_VzvQLNt=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int ZDQaxQO=0; ZDQaxQO < result.colorAttachmentCount; ZDQaxQO++){
            [&]() {
temp_VzvQLNt[ZDQaxQO]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][ZDQaxQO]);}();;
        }
        }();result.pResolveAttachments=temp_VzvQLNt;}();
[&]() {
VkAttachmentReference2* temp_zKHGMdu;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_zKHGMdu=NULL;
        return;
        }
    temp_zKHGMdu=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_zKHGMdu)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_zKHGMdu;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_CCpicEG;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_CCpicEG=NULL;
        return;
        }
    temp_CCpicEG=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int VyguVLD=0; VyguVLD < result.preserveAttachmentCount; VyguVLD++){
            [&]() {
temp_CCpicEG[VyguVLD]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][VyguVLD]);}();;
        }
        }();result.pPreserveAttachments=temp_CCpicEG;}();
return result;}

    json serialize_VkSubpassDependency2(VkSubpassDependency2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TNFbKyN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubpass"]=[&]() {
    json return_lskwgBS=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_vCZSdVq=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_bjLRthw=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_BdggdUr=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_COYLoyN=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_DGHlamv=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_MbMJHef=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_ubYthqG=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2 deserialize_VkSubpassDependency2(json &name){
        auto result=VkSubpassDependency2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkSubpassDependency2KHR(VkSubpassDependency2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TNFbKyN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubpass"]=[&]() {
    json return_lskwgBS=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_vCZSdVq=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_bjLRthw=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_BdggdUr=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_COYLoyN=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_DGHlamv=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_MbMJHef=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_ubYthqG=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2KHR deserialize_VkSubpassDependency2KHR(json &name){
        auto result=VkSubpassDependency2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo2(VkRenderPassCreateInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HNUAbGk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JVbFNCe=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_ohUQBIc=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_eJURiwf=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_bgWwGQW=json({});
    
        if (name.pAttachments==NULL){
            return_bgWwGQW["null"]=true;
            return return_bgWwGQW;
        }
        
        return_bgWwGQW["members"]={};
        for(int bgWwGQW=0; bgWwGQW < name.attachmentCount; bgWwGQW++){
            json temp;
            temp=[&]() {
    json return_lMPNQLQ=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[bgWwGQW]);}();
            return_bgWwGQW["members"].push_back(temp);
        }
        return return_bgWwGQW;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_SNCxmkp=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_qtnfFRf=json({});
    
        if (name.pSubpasses==NULL){
            return_qtnfFRf["null"]=true;
            return return_qtnfFRf;
        }
        
        return_qtnfFRf["members"]={};
        for(int qtnfFRf=0; qtnfFRf < name.subpassCount; qtnfFRf++){
            json temp;
            temp=[&]() {
    json return_NwleOxJ=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[qtnfFRf]);}();
            return_qtnfFRf["members"].push_back(temp);
        }
        return return_qtnfFRf;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_MDPFCuj=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_BmhdATv=json({});
    
        if (name.pDependencies==NULL){
            return_BmhdATv["null"]=true;
            return return_BmhdATv;
        }
        
        return_BmhdATv["members"]={};
        for(int BmhdATv=0; BmhdATv < name.dependencyCount; BmhdATv++){
            json temp;
            temp=[&]() {
    json return_pYdIzol=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[BmhdATv]);}();
            return_BmhdATv["members"].push_back(temp);
        }
        return return_BmhdATv;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_JtjhscL=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_fYlNgFE=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_fYlNgFE["null"]=true;
            return return_fYlNgFE;
        }
        
        return_fYlNgFE["members"]={};
        for(int fYlNgFE=0; fYlNgFE < name.correlatedViewMaskCount; fYlNgFE++){
            json temp;
            temp=[&]() {
    json return_nemFzCG=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[fYlNgFE]);}();
            return_fYlNgFE["members"].push_back(temp);
        }
        return return_fYlNgFE;
        }();
return result;}

    VkRenderPassCreateInfo2 deserialize_VkRenderPassCreateInfo2(json &name){
        auto result=VkRenderPassCreateInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_tOlEGmq;[&]() {
temp_tOlEGmq=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_tOlEGmq;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_ylnLxOp;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_ylnLxOp=NULL;
        return;
        }
    temp_ylnLxOp=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int XEpnPem=0; XEpnPem < result.attachmentCount; XEpnPem++){
            [&]() {
temp_ylnLxOp[XEpnPem]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][XEpnPem]);}();;
        }
        }();result.pAttachments=temp_ylnLxOp;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_WRMQprl;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_WRMQprl=NULL;
        return;
        }
    temp_WRMQprl=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int QSiEibJ=0; QSiEibJ < result.subpassCount; QSiEibJ++){
            [&]() {
temp_WRMQprl[QSiEibJ]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][QSiEibJ]);}();;
        }
        }();result.pSubpasses=temp_WRMQprl;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_pAeHWEk;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_pAeHWEk=NULL;
        return;
        }
    temp_pAeHWEk=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int YzXpjlO=0; YzXpjlO < result.dependencyCount; YzXpjlO++){
            [&]() {
temp_pAeHWEk[YzXpjlO]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][YzXpjlO]);}();;
        }
        }();result.pDependencies=temp_pAeHWEk;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_RxozQsi;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_RxozQsi=NULL;
        return;
        }
    temp_RxozQsi=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int EFlzxvS=0; EFlzxvS < result.correlatedViewMaskCount; EFlzxvS++){
            [&]() {
temp_RxozQsi[EFlzxvS]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][EFlzxvS]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_RxozQsi;}();
return result;}

    json serialize_VkRenderPassCreateInfo2KHR(VkRenderPassCreateInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HNUAbGk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JVbFNCe=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_ohUQBIc=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_eJURiwf=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_bgWwGQW=json({});
    
        if (name.pAttachments==NULL){
            return_bgWwGQW["null"]=true;
            return return_bgWwGQW;
        }
        
        return_bgWwGQW["members"]={};
        for(int bgWwGQW=0; bgWwGQW < name.attachmentCount; bgWwGQW++){
            json temp;
            temp=[&]() {
    json return_lMPNQLQ=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[bgWwGQW]);}();
            return_bgWwGQW["members"].push_back(temp);
        }
        return return_bgWwGQW;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_SNCxmkp=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_qtnfFRf=json({});
    
        if (name.pSubpasses==NULL){
            return_qtnfFRf["null"]=true;
            return return_qtnfFRf;
        }
        
        return_qtnfFRf["members"]={};
        for(int qtnfFRf=0; qtnfFRf < name.subpassCount; qtnfFRf++){
            json temp;
            temp=[&]() {
    json return_NwleOxJ=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[qtnfFRf]);}();
            return_qtnfFRf["members"].push_back(temp);
        }
        return return_qtnfFRf;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_MDPFCuj=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_BmhdATv=json({});
    
        if (name.pDependencies==NULL){
            return_BmhdATv["null"]=true;
            return return_BmhdATv;
        }
        
        return_BmhdATv["members"]={};
        for(int BmhdATv=0; BmhdATv < name.dependencyCount; BmhdATv++){
            json temp;
            temp=[&]() {
    json return_pYdIzol=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[BmhdATv]);}();
            return_BmhdATv["members"].push_back(temp);
        }
        return return_BmhdATv;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_JtjhscL=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_fYlNgFE=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_fYlNgFE["null"]=true;
            return return_fYlNgFE;
        }
        
        return_fYlNgFE["members"]={};
        for(int fYlNgFE=0; fYlNgFE < name.correlatedViewMaskCount; fYlNgFE++){
            json temp;
            temp=[&]() {
    json return_nemFzCG=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[fYlNgFE]);}();
            return_fYlNgFE["members"].push_back(temp);
        }
        return return_fYlNgFE;
        }();
return result;}

    VkRenderPassCreateInfo2KHR deserialize_VkRenderPassCreateInfo2KHR(json &name){
        auto result=VkRenderPassCreateInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_tOlEGmq;[&]() {
temp_tOlEGmq=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_tOlEGmq;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_ylnLxOp;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_ylnLxOp=NULL;
        return;
        }
    temp_ylnLxOp=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int XEpnPem=0; XEpnPem < result.attachmentCount; XEpnPem++){
            [&]() {
temp_ylnLxOp[XEpnPem]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][XEpnPem]);}();;
        }
        }();result.pAttachments=temp_ylnLxOp;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_WRMQprl;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_WRMQprl=NULL;
        return;
        }
    temp_WRMQprl=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int QSiEibJ=0; QSiEibJ < result.subpassCount; QSiEibJ++){
            [&]() {
temp_WRMQprl[QSiEibJ]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][QSiEibJ]);}();;
        }
        }();result.pSubpasses=temp_WRMQprl;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_pAeHWEk;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_pAeHWEk=NULL;
        return;
        }
    temp_pAeHWEk=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int YzXpjlO=0; YzXpjlO < result.dependencyCount; YzXpjlO++){
            [&]() {
temp_pAeHWEk[YzXpjlO]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][YzXpjlO]);}();;
        }
        }();result.pDependencies=temp_pAeHWEk;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_RxozQsi;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_RxozQsi=NULL;
        return;
        }
    temp_RxozQsi=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int EFlzxvS=0; EFlzxvS < result.correlatedViewMaskCount; EFlzxvS++){
            [&]() {
temp_RxozQsi[EFlzxvS]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][EFlzxvS]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_RxozQsi;}();
return result;}

    json serialize_VkSubpassBeginInfo(VkSubpassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XxqESDB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["contents"]=[&]() {
    json return_qTtIblk=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfo deserialize_VkSubpassBeginInfo(json &name){
        auto result=VkSubpassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassBeginInfoKHR(VkSubpassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XxqESDB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["contents"]=[&]() {
    json return_qTtIblk=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfoKHR deserialize_VkSubpassBeginInfoKHR(json &name){
        auto result=VkSubpassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassEndInfo(VkSubpassEndInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MYCfnXr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vEHjbMf=json({});
    return serialize_pNext(name.pNext);}();
return result;}

    VkSubpassEndInfo deserialize_VkSubpassEndInfo(json &name){
        auto result=VkSubpassEndInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_pVrFUtP;[&]() {
temp_pVrFUtP=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_pVrFUtP;}();
return result;}

    json serialize_VkSubpassEndInfoKHR(VkSubpassEndInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MYCfnXr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vEHjbMf=json({});
    return serialize_pNext(name.pNext);}();
return result;}

    VkSubpassEndInfoKHR deserialize_VkSubpassEndInfoKHR(json &name){
        auto result=VkSubpassEndInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_pVrFUtP;[&]() {
temp_pVrFUtP=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_pVrFUtP;}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(VkPhysicalDeviceTimelineSemaphoreFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YPNTQEA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_rdpkFPH=json({});
    return_rdpkFPH=[&]() {
    json return_wwzHlYy=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_rdpkFPH;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeatures deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(json &name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YPNTQEA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_rdpkFPH=json({});
    return_rdpkFPH=[&]() {
    json return_wwzHlYy=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_rdpkFPH;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeaturesKHR deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreProperties(VkPhysicalDeviceTimelineSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ixoNxgJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_zHYyuwY=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreProperties deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(json &name){
        auto result=VkPhysicalDeviceTimelineSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(VkPhysicalDeviceTimelineSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ixoNxgJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_zHYyuwY=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphorePropertiesKHR deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(json &name){
        auto result=VkPhysicalDeviceTimelineSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfo(VkSemaphoreTypeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KjJfVhT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphoreType"]=[&]() {
    json return_FtjTXuX=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_xySSiRJ=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfo deserialize_VkSemaphoreTypeCreateInfo(json &name){
        auto result=VkSemaphoreTypeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfoKHR(VkSemaphoreTypeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KjJfVhT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphoreType"]=[&]() {
    json return_FtjTXuX=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_xySSiRJ=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfoKHR deserialize_VkSemaphoreTypeCreateInfoKHR(json &name){
        auto result=VkSemaphoreTypeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfo(VkTimelineSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GHjdyeR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_hzLrlfg=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_LORdqUm=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_LORdqUm["null"]=true;
            return return_LORdqUm;
        }
        
        return_LORdqUm["members"]={};
        for(int LORdqUm=0; LORdqUm < name.waitSemaphoreValueCount; LORdqUm++){
            json temp;
            temp=[&]() {
    json return_DNuucoe=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[LORdqUm]);}();
            return_LORdqUm["members"].push_back(temp);
        }
        return return_LORdqUm;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_IaUtBIu=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_XytlnBA=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_XytlnBA["null"]=true;
            return return_XytlnBA;
        }
        
        return_XytlnBA["members"]={};
        for(int XytlnBA=0; XytlnBA < name.signalSemaphoreValueCount; XytlnBA++){
            json temp;
            temp=[&]() {
    json return_VILwnvw=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[XytlnBA]);}();
            return_XytlnBA["members"].push_back(temp);
        }
        return return_XytlnBA;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfo deserialize_VkTimelineSemaphoreSubmitInfo(json &name){
        auto result=VkTimelineSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_xEZWQDi;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_xEZWQDi=NULL;
        return;
        }
    temp_xEZWQDi=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int dLYieuM=0; dLYieuM < result.waitSemaphoreValueCount; dLYieuM++){
            [&]() {
temp_xEZWQDi[dLYieuM]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][dLYieuM]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_xEZWQDi;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_PtoAwMe;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_PtoAwMe=NULL;
        return;
        }
    temp_PtoAwMe=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int pXHESev=0; pXHESev < result.signalSemaphoreValueCount; pXHESev++){
            [&]() {
temp_PtoAwMe[pXHESev]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][pXHESev]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_PtoAwMe;}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfoKHR(VkTimelineSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GHjdyeR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_hzLrlfg=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_LORdqUm=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_LORdqUm["null"]=true;
            return return_LORdqUm;
        }
        
        return_LORdqUm["members"]={};
        for(int LORdqUm=0; LORdqUm < name.waitSemaphoreValueCount; LORdqUm++){
            json temp;
            temp=[&]() {
    json return_DNuucoe=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[LORdqUm]);}();
            return_LORdqUm["members"].push_back(temp);
        }
        return return_LORdqUm;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_IaUtBIu=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_XytlnBA=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_XytlnBA["null"]=true;
            return return_XytlnBA;
        }
        
        return_XytlnBA["members"]={};
        for(int XytlnBA=0; XytlnBA < name.signalSemaphoreValueCount; XytlnBA++){
            json temp;
            temp=[&]() {
    json return_VILwnvw=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[XytlnBA]);}();
            return_XytlnBA["members"].push_back(temp);
        }
        return return_XytlnBA;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfoKHR deserialize_VkTimelineSemaphoreSubmitInfoKHR(json &name){
        auto result=VkTimelineSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_xEZWQDi;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_xEZWQDi=NULL;
        return;
        }
    temp_xEZWQDi=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int dLYieuM=0; dLYieuM < result.waitSemaphoreValueCount; dLYieuM++){
            [&]() {
temp_xEZWQDi[dLYieuM]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][dLYieuM]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_xEZWQDi;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_PtoAwMe;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_PtoAwMe=NULL;
        return;
        }
    temp_PtoAwMe=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int pXHESev=0; pXHESev < result.signalSemaphoreValueCount; pXHESev++){
            [&]() {
temp_PtoAwMe[pXHESev]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][pXHESev]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_PtoAwMe;}();
return result;}

    json serialize_VkSemaphoreWaitInfo(VkSemaphoreWaitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LwjtKYG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_pLSuUYG=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_rgkMTBs=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_vnsmFjA=json({});
    
        if (name.pSemaphores==NULL){
            return_vnsmFjA["null"]=true;
            return return_vnsmFjA;
        }
        
        return_vnsmFjA["members"]={};
        for(int vnsmFjA=0; vnsmFjA < name.semaphoreCount; vnsmFjA++){
            json temp;
            temp=[&]() {
    json return_qLUGoFG=json({});
    return serialize_VkSemaphore(name.pSemaphores[vnsmFjA]);}();
            return_vnsmFjA["members"].push_back(temp);
        }
        return return_vnsmFjA;
        }();
result["members"]["pValues"]=[&]() {
    json return_wewfVQv=json({});
    
        if (name.pValues==NULL){
            return_wewfVQv["null"]=true;
            return return_wewfVQv;
        }
        
        return_wewfVQv["members"]={};
        for(int wewfVQv=0; wewfVQv < name.semaphoreCount; wewfVQv++){
            json temp;
            temp=[&]() {
    json return_JnNrAmc=json({});
    return serialize_uint64_t(name.pValues[wewfVQv]);}();
            return_wewfVQv["members"].push_back(temp);
        }
        return return_wewfVQv;
        }();
return result;}

    VkSemaphoreWaitInfo deserialize_VkSemaphoreWaitInfo(json &name){
        auto result=VkSemaphoreWaitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_AyoNvCs;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_AyoNvCs=NULL;
        return;
        }
    temp_AyoNvCs=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int xbOLeNS=0; xbOLeNS < result.semaphoreCount; xbOLeNS++){
            [&]() {
temp_AyoNvCs[xbOLeNS]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][xbOLeNS]);}();;
        }
        }();result.pSemaphores=temp_AyoNvCs;}();
[&]() {
uint64_t* temp_HQOSogn;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_HQOSogn=NULL;
        return;
        }
    temp_HQOSogn=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int gmJCOwU=0; gmJCOwU < result.semaphoreCount; gmJCOwU++){
            [&]() {
temp_HQOSogn[gmJCOwU]=deserialize_uint64_t(name["members"]["pValues"]["members"][gmJCOwU]);}();;
        }
        }();result.pValues=temp_HQOSogn;}();
return result;}

    json serialize_VkSemaphoreWaitInfoKHR(VkSemaphoreWaitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LwjtKYG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_pLSuUYG=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_rgkMTBs=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_vnsmFjA=json({});
    
        if (name.pSemaphores==NULL){
            return_vnsmFjA["null"]=true;
            return return_vnsmFjA;
        }
        
        return_vnsmFjA["members"]={};
        for(int vnsmFjA=0; vnsmFjA < name.semaphoreCount; vnsmFjA++){
            json temp;
            temp=[&]() {
    json return_qLUGoFG=json({});
    return serialize_VkSemaphore(name.pSemaphores[vnsmFjA]);}();
            return_vnsmFjA["members"].push_back(temp);
        }
        return return_vnsmFjA;
        }();
result["members"]["pValues"]=[&]() {
    json return_wewfVQv=json({});
    
        if (name.pValues==NULL){
            return_wewfVQv["null"]=true;
            return return_wewfVQv;
        }
        
        return_wewfVQv["members"]={};
        for(int wewfVQv=0; wewfVQv < name.semaphoreCount; wewfVQv++){
            json temp;
            temp=[&]() {
    json return_JnNrAmc=json({});
    return serialize_uint64_t(name.pValues[wewfVQv]);}();
            return_wewfVQv["members"].push_back(temp);
        }
        return return_wewfVQv;
        }();
return result;}

    VkSemaphoreWaitInfoKHR deserialize_VkSemaphoreWaitInfoKHR(json &name){
        auto result=VkSemaphoreWaitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_AyoNvCs;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_AyoNvCs=NULL;
        return;
        }
    temp_AyoNvCs=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int xbOLeNS=0; xbOLeNS < result.semaphoreCount; xbOLeNS++){
            [&]() {
temp_AyoNvCs[xbOLeNS]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][xbOLeNS]);}();;
        }
        }();result.pSemaphores=temp_AyoNvCs;}();
[&]() {
uint64_t* temp_HQOSogn;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_HQOSogn=NULL;
        return;
        }
    temp_HQOSogn=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int gmJCOwU=0; gmJCOwU < result.semaphoreCount; gmJCOwU++){
            [&]() {
temp_HQOSogn[gmJCOwU]=deserialize_uint64_t(name["members"]["pValues"]["members"][gmJCOwU]);}();;
        }
        }();result.pValues=temp_HQOSogn;}();
return result;}

    json serialize_VkSemaphoreSignalInfo(VkSemaphoreSignalInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IMkqEvB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphore"]=[&]() {
    json return_URGYDSC=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_NAODtSI=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfo deserialize_VkSemaphoreSignalInfo(json &name){
        auto result=VkSemaphoreSignalInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkSemaphoreSignalInfoKHR(VkSemaphoreSignalInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IMkqEvB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphore"]=[&]() {
    json return_URGYDSC=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_NAODtSI=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfoKHR deserialize_VkSemaphoreSignalInfoKHR(json &name){
        auto result=VkSemaphoreSignalInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkVertexInputBindingDivisorDescriptionEXT(VkVertexInputBindingDivisorDescriptionEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_VGyScIo=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["divisor"]=[&]() {
    json return_kectIdq=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDivisorDescriptionEXT deserialize_VkVertexInputBindingDivisorDescriptionEXT(json &name){
        auto result=VkVertexInputBindingDivisorDescriptionEXT();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(VkPipelineVertexInputDivisorStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AVoaXSh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vertexBindingDivisorCount"]=[&]() {
    json return_uyBkmpX=json({});
    return serialize_uint32_t(name.vertexBindingDivisorCount);}();
result["members"]["pVertexBindingDivisors"]=[&]() {
    json return_YsLzNAr=json({});
    
        if (name.pVertexBindingDivisors==NULL){
            return_YsLzNAr["null"]=true;
            return return_YsLzNAr;
        }
        
        return_YsLzNAr["members"]={};
        for(int YsLzNAr=0; YsLzNAr < name.vertexBindingDivisorCount; YsLzNAr++){
            json temp;
            temp=[&]() {
    json return_mdwBQYf=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(name.pVertexBindingDivisors[YsLzNAr]);}();
            return_YsLzNAr["members"].push_back(temp);
        }
        return return_YsLzNAr;
        }();
return result;}

    VkPipelineVertexInputDivisorStateCreateInfoEXT deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(json &name){
        auto result=VkPipelineVertexInputDivisorStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.vertexBindingDivisorCount=deserialize_uint32_t(name["members"]["vertexBindingDivisorCount"]);}();
[&]() {
VkVertexInputBindingDivisorDescriptionEXT* temp_lIajemg;[&]() {

        if (name["members"]["pVertexBindingDivisors"].contains("null")){
        temp_lIajemg=NULL;
        return;
        }
    temp_lIajemg=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(result.vertexBindingDivisorCount*sizeof(VkVertexInputBindingDivisorDescriptionEXT));
        for (int mrzlCWR=0; mrzlCWR < result.vertexBindingDivisorCount; mrzlCWR++){
            [&]() {
temp_lIajemg[mrzlCWR]=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name["members"]["pVertexBindingDivisors"]["members"][mrzlCWR]);}();;
        }
        }();result.pVertexBindingDivisors=temp_lIajemg;}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WLyTnRs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxVertexAttribDivisor"]=[&]() {
    json return_YfuFstJ=json({});
    return serialize_uint32_t(name.maxVertexAttribDivisor);}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxVertexAttribDivisor=deserialize_uint32_t(name["members"]["maxVertexAttribDivisor"]);}();
return result;}

    json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(VkPhysicalDevicePCIBusInfoPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ezPqvmg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pciDomain"]=[&]() {
    json return_BwIwUVK=json({});
    return serialize_uint32_t(name.pciDomain);}();
result["members"]["pciBus"]=[&]() {
    json return_MnljEvF=json({});
    return serialize_uint32_t(name.pciBus);}();
result["members"]["pciDevice"]=[&]() {
    json return_CGwKMdy=json({});
    return serialize_uint32_t(name.pciDevice);}();
result["members"]["pciFunction"]=[&]() {
    json return_ZNXvMmK=json({});
    return serialize_uint32_t(name.pciFunction);}();
return result;}

    VkPhysicalDevicePCIBusInfoPropertiesEXT deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(json &name){
        auto result=VkPhysicalDevicePCIBusInfoPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.pciDomain=deserialize_uint32_t(name["members"]["pciDomain"]);}();
[&]() {
result.pciBus=deserialize_uint32_t(name["members"]["pciBus"]);}();
[&]() {
result.pciDevice=deserialize_uint32_t(name["members"]["pciDevice"]);}();
[&]() {
result.pciFunction=deserialize_uint32_t(name["members"]["pciFunction"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkCommandBufferInheritanceConditionalRenderingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jYNDmwW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["conditionalRenderingEnable"]=[&]() {
    json return_vDtjDDW=json({});
    return_vDtjDDW=[&]() {
    json return_EaxYOGb=json({});
    return serialize_uint32_t(name.conditionalRenderingEnable);}();return return_vDtjDDW;}();
return result;}

    VkCommandBufferInheritanceConditionalRenderingInfoEXT deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(json &name){
        auto result=VkCommandBufferInheritanceConditionalRenderingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
[&]() {
result.conditionalRenderingEnable=deserialize_uint32_t(name["members"]["conditionalRenderingEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeatures(VkPhysicalDevice8BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bGqRaGM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_eqSgfTP=json({});
    return_eqSgfTP=[&]() {
    json return_JLMWDcz=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_eqSgfTP;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_ZsEiMnq=json({});
    return_ZsEiMnq=[&]() {
    json return_XkVgzlP=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_ZsEiMnq;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_whJhZjg=json({});
    return_whJhZjg=[&]() {
    json return_WMesqmp=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_whJhZjg;}();
return result;}

    VkPhysicalDevice8BitStorageFeatures deserialize_VkPhysicalDevice8BitStorageFeatures(json &name){
        auto result=VkPhysicalDevice8BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeaturesKHR(VkPhysicalDevice8BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bGqRaGM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_eqSgfTP=json({});
    return_eqSgfTP=[&]() {
    json return_JLMWDcz=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_eqSgfTP;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_ZsEiMnq=json({});
    return_ZsEiMnq=[&]() {
    json return_XkVgzlP=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_ZsEiMnq;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_whJhZjg=json({});
    return_whJhZjg=[&]() {
    json return_WMesqmp=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_whJhZjg;}();
return result;}

    VkPhysicalDevice8BitStorageFeaturesKHR deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(json &name){
        auto result=VkPhysicalDevice8BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkPhysicalDeviceConditionalRenderingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RzGgLmU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["conditionalRendering"]=[&]() {
    json return_oLsqXmK=json({});
    return_oLsqXmK=[&]() {
    json return_MDRVank=json({});
    return serialize_uint32_t(name.conditionalRendering);}();return return_oLsqXmK;}();
result["members"]["inheritedConditionalRendering"]=[&]() {
    json return_cPMLeOV=json({});
    return_cPMLeOV=[&]() {
    json return_CeDLINT=json({});
    return serialize_uint32_t(name.inheritedConditionalRendering);}();return return_cPMLeOV;}();
return result;}

    VkPhysicalDeviceConditionalRenderingFeaturesEXT deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceConditionalRenderingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.conditionalRendering=deserialize_uint32_t(name["members"]["conditionalRendering"]);}();}();
[&]() {
[&]() {
result.inheritedConditionalRendering=deserialize_uint32_t(name["members"]["inheritedConditionalRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(VkPhysicalDeviceVulkanMemoryModelFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gwmWuWc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_BdUhIzR=json({});
    return_BdUhIzR=[&]() {
    json return_LnIFxQS=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_BdUhIzR;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_jRUfGck=json({});
    return_jRUfGck=[&]() {
    json return_whHacGv=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_jRUfGck;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_oaJxiqA=json({});
    return_oaJxiqA=[&]() {
    json return_NvRmZSD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_oaJxiqA;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeatures deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(json &name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gwmWuWc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_BdUhIzR=json({});
    return_BdUhIzR=[&]() {
    json return_LnIFxQS=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_BdUhIzR;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_jRUfGck=json({});
    return_jRUfGck=[&]() {
    json return_whHacGv=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_jRUfGck;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_oaJxiqA=json({});
    return_oaJxiqA=[&]() {
    json return_NvRmZSD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_oaJxiqA;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeaturesKHR deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64Features(VkPhysicalDeviceShaderAtomicInt64Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TPvyBHZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_TWuPpIR=json({});
    return_TWuPpIR=[&]() {
    json return_aodmPmE=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_TWuPpIR;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_jFSUjon=json({});
    return_jFSUjon=[&]() {
    json return_HqVzgWz=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_jFSUjon;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64Features deserialize_VkPhysicalDeviceShaderAtomicInt64Features(json &name){
        auto result=VkPhysicalDeviceShaderAtomicInt64Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TPvyBHZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_TWuPpIR=json({});
    return_TWuPpIR=[&]() {
    json return_aodmPmE=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_TWuPpIR;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_jFSUjon=json({});
    return_jFSUjon=[&]() {
    json return_HqVzgWz=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_jFSUjon;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64FeaturesKHR deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(json &name){
        auto result=VkPhysicalDeviceShaderAtomicInt64FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dAqcnZg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderBufferFloat32Atomics"]=[&]() {
    json return_XuqQIOA=json({});
    return_XuqQIOA=[&]() {
    json return_WqpBCDk=json({});
    return serialize_uint32_t(name.shaderBufferFloat32Atomics);}();return return_XuqQIOA;}();
result["members"]["shaderBufferFloat32AtomicAdd"]=[&]() {
    json return_osckrIs=json({});
    return_osckrIs=[&]() {
    json return_jfvUGxI=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicAdd);}();return return_osckrIs;}();
result["members"]["shaderBufferFloat64Atomics"]=[&]() {
    json return_EyJjZRp=json({});
    return_EyJjZRp=[&]() {
    json return_onqkaSO=json({});
    return serialize_uint32_t(name.shaderBufferFloat64Atomics);}();return return_EyJjZRp;}();
result["members"]["shaderBufferFloat64AtomicAdd"]=[&]() {
    json return_alKNUhe=json({});
    return_alKNUhe=[&]() {
    json return_OYFVCZb=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicAdd);}();return return_alKNUhe;}();
result["members"]["shaderSharedFloat32Atomics"]=[&]() {
    json return_sfExfxP=json({});
    return_sfExfxP=[&]() {
    json return_AyHZchL=json({});
    return serialize_uint32_t(name.shaderSharedFloat32Atomics);}();return return_sfExfxP;}();
result["members"]["shaderSharedFloat32AtomicAdd"]=[&]() {
    json return_pMfBlhh=json({});
    return_pMfBlhh=[&]() {
    json return_whNBMin=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicAdd);}();return return_pMfBlhh;}();
result["members"]["shaderSharedFloat64Atomics"]=[&]() {
    json return_utzNfVm=json({});
    return_utzNfVm=[&]() {
    json return_lvZwnkq=json({});
    return serialize_uint32_t(name.shaderSharedFloat64Atomics);}();return return_utzNfVm;}();
result["members"]["shaderSharedFloat64AtomicAdd"]=[&]() {
    json return_UwnTFXn=json({});
    return_UwnTFXn=[&]() {
    json return_XmlWZnn=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicAdd);}();return return_UwnTFXn;}();
result["members"]["shaderImageFloat32Atomics"]=[&]() {
    json return_MQsAekb=json({});
    return_MQsAekb=[&]() {
    json return_nsNIMEG=json({});
    return serialize_uint32_t(name.shaderImageFloat32Atomics);}();return return_MQsAekb;}();
result["members"]["shaderImageFloat32AtomicAdd"]=[&]() {
    json return_WWdmZGn=json({});
    return_WWdmZGn=[&]() {
    json return_eUKrkPP=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicAdd);}();return return_WWdmZGn;}();
result["members"]["sparseImageFloat32Atomics"]=[&]() {
    json return_ipHevqt=json({});
    return_ipHevqt=[&]() {
    json return_LbZXHGx=json({});
    return serialize_uint32_t(name.sparseImageFloat32Atomics);}();return return_ipHevqt;}();
result["members"]["sparseImageFloat32AtomicAdd"]=[&]() {
    json return_zaOxxlF=json({});
    return_zaOxxlF=[&]() {
    json return_IElHkAz=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicAdd);}();return return_zaOxxlF;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloatFeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceShaderAtomicFloatFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderBufferFloat32Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32Atomics=deserialize_uint32_t(name["members"]["shaderImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32Atomics=deserialize_uint32_t(name["members"]["sparseImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicAdd"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_glYcbaT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderBufferFloat16Atomics"]=[&]() {
    json return_AKvEVUK=json({});
    return_AKvEVUK=[&]() {
    json return_YDhZGRW=json({});
    return serialize_uint32_t(name.shaderBufferFloat16Atomics);}();return return_AKvEVUK;}();
result["members"]["shaderBufferFloat16AtomicAdd"]=[&]() {
    json return_hPSQCJe=json({});
    return_hPSQCJe=[&]() {
    json return_SSLPBtI=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicAdd);}();return return_hPSQCJe;}();
result["members"]["shaderBufferFloat16AtomicMinMax"]=[&]() {
    json return_GZXBied=json({});
    return_GZXBied=[&]() {
    json return_pFPEJmq=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicMinMax);}();return return_GZXBied;}();
result["members"]["shaderBufferFloat32AtomicMinMax"]=[&]() {
    json return_LnwtPUZ=json({});
    return_LnwtPUZ=[&]() {
    json return_WWrKyjn=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicMinMax);}();return return_LnwtPUZ;}();
result["members"]["shaderBufferFloat64AtomicMinMax"]=[&]() {
    json return_DSYCOUo=json({});
    return_DSYCOUo=[&]() {
    json return_xCkXpIp=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicMinMax);}();return return_DSYCOUo;}();
result["members"]["shaderSharedFloat16Atomics"]=[&]() {
    json return_BTYSfrZ=json({});
    return_BTYSfrZ=[&]() {
    json return_CnGIUyt=json({});
    return serialize_uint32_t(name.shaderSharedFloat16Atomics);}();return return_BTYSfrZ;}();
result["members"]["shaderSharedFloat16AtomicAdd"]=[&]() {
    json return_lPQeJxm=json({});
    return_lPQeJxm=[&]() {
    json return_svmxpne=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicAdd);}();return return_lPQeJxm;}();
result["members"]["shaderSharedFloat16AtomicMinMax"]=[&]() {
    json return_fiNzgDf=json({});
    return_fiNzgDf=[&]() {
    json return_WhiKECx=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicMinMax);}();return return_fiNzgDf;}();
result["members"]["shaderSharedFloat32AtomicMinMax"]=[&]() {
    json return_LhaYsIP=json({});
    return_LhaYsIP=[&]() {
    json return_seTbQPx=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicMinMax);}();return return_LhaYsIP;}();
result["members"]["shaderSharedFloat64AtomicMinMax"]=[&]() {
    json return_bFAqKwx=json({});
    return_bFAqKwx=[&]() {
    json return_upkgUZX=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicMinMax);}();return return_bFAqKwx;}();
result["members"]["shaderImageFloat32AtomicMinMax"]=[&]() {
    json return_GJCbJEE=json({});
    return_GJCbJEE=[&]() {
    json return_hwltziM=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicMinMax);}();return return_GJCbJEE;}();
result["members"]["sparseImageFloat32AtomicMinMax"]=[&]() {
    json return_EEffTkW=json({});
    return_EEffTkW=[&]() {
    json return_wWXLQSD=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicMinMax);}();return return_EEffTkW;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderBufferFloat16Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicMinMax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WUcBRrU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vertexAttributeInstanceRateDivisor"]=[&]() {
    json return_jOvCVwm=json({});
    return_jOvCVwm=[&]() {
    json return_bjJWQAO=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateDivisor);}();return return_jOvCVwm;}();
result["members"]["vertexAttributeInstanceRateZeroDivisor"]=[&]() {
    json return_dqqBbdx=json({});
    return_dqqBbdx=[&]() {
    json return_gviofNH=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateZeroDivisor);}();return return_dqqBbdx;}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateDivisor"]);}();}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateZeroDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateZeroDivisor"]);}();}();
return result;}

    json serialize_VkQueueFamilyCheckpointPropertiesNV(VkQueueFamilyCheckpointPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KmoOIRb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RROZwuA=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_hgYDVAC=json({});
    return serialize_VkPipelineStageFlags(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointPropertiesNV deserialize_VkQueueFamilyCheckpointPropertiesNV(json &name){
        auto result=VkQueueFamilyCheckpointPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointDataNV(VkCheckpointDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AUSEQqB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stage"]=[&]() {
    json return_cCdYdpC=json({});
    return serialize_VkPipelineStageFlagBits(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_KBhnhmI=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_KBhnhmI["null"]=true;
            return return_KBhnhmI;
        }
        return_KBhnhmI=[&]() {
    json return_JTJuUlB=json({});
    
        if (((char*)(name.pCheckpointMarker))==NULL){
            return_JTJuUlB["null"]=true;
            return return_JTJuUlB;
        }
        
        return_JTJuUlB["members"]={};
        for(int JTJuUlB=0; JTJuUlB < strlen(((char*)(name.pCheckpointMarker)))+1; JTJuUlB++){
            json temp;
            temp=[&]() {
    json return_JtfNIBD=json({});
    return serialize_char(((char*)(name.pCheckpointMarker))[JTJuUlB]);}();
            return_JTJuUlB["members"].push_back(temp);
        }
        return return_JTJuUlB;
        }();return return_KBhnhmI;}();
return result;}

    VkCheckpointDataNV deserialize_VkCheckpointDataNV(json &name){
        auto result=VkCheckpointDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.stage=deserialize_VkPipelineStageFlagBits(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        return;
        }
    char* temp_MKmmwtB;[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        temp_MKmmwtB=NULL;
        return;
        }
    temp_MKmmwtB=(char*)malloc(name["members"]["pCheckpointMarker"]["members"].size()*sizeof(char));
        for (int kANtfLT=0; kANtfLT < name["members"]["pCheckpointMarker"]["members"].size(); kANtfLT++){
            [&]() {
temp_MKmmwtB[kANtfLT]=deserialize_char(name["members"]["pCheckpointMarker"]["members"][kANtfLT]);}();;
        }
        }();result.pCheckpointMarker=(void*)temp_MKmmwtB;
}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolveProperties(VkPhysicalDeviceDepthStencilResolveProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cxmZWAO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uSHLIBr=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_ZICnWJu=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_GjDTtEL=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_MDAhzpg=json({});
    return_MDAhzpg=[&]() {
    json return_pquJtbv=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_MDAhzpg;}();
result["members"]["independentResolve"]=[&]() {
    json return_fRftpJy=json({});
    return_fRftpJy=[&]() {
    json return_cwvahTm=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_fRftpJy;}();
return result;}

    VkPhysicalDeviceDepthStencilResolveProperties deserialize_VkPhysicalDeviceDepthStencilResolveProperties(json &name){
        auto result=VkPhysicalDeviceDepthStencilResolveProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(VkPhysicalDeviceDepthStencilResolvePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cxmZWAO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uSHLIBr=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_ZICnWJu=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_GjDTtEL=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_MDAhzpg=json({});
    return_MDAhzpg=[&]() {
    json return_pquJtbv=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_MDAhzpg;}();
result["members"]["independentResolve"]=[&]() {
    json return_fRftpJy=json({});
    return_fRftpJy=[&]() {
    json return_cwvahTm=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_fRftpJy;}();
return result;}

    VkPhysicalDeviceDepthStencilResolvePropertiesKHR deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(json &name){
        auto result=VkPhysicalDeviceDepthStencilResolvePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolve(VkSubpassDescriptionDepthStencilResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aEcRydM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthResolveMode"]=[&]() {
    json return_voKyCGS=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_IwaZLjJ=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_rURGuHE=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_rURGuHE["null"]=true;
            return return_rURGuHE;
        }
        return_rURGuHE=[&]() {
    json return_tietzOf=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_rURGuHE;}();
return result;}

    VkSubpassDescriptionDepthStencilResolve deserialize_VkSubpassDescriptionDepthStencilResolve(json &name){
        auto result=VkSubpassDescriptionDepthStencilResolve();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_GVWAwbl;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_GVWAwbl=NULL;
        return;
        }
    temp_GVWAwbl=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_GVWAwbl)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_GVWAwbl;}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolveKHR(VkSubpassDescriptionDepthStencilResolveKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aEcRydM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthResolveMode"]=[&]() {
    json return_voKyCGS=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_IwaZLjJ=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_rURGuHE=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_rURGuHE["null"]=true;
            return return_rURGuHE;
        }
        return_rURGuHE=[&]() {
    json return_tietzOf=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_rURGuHE;}();
return result;}

    VkSubpassDescriptionDepthStencilResolveKHR deserialize_VkSubpassDescriptionDepthStencilResolveKHR(json &name){
        auto result=VkSubpassDescriptionDepthStencilResolveKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_GVWAwbl;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_GVWAwbl=NULL;
        return;
        }
    temp_GVWAwbl=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_GVWAwbl)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_GVWAwbl;}();
return result;}

    json serialize_VkImageViewASTCDecodeModeEXT(VkImageViewASTCDecodeModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EwpZekA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["decodeMode"]=[&]() {
    json return_MbJHWgc=json({});
    return serialize_VkFormat(name.decodeMode);}();
return result;}

    VkImageViewASTCDecodeModeEXT deserialize_VkImageViewASTCDecodeModeEXT(json &name){
        auto result=VkImageViewASTCDecodeModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.decodeMode=deserialize_VkFormat(name["members"]["decodeMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(VkPhysicalDeviceASTCDecodeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MXdyzMs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["decodeModeSharedExponent"]=[&]() {
    json return_MVZXsUN=json({});
    return_MVZXsUN=[&]() {
    json return_UfpWgaw=json({});
    return serialize_uint32_t(name.decodeModeSharedExponent);}();return return_MVZXsUN;}();
return result;}

    VkPhysicalDeviceASTCDecodeFeaturesEXT deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceASTCDecodeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.decodeModeSharedExponent=deserialize_uint32_t(name["members"]["decodeModeSharedExponent"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkPhysicalDeviceTransformFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xWQuTug=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["transformFeedback"]=[&]() {
    json return_LelHcsK=json({});
    return_LelHcsK=[&]() {
    json return_GMjTpjC=json({});
    return serialize_uint32_t(name.transformFeedback);}();return return_LelHcsK;}();
result["members"]["geometryStreams"]=[&]() {
    json return_xHgzQQx=json({});
    return_xHgzQQx=[&]() {
    json return_SMoqjrI=json({});
    return serialize_uint32_t(name.geometryStreams);}();return return_xHgzQQx;}();
return result;}

    VkPhysicalDeviceTransformFeedbackFeaturesEXT deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceTransformFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.transformFeedback=deserialize_uint32_t(name["members"]["transformFeedback"]);}();}();
[&]() {
[&]() {
result.geometryStreams=deserialize_uint32_t(name["members"]["geometryStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkPhysicalDeviceTransformFeedbackPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AWXGjLN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxTransformFeedbackStreams"]=[&]() {
    json return_mFAARoD=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreams);}();
result["members"]["maxTransformFeedbackBuffers"]=[&]() {
    json return_VmZNnMu=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBuffers);}();
result["members"]["maxTransformFeedbackBufferSize"]=[&]() {
    json return_WIANWaX=json({});
    return_WIANWaX=[&]() {
    json return_ZpncmqW=json({});
    return serialize_uint64_t(name.maxTransformFeedbackBufferSize);}();return return_WIANWaX;}();
result["members"]["maxTransformFeedbackStreamDataSize"]=[&]() {
    json return_hmZmzwS=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreamDataSize);}();
result["members"]["maxTransformFeedbackBufferDataSize"]=[&]() {
    json return_rsrkIBi=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataSize);}();
result["members"]["maxTransformFeedbackBufferDataStride"]=[&]() {
    json return_RYHumJp=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataStride);}();
result["members"]["transformFeedbackQueries"]=[&]() {
    json return_OpkSggU=json({});
    return_OpkSggU=[&]() {
    json return_ZiXsedR=json({});
    return serialize_uint32_t(name.transformFeedbackQueries);}();return return_OpkSggU;}();
result["members"]["transformFeedbackStreamsLinesTriangles"]=[&]() {
    json return_SiQrUMm=json({});
    return_SiQrUMm=[&]() {
    json return_hmbCMvr=json({});
    return serialize_uint32_t(name.transformFeedbackStreamsLinesTriangles);}();return return_SiQrUMm;}();
result["members"]["transformFeedbackRasterizationStreamSelect"]=[&]() {
    json return_lyHmZQN=json({});
    return_lyHmZQN=[&]() {
    json return_CFmPmfj=json({});
    return serialize_uint32_t(name.transformFeedbackRasterizationStreamSelect);}();return return_lyHmZQN;}();
result["members"]["transformFeedbackDraw"]=[&]() {
    json return_MNMNDIU=json({});
    return_MNMNDIU=[&]() {
    json return_kdwQseX=json({});
    return serialize_uint32_t(name.transformFeedbackDraw);}();return return_MNMNDIU;}();
return result;}

    VkPhysicalDeviceTransformFeedbackPropertiesEXT deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxTransformFeedbackStreams=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreams"]);}();
[&]() {
result.maxTransformFeedbackBuffers=deserialize_uint32_t(name["members"]["maxTransformFeedbackBuffers"]);}();
[&]() {
[&]() {
result.maxTransformFeedbackBufferSize=deserialize_uint64_t(name["members"]["maxTransformFeedbackBufferSize"]);}();}();
[&]() {
result.maxTransformFeedbackStreamDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreamDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataStride=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataStride"]);}();
[&]() {
[&]() {
result.transformFeedbackQueries=deserialize_uint32_t(name["members"]["transformFeedbackQueries"]);}();}();
[&]() {
[&]() {
result.transformFeedbackStreamsLinesTriangles=deserialize_uint32_t(name["members"]["transformFeedbackStreamsLinesTriangles"]);}();}();
[&]() {
[&]() {
result.transformFeedbackRasterizationStreamSelect=deserialize_uint32_t(name["members"]["transformFeedbackRasterizationStreamSelect"]);}();}();
[&]() {
[&]() {
result.transformFeedbackDraw=deserialize_uint32_t(name["members"]["transformFeedbackDraw"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(VkPipelineRasterizationStateStreamCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GhUpxXK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TgCGsKC=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_KiFhyuS=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name.flags);}();
result["members"]["rasterizationStream"]=[&]() {
    json return_JuSAqQa=json({});
    return serialize_uint32_t(name.rasterizationStream);}();
return result;}

    VkPipelineRasterizationStateStreamCreateInfoEXT deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(json &name){
        auto result=VkPipelineRasterizationStateStreamCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_HNMuFVl;[&]() {
temp_HNMuFVl=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_HNMuFVl;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.rasterizationStream=deserialize_uint32_t(name["members"]["rasterizationStream"]);}();
return result;}

    json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BpraUMS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["representativeFragmentTest"]=[&]() {
    json return_APpCBOq=json({});
    return_APpCBOq=[&]() {
    json return_fONPSdk=json({});
    return serialize_uint32_t(name.representativeFragmentTest);}();return return_APpCBOq;}();
return result;}

    VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(json &name){
        auto result=VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.representativeFragmentTest=deserialize_uint32_t(name["members"]["representativeFragmentTest"]);}();}();
return result;}

    json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkPipelineRepresentativeFragmentTestStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DNjkkfm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fJVPDUH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["representativeFragmentTestEnable"]=[&]() {
    json return_GcGayrd=json({});
    return_GcGayrd=[&]() {
    json return_hTmRPqc=json({});
    return serialize_uint32_t(name.representativeFragmentTestEnable);}();return return_GcGayrd;}();
return result;}

    VkPipelineRepresentativeFragmentTestStateCreateInfoNV deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(json &name){
        auto result=VkPipelineRepresentativeFragmentTestStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_sKVZcum;[&]() {
temp_sKVZcum=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_sKVZcum;}();
[&]() {
[&]() {
result.representativeFragmentTestEnable=deserialize_uint32_t(name["members"]["representativeFragmentTestEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(VkPhysicalDeviceExclusiveScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kdzjqjw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["exclusiveScissor"]=[&]() {
    json return_JWQDbWr=json({});
    return_JWQDbWr=[&]() {
    json return_ZDgfXvG=json({});
    return serialize_uint32_t(name.exclusiveScissor);}();return return_JWQDbWr;}();
return result;}

    VkPhysicalDeviceExclusiveScissorFeaturesNV deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(json &name){
        auto result=VkPhysicalDeviceExclusiveScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.exclusiveScissor=deserialize_uint32_t(name["members"]["exclusiveScissor"]);}();}();
return result;}

    json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkPipelineViewportExclusiveScissorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xhkAXCx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DTnQGEG=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["exclusiveScissorCount"]=[&]() {
    json return_NPVHQcZ=json({});
    return serialize_uint32_t(name.exclusiveScissorCount);}();
result["members"]["pExclusiveScissors"]=[&]() {
    json return_oDzwNDg=json({});
    
        if (name.pExclusiveScissors==NULL){
            return_oDzwNDg["null"]=true;
            return return_oDzwNDg;
        }
        
        return_oDzwNDg["members"]={};
        for(int oDzwNDg=0; oDzwNDg < name.exclusiveScissorCount; oDzwNDg++){
            json temp;
            temp=[&]() {
    json return_WVCbQyz=json({});
    return serialize_VkRect2D(name.pExclusiveScissors[oDzwNDg]);}();
            return_oDzwNDg["members"].push_back(temp);
        }
        return return_oDzwNDg;
        }();
return result;}

    VkPipelineViewportExclusiveScissorStateCreateInfoNV deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(json &name){
        auto result=VkPipelineViewportExclusiveScissorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_PnRMIUw;[&]() {
temp_PnRMIUw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_PnRMIUw;}();
[&]() {
result.exclusiveScissorCount=deserialize_uint32_t(name["members"]["exclusiveScissorCount"]);}();
[&]() {
VkRect2D* temp_XxanEMW;[&]() {

        if (name["members"]["pExclusiveScissors"].contains("null")){
        temp_XxanEMW=NULL;
        return;
        }
    temp_XxanEMW=(VkRect2D*)malloc(result.exclusiveScissorCount*sizeof(VkRect2D));
        for (int UicrepZ=0; UicrepZ < result.exclusiveScissorCount; UicrepZ++){
            [&]() {
temp_XxanEMW[UicrepZ]=deserialize_VkRect2D(name["members"]["pExclusiveScissors"]["members"][UicrepZ]);}();;
        }
        }();result.pExclusiveScissors=temp_XxanEMW;}();
return result;}

    json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(VkPhysicalDeviceCornerSampledImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DEGMPIQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAZMHOp=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cornerSampledImage"]=[&]() {
    json return_mxqrHns=json({});
    return_mxqrHns=[&]() {
    json return_LjMukgt=json({});
    return serialize_uint32_t(name.cornerSampledImage);}();return return_mxqrHns;}();
return result;}

    VkPhysicalDeviceCornerSampledImageFeaturesNV deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(json &name){
        auto result=VkPhysicalDeviceCornerSampledImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.cornerSampledImage=deserialize_uint32_t(name["members"]["cornerSampledImage"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mebuLGy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["computeDerivativeGroupQuads"]=[&]() {
    json return_AOuuOAv=json({});
    return_AOuuOAv=[&]() {
    json return_fcNeksU=json({});
    return serialize_uint32_t(name.computeDerivativeGroupQuads);}();return return_AOuuOAv;}();
result["members"]["computeDerivativeGroupLinear"]=[&]() {
    json return_FNaknni=json({});
    return_FNaknni=[&]() {
    json return_qXMEURA=json({});
    return serialize_uint32_t(name.computeDerivativeGroupLinear);}();return return_FNaknni;}();
return result;}

    VkPhysicalDeviceComputeShaderDerivativesFeaturesNV deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(json &name){
        auto result=VkPhysicalDeviceComputeShaderDerivativesFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.computeDerivativeGroupQuads=deserialize_uint32_t(name["members"]["computeDerivativeGroupQuads"]);}();}();
[&]() {
[&]() {
result.computeDerivativeGroupLinear=deserialize_uint32_t(name["members"]["computeDerivativeGroupLinear"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkPhysicalDeviceShaderImageFootprintFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iVvTGkL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAZMHOp=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageFootprint"]=[&]() {
    json return_sLUxYKF=json({});
    return_sLUxYKF=[&]() {
    json return_WUdpfWE=json({});
    return serialize_uint32_t(name.imageFootprint);}();return return_sLUxYKF;}();
return result;}

    VkPhysicalDeviceShaderImageFootprintFeaturesNV deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(json &name){
        auto result=VkPhysicalDeviceShaderImageFootprintFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.imageFootprint=deserialize_uint32_t(name["members"]["imageFootprint"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YzzTYPa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dedicatedAllocationImageAliasing"]=[&]() {
    json return_JRMdZhc=json({});
    return_JRMdZhc=[&]() {
    json return_krUvdXo=json({});
    return serialize_uint32_t(name.dedicatedAllocationImageAliasing);}();return return_JRMdZhc;}();
return result;}

    VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(json &name){
        auto result=VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.dedicatedAllocationImageAliasing=deserialize_uint32_t(name["members"]["dedicatedAllocationImageAliasing"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hNoffXs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["indirectCopy"]=[&]() {
    json return_FHSMzEX=json({});
    return_FHSMzEX=[&]() {
    json return_DnerKPI=json({});
    return serialize_uint32_t(name.indirectCopy);}();return return_FHSMzEX;}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectFeaturesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(json &name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.indirectCopy=deserialize_uint32_t(name["members"]["indirectCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lQPSjMs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supportedQueues"]=[&]() {
    json return_TvBgSkJ=json({});
    return serialize_VkQueueFlags(name.supportedQueues);}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectPropertiesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(json &name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.supportedQueues=deserialize_VkQueueFlags(name["members"]["supportedQueues"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(VkPhysicalDeviceMemoryDecompressionFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uFaHHbo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vDMHxGJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryDecompression"]=[&]() {
    json return_VoBiLdx=json({});
    return_VoBiLdx=[&]() {
    json return_ZnPggIn=json({});
    return serialize_uint32_t(name.memoryDecompression);}();return return_VoBiLdx;}();
return result;}

    VkPhysicalDeviceMemoryDecompressionFeaturesNV deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(json &name){
        auto result=VkPhysicalDeviceMemoryDecompressionFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.memoryDecompression=deserialize_uint32_t(name["members"]["memoryDecompression"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(VkPhysicalDeviceMemoryDecompressionPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BUbZQZG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["decompressionMethods"]=[&]() {
    json return_YPnHhvh=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethods);}();
result["members"]["maxDecompressionIndirectCount"]=[&]() {
    json return_VzuVFxG=json({});
    return serialize_uint64_t(name.maxDecompressionIndirectCount);}();
return result;}

    VkPhysicalDeviceMemoryDecompressionPropertiesNV deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(json &name){
        auto result=VkPhysicalDeviceMemoryDecompressionPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.decompressionMethods=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethods"]);}();
[&]() {
result.maxDecompressionIndirectCount=deserialize_uint64_t(name["members"]["maxDecompressionIndirectCount"]);}();
return result;}

    json serialize_VkShadingRatePaletteNV(VkShadingRatePaletteNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRatePaletteEntryCount"]=[&]() {
    json return_LIxRYbq=json({});
    return serialize_uint32_t(name.shadingRatePaletteEntryCount);}();
result["members"]["pShadingRatePaletteEntries"]=[&]() {
    json return_RoWavKC=json({});
    
        if (name.pShadingRatePaletteEntries==NULL){
            return_RoWavKC["null"]=true;
            return return_RoWavKC;
        }
        
        return_RoWavKC["members"]={};
        for(int RoWavKC=0; RoWavKC < name.shadingRatePaletteEntryCount; RoWavKC++){
            json temp;
            temp=[&]() {
    json return_iPHkjQZ=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.pShadingRatePaletteEntries[RoWavKC]);}();
            return_RoWavKC["members"].push_back(temp);
        }
        return return_RoWavKC;
        }();
return result;}

    VkShadingRatePaletteNV deserialize_VkShadingRatePaletteNV(json &name){
        auto result=VkShadingRatePaletteNV();
    
[&]() {
result.shadingRatePaletteEntryCount=deserialize_uint32_t(name["members"]["shadingRatePaletteEntryCount"]);}();
[&]() {
VkShadingRatePaletteEntryNV* temp_TsMbnuE;[&]() {

        if (name["members"]["pShadingRatePaletteEntries"].contains("null")){
        temp_TsMbnuE=NULL;
        return;
        }
    temp_TsMbnuE=(VkShadingRatePaletteEntryNV*)malloc(result.shadingRatePaletteEntryCount*sizeof(VkShadingRatePaletteEntryNV));
        for (int WOoXWqZ=0; WOoXWqZ < result.shadingRatePaletteEntryCount; WOoXWqZ++){
            [&]() {
temp_TsMbnuE[WOoXWqZ]=deserialize_VkShadingRatePaletteEntryNV(name["members"]["pShadingRatePaletteEntries"]["members"][WOoXWqZ]);}();;
        }
        }();result.pShadingRatePaletteEntries=temp_TsMbnuE;}();
return result;}

    json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(VkPipelineViewportShadingRateImageStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JsAWfbq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_diZkYcK=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shadingRateImageEnable"]=[&]() {
    json return_buMFrXt=json({});
    return_buMFrXt=[&]() {
    json return_WJwKVZz=json({});
    return serialize_uint32_t(name.shadingRateImageEnable);}();return return_buMFrXt;}();
result["members"]["viewportCount"]=[&]() {
    json return_FtDpGcq=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pShadingRatePalettes"]=[&]() {
    json return_ZJjihzC=json({});
    
        if (name.pShadingRatePalettes==NULL){
            return_ZJjihzC["null"]=true;
            return return_ZJjihzC;
        }
        
        return_ZJjihzC["members"]={};
        for(int ZJjihzC=0; ZJjihzC < name.viewportCount; ZJjihzC++){
            json temp;
            temp=[&]() {
    json return_bbUmrDf=json({});
    return serialize_VkShadingRatePaletteNV(name.pShadingRatePalettes[ZJjihzC]);}();
            return_ZJjihzC["members"].push_back(temp);
        }
        return return_ZJjihzC;
        }();
return result;}

    VkPipelineViewportShadingRateImageStateCreateInfoNV deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(json &name){
        auto result=VkPipelineViewportShadingRateImageStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_VrVGIll;[&]() {
temp_VrVGIll=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_VrVGIll;}();
[&]() {
[&]() {
result.shadingRateImageEnable=deserialize_uint32_t(name["members"]["shadingRateImageEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkShadingRatePaletteNV* temp_HonEeKy;[&]() {

        if (name["members"]["pShadingRatePalettes"].contains("null")){
        temp_HonEeKy=NULL;
        return;
        }
    temp_HonEeKy=(VkShadingRatePaletteNV*)malloc(result.viewportCount*sizeof(VkShadingRatePaletteNV));
        for (int SrhBErG=0; SrhBErG < result.viewportCount; SrhBErG++){
            [&]() {
temp_HonEeKy[SrhBErG]=deserialize_VkShadingRatePaletteNV(name["members"]["pShadingRatePalettes"]["members"][SrhBErG]);}();;
        }
        }();result.pShadingRatePalettes=temp_HonEeKy;}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(VkPhysicalDeviceShadingRateImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TYrESBe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shadingRateImage"]=[&]() {
    json return_ZdvBzLV=json({});
    return_ZdvBzLV=[&]() {
    json return_vEUXfDs=json({});
    return serialize_uint32_t(name.shadingRateImage);}();return return_ZdvBzLV;}();
result["members"]["shadingRateCoarseSampleOrder"]=[&]() {
    json return_HZuUGHs=json({});
    return_HZuUGHs=[&]() {
    json return_nsoVhpL=json({});
    return serialize_uint32_t(name.shadingRateCoarseSampleOrder);}();return return_HZuUGHs;}();
return result;}

    VkPhysicalDeviceShadingRateImageFeaturesNV deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(json &name){
        auto result=VkPhysicalDeviceShadingRateImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shadingRateImage=deserialize_uint32_t(name["members"]["shadingRateImage"]);}();}();
[&]() {
[&]() {
result.shadingRateCoarseSampleOrder=deserialize_uint32_t(name["members"]["shadingRateCoarseSampleOrder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(VkPhysicalDeviceShadingRateImagePropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zLZfsBt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shadingRateTexelSize"]=[&]() {
    json return_KlGdQTp=json({});
    return serialize_VkExtent2D(name.shadingRateTexelSize);}();
result["members"]["shadingRatePaletteSize"]=[&]() {
    json return_vhARrKA=json({});
    return serialize_uint32_t(name.shadingRatePaletteSize);}();
result["members"]["shadingRateMaxCoarseSamples"]=[&]() {
    json return_EsQCHbn=json({});
    return serialize_uint32_t(name.shadingRateMaxCoarseSamples);}();
return result;}

    VkPhysicalDeviceShadingRateImagePropertiesNV deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(json &name){
        auto result=VkPhysicalDeviceShadingRateImagePropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.shadingRateTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateTexelSize"]);}();
[&]() {
result.shadingRatePaletteSize=deserialize_uint32_t(name["members"]["shadingRatePaletteSize"]);}();
[&]() {
result.shadingRateMaxCoarseSamples=deserialize_uint32_t(name["members"]["shadingRateMaxCoarseSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pqvCwdm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["invocationMask"]=[&]() {
    json return_IGoHwwa=json({});
    return_IGoHwwa=[&]() {
    json return_ucEODtN=json({});
    return serialize_uint32_t(name.invocationMask);}();return return_IGoHwwa;}();
return result;}

    VkPhysicalDeviceInvocationMaskFeaturesHUAWEI deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(json &name){
        auto result=VkPhysicalDeviceInvocationMaskFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.invocationMask=deserialize_uint32_t(name["members"]["invocationMask"]);}();}();
return result;}

    json serialize_VkCoarseSampleLocationNV(VkCoarseSampleLocationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pixelX"]=[&]() {
    json return_YPkMgfy=json({});
    return serialize_uint32_t(name.pixelX);}();
result["members"]["pixelY"]=[&]() {
    json return_fMPoyWi=json({});
    return serialize_uint32_t(name.pixelY);}();
result["members"]["sample"]=[&]() {
    json return_dwPMIiy=json({});
    return serialize_uint32_t(name.sample);}();
return result;}

    VkCoarseSampleLocationNV deserialize_VkCoarseSampleLocationNV(json &name){
        auto result=VkCoarseSampleLocationNV();
    
[&]() {
result.pixelX=deserialize_uint32_t(name["members"]["pixelX"]);}();
[&]() {
result.pixelY=deserialize_uint32_t(name["members"]["pixelY"]);}();
[&]() {
result.sample=deserialize_uint32_t(name["members"]["sample"]);}();
return result;}

    json serialize_VkCoarseSampleOrderCustomNV(VkCoarseSampleOrderCustomNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRate"]=[&]() {
    json return_BAlKnfG=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.shadingRate);}();
result["members"]["sampleCount"]=[&]() {
    json return_gerVLaH=json({});
    return serialize_uint32_t(name.sampleCount);}();
result["members"]["sampleLocationCount"]=[&]() {
    json return_bUoYBXn=json({});
    return serialize_uint32_t(name.sampleLocationCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_NKMWUNv=json({});
    
        if (name.pSampleLocations==NULL){
            return_NKMWUNv["null"]=true;
            return return_NKMWUNv;
        }
        
        return_NKMWUNv["members"]={};
        for(int NKMWUNv=0; NKMWUNv < name.sampleLocationCount; NKMWUNv++){
            json temp;
            temp=[&]() {
    json return_GxtePVN=json({});
    return serialize_VkCoarseSampleLocationNV(name.pSampleLocations[NKMWUNv]);}();
            return_NKMWUNv["members"].push_back(temp);
        }
        return return_NKMWUNv;
        }();
return result;}

    VkCoarseSampleOrderCustomNV deserialize_VkCoarseSampleOrderCustomNV(json &name){
        auto result=VkCoarseSampleOrderCustomNV();
    
[&]() {
result.shadingRate=deserialize_VkShadingRatePaletteEntryNV(name["members"]["shadingRate"]);}();
[&]() {
result.sampleCount=deserialize_uint32_t(name["members"]["sampleCount"]);}();
[&]() {
result.sampleLocationCount=deserialize_uint32_t(name["members"]["sampleLocationCount"]);}();
[&]() {
VkCoarseSampleLocationNV* temp_zcuwRqM;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_zcuwRqM=NULL;
        return;
        }
    temp_zcuwRqM=(VkCoarseSampleLocationNV*)malloc(result.sampleLocationCount*sizeof(VkCoarseSampleLocationNV));
        for (int ktKwOCp=0; ktKwOCp < result.sampleLocationCount; ktKwOCp++){
            [&]() {
temp_zcuwRqM[ktKwOCp]=deserialize_VkCoarseSampleLocationNV(name["members"]["pSampleLocations"]["members"][ktKwOCp]);}();;
        }
        }();result.pSampleLocations=temp_zcuwRqM;}();
return result;}

    json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ktnDjvU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ohxmbve=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sampleOrderType"]=[&]() {
    json return_GATNYrm=json({});
    return serialize_VkCoarseSampleOrderTypeNV(name.sampleOrderType);}();
result["members"]["customSampleOrderCount"]=[&]() {
    json return_xZfdHub=json({});
    return serialize_uint32_t(name.customSampleOrderCount);}();
result["members"]["pCustomSampleOrders"]=[&]() {
    json return_OLtfrcz=json({});
    
        if (name.pCustomSampleOrders==NULL){
            return_OLtfrcz["null"]=true;
            return return_OLtfrcz;
        }
        
        return_OLtfrcz["members"]={};
        for(int OLtfrcz=0; OLtfrcz < name.customSampleOrderCount; OLtfrcz++){
            json temp;
            temp=[&]() {
    json return_WevEkmJ=json({});
    return serialize_VkCoarseSampleOrderCustomNV(name.pCustomSampleOrders[OLtfrcz]);}();
            return_OLtfrcz["members"].push_back(temp);
        }
        return return_OLtfrcz;
        }();
return result;}

    VkPipelineViewportCoarseSampleOrderStateCreateInfoNV deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(json &name){
        auto result=VkPipelineViewportCoarseSampleOrderStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_aNvSBRD;[&]() {
temp_aNvSBRD=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_aNvSBRD;}();
[&]() {
result.sampleOrderType=deserialize_VkCoarseSampleOrderTypeNV(name["members"]["sampleOrderType"]);}();
[&]() {
result.customSampleOrderCount=deserialize_uint32_t(name["members"]["customSampleOrderCount"]);}();
[&]() {
VkCoarseSampleOrderCustomNV* temp_uULAlhr;[&]() {

        if (name["members"]["pCustomSampleOrders"].contains("null")){
        temp_uULAlhr=NULL;
        return;
        }
    temp_uULAlhr=(VkCoarseSampleOrderCustomNV*)malloc(result.customSampleOrderCount*sizeof(VkCoarseSampleOrderCustomNV));
        for (int aoggFXh=0; aoggFXh < result.customSampleOrderCount; aoggFXh++){
            [&]() {
temp_uULAlhr[aoggFXh]=deserialize_VkCoarseSampleOrderCustomNV(name["members"]["pCustomSampleOrders"]["members"][aoggFXh]);}();;
        }
        }();result.pCustomSampleOrders=temp_uULAlhr;}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesNV(VkPhysicalDeviceMeshShaderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WgzWDDy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["taskShader"]=[&]() {
    json return_WczyQHG=json({});
    return_WczyQHG=[&]() {
    json return_uULPDuW=json({});
    return serialize_uint32_t(name.taskShader);}();return return_WczyQHG;}();
result["members"]["meshShader"]=[&]() {
    json return_wZtSbiJ=json({});
    return_wZtSbiJ=[&]() {
    json return_takTpSh=json({});
    return serialize_uint32_t(name.meshShader);}();return return_wZtSbiJ;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesNV deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(json &name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesNV(VkPhysicalDeviceMeshShaderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ltJyqVP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxDrawMeshTasksCount"]=[&]() {
    json return_VdkJWXd=json({});
    return serialize_uint32_t(name.maxDrawMeshTasksCount);}();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_pRDAIRo=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_ahGQMet=json({});
    
        return_ahGQMet["members"]={};
        for(int ahGQMet=0; ahGQMet < 3; ahGQMet++){
            json temp;
            temp=[&]() {
    json return_OBdrTGj=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[ahGQMet]);}();
            return_ahGQMet["members"].push_back(temp);
        }
        return return_ahGQMet;
        }();
result["members"]["maxTaskTotalMemorySize"]=[&]() {
    json return_typGicg=json({});
    return serialize_uint32_t(name.maxTaskTotalMemorySize);}();
result["members"]["maxTaskOutputCount"]=[&]() {
    json return_hWkXPUk=json({});
    return serialize_uint32_t(name.maxTaskOutputCount);}();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_osXyimM=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_DtUUKIw=json({});
    
        return_DtUUKIw["members"]={};
        for(int DtUUKIw=0; DtUUKIw < 3; DtUUKIw++){
            json temp;
            temp=[&]() {
    json return_NakcAbO=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[DtUUKIw]);}();
            return_DtUUKIw["members"].push_back(temp);
        }
        return return_DtUUKIw;
        }();
result["members"]["maxMeshTotalMemorySize"]=[&]() {
    json return_BQgjUqv=json({});
    return serialize_uint32_t(name.maxMeshTotalMemorySize);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_ZmBAZwU=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_UidhnHC=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_MgxARdz=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_MLdCVTB=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_vXPTxqg=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesNV deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(json &name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxDrawMeshTasksCount=deserialize_uint32_t(name["members"]["maxDrawMeshTasksCount"]);}();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int HxkoIru=0; HxkoIru < 3; HxkoIru++){
            [&]() {
result.maxTaskWorkGroupSize[HxkoIru]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][HxkoIru]);}();;
        }
        }();
[&]() {
result.maxTaskTotalMemorySize=deserialize_uint32_t(name["members"]["maxTaskTotalMemorySize"]);}();
[&]() {
result.maxTaskOutputCount=deserialize_uint32_t(name["members"]["maxTaskOutputCount"]);}();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int EBWSGlc=0; EBWSGlc < 3; EBWSGlc++){
            [&]() {
result.maxMeshWorkGroupSize[EBWSGlc]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][EBWSGlc]);}();;
        }
        }();
[&]() {
result.maxMeshTotalMemorySize=deserialize_uint32_t(name["members"]["maxMeshTotalMemorySize"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandNV(VkDrawMeshTasksIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["taskCount"]=[&]() {
    json return_swuHAHz=json({});
    return serialize_uint32_t(name.taskCount);}();
result["members"]["firstTask"]=[&]() {
    json return_wxWTLfA=json({});
    return serialize_uint32_t(name.firstTask);}();
return result;}

    VkDrawMeshTasksIndirectCommandNV deserialize_VkDrawMeshTasksIndirectCommandNV(json &name){
        auto result=VkDrawMeshTasksIndirectCommandNV();
    
[&]() {
result.taskCount=deserialize_uint32_t(name["members"]["taskCount"]);}();
[&]() {
result.firstTask=deserialize_uint32_t(name["members"]["firstTask"]);}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(VkPhysicalDeviceMeshShaderFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gOugEdm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["taskShader"]=[&]() {
    json return_WczyQHG=json({});
    return_WczyQHG=[&]() {
    json return_uULPDuW=json({});
    return serialize_uint32_t(name.taskShader);}();return return_WczyQHG;}();
result["members"]["meshShader"]=[&]() {
    json return_kFkZYxU=json({});
    return_kFkZYxU=[&]() {
    json return_obADips=json({});
    return serialize_uint32_t(name.meshShader);}();return return_kFkZYxU;}();
result["members"]["multiviewMeshShader"]=[&]() {
    json return_DgIQXdr=json({});
    return_DgIQXdr=[&]() {
    json return_XoXRcpg=json({});
    return serialize_uint32_t(name.multiviewMeshShader);}();return return_DgIQXdr;}();
result["members"]["primitiveFragmentShadingRateMeshShader"]=[&]() {
    json return_qUSQJEO=json({});
    return_qUSQJEO=[&]() {
    json return_nOtNeUP=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateMeshShader);}();return return_qUSQJEO;}();
result["members"]["meshShaderQueries"]=[&]() {
    json return_vMInEcT=json({});
    return_vMInEcT=[&]() {
    json return_pNMzDAj=json({});
    return serialize_uint32_t(name.meshShaderQueries);}();return return_vMInEcT;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesEXT deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
[&]() {
[&]() {
result.multiviewMeshShader=deserialize_uint32_t(name["members"]["multiviewMeshShader"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateMeshShader=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateMeshShader"]);}();}();
[&]() {
[&]() {
result.meshShaderQueries=deserialize_uint32_t(name["members"]["meshShaderQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(VkPhysicalDeviceMeshShaderPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GTmJZpe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxTaskWorkGroupTotalCount"]=[&]() {
    json return_pUpjFeX=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupTotalCount);}();
result["members"]["maxTaskWorkGroupCount"]=[&]() {
    json return_HiUgIGp=json({});
    
        return_HiUgIGp["members"]={};
        for(int HiUgIGp=0; HiUgIGp < 3; HiUgIGp++){
            json temp;
            temp=[&]() {
    json return_pzpVXTm=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupCount[HiUgIGp]);}();
            return_HiUgIGp["members"].push_back(temp);
        }
        return return_HiUgIGp;
        }();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_pRDAIRo=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_ahGQMet=json({});
    
        return_ahGQMet["members"]={};
        for(int ahGQMet=0; ahGQMet < 3; ahGQMet++){
            json temp;
            temp=[&]() {
    json return_OBdrTGj=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[ahGQMet]);}();
            return_ahGQMet["members"].push_back(temp);
        }
        return return_ahGQMet;
        }();
result["members"]["maxTaskPayloadSize"]=[&]() {
    json return_oydrFUw=json({});
    return serialize_uint32_t(name.maxTaskPayloadSize);}();
result["members"]["maxTaskSharedMemorySize"]=[&]() {
    json return_borOcPX=json({});
    return serialize_uint32_t(name.maxTaskSharedMemorySize);}();
result["members"]["maxTaskPayloadAndSharedMemorySize"]=[&]() {
    json return_bngWcxj=json({});
    return serialize_uint32_t(name.maxTaskPayloadAndSharedMemorySize);}();
result["members"]["maxMeshWorkGroupTotalCount"]=[&]() {
    json return_SXKKtcP=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupTotalCount);}();
result["members"]["maxMeshWorkGroupCount"]=[&]() {
    json return_WwVyiDO=json({});
    
        return_WwVyiDO["members"]={};
        for(int WwVyiDO=0; WwVyiDO < 3; WwVyiDO++){
            json temp;
            temp=[&]() {
    json return_HxWpidi=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupCount[WwVyiDO]);}();
            return_WwVyiDO["members"].push_back(temp);
        }
        return return_WwVyiDO;
        }();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_osXyimM=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_DtUUKIw=json({});
    
        return_DtUUKIw["members"]={};
        for(int DtUUKIw=0; DtUUKIw < 3; DtUUKIw++){
            json temp;
            temp=[&]() {
    json return_NakcAbO=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[DtUUKIw]);}();
            return_DtUUKIw["members"].push_back(temp);
        }
        return return_DtUUKIw;
        }();
result["members"]["maxMeshSharedMemorySize"]=[&]() {
    json return_AMNXXTK=json({});
    return serialize_uint32_t(name.maxMeshSharedMemorySize);}();
result["members"]["maxMeshPayloadAndSharedMemorySize"]=[&]() {
    json return_cLFBVae=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndSharedMemorySize);}();
result["members"]["maxMeshOutputMemorySize"]=[&]() {
    json return_szyzYvB=json({});
    return serialize_uint32_t(name.maxMeshOutputMemorySize);}();
result["members"]["maxMeshPayloadAndOutputMemorySize"]=[&]() {
    json return_GrJTDRa=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndOutputMemorySize);}();
result["members"]["maxMeshOutputComponents"]=[&]() {
    json return_KcTcGig=json({});
    return serialize_uint32_t(name.maxMeshOutputComponents);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_ZmBAZwU=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_UidhnHC=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshOutputLayers"]=[&]() {
    json return_OChsDEl=json({});
    return serialize_uint32_t(name.maxMeshOutputLayers);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_MgxARdz=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_MLdCVTB=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_WsrYBAa=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
result["members"]["maxPreferredTaskWorkGroupInvocations"]=[&]() {
    json return_Jstklpu=json({});
    return serialize_uint32_t(name.maxPreferredTaskWorkGroupInvocations);}();
result["members"]["maxPreferredMeshWorkGroupInvocations"]=[&]() {
    json return_zQpZjTR=json({});
    return serialize_uint32_t(name.maxPreferredMeshWorkGroupInvocations);}();
result["members"]["prefersLocalInvocationVertexOutput"]=[&]() {
    json return_dEGGcvC=json({});
    return_dEGGcvC=[&]() {
    json return_nMjgJhX=json({});
    return serialize_uint32_t(name.prefersLocalInvocationVertexOutput);}();return return_dEGGcvC;}();
result["members"]["prefersLocalInvocationPrimitiveOutput"]=[&]() {
    json return_FcVktkO=json({});
    return_FcVktkO=[&]() {
    json return_pzRzqEM=json({});
    return serialize_uint32_t(name.prefersLocalInvocationPrimitiveOutput);}();return return_FcVktkO;}();
result["members"]["prefersCompactVertexOutput"]=[&]() {
    json return_afrhkKl=json({});
    return_afrhkKl=[&]() {
    json return_uopBsvw=json({});
    return serialize_uint32_t(name.prefersCompactVertexOutput);}();return return_afrhkKl;}();
result["members"]["prefersCompactPrimitiveOutput"]=[&]() {
    json return_swGYepY=json({});
    return_swGYepY=[&]() {
    json return_jPsanGq=json({});
    return serialize_uint32_t(name.prefersCompactPrimitiveOutput);}();return return_swGYepY;}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesEXT deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxTaskWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxTaskWorkGroupTotalCount"]);}();
[&]() {

        for (int pQJSDKC=0; pQJSDKC < 3; pQJSDKC++){
            [&]() {
result.maxTaskWorkGroupCount[pQJSDKC]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupCount"]["members"][pQJSDKC]);}();;
        }
        }();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int HxkoIru=0; HxkoIru < 3; HxkoIru++){
            [&]() {
result.maxTaskWorkGroupSize[HxkoIru]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][HxkoIru]);}();;
        }
        }();
[&]() {
result.maxTaskPayloadSize=deserialize_uint32_t(name["members"]["maxTaskPayloadSize"]);}();
[&]() {
result.maxTaskSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskSharedMemorySize"]);}();
[&]() {
result.maxTaskPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxMeshWorkGroupTotalCount"]);}();
[&]() {

        for (int DcpEeVw=0; DcpEeVw < 3; DcpEeVw++){
            [&]() {
result.maxMeshWorkGroupCount[DcpEeVw]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupCount"]["members"][DcpEeVw]);}();;
        }
        }();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int EBWSGlc=0; EBWSGlc < 3; EBWSGlc++){
            [&]() {
result.maxMeshWorkGroupSize[EBWSGlc]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][EBWSGlc]);}();;
        }
        }();
[&]() {
result.maxMeshSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshSharedMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshOutputMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndOutputMemorySize"]);}();
[&]() {
result.maxMeshOutputComponents=deserialize_uint32_t(name["members"]["maxMeshOutputComponents"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshOutputLayers=deserialize_uint32_t(name["members"]["maxMeshOutputLayers"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
[&]() {
result.maxPreferredTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredTaskWorkGroupInvocations"]);}();
[&]() {
result.maxPreferredMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredMeshWorkGroupInvocations"]);}();
[&]() {
[&]() {
result.prefersLocalInvocationVertexOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersLocalInvocationPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationPrimitiveOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactVertexOutput=deserialize_uint32_t(name["members"]["prefersCompactVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersCompactPrimitiveOutput"]);}();}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandEXT(VkDrawMeshTasksIndirectCommandEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupCountX"]=[&]() {
    json return_gKoLtGv=json({});
    return serialize_uint32_t(name.groupCountX);}();
result["members"]["groupCountY"]=[&]() {
    json return_GbPwJGv=json({});
    return serialize_uint32_t(name.groupCountY);}();
result["members"]["groupCountZ"]=[&]() {
    json return_vJihLWT=json({});
    return serialize_uint32_t(name.groupCountZ);}();
return result;}

    VkDrawMeshTasksIndirectCommandEXT deserialize_VkDrawMeshTasksIndirectCommandEXT(json &name){
        auto result=VkDrawMeshTasksIndirectCommandEXT();
    
[&]() {
result.groupCountX=deserialize_uint32_t(name["members"]["groupCountX"]);}();
[&]() {
result.groupCountY=deserialize_uint32_t(name["members"]["groupCountY"]);}();
[&]() {
result.groupCountZ=deserialize_uint32_t(name["members"]["groupCountZ"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoNV(VkRayTracingShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EPoAXkQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_AHuoGdH=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_YgUPPgZ=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_vBIFYcq=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_WFBcesh=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_vDxPPtc=json({});
    return serialize_uint32_t(name.intersectionShader);}();
return result;}

    VkRayTracingShaderGroupCreateInfoNV deserialize_VkRayTracingShaderGroupCreateInfoNV(json &name){
        auto result=VkRayTracingShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoKHR(VkRayTracingShaderGroupCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AVLCSpc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_AHuoGdH=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_YgUPPgZ=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_vBIFYcq=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_WFBcesh=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_jjvooKU=json({});
    return serialize_uint32_t(name.intersectionShader);}();
result["members"]["pShaderGroupCaptureReplayHandle"]=[&]() {
    json return_UmDTVQd=json({});
    
        if (name.pShaderGroupCaptureReplayHandle==NULL){
            return_UmDTVQd["null"]=true;
            return return_UmDTVQd;
        }
        return_UmDTVQd=[&]() {
    json return_rpRZyrg=json({});
    
        if (((char*)(name.pShaderGroupCaptureReplayHandle))==NULL){
            return_rpRZyrg["null"]=true;
            return return_rpRZyrg;
        }
        
        return_rpRZyrg["members"]={};
        for(int rpRZyrg=0; rpRZyrg < strlen(((char*)(name.pShaderGroupCaptureReplayHandle)))+1; rpRZyrg++){
            json temp;
            temp=[&]() {
    json return_JotasJU=json({});
    return serialize_char(((char*)(name.pShaderGroupCaptureReplayHandle))[rpRZyrg]);}();
            return_rpRZyrg["members"].push_back(temp);
        }
        return return_rpRZyrg;
        }();return return_UmDTVQd;}();
return result;}

    VkRayTracingShaderGroupCreateInfoKHR deserialize_VkRayTracingShaderGroupCreateInfoKHR(json &name){
        auto result=VkRayTracingShaderGroupCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
[&]() {
void* temp_qUMgBJc;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_qUMgBJc=NULL;
        return;
        }
    char* temp_kGJzFrw;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_kGJzFrw=NULL;
        return;
        }
    temp_kGJzFrw=(char*)malloc(name["members"]["pShaderGroupCaptureReplayHandle"]["members"].size()*sizeof(char));
        for (int GbvfLuc=0; GbvfLuc < name["members"]["pShaderGroupCaptureReplayHandle"]["members"].size(); GbvfLuc++){
            [&]() {
temp_kGJzFrw[GbvfLuc]=deserialize_char(name["members"]["pShaderGroupCaptureReplayHandle"]["members"][GbvfLuc]);}();;
        }
        }();temp_qUMgBJc=(void*)temp_kGJzFrw;
}();result.pShaderGroupCaptureReplayHandle=temp_qUMgBJc;}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoNV(VkRayTracingPipelineCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LyygrrH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_uwRslpd=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_qtowXuS=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_ysyNzRE=json({});
    
        if (name.pStages==NULL){
            return_ysyNzRE["null"]=true;
            return return_ysyNzRE;
        }
        
        return_ysyNzRE["members"]={};
        for(int ysyNzRE=0; ysyNzRE < name.stageCount; ysyNzRE++){
            json temp;
            temp=[&]() {
    json return_kdBeuvH=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[ysyNzRE]);}();
            return_ysyNzRE["members"].push_back(temp);
        }
        return return_ysyNzRE;
        }();
result["members"]["groupCount"]=[&]() {
    json return_xuDTKVT=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_pKPhiFZ=json({});
    
        if (name.pGroups==NULL){
            return_pKPhiFZ["null"]=true;
            return return_pKPhiFZ;
        }
        
        return_pKPhiFZ["members"]={};
        for(int pKPhiFZ=0; pKPhiFZ < name.groupCount; pKPhiFZ++){
            json temp;
            temp=[&]() {
    json return_qncpVbL=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(name.pGroups[pKPhiFZ]);}();
            return_pKPhiFZ["members"].push_back(temp);
        }
        return return_pKPhiFZ;
        }();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_IWYiGLk=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["layout"]=[&]() {
    json return_EnxCiqv=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_mzQMqce=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_qTbPAQN=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoNV deserialize_VkRayTracingPipelineCreateInfoNV(json &name){
        auto result=VkRayTracingPipelineCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_jfWNNWL;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_jfWNNWL=NULL;
        return;
        }
    temp_jfWNNWL=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int jGQFgKI=0; jGQFgKI < result.stageCount; jGQFgKI++){
            [&]() {
temp_jfWNNWL[jGQFgKI]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][jGQFgKI]);}();;
        }
        }();result.pStages=temp_jfWNNWL;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoNV* temp_sEValAo;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_sEValAo=NULL;
        return;
        }
    temp_sEValAo=(VkRayTracingShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoNV));
        for (int SbBCnzC=0; SbBCnzC < result.groupCount; SbBCnzC++){
            [&]() {
temp_sEValAo[SbBCnzC]=deserialize_VkRayTracingShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][SbBCnzC]);}();;
        }
        }();result.pGroups=temp_sEValAo;}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoKHR(VkRayTracingPipelineCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ebRIRiY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_uwRslpd=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_EacaIqK=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_ysyNzRE=json({});
    
        if (name.pStages==NULL){
            return_ysyNzRE["null"]=true;
            return return_ysyNzRE;
        }
        
        return_ysyNzRE["members"]={};
        for(int ysyNzRE=0; ysyNzRE < name.stageCount; ysyNzRE++){
            json temp;
            temp=[&]() {
    json return_kdBeuvH=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[ysyNzRE]);}();
            return_ysyNzRE["members"].push_back(temp);
        }
        return return_ysyNzRE;
        }();
result["members"]["groupCount"]=[&]() {
    json return_hFYmPMO=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_rnVjqff=json({});
    
        if (name.pGroups==NULL){
            return_rnVjqff["null"]=true;
            return return_rnVjqff;
        }
        
        return_rnVjqff["members"]={};
        for(int rnVjqff=0; rnVjqff < name.groupCount; rnVjqff++){
            json temp;
            temp=[&]() {
    json return_leKUcLk=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(name.pGroups[rnVjqff]);}();
            return_rnVjqff["members"].push_back(temp);
        }
        return return_rnVjqff;
        }();
result["members"]["maxPipelineRayRecursionDepth"]=[&]() {
    json return_bNuXpIM=json({});
    return serialize_uint32_t(name.maxPipelineRayRecursionDepth);}();
result["members"]["pLibraryInfo"]=[&]() {
    json return_XKxSWbN=json({});
    
        if (name.pLibraryInfo==NULL){
            return_XKxSWbN["null"]=true;
            return return_XKxSWbN;
        }
        return_XKxSWbN=[&]() {
    json return_gEHLXlI=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*name.pLibraryInfo);}();
return return_XKxSWbN;}();
result["members"]["pLibraryInterface"]=[&]() {
    json return_HwHTXLw=json({});
    
        if (name.pLibraryInterface==NULL){
            return_HwHTXLw["null"]=true;
            return return_HwHTXLw;
        }
        return_HwHTXLw=[&]() {
    json return_IvIYJBN=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*name.pLibraryInterface);}();
return return_HwHTXLw;}();
result["members"]["pDynamicState"]=[&]() {
    json return_UPekLXx=json({});
    
        if (name.pDynamicState==NULL){
            return_UPekLXx["null"]=true;
            return return_UPekLXx;
        }
        return_UPekLXx=[&]() {
    json return_FdIYQxL=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_UPekLXx;}();
result["members"]["layout"]=[&]() {
    json return_EnxCiqv=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_mzQMqce=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_qTbPAQN=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoKHR deserialize_VkRayTracingPipelineCreateInfoKHR(json &name){
        auto result=VkRayTracingPipelineCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_jfWNNWL;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_jfWNNWL=NULL;
        return;
        }
    temp_jfWNNWL=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int jGQFgKI=0; jGQFgKI < result.stageCount; jGQFgKI++){
            [&]() {
temp_jfWNNWL[jGQFgKI]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][jGQFgKI]);}();;
        }
        }();result.pStages=temp_jfWNNWL;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoKHR* temp_BNOqMIa;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_BNOqMIa=NULL;
        return;
        }
    temp_BNOqMIa=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoKHR));
        for (int HBXeXsu=0; HBXeXsu < result.groupCount; HBXeXsu++){
            [&]() {
temp_BNOqMIa[HBXeXsu]=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name["members"]["pGroups"]["members"][HBXeXsu]);}();;
        }
        }();result.pGroups=temp_BNOqMIa;}();
[&]() {
result.maxPipelineRayRecursionDepth=deserialize_uint32_t(name["members"]["maxPipelineRayRecursionDepth"]);}();
[&]() {
VkPipelineLibraryCreateInfoKHR* temp_pHQgUCh;[&]() {

        if (name["members"]["pLibraryInfo"].contains("null")){
        temp_pHQgUCh=NULL;
        return;
        }
    temp_pHQgUCh=(VkPipelineLibraryCreateInfoKHR*)malloc(sizeof(VkPipelineLibraryCreateInfoKHR));
[&]() {
*(temp_pHQgUCh)=deserialize_VkPipelineLibraryCreateInfoKHR(name["members"]["pLibraryInfo"]);}();
}();result.pLibraryInfo=temp_pHQgUCh;}();
[&]() {
VkRayTracingPipelineInterfaceCreateInfoKHR* temp_SpaCqhH;[&]() {

        if (name["members"]["pLibraryInterface"].contains("null")){
        temp_SpaCqhH=NULL;
        return;
        }
    temp_SpaCqhH=(VkRayTracingPipelineInterfaceCreateInfoKHR*)malloc(sizeof(VkRayTracingPipelineInterfaceCreateInfoKHR));
[&]() {
*(temp_SpaCqhH)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name["members"]["pLibraryInterface"]);}();
}();result.pLibraryInterface=temp_SpaCqhH;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_wCqqLuf;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_wCqqLuf=NULL;
        return;
        }
    temp_wCqqLuf=(VkPipelineDynamicStateCreateInfo*)malloc(sizeof(VkPipelineDynamicStateCreateInfo));
[&]() {
*(temp_wCqqLuf)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_wCqqLuf;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkGeometryTrianglesNV(VkGeometryTrianglesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DmvjPFt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vertexData"]=[&]() {
    json return_EbDuUry=json({});
    return serialize_VkBuffer(name.vertexData);}();
result["members"]["vertexOffset"]=[&]() {
    json return_Qanknib=json({});
    return_Qanknib=[&]() {
    json return_CJfJJts=json({});
    return serialize_uint64_t(name.vertexOffset);}();return return_Qanknib;}();
result["members"]["vertexCount"]=[&]() {
    json return_NPXAAYm=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["vertexStride"]=[&]() {
    json return_LFqShAf=json({});
    return_LFqShAf=[&]() {
    json return_vArJkkw=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_LFqShAf;}();
result["members"]["vertexFormat"]=[&]() {
    json return_IMeXpvN=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["indexData"]=[&]() {
    json return_aCXrdOK=json({});
    return serialize_VkBuffer(name.indexData);}();
result["members"]["indexOffset"]=[&]() {
    json return_zwpGPpE=json({});
    return_zwpGPpE=[&]() {
    json return_SxUGzhn=json({});
    return serialize_uint64_t(name.indexOffset);}();return return_zwpGPpE;}();
result["members"]["indexCount"]=[&]() {
    json return_FMSgTHZ=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["indexType"]=[&]() {
    json return_qampjvh=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["transformData"]=[&]() {
    json return_WsnzLMq=json({});
    return serialize_VkBuffer(name.transformData);}();
result["members"]["transformOffset"]=[&]() {
    json return_JWaXHAw=json({});
    return_JWaXHAw=[&]() {
    json return_bgNUryB=json({});
    return serialize_uint64_t(name.transformOffset);}();return return_JWaXHAw;}();
return result;}

    VkGeometryTrianglesNV deserialize_VkGeometryTrianglesNV(json &name){
        auto result=VkGeometryTrianglesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.vertexData=deserialize_VkBuffer(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexOffset=deserialize_uint64_t(name["members"]["vertexOffset"]);}();}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.indexData=deserialize_VkBuffer(name["members"]["indexData"]);}();
[&]() {
[&]() {
result.indexOffset=deserialize_uint64_t(name["members"]["indexOffset"]);}();}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.transformData=deserialize_VkBuffer(name["members"]["transformData"]);}();
[&]() {
[&]() {
result.transformOffset=deserialize_uint64_t(name["members"]["transformOffset"]);}();}();
return result;}

    json serialize_VkGeometryAABBNV(VkGeometryAABBNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YYidydS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["aabbData"]=[&]() {
    json return_cAZgvkM=json({});
    return serialize_VkBuffer(name.aabbData);}();
result["members"]["numAABBs"]=[&]() {
    json return_wOGNldL=json({});
    return serialize_uint32_t(name.numAABBs);}();
result["members"]["stride"]=[&]() {
    json return_cRYLIBC=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["offset"]=[&]() {
    json return_TQlSbEN=json({});
    return_TQlSbEN=[&]() {
    json return_LIskGlf=json({});
    return serialize_uint64_t(name.offset);}();return return_TQlSbEN;}();
return result;}

    VkGeometryAABBNV deserialize_VkGeometryAABBNV(json &name){
        auto result=VkGeometryAABBNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.aabbData=deserialize_VkBuffer(name["members"]["aabbData"]);}();
[&]() {
result.numAABBs=deserialize_uint32_t(name["members"]["numAABBs"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkGeometryDataNV(VkGeometryDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_JexZUQD=json({});
    return serialize_VkGeometryTrianglesNV(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_LOTXoKs=json({});
    return serialize_VkGeometryAABBNV(name.aabbs);}();
return result;}

    VkGeometryDataNV deserialize_VkGeometryDataNV(json &name){
        auto result=VkGeometryDataNV();
    
[&]() {
result.triangles=deserialize_VkGeometryTrianglesNV(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkGeometryAABBNV(name["members"]["aabbs"]);}();
return result;}

    json serialize_VkGeometryNV(VkGeometryNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BweVIqH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aKTpvlZ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["geometryType"]=[&]() {
    json return_poxlpHb=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_QmnMTaZ=json({});
    return serialize_VkGeometryDataNV(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_SmdJLGX=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkGeometryNV deserialize_VkGeometryNV(json &name){
        auto result=VkGeometryNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_veugGRF;[&]() {
temp_veugGRF=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_veugGRF;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkGeometryDataNV(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureInfoNV(VkAccelerationStructureInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AvYIEoQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_OnjvvNS=json({});
    return serialize_VkAccelerationStructureTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_rxVOaOr=json({});
    return serialize_VkBuildAccelerationStructureFlagsNV(name.flags);}();
result["members"]["instanceCount"]=[&]() {
    json return_hAEWdlQ=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["geometryCount"]=[&]() {
    json return_rlSptRo=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_cQcsPcz=json({});
    
        if (name.pGeometries==NULL){
            return_cQcsPcz["null"]=true;
            return return_cQcsPcz;
        }
        
        return_cQcsPcz["members"]={};
        for(int cQcsPcz=0; cQcsPcz < name.geometryCount; cQcsPcz++){
            json temp;
            temp=[&]() {
    json return_BiYLktG=json({});
    return serialize_VkGeometryNV(name.pGeometries[cQcsPcz]);}();
            return_cQcsPcz["members"].push_back(temp);
        }
        return return_cQcsPcz;
        }();
return result;}

    VkAccelerationStructureInfoNV deserialize_VkAccelerationStructureInfoNV(json &name){
        auto result=VkAccelerationStructureInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsNV(name["members"]["flags"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkGeometryNV* temp_seLZRde;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_seLZRde=NULL;
        return;
        }
    temp_seLZRde=(VkGeometryNV*)malloc(result.geometryCount*sizeof(VkGeometryNV));
        for (int nzMJfJP=0; nzMJfJP < result.geometryCount; nzMJfJP++){
            [&]() {
temp_seLZRde[nzMJfJP]=deserialize_VkGeometryNV(name["members"]["pGeometries"]["members"][nzMJfJP]);}();;
        }
        }();result.pGeometries=temp_seLZRde;}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoNV(VkAccelerationStructureCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sdseYfh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["compactedSize"]=[&]() {
    json return_JWbgNLb=json({});
    return_JWbgNLb=[&]() {
    json return_LPKVXcb=json({});
    return serialize_uint64_t(name.compactedSize);}();return return_JWbgNLb;}();
result["members"]["info"]=[&]() {
    json return_kgmAOse=json({});
    return serialize_VkAccelerationStructureInfoNV(name.info);}();
return result;}

    VkAccelerationStructureCreateInfoNV deserialize_VkAccelerationStructureCreateInfoNV(json &name){
        auto result=VkAccelerationStructureCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
[&]() {
result.compactedSize=deserialize_uint64_t(name["members"]["compactedSize"]);}();}();
[&]() {
result.info=deserialize_VkAccelerationStructureInfoNV(name["members"]["info"]);}();
return result;}

    json serialize_VkBindAccelerationStructureMemoryInfoNV(VkBindAccelerationStructureMemoryInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NeJgSzo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pFjYjfs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_LovqTrl=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
result["members"]["memory"]=[&]() {
    json return_ldnsFBJ=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_PNDSbaP=json({});
    return_PNDSbaP=[&]() {
    json return_KUviSZu=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_PNDSbaP;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_DHTxeQK=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_hwVfQQr=json({});
    
        if (name.pDeviceIndices==NULL){
            return_hwVfQQr["null"]=true;
            return return_hwVfQQr;
        }
        
        return_hwVfQQr["members"]={};
        for(int hwVfQQr=0; hwVfQQr < name.deviceIndexCount; hwVfQQr++){
            json temp;
            temp=[&]() {
    json return_aYLpPqH=json({});
    return serialize_uint32_t(name.pDeviceIndices[hwVfQQr]);}();
            return_hwVfQQr["members"].push_back(temp);
        }
        return return_hwVfQQr;
        }();
return result;}

    VkBindAccelerationStructureMemoryInfoNV deserialize_VkBindAccelerationStructureMemoryInfoNV(json &name){
        auto result=VkBindAccelerationStructureMemoryInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qSwiNsk;[&]() {
temp_qSwiNsk=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qSwiNsk;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_pKsOUEb;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_pKsOUEb=NULL;
        return;
        }
    temp_pKsOUEb=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int dPtwtOH=0; dPtwtOH < result.deviceIndexCount; dPtwtOH++){
            [&]() {
temp_pKsOUEb[dPtwtOH]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][dPtwtOH]);}();;
        }
        }();result.pDeviceIndices=temp_pKsOUEb;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureKHR(VkWriteDescriptorSetAccelerationStructureKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZPzBOWj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_CgtUfCB=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_LQIaVVU=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_LQIaVVU["null"]=true;
            return return_LQIaVVU;
        }
        
        return_LQIaVVU["members"]={};
        for(int LQIaVVU=0; LQIaVVU < name.accelerationStructureCount; LQIaVVU++){
            json temp;
            temp=[&]() {
    json return_mUVZwmd=json({});
    return serialize_VkAccelerationStructureKHR(name.pAccelerationStructures[LQIaVVU]);}();
            return_LQIaVVU["members"].push_back(temp);
        }
        return return_LQIaVVU;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureKHR deserialize_VkWriteDescriptorSetAccelerationStructureKHR(json &name){
        auto result=VkWriteDescriptorSetAccelerationStructureKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureKHR* temp_TeItGOL;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_TeItGOL=NULL;
        return;
        }
    temp_TeItGOL=(VkAccelerationStructureKHR*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureKHR));
        for (int XmNgppo=0; XmNgppo < result.accelerationStructureCount; XmNgppo++){
            [&]() {
temp_TeItGOL[XmNgppo]=deserialize_VkAccelerationStructureKHR(name["members"]["pAccelerationStructures"]["members"][XmNgppo]);}();;
        }
        }();result.pAccelerationStructures=temp_TeItGOL;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureNV(VkWriteDescriptorSetAccelerationStructureNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OCFORxb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DikCbxz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_CgtUfCB=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_dQiXYlJ=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_dQiXYlJ["null"]=true;
            return return_dQiXYlJ;
        }
        
        return_dQiXYlJ["members"]={};
        for(int dQiXYlJ=0; dQiXYlJ < name.accelerationStructureCount; dQiXYlJ++){
            json temp;
            temp=[&]() {
    json return_VKxzjYh=json({});
    return serialize_VkAccelerationStructureNV(name.pAccelerationStructures[dQiXYlJ]);}();
            return_dQiXYlJ["members"].push_back(temp);
        }
        return return_dQiXYlJ;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureNV deserialize_VkWriteDescriptorSetAccelerationStructureNV(json &name){
        auto result=VkWriteDescriptorSetAccelerationStructureNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_Rfdumjd;[&]() {
temp_Rfdumjd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_Rfdumjd;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureNV* temp_jpSekGN;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_jpSekGN=NULL;
        return;
        }
    temp_jpSekGN=(VkAccelerationStructureNV*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureNV));
        for (int dAwwNcj=0; dAwwNcj < result.accelerationStructureCount; dAwwNcj++){
            [&]() {
temp_jpSekGN[dAwwNcj]=deserialize_VkAccelerationStructureNV(name["members"]["pAccelerationStructures"]["members"][dAwwNcj]);}();;
        }
        }();result.pAccelerationStructures=temp_jpSekGN;}();
return result;}

    json serialize_VkAccelerationStructureMemoryRequirementsInfoNV(VkAccelerationStructureMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wsSxbtB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZPLIJJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_SyplJpA=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsTypeNV(name.type);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_rhtKZBq=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureMemoryRequirementsInfoNV deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(json &name){
        auto result=VkAccelerationStructureMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_kypMQGU;[&]() {
temp_kypMQGU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_kypMQGU;}();
[&]() {
result.type=deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(name["members"]["type"]);}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkPhysicalDeviceAccelerationStructureFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DQiuEXT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_iPKrarp=json({});
    return_iPKrarp=[&]() {
    json return_TeEJcuO=json({});
    return serialize_uint32_t(name.accelerationStructure);}();return return_iPKrarp;}();
result["members"]["accelerationStructureCaptureReplay"]=[&]() {
    json return_xQRYrlp=json({});
    return_xQRYrlp=[&]() {
    json return_QZjgzxk=json({});
    return serialize_uint32_t(name.accelerationStructureCaptureReplay);}();return return_xQRYrlp;}();
result["members"]["accelerationStructureIndirectBuild"]=[&]() {
    json return_uLIpaSl=json({});
    return_uLIpaSl=[&]() {
    json return_mKCHoIM=json({});
    return serialize_uint32_t(name.accelerationStructureIndirectBuild);}();return return_uLIpaSl;}();
result["members"]["accelerationStructureHostCommands"]=[&]() {
    json return_haiwYcb=json({});
    return_haiwYcb=[&]() {
    json return_VHSVEue=json({});
    return serialize_uint32_t(name.accelerationStructureHostCommands);}();return return_haiwYcb;}();
result["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]=[&]() {
    json return_sIxgjPm=json({});
    return_sIxgjPm=[&]() {
    json return_mnICfQf=json({});
    return serialize_uint32_t(name.descriptorBindingAccelerationStructureUpdateAfterBind);}();return return_sIxgjPm;}();
return result;}

    VkPhysicalDeviceAccelerationStructureFeaturesKHR deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceAccelerationStructureFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint32_t(name["members"]["accelerationStructure"]);}();}();
[&]() {
[&]() {
result.accelerationStructureCaptureReplay=deserialize_uint32_t(name["members"]["accelerationStructureCaptureReplay"]);}();}();
[&]() {
[&]() {
result.accelerationStructureIndirectBuild=deserialize_uint32_t(name["members"]["accelerationStructureIndirectBuild"]);}();}();
[&]() {
[&]() {
result.accelerationStructureHostCommands=deserialize_uint32_t(name["members"]["accelerationStructureHostCommands"]);}();}();
[&]() {
[&]() {
result.descriptorBindingAccelerationStructureUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkPhysicalDeviceRayTracingPipelineFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lGmnPjo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rayTracingPipeline"]=[&]() {
    json return_NSsbFGs=json({});
    return_NSsbFGs=[&]() {
    json return_hBYkvWh=json({});
    return serialize_uint32_t(name.rayTracingPipeline);}();return return_NSsbFGs;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]=[&]() {
    json return_inidSsB=json({});
    return_inidSsB=[&]() {
    json return_YPkrwtm=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplay);}();return return_inidSsB;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]=[&]() {
    json return_cSbPjlq=json({});
    return_cSbPjlq=[&]() {
    json return_NTIPBGm=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplayMixed);}();return return_cSbPjlq;}();
result["members"]["rayTracingPipelineTraceRaysIndirect"]=[&]() {
    json return_QyUsBSc=json({});
    return_QyUsBSc=[&]() {
    json return_gZotLgT=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect);}();return return_QyUsBSc;}();
result["members"]["rayTraversalPrimitiveCulling"]=[&]() {
    json return_SxmSygF=json({});
    return_SxmSygF=[&]() {
    json return_VyenifF=json({});
    return serialize_uint32_t(name.rayTraversalPrimitiveCulling);}();return return_SxmSygF;}();
return result;}

    VkPhysicalDeviceRayTracingPipelineFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceRayTracingPipelineFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rayTracingPipeline=deserialize_uint32_t(name["members"]["rayTracingPipeline"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplay=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplayMixed=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect"]);}();}();
[&]() {
[&]() {
result.rayTraversalPrimitiveCulling=deserialize_uint32_t(name["members"]["rayTraversalPrimitiveCulling"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayQueryFeaturesKHR(VkPhysicalDeviceRayQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FXsvbqb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rayQuery"]=[&]() {
    json return_iXGWNDt=json({});
    return_iXGWNDt=[&]() {
    json return_ZglLwwf=json({});
    return serialize_uint32_t(name.rayQuery);}();return return_iXGWNDt;}();
return result;}

    VkPhysicalDeviceRayQueryFeaturesKHR deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceRayQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rayQuery=deserialize_uint32_t(name["members"]["rayQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkPhysicalDeviceAccelerationStructurePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DMtSfJm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_KjqADDT=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_KZyFLsG=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxPrimitiveCount"]=[&]() {
    json return_RYdtLvd=json({});
    return serialize_uint64_t(name.maxPrimitiveCount);}();
result["members"]["maxPerStageDescriptorAccelerationStructures"]=[&]() {
    json return_ULESUzm=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorAccelerationStructures);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_uBqHrol=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindAccelerationStructures);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_VZfUMez=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
result["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_BZAoqOo=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindAccelerationStructures);}();
result["members"]["minAccelerationStructureScratchOffsetAlignment"]=[&]() {
    json return_YJiTUhR=json({});
    return serialize_uint32_t(name.minAccelerationStructureScratchOffsetAlignment);}();
return result;}

    VkPhysicalDeviceAccelerationStructurePropertiesKHR deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(json &name){
        auto result=VkPhysicalDeviceAccelerationStructurePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxPrimitiveCount=deserialize_uint64_t(name["members"]["maxPrimitiveCount"]);}();
[&]() {
result.maxPerStageDescriptorAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorAccelerationStructures"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.minAccelerationStructureScratchOffsetAlignment=deserialize_uint32_t(name["members"]["minAccelerationStructureScratchOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkPhysicalDeviceRayTracingPipelinePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QrmvAqC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_AGTYVwL=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRayRecursionDepth"]=[&]() {
    json return_WUPUVDt=json({});
    return serialize_uint32_t(name.maxRayRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_CvyCFWE=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_XvbPcRe=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["shaderGroupHandleCaptureReplaySize"]=[&]() {
    json return_wzcZBdm=json({});
    return serialize_uint32_t(name.shaderGroupHandleCaptureReplaySize);}();
result["members"]["maxRayDispatchInvocationCount"]=[&]() {
    json return_xIwTgOI=json({});
    return serialize_uint32_t(name.maxRayDispatchInvocationCount);}();
result["members"]["shaderGroupHandleAlignment"]=[&]() {
    json return_TEIRsbK=json({});
    return serialize_uint32_t(name.shaderGroupHandleAlignment);}();
result["members"]["maxRayHitAttributeSize"]=[&]() {
    json return_hddsRvM=json({});
    return serialize_uint32_t(name.maxRayHitAttributeSize);}();
return result;}

    VkPhysicalDeviceRayTracingPipelinePropertiesKHR deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(json &name){
        auto result=VkPhysicalDeviceRayTracingPipelinePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRayRecursionDepth=deserialize_uint32_t(name["members"]["maxRayRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.shaderGroupHandleCaptureReplaySize=deserialize_uint32_t(name["members"]["shaderGroupHandleCaptureReplaySize"]);}();
[&]() {
result.maxRayDispatchInvocationCount=deserialize_uint32_t(name["members"]["maxRayDispatchInvocationCount"]);}();
[&]() {
result.shaderGroupHandleAlignment=deserialize_uint32_t(name["members"]["shaderGroupHandleAlignment"]);}();
[&]() {
result.maxRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPropertiesNV(VkPhysicalDeviceRayTracingPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IuLDbTA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_AGTYVwL=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_odozxYy=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_CvyCFWE=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_XvbPcRe=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_KjqADDT=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_KZyFLsG=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxTriangleCount"]=[&]() {
    json return_btPNIbG=json({});
    return serialize_uint64_t(name.maxTriangleCount);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_QgCWwXL=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
return result;}

    VkPhysicalDeviceRayTracingPropertiesNV deserialize_VkPhysicalDeviceRayTracingPropertiesNV(json &name){
        auto result=VkPhysicalDeviceRayTracingPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxTriangleCount=deserialize_uint64_t(name["members"]["maxTriangleCount"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
return result;}

    json serialize_VkStridedDeviceAddressRegionKHR(VkStridedDeviceAddressRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_NnBWbOy=json({});
    return_NnBWbOy=[&]() {
    json return_XOfOeth=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_NnBWbOy;}();
result["members"]["stride"]=[&]() {
    json return_ASuWqpB=json({});
    return_ASuWqpB=[&]() {
    json return_TkArXNe=json({});
    return serialize_uint64_t(name.stride);}();return return_ASuWqpB;}();
result["members"]["size"]=[&]() {
    json return_lNgFJhS=json({});
    return_lNgFJhS=[&]() {
    json return_RmTIZzr=json({});
    return serialize_uint64_t(name.size);}();return return_lNgFJhS;}();
return result;}

    VkStridedDeviceAddressRegionKHR deserialize_VkStridedDeviceAddressRegionKHR(json &name){
        auto result=VkStridedDeviceAddressRegionKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkTraceRaysIndirectCommandKHR(VkTraceRaysIndirectCommandKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_fwSgSID=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_PPKTtcZ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_ZdrAvxM=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommandKHR deserialize_VkTraceRaysIndirectCommandKHR(json &name){
        auto result=VkTraceRaysIndirectCommandKHR();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkTraceRaysIndirectCommand2KHR(VkTraceRaysIndirectCommand2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["raygenShaderRecordAddress"]=[&]() {
    json return_DMmkcGx=json({});
    return_DMmkcGx=[&]() {
    json return_fjvqmEb=json({});
    return serialize_uint64_t(name.raygenShaderRecordAddress);}();return return_DMmkcGx;}();
result["members"]["raygenShaderRecordSize"]=[&]() {
    json return_MugHnxy=json({});
    return_MugHnxy=[&]() {
    json return_ZAMRcwn=json({});
    return serialize_uint64_t(name.raygenShaderRecordSize);}();return return_MugHnxy;}();
result["members"]["missShaderBindingTableAddress"]=[&]() {
    json return_kSJIuuh=json({});
    return_kSJIuuh=[&]() {
    json return_vTrhudm=json({});
    return serialize_uint64_t(name.missShaderBindingTableAddress);}();return return_kSJIuuh;}();
result["members"]["missShaderBindingTableSize"]=[&]() {
    json return_cvjItif=json({});
    return_cvjItif=[&]() {
    json return_iWGtLUT=json({});
    return serialize_uint64_t(name.missShaderBindingTableSize);}();return return_cvjItif;}();
result["members"]["missShaderBindingTableStride"]=[&]() {
    json return_NXiHiTf=json({});
    return_NXiHiTf=[&]() {
    json return_DYFhPTR=json({});
    return serialize_uint64_t(name.missShaderBindingTableStride);}();return return_NXiHiTf;}();
result["members"]["hitShaderBindingTableAddress"]=[&]() {
    json return_LNoFjQm=json({});
    return_LNoFjQm=[&]() {
    json return_aHcCCGE=json({});
    return serialize_uint64_t(name.hitShaderBindingTableAddress);}();return return_LNoFjQm;}();
result["members"]["hitShaderBindingTableSize"]=[&]() {
    json return_aqfhXyj=json({});
    return_aqfhXyj=[&]() {
    json return_yNuICyF=json({});
    return serialize_uint64_t(name.hitShaderBindingTableSize);}();return return_aqfhXyj;}();
result["members"]["hitShaderBindingTableStride"]=[&]() {
    json return_AVFFbzz=json({});
    return_AVFFbzz=[&]() {
    json return_NReyzpB=json({});
    return serialize_uint64_t(name.hitShaderBindingTableStride);}();return return_AVFFbzz;}();
result["members"]["callableShaderBindingTableAddress"]=[&]() {
    json return_EGJmdUy=json({});
    return_EGJmdUy=[&]() {
    json return_ZLUOXgn=json({});
    return serialize_uint64_t(name.callableShaderBindingTableAddress);}();return return_EGJmdUy;}();
result["members"]["callableShaderBindingTableSize"]=[&]() {
    json return_KByXPpN=json({});
    return_KByXPpN=[&]() {
    json return_BAijUeB=json({});
    return serialize_uint64_t(name.callableShaderBindingTableSize);}();return return_KByXPpN;}();
result["members"]["callableShaderBindingTableStride"]=[&]() {
    json return_MhcCfRp=json({});
    return_MhcCfRp=[&]() {
    json return_PSfDxDT=json({});
    return serialize_uint64_t(name.callableShaderBindingTableStride);}();return return_MhcCfRp;}();
result["members"]["width"]=[&]() {
    json return_fwSgSID=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_PPKTtcZ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_ZdrAvxM=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommand2KHR deserialize_VkTraceRaysIndirectCommand2KHR(json &name){
        auto result=VkTraceRaysIndirectCommand2KHR();
    
[&]() {
[&]() {
result.raygenShaderRecordAddress=deserialize_uint64_t(name["members"]["raygenShaderRecordAddress"]);}();}();
[&]() {
[&]() {
result.raygenShaderRecordSize=deserialize_uint64_t(name["members"]["raygenShaderRecordSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableAddress=deserialize_uint64_t(name["members"]["missShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableSize=deserialize_uint64_t(name["members"]["missShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableStride=deserialize_uint64_t(name["members"]["missShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableAddress=deserialize_uint64_t(name["members"]["hitShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableSize=deserialize_uint64_t(name["members"]["hitShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableStride=deserialize_uint64_t(name["members"]["hitShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableAddress=deserialize_uint64_t(name["members"]["callableShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableSize=deserialize_uint64_t(name["members"]["callableShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableStride=deserialize_uint64_t(name["members"]["callableShaderBindingTableStride"]);}();}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kzlfkFj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rayTracingMaintenance1"]=[&]() {
    json return_WQgCFZY=json({});
    return_WQgCFZY=[&]() {
    json return_HDHAOrx=json({});
    return serialize_uint32_t(name.rayTracingMaintenance1);}();return return_WQgCFZY;}();
result["members"]["rayTracingPipelineTraceRaysIndirect2"]=[&]() {
    json return_tJZQVKc=json({});
    return_tJZQVKc=[&]() {
    json return_neISalX=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect2);}();return return_tJZQVKc;}();
return result;}

    VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(json &name){
        auto result=VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rayTracingMaintenance1=deserialize_uint32_t(name["members"]["rayTracingMaintenance1"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect2=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect2"]);}();}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesListEXT(VkDrmFormatModifierPropertiesListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SGxabVE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_KtRQVzW=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_HgsevZt=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_HgsevZt["null"]=true;
            return return_HgsevZt;
        }
        
        return_HgsevZt["members"]={};
        for(int HgsevZt=0; HgsevZt < name.drmFormatModifierCount; HgsevZt++){
            json temp;
            temp=[&]() {
    json return_lgiLlkD=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(name.pDrmFormatModifierProperties[HgsevZt]);}();
            return_HgsevZt["members"].push_back(temp);
        }
        return return_HgsevZt;
        }();
return result;}

    VkDrmFormatModifierPropertiesListEXT deserialize_VkDrmFormatModifierPropertiesListEXT(json &name){
        auto result=VkDrmFormatModifierPropertiesListEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        return;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierPropertiesEXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierPropertiesEXT));
        for (int WerBsxV=0; WerBsxV < result.drmFormatModifierCount; WerBsxV++){
            [&]() {
result.pDrmFormatModifierProperties[WerBsxV]=deserialize_VkDrmFormatModifierPropertiesEXT(name["members"]["pDrmFormatModifierProperties"]["members"][WerBsxV]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierPropertiesEXT(VkDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_SPojzaJ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_WdqXpuS=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_yRiLdVZ=json({});
    return serialize_VkFormatFeatureFlags(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierPropertiesEXT deserialize_VkDrmFormatModifierPropertiesEXT(json &name){
        auto result=VkDrmFormatModifierPropertiesEXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkPhysicalDeviceImageDrmFormatModifierInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vAazpwg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_SPojzaJ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["sharingMode"]=[&]() {
    json return_XQiFhur=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_gSQZeGs=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_qOQsQmX=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_qOQsQmX["null"]=true;
            return return_qOQsQmX;
        }
        
        return_qOQsQmX["members"]={};
        for(int qOQsQmX=0; qOQsQmX < name.queueFamilyIndexCount; qOQsQmX++){
            json temp;
            temp=[&]() {
    json return_gwecBSF=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[qOQsQmX]);}();
            return_qOQsQmX["members"].push_back(temp);
        }
        return return_qOQsQmX;
        }();
return result;}

    VkPhysicalDeviceImageDrmFormatModifierInfoEXT deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(json &name){
        auto result=VkPhysicalDeviceImageDrmFormatModifierInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_xKpfdNR;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_xKpfdNR=NULL;
        return;
        }
    temp_xKpfdNR=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int VbryiOm=0; VbryiOm < result.queueFamilyIndexCount; VbryiOm++){
            [&]() {
temp_xKpfdNR[VbryiOm]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][VbryiOm]);}();;
        }
        }();result.pQueueFamilyIndices=temp_xKpfdNR;}();
return result;}

    json serialize_VkImageDrmFormatModifierListCreateInfoEXT(VkImageDrmFormatModifierListCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Hurbhrr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_KtRQVzW=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifiers"]=[&]() {
    json return_oCNbeRc=json({});
    
        if (name.pDrmFormatModifiers==NULL){
            return_oCNbeRc["null"]=true;
            return return_oCNbeRc;
        }
        
        return_oCNbeRc["members"]={};
        for(int oCNbeRc=0; oCNbeRc < name.drmFormatModifierCount; oCNbeRc++){
            json temp;
            temp=[&]() {
    json return_jrRYelu=json({});
    return serialize_uint64_t(name.pDrmFormatModifiers[oCNbeRc]);}();
            return_oCNbeRc["members"].push_back(temp);
        }
        return return_oCNbeRc;
        }();
return result;}

    VkImageDrmFormatModifierListCreateInfoEXT deserialize_VkImageDrmFormatModifierListCreateInfoEXT(json &name){
        auto result=VkImageDrmFormatModifierListCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {
uint64_t* temp_MIjbqMy;[&]() {

        if (name["members"]["pDrmFormatModifiers"].contains("null")){
        temp_MIjbqMy=NULL;
        return;
        }
    temp_MIjbqMy=(uint64_t*)malloc(result.drmFormatModifierCount*sizeof(uint64_t));
        for (int DWGsPvB=0; DWGsPvB < result.drmFormatModifierCount; DWGsPvB++){
            [&]() {
temp_MIjbqMy[DWGsPvB]=deserialize_uint64_t(name["members"]["pDrmFormatModifiers"]["members"][DWGsPvB]);}();;
        }
        }();result.pDrmFormatModifiers=temp_MIjbqMy;}();
return result;}

    json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(VkImageDrmFormatModifierExplicitCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FQCIJUo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_SPojzaJ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_WdqXpuS=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["pPlaneLayouts"]=[&]() {
    json return_HOwGKbp=json({});
    
        if (name.pPlaneLayouts==NULL){
            return_HOwGKbp["null"]=true;
            return return_HOwGKbp;
        }
        
        return_HOwGKbp["members"]={};
        for(int HOwGKbp=0; HOwGKbp < name.drmFormatModifierPlaneCount; HOwGKbp++){
            json temp;
            temp=[&]() {
    json return_WUooJVa=json({});
    return serialize_VkSubresourceLayout(name.pPlaneLayouts[HOwGKbp]);}();
            return_HOwGKbp["members"].push_back(temp);
        }
        return return_HOwGKbp;
        }();
return result;}

    VkImageDrmFormatModifierExplicitCreateInfoEXT deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(json &name){
        auto result=VkImageDrmFormatModifierExplicitCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
VkSubresourceLayout* temp_AOZwTcf;[&]() {

        if (name["members"]["pPlaneLayouts"].contains("null")){
        temp_AOZwTcf=NULL;
        return;
        }
    temp_AOZwTcf=(VkSubresourceLayout*)malloc(result.drmFormatModifierPlaneCount*sizeof(VkSubresourceLayout));
        for (int rhqespZ=0; rhqespZ < result.drmFormatModifierPlaneCount; rhqespZ++){
            [&]() {
temp_AOZwTcf[rhqespZ]=deserialize_VkSubresourceLayout(name["members"]["pPlaneLayouts"]["members"][rhqespZ]);}();;
        }
        }();result.pPlaneLayouts=temp_AOZwTcf;}();
return result;}

    json serialize_VkImageDrmFormatModifierPropertiesEXT(VkImageDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_awuClsH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_ThEzENI=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
return result;}

    VkImageDrmFormatModifierPropertiesEXT deserialize_VkImageDrmFormatModifierPropertiesEXT(json &name){
        auto result=VkImageDrmFormatModifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfo(VkImageStencilUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HVcKkrw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stencilUsage"]=[&]() {
    json return_nqwoVWQ=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfo deserialize_VkImageStencilUsageCreateInfo(json &name){
        auto result=VkImageStencilUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfoEXT(VkImageStencilUsageCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HVcKkrw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stencilUsage"]=[&]() {
    json return_nqwoVWQ=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfoEXT deserialize_VkImageStencilUsageCreateInfoEXT(json &name){
        auto result=VkImageStencilUsageCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkDeviceMemoryOverallocationCreateInfoAMD(VkDeviceMemoryOverallocationCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QvcuZge=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["overallocationBehavior"]=[&]() {
    json return_lahsrcl=json({});
    return serialize_VkMemoryOverallocationBehaviorAMD(name.overallocationBehavior);}();
return result;}

    VkDeviceMemoryOverallocationCreateInfoAMD deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(json &name){
        auto result=VkDeviceMemoryOverallocationCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.overallocationBehavior=deserialize_VkMemoryOverallocationBehaviorAMD(name["members"]["overallocationBehavior"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkPhysicalDeviceFragmentDensityMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pvBzFRX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentDensityMap"]=[&]() {
    json return_WkFoKcf=json({});
    return_WkFoKcf=[&]() {
    json return_iTHBmjL=json({});
    return serialize_uint32_t(name.fragmentDensityMap);}();return return_WkFoKcf;}();
result["members"]["fragmentDensityMapDynamic"]=[&]() {
    json return_MQnlMYW=json({});
    return_MQnlMYW=[&]() {
    json return_zEsJypf=json({});
    return serialize_uint32_t(name.fragmentDensityMapDynamic);}();return return_MQnlMYW;}();
result["members"]["fragmentDensityMapNonSubsampledImages"]=[&]() {
    json return_pYhhCKi=json({});
    return_pYhhCKi=[&]() {
    json return_YbaIRGB=json({});
    return serialize_uint32_t(name.fragmentDensityMapNonSubsampledImages);}();return return_pYhhCKi;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapFeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceFragmentDensityMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.fragmentDensityMap=deserialize_uint32_t(name["members"]["fragmentDensityMap"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapDynamic=deserialize_uint32_t(name["members"]["fragmentDensityMapDynamic"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapNonSubsampledImages=deserialize_uint32_t(name["members"]["fragmentDensityMapNonSubsampledImages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XQqOJNf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentDensityMapDeferred"]=[&]() {
    json return_ImqKKSC=json({});
    return_ImqKKSC=[&]() {
    json return_PxuJlFA=json({});
    return serialize_uint32_t(name.fragmentDensityMapDeferred);}();return return_ImqKKSC;}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2FeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceFragmentDensityMap2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.fragmentDensityMapDeferred=deserialize_uint32_t(name["members"]["fragmentDensityMapDeferred"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GAaWPxR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentDensityMapOffset"]=[&]() {
    json return_OPnnaDl=json({});
    return_OPnnaDl=[&]() {
    json return_gRrkNxA=json({});
    return serialize_uint32_t(name.fragmentDensityMapOffset);}();return return_OPnnaDl;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.fragmentDensityMapOffset=deserialize_uint32_t(name["members"]["fragmentDensityMapOffset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkPhysicalDeviceFragmentDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XxNykbV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minFragmentDensityTexelSize"]=[&]() {
    json return_UtfhhsP=json({});
    return serialize_VkExtent2D(name.minFragmentDensityTexelSize);}();
result["members"]["maxFragmentDensityTexelSize"]=[&]() {
    json return_cXVMThf=json({});
    return serialize_VkExtent2D(name.maxFragmentDensityTexelSize);}();
result["members"]["fragmentDensityInvocations"]=[&]() {
    json return_FawNHnB=json({});
    return_FawNHnB=[&]() {
    json return_BTfoler=json({});
    return serialize_uint32_t(name.fragmentDensityInvocations);}();return return_FawNHnB;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapPropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.minFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentDensityTexelSize"]);}();
[&]() {
result.maxFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentDensityTexelSize"]);}();
[&]() {
[&]() {
result.fragmentDensityInvocations=deserialize_uint32_t(name["members"]["fragmentDensityInvocations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GboMejB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subsampledLoads"]=[&]() {
    json return_uNIJTXB=json({});
    return_uNIJTXB=[&]() {
    json return_SApeycI=json({});
    return serialize_uint32_t(name.subsampledLoads);}();return return_uNIJTXB;}();
result["members"]["subsampledCoarseReconstructionEarlyAccess"]=[&]() {
    json return_SqErRHL=json({});
    return_SqErRHL=[&]() {
    json return_dKmqKJx=json({});
    return serialize_uint32_t(name.subsampledCoarseReconstructionEarlyAccess);}();return return_SqErRHL;}();
result["members"]["maxSubsampledArrayLayers"]=[&]() {
    json return_wXJyxRK=json({});
    return serialize_uint32_t(name.maxSubsampledArrayLayers);}();
result["members"]["maxDescriptorSetSubsampledSamplers"]=[&]() {
    json return_ZjYzyuA=json({});
    return serialize_uint32_t(name.maxDescriptorSetSubsampledSamplers);}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2PropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(json &name){
        auto result=VkPhysicalDeviceFragmentDensityMap2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.subsampledLoads=deserialize_uint32_t(name["members"]["subsampledLoads"]);}();}();
[&]() {
[&]() {
result.subsampledCoarseReconstructionEarlyAccess=deserialize_uint32_t(name["members"]["subsampledCoarseReconstructionEarlyAccess"]);}();}();
[&]() {
result.maxSubsampledArrayLayers=deserialize_uint32_t(name["members"]["maxSubsampledArrayLayers"]);}();
[&]() {
result.maxDescriptorSetSubsampledSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSubsampledSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KAOTNty=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentDensityOffsetGranularity"]=[&]() {
    json return_MnaukiA=json({});
    return serialize_VkExtent2D(name.fragmentDensityOffsetGranularity);}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(json &name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.fragmentDensityOffsetGranularity=deserialize_VkExtent2D(name["members"]["fragmentDensityOffsetGranularity"]);}();
return result;}

    json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(VkRenderPassFragmentDensityMapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oRYsNDI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentDensityMapAttachment"]=[&]() {
    json return_MmuJrZY=json({});
    return serialize_VkAttachmentReference(name.fragmentDensityMapAttachment);}();
return result;}

    VkRenderPassFragmentDensityMapCreateInfoEXT deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(json &name){
        auto result=VkRenderPassFragmentDensityMapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.fragmentDensityMapAttachment=deserialize_VkAttachmentReference(name["members"]["fragmentDensityMapAttachment"]);}();
return result;}

    json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(VkSubpassFragmentDensityMapOffsetEndInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yBmAtKO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentDensityOffsetCount"]=[&]() {
    json return_NdGvKzZ=json({});
    return serialize_uint32_t(name.fragmentDensityOffsetCount);}();
result["members"]["pFragmentDensityOffsets"]=[&]() {
    json return_ZLhanjz=json({});
    
        if (name.pFragmentDensityOffsets==NULL){
            return_ZLhanjz["null"]=true;
            return return_ZLhanjz;
        }
        
        return_ZLhanjz["members"]={};
        for(int ZLhanjz=0; ZLhanjz < name.fragmentDensityOffsetCount; ZLhanjz++){
            json temp;
            temp=[&]() {
    json return_rjsneyL=json({});
    return serialize_VkOffset2D(name.pFragmentDensityOffsets[ZLhanjz]);}();
            return_ZLhanjz["members"].push_back(temp);
        }
        return return_ZLhanjz;
        }();
return result;}

    VkSubpassFragmentDensityMapOffsetEndInfoQCOM deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(json &name){
        auto result=VkSubpassFragmentDensityMapOffsetEndInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.fragmentDensityOffsetCount=deserialize_uint32_t(name["members"]["fragmentDensityOffsetCount"]);}();
[&]() {
VkOffset2D* temp_ytEGMtN;[&]() {

        if (name["members"]["pFragmentDensityOffsets"].contains("null")){
        temp_ytEGMtN=NULL;
        return;
        }
    temp_ytEGMtN=(VkOffset2D*)malloc(result.fragmentDensityOffsetCount*sizeof(VkOffset2D));
        for (int XIQeEzi=0; XIQeEzi < result.fragmentDensityOffsetCount; XIQeEzi++){
            [&]() {
temp_ytEGMtN[XIQeEzi]=deserialize_VkOffset2D(name["members"]["pFragmentDensityOffsets"]["members"][XIQeEzi]);}();;
        }
        }();result.pFragmentDensityOffsets=temp_ytEGMtN;}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(VkPhysicalDeviceScalarBlockLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VPnOaLw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_LjIsEPr=json({});
    return_LjIsEPr=[&]() {
    json return_TGqasCA=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_LjIsEPr;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeatures deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(json &name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VPnOaLw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_LjIsEPr=json({});
    return_LjIsEPr=[&]() {
    json return_TGqasCA=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_LjIsEPr;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeaturesEXT deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkSurfaceProtectedCapabilitiesKHR(VkSurfaceProtectedCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gOnfHUA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supportsProtected"]=[&]() {
    json return_XiFpwUS=json({});
    return_XiFpwUS=[&]() {
    json return_kcoOICO=json({});
    return serialize_uint32_t(name.supportsProtected);}();return return_XiFpwUS;}();
return result;}

    VkSurfaceProtectedCapabilitiesKHR deserialize_VkSurfaceProtectedCapabilitiesKHR(json &name){
        auto result=VkSurfaceProtectedCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
[&]() {
result.supportsProtected=deserialize_uint32_t(name["members"]["supportsProtected"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkPhysicalDeviceUniformBufferStandardLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KWvvApN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_AjAcPei=json({});
    return_AjAcPei=[&]() {
    json return_pZrNRvP=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_AjAcPei;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeatures deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(json &name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KWvvApN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_AjAcPei=json({});
    return_AjAcPei=[&]() {
    json return_pZrNRvP=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_AjAcPei;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkPhysicalDeviceDepthClipEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MMWxszo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_WoDGbTl=json({});
    return_WoDGbTl=[&]() {
    json return_tkjLaXi=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_WoDGbTl;}();
return result;}

    VkPhysicalDeviceDepthClipEnableFeaturesEXT deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDepthClipEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkPipelineRasterizationDepthClipStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GsqsIYE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zzMCWOP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_gQypWMK=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name.flags);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_QGYNAGP=json({});
    return_QGYNAGP=[&]() {
    json return_EjGsXIs=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_QGYNAGP;}();
return result;}

    VkPipelineRasterizationDepthClipStateCreateInfoEXT deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(json &name){
        auto result=VkPipelineRasterizationDepthClipStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_YGCZsOQ;[&]() {
temp_YGCZsOQ=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_YGCZsOQ;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkPhysicalDeviceMemoryBudgetPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BBTDDWO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["heapBudget"]=[&]() {
    json return_bSTBDMj=json({});
    
        return_bSTBDMj["members"]={};
        for(int bSTBDMj=0; bSTBDMj < VK_MAX_MEMORY_HEAPS; bSTBDMj++){
            json temp;
            temp=[&]() {
    json return_NfuKxQN=json({});
    return_NfuKxQN=[&]() {
    json return_OvyFMGe=json({});
    return serialize_uint64_t(name.heapBudget[bSTBDMj]);}();return return_NfuKxQN;}();
            return_bSTBDMj["members"].push_back(temp);
        }
        return return_bSTBDMj;
        }();
result["members"]["heapUsage"]=[&]() {
    json return_rCKjnOE=json({});
    
        return_rCKjnOE["members"]={};
        for(int rCKjnOE=0; rCKjnOE < VK_MAX_MEMORY_HEAPS; rCKjnOE++){
            json temp;
            temp=[&]() {
    json return_XSWWSFg=json({});
    return_XSWWSFg=[&]() {
    json return_oNLEDUP=json({});
    return serialize_uint64_t(name.heapUsage[rCKjnOE]);}();return return_XSWWSFg;}();
            return_rCKjnOE["members"].push_back(temp);
        }
        return return_rCKjnOE;
        }();
return result;}

    VkPhysicalDeviceMemoryBudgetPropertiesEXT deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceMemoryBudgetPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {

        for (int cwUbswL=0; cwUbswL < VK_MAX_MEMORY_HEAPS; cwUbswL++){
            [&]() {
result.heapBudget[cwUbswL]=deserialize_uint64_t(name["members"]["heapBudget"]["members"][cwUbswL]);}();;
        }
        }();}();
[&]() {
[&]() {

        for (int AJxopTL=0; AJxopTL < VK_MAX_MEMORY_HEAPS; AJxopTL++){
            [&]() {
result.heapUsage[AJxopTL]=deserialize_uint64_t(name["members"]["heapUsage"]["members"][AJxopTL]);}();;
        }
        }();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkPhysicalDeviceMemoryPriorityFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EFDplIk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryPriority"]=[&]() {
    json return_zIJfkNg=json({});
    return_zIJfkNg=[&]() {
    json return_eZcksCT=json({});
    return serialize_uint32_t(name.memoryPriority);}();return return_zIJfkNg;}();
return result;}

    VkPhysicalDeviceMemoryPriorityFeaturesEXT deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceMemoryPriorityFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.memoryPriority=deserialize_uint32_t(name["members"]["memoryPriority"]);}();}();
return result;}

    json serialize_VkMemoryPriorityAllocateInfoEXT(VkMemoryPriorityAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uNUbPEs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["priority"]=[&]() {
    json return_CLfHGMB=json({});
    return serialize_float(name.priority);}();
return result;}

    VkMemoryPriorityAllocateInfoEXT deserialize_VkMemoryPriorityAllocateInfoEXT(json &name){
        auto result=VkMemoryPriorityAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.priority=deserialize_float(name["members"]["priority"]);}();
return result;}

    json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bnMyLdL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pageableDeviceLocalMemory"]=[&]() {
    json return_EcrCEcE=json({});
    return_EcrCEcE=[&]() {
    json return_CxjfVpc=json({});
    return serialize_uint32_t(name.pageableDeviceLocalMemory);}();return return_EcrCEcE;}();
return result;}

    VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pageableDeviceLocalMemory=deserialize_uint32_t(name["members"]["pageableDeviceLocalMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(VkPhysicalDeviceBufferDeviceAddressFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zKkseIq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_dVTNgIC=json({});
    return_dVTNgIC=[&]() {
    json return_LpQdjZb=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_dVTNgIC;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_saYSmFs=json({});
    return_saYSmFs=[&]() {
    json return_bAhyavB=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_saYSmFs;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_muyETia=json({});
    return_muyETia=[&]() {
    json return_zkSoiHc=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_muyETia;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeatures deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(json &name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zKkseIq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_dVTNgIC=json({});
    return_dVTNgIC=[&]() {
    json return_LpQdjZb=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_dVTNgIC;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_saYSmFs=json({});
    return_saYSmFs=[&]() {
    json return_bAhyavB=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_saYSmFs;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_muyETia=json({});
    return_muyETia=[&]() {
    json return_zkSoiHc=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_muyETia;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesKHR deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aFoFpnw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_dVTNgIC=json({});
    return_dVTNgIC=[&]() {
    json return_LpQdjZb=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_dVTNgIC;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_saYSmFs=json({});
    return_saYSmFs=[&]() {
    json return_bAhyavB=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_saYSmFs;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_muyETia=json({});
    return_muyETia=[&]() {
    json return_zkSoiHc=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_muyETia;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(VkPhysicalDeviceBufferAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aFoFpnw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_dVTNgIC=json({});
    return_dVTNgIC=[&]() {
    json return_LpQdjZb=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_dVTNgIC;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_saYSmFs=json({});
    return_saYSmFs=[&]() {
    json return_bAhyavB=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_saYSmFs;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_muyETia=json({});
    return_muyETia=[&]() {
    json return_zkSoiHc=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_muyETia;}();
return result;}

    VkPhysicalDeviceBufferAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceBufferAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkBufferDeviceAddressInfo(VkBufferDeviceAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rsANitc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_AHRfiiy=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfo deserialize_VkBufferDeviceAddressInfo(json &name){
        auto result=VkBufferDeviceAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoKHR(VkBufferDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rsANitc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_AHRfiiy=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoKHR deserialize_VkBufferDeviceAddressInfoKHR(json &name){
        auto result=VkBufferDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoEXT(VkBufferDeviceAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rsANitc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_AHRfiiy=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoEXT deserialize_VkBufferDeviceAddressInfoEXT(json &name){
        auto result=VkBufferDeviceAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfo(VkBufferOpaqueCaptureAddressCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Qxamcnw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_tACRNPO=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfo deserialize_VkBufferOpaqueCaptureAddressCreateInfo(json &name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(VkBufferOpaqueCaptureAddressCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Qxamcnw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_tACRNPO=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfoKHR deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(json &name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferDeviceAddressCreateInfoEXT(VkBufferDeviceAddressCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BUlZWKs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceAddress"]=[&]() {
    json return_KxxOxHS=json({});
    return_KxxOxHS=[&]() {
    json return_KinweMa=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_KxxOxHS;}();
return result;}

    VkBufferDeviceAddressCreateInfoEXT deserialize_VkBufferDeviceAddressCreateInfoEXT(json &name){
        auto result=VkBufferDeviceAddressCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(VkPhysicalDeviceImageViewImageFormatInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wQnuntJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageViewType"]=[&]() {
    json return_FMwBxvw=json({});
    return serialize_VkImageViewType(name.imageViewType);}();
return result;}

    VkPhysicalDeviceImageViewImageFormatInfoEXT deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(json &name){
        auto result=VkPhysicalDeviceImageViewImageFormatInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.imageViewType=deserialize_VkImageViewType(name["members"]["imageViewType"]);}();
return result;}

    json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(VkFilterCubicImageViewImageFormatPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zjGAllo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["filterCubic"]=[&]() {
    json return_lolqEtr=json({});
    return_lolqEtr=[&]() {
    json return_eUZcopn=json({});
    return serialize_uint32_t(name.filterCubic);}();return return_lolqEtr;}();
result["members"]["filterCubicMinmax"]=[&]() {
    json return_txkxpgK=json({});
    return_txkxpgK=[&]() {
    json return_AaVQkRp=json({});
    return serialize_uint32_t(name.filterCubicMinmax);}();return return_txkxpgK;}();
return result;}

    VkFilterCubicImageViewImageFormatPropertiesEXT deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(json &name){
        auto result=VkFilterCubicImageViewImageFormatPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.filterCubic=deserialize_uint32_t(name["members"]["filterCubic"]);}();}();
[&]() {
[&]() {
result.filterCubicMinmax=deserialize_uint32_t(name["members"]["filterCubicMinmax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeatures(VkPhysicalDeviceImagelessFramebufferFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vVuIWHZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xKlslqu=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_ktMZpwp=json({});
    return_ktMZpwp=[&]() {
    json return_rhJqCYp=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_ktMZpwp;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeatures deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(json &name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(VkPhysicalDeviceImagelessFramebufferFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vVuIWHZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xKlslqu=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_ktMZpwp=json({});
    return_ktMZpwp=[&]() {
    json return_rhJqCYp=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_ktMZpwp;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeaturesKHR deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfo(VkFramebufferAttachmentsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cEZIAta=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_zXSkOBx=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_UBplTzn=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_UBplTzn["null"]=true;
            return return_UBplTzn;
        }
        
        return_UBplTzn["members"]={};
        for(int UBplTzn=0; UBplTzn < name.attachmentImageInfoCount; UBplTzn++){
            json temp;
            temp=[&]() {
    json return_hPrUTTH=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[UBplTzn]);}();
            return_UBplTzn["members"].push_back(temp);
        }
        return return_UBplTzn;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfo deserialize_VkFramebufferAttachmentsCreateInfo(json &name){
        auto result=VkFramebufferAttachmentsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_rImdqcp;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_rImdqcp=NULL;
        return;
        }
    temp_rImdqcp=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int tspYdRa=0; tspYdRa < result.attachmentImageInfoCount; tspYdRa++){
            [&]() {
temp_rImdqcp[tspYdRa]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][tspYdRa]);}();;
        }
        }();result.pAttachmentImageInfos=temp_rImdqcp;}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfoKHR(VkFramebufferAttachmentsCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cEZIAta=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_zXSkOBx=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_UBplTzn=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_UBplTzn["null"]=true;
            return return_UBplTzn;
        }
        
        return_UBplTzn["members"]={};
        for(int UBplTzn=0; UBplTzn < name.attachmentImageInfoCount; UBplTzn++){
            json temp;
            temp=[&]() {
    json return_hPrUTTH=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[UBplTzn]);}();
            return_UBplTzn["members"].push_back(temp);
        }
        return return_UBplTzn;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfoKHR deserialize_VkFramebufferAttachmentsCreateInfoKHR(json &name){
        auto result=VkFramebufferAttachmentsCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_rImdqcp;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_rImdqcp=NULL;
        return;
        }
    temp_rImdqcp=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int tspYdRa=0; tspYdRa < result.attachmentImageInfoCount; tspYdRa++){
            [&]() {
temp_rImdqcp[tspYdRa]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][tspYdRa]);}();;
        }
        }();result.pAttachmentImageInfos=temp_rImdqcp;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfo(VkFramebufferAttachmentImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tnTVOXq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_btglsjt=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_amhzygt=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_KSVhiGq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_sNhxukQ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_giPijdT=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_zEzqRgX=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_fsRoWhz=json({});
    
        if (name.pViewFormats==NULL){
            return_fsRoWhz["null"]=true;
            return return_fsRoWhz;
        }
        
        return_fsRoWhz["members"]={};
        for(int fsRoWhz=0; fsRoWhz < name.viewFormatCount; fsRoWhz++){
            json temp;
            temp=[&]() {
    json return_gKSBoHJ=json({});
    return serialize_VkFormat(name.pViewFormats[fsRoWhz]);}();
            return_fsRoWhz["members"].push_back(temp);
        }
        return return_fsRoWhz;
        }();
return result;}

    VkFramebufferAttachmentImageInfo deserialize_VkFramebufferAttachmentImageInfo(json &name){
        auto result=VkFramebufferAttachmentImageInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_ZyTEroE;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_ZyTEroE=NULL;
        return;
        }
    temp_ZyTEroE=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int HhbDDDd=0; HhbDDDd < result.viewFormatCount; HhbDDDd++){
            [&]() {
temp_ZyTEroE[HhbDDDd]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][HhbDDDd]);}();;
        }
        }();result.pViewFormats=temp_ZyTEroE;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfoKHR(VkFramebufferAttachmentImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tnTVOXq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_btglsjt=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_amhzygt=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_KSVhiGq=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_sNhxukQ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_giPijdT=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_zEzqRgX=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_fsRoWhz=json({});
    
        if (name.pViewFormats==NULL){
            return_fsRoWhz["null"]=true;
            return return_fsRoWhz;
        }
        
        return_fsRoWhz["members"]={};
        for(int fsRoWhz=0; fsRoWhz < name.viewFormatCount; fsRoWhz++){
            json temp;
            temp=[&]() {
    json return_gKSBoHJ=json({});
    return serialize_VkFormat(name.pViewFormats[fsRoWhz]);}();
            return_fsRoWhz["members"].push_back(temp);
        }
        return return_fsRoWhz;
        }();
return result;}

    VkFramebufferAttachmentImageInfoKHR deserialize_VkFramebufferAttachmentImageInfoKHR(json &name){
        auto result=VkFramebufferAttachmentImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_ZyTEroE;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_ZyTEroE=NULL;
        return;
        }
    temp_ZyTEroE=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int HhbDDDd=0; HhbDDDd < result.viewFormatCount; HhbDDDd++){
            [&]() {
temp_ZyTEroE[HhbDDDd]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][HhbDDDd]);}();;
        }
        }();result.pViewFormats=temp_ZyTEroE;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfo(VkRenderPassAttachmentBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ubImcFU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentCount"]=[&]() {
    json return_crvhOdR=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_vkLdiQD=json({});
    
        if (name.pAttachments==NULL){
            return_vkLdiQD["null"]=true;
            return return_vkLdiQD;
        }
        
        return_vkLdiQD["members"]={};
        for(int vkLdiQD=0; vkLdiQD < name.attachmentCount; vkLdiQD++){
            json temp;
            temp=[&]() {
    json return_uDxSBYE=json({});
    return serialize_VkImageView(name.pAttachments[vkLdiQD]);}();
            return_vkLdiQD["members"].push_back(temp);
        }
        return return_vkLdiQD;
        }();
return result;}

    VkRenderPassAttachmentBeginInfo deserialize_VkRenderPassAttachmentBeginInfo(json &name){
        auto result=VkRenderPassAttachmentBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_lchIyOl;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_lchIyOl=NULL;
        return;
        }
    temp_lchIyOl=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int osOETQh=0; osOETQh < result.attachmentCount; osOETQh++){
            [&]() {
temp_lchIyOl[osOETQh]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][osOETQh]);}();;
        }
        }();result.pAttachments=temp_lchIyOl;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfoKHR(VkRenderPassAttachmentBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ubImcFU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentCount"]=[&]() {
    json return_crvhOdR=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_vkLdiQD=json({});
    
        if (name.pAttachments==NULL){
            return_vkLdiQD["null"]=true;
            return return_vkLdiQD;
        }
        
        return_vkLdiQD["members"]={};
        for(int vkLdiQD=0; vkLdiQD < name.attachmentCount; vkLdiQD++){
            json temp;
            temp=[&]() {
    json return_uDxSBYE=json({});
    return serialize_VkImageView(name.pAttachments[vkLdiQD]);}();
            return_vkLdiQD["members"].push_back(temp);
        }
        return return_vkLdiQD;
        }();
return result;}

    VkRenderPassAttachmentBeginInfoKHR deserialize_VkRenderPassAttachmentBeginInfoKHR(json &name){
        auto result=VkRenderPassAttachmentBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_lchIyOl;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_lchIyOl=NULL;
        return;
        }
    temp_lchIyOl=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int osOETQh=0; osOETQh < result.attachmentCount; osOETQh++){
            [&]() {
temp_lchIyOl[osOETQh]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][osOETQh]);}();;
        }
        }();result.pAttachments=temp_lchIyOl;}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(VkPhysicalDeviceTextureCompressionASTCHDRFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jeRiOoL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_kBxGSWK=json({});
    return_kBxGSWK=[&]() {
    json return_cksyVkg=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_kBxGSWK;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeatures deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(json &name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jeRiOoL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_kBxGSWK=json({});
    return_kBxGSWK=[&]() {
    json return_cksyVkg=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_kBxGSWK;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkPhysicalDeviceCooperativeMatrixFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bUKrNUR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_AVgOFEj=json({});
    return_AVgOFEj=[&]() {
    json return_sLyjNRF=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_AVgOFEj;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_nMPaRKT=json({});
    return_nMPaRKT=[&]() {
    json return_HjZGYFy=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_nMPaRKT;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesNV deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(json &name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDeviceCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eJWflXK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_pidCsSS=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesNV deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(json &name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesNV(VkCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yYyLEma=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["MSize"]=[&]() {
    json return_qSkxFdv=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_cCseNJd=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_uvWzeSW=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_ScuXExn=json({});
    return serialize_VkComponentTypeNV(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_husbZBs=json({});
    return serialize_VkComponentTypeNV(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_bxUFQzx=json({});
    return serialize_VkComponentTypeNV(name.CType);}();
result["members"]["DType"]=[&]() {
    json return_gRYesYD=json({});
    return serialize_VkComponentTypeNV(name.DType);}();
result["members"]["scope"]=[&]() {
    json return_kamyqaH=json({});
    return serialize_VkScopeNV(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesNV deserialize_VkCooperativeMatrixPropertiesNV(json &name){
        auto result=VkCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeNV(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeNV(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeNV(name["members"]["CType"]);}();
[&]() {
result.DType=deserialize_VkComponentTypeNV(name["members"]["DType"]);}();
[&]() {
result.scope=deserialize_VkScopeNV(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AICQSmU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["ycbcrImageArrays"]=[&]() {
    json return_eBgikKi=json({});
    return_eBgikKi=[&]() {
    json return_dLmiOiM=json({});
    return serialize_uint32_t(name.ycbcrImageArrays);}();return return_eBgikKi;}();
return result;}

    VkPhysicalDeviceYcbcrImageArraysFeaturesEXT deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceYcbcrImageArraysFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.ycbcrImageArrays=deserialize_uint32_t(name["members"]["ycbcrImageArrays"]);}();}();
return result;}

    json serialize_VkImageViewHandleInfoNVX(VkImageViewHandleInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xMIOcGM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageView"]=[&]() {
    json return_NiAeslm=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["descriptorType"]=[&]() {
    json return_KYHXLju=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["sampler"]=[&]() {
    json return_CRjOjew=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkImageViewHandleInfoNVX deserialize_VkImageViewHandleInfoNVX(json &name){
        auto result=VkImageViewHandleInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkImageViewAddressPropertiesNVX(VkImageViewAddressPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pOAOzKN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceAddress"]=[&]() {
    json return_VoXDFcY=json({});
    return_VoXDFcY=[&]() {
    json return_dgAKPoj=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_VoXDFcY;}();
result["members"]["size"]=[&]() {
    json return_rMiNkwd=json({});
    return_rMiNkwd=[&]() {
    json return_DjylNLo=json({});
    return serialize_uint64_t(name.size);}();return return_rMiNkwd;}();
return result;}

    VkImageViewAddressPropertiesNVX deserialize_VkImageViewAddressPropertiesNVX(json &name){
        auto result=VkImageViewAddressPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkPipelineCreationFeedback(VkPipelineCreationFeedback name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_rbEcOnr=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_NlFVght=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedback deserialize_VkPipelineCreationFeedback(json &name){
        auto result=VkPipelineCreationFeedback();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackEXT(VkPipelineCreationFeedbackEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_rbEcOnr=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_NlFVght=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedbackEXT deserialize_VkPipelineCreationFeedbackEXT(json &name){
        auto result=VkPipelineCreationFeedbackEXT();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfo(VkPipelineCreationFeedbackCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JAktWwi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_CHuuNMU=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_CHuuNMU["null"]=true;
            return return_CHuuNMU;
        }
        return_CHuuNMU=[&]() {
    json return_JgdSncK=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_CHuuNMU;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_bkrRHJP=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_jvUunew=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_jvUunew["null"]=true;
            return return_jvUunew;
        }
        
        return_jvUunew["members"]={};
        for(int jvUunew=0; jvUunew < name.pipelineStageCreationFeedbackCount; jvUunew++){
            json temp;
            temp=[&]() {
    json return_uDQwtjg=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[jvUunew]);}();
            return_jvUunew["members"].push_back(temp);
        }
        return return_jvUunew;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfo deserialize_VkPipelineCreationFeedbackCreateInfo(json &name){
        auto result=VkPipelineCreationFeedbackCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        return;
        }
    result.pPipelineCreationFeedback=(VkPipelineCreationFeedback*)malloc(sizeof(VkPipelineCreationFeedback));
[&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        return;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int hsEcoTC=0; hsEcoTC < result.pipelineStageCreationFeedbackCount; hsEcoTC++){
            [&]() {
result.pPipelineStageCreationFeedbacks[hsEcoTC]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][hsEcoTC]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfoEXT(VkPipelineCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JAktWwi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_CHuuNMU=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_CHuuNMU["null"]=true;
            return return_CHuuNMU;
        }
        return_CHuuNMU=[&]() {
    json return_JgdSncK=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_CHuuNMU;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_bkrRHJP=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_jvUunew=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_jvUunew["null"]=true;
            return return_jvUunew;
        }
        
        return_jvUunew["members"]={};
        for(int jvUunew=0; jvUunew < name.pipelineStageCreationFeedbackCount; jvUunew++){
            json temp;
            temp=[&]() {
    json return_uDQwtjg=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[jvUunew]);}();
            return_jvUunew["members"].push_back(temp);
        }
        return return_jvUunew;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfoEXT deserialize_VkPipelineCreationFeedbackCreateInfoEXT(json &name){
        auto result=VkPipelineCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        return;
        }
    result.pPipelineCreationFeedback=(VkPipelineCreationFeedback*)malloc(sizeof(VkPipelineCreationFeedback));
[&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        return;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int hsEcoTC=0; hsEcoTC < result.pipelineStageCreationFeedbackCount; hsEcoTC++){
            [&]() {
result.pPipelineStageCreationFeedbacks[hsEcoTC]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][hsEcoTC]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePresentBarrierFeaturesNV(VkPhysicalDevicePresentBarrierFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rImxncW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentBarrier"]=[&]() {
    json return_ZCapfsS=json({});
    return_ZCapfsS=[&]() {
    json return_AVCoCwL=json({});
    return serialize_uint32_t(name.presentBarrier);}();return return_ZCapfsS;}();
return result;}

    VkPhysicalDevicePresentBarrierFeaturesNV deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(json &name){
        auto result=VkPhysicalDevicePresentBarrierFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.presentBarrier=deserialize_uint32_t(name["members"]["presentBarrier"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesPresentBarrierNV(VkSurfaceCapabilitiesPresentBarrierNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YGMotEX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentBarrierSupported"]=[&]() {
    json return_SGIEQvg=json({});
    return_SGIEQvg=[&]() {
    json return_VuIQuKM=json({});
    return serialize_uint32_t(name.presentBarrierSupported);}();return return_SGIEQvg;}();
return result;}

    VkSurfaceCapabilitiesPresentBarrierNV deserialize_VkSurfaceCapabilitiesPresentBarrierNV(json &name){
        auto result=VkSurfaceCapabilitiesPresentBarrierNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.presentBarrierSupported=deserialize_uint32_t(name["members"]["presentBarrierSupported"]);}();}();
return result;}

    json serialize_VkSwapchainPresentBarrierCreateInfoNV(VkSwapchainPresentBarrierCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CgqPpjn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentBarrierEnable"]=[&]() {
    json return_BzTdhct=json({});
    return_BzTdhct=[&]() {
    json return_DVvwVdA=json({});
    return serialize_uint32_t(name.presentBarrierEnable);}();return return_BzTdhct;}();
return result;}

    VkSwapchainPresentBarrierCreateInfoNV deserialize_VkSwapchainPresentBarrierCreateInfoNV(json &name){
        auto result=VkSwapchainPresentBarrierCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.presentBarrierEnable=deserialize_uint32_t(name["members"]["presentBarrierEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(VkPhysicalDevicePerformanceQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ooRtjoJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["performanceCounterQueryPools"]=[&]() {
    json return_wdkqiXH=json({});
    return_wdkqiXH=[&]() {
    json return_GolAKVt=json({});
    return serialize_uint32_t(name.performanceCounterQueryPools);}();return return_wdkqiXH;}();
result["members"]["performanceCounterMultipleQueryPools"]=[&]() {
    json return_MoYUJsy=json({});
    return_MoYUJsy=[&]() {
    json return_jaXYIAE=json({});
    return serialize_uint32_t(name.performanceCounterMultipleQueryPools);}();return return_MoYUJsy;}();
return result;}

    VkPhysicalDevicePerformanceQueryFeaturesKHR deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(json &name){
        auto result=VkPhysicalDevicePerformanceQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.performanceCounterQueryPools=deserialize_uint32_t(name["members"]["performanceCounterQueryPools"]);}();}();
[&]() {
[&]() {
result.performanceCounterMultipleQueryPools=deserialize_uint32_t(name["members"]["performanceCounterMultipleQueryPools"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(VkPhysicalDevicePerformanceQueryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Yvfywqy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["allowCommandBufferQueryCopies"]=[&]() {
    json return_aYgcMuA=json({});
    return_aYgcMuA=[&]() {
    json return_OHCVCUU=json({});
    return serialize_uint32_t(name.allowCommandBufferQueryCopies);}();return return_aYgcMuA;}();
return result;}

    VkPhysicalDevicePerformanceQueryPropertiesKHR deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(json &name){
        auto result=VkPhysicalDevicePerformanceQueryPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.allowCommandBufferQueryCopies=deserialize_uint32_t(name["members"]["allowCommandBufferQueryCopies"]);}();}();
return result;}

    json serialize_VkPerformanceCounterKHR(VkPerformanceCounterKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UMvwnNO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["unit"]=[&]() {
    json return_jRfXQFL=json({});
    return serialize_VkPerformanceCounterUnitKHR(name.unit);}();
result["members"]["scope"]=[&]() {
    json return_dWpOsSr=json({});
    return serialize_VkPerformanceCounterScopeKHR(name.scope);}();
result["members"]["storage"]=[&]() {
    json return_rpSqZxW=json({});
    return serialize_VkPerformanceCounterStorageKHR(name.storage);}();
result["members"]["uuid"]=[&]() {
    json return_QnECyOg=json({});
    
        return_QnECyOg["members"]={};
        for(int QnECyOg=0; QnECyOg < VK_UUID_SIZE; QnECyOg++){
            json temp;
            temp=[&]() {
    json return_CHsvVuE=json({});
    return serialize_uint8_t(name.uuid[QnECyOg]);}();
            return_QnECyOg["members"].push_back(temp);
        }
        return return_QnECyOg;
        }();
return result;}

    VkPerformanceCounterKHR deserialize_VkPerformanceCounterKHR(json &name){
        auto result=VkPerformanceCounterKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.unit=deserialize_VkPerformanceCounterUnitKHR(name["members"]["unit"]);}();
[&]() {
result.scope=deserialize_VkPerformanceCounterScopeKHR(name["members"]["scope"]);}();
[&]() {
result.storage=deserialize_VkPerformanceCounterStorageKHR(name["members"]["storage"]);}();
[&]() {

        for (int cWjcXMG=0; cWjcXMG < VK_UUID_SIZE; cWjcXMG++){
            [&]() {
result.uuid[cWjcXMG]=deserialize_uint8_t(name["members"]["uuid"]["members"][cWjcXMG]);}();;
        }
        }();
return result;}

    json serialize_VkPerformanceCounterDescriptionKHR(VkPerformanceCounterDescriptionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nONiXdI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXLilEx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_AvGHapG=json({});
    return serialize_VkPerformanceCounterDescriptionFlagsKHR(name.flags);}();
result["members"]["name"]=[&]() {
    json return_zxgvoQw=json({});
    
        return_zxgvoQw["members"]={};
        for(int zxgvoQw=0; zxgvoQw < VK_MAX_DESCRIPTION_SIZE; zxgvoQw++){
            json temp;
            temp=[&]() {
    json return_BZmEoTR=json({});
    return serialize_char(name.name[zxgvoQw]);}();
            return_zxgvoQw["members"].push_back(temp);
        }
        return return_zxgvoQw;
        }();
result["members"]["category"]=[&]() {
    json return_rFDbUNj=json({});
    
        return_rFDbUNj["members"]={};
        for(int rFDbUNj=0; rFDbUNj < VK_MAX_DESCRIPTION_SIZE; rFDbUNj++){
            json temp;
            temp=[&]() {
    json return_VQPvFIF=json({});
    return serialize_char(name.category[rFDbUNj]);}();
            return_rFDbUNj["members"].push_back(temp);
        }
        return return_rFDbUNj;
        }();
result["members"]["description"]=[&]() {
    json return_OoqsbWO=json({});
    
        return_OoqsbWO["members"]={};
        for(int OoqsbWO=0; OoqsbWO < VK_MAX_DESCRIPTION_SIZE; OoqsbWO++){
            json temp;
            temp=[&]() {
    json return_kEwLAls=json({});
    return serialize_char(name.description[OoqsbWO]);}();
            return_OoqsbWO["members"].push_back(temp);
        }
        return return_OoqsbWO;
        }();
return result;}

    VkPerformanceCounterDescriptionKHR deserialize_VkPerformanceCounterDescriptionKHR(json &name){
        auto result=VkPerformanceCounterDescriptionKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.flags=deserialize_VkPerformanceCounterDescriptionFlagsKHR(name["members"]["flags"]);}();
[&]() {

        for (int EeVEMdX=0; EeVEMdX < VK_MAX_DESCRIPTION_SIZE; EeVEMdX++){
            [&]() {
result.name[EeVEMdX]=deserialize_char(name["members"]["name"]["members"][EeVEMdX]);}();;
        }
        }();
[&]() {

        for (int uAGmKvD=0; uAGmKvD < VK_MAX_DESCRIPTION_SIZE; uAGmKvD++){
            [&]() {
result.category[uAGmKvD]=deserialize_char(name["members"]["category"]["members"][uAGmKvD]);}();;
        }
        }();
[&]() {

        for (int qOKZrqi=0; qOKZrqi < VK_MAX_DESCRIPTION_SIZE; qOKZrqi++){
            [&]() {
result.description[qOKZrqi]=deserialize_char(name["members"]["description"]["members"][qOKZrqi]);}();;
        }
        }();
return result;}

    json serialize_VkQueryPoolPerformanceCreateInfoKHR(VkQueryPoolPerformanceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SCCuSCi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jjpEuVo=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_owydRKm=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["counterIndexCount"]=[&]() {
    json return_eNiiJAB=json({});
    return serialize_uint32_t(name.counterIndexCount);}();
result["members"]["pCounterIndices"]=[&]() {
    json return_ZRxSGgR=json({});
    
        if (name.pCounterIndices==NULL){
            return_ZRxSGgR["null"]=true;
            return return_ZRxSGgR;
        }
        
        return_ZRxSGgR["members"]={};
        for(int ZRxSGgR=0; ZRxSGgR < name.counterIndexCount; ZRxSGgR++){
            json temp;
            temp=[&]() {
    json return_vnlQWHz=json({});
    return serialize_uint32_t(name.pCounterIndices[ZRxSGgR]);}();
            return_ZRxSGgR["members"].push_back(temp);
        }
        return return_ZRxSGgR;
        }();
return result;}

    VkQueryPoolPerformanceCreateInfoKHR deserialize_VkQueryPoolPerformanceCreateInfoKHR(json &name){
        auto result=VkQueryPoolPerformanceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_MTVHsNm;[&]() {
temp_MTVHsNm=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_MTVHsNm;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.counterIndexCount=deserialize_uint32_t(name["members"]["counterIndexCount"]);}();
[&]() {
uint32_t* temp_ZbKiiGG;[&]() {

        if (name["members"]["pCounterIndices"].contains("null")){
        temp_ZbKiiGG=NULL;
        return;
        }
    temp_ZbKiiGG=(uint32_t*)malloc(result.counterIndexCount*sizeof(uint32_t));
        for (int deAZUsK=0; deAZUsK < result.counterIndexCount; deAZUsK++){
            [&]() {
temp_ZbKiiGG[deAZUsK]=deserialize_uint32_t(name["members"]["pCounterIndices"]["members"][deAZUsK]);}();;
        }
        }();result.pCounterIndices=temp_ZbKiiGG;}();
return result;}

    json serialize_VkPerformanceCounterResultKHR(VkPerformanceCounterResultKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["int32"]=[&]() {
    json return_AntZslq=json({});
    return serialize_int32_t(name.int32);}();
result["members"]["int64"]=[&]() {
    json return_wbPkMoT=json({});
    return serialize_int64_t(name.int64);}();
result["members"]["uint32"]=[&]() {
    json return_CMpyiub=json({});
    return serialize_uint32_t(name.uint32);}();
result["members"]["uint64"]=[&]() {
    json return_hyvEQWl=json({});
    return serialize_uint64_t(name.uint64);}();
result["members"]["float32"]=[&]() {
    json return_vkOthoY=json({});
    return serialize_float(name.float32);}();
result["members"]["float64"]=[&]() {
    json return_wLPPsuP=json({});
    return serialize_double(name.float64);}();
return result;}

    VkPerformanceCounterResultKHR deserialize_VkPerformanceCounterResultKHR(json &name){
        auto result=VkPerformanceCounterResultKHR();
    
[&]() {
result.int32=deserialize_int32_t(name["members"]["int32"]);}();
[&]() {
result.int64=deserialize_int64_t(name["members"]["int64"]);}();
[&]() {
result.uint32=deserialize_uint32_t(name["members"]["uint32"]);}();
[&]() {
result.uint64=deserialize_uint64_t(name["members"]["uint64"]);}();
[&]() {
result.float32=deserialize_float(name["members"]["float32"]);}();
[&]() {
result.float64=deserialize_double(name["members"]["float64"]);}();
return result;}

    json serialize_VkAcquireProfilingLockInfoKHR(VkAcquireProfilingLockInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gsLAxXL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_jBMVTpv=json({});
    return serialize_VkAcquireProfilingLockFlagsKHR(name.flags);}();
result["members"]["timeout"]=[&]() {
    json return_YDTKTgV=json({});
    return serialize_uint64_t(name.timeout);}();
return result;}

    VkAcquireProfilingLockInfoKHR deserialize_VkAcquireProfilingLockInfoKHR(json &name){
        auto result=VkAcquireProfilingLockInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkAcquireProfilingLockFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
return result;}

    json serialize_VkPerformanceQuerySubmitInfoKHR(VkPerformanceQuerySubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AdAfdCN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["counterPassIndex"]=[&]() {
    json return_HvqFYzV=json({});
    return serialize_uint32_t(name.counterPassIndex);}();
return result;}

    VkPerformanceQuerySubmitInfoKHR deserialize_VkPerformanceQuerySubmitInfoKHR(json &name){
        auto result=VkPerformanceQuerySubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {
result.counterPassIndex=deserialize_uint32_t(name["members"]["counterPassIndex"]);}();
return result;}

    json serialize_VkHeadlessSurfaceCreateInfoEXT(VkHeadlessSurfaceCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LMKMYjN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_BJauXOb=json({});
    return serialize_VkHeadlessSurfaceCreateFlagsEXT(name.flags);}();
return result;}

    VkHeadlessSurfaceCreateInfoEXT deserialize_VkHeadlessSurfaceCreateInfoEXT(json &name){
        auto result=VkHeadlessSurfaceCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkHeadlessSurfaceCreateFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkPhysicalDeviceCoverageReductionModeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_npTgYDf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_tNHiacg=json({});
    return_tNHiacg=[&]() {
    json return_XDYInbx=json({});
    return serialize_uint32_t(name.coverageReductionMode);}();return return_tNHiacg;}();
return result;}

    VkPhysicalDeviceCoverageReductionModeFeaturesNV deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(json &name){
        auto result=VkPhysicalDeviceCoverageReductionModeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.coverageReductionMode=deserialize_uint32_t(name["members"]["coverageReductionMode"]);}();}();
return result;}

    json serialize_VkPipelineCoverageReductionStateCreateInfoNV(VkPipelineCoverageReductionStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ELqVHDf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HnciAlv=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_FVosFPc=json({});
    return serialize_VkPipelineCoverageReductionStateCreateFlagsNV(name.flags);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_DtCBaIU=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
return result;}

    VkPipelineCoverageReductionStateCreateInfoNV deserialize_VkPipelineCoverageReductionStateCreateInfoNV(json &name){
        auto result=VkPipelineCoverageReductionStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_vXGbmYO;[&]() {
temp_vXGbmYO=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_vXGbmYO;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
return result;}

    json serialize_VkFramebufferMixedSamplesCombinationNV(VkFramebufferMixedSamplesCombinationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rEOXZvl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NqIaRtH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_DmCXvVB=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_YmsKVsb=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["depthStencilSamples"]=[&]() {
    json return_SZMFjxh=json({});
    return serialize_VkSampleCountFlags(name.depthStencilSamples);}();
result["members"]["colorSamples"]=[&]() {
    json return_SdyCrPJ=json({});
    return serialize_VkSampleCountFlags(name.colorSamples);}();
return result;}

    VkFramebufferMixedSamplesCombinationNV deserialize_VkFramebufferMixedSamplesCombinationNV(json &name){
        auto result=VkFramebufferMixedSamplesCombinationNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
result.depthStencilSamples=deserialize_VkSampleCountFlags(name["members"]["depthStencilSamples"]);}();
[&]() {
result.colorSamples=deserialize_VkSampleCountFlags(name["members"]["colorSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pWahfvM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderIntegerFunctions2"]=[&]() {
    json return_yIlkHca=json({});
    return_yIlkHca=[&]() {
    json return_CuFOryV=json({});
    return serialize_uint32_t(name.shaderIntegerFunctions2);}();return return_yIlkHca;}();
return result;}

    VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(json &name){
        auto result=VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderIntegerFunctions2=deserialize_uint32_t(name["members"]["shaderIntegerFunctions2"]);}();}();
return result;}

    json serialize_VkPerformanceValueDataINTEL(VkPerformanceValueDataINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["value32"]=[&]() {
    json return_LLZtsYB=json({});
    return serialize_uint32_t(name.value32);}();
result["members"]["value64"]=[&]() {
    json return_TAKJKVq=json({});
    return serialize_uint64_t(name.value64);}();
result["members"]["valueFloat"]=[&]() {
    json return_VWfjOgg=json({});
    return serialize_float(name.valueFloat);}();
result["members"]["valueBool"]=[&]() {
    json return_sRetAJx=json({});
    return_sRetAJx=[&]() {
    json return_hapdzIt=json({});
    return serialize_uint32_t(name.valueBool);}();return return_sRetAJx;}();
result["members"]["valueString"]=[&]() {
    json return_TOspFEt=json({});
    
        if (name.valueString==NULL){
            return_TOspFEt["null"]=true;
            return return_TOspFEt;
        }
        
        return_TOspFEt["members"]={};
        for(int TOspFEt=0; TOspFEt < strlen(name.valueString)+1; TOspFEt++){
            json temp;
            temp=[&]() {
    json return_cphDxgb=json({});
    return serialize_char(name.valueString[TOspFEt]);}();
            return_TOspFEt["members"].push_back(temp);
        }
        return return_TOspFEt;
        }();
return result;}

    VkPerformanceValueDataINTEL deserialize_VkPerformanceValueDataINTEL(json &name){
        auto result=VkPerformanceValueDataINTEL();
    
[&]() {
result.value32=deserialize_uint32_t(name["members"]["value32"]);}();
[&]() {
result.value64=deserialize_uint64_t(name["members"]["value64"]);}();
[&]() {
result.valueFloat=deserialize_float(name["members"]["valueFloat"]);}();
[&]() {
[&]() {
result.valueBool=deserialize_uint32_t(name["members"]["valueBool"]);}();}();
[&]() {
char* temp_eTAxKOf;[&]() {

        if (name["members"]["valueString"].contains("null")){
        temp_eTAxKOf=NULL;
        return;
        }
    temp_eTAxKOf=(char*)malloc(name["members"]["valueString"]["members"].size()*sizeof(char));
        for (int jiqYgSS=0; jiqYgSS < name["members"]["valueString"]["members"].size(); jiqYgSS++){
            [&]() {
temp_eTAxKOf[jiqYgSS]=deserialize_char(name["members"]["valueString"]["members"][jiqYgSS]);}();;
        }
        }();result.valueString=temp_eTAxKOf;}();
return result;}

    json serialize_VkPerformanceValueINTEL(VkPerformanceValueINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_tBftGfb=json({});
    return serialize_VkPerformanceValueTypeINTEL(name.type);}();
result["members"]["data"]=[&]() {
    json return_qCDOtzw=json({});
    return serialize_VkPerformanceValueDataINTEL(name.data);}();
return result;}

    VkPerformanceValueINTEL deserialize_VkPerformanceValueINTEL(json &name){
        auto result=VkPerformanceValueINTEL();
    
[&]() {
result.type=deserialize_VkPerformanceValueTypeINTEL(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkPerformanceValueDataINTEL(name["members"]["data"]);}();
return result;}

    json serialize_VkInitializePerformanceApiInfoINTEL(VkInitializePerformanceApiInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YZuMqKa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pUserData"]=[&]() {
    json return_LqMHmAY=json({});
    
        if (name.pUserData==NULL){
            return_LqMHmAY["null"]=true;
            return return_LqMHmAY;
        }
        return_LqMHmAY=[&]() {
    json return_zSuSSWj=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_zSuSSWj["null"]=true;
            return return_zSuSSWj;
        }
        
        return_zSuSSWj["members"]={};
        for(int zSuSSWj=0; zSuSSWj < strlen(((char*)(name.pUserData)))+1; zSuSSWj++){
            json temp;
            temp=[&]() {
    json return_gGTAWYN=json({});
    return serialize_char(((char*)(name.pUserData))[zSuSSWj]);}();
            return_zSuSSWj["members"].push_back(temp);
        }
        return return_zSuSSWj;
        }();return return_LqMHmAY;}();
return result;}

    VkInitializePerformanceApiInfoINTEL deserialize_VkInitializePerformanceApiInfoINTEL(json &name){
        auto result=VkInitializePerformanceApiInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp_BKkwHMV;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp_BKkwHMV=NULL;
        return;
        }
    temp_BKkwHMV=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int LAgDCtA=0; LAgDCtA < name["members"]["pUserData"]["members"].size(); LAgDCtA++){
            [&]() {
temp_BKkwHMV[LAgDCtA]=deserialize_char(name["members"]["pUserData"]["members"][LAgDCtA]);}();;
        }
        }();result.pUserData=(void*)temp_BKkwHMV;
}();
return result;}

    json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(VkQueryPoolPerformanceQueryCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZrZzmcl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_aoGyfwf=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolPerformanceQueryCreateInfoINTEL deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(json &name){
        auto result=VkQueryPoolPerformanceQueryCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfoINTEL(VkQueryPoolCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZrZzmcl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_aoGyfwf=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolCreateInfoINTEL deserialize_VkQueryPoolCreateInfoINTEL(json &name){
        auto result=VkQueryPoolCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkPerformanceMarkerInfoINTEL(VkPerformanceMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oVNyzLI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["marker"]=[&]() {
    json return_GbVrzAs=json({});
    return serialize_uint64_t(name.marker);}();
return result;}

    VkPerformanceMarkerInfoINTEL deserialize_VkPerformanceMarkerInfoINTEL(json &name){
        auto result=VkPerformanceMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.marker=deserialize_uint64_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceStreamMarkerInfoINTEL(VkPerformanceStreamMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YcbOoNA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["marker"]=[&]() {
    json return_ITBMpDE=json({});
    return serialize_uint32_t(name.marker);}();
return result;}

    VkPerformanceStreamMarkerInfoINTEL deserialize_VkPerformanceStreamMarkerInfoINTEL(json &name){
        auto result=VkPerformanceStreamMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.marker=deserialize_uint32_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceOverrideInfoINTEL(VkPerformanceOverrideInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tqlrbMR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_snnwVRP=json({});
    return serialize_VkPerformanceOverrideTypeINTEL(name.type);}();
result["members"]["enable"]=[&]() {
    json return_svnjPSe=json({});
    return_svnjPSe=[&]() {
    json return_MtdFazI=json({});
    return serialize_uint32_t(name.enable);}();return return_svnjPSe;}();
result["members"]["parameter"]=[&]() {
    json return_wTQTniK=json({});
    return serialize_uint64_t(name.parameter);}();
return result;}

    VkPerformanceOverrideInfoINTEL deserialize_VkPerformanceOverrideInfoINTEL(json &name){
        auto result=VkPerformanceOverrideInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.type=deserialize_VkPerformanceOverrideTypeINTEL(name["members"]["type"]);}();
[&]() {
[&]() {
result.enable=deserialize_uint32_t(name["members"]["enable"]);}();}();
[&]() {
result.parameter=deserialize_uint64_t(name["members"]["parameter"]);}();
return result;}

    json serialize_VkPerformanceConfigurationAcquireInfoINTEL(VkPerformanceConfigurationAcquireInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BkmqybA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bnetmFd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_BykysQY=json({});
    return serialize_VkPerformanceConfigurationTypeINTEL(name.type);}();
return result;}

    VkPerformanceConfigurationAcquireInfoINTEL deserialize_VkPerformanceConfigurationAcquireInfoINTEL(json &name){
        auto result=VkPerformanceConfigurationAcquireInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_IBPxHNE;[&]() {
temp_IBPxHNE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_IBPxHNE;}();
[&]() {
result.type=deserialize_VkPerformanceConfigurationTypeINTEL(name["members"]["type"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderClockFeaturesKHR(VkPhysicalDeviceShaderClockFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gifDvwh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderSubgroupClock"]=[&]() {
    json return_nDPrKGL=json({});
    return_nDPrKGL=[&]() {
    json return_KlWeCyc=json({});
    return serialize_uint32_t(name.shaderSubgroupClock);}();return return_nDPrKGL;}();
result["members"]["shaderDeviceClock"]=[&]() {
    json return_dUmfzWx=json({});
    return_dUmfzWx=[&]() {
    json return_KUFOZVK=json({});
    return serialize_uint32_t(name.shaderDeviceClock);}();return return_dUmfzWx;}();
return result;}

    VkPhysicalDeviceShaderClockFeaturesKHR deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceShaderClockFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderSubgroupClock=deserialize_uint32_t(name["members"]["shaderSubgroupClock"]);}();}();
[&]() {
[&]() {
result.shaderDeviceClock=deserialize_uint32_t(name["members"]["shaderDeviceClock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkPhysicalDeviceIndexTypeUint8FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JezVDGd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["indexTypeUint8"]=[&]() {
    json return_Dwrkjiw=json({});
    return_Dwrkjiw=[&]() {
    json return_lbuzMbt=json({});
    return serialize_uint32_t(name.indexTypeUint8);}();return return_Dwrkjiw;}();
return result;}

    VkPhysicalDeviceIndexTypeUint8FeaturesEXT deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceIndexTypeUint8FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.indexTypeUint8=deserialize_uint32_t(name["members"]["indexTypeUint8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NqUOOYE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderSMCount"]=[&]() {
    json return_wNsiJag=json({});
    return serialize_uint32_t(name.shaderSMCount);}();
result["members"]["shaderWarpsPerSM"]=[&]() {
    json return_bOJWXvo=json({});
    return serialize_uint32_t(name.shaderWarpsPerSM);}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsPropertiesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(json &name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.shaderSMCount=deserialize_uint32_t(name["members"]["shaderSMCount"]);}();
[&]() {
result.shaderWarpsPerSM=deserialize_uint32_t(name["members"]["shaderWarpsPerSM"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IcQVWWJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderSMBuiltins"]=[&]() {
    json return_WPPlGkY=json({});
    return_WPPlGkY=[&]() {
    json return_UuxfXNh=json({});
    return serialize_uint32_t(name.shaderSMBuiltins);}();return return_WPPlGkY;}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsFeaturesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(json &name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderSMBuiltins=deserialize_uint32_t(name["members"]["shaderSMBuiltins"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zbtRtfF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UISDpBT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentShaderSampleInterlock"]=[&]() {
    json return_DdyVrdJ=json({});
    return_DdyVrdJ=[&]() {
    json return_TaTzIxs=json({});
    return serialize_uint32_t(name.fragmentShaderSampleInterlock);}();return return_DdyVrdJ;}();
result["members"]["fragmentShaderPixelInterlock"]=[&]() {
    json return_SLFxYmu=json({});
    return_SLFxYmu=[&]() {
    json return_iNDLVgP=json({});
    return serialize_uint32_t(name.fragmentShaderPixelInterlock);}();return return_SLFxYmu;}();
result["members"]["fragmentShaderShadingRateInterlock"]=[&]() {
    json return_LbTfWjg=json({});
    return_LbTfWjg=[&]() {
    json return_sTzvOxn=json({});
    return serialize_uint32_t(name.fragmentShaderShadingRateInterlock);}();return return_LbTfWjg;}();
return result;}

    VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.fragmentShaderSampleInterlock=deserialize_uint32_t(name["members"]["fragmentShaderSampleInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderPixelInterlock=deserialize_uint32_t(name["members"]["fragmentShaderPixelInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderShadingRateInterlock=deserialize_uint32_t(name["members"]["fragmentShaderShadingRateInterlock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RdMKnpn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_lZjtKkD=json({});
    return_lZjtKkD=[&]() {
    json return_DiIcWGS=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_lZjtKkD;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(json &name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RdMKnpn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_lZjtKkD=json({});
    return_lZjtKkD=[&]() {
    json return_DiIcWGS=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_lZjtKkD;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayout(VkAttachmentReferenceStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lEEEdUk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stencilLayout"]=[&]() {
    json return_dZVKXod=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayout deserialize_VkAttachmentReferenceStencilLayout(json &name){
        auto result=VkAttachmentReferenceStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QMfGGgv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["primitiveTopologyListRestart"]=[&]() {
    json return_JcsqWEM=json({});
    return_JcsqWEM=[&]() {
    json return_gYxbNVo=json({});
    return serialize_uint32_t(name.primitiveTopologyListRestart);}();return return_JcsqWEM;}();
result["members"]["primitiveTopologyPatchListRestart"]=[&]() {
    json return_eXvwXRD=json({});
    return_eXvwXRD=[&]() {
    json return_CzqrAOc=json({});
    return serialize_uint32_t(name.primitiveTopologyPatchListRestart);}();return return_eXvwXRD;}();
return result;}

    VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.primitiveTopologyListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyListRestart"]);}();}();
[&]() {
[&]() {
result.primitiveTopologyPatchListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyPatchListRestart"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayoutKHR(VkAttachmentReferenceStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lEEEdUk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stencilLayout"]=[&]() {
    json return_dZVKXod=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayoutKHR deserialize_VkAttachmentReferenceStencilLayoutKHR(json &name){
        auto result=VkAttachmentReferenceStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayout(VkAttachmentDescriptionStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MOmecNu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_smobkAG=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_mZGqXvy=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayout deserialize_VkAttachmentDescriptionStencilLayout(json &name){
        auto result=VkAttachmentDescriptionStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayoutKHR(VkAttachmentDescriptionStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MOmecNu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_smobkAG=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_mZGqXvy=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayoutKHR deserialize_VkAttachmentDescriptionStencilLayoutKHR(json &name){
        auto result=VkAttachmentDescriptionStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CGQkDIy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineExecutableInfo"]=[&]() {
    json return_KyPQbMO=json({});
    return_KyPQbMO=[&]() {
    json return_fRnUKkU=json({});
    return serialize_uint32_t(name.pipelineExecutableInfo);}();return return_KyPQbMO;}();
return result;}

    VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(json &name){
        auto result=VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelineExecutableInfo=deserialize_uint32_t(name["members"]["pipelineExecutableInfo"]);}();}();
return result;}

    json serialize_VkPipelineInfoKHR(VkPipelineInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uyPGtgC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipeline"]=[&]() {
    json return_IQjhRnH=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoKHR deserialize_VkPipelineInfoKHR(json &name){
        auto result=VkPipelineInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineInfoEXT(VkPipelineInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uyPGtgC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipeline"]=[&]() {
    json return_IQjhRnH=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoEXT deserialize_VkPipelineInfoEXT(json &name){
        auto result=VkPipelineInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineExecutablePropertiesKHR(VkPipelineExecutablePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_msJCRHp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stages"]=[&]() {
    json return_FiREsGJ=json({});
    return serialize_VkShaderStageFlags(name.stages);}();
result["members"]["name"]=[&]() {
    json return_AvExeUV=json({});
    
        return_AvExeUV["members"]={};
        for(int AvExeUV=0; AvExeUV < VK_MAX_DESCRIPTION_SIZE; AvExeUV++){
            json temp;
            temp=[&]() {
    json return_zdwIowi=json({});
    return serialize_char(name.name[AvExeUV]);}();
            return_AvExeUV["members"].push_back(temp);
        }
        return return_AvExeUV;
        }();
result["members"]["description"]=[&]() {
    json return_wbJvGOo=json({});
    
        return_wbJvGOo["members"]={};
        for(int wbJvGOo=0; wbJvGOo < VK_MAX_DESCRIPTION_SIZE; wbJvGOo++){
            json temp;
            temp=[&]() {
    json return_TguRCno=json({});
    return serialize_char(name.description[wbJvGOo]);}();
            return_wbJvGOo["members"].push_back(temp);
        }
        return return_wbJvGOo;
        }();
result["members"]["subgroupSize"]=[&]() {
    json return_TblRvsi=json({});
    return serialize_uint32_t(name.subgroupSize);}();
return result;}

    VkPipelineExecutablePropertiesKHR deserialize_VkPipelineExecutablePropertiesKHR(json &name){
        auto result=VkPipelineExecutablePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.stages=deserialize_VkShaderStageFlags(name["members"]["stages"]);}();
[&]() {

        for (int ViCKKet=0; ViCKKet < VK_MAX_DESCRIPTION_SIZE; ViCKKet++){
            [&]() {
result.name[ViCKKet]=deserialize_char(name["members"]["name"]["members"][ViCKKet]);}();;
        }
        }();
[&]() {

        for (int ZylaXWV=0; ZylaXWV < VK_MAX_DESCRIPTION_SIZE; ZylaXWV++){
            [&]() {
result.description[ZylaXWV]=deserialize_char(name["members"]["description"]["members"][ZylaXWV]);}();;
        }
        }();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
return result;}

    json serialize_VkPipelineExecutableInfoKHR(VkPipelineExecutableInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gBqVhxW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipeline"]=[&]() {
    json return_wmmSraJ=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["executableIndex"]=[&]() {
    json return_EMbbFHk=json({});
    return serialize_uint32_t(name.executableIndex);}();
return result;}

    VkPipelineExecutableInfoKHR deserialize_VkPipelineExecutableInfoKHR(json &name){
        auto result=VkPipelineExecutableInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.executableIndex=deserialize_uint32_t(name["members"]["executableIndex"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticValueKHR(VkPipelineExecutableStatisticValueKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["b32"]=[&]() {
    json return_fxbHxpg=json({});
    return_fxbHxpg=[&]() {
    json return_QzSeyUg=json({});
    return serialize_uint32_t(name.b32);}();return return_fxbHxpg;}();
result["members"]["i64"]=[&]() {
    json return_HJQZIEk=json({});
    return serialize_int64_t(name.i64);}();
result["members"]["u64"]=[&]() {
    json return_yGPGsPO=json({});
    return serialize_uint64_t(name.u64);}();
result["members"]["f64"]=[&]() {
    json return_dAuPxXs=json({});
    return serialize_double(name.f64);}();
return result;}

    VkPipelineExecutableStatisticValueKHR deserialize_VkPipelineExecutableStatisticValueKHR(json &name){
        auto result=VkPipelineExecutableStatisticValueKHR();
    
[&]() {
[&]() {
result.b32=deserialize_uint32_t(name["members"]["b32"]);}();}();
[&]() {
result.i64=deserialize_int64_t(name["members"]["i64"]);}();
[&]() {
result.u64=deserialize_uint64_t(name["members"]["u64"]);}();
[&]() {
result.f64=deserialize_double(name["members"]["f64"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticKHR(VkPipelineExecutableStatisticKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wkBKCPC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["name"]=[&]() {
    json return_AvExeUV=json({});
    
        return_AvExeUV["members"]={};
        for(int AvExeUV=0; AvExeUV < VK_MAX_DESCRIPTION_SIZE; AvExeUV++){
            json temp;
            temp=[&]() {
    json return_zdwIowi=json({});
    return serialize_char(name.name[AvExeUV]);}();
            return_AvExeUV["members"].push_back(temp);
        }
        return return_AvExeUV;
        }();
result["members"]["description"]=[&]() {
    json return_wbJvGOo=json({});
    
        return_wbJvGOo["members"]={};
        for(int wbJvGOo=0; wbJvGOo < VK_MAX_DESCRIPTION_SIZE; wbJvGOo++){
            json temp;
            temp=[&]() {
    json return_TguRCno=json({});
    return serialize_char(name.description[wbJvGOo]);}();
            return_wbJvGOo["members"].push_back(temp);
        }
        return return_wbJvGOo;
        }();
result["members"]["format"]=[&]() {
    json return_JURKCJR=json({});
    return serialize_VkPipelineExecutableStatisticFormatKHR(name.format);}();
result["members"]["value"]=[&]() {
    json return_praVmCm=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(name.value);}();
return result;}

    VkPipelineExecutableStatisticKHR deserialize_VkPipelineExecutableStatisticKHR(json &name){
        auto result=VkPipelineExecutableStatisticKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int ViCKKet=0; ViCKKet < VK_MAX_DESCRIPTION_SIZE; ViCKKet++){
            [&]() {
result.name[ViCKKet]=deserialize_char(name["members"]["name"]["members"][ViCKKet]);}();;
        }
        }();
[&]() {

        for (int ZylaXWV=0; ZylaXWV < VK_MAX_DESCRIPTION_SIZE; ZylaXWV++){
            [&]() {
result.description[ZylaXWV]=deserialize_char(name["members"]["description"]["members"][ZylaXWV]);}();;
        }
        }();
[&]() {
result.format=deserialize_VkPipelineExecutableStatisticFormatKHR(name["members"]["format"]);}();
[&]() {
result.value=deserialize_VkPipelineExecutableStatisticValueKHR(name["members"]["value"]);}();
return result;}

    json serialize_VkPipelineExecutableInternalRepresentationKHR(VkPipelineExecutableInternalRepresentationKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Nsjrnkw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["name"]=[&]() {
    json return_AvExeUV=json({});
    
        return_AvExeUV["members"]={};
        for(int AvExeUV=0; AvExeUV < VK_MAX_DESCRIPTION_SIZE; AvExeUV++){
            json temp;
            temp=[&]() {
    json return_zdwIowi=json({});
    return serialize_char(name.name[AvExeUV]);}();
            return_AvExeUV["members"].push_back(temp);
        }
        return return_AvExeUV;
        }();
result["members"]["description"]=[&]() {
    json return_wbJvGOo=json({});
    
        return_wbJvGOo["members"]={};
        for(int wbJvGOo=0; wbJvGOo < VK_MAX_DESCRIPTION_SIZE; wbJvGOo++){
            json temp;
            temp=[&]() {
    json return_TguRCno=json({});
    return serialize_char(name.description[wbJvGOo]);}();
            return_wbJvGOo["members"].push_back(temp);
        }
        return return_wbJvGOo;
        }();
result["members"]["isText"]=[&]() {
    json return_BrIavMU=json({});
    return_BrIavMU=[&]() {
    json return_dwTfZWV=json({});
    return serialize_uint32_t(name.isText);}();return return_BrIavMU;}();
result["members"]["dataSize"]=[&]() {
    json return_LLKSOKL=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_eAHfOMP=json({});
    
        if (name.pData==NULL){
            return_eAHfOMP["null"]=true;
            return return_eAHfOMP;
        }
        return_eAHfOMP=[&]() {
    json return_YaSTGSd=json({});
    
        if (((char*)(name.pData))==NULL){
            return_YaSTGSd["null"]=true;
            return return_YaSTGSd;
        }
        
        return_YaSTGSd["members"]={};
        for(int YaSTGSd=0; YaSTGSd < name.dataSize; YaSTGSd++){
            json temp;
            temp=[&]() {
    json return_CYbGzWJ=json({});
    return serialize_char(((char*)(name.pData))[YaSTGSd]);}();
            return_YaSTGSd["members"].push_back(temp);
        }
        return return_YaSTGSd;
        }();return return_eAHfOMP;}();
return result;}

    VkPipelineExecutableInternalRepresentationKHR deserialize_VkPipelineExecutableInternalRepresentationKHR(json &name){
        auto result=VkPipelineExecutableInternalRepresentationKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int ViCKKet=0; ViCKKet < VK_MAX_DESCRIPTION_SIZE; ViCKKet++){
            [&]() {
result.name[ViCKKet]=deserialize_char(name["members"]["name"]["members"][ViCKKet]);}();;
        }
        }();
[&]() {

        for (int ZylaXWV=0; ZylaXWV < VK_MAX_DESCRIPTION_SIZE; ZylaXWV++){
            [&]() {
result.description[ZylaXWV]=deserialize_char(name["members"]["description"]["members"][ZylaXWV]);}();;
        }
        }();
[&]() {
[&]() {
result.isText=deserialize_uint32_t(name["members"]["isText"]);}();}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {

        if (name["members"]["pData"].contains("null")){
        result.pData=NULL;
        return;
        }
    char* temp_pamfDof;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_pamfDof=NULL;
        return;
        }
    temp_pamfDof=(char*)malloc(result.dataSize*sizeof(char));
        for (int ORDEyIl=0; ORDEyIl < result.dataSize; ORDEyIl++){
            [&]() {
temp_pamfDof[ORDEyIl]=deserialize_char(name["members"]["pData"]["members"][ORDEyIl]);}();;
        }
        }();result.pData=(void*)temp_pamfDof;
}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fQVJvjL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_nVxGDjo=json({});
    return_nVxGDjo=[&]() {
    json return_oukLlSo=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_nVxGDjo;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(json &name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fQVJvjL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_nVxGDjo=json({});
    return_nVxGDjo=[&]() {
    json return_oukLlSo=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_nVxGDjo;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_psGPwzV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["texelBufferAlignment"]=[&]() {
    json return_ojftLiG=json({});
    return_ojftLiG=[&]() {
    json return_ITKMAAR=json({});
    return serialize_uint32_t(name.texelBufferAlignment);}();return return_ojftLiG;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.texelBufferAlignment=deserialize_uint32_t(name["members"]["texelBufferAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(VkPhysicalDeviceTexelBufferAlignmentProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GHHkvjE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_LACkYAD=json({});
    return_LACkYAD=[&]() {
    json return_QFHkvIX=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_LACkYAD;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_tXYqPcr=json({});
    return_tXYqPcr=[&]() {
    json return_zbKsrPE=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_tXYqPcr;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_ffkCJBi=json({});
    return_ffkCJBi=[&]() {
    json return_tsBdYuc=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_ffkCJBi;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_EifJCAV=json({});
    return_EifJCAV=[&]() {
    json return_MpLvRNV=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_EifJCAV;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentProperties deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(json &name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GHHkvjE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_LACkYAD=json({});
    return_LACkYAD=[&]() {
    json return_QFHkvIX=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_LACkYAD;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_tXYqPcr=json({});
    return_tXYqPcr=[&]() {
    json return_zbKsrPE=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_tXYqPcr;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_ffkCJBi=json({});
    return_ffkCJBi=[&]() {
    json return_tsBdYuc=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_ffkCJBi;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_EifJCAV=json({});
    return_EifJCAV=[&]() {
    json return_MpLvRNV=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_EifJCAV;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(VkPhysicalDeviceSubgroupSizeControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_seruhwS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_TuXnKhO=json({});
    return_TuXnKhO=[&]() {
    json return_bamrIpp=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_TuXnKhO;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_DEvhARi=json({});
    return_DEvhARi=[&]() {
    json return_DQaPVrK=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_DEvhARi;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeatures deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(json &name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_seruhwS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_TuXnKhO=json({});
    return_TuXnKhO=[&]() {
    json return_bamrIpp=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_TuXnKhO;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_DEvhARi=json({});
    return_DEvhARi=[&]() {
    json return_DQaPVrK=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_DEvhARi;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeaturesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlProperties(VkPhysicalDeviceSubgroupSizeControlProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DnqPTys=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_qLSZcWB=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_LBxfpya=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_AAOZvuZ=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_pRcMxpX=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlProperties deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(json &name){
        auto result=VkPhysicalDeviceSubgroupSizeControlProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DnqPTys=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_qLSZcWB=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_LBxfpya=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_AAOZvuZ=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_pRcMxpX=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlPropertiesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceSubgroupSizeControlPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oZoltvE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_qPDRUdy=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfo deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(json &name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oZoltvE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_qPDRUdy=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(json &name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(VkShaderRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oZoltvE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_qPDRUdy=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkShaderRequiredSubgroupSizeCreateInfoEXT deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(json &name){
        auto result=VkShaderRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(VkSubpassShadingPipelineCreateInfoHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zWmHbjs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["renderPass"]=[&]() {
    json return_KtIQXAp=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_qmQimzg=json({});
    return serialize_uint32_t(name.subpass);}();
return result;}

    VkSubpassShadingPipelineCreateInfoHUAWEI deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(json &name){
        auto result=VkSubpassShadingPipelineCreateInfoHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dcaBqhb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]=[&]() {
    json return_DuKWYaI=json({});
    return serialize_uint32_t(name.maxSubpassShadingWorkgroupSizeAspectRatio);}();
return result;}

    VkPhysicalDeviceSubpassShadingPropertiesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(json &name){
        auto result=VkPhysicalDeviceSubpassShadingPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxSubpassShadingWorkgroupSizeAspectRatio=deserialize_uint32_t(name["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]);}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jCXCGjD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxWorkGroupCount"]=[&]() {
    json return_leKhpbL=json({});
    
        return_leKhpbL["members"]={};
        for(int leKhpbL=0; leKhpbL < 3; leKhpbL++){
            json temp;
            temp=[&]() {
    json return_KujFmXy=json({});
    return serialize_uint32_t(name.maxWorkGroupCount[leKhpbL]);}();
            return_leKhpbL["members"].push_back(temp);
        }
        return return_leKhpbL;
        }();
result["members"]["maxWorkGroupSize"]=[&]() {
    json return_CCzkKza=json({});
    
        return_CCzkKza["members"]={};
        for(int CCzkKza=0; CCzkKza < 3; CCzkKza++){
            json temp;
            temp=[&]() {
    json return_BUFlvcA=json({});
    return serialize_uint32_t(name.maxWorkGroupSize[CCzkKza]);}();
            return_CCzkKza["members"].push_back(temp);
        }
        return return_CCzkKza;
        }();
result["members"]["maxOutputClusterCount"]=[&]() {
    json return_cMgYSFR=json({});
    return serialize_uint32_t(name.maxOutputClusterCount);}();
result["members"]["indirectBufferOffsetAlignment"]=[&]() {
    json return_ssnWoUb=json({});
    return_ssnWoUb=[&]() {
    json return_SZbvCgc=json({});
    return serialize_uint64_t(name.indirectBufferOffsetAlignment);}();return return_ssnWoUb;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(json &name){
        auto result=VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int ejzwOCk=0; ejzwOCk < 3; ejzwOCk++){
            [&]() {
result.maxWorkGroupCount[ejzwOCk]=deserialize_uint32_t(name["members"]["maxWorkGroupCount"]["members"][ejzwOCk]);}();;
        }
        }();
[&]() {

        for (int ppAjkrc=0; ppAjkrc < 3; ppAjkrc++){
            [&]() {
result.maxWorkGroupSize[ppAjkrc]=deserialize_uint32_t(name["members"]["maxWorkGroupSize"]["members"][ppAjkrc]);}();;
        }
        }();
[&]() {
result.maxOutputClusterCount=deserialize_uint32_t(name["members"]["maxOutputClusterCount"]);}();
[&]() {
[&]() {
result.indirectBufferOffsetAlignment=deserialize_uint64_t(name["members"]["indirectBufferOffsetAlignment"]);}();}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(VkMemoryOpaqueCaptureAddressAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jODYmsg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DXfRYCc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_WhEbFIn=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfo deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(json &name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KmUErOG;[&]() {
temp_KmUErOG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KmUErOG;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(VkMemoryOpaqueCaptureAddressAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jODYmsg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DXfRYCc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_WhEbFIn=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfoKHR deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(json &name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KmUErOG;[&]() {
temp_KmUErOG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KmUErOG;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(VkDeviceMemoryOpaqueCaptureAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vzpczDi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memory"]=[&]() {
    json return_nfcCaEf=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfo deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(json &name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(VkDeviceMemoryOpaqueCaptureAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vzpczDi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memory"]=[&]() {
    json return_nfcCaEf=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfoKHR deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(json &name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(VkPhysicalDeviceLineRasterizationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LqwkHCJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rectangularLines"]=[&]() {
    json return_sFwYOaC=json({});
    return_sFwYOaC=[&]() {
    json return_QhpCssz=json({});
    return serialize_uint32_t(name.rectangularLines);}();return return_sFwYOaC;}();
result["members"]["bresenhamLines"]=[&]() {
    json return_XULnbfo=json({});
    return_XULnbfo=[&]() {
    json return_qMqGcUs=json({});
    return serialize_uint32_t(name.bresenhamLines);}();return return_XULnbfo;}();
result["members"]["smoothLines"]=[&]() {
    json return_BajRObM=json({});
    return_BajRObM=[&]() {
    json return_nnBxUny=json({});
    return serialize_uint32_t(name.smoothLines);}();return return_BajRObM;}();
result["members"]["stippledRectangularLines"]=[&]() {
    json return_NgEKPam=json({});
    return_NgEKPam=[&]() {
    json return_cwEBRHf=json({});
    return serialize_uint32_t(name.stippledRectangularLines);}();return return_NgEKPam;}();
result["members"]["stippledBresenhamLines"]=[&]() {
    json return_LSTCNzc=json({});
    return_LSTCNzc=[&]() {
    json return_SwAGudx=json({});
    return serialize_uint32_t(name.stippledBresenhamLines);}();return return_LSTCNzc;}();
result["members"]["stippledSmoothLines"]=[&]() {
    json return_pUaTFQh=json({});
    return_pUaTFQh=[&]() {
    json return_rgmlGWl=json({});
    return serialize_uint32_t(name.stippledSmoothLines);}();return return_pUaTFQh;}();
return result;}

    VkPhysicalDeviceLineRasterizationFeaturesEXT deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceLineRasterizationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rectangularLines=deserialize_uint32_t(name["members"]["rectangularLines"]);}();}();
[&]() {
[&]() {
result.bresenhamLines=deserialize_uint32_t(name["members"]["bresenhamLines"]);}();}();
[&]() {
[&]() {
result.smoothLines=deserialize_uint32_t(name["members"]["smoothLines"]);}();}();
[&]() {
[&]() {
result.stippledRectangularLines=deserialize_uint32_t(name["members"]["stippledRectangularLines"]);}();}();
[&]() {
[&]() {
result.stippledBresenhamLines=deserialize_uint32_t(name["members"]["stippledBresenhamLines"]);}();}();
[&]() {
[&]() {
result.stippledSmoothLines=deserialize_uint32_t(name["members"]["stippledSmoothLines"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(VkPhysicalDeviceLineRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zDNMEmy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["lineSubPixelPrecisionBits"]=[&]() {
    json return_dGTSBcX=json({});
    return serialize_uint32_t(name.lineSubPixelPrecisionBits);}();
return result;}

    VkPhysicalDeviceLineRasterizationPropertiesEXT deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceLineRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.lineSubPixelPrecisionBits=deserialize_uint32_t(name["members"]["lineSubPixelPrecisionBits"]);}();
return result;}

    json serialize_VkPipelineRasterizationLineStateCreateInfoEXT(VkPipelineRasterizationLineStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FQHiotF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHZCliN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["lineRasterizationMode"]=[&]() {
    json return_KiGkpFH=json({});
    return serialize_VkLineRasterizationModeEXT(name.lineRasterizationMode);}();
result["members"]["stippledLineEnable"]=[&]() {
    json return_lNxXStH=json({});
    return_lNxXStH=[&]() {
    json return_fWjLbAl=json({});
    return serialize_uint32_t(name.stippledLineEnable);}();return return_lNxXStH;}();
result["members"]["lineStippleFactor"]=[&]() {
    json return_kpmqDZG=json({});
    return serialize_uint32_t(name.lineStippleFactor);}();
result["members"]["lineStipplePattern"]=[&]() {
    json return_ThkxoBe=json({});
    return serialize_uint16_t(name.lineStipplePattern);}();
return result;}

    VkPipelineRasterizationLineStateCreateInfoEXT deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(json &name){
        auto result=VkPipelineRasterizationLineStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KcgwZpm;[&]() {
temp_KcgwZpm=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KcgwZpm;}();
[&]() {
result.lineRasterizationMode=deserialize_VkLineRasterizationModeEXT(name["members"]["lineRasterizationMode"]);}();
[&]() {
[&]() {
result.stippledLineEnable=deserialize_uint32_t(name["members"]["stippledLineEnable"]);}();}();
[&]() {
result.lineStippleFactor=deserialize_uint32_t(name["members"]["lineStippleFactor"]);}();
[&]() {
result.lineStipplePattern=deserialize_uint16_t(name["members"]["lineStipplePattern"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(VkPhysicalDevicePipelineCreationCacheControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_afpQDKA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_kCjvOos=json({});
    return_kCjvOos=[&]() {
    json return_YfJXitH=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_kCjvOos;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeatures deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(json &name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_afpQDKA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_kCjvOos=json({});
    return_kCjvOos=[&]() {
    json return_YfJXitH=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_kCjvOos;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Features(VkPhysicalDeviceVulkan11Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lXmIUnT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_MiRrbTk=json({});
    return_MiRrbTk=[&]() {
    json return_cgdXrGM=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_MiRrbTk;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_JtAQzbG=json({});
    return_JtAQzbG=[&]() {
    json return_PDSrSJS=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_JtAQzbG;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_jHhMKdk=json({});
    return_jHhMKdk=[&]() {
    json return_rtMZgIu=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_jHhMKdk;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_yOMshke=json({});
    return_yOMshke=[&]() {
    json return_yYSvhoK=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_yOMshke;}();
result["members"]["multiview"]=[&]() {
    json return_FTdoSpQ=json({});
    return_FTdoSpQ=[&]() {
    json return_SXGPiIu=json({});
    return serialize_uint32_t(name.multiview);}();return return_FTdoSpQ;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_lEykoKK=json({});
    return_lEykoKK=[&]() {
    json return_vCdKYIv=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_lEykoKK;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_GEIruYS=json({});
    return_GEIruYS=[&]() {
    json return_TyWpAgD=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_GEIruYS;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_bvmSoek=json({});
    return_bvmSoek=[&]() {
    json return_TOuGETk=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_bvmSoek;}();
result["members"]["variablePointers"]=[&]() {
    json return_lfoCkiw=json({});
    return_lfoCkiw=[&]() {
    json return_qmyCmMm=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_lfoCkiw;}();
result["members"]["protectedMemory"]=[&]() {
    json return_gQiHFqI=json({});
    return_gQiHFqI=[&]() {
    json return_fIEMokA=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_gQiHFqI;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_CQOOdyg=json({});
    return_CQOOdyg=[&]() {
    json return_OnnVBjA=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_CQOOdyg;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_uCXwiGC=json({});
    return_uCXwiGC=[&]() {
    json return_TTNHWCS=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_uCXwiGC;}();
return result;}

    VkPhysicalDeviceVulkan11Features deserialize_VkPhysicalDeviceVulkan11Features(json &name){
        auto result=VkPhysicalDeviceVulkan11Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Properties(VkPhysicalDeviceVulkan11Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cdxMgQw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzYcFOJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceUUID"]=[&]() {
    json return_eGVvlGo=json({});
    
        return_eGVvlGo["members"]={};
        for(int eGVvlGo=0; eGVvlGo < VK_UUID_SIZE; eGVvlGo++){
            json temp;
            temp=[&]() {
    json return_lPuTChK=json({});
    return serialize_uint8_t(name.deviceUUID[eGVvlGo]);}();
            return_eGVvlGo["members"].push_back(temp);
        }
        return return_eGVvlGo;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_LICjtCf=json({});
    
        return_LICjtCf["members"]={};
        for(int LICjtCf=0; LICjtCf < VK_UUID_SIZE; LICjtCf++){
            json temp;
            temp=[&]() {
    json return_sVDWMwu=json({});
    return serialize_uint8_t(name.driverUUID[LICjtCf]);}();
            return_LICjtCf["members"].push_back(temp);
        }
        return return_LICjtCf;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_sNOfWFh=json({});
    
        return_sNOfWFh["members"]={};
        for(int sNOfWFh=0; sNOfWFh < VK_LUID_SIZE; sNOfWFh++){
            json temp;
            temp=[&]() {
    json return_pXDdzlO=json({});
    return serialize_uint8_t(name.deviceLUID[sNOfWFh]);}();
            return_sNOfWFh["members"].push_back(temp);
        }
        return return_sNOfWFh;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_QzxFJbk=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_ePclRMp=json({});
    return_ePclRMp=[&]() {
    json return_yHGkkyg=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_ePclRMp;}();
result["members"]["subgroupSize"]=[&]() {
    json return_oWZVTbt=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["subgroupSupportedStages"]=[&]() {
    json return_XvjZKyp=json({});
    return serialize_VkShaderStageFlags(name.subgroupSupportedStages);}();
result["members"]["subgroupSupportedOperations"]=[&]() {
    json return_SqepfiY=json({});
    return serialize_VkSubgroupFeatureFlags(name.subgroupSupportedOperations);}();
result["members"]["subgroupQuadOperationsInAllStages"]=[&]() {
    json return_hWgZpNk=json({});
    return_hWgZpNk=[&]() {
    json return_kBYIizb=json({});
    return serialize_uint32_t(name.subgroupQuadOperationsInAllStages);}();return return_hWgZpNk;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_aRoRVFu=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_fQNZzSG=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_YcokfOa=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_aqwvFBE=json({});
    return_aqwvFBE=[&]() {
    json return_ykDiYVM=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_aqwvFBE;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_rVuszBf=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_lUluAbj=json({});
    return_lUluAbj=[&]() {
    json return_YNenBoZ=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_lUluAbj;}();
return result;}

    VkPhysicalDeviceVulkan11Properties deserialize_VkPhysicalDeviceVulkan11Properties(json &name){
        auto result=VkPhysicalDeviceVulkan11Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int fcTvwWf=0; fcTvwWf < VK_UUID_SIZE; fcTvwWf++){
            [&]() {
result.deviceUUID[fcTvwWf]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][fcTvwWf]);}();;
        }
        }();
[&]() {

        for (int xJklaWQ=0; xJklaWQ < VK_UUID_SIZE; xJklaWQ++){
            [&]() {
result.driverUUID[xJklaWQ]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][xJklaWQ]);}();;
        }
        }();
[&]() {

        for (int LRBiYMy=0; LRBiYMy < VK_LUID_SIZE; LRBiYMy++){
            [&]() {
result.deviceLUID[LRBiYMy]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][LRBiYMy]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.subgroupSupportedStages=deserialize_VkShaderStageFlags(name["members"]["subgroupSupportedStages"]);}();
[&]() {
result.subgroupSupportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["subgroupSupportedOperations"]);}();
[&]() {
[&]() {
result.subgroupQuadOperationsInAllStages=deserialize_uint32_t(name["members"]["subgroupQuadOperationsInAllStages"]);}();}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Features(VkPhysicalDeviceVulkan12Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TzWyutu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["samplerMirrorClampToEdge"]=[&]() {
    json return_APDOoHP=json({});
    return_APDOoHP=[&]() {
    json return_KsJJMlV=json({});
    return serialize_uint32_t(name.samplerMirrorClampToEdge);}();return return_APDOoHP;}();
result["members"]["drawIndirectCount"]=[&]() {
    json return_MmbjsNN=json({});
    return_MmbjsNN=[&]() {
    json return_qdeFQlv=json({});
    return serialize_uint32_t(name.drawIndirectCount);}();return return_MmbjsNN;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_eqSgfTP=json({});
    return_eqSgfTP=[&]() {
    json return_JLMWDcz=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_eqSgfTP;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_ZsEiMnq=json({});
    return_ZsEiMnq=[&]() {
    json return_XkVgzlP=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_ZsEiMnq;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_yOCuQZd=json({});
    return_yOCuQZd=[&]() {
    json return_bPVGnhz=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_yOCuQZd;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_ughyofd=json({});
    return_ughyofd=[&]() {
    json return_SNNMOal=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_ughyofd;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_iGKoqIM=json({});
    return_iGKoqIM=[&]() {
    json return_pMEivas=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_iGKoqIM;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_KNhKiAn=json({});
    return_KNhKiAn=[&]() {
    json return_OnGgCTI=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_KNhKiAn;}();
result["members"]["shaderInt8"]=[&]() {
    json return_xBrwOcN=json({});
    return_xBrwOcN=[&]() {
    json return_rHDOXRH=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_xBrwOcN;}();
result["members"]["descriptorIndexing"]=[&]() {
    json return_xCkTXrx=json({});
    return_xCkTXrx=[&]() {
    json return_OXBBDkr=json({});
    return serialize_uint32_t(name.descriptorIndexing);}();return return_xCkTXrx;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_VBijoCX=json({});
    return_VBijoCX=[&]() {
    json return_zIMipzi=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_VBijoCX;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_mHcGdjY=json({});
    return_mHcGdjY=[&]() {
    json return_IrmYtKv=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_mHcGdjY;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_AisfFoV=json({});
    return_AisfFoV=[&]() {
    json return_cphIYaf=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_AisfFoV;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_viSPqLx=json({});
    return_viSPqLx=[&]() {
    json return_FNtFPVN=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_viSPqLx;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_viVJyHD=json({});
    return_viVJyHD=[&]() {
    json return_dtVTywN=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_viVJyHD;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_wCNpyAP=json({});
    return_wCNpyAP=[&]() {
    json return_tmOEibq=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_wCNpyAP;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_fydRxTT=json({});
    return_fydRxTT=[&]() {
    json return_gbyyDLx=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_fydRxTT;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_RzPPWDG=json({});
    return_RzPPWDG=[&]() {
    json return_RMbvefC=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_RzPPWDG;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_WhgeYDX=json({});
    return_WhgeYDX=[&]() {
    json return_fblDgGG=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_WhgeYDX;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_IdDQXfB=json({});
    return_IdDQXfB=[&]() {
    json return_otRcjUG=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_IdDQXfB;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_MnvQfGt=json({});
    return_MnvQfGt=[&]() {
    json return_CFuQVGH=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_MnvQfGt;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_VGgeJhn=json({});
    return_VGgeJhn=[&]() {
    json return_lyZGeKR=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_VGgeJhn;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_eVsbhEQ=json({});
    return_eVsbhEQ=[&]() {
    json return_mTejdGi=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_eVsbhEQ;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_kfBUaJG=json({});
    return_kfBUaJG=[&]() {
    json return_xIswSQh=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_kfBUaJG;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_RumQxCt=json({});
    return_RumQxCt=[&]() {
    json return_EzsVlKk=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_RumQxCt;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_niZRruP=json({});
    return_niZRruP=[&]() {
    json return_pJYqGfl=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_niZRruP;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_lgivFnP=json({});
    return_lgivFnP=[&]() {
    json return_vxZbVuh=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_lgivFnP;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_EQefXol=json({});
    return_EQefXol=[&]() {
    json return_HaaOWkV=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_EQefXol;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_jOTIIKd=json({});
    return_jOTIIKd=[&]() {
    json return_MUllcwX=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_jOTIIKd;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_MIpWHLd=json({});
    return_MIpWHLd=[&]() {
    json return_ZVLMnBV=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_MIpWHLd;}();
result["members"]["samplerFilterMinmax"]=[&]() {
    json return_Olyyifk=json({});
    return_Olyyifk=[&]() {
    json return_fbTmZTw=json({});
    return serialize_uint32_t(name.samplerFilterMinmax);}();return return_Olyyifk;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_TFJRqpk=json({});
    return_TFJRqpk=[&]() {
    json return_KhzTGWP=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_TFJRqpk;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_BhdntJV=json({});
    return_BhdntJV=[&]() {
    json return_Bdenndn=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_BhdntJV;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_khyIUVv=json({});
    return_khyIUVv=[&]() {
    json return_FgZtqno=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_khyIUVv;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_RVNjkkq=json({});
    return_RVNjkkq=[&]() {
    json return_hpykuqj=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_RVNjkkq;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_znRLiJZ=json({});
    return_znRLiJZ=[&]() {
    json return_mEjpiqE=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_znRLiJZ;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_OVmgrMw=json({});
    return_OVmgrMw=[&]() {
    json return_xwmiOQY=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_OVmgrMw;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_OWVNVnq=json({});
    return_OWVNVnq=[&]() {
    json return_PouDvnB=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_OWVNVnq;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_TMsAXNT=json({});
    return_TMsAXNT=[&]() {
    json return_twrckrc=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_TMsAXNT;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_YDsfuGa=json({});
    return_YDsfuGa=[&]() {
    json return_LionjZW=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_YDsfuGa;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_oSWWizH=json({});
    return_oSWWizH=[&]() {
    json return_ROSxqkm=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_oSWWizH;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_BdUhIzR=json({});
    return_BdUhIzR=[&]() {
    json return_LnIFxQS=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_BdUhIzR;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_jRUfGck=json({});
    return_jRUfGck=[&]() {
    json return_whHacGv=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_jRUfGck;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_WrMsuKv=json({});
    return_WrMsuKv=[&]() {
    json return_inhzKHS=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_WrMsuKv;}();
result["members"]["shaderOutputViewportIndex"]=[&]() {
    json return_cxadvhX=json({});
    return_cxadvhX=[&]() {
    json return_cOFtEbR=json({});
    return serialize_uint32_t(name.shaderOutputViewportIndex);}();return return_cxadvhX;}();
result["members"]["shaderOutputLayer"]=[&]() {
    json return_IpbEprn=json({});
    return_IpbEprn=[&]() {
    json return_BxQRYpK=json({});
    return serialize_uint32_t(name.shaderOutputLayer);}();return return_IpbEprn;}();
result["members"]["subgroupBroadcastDynamicId"]=[&]() {
    json return_xTyemKn=json({});
    return_xTyemKn=[&]() {
    json return_MUpLHmh=json({});
    return serialize_uint32_t(name.subgroupBroadcastDynamicId);}();return return_xTyemKn;}();
return result;}

    VkPhysicalDeviceVulkan12Features deserialize_VkPhysicalDeviceVulkan12Features(json &name){
        auto result=VkPhysicalDeviceVulkan12Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.samplerMirrorClampToEdge=deserialize_uint32_t(name["members"]["samplerMirrorClampToEdge"]);}();}();
[&]() {
[&]() {
result.drawIndirectCount=deserialize_uint32_t(name["members"]["drawIndirectCount"]);}();}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
[&]() {
[&]() {
result.descriptorIndexing=deserialize_uint32_t(name["members"]["descriptorIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
[&]() {
[&]() {
result.samplerFilterMinmax=deserialize_uint32_t(name["members"]["samplerFilterMinmax"]);}();}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
[&]() {
[&]() {
result.shaderOutputViewportIndex=deserialize_uint32_t(name["members"]["shaderOutputViewportIndex"]);}();}();
[&]() {
[&]() {
result.shaderOutputLayer=deserialize_uint32_t(name["members"]["shaderOutputLayer"]);}();}();
[&]() {
[&]() {
result.subgroupBroadcastDynamicId=deserialize_uint32_t(name["members"]["subgroupBroadcastDynamicId"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Properties(VkPhysicalDeviceVulkan12Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_whEamQe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["driverID"]=[&]() {
    json return_uRgLiew=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_aFUJukm=json({});
    
        return_aFUJukm["members"]={};
        for(int aFUJukm=0; aFUJukm < VK_MAX_DRIVER_NAME_SIZE; aFUJukm++){
            json temp;
            temp=[&]() {
    json return_iCteRrL=json({});
    return serialize_char(name.driverName[aFUJukm]);}();
            return_aFUJukm["members"].push_back(temp);
        }
        return return_aFUJukm;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_jBfCxXM=json({});
    
        return_jBfCxXM["members"]={};
        for(int jBfCxXM=0; jBfCxXM < VK_MAX_DRIVER_INFO_SIZE; jBfCxXM++){
            json temp;
            temp=[&]() {
    json return_aOZRRKQ=json({});
    return serialize_char(name.driverInfo[jBfCxXM]);}();
            return_jBfCxXM["members"].push_back(temp);
        }
        return return_jBfCxXM;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_twzMqGw=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_xHGBjki=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_pUeUpQh=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_KvgjvfC=json({});
    return_KvgjvfC=[&]() {
    json return_AtQJtkc=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_KvgjvfC;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_SCIaJTV=json({});
    return_SCIaJTV=[&]() {
    json return_gkbvlYq=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_SCIaJTV;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_GSrFECX=json({});
    return_GSrFECX=[&]() {
    json return_bfpRjAN=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_GSrFECX;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_wzhQwdP=json({});
    return_wzhQwdP=[&]() {
    json return_wXRySBH=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_wzhQwdP;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_TXqiAou=json({});
    return_TXqiAou=[&]() {
    json return_awuPhPl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_TXqiAou;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_gEaOAUk=json({});
    return_gEaOAUk=[&]() {
    json return_MFpdPNu=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_gEaOAUk;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_eOzzXWM=json({});
    return_eOzzXWM=[&]() {
    json return_mMTOLOt=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_eOzzXWM;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_DOOaIkg=json({});
    return_DOOaIkg=[&]() {
    json return_rddCspD=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_DOOaIkg;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_NJaOBmK=json({});
    return_NJaOBmK=[&]() {
    json return_wgkWbjR=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_NJaOBmK;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_wnbjLWY=json({});
    return_wnbjLWY=[&]() {
    json return_WHXigcs=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_wnbjLWY;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_HUNXwIO=json({});
    return_HUNXwIO=[&]() {
    json return_KYpkPpC=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_HUNXwIO;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_ovkoOnI=json({});
    return_ovkoOnI=[&]() {
    json return_tWRawsC=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_ovkoOnI;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_iZNtVhA=json({});
    return_iZNtVhA=[&]() {
    json return_GCOsOyB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_iZNtVhA;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_tazbAXR=json({});
    return_tazbAXR=[&]() {
    json return_DohmFUw=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_tazbAXR;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_ZOxTKTj=json({});
    return_ZOxTKTj=[&]() {
    json return_nYuFGCn=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_ZOxTKTj;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_HvKWrEt=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_HJgOzlP=json({});
    return_HJgOzlP=[&]() {
    json return_bcsHpBk=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_HJgOzlP;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_dZsYoMt=json({});
    return_dZsYoMt=[&]() {
    json return_AncpUDF=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_dZsYoMt;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_npEgWwC=json({});
    return_npEgWwC=[&]() {
    json return_lUPblnR=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_npEgWwC;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_xJJeInV=json({});
    return_xJJeInV=[&]() {
    json return_fEkjCiw=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_xJJeInV;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_dxXNsJK=json({});
    return_dxXNsJK=[&]() {
    json return_FiJxgvp=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_dxXNsJK;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_rdVXNYD=json({});
    return_rdVXNYD=[&]() {
    json return_sbXlYeY=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_rdVXNYD;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_YOvtjgc=json({});
    return_YOvtjgc=[&]() {
    json return_DfMorqC=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_YOvtjgc;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_zgzFiuj=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_xwtfbjr=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_COjdwTv=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_huavSJn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_baehmjO=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_BcduYKb=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_NfzQLVz=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_eTLKSlH=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_ckokITf=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_xcrPNzC=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_XhAwmzZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_VkgXdHd=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_IcaYHPB=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_sIzAEGV=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_oeTsNlE=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_MWjcubv=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_lAIPEdq=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_SNANYbl=json({});
    return_SNANYbl=[&]() {
    json return_USyKbRd=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_SNANYbl;}();
result["members"]["independentResolve"]=[&]() {
    json return_nKSCjHV=json({});
    return_nKSCjHV=[&]() {
    json return_rXJBREr=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_nKSCjHV;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_fZIzvrS=json({});
    return_fZIzvrS=[&]() {
    json return_zgABXQL=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_fZIzvrS;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_EvriiiR=json({});
    return_EvriiiR=[&]() {
    json return_TLGtemr=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_EvriiiR;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_zWnZkuo=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
result["members"]["framebufferIntegerColorSampleCounts"]=[&]() {
    json return_FunCLIK=json({});
    return serialize_VkSampleCountFlags(name.framebufferIntegerColorSampleCounts);}();
return result;}

    VkPhysicalDeviceVulkan12Properties deserialize_VkPhysicalDeviceVulkan12Properties(json &name){
        auto result=VkPhysicalDeviceVulkan12Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int DkDvjPa=0; DkDvjPa < VK_MAX_DRIVER_NAME_SIZE; DkDvjPa++){
            [&]() {
result.driverName[DkDvjPa]=deserialize_char(name["members"]["driverName"]["members"][DkDvjPa]);}();;
        }
        }();
[&]() {

        for (int ZzLCpxB=0; ZzLCpxB < VK_MAX_DRIVER_INFO_SIZE; ZzLCpxB++){
            [&]() {
result.driverInfo[ZzLCpxB]=deserialize_char(name["members"]["driverInfo"]["members"][ZzLCpxB]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
[&]() {
result.framebufferIntegerColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferIntegerColorSampleCounts"]);}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Features(VkPhysicalDeviceVulkan13Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wkqBRdD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["robustImageAccess"]=[&]() {
    json return_DYjYLDk=json({});
    return_DYjYLDk=[&]() {
    json return_JlWRgQm=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_DYjYLDk;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_xSmobpW=json({});
    return_xSmobpW=[&]() {
    json return_CbJhuYm=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_xSmobpW;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_rnsDkLm=json({});
    return_rnsDkLm=[&]() {
    json return_yFnZhUW=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_rnsDkLm;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_mcRcStr=json({});
    return_mcRcStr=[&]() {
    json return_ETXFOcy=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_mcRcStr;}();
result["members"]["privateData"]=[&]() {
    json return_lwViHnz=json({});
    return_lwViHnz=[&]() {
    json return_xzoxCJQ=json({});
    return serialize_uint32_t(name.privateData);}();return return_lwViHnz;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_nMjeTbT=json({});
    return_nMjeTbT=[&]() {
    json return_tvKPruF=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_nMjeTbT;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_wZqxKhG=json({});
    return_wZqxKhG=[&]() {
    json return_jvcVvzL=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_wZqxKhG;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_BmvJvKe=json({});
    return_BmvJvKe=[&]() {
    json return_MuRMVnn=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_BmvJvKe;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_VqQftuK=json({});
    return_VqQftuK=[&]() {
    json return_lFKNjJR=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_VqQftuK;}();
result["members"]["synchronization2"]=[&]() {
    json return_TMDOGIB=json({});
    return_TMDOGIB=[&]() {
    json return_zJRwApm=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_TMDOGIB;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_JHENpKE=json({});
    return_JHENpKE=[&]() {
    json return_PWuqgcM=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_JHENpKE;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_MPtfRut=json({});
    return_MPtfRut=[&]() {
    json return_gjmUDAN=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_MPtfRut;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_jbFdQCn=json({});
    return_jbFdQCn=[&]() {
    json return_RuKUmSl=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_jbFdQCn;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_UBgvHoM=json({});
    return_UBgvHoM=[&]() {
    json return_aJvrmxR=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_UBgvHoM;}();
result["members"]["maintenance4"]=[&]() {
    json return_WZDtZzX=json({});
    return_WZDtZzX=[&]() {
    json return_cqHHcPL=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_WZDtZzX;}();
return result;}

    VkPhysicalDeviceVulkan13Features deserialize_VkPhysicalDeviceVulkan13Features(json &name){
        auto result=VkPhysicalDeviceVulkan13Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Properties(VkPhysicalDeviceVulkan13Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rhlbeDT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_qLSZcWB=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_LBxfpya=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_AAOZvuZ=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_vXjxyGY=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_tSpLkTi=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_UolFVRn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_gDRZeEy=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_AabdVTT=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_TOXdMSf=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxInlineUniformTotalSize"]=[&]() {
    json return_NiBPqIk=json({});
    return serialize_uint32_t(name.maxInlineUniformTotalSize);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_mmVslNb=json({});
    return_mmVslNb=[&]() {
    json return_vOtVwpl=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_mmVslNb;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_IgyCFXo=json({});
    return_IgyCFXo=[&]() {
    json return_lcxVQjL=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_IgyCFXo;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_vKciYke=json({});
    return_vKciYke=[&]() {
    json return_nLWbyDH=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_vKciYke;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_qyPRvZj=json({});
    return_qyPRvZj=[&]() {
    json return_wWmZfoM=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_qyPRvZj;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_zKWccld=json({});
    return_zKWccld=[&]() {
    json return_RTavJxJ=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_zKWccld;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_AbPavzs=json({});
    return_AbPavzs=[&]() {
    json return_bMkkdXE=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_AbPavzs;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_pCTVXCE=json({});
    return_pCTVXCE=[&]() {
    json return_xbCGEeb=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_pCTVXCE;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_JiTNaQd=json({});
    return_JiTNaQd=[&]() {
    json return_WFQBNkd=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_JiTNaQd;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_doCGqIM=json({});
    return_doCGqIM=[&]() {
    json return_qLSjEfu=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_doCGqIM;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_Cjmtwns=json({});
    return_Cjmtwns=[&]() {
    json return_uvaNcvD=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_Cjmtwns;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_ooalRFr=json({});
    return_ooalRFr=[&]() {
    json return_Cxeucfh=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_ooalRFr;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_teGaFiH=json({});
    return_teGaFiH=[&]() {
    json return_RvdADXy=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_teGaFiH;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_ZZiWjBL=json({});
    return_ZZiWjBL=[&]() {
    json return_GGMYItm=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_ZZiWjBL;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_OIZAUum=json({});
    return_OIZAUum=[&]() {
    json return_wWkJIvC=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_OIZAUum;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_eFfgXDV=json({});
    return_eFfgXDV=[&]() {
    json return_YqbOcbt=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_eFfgXDV;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_uxgAZGx=json({});
    return_uxgAZGx=[&]() {
    json return_HXHyDPL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_uxgAZGx;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_BLFAwqQ=json({});
    return_BLFAwqQ=[&]() {
    json return_XQetKEL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_BLFAwqQ;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_TkCEasb=json({});
    return_TkCEasb=[&]() {
    json return_uDZVlCw=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_TkCEasb;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_iNfWxrh=json({});
    return_iNfWxrh=[&]() {
    json return_APVHhiK=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_iNfWxrh;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_kkbehiv=json({});
    return_kkbehiv=[&]() {
    json return_LbwCHHB=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_kkbehiv;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_RgyUIOR=json({});
    return_RgyUIOR=[&]() {
    json return_KxxFRCP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_RgyUIOR;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_xcEIhoB=json({});
    return_xcEIhoB=[&]() {
    json return_uDxoKZd=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_xcEIhoB;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_OBEDtHT=json({});
    return_OBEDtHT=[&]() {
    json return_mHMQcpQ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_OBEDtHT;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_FOWryLz=json({});
    return_FOWryLz=[&]() {
    json return_bKsFzSG=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_FOWryLz;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_iqmBwCP=json({});
    return_iqmBwCP=[&]() {
    json return_DSaMNzI=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_iqmBwCP;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_RDrQWuS=json({});
    return_RDrQWuS=[&]() {
    json return_tvaXTLI=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_RDrQWuS;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_diAannz=json({});
    return_diAannz=[&]() {
    json return_neJqNoH=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_diAannz;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_mWRfbnh=json({});
    return_mWRfbnh=[&]() {
    json return_QFJwYic=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_mWRfbnh;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_RccNSNy=json({});
    return_RccNSNy=[&]() {
    json return_Mtyqdrj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_RccNSNy;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_MuyCerZ=json({});
    return_MuyCerZ=[&]() {
    json return_mFbziZY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_MuyCerZ;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_fbmaxws=json({});
    return_fbmaxws=[&]() {
    json return_RtlscqY=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_fbmaxws;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_NFyEGof=json({});
    return_NFyEGof=[&]() {
    json return_xTyhlMM=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_NFyEGof;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_QDDlkqB=json({});
    return_QDDlkqB=[&]() {
    json return_YNDBKLQ=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_QDDlkqB;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_HCKRXKk=json({});
    return_HCKRXKk=[&]() {
    json return_vynPgty=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_HCKRXKk;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_upczniR=json({});
    return_upczniR=[&]() {
    json return_nTTeOZC=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_upczniR;}();
return result;}

    VkPhysicalDeviceVulkan13Properties deserialize_VkPhysicalDeviceVulkan13Properties(json &name){
        auto result=VkPhysicalDeviceVulkan13Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxInlineUniformTotalSize=deserialize_uint32_t(name["members"]["maxInlineUniformTotalSize"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPipelineCompilerControlCreateInfoAMD(VkPipelineCompilerControlCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uUTannR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HNgufGI=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["compilerControlFlags"]=[&]() {
    json return_ZhpPTpH=json({});
    return serialize_VkPipelineCompilerControlFlagsAMD(name.compilerControlFlags);}();
return result;}

    VkPipelineCompilerControlCreateInfoAMD deserialize_VkPipelineCompilerControlCreateInfoAMD(json &name){
        auto result=VkPipelineCompilerControlCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XaIYLSw;[&]() {
temp_XaIYLSw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XaIYLSw;}();
[&]() {
result.compilerControlFlags=deserialize_VkPipelineCompilerControlFlagsAMD(name["members"]["compilerControlFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkPhysicalDeviceCoherentMemoryFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EpRCVgy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceCoherentMemory"]=[&]() {
    json return_HbBqbUq=json({});
    return_HbBqbUq=[&]() {
    json return_zQIzDyG=json({});
    return serialize_uint32_t(name.deviceCoherentMemory);}();return return_HbBqbUq;}();
return result;}

    VkPhysicalDeviceCoherentMemoryFeaturesAMD deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(json &name){
        auto result=VkPhysicalDeviceCoherentMemoryFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.deviceCoherentMemory=deserialize_uint32_t(name["members"]["deviceCoherentMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceToolProperties(VkPhysicalDeviceToolProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TIuzMmA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["name"]=[&]() {
    json return_iRbYNpa=json({});
    
        return_iRbYNpa["members"]={};
        for(int iRbYNpa=0; iRbYNpa < VK_MAX_EXTENSION_NAME_SIZE; iRbYNpa++){
            json temp;
            temp=[&]() {
    json return_bwJhFaB=json({});
    return serialize_char(name.name[iRbYNpa]);}();
            return_iRbYNpa["members"].push_back(temp);
        }
        return return_iRbYNpa;
        }();
result["members"]["version"]=[&]() {
    json return_WrcCGWq=json({});
    
        return_WrcCGWq["members"]={};
        for(int WrcCGWq=0; WrcCGWq < VK_MAX_EXTENSION_NAME_SIZE; WrcCGWq++){
            json temp;
            temp=[&]() {
    json return_CbZJXKN=json({});
    return serialize_char(name.version[WrcCGWq]);}();
            return_WrcCGWq["members"].push_back(temp);
        }
        return return_WrcCGWq;
        }();
result["members"]["purposes"]=[&]() {
    json return_qllzhkP=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_MVnQiWu=json({});
    
        return_MVnQiWu["members"]={};
        for(int MVnQiWu=0; MVnQiWu < VK_MAX_DESCRIPTION_SIZE; MVnQiWu++){
            json temp;
            temp=[&]() {
    json return_tecNdpN=json({});
    return serialize_char(name.description[MVnQiWu]);}();
            return_MVnQiWu["members"].push_back(temp);
        }
        return return_MVnQiWu;
        }();
result["members"]["layer"]=[&]() {
    json return_NemQgJH=json({});
    
        return_NemQgJH["members"]={};
        for(int NemQgJH=0; NemQgJH < VK_MAX_EXTENSION_NAME_SIZE; NemQgJH++){
            json temp;
            temp=[&]() {
    json return_wcTCfai=json({});
    return serialize_char(name.layer[NemQgJH]);}();
            return_NemQgJH["members"].push_back(temp);
        }
        return return_NemQgJH;
        }();
return result;}

    VkPhysicalDeviceToolProperties deserialize_VkPhysicalDeviceToolProperties(json &name){
        auto result=VkPhysicalDeviceToolProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int tSgnOro=0; tSgnOro < VK_MAX_EXTENSION_NAME_SIZE; tSgnOro++){
            [&]() {
result.name[tSgnOro]=deserialize_char(name["members"]["name"]["members"][tSgnOro]);}();;
        }
        }();
[&]() {

        for (int rglpwwT=0; rglpwwT < VK_MAX_EXTENSION_NAME_SIZE; rglpwwT++){
            [&]() {
result.version[rglpwwT]=deserialize_char(name["members"]["version"]["members"][rglpwwT]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int dieEYYo=0; dieEYYo < VK_MAX_DESCRIPTION_SIZE; dieEYYo++){
            [&]() {
result.description[dieEYYo]=deserialize_char(name["members"]["description"]["members"][dieEYYo]);}();;
        }
        }();
[&]() {

        for (int etTOqXX=0; etTOqXX < VK_MAX_EXTENSION_NAME_SIZE; etTOqXX++){
            [&]() {
result.layer[etTOqXX]=deserialize_char(name["members"]["layer"]["members"][etTOqXX]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceToolPropertiesEXT(VkPhysicalDeviceToolPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TIuzMmA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["name"]=[&]() {
    json return_iRbYNpa=json({});
    
        return_iRbYNpa["members"]={};
        for(int iRbYNpa=0; iRbYNpa < VK_MAX_EXTENSION_NAME_SIZE; iRbYNpa++){
            json temp;
            temp=[&]() {
    json return_bwJhFaB=json({});
    return serialize_char(name.name[iRbYNpa]);}();
            return_iRbYNpa["members"].push_back(temp);
        }
        return return_iRbYNpa;
        }();
result["members"]["version"]=[&]() {
    json return_WrcCGWq=json({});
    
        return_WrcCGWq["members"]={};
        for(int WrcCGWq=0; WrcCGWq < VK_MAX_EXTENSION_NAME_SIZE; WrcCGWq++){
            json temp;
            temp=[&]() {
    json return_CbZJXKN=json({});
    return serialize_char(name.version[WrcCGWq]);}();
            return_WrcCGWq["members"].push_back(temp);
        }
        return return_WrcCGWq;
        }();
result["members"]["purposes"]=[&]() {
    json return_qllzhkP=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_MVnQiWu=json({});
    
        return_MVnQiWu["members"]={};
        for(int MVnQiWu=0; MVnQiWu < VK_MAX_DESCRIPTION_SIZE; MVnQiWu++){
            json temp;
            temp=[&]() {
    json return_tecNdpN=json({});
    return serialize_char(name.description[MVnQiWu]);}();
            return_MVnQiWu["members"].push_back(temp);
        }
        return return_MVnQiWu;
        }();
result["members"]["layer"]=[&]() {
    json return_NemQgJH=json({});
    
        return_NemQgJH["members"]={};
        for(int NemQgJH=0; NemQgJH < VK_MAX_EXTENSION_NAME_SIZE; NemQgJH++){
            json temp;
            temp=[&]() {
    json return_wcTCfai=json({});
    return serialize_char(name.layer[NemQgJH]);}();
            return_NemQgJH["members"].push_back(temp);
        }
        return return_NemQgJH;
        }();
return result;}

    VkPhysicalDeviceToolPropertiesEXT deserialize_VkPhysicalDeviceToolPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceToolPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int tSgnOro=0; tSgnOro < VK_MAX_EXTENSION_NAME_SIZE; tSgnOro++){
            [&]() {
result.name[tSgnOro]=deserialize_char(name["members"]["name"]["members"][tSgnOro]);}();;
        }
        }();
[&]() {

        for (int rglpwwT=0; rglpwwT < VK_MAX_EXTENSION_NAME_SIZE; rglpwwT++){
            [&]() {
result.version[rglpwwT]=deserialize_char(name["members"]["version"]["members"][rglpwwT]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int dieEYYo=0; dieEYYo < VK_MAX_DESCRIPTION_SIZE; dieEYYo++){
            [&]() {
result.description[dieEYYo]=deserialize_char(name["members"]["description"]["members"][dieEYYo]);}();;
        }
        }();
[&]() {

        for (int etTOqXX=0; etTOqXX < VK_MAX_EXTENSION_NAME_SIZE; etTOqXX++){
            [&]() {
result.layer[etTOqXX]=deserialize_char(name["members"]["layer"]["members"][etTOqXX]);}();;
        }
        }();
return result;}

    json serialize_VkSamplerCustomBorderColorCreateInfoEXT(VkSamplerCustomBorderColorCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BiqXbBx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HNgufGI=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["customBorderColor"]=[&]() {
    json return_cGisNIi=json({});
    return serialize_VkClearColorValue(name.customBorderColor);}();
result["members"]["format"]=[&]() {
    json return_XlqSbsn=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkSamplerCustomBorderColorCreateInfoEXT deserialize_VkSamplerCustomBorderColorCreateInfoEXT(json &name){
        auto result=VkSamplerCustomBorderColorCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XaIYLSw;[&]() {
temp_XaIYLSw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XaIYLSw;}();
[&]() {
result.customBorderColor=deserialize_VkClearColorValue(name["members"]["customBorderColor"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkPhysicalDeviceCustomBorderColorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iZSmuSW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nFqGBBD=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxCustomBorderColorSamplers"]=[&]() {
    json return_axQRGET=json({});
    return serialize_uint32_t(name.maxCustomBorderColorSamplers);}();
return result;}

    VkPhysicalDeviceCustomBorderColorPropertiesEXT deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceCustomBorderColorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxCustomBorderColorSamplers=deserialize_uint32_t(name["members"]["maxCustomBorderColorSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkPhysicalDeviceCustomBorderColorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SKWYiHe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["customBorderColors"]=[&]() {
    json return_SEwwwFT=json({});
    return_SEwwwFT=[&]() {
    json return_qgaXmrR=json({});
    return serialize_uint32_t(name.customBorderColors);}();return return_SEwwwFT;}();
result["members"]["customBorderColorWithoutFormat"]=[&]() {
    json return_duQhPEC=json({});
    return_duQhPEC=[&]() {
    json return_zgRZEQJ=json({});
    return serialize_uint32_t(name.customBorderColorWithoutFormat);}();return return_duQhPEC;}();
return result;}

    VkPhysicalDeviceCustomBorderColorFeaturesEXT deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceCustomBorderColorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.customBorderColors=deserialize_uint32_t(name["members"]["customBorderColors"]);}();}();
[&]() {
[&]() {
result.customBorderColorWithoutFormat=deserialize_uint32_t(name["members"]["customBorderColorWithoutFormat"]);}();}();
return result;}

    json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(VkSamplerBorderColorComponentMappingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iHFfofO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vQRphHP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["components"]=[&]() {
    json return_foyDUSb=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["srgb"]=[&]() {
    json return_ywDJkpa=json({});
    return_ywDJkpa=[&]() {
    json return_oxCyulL=json({});
    return serialize_uint32_t(name.srgb);}();return return_ywDJkpa;}();
return result;}

    VkSamplerBorderColorComponentMappingCreateInfoEXT deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(json &name){
        auto result=VkSamplerBorderColorComponentMappingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_CBFrWIu;[&]() {
temp_CBFrWIu=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_CBFrWIu;}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
[&]() {
result.srgb=deserialize_uint32_t(name["members"]["srgb"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CXchSiz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["borderColorSwizzle"]=[&]() {
    json return_FXOCZcj=json({});
    return_FXOCZcj=[&]() {
    json return_FWrRMUC=json({});
    return serialize_uint32_t(name.borderColorSwizzle);}();return return_FXOCZcj;}();
result["members"]["borderColorSwizzleFromImage"]=[&]() {
    json return_REfTVDL=json({});
    return_REfTVDL=[&]() {
    json return_YlVklBG=json({});
    return serialize_uint32_t(name.borderColorSwizzleFromImage);}();return return_REfTVDL;}();
return result;}

    VkPhysicalDeviceBorderColorSwizzleFeaturesEXT deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceBorderColorSwizzleFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.borderColorSwizzle=deserialize_uint32_t(name["members"]["borderColorSwizzle"]);}();}();
[&]() {
[&]() {
result.borderColorSwizzleFromImage=deserialize_uint32_t(name["members"]["borderColorSwizzleFromImage"]);}();}();
return result;}

    json serialize_VkDeviceOrHostAddressKHR(VkDeviceOrHostAddressKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_NDZXsnj=json({});
    return_NDZXsnj=[&]() {
    json return_KdxhVbc=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_NDZXsnj;}();
result["members"]["hostAddress"]=[&]() {
    json return_EygarkS=json({});
    
        if (name.hostAddress==NULL){
            return_EygarkS["null"]=true;
            return return_EygarkS;
        }
        return_EygarkS=[&]() {
    json return_udhuTnG=json({});
    
        if (((char*)(name.hostAddress))==NULL){
            return_udhuTnG["null"]=true;
            return return_udhuTnG;
        }
        
        return_udhuTnG["members"]={};
        for(int udhuTnG=0; udhuTnG < strlen(((char*)(name.hostAddress)))+1; udhuTnG++){
            json temp;
            temp=[&]() {
    json return_OpwOJun=json({});
    return serialize_char(((char*)(name.hostAddress))[udhuTnG]);}();
            return_udhuTnG["members"].push_back(temp);
        }
        return return_udhuTnG;
        }();return return_EygarkS;}();
return result;}

    VkDeviceOrHostAddressKHR deserialize_VkDeviceOrHostAddressKHR(json &name){
        auto result=VkDeviceOrHostAddressKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        result.hostAddress=NULL;
        return;
        }
    char* temp_jwyafpS;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_jwyafpS=NULL;
        return;
        }
    temp_jwyafpS=(char*)malloc(name["members"]["hostAddress"]["members"].size()*sizeof(char));
        for (int WFVkdAw=0; WFVkdAw < name["members"]["hostAddress"]["members"].size(); WFVkdAw++){
            [&]() {
temp_jwyafpS[WFVkdAw]=deserialize_char(name["members"]["hostAddress"]["members"][WFVkdAw]);}();;
        }
        }();result.hostAddress=(void*)temp_jwyafpS;
}();
return result;}

    json serialize_VkDeviceOrHostAddressConstKHR(VkDeviceOrHostAddressConstKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_NDZXsnj=json({});
    return_NDZXsnj=[&]() {
    json return_KdxhVbc=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_NDZXsnj;}();
result["members"]["hostAddress"]=[&]() {
    json return_zxrnyAf=json({});
    
        if (name.hostAddress==NULL){
            return_zxrnyAf["null"]=true;
            return return_zxrnyAf;
        }
        return_zxrnyAf=[&]() {
    json return_JyCrdPN=json({});
    
        if (((char*)(name.hostAddress))==NULL){
            return_JyCrdPN["null"]=true;
            return return_JyCrdPN;
        }
        
        return_JyCrdPN["members"]={};
        for(int JyCrdPN=0; JyCrdPN < strlen(((char*)(name.hostAddress)))+1; JyCrdPN++){
            json temp;
            temp=[&]() {
    json return_ROHNCKt=json({});
    return serialize_char(((char*)(name.hostAddress))[JyCrdPN]);}();
            return_JyCrdPN["members"].push_back(temp);
        }
        return return_JyCrdPN;
        }();return return_zxrnyAf;}();
return result;}

    VkDeviceOrHostAddressConstKHR deserialize_VkDeviceOrHostAddressConstKHR(json &name){
        auto result=VkDeviceOrHostAddressConstKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
void* temp_uMSxKwg;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_uMSxKwg=NULL;
        return;
        }
    char* temp_TOIvLNR;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_TOIvLNR=NULL;
        return;
        }
    temp_TOIvLNR=(char*)malloc(name["members"]["hostAddress"]["members"].size()*sizeof(char));
        for (int bRYAgRu=0; bRYAgRu < name["members"]["hostAddress"]["members"].size(); bRYAgRu++){
            [&]() {
temp_TOIvLNR[bRYAgRu]=deserialize_char(name["members"]["hostAddress"]["members"][bRYAgRu]);}();;
        }
        }();temp_uMSxKwg=(void*)temp_TOIvLNR;
}();result.hostAddress=temp_uMSxKwg;}();
return result;}

    json serialize_VkAccelerationStructureGeometryTrianglesDataKHR(VkAccelerationStructureGeometryTrianglesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eEJNHLd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DXfRYCc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vertexFormat"]=[&]() {
    json return_KQLlYQB=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["vertexData"]=[&]() {
    json return_YXtKWzK=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
result["members"]["vertexStride"]=[&]() {
    json return_HhEPJpf=json({});
    return_HhEPJpf=[&]() {
    json return_twDXaLC=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_HhEPJpf;}();
result["members"]["maxVertex"]=[&]() {
    json return_mCATlmr=json({});
    return serialize_uint32_t(name.maxVertex);}();
result["members"]["indexType"]=[&]() {
    json return_CujDjIM=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexData"]=[&]() {
    json return_yyAEXcU=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexData);}();
result["members"]["transformData"]=[&]() {
    json return_cnvWbDb=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.transformData);}();
return result;}

    VkAccelerationStructureGeometryTrianglesDataKHR deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(json &name){
        auto result=VkAccelerationStructureGeometryTrianglesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KmUErOG;[&]() {
temp_KmUErOG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KmUErOG;}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.maxVertex=deserialize_uint32_t(name["members"]["maxVertex"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexData"]);}();
[&]() {
result.transformData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["transformData"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryAabbsDataKHR(VkAccelerationStructureGeometryAabbsDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RhlUXyO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eGMnHSi=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["data"]=[&]() {
    json return_vcMYXIc=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["stride"]=[&]() {
    json return_IaVoQPI=json({});
    return_IaVoQPI=[&]() {
    json return_jPgRJJC=json({});
    return serialize_uint64_t(name.stride);}();return return_IaVoQPI;}();
return result;}

    VkAccelerationStructureGeometryAabbsDataKHR deserialize_VkAccelerationStructureGeometryAabbsDataKHR(json &name){
        auto result=VkAccelerationStructureGeometryAabbsDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_OsQmrId;[&]() {
temp_OsQmrId=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_OsQmrId;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryInstancesDataKHR(VkAccelerationStructureGeometryInstancesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vuKllTL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eGMnHSi=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["arrayOfPointers"]=[&]() {
    json return_uuZSPDd=json({});
    return_uuZSPDd=[&]() {
    json return_LdHmtxZ=json({});
    return serialize_uint32_t(name.arrayOfPointers);}();return return_uuZSPDd;}();
result["members"]["data"]=[&]() {
    json return_XUpoWwK=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
return result;}

    VkAccelerationStructureGeometryInstancesDataKHR deserialize_VkAccelerationStructureGeometryInstancesDataKHR(json &name){
        auto result=VkAccelerationStructureGeometryInstancesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_OsQmrId;[&]() {
temp_OsQmrId=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_OsQmrId;}();
[&]() {
[&]() {
result.arrayOfPointers=deserialize_uint32_t(name["members"]["arrayOfPointers"]);}();}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryDataKHR(VkAccelerationStructureGeometryDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_OkntJVd=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_BCZQrnB=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(name.aabbs);}();
result["members"]["instances"]=[&]() {
    json return_CssdNHq=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(name.instances);}();
return result;}

    VkAccelerationStructureGeometryDataKHR deserialize_VkAccelerationStructureGeometryDataKHR(json &name){
        auto result=VkAccelerationStructureGeometryDataKHR();
    
[&]() {
result.triangles=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name["members"]["aabbs"]);}();
[&]() {
result.instances=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name["members"]["instances"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryKHR(VkAccelerationStructureGeometryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZpOFAZg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["geometryType"]=[&]() {
    json return_CcUpWba=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_oswQuKq=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_bHLWEAI=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkAccelerationStructureGeometryKHR deserialize_VkAccelerationStructureGeometryKHR(json &name){
        auto result=VkAccelerationStructureGeometryKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkAccelerationStructureGeometryDataKHR(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildGeometryInfoKHR(VkAccelerationStructureBuildGeometryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_clgXmra=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HnciAlv=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_nSQuxHv=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["flags"]=[&]() {
    json return_TJgNDAF=json({});
    return serialize_VkBuildAccelerationStructureFlagsKHR(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_yekxIaQ=json({});
    return serialize_VkBuildAccelerationStructureModeKHR(name.mode);}();
result["members"]["srcAccelerationStructure"]=[&]() {
    json return_qFHaCzS=json({});
    return serialize_VkAccelerationStructureKHR(name.srcAccelerationStructure);}();
result["members"]["dstAccelerationStructure"]=[&]() {
    json return_IxariQk=json({});
    return serialize_VkAccelerationStructureKHR(name.dstAccelerationStructure);}();
result["members"]["geometryCount"]=[&]() {
    json return_GiQlIQN=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_npRTnMb=json({});
    
        if (name.pGeometries==NULL){
            return_npRTnMb["null"]=true;
            return return_npRTnMb;
        }
        
        return_npRTnMb["members"]={};
        for(int npRTnMb=0; npRTnMb < name.geometryCount; npRTnMb++){
            json temp;
            temp=[&]() {
    json return_VoZhkSq=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.pGeometries[npRTnMb]);}();
            return_npRTnMb["members"].push_back(temp);
        }
        return return_npRTnMb;
        }();
result["members"]["ppGeometries"]=[&]() {
    json return_bptlQzw=json({});
    
        if (name.ppGeometries==NULL){
            return_bptlQzw["null"]=true;
            return return_bptlQzw;
        }
        
        return_bptlQzw["members"]={};
        for(int bptlQzw=0; bptlQzw < name.geometryCount; bptlQzw++){
            json temp;
            temp=[&]() {
    json return_zqqGdEe=json({});
    
        if (name.ppGeometries[bptlQzw]==NULL){
            return_zqqGdEe["null"]=true;
            return return_zqqGdEe;
        }
        
        return_zqqGdEe["members"]={};
        for(int zqqGdEe=0; zqqGdEe < 1; zqqGdEe++){
            json temp;
            temp=[&]() {
    json return_bkgwHuA=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.ppGeometries[bptlQzw][zqqGdEe]);}();
            return_zqqGdEe["members"].push_back(temp);
        }
        return return_zqqGdEe;
        }();
            return_bptlQzw["members"].push_back(temp);
        }
        return return_bptlQzw;
        }();
result["members"]["scratchData"]=[&]() {
    json return_QZdGVVA=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
return result;}

    VkAccelerationStructureBuildGeometryInfoKHR deserialize_VkAccelerationStructureBuildGeometryInfoKHR(json &name){
        auto result=VkAccelerationStructureBuildGeometryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_vXGbmYO;[&]() {
temp_vXGbmYO=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_vXGbmYO;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildAccelerationStructureModeKHR(name["members"]["mode"]);}();
[&]() {
result.srcAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["srcAccelerationStructure"]);}();
[&]() {
result.dstAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["dstAccelerationStructure"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkAccelerationStructureGeometryKHR* temp_CqOMdJt;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_CqOMdJt=NULL;
        return;
        }
    temp_CqOMdJt=(VkAccelerationStructureGeometryKHR*)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR));
        for (int jVBZReb=0; jVBZReb < result.geometryCount; jVBZReb++){
            [&]() {
temp_CqOMdJt[jVBZReb]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["pGeometries"]["members"][jVBZReb]);}();;
        }
        }();result.pGeometries=temp_CqOMdJt;}();
[&]() {
VkAccelerationStructureGeometryKHR** temp_lEKPNeM;[&]() {

        if (name["members"]["ppGeometries"].contains("null")){
        temp_lEKPNeM=NULL;
        return;
        }
    temp_lEKPNeM=(VkAccelerationStructureGeometryKHR**)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR*));
        for (int jvPAnxz=0; jvPAnxz < result.geometryCount; jvPAnxz++){
            [&]() {

        if (name["members"]["ppGeometries"]["members"][jvPAnxz].contains("null")){
        temp_lEKPNeM[jvPAnxz]=NULL;
        return;
        }
    temp_lEKPNeM[jvPAnxz]=(VkAccelerationStructureGeometryKHR*)malloc(1*sizeof(VkAccelerationStructureGeometryKHR));
        for (int dYMUJEn=0; dYMUJEn < 1; dYMUJEn++){
            [&]() {
temp_lEKPNeM[jvPAnxz][dYMUJEn]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["ppGeometries"]["members"][jvPAnxz]["members"][dYMUJEn]);}();;
        }
        }();;
        }
        }();result.ppGeometries=temp_lEKPNeM;}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildRangeInfoKHR(VkAccelerationStructureBuildRangeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["primitiveCount"]=[&]() {
    json return_OyjHcZj=json({});
    return serialize_uint32_t(name.primitiveCount);}();
result["members"]["primitiveOffset"]=[&]() {
    json return_GUSYKiz=json({});
    return serialize_uint32_t(name.primitiveOffset);}();
result["members"]["firstVertex"]=[&]() {
    json return_FtOaCVx=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["transformOffset"]=[&]() {
    json return_REZBFqE=json({});
    return serialize_uint32_t(name.transformOffset);}();
return result;}

    VkAccelerationStructureBuildRangeInfoKHR deserialize_VkAccelerationStructureBuildRangeInfoKHR(json &name){
        auto result=VkAccelerationStructureBuildRangeInfoKHR();
    
[&]() {
result.primitiveCount=deserialize_uint32_t(name["members"]["primitiveCount"]);}();
[&]() {
result.primitiveOffset=deserialize_uint32_t(name["members"]["primitiveOffset"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.transformOffset=deserialize_uint32_t(name["members"]["transformOffset"]);}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoKHR(VkAccelerationStructureCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lexXUPA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jjpEuVo=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["createFlags"]=[&]() {
    json return_oxHSoNX=json({});
    return serialize_VkAccelerationStructureCreateFlagsKHR(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_SkMgjlT=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_nEtpdCZ=json({});
    return_nEtpdCZ=[&]() {
    json return_ardsJWU=json({});
    return serialize_uint64_t(name.offset);}();return return_nEtpdCZ;}();
result["members"]["size"]=[&]() {
    json return_UJHxKJn=json({});
    return_UJHxKJn=[&]() {
    json return_NkdsXLC=json({});
    return serialize_uint64_t(name.size);}();return return_UJHxKJn;}();
result["members"]["type"]=[&]() {
    json return_jZmfZJA=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_wbweaLZ=json({});
    return_wbweaLZ=[&]() {
    json return_cWLUink=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_wbweaLZ;}();
return result;}

    VkAccelerationStructureCreateInfoKHR deserialize_VkAccelerationStructureCreateInfoKHR(json &name){
        auto result=VkAccelerationStructureCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_MTVHsNm;[&]() {
temp_MTVHsNm=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_MTVHsNm;}();
[&]() {
result.createFlags=deserialize_VkAccelerationStructureCreateFlagsKHR(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkAabbPositionsKHR(VkAabbPositionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_vjqNPjt=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_WTPysnD=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_fZaMTJW=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_FdIUwZt=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_JuWtFBD=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_niLWKHt=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsKHR deserialize_VkAabbPositionsKHR(json &name){
        auto result=VkAabbPositionsKHR();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkAabbPositionsNV(VkAabbPositionsNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_vjqNPjt=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_WTPysnD=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_fZaMTJW=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_FdIUwZt=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_JuWtFBD=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_niLWKHt=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsNV deserialize_VkAabbPositionsNV(json &name){
        auto result=VkAabbPositionsNV();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkTransformMatrixKHR(VkTransformMatrixKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_SFzqoZA=json({});
    
        return_SFzqoZA["members"]={};
        for(int SFzqoZA=0; SFzqoZA < 3; SFzqoZA++){
            json temp;
            temp=[&]() {
    json return_uZZtaSh=json({});
    
        return_uZZtaSh["members"]={};
        for(int uZZtaSh=0; uZZtaSh < 4; uZZtaSh++){
            json temp;
            temp=[&]() {
    json return_CRCtpeX=json({});
    return serialize_float(name.matrix[SFzqoZA][uZZtaSh]);}();
            return_uZZtaSh["members"].push_back(temp);
        }
        return return_uZZtaSh;
        }();
            return_SFzqoZA["members"].push_back(temp);
        }
        return return_SFzqoZA;
        }();
return result;}

    VkTransformMatrixKHR deserialize_VkTransformMatrixKHR(json &name){
        auto result=VkTransformMatrixKHR();
    
[&]() {

        for (int UiWSHoI=0; UiWSHoI < 3; UiWSHoI++){
            [&]() {

        for (int nCcLblT=0; nCcLblT < 4; nCcLblT++){
            [&]() {
result.matrix[UiWSHoI][nCcLblT]=deserialize_float(name["members"]["matrix"]["members"][UiWSHoI]["members"][nCcLblT]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkTransformMatrixNV(VkTransformMatrixNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_SFzqoZA=json({});
    
        return_SFzqoZA["members"]={};
        for(int SFzqoZA=0; SFzqoZA < 3; SFzqoZA++){
            json temp;
            temp=[&]() {
    json return_uZZtaSh=json({});
    
        return_uZZtaSh["members"]={};
        for(int uZZtaSh=0; uZZtaSh < 4; uZZtaSh++){
            json temp;
            temp=[&]() {
    json return_CRCtpeX=json({});
    return serialize_float(name.matrix[SFzqoZA][uZZtaSh]);}();
            return_uZZtaSh["members"].push_back(temp);
        }
        return return_uZZtaSh;
        }();
            return_SFzqoZA["members"].push_back(temp);
        }
        return return_SFzqoZA;
        }();
return result;}

    VkTransformMatrixNV deserialize_VkTransformMatrixNV(json &name){
        auto result=VkTransformMatrixNV();
    
[&]() {

        for (int UiWSHoI=0; UiWSHoI < 3; UiWSHoI++){
            [&]() {

        for (int nCcLblT=0; nCcLblT < 4; nCcLblT++){
            [&]() {
result.matrix[UiWSHoI][nCcLblT]=deserialize_float(name["members"]["matrix"]["members"][UiWSHoI]["members"][nCcLblT]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureInstanceKHR(VkAccelerationStructureInstanceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_JJYSkGV=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_ndJKzsa=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_jLDoldr=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_zFXVFdt=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_dFjnTie=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_shXScrU=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceKHR deserialize_VkAccelerationStructureInstanceKHR(json &name){
        auto result=VkAccelerationStructureInstanceKHR();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureInstanceNV(VkAccelerationStructureInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_JJYSkGV=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_ndJKzsa=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_jLDoldr=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_zFXVFdt=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_dFjnTie=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_shXScrU=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceNV deserialize_VkAccelerationStructureInstanceNV(json &name){
        auto result=VkAccelerationStructureInstanceNV();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureDeviceAddressInfoKHR(VkAccelerationStructureDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lsNtgFp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_dinWdgc=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureDeviceAddressInfoKHR deserialize_VkAccelerationStructureDeviceAddressInfoKHR(json &name){
        auto result=VkAccelerationStructureDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkAccelerationStructureVersionInfoKHR(VkAccelerationStructureVersionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SvLZDGo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pVersionData"]=[&]() {
    json return_ZbnrSCj=json({});
    
        if (name.pVersionData==NULL){
            return_ZbnrSCj["null"]=true;
            return return_ZbnrSCj;
        }
        
        return_ZbnrSCj["members"]={};
        for(int ZbnrSCj=0; ZbnrSCj < 2*VK_UUID_SIZE; ZbnrSCj++){
            json temp;
            temp=[&]() {
    json return_LlozPZQ=json({});
    return serialize_uint8_t(name.pVersionData[ZbnrSCj]);}();
            return_ZbnrSCj["members"].push_back(temp);
        }
        return return_ZbnrSCj;
        }();
return result;}

    VkAccelerationStructureVersionInfoKHR deserialize_VkAccelerationStructureVersionInfoKHR(json &name){
        auto result=VkAccelerationStructureVersionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
uint8_t* temp_DRfYnZn;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_DRfYnZn=NULL;
        return;
        }
    temp_DRfYnZn=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int QzAbzzN=0; QzAbzzN < 2*VK_UUID_SIZE; QzAbzzN++){
            [&]() {
temp_DRfYnZn[QzAbzzN]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][QzAbzzN]);}();;
        }
        }();result.pVersionData=temp_DRfYnZn;}();
return result;}

    json serialize_VkCopyAccelerationStructureInfoKHR(VkCopyAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JwXGIps=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["src"]=[&]() {
    json return_CqVWNDv=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_ikAWOzb=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_oVpjzPF=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureInfoKHR deserialize_VkCopyAccelerationStructureInfoKHR(json &name){
        auto result=VkCopyAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyAccelerationStructureToMemoryInfoKHR(VkCopyAccelerationStructureToMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pzGBeWW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["src"]=[&]() {
    json return_CqVWNDv=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_hibyXid=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_oVpjzPF=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureToMemoryInfoKHR deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(json &name){
        auto result=VkCopyAccelerationStructureToMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToAccelerationStructureInfoKHR(VkCopyMemoryToAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qQahIcD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["src"]=[&]() {
    json return_rKsEtaC=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_ikAWOzb=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_oVpjzPF=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyMemoryToAccelerationStructureInfoKHR deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(json &name){
        auto result=VkCopyMemoryToAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(VkRayTracingPipelineInterfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mfOHoFX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxPipelineRayPayloadSize"]=[&]() {
    json return_wGoaLQC=json({});
    return serialize_uint32_t(name.maxPipelineRayPayloadSize);}();
result["members"]["maxPipelineRayHitAttributeSize"]=[&]() {
    json return_EkFICFA=json({});
    return serialize_uint32_t(name.maxPipelineRayHitAttributeSize);}();
return result;}

    VkRayTracingPipelineInterfaceCreateInfoKHR deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(json &name){
        auto result=VkRayTracingPipelineInterfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.maxPipelineRayPayloadSize=deserialize_uint32_t(name["members"]["maxPipelineRayPayloadSize"]);}();
[&]() {
result.maxPipelineRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxPipelineRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPipelineLibraryCreateInfoKHR(VkPipelineLibraryCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WzfhkWM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["libraryCount"]=[&]() {
    json return_HPKJnIR=json({});
    return serialize_uint32_t(name.libraryCount);}();
result["members"]["pLibraries"]=[&]() {
    json return_jtlqEPr=json({});
    
        if (name.pLibraries==NULL){
            return_jtlqEPr["null"]=true;
            return return_jtlqEPr;
        }
        
        return_jtlqEPr["members"]={};
        for(int jtlqEPr=0; jtlqEPr < name.libraryCount; jtlqEPr++){
            json temp;
            temp=[&]() {
    json return_kzGQvOx=json({});
    return serialize_VkPipeline(name.pLibraries[jtlqEPr]);}();
            return_jtlqEPr["members"].push_back(temp);
        }
        return return_jtlqEPr;
        }();
return result;}

    VkPipelineLibraryCreateInfoKHR deserialize_VkPipelineLibraryCreateInfoKHR(json &name){
        auto result=VkPipelineLibraryCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.libraryCount=deserialize_uint32_t(name["members"]["libraryCount"]);}();
[&]() {
VkPipeline* temp_FHAMKjI;[&]() {

        if (name["members"]["pLibraries"].contains("null")){
        temp_FHAMKjI=NULL;
        return;
        }
    temp_FHAMKjI=(VkPipeline*)malloc(result.libraryCount*sizeof(VkPipeline));
        for (int aXTWnra=0; aXTWnra < result.libraryCount; aXTWnra++){
            [&]() {
temp_FHAMKjI[aXTWnra]=deserialize_VkPipeline(name["members"]["pLibraries"]["members"][aXTWnra]);}();;
        }
        }();result.pLibraries=temp_FHAMKjI;}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OXOjMIx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["extendedDynamicState"]=[&]() {
    json return_CSDwzBf=json({});
    return_CSDwzBf=[&]() {
    json return_DBmGgqu=json({});
    return serialize_uint32_t(name.extendedDynamicState);}();return return_CSDwzBf;}();
return result;}

    VkPhysicalDeviceExtendedDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceExtendedDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.extendedDynamicState=deserialize_uint32_t(name["members"]["extendedDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DsqeAor=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["extendedDynamicState2"]=[&]() {
    json return_kStqiVB=json({});
    return_kStqiVB=[&]() {
    json return_rLLxTjm=json({});
    return serialize_uint32_t(name.extendedDynamicState2);}();return return_kStqiVB;}();
result["members"]["extendedDynamicState2LogicOp"]=[&]() {
    json return_MZuZJQQ=json({});
    return_MZuZJQQ=[&]() {
    json return_YDVWdIR=json({});
    return serialize_uint32_t(name.extendedDynamicState2LogicOp);}();return return_MZuZJQQ;}();
result["members"]["extendedDynamicState2PatchControlPoints"]=[&]() {
    json return_GstRnCb=json({});
    return_GstRnCb=[&]() {
    json return_rMqgTKi=json({});
    return serialize_uint32_t(name.extendedDynamicState2PatchControlPoints);}();return return_GstRnCb;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState2FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceExtendedDynamicState2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.extendedDynamicState2=deserialize_uint32_t(name["members"]["extendedDynamicState2"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2LogicOp=deserialize_uint32_t(name["members"]["extendedDynamicState2LogicOp"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2PatchControlPoints=deserialize_uint32_t(name["members"]["extendedDynamicState2PatchControlPoints"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pOUFNKn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["extendedDynamicState3TessellationDomainOrigin"]=[&]() {
    json return_HMEYhVJ=json({});
    return_HMEYhVJ=[&]() {
    json return_edbrPya=json({});
    return serialize_uint32_t(name.extendedDynamicState3TessellationDomainOrigin);}();return return_HMEYhVJ;}();
result["members"]["extendedDynamicState3DepthClampEnable"]=[&]() {
    json return_XzwgGqn=json({});
    return_XzwgGqn=[&]() {
    json return_CXHPMml=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClampEnable);}();return return_XzwgGqn;}();
result["members"]["extendedDynamicState3PolygonMode"]=[&]() {
    json return_JLAjNfd=json({});
    return_JLAjNfd=[&]() {
    json return_vTcYgcG=json({});
    return serialize_uint32_t(name.extendedDynamicState3PolygonMode);}();return return_JLAjNfd;}();
result["members"]["extendedDynamicState3RasterizationSamples"]=[&]() {
    json return_PyamTrr=json({});
    return_PyamTrr=[&]() {
    json return_WgIRuLx=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationSamples);}();return return_PyamTrr;}();
result["members"]["extendedDynamicState3SampleMask"]=[&]() {
    json return_crZUwfV=json({});
    return_crZUwfV=[&]() {
    json return_cAbXCFT=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleMask);}();return return_crZUwfV;}();
result["members"]["extendedDynamicState3AlphaToCoverageEnable"]=[&]() {
    json return_CavctGU=json({});
    return_CavctGU=[&]() {
    json return_wZaTwVC=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToCoverageEnable);}();return return_CavctGU;}();
result["members"]["extendedDynamicState3AlphaToOneEnable"]=[&]() {
    json return_SQCqKVM=json({});
    return_SQCqKVM=[&]() {
    json return_qFqWgaK=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToOneEnable);}();return return_SQCqKVM;}();
result["members"]["extendedDynamicState3LogicOpEnable"]=[&]() {
    json return_BXZrZTs=json({});
    return_BXZrZTs=[&]() {
    json return_QHgRMog=json({});
    return serialize_uint32_t(name.extendedDynamicState3LogicOpEnable);}();return return_BXZrZTs;}();
result["members"]["extendedDynamicState3ColorBlendEnable"]=[&]() {
    json return_NlFROlB=json({});
    return_NlFROlB=[&]() {
    json return_kddocrA=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEnable);}();return return_NlFROlB;}();
result["members"]["extendedDynamicState3ColorBlendEquation"]=[&]() {
    json return_KuTVVUC=json({});
    return_KuTVVUC=[&]() {
    json return_UdwNXvm=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEquation);}();return return_KuTVVUC;}();
result["members"]["extendedDynamicState3ColorWriteMask"]=[&]() {
    json return_SpNgpxw=json({});
    return_SpNgpxw=[&]() {
    json return_TzEeGji=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorWriteMask);}();return return_SpNgpxw;}();
result["members"]["extendedDynamicState3RasterizationStream"]=[&]() {
    json return_iuZoONu=json({});
    return_iuZoONu=[&]() {
    json return_ZORgcpR=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationStream);}();return return_iuZoONu;}();
result["members"]["extendedDynamicState3ConservativeRasterizationMode"]=[&]() {
    json return_ijAnYia=json({});
    return_ijAnYia=[&]() {
    json return_tvnEsVj=json({});
    return serialize_uint32_t(name.extendedDynamicState3ConservativeRasterizationMode);}();return return_ijAnYia;}();
result["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]=[&]() {
    json return_sgkFjiq=json({});
    return_sgkFjiq=[&]() {
    json return_tuwAiRC=json({});
    return serialize_uint32_t(name.extendedDynamicState3ExtraPrimitiveOverestimationSize);}();return return_sgkFjiq;}();
result["members"]["extendedDynamicState3DepthClipEnable"]=[&]() {
    json return_aMWbqVG=json({});
    return_aMWbqVG=[&]() {
    json return_ZJOCvJi=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipEnable);}();return return_aMWbqVG;}();
result["members"]["extendedDynamicState3SampleLocationsEnable"]=[&]() {
    json return_SGIAiVQ=json({});
    return_SGIAiVQ=[&]() {
    json return_NlOVrhg=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleLocationsEnable);}();return return_SGIAiVQ;}();
result["members"]["extendedDynamicState3ColorBlendAdvanced"]=[&]() {
    json return_NshJQPS=json({});
    return_NshJQPS=[&]() {
    json return_zIwDfNv=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendAdvanced);}();return return_NshJQPS;}();
result["members"]["extendedDynamicState3ProvokingVertexMode"]=[&]() {
    json return_MqRvzia=json({});
    return_MqRvzia=[&]() {
    json return_YxMLSZB=json({});
    return serialize_uint32_t(name.extendedDynamicState3ProvokingVertexMode);}();return return_MqRvzia;}();
result["members"]["extendedDynamicState3LineRasterizationMode"]=[&]() {
    json return_DqfReBP=json({});
    return_DqfReBP=[&]() {
    json return_rphsiEL=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineRasterizationMode);}();return return_DqfReBP;}();
result["members"]["extendedDynamicState3LineStippleEnable"]=[&]() {
    json return_iYFBWkz=json({});
    return_iYFBWkz=[&]() {
    json return_sXsIRoq=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineStippleEnable);}();return return_iYFBWkz;}();
result["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]=[&]() {
    json return_UTEzOAI=json({});
    return_UTEzOAI=[&]() {
    json return_rwAkAYQ=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipNegativeOneToOne);}();return return_UTEzOAI;}();
result["members"]["extendedDynamicState3ViewportWScalingEnable"]=[&]() {
    json return_teillWV=json({});
    return_teillWV=[&]() {
    json return_OYhENve=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportWScalingEnable);}();return return_teillWV;}();
result["members"]["extendedDynamicState3ViewportSwizzle"]=[&]() {
    json return_tFXNSzV=json({});
    return_tFXNSzV=[&]() {
    json return_edqqiCo=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportSwizzle);}();return return_tFXNSzV;}();
result["members"]["extendedDynamicState3CoverageToColorEnable"]=[&]() {
    json return_jDVFRAA=json({});
    return_jDVFRAA=[&]() {
    json return_kPJRKtc=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorEnable);}();return return_jDVFRAA;}();
result["members"]["extendedDynamicState3CoverageToColorLocation"]=[&]() {
    json return_DwwwKAI=json({});
    return_DwwwKAI=[&]() {
    json return_GHukmcR=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorLocation);}();return return_DwwwKAI;}();
result["members"]["extendedDynamicState3CoverageModulationMode"]=[&]() {
    json return_jDrzVaQ=json({});
    return_jDrzVaQ=[&]() {
    json return_FcgXmbq=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationMode);}();return return_jDrzVaQ;}();
result["members"]["extendedDynamicState3CoverageModulationTableEnable"]=[&]() {
    json return_cYBEtdL=json({});
    return_cYBEtdL=[&]() {
    json return_NBWcRBU=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTableEnable);}();return return_cYBEtdL;}();
result["members"]["extendedDynamicState3CoverageModulationTable"]=[&]() {
    json return_dekgnEb=json({});
    return_dekgnEb=[&]() {
    json return_ZAtwezG=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTable);}();return return_dekgnEb;}();
result["members"]["extendedDynamicState3CoverageReductionMode"]=[&]() {
    json return_lTKuvwi=json({});
    return_lTKuvwi=[&]() {
    json return_iqTHeqb=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageReductionMode);}();return return_lTKuvwi;}();
result["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]=[&]() {
    json return_jZyRfTh=json({});
    return_jZyRfTh=[&]() {
    json return_fWGtWly=json({});
    return serialize_uint32_t(name.extendedDynamicState3RepresentativeFragmentTestEnable);}();return return_jZyRfTh;}();
result["members"]["extendedDynamicState3ShadingRateImageEnable"]=[&]() {
    json return_rkdDirV=json({});
    return_rkdDirV=[&]() {
    json return_JGUxHwq=json({});
    return serialize_uint32_t(name.extendedDynamicState3ShadingRateImageEnable);}();return return_rkdDirV;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.extendedDynamicState3TessellationDomainOrigin=deserialize_uint32_t(name["members"]["extendedDynamicState3TessellationDomainOrigin"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClampEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClampEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3PolygonMode=deserialize_uint32_t(name["members"]["extendedDynamicState3PolygonMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationSamples=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationSamples"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleMask=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToCoverageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToOneEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToOneEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LogicOpEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LogicOpEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEquation=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEquation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorWriteMask=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorWriteMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationStream=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationStream"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ConservativeRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ConservativeRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ExtraPrimitiveOverestimationSize=deserialize_uint32_t(name["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleLocationsEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleLocationsEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendAdvanced=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendAdvanced"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ProvokingVertexMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ProvokingVertexMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3LineRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineStippleEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LineStippleEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipNegativeOneToOne=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportWScalingEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportWScalingEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportSwizzle=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportSwizzle"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorLocation=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorLocation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTableEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTableEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageReductionMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageReductionMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RepresentativeFragmentTestEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ShadingRateImageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ShadingRateImageEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gOcScEa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dynamicPrimitiveTopologyUnrestricted"]=[&]() {
    json return_caAkFHR=json({});
    return_caAkFHR=[&]() {
    json return_eLaAhcq=json({});
    return serialize_uint32_t(name.dynamicPrimitiveTopologyUnrestricted);}();return return_caAkFHR;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3PropertiesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(json &name){
        auto result=VkPhysicalDeviceExtendedDynamicState3PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.dynamicPrimitiveTopologyUnrestricted=deserialize_uint32_t(name["members"]["dynamicPrimitiveTopologyUnrestricted"]);}();}();
return result;}

    json serialize_VkColorBlendEquationEXT(VkColorBlendEquationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_NmRIbjP=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_otHppUq=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_pGEWcIw=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_VTRaYuK=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_cbZyiNw=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_WESumbd=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
return result;}

    VkColorBlendEquationEXT deserialize_VkColorBlendEquationEXT(json &name){
        auto result=VkColorBlendEquationEXT();
    
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
return result;}

    json serialize_VkColorBlendAdvancedEXT(VkColorBlendAdvancedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["advancedBlendOp"]=[&]() {
    json return_EAIwJPG=json({});
    return serialize_VkBlendOp(name.advancedBlendOp);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_xzyDeUo=json({});
    return_xzyDeUo=[&]() {
    json return_NFKfrRF=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_xzyDeUo;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_ucqSDof=json({});
    return_ucqSDof=[&]() {
    json return_ccmgmBg=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_ucqSDof;}();
result["members"]["blendOverlap"]=[&]() {
    json return_UDrjrVm=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
result["members"]["clampResults"]=[&]() {
    json return_AALFHwO=json({});
    return_AALFHwO=[&]() {
    json return_OeADsfO=json({});
    return serialize_uint32_t(name.clampResults);}();return return_AALFHwO;}();
return result;}

    VkColorBlendAdvancedEXT deserialize_VkColorBlendAdvancedEXT(json &name){
        auto result=VkColorBlendAdvancedEXT();
    
[&]() {
result.advancedBlendOp=deserialize_VkBlendOp(name["members"]["advancedBlendOp"]);}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
[&]() {
[&]() {
result.clampResults=deserialize_uint32_t(name["members"]["clampResults"]);}();}();
return result;}

    json serialize_VkRenderPassTransformBeginInfoQCOM(VkRenderPassTransformBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jGiHoBC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mftRpCu=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["transform"]=[&]() {
    json return_kCSLsgL=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkRenderPassTransformBeginInfoQCOM deserialize_VkRenderPassTransformBeginInfoQCOM(json &name){
        auto result=VkRenderPassTransformBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCopyCommandTransformInfoQCOM(VkCopyCommandTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iSCZtTw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pFjYjfs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["transform"]=[&]() {
    json return_kCSLsgL=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkCopyCommandTransformInfoQCOM deserialize_VkCopyCommandTransformInfoQCOM(json &name){
        auto result=VkCopyCommandTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qSwiNsk;[&]() {
temp_qSwiNsk=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qSwiNsk;}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkCommandBufferInheritanceRenderPassTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pDFMsmF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mftRpCu=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["transform"]=[&]() {
    json return_jSoLZaA=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["renderArea"]=[&]() {
    json return_VaWsEow=json({});
    return serialize_VkRect2D(name.renderArea);}();
return result;}

    VkCommandBufferInheritanceRenderPassTransformInfoQCOM deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(json &name){
        auto result=VkCommandBufferInheritanceRenderPassTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
return result;}

    json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkPhysicalDeviceDiagnosticsConfigFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aXUXVnH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["diagnosticsConfig"]=[&]() {
    json return_BDvmsIT=json({});
    return_BDvmsIT=[&]() {
    json return_sVMrbKX=json({});
    return serialize_uint32_t(name.diagnosticsConfig);}();return return_BDvmsIT;}();
return result;}

    VkPhysicalDeviceDiagnosticsConfigFeaturesNV deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(json &name){
        auto result=VkPhysicalDeviceDiagnosticsConfigFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.diagnosticsConfig=deserialize_uint32_t(name["members"]["diagnosticsConfig"]);}();}();
return result;}

    json serialize_VkDeviceDiagnosticsConfigCreateInfoNV(VkDeviceDiagnosticsConfigCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wTNFoYM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oYHhBXK=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_SFMdvfU=json({});
    return serialize_VkDeviceDiagnosticsConfigFlagsNV(name.flags);}();
return result;}

    VkDeviceDiagnosticsConfigCreateInfoNV deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(json &name){
        auto result=VkDeviceDiagnosticsConfigCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_CdrwuGZ;[&]() {
temp_CdrwuGZ=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_CdrwuGZ;}();
[&]() {
result.flags=deserialize_VkDeviceDiagnosticsConfigFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rMBtosm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JxLibiQ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_JSIWcmX=json({});
    return_JSIWcmX=[&]() {
    json return_bzuSUzG=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_JSIWcmX;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(json &name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rMBtosm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JxLibiQ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_JSIWcmX=json({});
    return_JSIWcmX=[&]() {
    json return_bzuSUzG=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_JSIWcmX;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XSeUFjY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderSubgroupUniformControlFlow"]=[&]() {
    json return_HgNDtNf=json({});
    return_HgNDtNf=[&]() {
    json return_JLfbfVL=json({});
    return serialize_uint32_t(name.shaderSubgroupUniformControlFlow);}();return return_HgNDtNf;}();
return result;}

    VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderSubgroupUniformControlFlow=deserialize_uint32_t(name["members"]["shaderSubgroupUniformControlFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2FeaturesEXT(VkPhysicalDeviceRobustness2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gQMlOvJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["robustBufferAccess2"]=[&]() {
    json return_NUhjDXM=json({});
    return_NUhjDXM=[&]() {
    json return_ZOPEwlD=json({});
    return serialize_uint32_t(name.robustBufferAccess2);}();return return_NUhjDXM;}();
result["members"]["robustImageAccess2"]=[&]() {
    json return_mhmPYiQ=json({});
    return_mhmPYiQ=[&]() {
    json return_TIlqJdV=json({});
    return serialize_uint32_t(name.robustImageAccess2);}();return return_mhmPYiQ;}();
result["members"]["nullDescriptor"]=[&]() {
    json return_uwXpqlF=json({});
    return_uwXpqlF=[&]() {
    json return_UMGLPoq=json({});
    return serialize_uint32_t(name.nullDescriptor);}();return return_uwXpqlF;}();
return result;}

    VkPhysicalDeviceRobustness2FeaturesEXT deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceRobustness2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.robustBufferAccess2=deserialize_uint32_t(name["members"]["robustBufferAccess2"]);}();}();
[&]() {
[&]() {
result.robustImageAccess2=deserialize_uint32_t(name["members"]["robustImageAccess2"]);}();}();
[&]() {
[&]() {
result.nullDescriptor=deserialize_uint32_t(name["members"]["nullDescriptor"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2PropertiesEXT(VkPhysicalDeviceRobustness2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wyxifUA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["robustStorageBufferAccessSizeAlignment"]=[&]() {
    json return_yXXvzjn=json({});
    return_yXXvzjn=[&]() {
    json return_ihHDNMw=json({});
    return serialize_uint64_t(name.robustStorageBufferAccessSizeAlignment);}();return return_yXXvzjn;}();
result["members"]["robustUniformBufferAccessSizeAlignment"]=[&]() {
    json return_qYXOilu=json({});
    return_qYXOilu=[&]() {
    json return_cgxAowf=json({});
    return serialize_uint64_t(name.robustUniformBufferAccessSizeAlignment);}();return return_qYXOilu;}();
return result;}

    VkPhysicalDeviceRobustness2PropertiesEXT deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(json &name){
        auto result=VkPhysicalDeviceRobustness2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.robustStorageBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustStorageBufferAccessSizeAlignment"]);}();}();
[&]() {
[&]() {
result.robustUniformBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustUniformBufferAccessSizeAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeatures(VkPhysicalDeviceImageRobustnessFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tlRYOuh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["robustImageAccess"]=[&]() {
    json return_SlXgVbu=json({});
    return_SlXgVbu=[&]() {
    json return_AoqJSOQ=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_SlXgVbu;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeatures deserialize_VkPhysicalDeviceImageRobustnessFeatures(json &name){
        auto result=VkPhysicalDeviceImageRobustnessFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(VkPhysicalDeviceImageRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tlRYOuh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["robustImageAccess"]=[&]() {
    json return_SlXgVbu=json({});
    return_SlXgVbu=[&]() {
    json return_AoqJSOQ=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_SlXgVbu;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeaturesEXT deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceImageRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sWqMDsn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["workgroupMemoryExplicitLayout"]=[&]() {
    json return_ybTwwPM=json({});
    return_ybTwwPM=[&]() {
    json return_MgqKkZq=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout);}();return return_ybTwwPM;}();
result["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]=[&]() {
    json return_pcbUyqM=json({});
    return_pcbUyqM=[&]() {
    json return_pqrsjDA=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayoutScalarBlockLayout);}();return return_pcbUyqM;}();
result["members"]["workgroupMemoryExplicitLayout8BitAccess"]=[&]() {
    json return_NcoQbKP=json({});
    return_NcoQbKP=[&]() {
    json return_IXdvyfN=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout8BitAccess);}();return return_NcoQbKP;}();
result["members"]["workgroupMemoryExplicitLayout16BitAccess"]=[&]() {
    json return_cvPeSsX=json({});
    return_cvPeSsX=[&]() {
    json return_UJRHvlw=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout16BitAccess);}();return return_cvPeSsX;}();
return result;}

    VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayoutScalarBlockLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout8BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout8BitAccess"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout16BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout16BitAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDevice4444FormatsFeaturesEXT(VkPhysicalDevice4444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_peyqlxE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["formatA4R4G4B4"]=[&]() {
    json return_dpOstEQ=json({});
    return_dpOstEQ=[&]() {
    json return_auEHdgG=json({});
    return serialize_uint32_t(name.formatA4R4G4B4);}();return return_dpOstEQ;}();
result["members"]["formatA4B4G4R4"]=[&]() {
    json return_mRxtFEO=json({});
    return_mRxtFEO=[&]() {
    json return_ieaQxbB=json({});
    return serialize_uint32_t(name.formatA4B4G4R4);}();return return_mRxtFEO;}();
return result;}

    VkPhysicalDevice4444FormatsFeaturesEXT deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(json &name){
        auto result=VkPhysicalDevice4444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.formatA4R4G4B4=deserialize_uint32_t(name["members"]["formatA4R4G4B4"]);}();}();
[&]() {
[&]() {
result.formatA4B4G4R4=deserialize_uint32_t(name["members"]["formatA4B4G4R4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UFcGwtC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subpassShading"]=[&]() {
    json return_jnwQbib=json({});
    return_jnwQbib=[&]() {
    json return_BeMiktJ=json({});
    return serialize_uint32_t(name.subpassShading);}();return return_jnwQbib;}();
return result;}

    VkPhysicalDeviceSubpassShadingFeaturesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(json &name){
        auto result=VkPhysicalDeviceSubpassShadingFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.subpassShading=deserialize_uint32_t(name["members"]["subpassShading"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xHHneBV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jddtSSC=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["clustercullingShader"]=[&]() {
    json return_skhKktZ=json({});
    return_skhKktZ=[&]() {
    json return_GMetJTq=json({});
    return serialize_uint32_t(name.clustercullingShader);}();return return_skhKktZ;}();
result["members"]["multiviewClusterCullingShader"]=[&]() {
    json return_GgnChoU=json({});
    return_GgnChoU=[&]() {
    json return_Llsxntr=json({});
    return serialize_uint32_t(name.multiviewClusterCullingShader);}();return return_GgnChoU;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(json &name){
        auto result=VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.clustercullingShader=deserialize_uint32_t(name["members"]["clustercullingShader"]);}();}();
[&]() {
[&]() {
result.multiviewClusterCullingShader=deserialize_uint32_t(name["members"]["multiviewClusterCullingShader"]);}();}();
return result;}

    json serialize_VkBufferCopy2(VkBufferCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YobMemd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcOffset"]=[&]() {
    json return_IeEdxuW=json({});
    return_IeEdxuW=[&]() {
    json return_uqddvKz=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_IeEdxuW;}();
result["members"]["dstOffset"]=[&]() {
    json return_XqlTRiW=json({});
    return_XqlTRiW=[&]() {
    json return_VvxKAgD=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_XqlTRiW;}();
result["members"]["size"]=[&]() {
    json return_cpbWwOK=json({});
    return_cpbWwOK=[&]() {
    json return_IaLcCqL=json({});
    return serialize_uint64_t(name.size);}();return return_cpbWwOK;}();
return result;}

    VkBufferCopy2 deserialize_VkBufferCopy2(json &name){
        auto result=VkBufferCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferCopy2KHR(VkBufferCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YobMemd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcOffset"]=[&]() {
    json return_IeEdxuW=json({});
    return_IeEdxuW=[&]() {
    json return_uqddvKz=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_IeEdxuW;}();
result["members"]["dstOffset"]=[&]() {
    json return_XqlTRiW=json({});
    return_XqlTRiW=[&]() {
    json return_VvxKAgD=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_XqlTRiW;}();
result["members"]["size"]=[&]() {
    json return_cpbWwOK=json({});
    return_cpbWwOK=[&]() {
    json return_IaLcCqL=json({});
    return serialize_uint64_t(name.size);}();return return_cpbWwOK;}();
return result;}

    VkBufferCopy2KHR deserialize_VkBufferCopy2KHR(json &name){
        auto result=VkBufferCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageCopy2(VkImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZKCRheR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubresource"]=[&]() {
    json return_WrOnZkt=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_rtrHfoj=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_dGfTjsz=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_CrqGeyZ=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_XgJKonY=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2 deserialize_VkImageCopy2(json &name){
        auto result=VkImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageCopy2KHR(VkImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZKCRheR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubresource"]=[&]() {
    json return_WrOnZkt=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_rtrHfoj=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_dGfTjsz=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_CrqGeyZ=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_XgJKonY=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2KHR deserialize_VkImageCopy2KHR(json &name){
        auto result=VkImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit2(VkImageBlit2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LyrvBCp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubresource"]=[&]() {
    json return_WrOnZkt=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_DWPLFso=json({});
    
        return_DWPLFso["members"]={};
        for(int DWPLFso=0; DWPLFso < 2; DWPLFso++){
            json temp;
            temp=[&]() {
    json return_sLRdSFO=json({});
    return serialize_VkOffset3D(name.srcOffsets[DWPLFso]);}();
            return_DWPLFso["members"].push_back(temp);
        }
        return return_DWPLFso;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_dGfTjsz=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_McXmXeK=json({});
    
        return_McXmXeK["members"]={};
        for(int McXmXeK=0; McXmXeK < 2; McXmXeK++){
            json temp;
            temp=[&]() {
    json return_kvvovvI=json({});
    return serialize_VkOffset3D(name.dstOffsets[McXmXeK]);}();
            return_McXmXeK["members"].push_back(temp);
        }
        return return_McXmXeK;
        }();
return result;}

    VkImageBlit2 deserialize_VkImageBlit2(json &name){
        auto result=VkImageBlit2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int JphDDEx=0; JphDDEx < 2; JphDDEx++){
            [&]() {
result.srcOffsets[JphDDEx]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][JphDDEx]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int ElDIEqT=0; ElDIEqT < 2; ElDIEqT++){
            [&]() {
result.dstOffsets[ElDIEqT]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][ElDIEqT]);}();;
        }
        }();
return result;}

    json serialize_VkImageBlit2KHR(VkImageBlit2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LyrvBCp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubresource"]=[&]() {
    json return_WrOnZkt=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_DWPLFso=json({});
    
        return_DWPLFso["members"]={};
        for(int DWPLFso=0; DWPLFso < 2; DWPLFso++){
            json temp;
            temp=[&]() {
    json return_sLRdSFO=json({});
    return serialize_VkOffset3D(name.srcOffsets[DWPLFso]);}();
            return_DWPLFso["members"].push_back(temp);
        }
        return return_DWPLFso;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_dGfTjsz=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_McXmXeK=json({});
    
        return_McXmXeK["members"]={};
        for(int McXmXeK=0; McXmXeK < 2; McXmXeK++){
            json temp;
            temp=[&]() {
    json return_kvvovvI=json({});
    return serialize_VkOffset3D(name.dstOffsets[McXmXeK]);}();
            return_McXmXeK["members"].push_back(temp);
        }
        return return_McXmXeK;
        }();
return result;}

    VkImageBlit2KHR deserialize_VkImageBlit2KHR(json &name){
        auto result=VkImageBlit2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int JphDDEx=0; JphDDEx < 2; JphDDEx++){
            [&]() {
result.srcOffsets[JphDDEx]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][JphDDEx]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int ElDIEqT=0; ElDIEqT < 2; ElDIEqT++){
            [&]() {
result.dstOffsets[ElDIEqT]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][ElDIEqT]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy2(VkBufferImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tqtAwni=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bufferOffset"]=[&]() {
    json return_sOZAYpN=json({});
    return_sOZAYpN=[&]() {
    json return_WffvaSK=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_sOZAYpN;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_woOODnT=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_VwLhPqH=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_ACDlzaN=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_xtJHSTg=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_LyzeTZR=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2 deserialize_VkBufferImageCopy2(json &name){
        auto result=VkBufferImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkBufferImageCopy2KHR(VkBufferImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tqtAwni=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["bufferOffset"]=[&]() {
    json return_sOZAYpN=json({});
    return_sOZAYpN=[&]() {
    json return_WffvaSK=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_sOZAYpN;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_woOODnT=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_VwLhPqH=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_ACDlzaN=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_xtJHSTg=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_LyzeTZR=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2KHR deserialize_VkBufferImageCopy2KHR(json &name){
        auto result=VkBufferImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve2(VkImageResolve2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HDBxvyK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubresource"]=[&]() {
    json return_WrOnZkt=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_JPUxPnH=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_dGfTjsz=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_ZBKyOFC=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_fUxMPdj=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2 deserialize_VkImageResolve2(json &name){
        auto result=VkImageResolve2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageResolve2KHR(VkImageResolve2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HDBxvyK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcSubresource"]=[&]() {
    json return_WrOnZkt=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_JPUxPnH=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_dGfTjsz=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_ZBKyOFC=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_fUxMPdj=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2KHR deserialize_VkImageResolve2KHR(json &name){
        auto result=VkImageResolve2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkCopyBufferInfo2(VkCopyBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QFeeUYe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcBuffer"]=[&]() {
    json return_tWXAtpw=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_DqFpZdF=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_zxeXWXy=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_PHYZsNi=json({});
    
        if (name.pRegions==NULL){
            return_PHYZsNi["null"]=true;
            return return_PHYZsNi;
        }
        
        return_PHYZsNi["members"]={};
        for(int PHYZsNi=0; PHYZsNi < name.regionCount; PHYZsNi++){
            json temp;
            temp=[&]() {
    json return_MiprrqC=json({});
    return serialize_VkBufferCopy2(name.pRegions[PHYZsNi]);}();
            return_PHYZsNi["members"].push_back(temp);
        }
        return return_PHYZsNi;
        }();
return result;}

    VkCopyBufferInfo2 deserialize_VkCopyBufferInfo2(json &name){
        auto result=VkCopyBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_GDGQTDP;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_GDGQTDP=NULL;
        return;
        }
    temp_GDGQTDP=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int ENMjNAm=0; ENMjNAm < result.regionCount; ENMjNAm++){
            [&]() {
temp_GDGQTDP[ENMjNAm]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][ENMjNAm]);}();;
        }
        }();result.pRegions=temp_GDGQTDP;}();
return result;}

    json serialize_VkCopyBufferInfo2KHR(VkCopyBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QFeeUYe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcBuffer"]=[&]() {
    json return_tWXAtpw=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_DqFpZdF=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_zxeXWXy=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_PHYZsNi=json({});
    
        if (name.pRegions==NULL){
            return_PHYZsNi["null"]=true;
            return return_PHYZsNi;
        }
        
        return_PHYZsNi["members"]={};
        for(int PHYZsNi=0; PHYZsNi < name.regionCount; PHYZsNi++){
            json temp;
            temp=[&]() {
    json return_MiprrqC=json({});
    return serialize_VkBufferCopy2(name.pRegions[PHYZsNi]);}();
            return_PHYZsNi["members"].push_back(temp);
        }
        return return_PHYZsNi;
        }();
return result;}

    VkCopyBufferInfo2KHR deserialize_VkCopyBufferInfo2KHR(json &name){
        auto result=VkCopyBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_GDGQTDP;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_GDGQTDP=NULL;
        return;
        }
    temp_GDGQTDP=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int ENMjNAm=0; ENMjNAm < result.regionCount; ENMjNAm++){
            [&]() {
temp_GDGQTDP[ENMjNAm]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][ENMjNAm]);}();;
        }
        }();result.pRegions=temp_GDGQTDP;}();
return result;}

    json serialize_VkCopyImageInfo2(VkCopyImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dAAnsXi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_vwgjqgS=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_mmLXvLp=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_KPHmqBx=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_jQSFrfN=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_zxeXWXy=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_NROHaEX=json({});
    
        if (name.pRegions==NULL){
            return_NROHaEX["null"]=true;
            return return_NROHaEX;
        }
        
        return_NROHaEX["members"]={};
        for(int NROHaEX=0; NROHaEX < name.regionCount; NROHaEX++){
            json temp;
            temp=[&]() {
    json return_aiwCVzu=json({});
    return serialize_VkImageCopy2(name.pRegions[NROHaEX]);}();
            return_NROHaEX["members"].push_back(temp);
        }
        return return_NROHaEX;
        }();
return result;}

    VkCopyImageInfo2 deserialize_VkCopyImageInfo2(json &name){
        auto result=VkCopyImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_fwIsDEi;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_fwIsDEi=NULL;
        return;
        }
    temp_fwIsDEi=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int MwvUUYU=0; MwvUUYU < result.regionCount; MwvUUYU++){
            [&]() {
temp_fwIsDEi[MwvUUYU]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][MwvUUYU]);}();;
        }
        }();result.pRegions=temp_fwIsDEi;}();
return result;}

    json serialize_VkCopyImageInfo2KHR(VkCopyImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dAAnsXi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_vwgjqgS=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_mmLXvLp=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_KPHmqBx=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_jQSFrfN=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_zxeXWXy=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_NROHaEX=json({});
    
        if (name.pRegions==NULL){
            return_NROHaEX["null"]=true;
            return return_NROHaEX;
        }
        
        return_NROHaEX["members"]={};
        for(int NROHaEX=0; NROHaEX < name.regionCount; NROHaEX++){
            json temp;
            temp=[&]() {
    json return_aiwCVzu=json({});
    return serialize_VkImageCopy2(name.pRegions[NROHaEX]);}();
            return_NROHaEX["members"].push_back(temp);
        }
        return return_NROHaEX;
        }();
return result;}

    VkCopyImageInfo2KHR deserialize_VkCopyImageInfo2KHR(json &name){
        auto result=VkCopyImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_fwIsDEi;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_fwIsDEi=NULL;
        return;
        }
    temp_fwIsDEi=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int MwvUUYU=0; MwvUUYU < result.regionCount; MwvUUYU++){
            [&]() {
temp_fwIsDEi[MwvUUYU]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][MwvUUYU]);}();;
        }
        }();result.pRegions=temp_fwIsDEi;}();
return result;}

    json serialize_VkBlitImageInfo2(VkBlitImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GxFpUOe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_lnMcTsk=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_QKdgrOd=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_JceFKCP=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_qloFMvR=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ZcBWbUZ=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_fhSWsdP=json({});
    
        if (name.pRegions==NULL){
            return_fhSWsdP["null"]=true;
            return return_fhSWsdP;
        }
        
        return_fhSWsdP["members"]={};
        for(int fhSWsdP=0; fhSWsdP < name.regionCount; fhSWsdP++){
            json temp;
            temp=[&]() {
    json return_MGhAngx=json({});
    return serialize_VkImageBlit2(name.pRegions[fhSWsdP]);}();
            return_fhSWsdP["members"].push_back(temp);
        }
        return return_fhSWsdP;
        }();
result["members"]["filter"]=[&]() {
    json return_hciMIyf=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2 deserialize_VkBlitImageInfo2(json &name){
        auto result=VkBlitImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_rAQnUXo;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_rAQnUXo=NULL;
        return;
        }
    temp_rAQnUXo=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int CZCFCDP=0; CZCFCDP < result.regionCount; CZCFCDP++){
            [&]() {
temp_rAQnUXo[CZCFCDP]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][CZCFCDP]);}();;
        }
        }();result.pRegions=temp_rAQnUXo;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkBlitImageInfo2KHR(VkBlitImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GxFpUOe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_lnMcTsk=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_QKdgrOd=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_JceFKCP=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_qloFMvR=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ZcBWbUZ=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_fhSWsdP=json({});
    
        if (name.pRegions==NULL){
            return_fhSWsdP["null"]=true;
            return return_fhSWsdP;
        }
        
        return_fhSWsdP["members"]={};
        for(int fhSWsdP=0; fhSWsdP < name.regionCount; fhSWsdP++){
            json temp;
            temp=[&]() {
    json return_MGhAngx=json({});
    return serialize_VkImageBlit2(name.pRegions[fhSWsdP]);}();
            return_fhSWsdP["members"].push_back(temp);
        }
        return return_fhSWsdP;
        }();
result["members"]["filter"]=[&]() {
    json return_hciMIyf=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2KHR deserialize_VkBlitImageInfo2KHR(json &name){
        auto result=VkBlitImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_rAQnUXo;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_rAQnUXo=NULL;
        return;
        }
    temp_rAQnUXo=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int CZCFCDP=0; CZCFCDP < result.regionCount; CZCFCDP++){
            [&]() {
temp_rAQnUXo[CZCFCDP]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][CZCFCDP]);}();;
        }
        }();result.pRegions=temp_rAQnUXo;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkCopyBufferToImageInfo2(VkCopyBufferToImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LDRhUPq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KlESVpD=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcBuffer"]=[&]() {
    json return_aCUxdCv=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_JinCqgr=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_hZzvQLN=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_kULtHOp=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_zIEqEdh=json({});
    
        if (name.pRegions==NULL){
            return_zIEqEdh["null"]=true;
            return return_zIEqEdh;
        }
        
        return_zIEqEdh["members"]={};
        for(int zIEqEdh=0; zIEqEdh < name.regionCount; zIEqEdh++){
            json temp;
            temp=[&]() {
    json return_nFTgfKO=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[zIEqEdh]);}();
            return_zIEqEdh["members"].push_back(temp);
        }
        return return_zIEqEdh;
        }();
return result;}

    VkCopyBufferToImageInfo2 deserialize_VkCopyBufferToImageInfo2(json &name){
        auto result=VkCopyBufferToImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XeEuUtf;[&]() {
temp_XeEuUtf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XeEuUtf;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_EwGkNyZ;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_EwGkNyZ=NULL;
        return;
        }
    temp_EwGkNyZ=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int NpftFOI=0; NpftFOI < result.regionCount; NpftFOI++){
            [&]() {
temp_EwGkNyZ[NpftFOI]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][NpftFOI]);}();;
        }
        }();result.pRegions=temp_EwGkNyZ;}();
return result;}

    json serialize_VkCopyBufferToImageInfo2KHR(VkCopyBufferToImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LDRhUPq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KlESVpD=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcBuffer"]=[&]() {
    json return_aCUxdCv=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_JinCqgr=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_hZzvQLN=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_kULtHOp=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_zIEqEdh=json({});
    
        if (name.pRegions==NULL){
            return_zIEqEdh["null"]=true;
            return return_zIEqEdh;
        }
        
        return_zIEqEdh["members"]={};
        for(int zIEqEdh=0; zIEqEdh < name.regionCount; zIEqEdh++){
            json temp;
            temp=[&]() {
    json return_nFTgfKO=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[zIEqEdh]);}();
            return_zIEqEdh["members"].push_back(temp);
        }
        return return_zIEqEdh;
        }();
return result;}

    VkCopyBufferToImageInfo2KHR deserialize_VkCopyBufferToImageInfo2KHR(json &name){
        auto result=VkCopyBufferToImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XeEuUtf;[&]() {
temp_XeEuUtf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XeEuUtf;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_EwGkNyZ;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_EwGkNyZ=NULL;
        return;
        }
    temp_EwGkNyZ=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int NpftFOI=0; NpftFOI < result.regionCount; NpftFOI++){
            [&]() {
temp_EwGkNyZ[NpftFOI]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][NpftFOI]);}();;
        }
        }();result.pRegions=temp_EwGkNyZ;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2(VkCopyImageToBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_koWomYv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DXfRYCc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_YLmCOFo=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_FcCEiYS=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_gLjKfDp=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_xulzQbe=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_jFFjlrE=json({});
    
        if (name.pRegions==NULL){
            return_jFFjlrE["null"]=true;
            return return_jFFjlrE;
        }
        
        return_jFFjlrE["members"]={};
        for(int jFFjlrE=0; jFFjlrE < name.regionCount; jFFjlrE++){
            json temp;
            temp=[&]() {
    json return_ZKQmmPY=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[jFFjlrE]);}();
            return_jFFjlrE["members"].push_back(temp);
        }
        return return_jFFjlrE;
        }();
return result;}

    VkCopyImageToBufferInfo2 deserialize_VkCopyImageToBufferInfo2(json &name){
        auto result=VkCopyImageToBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KmUErOG;[&]() {
temp_KmUErOG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KmUErOG;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_vdDKpKP;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_vdDKpKP=NULL;
        return;
        }
    temp_vdDKpKP=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int TUTdHmu=0; TUTdHmu < result.regionCount; TUTdHmu++){
            [&]() {
temp_vdDKpKP[TUTdHmu]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][TUTdHmu]);}();;
        }
        }();result.pRegions=temp_vdDKpKP;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2KHR(VkCopyImageToBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_koWomYv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DXfRYCc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_YLmCOFo=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_FcCEiYS=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_gLjKfDp=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_xulzQbe=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_jFFjlrE=json({});
    
        if (name.pRegions==NULL){
            return_jFFjlrE["null"]=true;
            return return_jFFjlrE;
        }
        
        return_jFFjlrE["members"]={};
        for(int jFFjlrE=0; jFFjlrE < name.regionCount; jFFjlrE++){
            json temp;
            temp=[&]() {
    json return_ZKQmmPY=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[jFFjlrE]);}();
            return_jFFjlrE["members"].push_back(temp);
        }
        return return_jFFjlrE;
        }();
return result;}

    VkCopyImageToBufferInfo2KHR deserialize_VkCopyImageToBufferInfo2KHR(json &name){
        auto result=VkCopyImageToBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KmUErOG;[&]() {
temp_KmUErOG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KmUErOG;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_vdDKpKP;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_vdDKpKP=NULL;
        return;
        }
    temp_vdDKpKP=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int TUTdHmu=0; TUTdHmu < result.regionCount; TUTdHmu++){
            [&]() {
temp_vdDKpKP[TUTdHmu]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][TUTdHmu]);}();;
        }
        }();result.pRegions=temp_vdDKpKP;}();
return result;}

    json serialize_VkResolveImageInfo2(VkResolveImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mjDKbya=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_xQaGXaH=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_FDKqjjl=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_PaFyVhC=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_LxieSmI=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_vrbXWfR=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_HTVQrZt=json({});
    
        if (name.pRegions==NULL){
            return_HTVQrZt["null"]=true;
            return return_HTVQrZt;
        }
        
        return_HTVQrZt["members"]={};
        for(int HTVQrZt=0; HTVQrZt < name.regionCount; HTVQrZt++){
            json temp;
            temp=[&]() {
    json return_IackMtp=json({});
    return serialize_VkImageResolve2(name.pRegions[HTVQrZt]);}();
            return_HTVQrZt["members"].push_back(temp);
        }
        return return_HTVQrZt;
        }();
return result;}

    VkResolveImageInfo2 deserialize_VkResolveImageInfo2(json &name){
        auto result=VkResolveImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_nSKgzRA;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_nSKgzRA=NULL;
        return;
        }
    temp_nSKgzRA=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int NZRZmwt=0; NZRZmwt < result.regionCount; NZRZmwt++){
            [&]() {
temp_nSKgzRA[NZRZmwt]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][NZRZmwt]);}();;
        }
        }();result.pRegions=temp_nSKgzRA;}();
return result;}

    json serialize_VkResolveImageInfo2KHR(VkResolveImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mjDKbya=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcImage"]=[&]() {
    json return_xQaGXaH=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_FDKqjjl=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_PaFyVhC=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_LxieSmI=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_vrbXWfR=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_HTVQrZt=json({});
    
        if (name.pRegions==NULL){
            return_HTVQrZt["null"]=true;
            return return_HTVQrZt;
        }
        
        return_HTVQrZt["members"]={};
        for(int HTVQrZt=0; HTVQrZt < name.regionCount; HTVQrZt++){
            json temp;
            temp=[&]() {
    json return_IackMtp=json({});
    return serialize_VkImageResolve2(name.pRegions[HTVQrZt]);}();
            return_HTVQrZt["members"].push_back(temp);
        }
        return return_HTVQrZt;
        }();
return result;}

    VkResolveImageInfo2KHR deserialize_VkResolveImageInfo2KHR(json &name){
        auto result=VkResolveImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_nSKgzRA;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_nSKgzRA=NULL;
        return;
        }
    temp_nSKgzRA=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int NZRZmwt=0; NZRZmwt < result.regionCount; NZRZmwt++){
            [&]() {
temp_nSKgzRA[NZRZmwt]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][NZRZmwt]);}();;
        }
        }();result.pRegions=temp_nSKgzRA;}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pVBhOCt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderImageInt64Atomics"]=[&]() {
    json return_EWtnDXA=json({});
    return_EWtnDXA=[&]() {
    json return_tZSLpCV=json({});
    return serialize_uint32_t(name.shaderImageInt64Atomics);}();return return_EWtnDXA;}();
result["members"]["sparseImageInt64Atomics"]=[&]() {
    json return_OrnaejO=json({});
    return_OrnaejO=[&]() {
    json return_YcHHVEH=json({});
    return serialize_uint32_t(name.sparseImageInt64Atomics);}();return return_OrnaejO;}();
return result;}

    VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderImageInt64Atomics=deserialize_uint32_t(name["members"]["shaderImageInt64Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageInt64Atomics=deserialize_uint32_t(name["members"]["sparseImageInt64Atomics"]);}();}();
return result;}

    json serialize_VkFragmentShadingRateAttachmentInfoKHR(VkFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EhxCXYg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pFragmentShadingRateAttachment"]=[&]() {
    json return_LIrhjWi=json({});
    
        if (name.pFragmentShadingRateAttachment==NULL){
            return_LIrhjWi["null"]=true;
            return return_LIrhjWi;
        }
        return_LIrhjWi=[&]() {
    json return_eyRihxu=json({});
    return serialize_VkAttachmentReference2(*name.pFragmentShadingRateAttachment);}();
return return_LIrhjWi;}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_EGvmfVM=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkFragmentShadingRateAttachmentInfoKHR deserialize_VkFragmentShadingRateAttachmentInfoKHR(json &name){
        auto result=VkFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
VkAttachmentReference2* temp_ddwcqsS;[&]() {

        if (name["members"]["pFragmentShadingRateAttachment"].contains("null")){
        temp_ddwcqsS=NULL;
        return;
        }
    temp_ddwcqsS=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_ddwcqsS)=deserialize_VkAttachmentReference2(name["members"]["pFragmentShadingRateAttachment"]);}();
}();result.pFragmentShadingRateAttachment=temp_ddwcqsS;}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(VkPipelineFragmentShadingRateStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QiRQzTo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nNniLrj=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentSize"]=[&]() {
    json return_yixmmsJ=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
result["members"]["combinerOps"]=[&]() {
    json return_nPuuwbH=json({});
    
        return_nPuuwbH["members"]={};
        for(int nPuuwbH=0; nPuuwbH < 2; nPuuwbH++){
            json temp;
            temp=[&]() {
    json return_fBqlavF=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[nPuuwbH]);}();
            return_nPuuwbH["members"].push_back(temp);
        }
        return return_nPuuwbH;
        }();
return result;}

    VkPipelineFragmentShadingRateStateCreateInfoKHR deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(json &name){
        auto result=VkPipelineFragmentShadingRateStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_eJPiWGi;[&]() {
temp_eJPiWGi=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_eJPiWGi;}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
[&]() {

        for (int pdnGwtf=0; pdnGwtf < 2; pdnGwtf++){
            [&]() {
result.combinerOps[pdnGwtf]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][pdnGwtf]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(VkPhysicalDeviceFragmentShadingRateFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CndPdUt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineFragmentShadingRate"]=[&]() {
    json return_awqzZUO=json({});
    return_awqzZUO=[&]() {
    json return_fbnxXiR=json({});
    return serialize_uint32_t(name.pipelineFragmentShadingRate);}();return return_awqzZUO;}();
result["members"]["primitiveFragmentShadingRate"]=[&]() {
    json return_oPOcLAi=json({});
    return_oPOcLAi=[&]() {
    json return_HDeldHI=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRate);}();return return_oPOcLAi;}();
result["members"]["attachmentFragmentShadingRate"]=[&]() {
    json return_KOutvUd=json({});
    return_KOutvUd=[&]() {
    json return_RnQfEbL=json({});
    return serialize_uint32_t(name.attachmentFragmentShadingRate);}();return return_KOutvUd;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateFeaturesKHR deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceFragmentShadingRateFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelineFragmentShadingRate=deserialize_uint32_t(name["members"]["pipelineFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRate=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.attachmentFragmentShadingRate=deserialize_uint32_t(name["members"]["attachmentFragmentShadingRate"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(VkPhysicalDeviceFragmentShadingRatePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EphHQCV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_DPdBLcY=json({});
    return serialize_VkExtent2D(name.minFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_rMOrVgp=json({});
    return serialize_VkExtent2D(name.maxFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]=[&]() {
    json return_eOeHHjK=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateAttachmentTexelSizeAspectRatio);}();
result["members"]["primitiveFragmentShadingRateWithMultipleViewports"]=[&]() {
    json return_UFgZjiq=json({});
    return_UFgZjiq=[&]() {
    json return_qTYtwqN=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateWithMultipleViewports);}();return return_UFgZjiq;}();
result["members"]["layeredShadingRateAttachments"]=[&]() {
    json return_XGQuYUZ=json({});
    return_XGQuYUZ=[&]() {
    json return_giTtNxD=json({});
    return serialize_uint32_t(name.layeredShadingRateAttachments);}();return return_XGQuYUZ;}();
result["members"]["fragmentShadingRateNonTrivialCombinerOps"]=[&]() {
    json return_czbBrof=json({});
    return_czbBrof=[&]() {
    json return_exeoBai=json({});
    return serialize_uint32_t(name.fragmentShadingRateNonTrivialCombinerOps);}();return return_czbBrof;}();
result["members"]["maxFragmentSize"]=[&]() {
    json return_LzUlvSA=json({});
    return serialize_VkExtent2D(name.maxFragmentSize);}();
result["members"]["maxFragmentSizeAspectRatio"]=[&]() {
    json return_aadhTeM=json({});
    return serialize_uint32_t(name.maxFragmentSizeAspectRatio);}();
result["members"]["maxFragmentShadingRateCoverageSamples"]=[&]() {
    json return_uVKDjqk=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateCoverageSamples);}();
result["members"]["maxFragmentShadingRateRasterizationSamples"]=[&]() {
    json return_GMKsomQ=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateRasterizationSamples);}();
result["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]=[&]() {
    json return_gdatQvc=json({});
    return_gdatQvc=[&]() {
    json return_CFQhQPs=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderDepthStencilWrites);}();return return_gdatQvc;}();
result["members"]["fragmentShadingRateWithSampleMask"]=[&]() {
    json return_WWGuYrZ=json({});
    return_WWGuYrZ=[&]() {
    json return_PyihxlJ=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithSampleMask);}();return return_WWGuYrZ;}();
result["members"]["fragmentShadingRateWithShaderSampleMask"]=[&]() {
    json return_qMnMeEO=json({});
    return_qMnMeEO=[&]() {
    json return_FMLRGOg=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderSampleMask);}();return return_qMnMeEO;}();
result["members"]["fragmentShadingRateWithConservativeRasterization"]=[&]() {
    json return_cOcGNNp=json({});
    return_cOcGNNp=[&]() {
    json return_ymbuPzt=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithConservativeRasterization);}();return return_cOcGNNp;}();
result["members"]["fragmentShadingRateWithFragmentShaderInterlock"]=[&]() {
    json return_tKkIHha=json({});
    return_tKkIHha=[&]() {
    json return_PlHkOTm=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithFragmentShaderInterlock);}();return return_tKkIHha;}();
result["members"]["fragmentShadingRateWithCustomSampleLocations"]=[&]() {
    json return_ICDoJeZ=json({});
    return_ICDoJeZ=[&]() {
    json return_xFPqpxg=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithCustomSampleLocations);}();return return_ICDoJeZ;}();
result["members"]["fragmentShadingRateStrictMultiplyCombiner"]=[&]() {
    json return_UUfFAUV=json({});
    return_UUfFAUV=[&]() {
    json return_vxOgHHr=json({});
    return serialize_uint32_t(name.fragmentShadingRateStrictMultiplyCombiner);}();return return_UUfFAUV;}();
return result;}

    VkPhysicalDeviceFragmentShadingRatePropertiesKHR deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(json &name){
        auto result=VkPhysicalDeviceFragmentShadingRatePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.minFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]);}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateWithMultipleViewports=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateWithMultipleViewports"]);}();}();
[&]() {
[&]() {
result.layeredShadingRateAttachments=deserialize_uint32_t(name["members"]["layeredShadingRateAttachments"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateNonTrivialCombinerOps=deserialize_uint32_t(name["members"]["fragmentShadingRateNonTrivialCombinerOps"]);}();}();
[&]() {
result.maxFragmentSize=deserialize_VkExtent2D(name["members"]["maxFragmentSize"]);}();
[&]() {
result.maxFragmentSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentSizeAspectRatio"]);}();
[&]() {
result.maxFragmentShadingRateCoverageSamples=deserialize_uint32_t(name["members"]["maxFragmentShadingRateCoverageSamples"]);}();
[&]() {
result.maxFragmentShadingRateRasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateRasterizationSamples"]);}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderDepthStencilWrites=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithConservativeRasterization=deserialize_uint32_t(name["members"]["fragmentShadingRateWithConservativeRasterization"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithFragmentShaderInterlock=deserialize_uint32_t(name["members"]["fragmentShadingRateWithFragmentShaderInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithCustomSampleLocations=deserialize_uint32_t(name["members"]["fragmentShadingRateWithCustomSampleLocations"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateStrictMultiplyCombiner=deserialize_uint32_t(name["members"]["fragmentShadingRateStrictMultiplyCombiner"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateKHR(VkPhysicalDeviceFragmentShadingRateKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PnjVNzQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sampleCounts"]=[&]() {
    json return_XSGVPZF=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["fragmentSize"]=[&]() {
    json return_XobHvQl=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateKHR deserialize_VkPhysicalDeviceFragmentShadingRateKHR(json &name){
        auto result=VkPhysicalDeviceFragmentShadingRateKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(VkPhysicalDeviceShaderTerminateInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HBRPPKv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_NfOMkpd=json({});
    return_NfOMkpd=[&]() {
    json return_eGZTsmJ=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_NfOMkpd;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeatures deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(json &name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HBRPPKv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_NfOMkpd=json({});
    return_NfOMkpd=[&]() {
    json return_eGZTsmJ=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_NfOMkpd;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QJqBloZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentShadingRateEnums"]=[&]() {
    json return_fNeLxXE=json({});
    return_fNeLxXE=[&]() {
    json return_LxxxqOT=json({});
    return serialize_uint32_t(name.fragmentShadingRateEnums);}();return return_fNeLxXE;}();
result["members"]["supersampleFragmentShadingRates"]=[&]() {
    json return_erZmyUt=json({});
    return_erZmyUt=[&]() {
    json return_PiGXbwh=json({});
    return serialize_uint32_t(name.supersampleFragmentShadingRates);}();return return_erZmyUt;}();
result["members"]["noInvocationFragmentShadingRates"]=[&]() {
    json return_bBjddUx=json({});
    return_bBjddUx=[&]() {
    json return_jxNKoOc=json({});
    return serialize_uint32_t(name.noInvocationFragmentShadingRates);}();return return_bBjddUx;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(json &name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.fragmentShadingRateEnums=deserialize_uint32_t(name["members"]["fragmentShadingRateEnums"]);}();}();
[&]() {
[&]() {
result.supersampleFragmentShadingRates=deserialize_uint32_t(name["members"]["supersampleFragmentShadingRates"]);}();}();
[&]() {
[&]() {
result.noInvocationFragmentShadingRates=deserialize_uint32_t(name["members"]["noInvocationFragmentShadingRates"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sZScKFX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAZMHOp=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxFragmentShadingRateInvocationCount"]=[&]() {
    json return_yRPewgb=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateInvocationCount);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(json &name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxFragmentShadingRateInvocationCount=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateInvocationCount"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkPipelineFragmentShadingRateEnumStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FhtoMoW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shadingRateType"]=[&]() {
    json return_dDuUFoH=json({});
    return serialize_VkFragmentShadingRateTypeNV(name.shadingRateType);}();
result["members"]["shadingRate"]=[&]() {
    json return_eQNFxNl=json({});
    return serialize_VkFragmentShadingRateNV(name.shadingRate);}();
result["members"]["combinerOps"]=[&]() {
    json return_vcbWAcG=json({});
    
        return_vcbWAcG["members"]={};
        for(int vcbWAcG=0; vcbWAcG < 2; vcbWAcG++){
            json temp;
            temp=[&]() {
    json return_ByzHuPb=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[vcbWAcG]);}();
            return_vcbWAcG["members"].push_back(temp);
        }
        return return_vcbWAcG;
        }();
return result;}

    VkPipelineFragmentShadingRateEnumStateCreateInfoNV deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(json &name){
        auto result=VkPipelineFragmentShadingRateEnumStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.shadingRateType=deserialize_VkFragmentShadingRateTypeNV(name["members"]["shadingRateType"]);}();
[&]() {
result.shadingRate=deserialize_VkFragmentShadingRateNV(name["members"]["shadingRate"]);}();
[&]() {

        for (int kmVifIi=0; kmVifIi < 2; kmVifIi++){
            [&]() {
result.combinerOps[kmVifIi]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][kmVifIi]);}();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureBuildSizesInfoKHR(VkAccelerationStructureBuildSizesInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rsZPVVD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["accelerationStructureSize"]=[&]() {
    json return_kJOovWS=json({});
    return_kJOovWS=[&]() {
    json return_ogGoDZJ=json({});
    return serialize_uint64_t(name.accelerationStructureSize);}();return return_kJOovWS;}();
result["members"]["updateScratchSize"]=[&]() {
    json return_yNFUWPp=json({});
    return_yNFUWPp=[&]() {
    json return_lkfFrrl=json({});
    return serialize_uint64_t(name.updateScratchSize);}();return return_yNFUWPp;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_VtlTJSd=json({});
    return_VtlTJSd=[&]() {
    json return_HpaDxdz=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_VtlTJSd;}();
return result;}

    VkAccelerationStructureBuildSizesInfoKHR deserialize_VkAccelerationStructureBuildSizesInfoKHR(json &name){
        auto result=VkAccelerationStructureBuildSizesInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
[&]() {
result.accelerationStructureSize=deserialize_uint64_t(name["members"]["accelerationStructureSize"]);}();}();
[&]() {
[&]() {
result.updateScratchSize=deserialize_uint64_t(name["members"]["updateScratchSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UpZPgIK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UHmLNOs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image2DViewOf3D"]=[&]() {
    json return_XxzrTia=json({});
    return_XxzrTia=[&]() {
    json return_gbkYpDj=json({});
    return serialize_uint32_t(name.image2DViewOf3D);}();return return_XxzrTia;}();
result["members"]["sampler2DViewOf3D"]=[&]() {
    json return_tqRayAH=json({});
    return_tqRayAH=[&]() {
    json return_vrDLeWV=json({});
    return serialize_uint32_t(name.sampler2DViewOf3D);}();return return_tqRayAH;}();
return result;}

    VkPhysicalDeviceImage2DViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceImage2DViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.image2DViewOf3D=deserialize_uint32_t(name["members"]["image2DViewOf3D"]);}();}();
[&]() {
[&]() {
result.sampler2DViewOf3D=deserialize_uint32_t(name["members"]["sampler2DViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_glMfyqx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UHmLNOs=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageSlicedViewOf3D"]=[&]() {
    json return_iazVKOz=json({});
    return_iazVKOz=[&]() {
    json return_Hlzfrjz=json({});
    return serialize_uint32_t(name.imageSlicedViewOf3D);}();return return_iazVKOz;}();
return result;}

    VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.imageSlicedViewOf3D=deserialize_uint32_t(name["members"]["imageSlicedViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xjIxhxR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentFeedbackLoopDynamicState"]=[&]() {
    json return_ACbrPLV=json({});
    return_ACbrPLV=[&]() {
    json return_ORoIYyS=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopDynamicState);}();return return_ACbrPLV;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.attachmentFeedbackLoopDynamicState=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QfVSfJr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_EiYXsXm=json({});
    return_EiYXsXm=[&]() {
    json return_PWrTums=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_EiYXsXm;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QfVSfJr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_EiYXsXm=json({});
    return_EiYXsXm=[&]() {
    json return_PWrTums=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_EiYXsXm;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(json &name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkMutableDescriptorTypeListEXT(VkMutableDescriptorTypeListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_azFhwLT=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_qYvXzDi=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_qYvXzDi["null"]=true;
            return return_qYvXzDi;
        }
        
        return_qYvXzDi["members"]={};
        for(int qYvXzDi=0; qYvXzDi < name.descriptorTypeCount; qYvXzDi++){
            json temp;
            temp=[&]() {
    json return_HKFoMpi=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[qYvXzDi]);}();
            return_qYvXzDi["members"].push_back(temp);
        }
        return return_qYvXzDi;
        }();
return result;}

    VkMutableDescriptorTypeListEXT deserialize_VkMutableDescriptorTypeListEXT(json &name){
        auto result=VkMutableDescriptorTypeListEXT();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_WTeSHxY;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_WTeSHxY=NULL;
        return;
        }
    temp_WTeSHxY=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int WiIaZVm=0; WiIaZVm < result.descriptorTypeCount; WiIaZVm++){
            [&]() {
temp_WTeSHxY[WiIaZVm]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][WiIaZVm]);}();;
        }
        }();result.pDescriptorTypes=temp_WTeSHxY;}();
return result;}

    json serialize_VkMutableDescriptorTypeListVALVE(VkMutableDescriptorTypeListVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_azFhwLT=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_qYvXzDi=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_qYvXzDi["null"]=true;
            return return_qYvXzDi;
        }
        
        return_qYvXzDi["members"]={};
        for(int qYvXzDi=0; qYvXzDi < name.descriptorTypeCount; qYvXzDi++){
            json temp;
            temp=[&]() {
    json return_HKFoMpi=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[qYvXzDi]);}();
            return_qYvXzDi["members"].push_back(temp);
        }
        return return_qYvXzDi;
        }();
return result;}

    VkMutableDescriptorTypeListVALVE deserialize_VkMutableDescriptorTypeListVALVE(json &name){
        auto result=VkMutableDescriptorTypeListVALVE();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_WTeSHxY;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_WTeSHxY=NULL;
        return;
        }
    temp_WTeSHxY=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int WiIaZVm=0; WiIaZVm < result.descriptorTypeCount; WiIaZVm++){
            [&]() {
temp_WTeSHxY[WiIaZVm]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][WiIaZVm]);}();;
        }
        }();result.pDescriptorTypes=temp_WTeSHxY;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoEXT(VkMutableDescriptorTypeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GBnkSYd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JUpBydP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_mDAyaUY=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_sLyVJqb=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_sLyVJqb["null"]=true;
            return return_sLyVJqb;
        }
        
        return_sLyVJqb["members"]={};
        for(int sLyVJqb=0; sLyVJqb < name.mutableDescriptorTypeListCount; sLyVJqb++){
            json temp;
            temp=[&]() {
    json return_VrEvfaD=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[sLyVJqb]);}();
            return_sLyVJqb["members"].push_back(temp);
        }
        return return_sLyVJqb;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoEXT deserialize_VkMutableDescriptorTypeCreateInfoEXT(json &name){
        auto result=VkMutableDescriptorTypeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AjlpQsS;[&]() {
temp_AjlpQsS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AjlpQsS;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_whtsZTR;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_whtsZTR=NULL;
        return;
        }
    temp_whtsZTR=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int OzxWdfH=0; OzxWdfH < result.mutableDescriptorTypeListCount; OzxWdfH++){
            [&]() {
temp_whtsZTR[OzxWdfH]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][OzxWdfH]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_whtsZTR;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoVALVE(VkMutableDescriptorTypeCreateInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GBnkSYd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JUpBydP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_mDAyaUY=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_sLyVJqb=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_sLyVJqb["null"]=true;
            return return_sLyVJqb;
        }
        
        return_sLyVJqb["members"]={};
        for(int sLyVJqb=0; sLyVJqb < name.mutableDescriptorTypeListCount; sLyVJqb++){
            json temp;
            temp=[&]() {
    json return_VrEvfaD=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[sLyVJqb]);}();
            return_sLyVJqb["members"].push_back(temp);
        }
        return return_sLyVJqb;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoVALVE deserialize_VkMutableDescriptorTypeCreateInfoVALVE(json &name){
        auto result=VkMutableDescriptorTypeCreateInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AjlpQsS;[&]() {
temp_AjlpQsS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AjlpQsS;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_whtsZTR;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_whtsZTR=NULL;
        return;
        }
    temp_whtsZTR=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int OzxWdfH=0; OzxWdfH < result.mutableDescriptorTypeListCount; OzxWdfH++){
            [&]() {
temp_whtsZTR[OzxWdfH]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][OzxWdfH]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_whtsZTR;}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(VkPhysicalDeviceDepthClipControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sHGmOkk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthClipControl"]=[&]() {
    json return_ZEOfzxG=json({});
    return_ZEOfzxG=[&]() {
    json return_OLKwyPJ=json({});
    return serialize_uint32_t(name.depthClipControl);}();return return_ZEOfzxG;}();
return result;}

    VkPhysicalDeviceDepthClipControlFeaturesEXT deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDepthClipControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.depthClipControl=deserialize_uint32_t(name["members"]["depthClipControl"]);}();}();
return result;}

    json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(VkPipelineViewportDepthClipControlCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AGDAvkS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["negativeOneToOne"]=[&]() {
    json return_uNwLLEj=json({});
    return_uNwLLEj=[&]() {
    json return_PtbZoFd=json({});
    return serialize_uint32_t(name.negativeOneToOne);}();return return_uNwLLEj;}();
return result;}

    VkPipelineViewportDepthClipControlCreateInfoEXT deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(json &name){
        auto result=VkPipelineViewportDepthClipControlCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
[&]() {
result.negativeOneToOne=deserialize_uint32_t(name["members"]["negativeOneToOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WskUZeg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vertexInputDynamicState"]=[&]() {
    json return_kmiqeiM=json({});
    return_kmiqeiM=[&]() {
    json return_NFySgyP=json({});
    return serialize_uint32_t(name.vertexInputDynamicState);}();return return_kmiqeiM;}();
return result;}

    VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.vertexInputDynamicState=deserialize_uint32_t(name["members"]["vertexInputDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tJUgzvP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["externalMemoryRDMA"]=[&]() {
    json return_JGJpjXc=json({});
    return_JGJpjXc=[&]() {
    json return_gcmrPyy=json({});
    return serialize_uint32_t(name.externalMemoryRDMA);}();return return_JGJpjXc;}();
return result;}

    VkPhysicalDeviceExternalMemoryRDMAFeaturesNV deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(json &name){
        auto result=VkPhysicalDeviceExternalMemoryRDMAFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.externalMemoryRDMA=deserialize_uint32_t(name["members"]["externalMemoryRDMA"]);}();}();
return result;}

    json serialize_VkVertexInputBindingDescription2EXT(VkVertexInputBindingDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KpEWmAV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["binding"]=[&]() {
    json return_jCUgARQ=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_GLlBMSP=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_NkJzkRQ=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
result["members"]["divisor"]=[&]() {
    json return_RGlGVHg=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDescription2EXT deserialize_VkVertexInputBindingDescription2EXT(json &name){
        auto result=VkVertexInputBindingDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription2EXT(VkVertexInputAttributeDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LipXueV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["location"]=[&]() {
    json return_xjWwsOO=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_jdsAUcd=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_goJZFNS=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_pQuxDcB=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription2EXT deserialize_VkVertexInputAttributeDescription2EXT(json &name){
        auto result=VkVertexInputAttributeDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(VkPhysicalDeviceColorWriteEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iWfaKSK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["colorWriteEnable"]=[&]() {
    json return_vzGZNpj=json({});
    return_vzGZNpj=[&]() {
    json return_RokCvRj=json({});
    return serialize_uint32_t(name.colorWriteEnable);}();return return_vzGZNpj;}();
return result;}

    VkPhysicalDeviceColorWriteEnableFeaturesEXT deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceColorWriteEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.colorWriteEnable=deserialize_uint32_t(name["members"]["colorWriteEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorWriteCreateInfoEXT(VkPipelineColorWriteCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vKeiixN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentCount"]=[&]() {
    json return_oYRYbKy=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pColorWriteEnables"]=[&]() {
    json return_bfjphWw=json({});
    
        if (name.pColorWriteEnables==NULL){
            return_bfjphWw["null"]=true;
            return return_bfjphWw;
        }
        
        return_bfjphWw["members"]={};
        for(int bfjphWw=0; bfjphWw < name.attachmentCount; bfjphWw++){
            json temp;
            temp=[&]() {
    json return_cOtVyGM=json({});
    return_cOtVyGM=[&]() {
    json return_swRXNyN=json({});
    return serialize_uint32_t(name.pColorWriteEnables[bfjphWw]);}();return return_cOtVyGM;}();
            return_bfjphWw["members"].push_back(temp);
        }
        return return_bfjphWw;
        }();
return result;}

    VkPipelineColorWriteCreateInfoEXT deserialize_VkPipelineColorWriteCreateInfoEXT(json &name){
        auto result=VkPipelineColorWriteCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkBool32* temp_LzaMZzB;[&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_LzaMZzB=NULL;
        return;
        }
    [&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_LzaMZzB=NULL;
        return;
        }
    temp_LzaMZzB=(uint32_t*)malloc(result.attachmentCount*sizeof(uint32_t));
        for (int bibOGfc=0; bibOGfc < result.attachmentCount; bibOGfc++){
            [&]() {
temp_LzaMZzB[bibOGfc]=deserialize_uint32_t(name["members"]["pColorWriteEnables"]["members"][bibOGfc]);}();;
        }
        }();}();result.pColorWriteEnables=temp_LzaMZzB;}();
return result;}

    json serialize_VkMemoryBarrier2(VkMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ogpaGul=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcStageMask"]=[&]() {
    json return_lybgZss=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CSybtQl=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_SHAnAdx=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_dKufgom=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2 deserialize_VkMemoryBarrier2(json &name){
        auto result=VkMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkMemoryBarrier2KHR(VkMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ogpaGul=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcStageMask"]=[&]() {
    json return_lybgZss=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CSybtQl=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_SHAnAdx=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_dKufgom=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2KHR deserialize_VkMemoryBarrier2KHR(json &name){
        auto result=VkMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2(VkImageMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KNCIZTZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcStageMask"]=[&]() {
    json return_lybgZss=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CSybtQl=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_SHAnAdx=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zBFWFbh=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_FHCcNNl=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_xKTGoiZ=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_jcunvIw=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_QpJlHAk=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_pLzjJVp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_FBsDaeg=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2 deserialize_VkImageMemoryBarrier2(json &name){
        auto result=VkImageMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2KHR(VkImageMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KNCIZTZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcStageMask"]=[&]() {
    json return_lybgZss=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CSybtQl=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_SHAnAdx=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zBFWFbh=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_FHCcNNl=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_xKTGoiZ=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_jcunvIw=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_QpJlHAk=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_pLzjJVp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_FBsDaeg=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2KHR deserialize_VkImageMemoryBarrier2KHR(json &name){
        auto result=VkImageMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier2(VkBufferMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eumPWNM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcStageMask"]=[&]() {
    json return_lybgZss=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CSybtQl=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_SHAnAdx=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zBFWFbh=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_jcunvIw=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_QpJlHAk=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_dJNuXzT=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_FpqjDjf=json({});
    return_FpqjDjf=[&]() {
    json return_LXoqiWC=json({});
    return serialize_uint64_t(name.offset);}();return return_FpqjDjf;}();
result["members"]["size"]=[&]() {
    json return_WYhKMCM=json({});
    return_WYhKMCM=[&]() {
    json return_NYAROgI=json({});
    return serialize_uint64_t(name.size);}();return return_WYhKMCM;}();
return result;}

    VkBufferMemoryBarrier2 deserialize_VkBufferMemoryBarrier2(json &name){
        auto result=VkBufferMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferMemoryBarrier2KHR(VkBufferMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eumPWNM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["srcStageMask"]=[&]() {
    json return_lybgZss=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CSybtQl=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_SHAnAdx=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zBFWFbh=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_jcunvIw=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_QpJlHAk=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_dJNuXzT=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_FpqjDjf=json({});
    return_FpqjDjf=[&]() {
    json return_LXoqiWC=json({});
    return serialize_uint64_t(name.offset);}();return return_FpqjDjf;}();
result["members"]["size"]=[&]() {
    json return_WYhKMCM=json({});
    return_WYhKMCM=[&]() {
    json return_NYAROgI=json({});
    return serialize_uint64_t(name.size);}();return return_WYhKMCM;}();
return result;}

    VkBufferMemoryBarrier2KHR deserialize_VkBufferMemoryBarrier2KHR(json &name){
        auto result=VkBufferMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkDependencyInfo(VkDependencyInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ybowYsA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNgMvJi=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_txpjOxf=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_eBYenXF=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_CsKfkKN=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_CsKfkKN["null"]=true;
            return return_CsKfkKN;
        }
        
        return_CsKfkKN["members"]={};
        for(int CsKfkKN=0; CsKfkKN < name.memoryBarrierCount; CsKfkKN++){
            json temp;
            temp=[&]() {
    json return_OwdGOSv=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[CsKfkKN]);}();
            return_CsKfkKN["members"].push_back(temp);
        }
        return return_CsKfkKN;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_VOhICdk=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_mVdYxti=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_mVdYxti["null"]=true;
            return return_mVdYxti;
        }
        
        return_mVdYxti["members"]={};
        for(int mVdYxti=0; mVdYxti < name.bufferMemoryBarrierCount; mVdYxti++){
            json temp;
            temp=[&]() {
    json return_kvGZebX=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[mVdYxti]);}();
            return_mVdYxti["members"].push_back(temp);
        }
        return return_mVdYxti;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_IxegsnN=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_hbsDdKe=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_hbsDdKe["null"]=true;
            return return_hbsDdKe;
        }
        
        return_hbsDdKe["members"]={};
        for(int hbsDdKe=0; hbsDdKe < name.imageMemoryBarrierCount; hbsDdKe++){
            json temp;
            temp=[&]() {
    json return_bXYMTSC=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[hbsDdKe]);}();
            return_hbsDdKe["members"].push_back(temp);
        }
        return return_hbsDdKe;
        }();
return result;}

    VkDependencyInfo deserialize_VkDependencyInfo(json &name){
        auto result=VkDependencyInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_OfQjHFU;[&]() {
temp_OfQjHFU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_OfQjHFU;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_imIPWxV;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_imIPWxV=NULL;
        return;
        }
    temp_imIPWxV=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int IKefBQr=0; IKefBQr < result.memoryBarrierCount; IKefBQr++){
            [&]() {
temp_imIPWxV[IKefBQr]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][IKefBQr]);}();;
        }
        }();result.pMemoryBarriers=temp_imIPWxV;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_juMiHzn;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_juMiHzn=NULL;
        return;
        }
    temp_juMiHzn=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int bXKTQAW=0; bXKTQAW < result.bufferMemoryBarrierCount; bXKTQAW++){
            [&]() {
temp_juMiHzn[bXKTQAW]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][bXKTQAW]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_juMiHzn;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_bsBSNQZ;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_bsBSNQZ=NULL;
        return;
        }
    temp_bsBSNQZ=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int pnZHUBC=0; pnZHUBC < result.imageMemoryBarrierCount; pnZHUBC++){
            [&]() {
temp_bsBSNQZ[pnZHUBC]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][pnZHUBC]);}();;
        }
        }();result.pImageMemoryBarriers=temp_bsBSNQZ;}();
return result;}

    json serialize_VkDependencyInfoKHR(VkDependencyInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ybowYsA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNgMvJi=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_txpjOxf=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_eBYenXF=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_CsKfkKN=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_CsKfkKN["null"]=true;
            return return_CsKfkKN;
        }
        
        return_CsKfkKN["members"]={};
        for(int CsKfkKN=0; CsKfkKN < name.memoryBarrierCount; CsKfkKN++){
            json temp;
            temp=[&]() {
    json return_OwdGOSv=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[CsKfkKN]);}();
            return_CsKfkKN["members"].push_back(temp);
        }
        return return_CsKfkKN;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_VOhICdk=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_mVdYxti=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_mVdYxti["null"]=true;
            return return_mVdYxti;
        }
        
        return_mVdYxti["members"]={};
        for(int mVdYxti=0; mVdYxti < name.bufferMemoryBarrierCount; mVdYxti++){
            json temp;
            temp=[&]() {
    json return_kvGZebX=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[mVdYxti]);}();
            return_mVdYxti["members"].push_back(temp);
        }
        return return_mVdYxti;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_IxegsnN=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_hbsDdKe=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_hbsDdKe["null"]=true;
            return return_hbsDdKe;
        }
        
        return_hbsDdKe["members"]={};
        for(int hbsDdKe=0; hbsDdKe < name.imageMemoryBarrierCount; hbsDdKe++){
            json temp;
            temp=[&]() {
    json return_bXYMTSC=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[hbsDdKe]);}();
            return_hbsDdKe["members"].push_back(temp);
        }
        return return_hbsDdKe;
        }();
return result;}

    VkDependencyInfoKHR deserialize_VkDependencyInfoKHR(json &name){
        auto result=VkDependencyInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_OfQjHFU;[&]() {
temp_OfQjHFU=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_OfQjHFU;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_imIPWxV;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_imIPWxV=NULL;
        return;
        }
    temp_imIPWxV=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int IKefBQr=0; IKefBQr < result.memoryBarrierCount; IKefBQr++){
            [&]() {
temp_imIPWxV[IKefBQr]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][IKefBQr]);}();;
        }
        }();result.pMemoryBarriers=temp_imIPWxV;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_juMiHzn;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_juMiHzn=NULL;
        return;
        }
    temp_juMiHzn=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int bXKTQAW=0; bXKTQAW < result.bufferMemoryBarrierCount; bXKTQAW++){
            [&]() {
temp_juMiHzn[bXKTQAW]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][bXKTQAW]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_juMiHzn;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_bsBSNQZ;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_bsBSNQZ=NULL;
        return;
        }
    temp_bsBSNQZ=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int pnZHUBC=0; pnZHUBC < result.imageMemoryBarrierCount; pnZHUBC++){
            [&]() {
temp_bsBSNQZ[pnZHUBC]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][pnZHUBC]);}();;
        }
        }();result.pImageMemoryBarriers=temp_bsBSNQZ;}();
return result;}

    json serialize_VkSemaphoreSubmitInfo(VkSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eataaUl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYLChnf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphore"]=[&]() {
    json return_tQPwKpo=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_VqDDrvG=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_KyrNEhG=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_FNBtWIK=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfo deserialize_VkSemaphoreSubmitInfo(json &name){
        auto result=VkSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KzkfhPw;[&]() {
temp_KzkfhPw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KzkfhPw;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkSemaphoreSubmitInfoKHR(VkSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eataaUl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYLChnf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["semaphore"]=[&]() {
    json return_tQPwKpo=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_VqDDrvG=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_KyrNEhG=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_FNBtWIK=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfoKHR deserialize_VkSemaphoreSubmitInfoKHR(json &name){
        auto result=VkSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KzkfhPw;[&]() {
temp_KzkfhPw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KzkfhPw;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfo(VkCommandBufferSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YSIRfTP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYLChnf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["commandBuffer"]=[&]() {
    json return_YqImDaw=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_FMiKNvr=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfo deserialize_VkCommandBufferSubmitInfo(json &name){
        auto result=VkCommandBufferSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KzkfhPw;[&]() {
temp_KzkfhPw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KzkfhPw;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfoKHR(VkCommandBufferSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YSIRfTP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYLChnf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["commandBuffer"]=[&]() {
    json return_YqImDaw=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_FMiKNvr=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfoKHR deserialize_VkCommandBufferSubmitInfoKHR(json &name){
        auto result=VkCommandBufferSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KzkfhPw;[&]() {
temp_KzkfhPw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KzkfhPw;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkSubmitInfo2(VkSubmitInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ykGouKz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYLChnf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_gQczCbt=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_EgFQlkS=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_wbdsYZU=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_wbdsYZU["null"]=true;
            return return_wbdsYZU;
        }
        
        return_wbdsYZU["members"]={};
        for(int wbdsYZU=0; wbdsYZU < name.waitSemaphoreInfoCount; wbdsYZU++){
            json temp;
            temp=[&]() {
    json return_ypiorVp=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[wbdsYZU]);}();
            return_wbdsYZU["members"].push_back(temp);
        }
        return return_wbdsYZU;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_rIMnFun=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_IGoNqNZ=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_IGoNqNZ["null"]=true;
            return return_IGoNqNZ;
        }
        
        return_IGoNqNZ["members"]={};
        for(int IGoNqNZ=0; IGoNqNZ < name.commandBufferInfoCount; IGoNqNZ++){
            json temp;
            temp=[&]() {
    json return_xdsIAuK=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[IGoNqNZ]);}();
            return_IGoNqNZ["members"].push_back(temp);
        }
        return return_IGoNqNZ;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_hicytzm=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_uLhLnrh=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_uLhLnrh["null"]=true;
            return return_uLhLnrh;
        }
        
        return_uLhLnrh["members"]={};
        for(int uLhLnrh=0; uLhLnrh < name.signalSemaphoreInfoCount; uLhLnrh++){
            json temp;
            temp=[&]() {
    json return_JtnVDGj=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[uLhLnrh]);}();
            return_uLhLnrh["members"].push_back(temp);
        }
        return return_uLhLnrh;
        }();
return result;}

    VkSubmitInfo2 deserialize_VkSubmitInfo2(json &name){
        auto result=VkSubmitInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KzkfhPw;[&]() {
temp_KzkfhPw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KzkfhPw;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_pAbcZNw;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_pAbcZNw=NULL;
        return;
        }
    temp_pAbcZNw=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int Ukkfxhd=0; Ukkfxhd < result.waitSemaphoreInfoCount; Ukkfxhd++){
            [&]() {
temp_pAbcZNw[Ukkfxhd]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][Ukkfxhd]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_pAbcZNw;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_jPIEblo;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_jPIEblo=NULL;
        return;
        }
    temp_jPIEblo=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int HSKZmoa=0; HSKZmoa < result.commandBufferInfoCount; HSKZmoa++){
            [&]() {
temp_jPIEblo[HSKZmoa]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][HSKZmoa]);}();;
        }
        }();result.pCommandBufferInfos=temp_jPIEblo;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_ehHfglt;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_ehHfglt=NULL;
        return;
        }
    temp_ehHfglt=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int lssSJsT=0; lssSJsT < result.signalSemaphoreInfoCount; lssSJsT++){
            [&]() {
temp_ehHfglt[lssSJsT]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][lssSJsT]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_ehHfglt;}();
return result;}

    json serialize_VkSubmitInfo2KHR(VkSubmitInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ykGouKz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYLChnf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_gQczCbt=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_EgFQlkS=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_wbdsYZU=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_wbdsYZU["null"]=true;
            return return_wbdsYZU;
        }
        
        return_wbdsYZU["members"]={};
        for(int wbdsYZU=0; wbdsYZU < name.waitSemaphoreInfoCount; wbdsYZU++){
            json temp;
            temp=[&]() {
    json return_ypiorVp=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[wbdsYZU]);}();
            return_wbdsYZU["members"].push_back(temp);
        }
        return return_wbdsYZU;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_rIMnFun=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_IGoNqNZ=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_IGoNqNZ["null"]=true;
            return return_IGoNqNZ;
        }
        
        return_IGoNqNZ["members"]={};
        for(int IGoNqNZ=0; IGoNqNZ < name.commandBufferInfoCount; IGoNqNZ++){
            json temp;
            temp=[&]() {
    json return_xdsIAuK=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[IGoNqNZ]);}();
            return_IGoNqNZ["members"].push_back(temp);
        }
        return return_IGoNqNZ;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_hicytzm=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_uLhLnrh=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_uLhLnrh["null"]=true;
            return return_uLhLnrh;
        }
        
        return_uLhLnrh["members"]={};
        for(int uLhLnrh=0; uLhLnrh < name.signalSemaphoreInfoCount; uLhLnrh++){
            json temp;
            temp=[&]() {
    json return_JtnVDGj=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[uLhLnrh]);}();
            return_uLhLnrh["members"].push_back(temp);
        }
        return return_uLhLnrh;
        }();
return result;}

    VkSubmitInfo2KHR deserialize_VkSubmitInfo2KHR(json &name){
        auto result=VkSubmitInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KzkfhPw;[&]() {
temp_KzkfhPw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KzkfhPw;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_pAbcZNw;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_pAbcZNw=NULL;
        return;
        }
    temp_pAbcZNw=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int Ukkfxhd=0; Ukkfxhd < result.waitSemaphoreInfoCount; Ukkfxhd++){
            [&]() {
temp_pAbcZNw[Ukkfxhd]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][Ukkfxhd]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_pAbcZNw;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_jPIEblo;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_jPIEblo=NULL;
        return;
        }
    temp_jPIEblo=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int HSKZmoa=0; HSKZmoa < result.commandBufferInfoCount; HSKZmoa++){
            [&]() {
temp_jPIEblo[HSKZmoa]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][HSKZmoa]);}();;
        }
        }();result.pCommandBufferInfos=temp_jPIEblo;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_ehHfglt;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_ehHfglt=NULL;
        return;
        }
    temp_ehHfglt=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int lssSJsT=0; lssSJsT < result.signalSemaphoreInfoCount; lssSJsT++){
            [&]() {
temp_ehHfglt[lssSJsT]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][lssSJsT]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_ehHfglt;}();
return result;}

    json serialize_VkQueueFamilyCheckpointProperties2NV(VkQueueFamilyCheckpointProperties2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qKQwVvb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RROZwuA=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_AxScInu=json({});
    return serialize_VkPipelineStageFlags2(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointProperties2NV deserialize_VkQueueFamilyCheckpointProperties2NV(json &name){
        auto result=VkQueueFamilyCheckpointProperties2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags2(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointData2NV(VkCheckpointData2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JynTLIj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stage"]=[&]() {
    json return_EFJdKDS=json({});
    return serialize_VkPipelineStageFlags2(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_KBhnhmI=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_KBhnhmI["null"]=true;
            return return_KBhnhmI;
        }
        return_KBhnhmI=[&]() {
    json return_JTJuUlB=json({});
    
        if (((char*)(name.pCheckpointMarker))==NULL){
            return_JTJuUlB["null"]=true;
            return return_JTJuUlB;
        }
        
        return_JTJuUlB["members"]={};
        for(int JTJuUlB=0; JTJuUlB < strlen(((char*)(name.pCheckpointMarker)))+1; JTJuUlB++){
            json temp;
            temp=[&]() {
    json return_JtfNIBD=json({});
    return serialize_char(((char*)(name.pCheckpointMarker))[JTJuUlB]);}();
            return_JTJuUlB["members"].push_back(temp);
        }
        return return_JTJuUlB;
        }();return return_KBhnhmI;}();
return result;}

    VkCheckpointData2NV deserialize_VkCheckpointData2NV(json &name){
        auto result=VkCheckpointData2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.stage=deserialize_VkPipelineStageFlags2(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        return;
        }
    char* temp_MKmmwtB;[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        temp_MKmmwtB=NULL;
        return;
        }
    temp_MKmmwtB=(char*)malloc(name["members"]["pCheckpointMarker"]["members"].size()*sizeof(char));
        for (int kANtfLT=0; kANtfLT < name["members"]["pCheckpointMarker"]["members"].size(); kANtfLT++){
            [&]() {
temp_MKmmwtB[kANtfLT]=deserialize_char(name["members"]["pCheckpointMarker"]["members"][kANtfLT]);}();;
        }
        }();result.pCheckpointMarker=(void*)temp_MKmmwtB;
}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2Features(VkPhysicalDeviceSynchronization2Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eabrWmG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["synchronization2"]=[&]() {
    json return_SHyXnKT=json({});
    return_SHyXnKT=[&]() {
    json return_ndIycyl=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_SHyXnKT;}();
return result;}

    VkPhysicalDeviceSynchronization2Features deserialize_VkPhysicalDeviceSynchronization2Features(json &name){
        auto result=VkPhysicalDeviceSynchronization2Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(VkPhysicalDeviceSynchronization2FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eabrWmG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["synchronization2"]=[&]() {
    json return_SHyXnKT=json({});
    return_SHyXnKT=[&]() {
    json return_ndIycyl=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_SHyXnKT;}();
return result;}

    VkPhysicalDeviceSynchronization2FeaturesKHR deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(json &name){
        auto result=VkPhysicalDeviceSynchronization2FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(VkPhysicalDeviceHostImageCopyFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RNUCKUM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["hostImageCopy"]=[&]() {
    json return_npIUVms=json({});
    return_npIUVms=[&]() {
    json return_QFgeQDo=json({});
    return serialize_uint32_t(name.hostImageCopy);}();return return_npIUVms;}();
return result;}

    VkPhysicalDeviceHostImageCopyFeaturesEXT deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceHostImageCopyFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.hostImageCopy=deserialize_uint32_t(name["members"]["hostImageCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(VkPhysicalDeviceHostImageCopyPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kDAzvJU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuzvOmI=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["copySrcLayoutCount"]=[&]() {
    json return_eSIWgOs=json({});
    return serialize_uint32_t(name.copySrcLayoutCount);}();
result["members"]["pCopySrcLayouts"]=[&]() {
    json return_sriTtuY=json({});
    
        if (name.pCopySrcLayouts==NULL){
            return_sriTtuY["null"]=true;
            return return_sriTtuY;
        }
        
        return_sriTtuY["members"]={};
        for(int sriTtuY=0; sriTtuY < name.copySrcLayoutCount; sriTtuY++){
            json temp;
            temp=[&]() {
    json return_uPHMyAN=json({});
    return serialize_VkImageLayout(name.pCopySrcLayouts[sriTtuY]);}();
            return_sriTtuY["members"].push_back(temp);
        }
        return return_sriTtuY;
        }();
result["members"]["copyDstLayoutCount"]=[&]() {
    json return_nYLSrbF=json({});
    return serialize_uint32_t(name.copyDstLayoutCount);}();
result["members"]["pCopyDstLayouts"]=[&]() {
    json return_NOnCRlK=json({});
    
        if (name.pCopyDstLayouts==NULL){
            return_NOnCRlK["null"]=true;
            return return_NOnCRlK;
        }
        
        return_NOnCRlK["members"]={};
        for(int NOnCRlK=0; NOnCRlK < name.copyDstLayoutCount; NOnCRlK++){
            json temp;
            temp=[&]() {
    json return_sHSqgox=json({});
    return serialize_VkImageLayout(name.pCopyDstLayouts[NOnCRlK]);}();
            return_NOnCRlK["members"].push_back(temp);
        }
        return return_NOnCRlK;
        }();
result["members"]["optimalTilingLayoutUUID"]=[&]() {
    json return_foyBLnA=json({});
    
        return_foyBLnA["members"]={};
        for(int foyBLnA=0; foyBLnA < VK_UUID_SIZE; foyBLnA++){
            json temp;
            temp=[&]() {
    json return_jidILbN=json({});
    return serialize_uint8_t(name.optimalTilingLayoutUUID[foyBLnA]);}();
            return_foyBLnA["members"].push_back(temp);
        }
        return return_foyBLnA;
        }();
result["members"]["identicalMemoryTypeRequirements"]=[&]() {
    json return_TqvlGLM=json({});
    return_TqvlGLM=[&]() {
    json return_vpzanAQ=json({});
    return serialize_uint32_t(name.identicalMemoryTypeRequirements);}();return return_TqvlGLM;}();
return result;}

    VkPhysicalDeviceHostImageCopyPropertiesEXT deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceHostImageCopyPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.copySrcLayoutCount=deserialize_uint32_t(name["members"]["copySrcLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopySrcLayouts"].contains("null")){
        result.pCopySrcLayouts=NULL;
        return;
        }
    result.pCopySrcLayouts=(VkImageLayout*)malloc(result.copySrcLayoutCount*sizeof(VkImageLayout));
        for (int jKIbeDF=0; jKIbeDF < result.copySrcLayoutCount; jKIbeDF++){
            [&]() {
result.pCopySrcLayouts[jKIbeDF]=deserialize_VkImageLayout(name["members"]["pCopySrcLayouts"]["members"][jKIbeDF]);}();;
        }
        }();
[&]() {
result.copyDstLayoutCount=deserialize_uint32_t(name["members"]["copyDstLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopyDstLayouts"].contains("null")){
        result.pCopyDstLayouts=NULL;
        return;
        }
    result.pCopyDstLayouts=(VkImageLayout*)malloc(result.copyDstLayoutCount*sizeof(VkImageLayout));
        for (int yzcQRTb=0; yzcQRTb < result.copyDstLayoutCount; yzcQRTb++){
            [&]() {
result.pCopyDstLayouts[yzcQRTb]=deserialize_VkImageLayout(name["members"]["pCopyDstLayouts"]["members"][yzcQRTb]);}();;
        }
        }();
[&]() {

        for (int wWNSlaj=0; wWNSlaj < VK_UUID_SIZE; wWNSlaj++){
            [&]() {
result.optimalTilingLayoutUUID[wWNSlaj]=deserialize_uint8_t(name["members"]["optimalTilingLayoutUUID"]["members"][wWNSlaj]);}();;
        }
        }();
[&]() {
[&]() {
result.identicalMemoryTypeRequirements=deserialize_uint32_t(name["members"]["identicalMemoryTypeRequirements"]);}();}();
return result;}

    json serialize_VkMemoryToImageCopyEXT(VkMemoryToImageCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AbAgjnV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pHostPointer"]=[&]() {
    json return_XWJCdrF=json({});
    
        if (name.pHostPointer==NULL){
            return_XWJCdrF["null"]=true;
            return return_XWJCdrF;
        }
        return_XWJCdrF=[&]() {
    json return_sDvJFcf=json({});
    
        if (((char*)(name.pHostPointer))==NULL){
            return_sDvJFcf["null"]=true;
            return return_sDvJFcf;
        }
        
        return_sDvJFcf["members"]={};
        for(int sDvJFcf=0; sDvJFcf < strlen(((char*)(name.pHostPointer)))+1; sDvJFcf++){
            json temp;
            temp=[&]() {
    json return_LrhlxUx=json({});
    return serialize_char(((char*)(name.pHostPointer))[sDvJFcf]);}();
            return_sDvJFcf["members"].push_back(temp);
        }
        return return_sDvJFcf;
        }();return return_XWJCdrF;}();
result["members"]["memoryRowLength"]=[&]() {
    json return_JRLCeiq=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_PDhnoht=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_qELstlZ=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_fdaAxwi=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_Rkuluwf=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkMemoryToImageCopyEXT deserialize_VkMemoryToImageCopyEXT(json &name){
        auto result=VkMemoryToImageCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {
void* temp_dbbxIie;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_dbbxIie=NULL;
        return;
        }
    char* temp_oHabNxE;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_oHabNxE=NULL;
        return;
        }
    temp_oHabNxE=(char*)malloc(name["members"]["pHostPointer"]["members"].size()*sizeof(char));
        for (int AiFkSNM=0; AiFkSNM < name["members"]["pHostPointer"]["members"].size(); AiFkSNM++){
            [&]() {
temp_oHabNxE[AiFkSNM]=deserialize_char(name["members"]["pHostPointer"]["members"][AiFkSNM]);}();;
        }
        }();temp_dbbxIie=(void*)temp_oHabNxE;
}();result.pHostPointer=temp_dbbxIie;}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageToMemoryCopyEXT(VkImageToMemoryCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NrjDNGx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pHostPointer"]=[&]() {
    json return_NpGnkXW=json({});
    
        if (name.pHostPointer==NULL){
            return_NpGnkXW["null"]=true;
            return return_NpGnkXW;
        }
        return_NpGnkXW=[&]() {
    json return_eoIErQU=json({});
    
        if (((char*)(name.pHostPointer))==NULL){
            return_eoIErQU["null"]=true;
            return return_eoIErQU;
        }
        
        return_eoIErQU["members"]={};
        for(int eoIErQU=0; eoIErQU < strlen(((char*)(name.pHostPointer)))+1; eoIErQU++){
            json temp;
            temp=[&]() {
    json return_GJXHLDo=json({});
    return serialize_char(((char*)(name.pHostPointer))[eoIErQU]);}();
            return_eoIErQU["members"].push_back(temp);
        }
        return return_eoIErQU;
        }();return return_NpGnkXW;}();
result["members"]["memoryRowLength"]=[&]() {
    json return_JRLCeiq=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_PDhnoht=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_qELstlZ=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_fdaAxwi=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_Rkuluwf=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkImageToMemoryCopyEXT deserialize_VkImageToMemoryCopyEXT(json &name){
        auto result=VkImageToMemoryCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        return;
        }
    char* temp_AeYiyiv;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_AeYiyiv=NULL;
        return;
        }
    temp_AeYiyiv=(char*)malloc(name["members"]["pHostPointer"]["members"].size()*sizeof(char));
        for (int EoAKYRt=0; EoAKYRt < name["members"]["pHostPointer"]["members"].size(); EoAKYRt++){
            [&]() {
temp_AeYiyiv[EoAKYRt]=deserialize_char(name["members"]["pHostPointer"]["members"][EoAKYRt]);}();;
        }
        }();result.pHostPointer=(void*)temp_AeYiyiv;
}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryToImageInfoEXT(VkCopyMemoryToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YWJgbAP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_fWCIypp=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["dstImage"]=[&]() {
    json return_PaFyVhC=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_LxieSmI=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_vrbXWfR=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_EZQOPLf=json({});
    
        if (name.pRegions==NULL){
            return_EZQOPLf["null"]=true;
            return return_EZQOPLf;
        }
        
        return_EZQOPLf["members"]={};
        for(int EZQOPLf=0; EZQOPLf < name.regionCount; EZQOPLf++){
            json temp;
            temp=[&]() {
    json return_gSOkLwx=json({});
    return serialize_VkMemoryToImageCopyEXT(name.pRegions[EZQOPLf]);}();
            return_EZQOPLf["members"].push_back(temp);
        }
        return return_EZQOPLf;
        }();
return result;}

    VkCopyMemoryToImageInfoEXT deserialize_VkCopyMemoryToImageInfoEXT(json &name){
        auto result=VkCopyMemoryToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkMemoryToImageCopyEXT* temp_wxudvPo;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_wxudvPo=NULL;
        return;
        }
    temp_wxudvPo=(VkMemoryToImageCopyEXT*)malloc(result.regionCount*sizeof(VkMemoryToImageCopyEXT));
        for (int mBXvneK=0; mBXvneK < result.regionCount; mBXvneK++){
            [&]() {
temp_wxudvPo[mBXvneK]=deserialize_VkMemoryToImageCopyEXT(name["members"]["pRegions"]["members"][mBXvneK]);}();;
        }
        }();result.pRegions=temp_wxudvPo;}();
return result;}

    json serialize_VkCopyImageToMemoryInfoEXT(VkCopyImageToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZKPNCbE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_fWCIypp=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_xQaGXaH=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_FDKqjjl=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_vrbXWfR=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_vVUSNfk=json({});
    
        if (name.pRegions==NULL){
            return_vVUSNfk["null"]=true;
            return return_vVUSNfk;
        }
        
        return_vVUSNfk["members"]={};
        for(int vVUSNfk=0; vVUSNfk < name.regionCount; vVUSNfk++){
            json temp;
            temp=[&]() {
    json return_mCmyvuK=json({});
    return serialize_VkImageToMemoryCopyEXT(name.pRegions[vVUSNfk]);}();
            return_vVUSNfk["members"].push_back(temp);
        }
        return return_vVUSNfk;
        }();
return result;}

    VkCopyImageToMemoryInfoEXT deserialize_VkCopyImageToMemoryInfoEXT(json &name){
        auto result=VkCopyImageToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageToMemoryCopyEXT* temp_kuMlVuL;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_kuMlVuL=NULL;
        return;
        }
    temp_kuMlVuL=(VkImageToMemoryCopyEXT*)malloc(result.regionCount*sizeof(VkImageToMemoryCopyEXT));
        for (int Ymzukty=0; Ymzukty < result.regionCount; Ymzukty++){
            [&]() {
temp_kuMlVuL[Ymzukty]=deserialize_VkImageToMemoryCopyEXT(name["members"]["pRegions"]["members"][Ymzukty]);}();;
        }
        }();result.pRegions=temp_kuMlVuL;}();
return result;}

    json serialize_VkCopyImageToImageInfoEXT(VkCopyImageToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xfdSdzg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_fWCIypp=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_xQaGXaH=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_FDKqjjl=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_PaFyVhC=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_LxieSmI=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_vrbXWfR=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_gJOZmln=json({});
    
        if (name.pRegions==NULL){
            return_gJOZmln["null"]=true;
            return return_gJOZmln;
        }
        
        return_gJOZmln["members"]={};
        for(int gJOZmln=0; gJOZmln < name.regionCount; gJOZmln++){
            json temp;
            temp=[&]() {
    json return_qxtkyIf=json({});
    return serialize_VkImageCopy2(name.pRegions[gJOZmln]);}();
            return_gJOZmln["members"].push_back(temp);
        }
        return return_gJOZmln;
        }();
return result;}

    VkCopyImageToImageInfoEXT deserialize_VkCopyImageToImageInfoEXT(json &name){
        auto result=VkCopyImageToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_UZKdFuY;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_UZKdFuY=NULL;
        return;
        }
    temp_UZKdFuY=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int NXeOumX=0; NXeOumX < result.regionCount; NXeOumX++){
            [&]() {
temp_UZKdFuY[NXeOumX]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][NXeOumX]);}();;
        }
        }();result.pRegions=temp_UZKdFuY;}();
return result;}

    json serialize_VkHostImageLayoutTransitionInfoEXT(VkHostImageLayoutTransitionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PZiSAVa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ezEOKPE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_gPNEfRm=json({});
    return serialize_VkImage(name.image);}();
result["members"]["oldLayout"]=[&]() {
    json return_ZkSUjEE=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_LHqNcre=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["subresourceRange"]=[&]() {
    json return_NmxYtmw=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkHostImageLayoutTransitionInfoEXT deserialize_VkHostImageLayoutTransitionInfoEXT(json &name){
        auto result=VkHostImageLayoutTransitionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_YdXSoFF;[&]() {
temp_YdXSoFF=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_YdXSoFF;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkSubresourceHostMemcpySizeEXT(VkSubresourceHostMemcpySizeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sNAbfKI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["size"]=[&]() {
    json return_kZOaYOD=json({});
    return_kZOaYOD=[&]() {
    json return_ynVVanW=json({});
    return serialize_uint64_t(name.size);}();return return_kZOaYOD;}();
return result;}

    VkSubresourceHostMemcpySizeEXT deserialize_VkSubresourceHostMemcpySizeEXT(json &name){
        auto result=VkSubresourceHostMemcpySizeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkHostImageCopyDevicePerformanceQueryEXT(VkHostImageCopyDevicePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fUCHtAK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["optimalDeviceAccess"]=[&]() {
    json return_tOXFuru=json({});
    return_tOXFuru=[&]() {
    json return_gyLsbvq=json({});
    return serialize_uint32_t(name.optimalDeviceAccess);}();return return_tOXFuru;}();
result["members"]["identicalMemoryLayout"]=[&]() {
    json return_TKzpSfl=json({});
    return_TKzpSfl=[&]() {
    json return_tdAdhmB=json({});
    return serialize_uint32_t(name.identicalMemoryLayout);}();return return_TKzpSfl;}();
return result;}

    VkHostImageCopyDevicePerformanceQueryEXT deserialize_VkHostImageCopyDevicePerformanceQueryEXT(json &name){
        auto result=VkHostImageCopyDevicePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.optimalDeviceAccess=deserialize_uint32_t(name["members"]["optimalDeviceAccess"]);}();}();
[&]() {
[&]() {
result.identicalMemoryLayout=deserialize_uint32_t(name["members"]["identicalMemoryLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KYrNuTp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["primitivesGeneratedQuery"]=[&]() {
    json return_YXtmTVc=json({});
    return_YXtmTVc=[&]() {
    json return_pgnoIYZ=json({});
    return serialize_uint32_t(name.primitivesGeneratedQuery);}();return return_YXtmTVc;}();
result["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]=[&]() {
    json return_yqLbymR=json({});
    return_yqLbymR=[&]() {
    json return_ToNpRlF=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithRasterizerDiscard);}();return return_yqLbymR;}();
result["members"]["primitivesGeneratedQueryWithNonZeroStreams"]=[&]() {
    json return_wKmclYy=json({});
    return_wKmclYy=[&]() {
    json return_EpOPEsl=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithNonZeroStreams);}();return return_wKmclYy;}();
return result;}

    VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.primitivesGeneratedQuery=deserialize_uint32_t(name["members"]["primitivesGeneratedQuery"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithRasterizerDiscard=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithNonZeroStreams=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithNonZeroStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(VkPhysicalDeviceLegacyDitheringFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JJePyQL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCWmZRO=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["legacyDithering"]=[&]() {
    json return_ZfWrWjz=json({});
    return_ZfWrWjz=[&]() {
    json return_VMiNWqU=json({});
    return serialize_uint32_t(name.legacyDithering);}();return return_ZfWrWjz;}();
return result;}

    VkPhysicalDeviceLegacyDitheringFeaturesEXT deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceLegacyDitheringFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.legacyDithering=deserialize_uint32_t(name["members"]["legacyDithering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zSQnNxi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEEdpgl=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["multisampledRenderToSingleSampled"]=[&]() {
    json return_lAIMghn=json({});
    return_lAIMghn=[&]() {
    json return_MdByCjl=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampled);}();return return_lAIMghn;}();
return result;}

    VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampled=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampled"]);}();}();
return result;}

    json serialize_VkSubpassResolvePerformanceQueryEXT(VkSubpassResolvePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yDUPjGn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["optimal"]=[&]() {
    json return_RXjlzJH=json({});
    return_RXjlzJH=[&]() {
    json return_phYpwTM=json({});
    return serialize_uint32_t(name.optimal);}();return return_RXjlzJH;}();
return result;}

    VkSubpassResolvePerformanceQueryEXT deserialize_VkSubpassResolvePerformanceQueryEXT(json &name){
        auto result=VkSubpassResolvePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.optimal=deserialize_uint32_t(name["members"]["optimal"]);}();}();
return result;}

    json serialize_VkMultisampledRenderToSingleSampledInfoEXT(VkMultisampledRenderToSingleSampledInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bSJUBfK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TDxuxbE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["multisampledRenderToSingleSampledEnable"]=[&]() {
    json return_vckLfRQ=json({});
    return_vckLfRQ=[&]() {
    json return_rOIkvdN=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampledEnable);}();return return_vckLfRQ;}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_MhHIbsI=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkMultisampledRenderToSingleSampledInfoEXT deserialize_VkMultisampledRenderToSingleSampledInfoEXT(json &name){
        auto result=VkMultisampledRenderToSingleSampledInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_wNPKlhZ;[&]() {
temp_wNPKlhZ=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_wNPKlhZ;}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampledEnable=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampledEnable"]);}();}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jVGQslD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineProtectedAccess"]=[&]() {
    json return_GtgWTtJ=json({});
    return_GtgWTtJ=[&]() {
    json return_ToosOQJ=json({});
    return serialize_uint32_t(name.pipelineProtectedAccess);}();return return_GtgWTtJ;}();
return result;}

    VkPhysicalDevicePipelineProtectedAccessFeaturesEXT deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePipelineProtectedAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelineProtectedAccess=deserialize_uint32_t(name["members"]["pipelineProtectedAccess"]);}();}();
return result;}

    json serialize_VkQueueFamilyVideoPropertiesKHR(VkQueueFamilyVideoPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hMKTyGa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAZMHOp=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["videoCodecOperations"]=[&]() {
    json return_ramnCkz=json({});
    return serialize_VkVideoCodecOperationFlagsKHR(name.videoCodecOperations);}();
return result;}

    VkQueueFamilyVideoPropertiesKHR deserialize_VkQueueFamilyVideoPropertiesKHR(json &name){
        auto result=VkQueueFamilyVideoPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.videoCodecOperations=deserialize_VkVideoCodecOperationFlagsKHR(name["members"]["videoCodecOperations"]);}();
return result;}

    json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(VkQueueFamilyQueryResultStatusPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XSSDhiQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAZMHOp=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["queryResultStatusSupport"]=[&]() {
    json return_KmyVySI=json({});
    return_KmyVySI=[&]() {
    json return_mYFpScM=json({});
    return serialize_uint32_t(name.queryResultStatusSupport);}();return return_KmyVySI;}();
return result;}

    VkQueueFamilyQueryResultStatusPropertiesKHR deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(json &name){
        auto result=VkQueueFamilyQueryResultStatusPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.queryResultStatusSupport=deserialize_uint32_t(name["members"]["queryResultStatusSupport"]);}();}();
return result;}

    json serialize_VkVideoProfileListInfoKHR(VkVideoProfileListInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oMEPYwf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aKTpvlZ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["profileCount"]=[&]() {
    json return_qXhWAMG=json({});
    return serialize_uint32_t(name.profileCount);}();
result["members"]["pProfiles"]=[&]() {
    json return_dCWZWaU=json({});
    
        if (name.pProfiles==NULL){
            return_dCWZWaU["null"]=true;
            return return_dCWZWaU;
        }
        
        return_dCWZWaU["members"]={};
        for(int dCWZWaU=0; dCWZWaU < name.profileCount; dCWZWaU++){
            json temp;
            temp=[&]() {
    json return_XtMIrne=json({});
    return serialize_VkVideoProfileInfoKHR(name.pProfiles[dCWZWaU]);}();
            return_dCWZWaU["members"].push_back(temp);
        }
        return return_dCWZWaU;
        }();
return result;}

    VkVideoProfileListInfoKHR deserialize_VkVideoProfileListInfoKHR(json &name){
        auto result=VkVideoProfileListInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_veugGRF;[&]() {
temp_veugGRF=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_veugGRF;}();
[&]() {
result.profileCount=deserialize_uint32_t(name["members"]["profileCount"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_qyweyWX;[&]() {

        if (name["members"]["pProfiles"].contains("null")){
        temp_qyweyWX=NULL;
        return;
        }
    temp_qyweyWX=(VkVideoProfileInfoKHR*)malloc(result.profileCount*sizeof(VkVideoProfileInfoKHR));
        for (int ALozusp=0; ALozusp < result.profileCount; ALozusp++){
            [&]() {
temp_qyweyWX[ALozusp]=deserialize_VkVideoProfileInfoKHR(name["members"]["pProfiles"]["members"][ALozusp]);}();;
        }
        }();result.pProfiles=temp_qyweyWX;}();
return result;}

    json serialize_VkPhysicalDeviceVideoFormatInfoKHR(VkPhysicalDeviceVideoFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_snBeDQu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tGGNeUr=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageUsage"]=[&]() {
    json return_dSQYKYy=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
return result;}

    VkPhysicalDeviceVideoFormatInfoKHR deserialize_VkPhysicalDeviceVideoFormatInfoKHR(json &name){
        auto result=VkPhysicalDeviceVideoFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_nnwcgpP;[&]() {
temp_nnwcgpP=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_nnwcgpP;}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
return result;}

    json serialize_VkVideoFormatPropertiesKHR(VkVideoFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fofvjuW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fYGlFhR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_ZkKDnaX=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["componentMapping"]=[&]() {
    json return_WenFKSv=json({});
    return serialize_VkComponentMapping(name.componentMapping);}();
result["members"]["imageCreateFlags"]=[&]() {
    json return_yzSdEPw=json({});
    return serialize_VkImageCreateFlags(name.imageCreateFlags);}();
result["members"]["imageType"]=[&]() {
    json return_PivozpN=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["imageTiling"]=[&]() {
    json return_FVWusVM=json({});
    return serialize_VkImageTiling(name.imageTiling);}();
result["members"]["imageUsageFlags"]=[&]() {
    json return_JxYzlMq=json({});
    return serialize_VkImageUsageFlags(name.imageUsageFlags);}();
return result;}

    VkVideoFormatPropertiesKHR deserialize_VkVideoFormatPropertiesKHR(json &name){
        auto result=VkVideoFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.componentMapping=deserialize_VkComponentMapping(name["members"]["componentMapping"]);}();
[&]() {
result.imageCreateFlags=deserialize_VkImageCreateFlags(name["members"]["imageCreateFlags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.imageTiling=deserialize_VkImageTiling(name["members"]["imageTiling"]);}();
[&]() {
result.imageUsageFlags=deserialize_VkImageUsageFlags(name["members"]["imageUsageFlags"]);}();
return result;}

    json serialize_VkVideoProfileInfoKHR(VkVideoProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_edjuGjB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["videoCodecOperation"]=[&]() {
    json return_XyRaBxg=json({});
    return serialize_VkVideoCodecOperationFlagBitsKHR(name.videoCodecOperation);}();
result["members"]["chromaSubsampling"]=[&]() {
    json return_rRgGEuh=json({});
    return serialize_VkVideoChromaSubsamplingFlagsKHR(name.chromaSubsampling);}();
result["members"]["lumaBitDepth"]=[&]() {
    json return_cLTSLpB=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.lumaBitDepth);}();
result["members"]["chromaBitDepth"]=[&]() {
    json return_BMVfFwb=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.chromaBitDepth);}();
return result;}

    VkVideoProfileInfoKHR deserialize_VkVideoProfileInfoKHR(json &name){
        auto result=VkVideoProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.videoCodecOperation=deserialize_VkVideoCodecOperationFlagBitsKHR(name["members"]["videoCodecOperation"]);}();
[&]() {
result.chromaSubsampling=deserialize_VkVideoChromaSubsamplingFlagsKHR(name["members"]["chromaSubsampling"]);}();
[&]() {
result.lumaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["lumaBitDepth"]);}();
[&]() {
result.chromaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["chromaBitDepth"]);}();
return result;}

    json serialize_VkVideoCapabilitiesKHR(VkVideoCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xYUFySm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_cfYCbVf=json({});
    return serialize_VkVideoCapabilityFlagsKHR(name.flags);}();
result["members"]["minBitstreamBufferOffsetAlignment"]=[&]() {
    json return_cURbeDK=json({});
    return_cURbeDK=[&]() {
    json return_qdzoCBD=json({});
    return serialize_uint64_t(name.minBitstreamBufferOffsetAlignment);}();return return_cURbeDK;}();
result["members"]["minBitstreamBufferSizeAlignment"]=[&]() {
    json return_CsFrBXB=json({});
    return_CsFrBXB=[&]() {
    json return_nvBZEll=json({});
    return serialize_uint64_t(name.minBitstreamBufferSizeAlignment);}();return return_CsFrBXB;}();
result["members"]["pictureAccessGranularity"]=[&]() {
    json return_SfPlWlu=json({});
    return serialize_VkExtent2D(name.pictureAccessGranularity);}();
result["members"]["minCodedExtent"]=[&]() {
    json return_nMKyJzA=json({});
    return serialize_VkExtent2D(name.minCodedExtent);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_nmCrkZD=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_syaTmDD=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_JOIybMx=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["stdHeaderVersion"]=[&]() {
    json return_wjqDVFM=json({});
    return serialize_VkExtensionProperties(name.stdHeaderVersion);}();
return result;}

    VkVideoCapabilitiesKHR deserialize_VkVideoCapabilitiesKHR(json &name){
        auto result=VkVideoCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.flags=deserialize_VkVideoCapabilityFlagsKHR(name["members"]["flags"]);}();
[&]() {
[&]() {
result.minBitstreamBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minBitstreamBufferSizeAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferSizeAlignment"]);}();}();
[&]() {
result.pictureAccessGranularity=deserialize_VkExtent2D(name["members"]["pictureAccessGranularity"]);}();
[&]() {
result.minCodedExtent=deserialize_VkExtent2D(name["members"]["minCodedExtent"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
result.stdHeaderVersion=deserialize_VkExtensionProperties(name["members"]["stdHeaderVersion"]);}();
return result;}

    json serialize_VkVideoSessionMemoryRequirementsKHR(VkVideoSessionMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WYowRTB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VLNQsNj=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_JteVDwv=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_ktVRPPX=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkVideoSessionMemoryRequirementsKHR deserialize_VkVideoSessionMemoryRequirementsKHR(json &name){
        auto result=VkVideoSessionMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkBindVideoSessionMemoryInfoKHR(VkBindVideoSessionMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lSaYaDt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mAFOLKf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_JteVDwv=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memory"]=[&]() {
    json return_moPCwiW=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_QvyzjAq=json({});
    return_QvyzjAq=[&]() {
    json return_FEAKEyw=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_QvyzjAq;}();
result["members"]["memorySize"]=[&]() {
    json return_xocIwyK=json({});
    return_xocIwyK=[&]() {
    json return_xWZrxyv=json({});
    return serialize_uint64_t(name.memorySize);}();return return_xocIwyK;}();
return result;}

    VkBindVideoSessionMemoryInfoKHR deserialize_VkBindVideoSessionMemoryInfoKHR(json &name){
        auto result=VkBindVideoSessionMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_LthbfsD;[&]() {
temp_LthbfsD=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_LthbfsD;}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
[&]() {
result.memorySize=deserialize_uint64_t(name["members"]["memorySize"]);}();}();
return result;}

    json serialize_VkVideoPictureResourceInfoKHR(VkVideoPictureResourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_srtmBao=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["codedOffset"]=[&]() {
    json return_uVyZUqK=json({});
    return serialize_VkOffset2D(name.codedOffset);}();
result["members"]["codedExtent"]=[&]() {
    json return_OaHrnXq=json({});
    return serialize_VkExtent2D(name.codedExtent);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_MWiyvBc=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["imageViewBinding"]=[&]() {
    json return_YBnshkx=json({});
    return serialize_VkImageView(name.imageViewBinding);}();
return result;}

    VkVideoPictureResourceInfoKHR deserialize_VkVideoPictureResourceInfoKHR(json &name){
        auto result=VkVideoPictureResourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.codedOffset=deserialize_VkOffset2D(name["members"]["codedOffset"]);}();
[&]() {
result.codedExtent=deserialize_VkExtent2D(name["members"]["codedExtent"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.imageViewBinding=deserialize_VkImageView(name["members"]["imageViewBinding"]);}();
return result;}

    json serialize_VkVideoReferenceSlotInfoKHR(VkVideoReferenceSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GoNhNie=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["slotIndex"]=[&]() {
    json return_sgZCNaI=json({});
    return serialize_int32_t(name.slotIndex);}();
result["members"]["pPictureResource"]=[&]() {
    json return_OlDQOmf=json({});
    
        if (name.pPictureResource==NULL){
            return_OlDQOmf["null"]=true;
            return return_OlDQOmf;
        }
        return_OlDQOmf=[&]() {
    json return_HdMvbLm=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*name.pPictureResource);}();
return return_OlDQOmf;}();
return result;}

    VkVideoReferenceSlotInfoKHR deserialize_VkVideoReferenceSlotInfoKHR(json &name){
        auto result=VkVideoReferenceSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.slotIndex=deserialize_int32_t(name["members"]["slotIndex"]);}();
[&]() {
VkVideoPictureResourceInfoKHR* temp_FzjRKOU;[&]() {

        if (name["members"]["pPictureResource"].contains("null")){
        temp_FzjRKOU=NULL;
        return;
        }
    temp_FzjRKOU=(VkVideoPictureResourceInfoKHR*)malloc(sizeof(VkVideoPictureResourceInfoKHR));
[&]() {
*(temp_FzjRKOU)=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["pPictureResource"]);}();
}();result.pPictureResource=temp_FzjRKOU;}();
return result;}

    json serialize_VkVideoDecodeCapabilitiesKHR(VkVideoDecodeCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_seHTqjX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IzdsmHW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_RPbvaaa=json({});
    return serialize_VkVideoDecodeCapabilityFlagsKHR(name.flags);}();
return result;}

    VkVideoDecodeCapabilitiesKHR deserialize_VkVideoDecodeCapabilitiesKHR(json &name){
        auto result=VkVideoDecodeCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.flags=deserialize_VkVideoDecodeCapabilityFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoDecodeUsageInfoKHR(VkVideoDecodeUsageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LHzwGoJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["videoUsageHints"]=[&]() {
    json return_tohmvvx=json({});
    return serialize_VkVideoDecodeUsageFlagsKHR(name.videoUsageHints);}();
return result;}

    VkVideoDecodeUsageInfoKHR deserialize_VkVideoDecodeUsageInfoKHR(json &name){
        auto result=VkVideoDecodeUsageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
result.videoUsageHints=deserialize_VkVideoDecodeUsageFlagsKHR(name["members"]["videoUsageHints"]);}();
return result;}

    json serialize_VkVideoDecodeInfoKHR(VkVideoDecodeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hvHlkKw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_JJNwjyP=json({});
    return serialize_VkVideoDecodeFlagsKHR(name.flags);}();
result["members"]["srcBuffer"]=[&]() {
    json return_sPbwAxv=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["srcBufferOffset"]=[&]() {
    json return_KYWROYG=json({});
    return_KYWROYG=[&]() {
    json return_VDRudPi=json({});
    return serialize_uint64_t(name.srcBufferOffset);}();return return_KYWROYG;}();
result["members"]["srcBufferRange"]=[&]() {
    json return_YKtLQwg=json({});
    return_YKtLQwg=[&]() {
    json return_XsiuBAo=json({});
    return serialize_uint64_t(name.srcBufferRange);}();return return_YKtLQwg;}();
result["members"]["dstPictureResource"]=[&]() {
    json return_RKKyQLm=json({});
    return serialize_VkVideoPictureResourceInfoKHR(name.dstPictureResource);}();
result["members"]["pSetupReferenceSlot"]=[&]() {
    json return_nylEKpR=json({});
    
        if (name.pSetupReferenceSlot==NULL){
            return_nylEKpR["null"]=true;
            return return_nylEKpR;
        }
        return_nylEKpR=[&]() {
    json return_EElVyZA=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*name.pSetupReferenceSlot);}();
return return_nylEKpR;}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_pARhAnt=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_PKGqIXw=json({});
    
        if (name.pReferenceSlots==NULL){
            return_PKGqIXw["null"]=true;
            return return_PKGqIXw;
        }
        
        return_PKGqIXw["members"]={};
        for(int PKGqIXw=0; PKGqIXw < name.referenceSlotCount; PKGqIXw++){
            json temp;
            temp=[&]() {
    json return_spHPwaa=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[PKGqIXw]);}();
            return_PKGqIXw["members"].push_back(temp);
        }
        return return_PKGqIXw;
        }();
return result;}

    VkVideoDecodeInfoKHR deserialize_VkVideoDecodeInfoKHR(json &name){
        auto result=VkVideoDecodeInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.flags=deserialize_VkVideoDecodeFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
[&]() {
result.srcBufferOffset=deserialize_uint64_t(name["members"]["srcBufferOffset"]);}();}();
[&]() {
[&]() {
result.srcBufferRange=deserialize_uint64_t(name["members"]["srcBufferRange"]);}();}();
[&]() {
result.dstPictureResource=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["dstPictureResource"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_otFkaBT;[&]() {

        if (name["members"]["pSetupReferenceSlot"].contains("null")){
        temp_otFkaBT=NULL;
        return;
        }
    temp_otFkaBT=(VkVideoReferenceSlotInfoKHR*)malloc(sizeof(VkVideoReferenceSlotInfoKHR));
[&]() {
*(temp_otFkaBT)=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pSetupReferenceSlot"]);}();
}();result.pSetupReferenceSlot=temp_otFkaBT;}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_TIzBsgS;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_TIzBsgS=NULL;
        return;
        }
    temp_TIzBsgS=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int hUrbdcC=0; hUrbdcC < result.referenceSlotCount; hUrbdcC++){
            [&]() {
temp_TIzBsgS[hUrbdcC]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][hUrbdcC]);}();;
        }
        }();result.pReferenceSlots=temp_TIzBsgS;}();
return result;}

    json serialize_VkVideoDecodeH264ProfileInfoKHR(VkVideoDecodeH264ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NKjnamo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dCmxjvR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_ibweCSd=json({});
    return serialize_StdVideoH264ProfileIdc(name.stdProfileIdc);
}();
result["members"]["pictureLayout"]=[&]() {
    json return_TLlwZig=json({});
    return serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name.pictureLayout);}();
return result;}

    VkVideoDecodeH264ProfileInfoKHR deserialize_VkVideoDecodeH264ProfileInfoKHR(json &name){
        auto result=VkVideoDecodeH264ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mhluzVf;[&]() {
temp_mhluzVf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mhluzVf;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH264ProfileIdc(name["members"]["stdProfileIdc"]);
}();
[&]() {
result.pictureLayout=deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name["members"]["pictureLayout"]);}();
return result;}

    json serialize_VkVideoDecodeH264CapabilitiesKHR(VkVideoDecodeH264CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yZgIrNV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_ucaLbjK=json({});
    return serialize_StdVideoH264LevelIdc(name.maxLevelIdc);
}();
result["members"]["fieldOffsetGranularity"]=[&]() {
    json return_TgNjFWy=json({});
    return serialize_VkOffset2D(name.fieldOffsetGranularity);}();
return result;}

    VkVideoDecodeH264CapabilitiesKHR deserialize_VkVideoDecodeH264CapabilitiesKHR(json &name){
        auto result=VkVideoDecodeH264CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH264LevelIdc(name["members"]["maxLevelIdc"]);
}();
[&]() {
result.fieldOffsetGranularity=deserialize_VkOffset2D(name["members"]["fieldOffsetGranularity"]);}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(VkVideoDecodeH264SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yflHcZC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PxmaseH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stdSPSCount"]=[&]() {
    json return_AfDtQdg=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_eKmaexT=json({});
    
        if (name.pStdSPSs==NULL){
            return_eKmaexT["null"]=true;
            return return_eKmaexT;
        }
        return serialize_StdVideoH264SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_iEzkUDa=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_XIdLqOo=json({});
    
        if (name.pStdPPSs==NULL){
            return_XIdLqOo["null"]=true;
            return return_XIdLqOo;
        }
        return serialize_StdVideoH264PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH264SessionParametersAddInfoKHR deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(json &name){
        auto result=VkVideoDecodeH264SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AXgGTyX;[&]() {
temp_AXgGTyX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AXgGTyX;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH264SequenceParameterSet* temp_nWQRFBK;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_nWQRFBK=NULL;
        return;
        }
    temp_nWQRFBK=deserialize_StdVideoH264SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_nWQRFBK;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH264PictureParameterSet* temp_dCeFPvr;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_dCeFPvr=NULL;
        return;
        }
    temp_dCeFPvr=deserialize_StdVideoH264PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_dCeFPvr;}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(VkVideoDecodeH264SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tPuQrHC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ngrxQZw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_psAWJLP=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_fxJZxOp=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_cWJIuWW=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_cWJIuWW["null"]=true;
            return return_cWJIuWW;
        }
        return_cWJIuWW=[&]() {
    json return_XfPcoEu=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_cWJIuWW;}();
return result;}

    VkVideoDecodeH264SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(json &name){
        auto result=VkVideoDecodeH264SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qRPBhxj;[&]() {
temp_qRPBhxj=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qRPBhxj;}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH264SessionParametersAddInfoKHR* temp_VkRYfdL;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_VkRYfdL=NULL;
        return;
        }
    temp_VkRYfdL=(VkVideoDecodeH264SessionParametersAddInfoKHR*)malloc(sizeof(VkVideoDecodeH264SessionParametersAddInfoKHR));
[&]() {
*(temp_VkRYfdL)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_VkRYfdL;}();
return result;}

    json serialize_VkVideoDecodeH264PictureInfoKHR(VkVideoDecodeH264PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qjZLBap=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sUafluA=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_fEBZnGr=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_fEBZnGr["null"]=true;
            return return_fEBZnGr;
        }
        return serialize_StdVideoDecodeH264PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceCount"]=[&]() {
    json return_IGCZMaE=json({});
    return serialize_uint32_t(name.sliceCount);}();
result["members"]["pSliceOffsets"]=[&]() {
    json return_todwFpU=json({});
    
        if (name.pSliceOffsets==NULL){
            return_todwFpU["null"]=true;
            return return_todwFpU;
        }
        
        return_todwFpU["members"]={};
        for(int todwFpU=0; todwFpU < name.sliceCount; todwFpU++){
            json temp;
            temp=[&]() {
    json return_xZWwtnm=json({});
    return serialize_uint32_t(name.pSliceOffsets[todwFpU]);}();
            return_todwFpU["members"].push_back(temp);
        }
        return return_todwFpU;
        }();
return result;}

    VkVideoDecodeH264PictureInfoKHR deserialize_VkVideoDecodeH264PictureInfoKHR(json &name){
        auto result=VkVideoDecodeH264PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_DiJawez;[&]() {
temp_DiJawez=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_DiJawez;}();
[&]() {
StdVideoDecodeH264PictureInfo* temp_wQRPpae;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_wQRPpae=NULL;
        return;
        }
    temp_wQRPpae=deserialize_StdVideoDecodeH264PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_wQRPpae;}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
[&]() {
uint32_t* temp_TICqvUU;[&]() {

        if (name["members"]["pSliceOffsets"].contains("null")){
        temp_TICqvUU=NULL;
        return;
        }
    temp_TICqvUU=(uint32_t*)malloc(result.sliceCount*sizeof(uint32_t));
        for (int lmgpyhu=0; lmgpyhu < result.sliceCount; lmgpyhu++){
            [&]() {
temp_TICqvUU[lmgpyhu]=deserialize_uint32_t(name["members"]["pSliceOffsets"]["members"][lmgpyhu]);}();;
        }
        }();result.pSliceOffsets=temp_TICqvUU;}();
return result;}

    json serialize_VkVideoDecodeH264DpbSlotInfoKHR(VkVideoDecodeH264DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IDGLspj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_rxkzYsN=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_rxkzYsN["null"]=true;
            return return_rxkzYsN;
        }
        return serialize_StdVideoDecodeH264ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH264DpbSlotInfoKHR deserialize_VkVideoDecodeH264DpbSlotInfoKHR(json &name){
        auto result=VkVideoDecodeH264DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
StdVideoDecodeH264ReferenceInfo* temp_FKXMzmu;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_FKXMzmu=NULL;
        return;
        }
    temp_FKXMzmu=deserialize_StdVideoDecodeH264ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_FKXMzmu;}();
return result;}

    json serialize_VkVideoDecodeH265ProfileInfoKHR(VkVideoDecodeH265ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tKGzzDZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_KBuknbS=json({});
    return serialize_StdVideoH265ProfileIdc(name.stdProfileIdc);
}();
return result;}

    VkVideoDecodeH265ProfileInfoKHR deserialize_VkVideoDecodeH265ProfileInfoKHR(json &name){
        auto result=VkVideoDecodeH265ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH265ProfileIdc(name["members"]["stdProfileIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265CapabilitiesKHR(VkVideoDecodeH265CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SERBVjE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_HLlVyLs=json({});
    return serialize_StdVideoH265LevelIdc(name.maxLevelIdc);
}();
return result;}

    VkVideoDecodeH265CapabilitiesKHR deserialize_VkVideoDecodeH265CapabilitiesKHR(json &name){
        auto result=VkVideoDecodeH265CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH265LevelIdc(name["members"]["maxLevelIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(VkVideoDecodeH265SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dnbyaEW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nNniLrj=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["stdVPSCount"]=[&]() {
    json return_icbvWiO=json({});
    return serialize_uint32_t(name.stdVPSCount);}();
result["members"]["pStdVPSs"]=[&]() {
    json return_ANWLmVD=json({});
    
        if (name.pStdVPSs==NULL){
            return_ANWLmVD["null"]=true;
            return return_ANWLmVD;
        }
        return serialize_StdVideoH265VideoParameterSet_p(name.pStdVPSs);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_ibbbmFe=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_XeGGKcE=json({});
    
        if (name.pStdSPSs==NULL){
            return_XeGGKcE["null"]=true;
            return return_XeGGKcE;
        }
        return serialize_StdVideoH265SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_QCKujcO=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_sCyGEel=json({});
    
        if (name.pStdPPSs==NULL){
            return_sCyGEel["null"]=true;
            return return_sCyGEel;
        }
        return serialize_StdVideoH265PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH265SessionParametersAddInfoKHR deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(json &name){
        auto result=VkVideoDecodeH265SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_eJPiWGi;[&]() {
temp_eJPiWGi=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_eJPiWGi;}();
[&]() {
result.stdVPSCount=deserialize_uint32_t(name["members"]["stdVPSCount"]);}();
[&]() {
StdVideoH265VideoParameterSet* temp_WofLORt;[&]() {

        if (name["members"]["pStdVPSs"].contains("null")){
        temp_WofLORt=NULL;
        return;
        }
    temp_WofLORt=deserialize_StdVideoH265VideoParameterSet_p(name["members"]["pStdVPSs"]);
}();result.pStdVPSs=temp_WofLORt;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH265SequenceParameterSet* temp_YJLCePI;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_YJLCePI=NULL;
        return;
        }
    temp_YJLCePI=deserialize_StdVideoH265SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_YJLCePI;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH265PictureParameterSet* temp_cQqADyJ;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_cQqADyJ=NULL;
        return;
        }
    temp_cQqADyJ=deserialize_StdVideoH265PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_cQqADyJ;}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(VkVideoDecodeH265SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LJzahnd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oYHhBXK=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxStdVPSCount"]=[&]() {
    json return_poqvDMD=json({});
    return serialize_uint32_t(name.maxStdVPSCount);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_oeIjxJX=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_nIOFbpM=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_JaJupMr=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_JaJupMr["null"]=true;
            return return_JaJupMr;
        }
        return_JaJupMr=[&]() {
    json return_CzkxlpU=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_JaJupMr;}();
return result;}

    VkVideoDecodeH265SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(json &name){
        auto result=VkVideoDecodeH265SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_CdrwuGZ;[&]() {
temp_CdrwuGZ=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_CdrwuGZ;}();
[&]() {
result.maxStdVPSCount=deserialize_uint32_t(name["members"]["maxStdVPSCount"]);}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH265SessionParametersAddInfoKHR* temp_etjYgjp;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_etjYgjp=NULL;
        return;
        }
    temp_etjYgjp=(VkVideoDecodeH265SessionParametersAddInfoKHR*)malloc(sizeof(VkVideoDecodeH265SessionParametersAddInfoKHR));
[&]() {
*(temp_etjYgjp)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_etjYgjp;}();
return result;}

    json serialize_VkVideoDecodeH265PictureInfoKHR(VkVideoDecodeH265PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HOVeAIq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBGwEnt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_TeGvdkb=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_TeGvdkb["null"]=true;
            return return_TeGvdkb;
        }
        return serialize_StdVideoDecodeH265PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceSegmentCount"]=[&]() {
    json return_uBByYjp=json({});
    return serialize_uint32_t(name.sliceSegmentCount);}();
result["members"]["pSliceSegmentOffsets"]=[&]() {
    json return_hRJQqhN=json({});
    
        if (name.pSliceSegmentOffsets==NULL){
            return_hRJQqhN["null"]=true;
            return return_hRJQqhN;
        }
        
        return_hRJQqhN["members"]={};
        for(int hRJQqhN=0; hRJQqhN < name.sliceSegmentCount; hRJQqhN++){
            json temp;
            temp=[&]() {
    json return_RPHKKxq=json({});
    return serialize_uint32_t(name.pSliceSegmentOffsets[hRJQqhN]);}();
            return_hRJQqhN["members"].push_back(temp);
        }
        return return_hRJQqhN;
        }();
return result;}

    VkVideoDecodeH265PictureInfoKHR deserialize_VkVideoDecodeH265PictureInfoKHR(json &name){
        auto result=VkVideoDecodeH265PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mKKnJpW;[&]() {
temp_mKKnJpW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mKKnJpW;}();
[&]() {
StdVideoDecodeH265PictureInfo* temp_FtSbRZy;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_FtSbRZy=NULL;
        return;
        }
    temp_FtSbRZy=deserialize_StdVideoDecodeH265PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_FtSbRZy;}();
[&]() {
result.sliceSegmentCount=deserialize_uint32_t(name["members"]["sliceSegmentCount"]);}();
[&]() {
uint32_t* temp_aTHjEDn;[&]() {

        if (name["members"]["pSliceSegmentOffsets"].contains("null")){
        temp_aTHjEDn=NULL;
        return;
        }
    temp_aTHjEDn=(uint32_t*)malloc(result.sliceSegmentCount*sizeof(uint32_t));
        for (int MKKxjSJ=0; MKKxjSJ < result.sliceSegmentCount; MKKxjSJ++){
            [&]() {
temp_aTHjEDn[MKKxjSJ]=deserialize_uint32_t(name["members"]["pSliceSegmentOffsets"]["members"][MKKxjSJ]);}();;
        }
        }();result.pSliceSegmentOffsets=temp_aTHjEDn;}();
return result;}

    json serialize_VkVideoDecodeH265DpbSlotInfoKHR(VkVideoDecodeH265DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MZBKiHT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YcYGsMR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_SgzWCnF=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_SgzWCnF["null"]=true;
            return return_SgzWCnF;
        }
        return serialize_StdVideoDecodeH265ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH265DpbSlotInfoKHR deserialize_VkVideoDecodeH265DpbSlotInfoKHR(json &name){
        auto result=VkVideoDecodeH265DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GpskzIE;[&]() {
temp_GpskzIE=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GpskzIE;}();
[&]() {
StdVideoDecodeH265ReferenceInfo* temp_mgpvlPd;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_mgpvlPd=NULL;
        return;
        }
    temp_mgpvlPd=deserialize_StdVideoDecodeH265ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_mgpvlPd;}();
return result;}

    json serialize_VkVideoSessionCreateInfoKHR(VkVideoSessionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BGnUYPl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DXfRYCc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_lULaezK=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["flags"]=[&]() {
    json return_jzyWPKd=json({});
    return serialize_VkVideoSessionCreateFlagsKHR(name.flags);}();
result["members"]["pVideoProfile"]=[&]() {
    json return_pQAOrxq=json({});
    
        if (name.pVideoProfile==NULL){
            return_pQAOrxq["null"]=true;
            return return_pQAOrxq;
        }
        return_pQAOrxq=[&]() {
    json return_HFOeOnH=json({});
    return serialize_VkVideoProfileInfoKHR(*name.pVideoProfile);}();
return return_pQAOrxq;}();
result["members"]["pictureFormat"]=[&]() {
    json return_KmHyMOl=json({});
    return serialize_VkFormat(name.pictureFormat);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_MOSziKK=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["referencePictureFormat"]=[&]() {
    json return_HYeptAh=json({});
    return serialize_VkFormat(name.referencePictureFormat);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_JRGLYIM=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_aNIIghN=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["pStdHeaderVersion"]=[&]() {
    json return_HAqzfiF=json({});
    
        if (name.pStdHeaderVersion==NULL){
            return_HAqzfiF["null"]=true;
            return return_HAqzfiF;
        }
        return_HAqzfiF=[&]() {
    json return_hbIyxts=json({});
    return serialize_VkExtensionProperties(*name.pStdHeaderVersion);}();
return return_HAqzfiF;}();
return result;}

    VkVideoSessionCreateInfoKHR deserialize_VkVideoSessionCreateInfoKHR(json &name){
        auto result=VkVideoSessionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KmUErOG;[&]() {
temp_KmUErOG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KmUErOG;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.flags=deserialize_VkVideoSessionCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_cGwSsqi;[&]() {

        if (name["members"]["pVideoProfile"].contains("null")){
        temp_cGwSsqi=NULL;
        return;
        }
    temp_cGwSsqi=(VkVideoProfileInfoKHR*)malloc(sizeof(VkVideoProfileInfoKHR));
[&]() {
*(temp_cGwSsqi)=deserialize_VkVideoProfileInfoKHR(name["members"]["pVideoProfile"]);}();
}();result.pVideoProfile=temp_cGwSsqi;}();
[&]() {
result.pictureFormat=deserialize_VkFormat(name["members"]["pictureFormat"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.referencePictureFormat=deserialize_VkFormat(name["members"]["referencePictureFormat"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
VkExtensionProperties* temp_QIwAcnt;[&]() {

        if (name["members"]["pStdHeaderVersion"].contains("null")){
        temp_QIwAcnt=NULL;
        return;
        }
    temp_QIwAcnt=(VkExtensionProperties*)malloc(sizeof(VkExtensionProperties));
[&]() {
*(temp_QIwAcnt)=deserialize_VkExtensionProperties(name["members"]["pStdHeaderVersion"]);}();
}();result.pStdHeaderVersion=temp_QIwAcnt;}();
return result;}

    json serialize_VkVideoSessionParametersCreateInfoKHR(VkVideoSessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GEZclSW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoFEgrd=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_yRcSsYH=json({});
    return serialize_VkVideoSessionParametersCreateFlagsKHR(name.flags);}();
result["members"]["videoSessionParametersTemplate"]=[&]() {
    json return_nOCXBxa=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParametersTemplate);}();
result["members"]["videoSession"]=[&]() {
    json return_sKrgHqu=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
return result;}

    VkVideoSessionParametersCreateInfoKHR deserialize_VkVideoSessionParametersCreateInfoKHR(json &name){
        auto result=VkVideoSessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_fPDPbDo;[&]() {
temp_fPDPbDo=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_fPDPbDo;}();
[&]() {
result.flags=deserialize_VkVideoSessionParametersCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSessionParametersTemplate=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParametersTemplate"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
return result;}

    json serialize_VkVideoSessionParametersUpdateInfoKHR(VkVideoSessionParametersUpdateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dfqhlMo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["updateSequenceCount"]=[&]() {
    json return_qBWdHEv=json({});
    return serialize_uint32_t(name.updateSequenceCount);}();
return result;}

    VkVideoSessionParametersUpdateInfoKHR deserialize_VkVideoSessionParametersUpdateInfoKHR(json &name){
        auto result=VkVideoSessionParametersUpdateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.updateSequenceCount=deserialize_uint32_t(name["members"]["updateSequenceCount"]);}();
return result;}

    json serialize_VkVideoBeginCodingInfoKHR(VkVideoBeginCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_erwKzmd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dqFtZzB=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_xwHPntN=json({});
    return serialize_VkVideoBeginCodingFlagsKHR(name.flags);}();
result["members"]["videoSession"]=[&]() {
    json return_mMXKLka=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
result["members"]["videoSessionParameters"]=[&]() {
    json return_biMjmKv=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParameters);}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_zULRBQK=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_PKGqIXw=json({});
    
        if (name.pReferenceSlots==NULL){
            return_PKGqIXw["null"]=true;
            return return_PKGqIXw;
        }
        
        return_PKGqIXw["members"]={};
        for(int PKGqIXw=0; PKGqIXw < name.referenceSlotCount; PKGqIXw++){
            json temp;
            temp=[&]() {
    json return_spHPwaa=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[PKGqIXw]);}();
            return_PKGqIXw["members"].push_back(temp);
        }
        return return_PKGqIXw;
        }();
return result;}

    VkVideoBeginCodingInfoKHR deserialize_VkVideoBeginCodingInfoKHR(json &name){
        auto result=VkVideoBeginCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_COstZkd;[&]() {
temp_COstZkd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_COstZkd;}();
[&]() {
result.flags=deserialize_VkVideoBeginCodingFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
[&]() {
result.videoSessionParameters=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParameters"]);}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_TIzBsgS;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_TIzBsgS=NULL;
        return;
        }
    temp_TIzBsgS=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int hUrbdcC=0; hUrbdcC < result.referenceSlotCount; hUrbdcC++){
            [&]() {
temp_TIzBsgS[hUrbdcC]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][hUrbdcC]);}();;
        }
        }();result.pReferenceSlots=temp_TIzBsgS;}();
return result;}

    json serialize_VkVideoEndCodingInfoKHR(VkVideoEndCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pEjHUCe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMbgTun=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_paQVZbJ=json({});
    return serialize_VkVideoEndCodingFlagsKHR(name.flags);}();
return result;}

    VkVideoEndCodingInfoKHR deserialize_VkVideoEndCodingInfoKHR(json &name){
        auto result=VkVideoEndCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_FGDQdoW;[&]() {
temp_FGDQdoW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_FGDQdoW;}();
[&]() {
result.flags=deserialize_VkVideoEndCodingFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoCodingControlInfoKHR(VkVideoCodingControlInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rqJAZBt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_FfzCJEx=json({});
    return serialize_VkVideoCodingControlFlagsKHR(name.flags);}();
return result;}

    VkVideoCodingControlInfoKHR deserialize_VkVideoCodingControlInfoKHR(json &name){
        auto result=VkVideoCodingControlInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {
result.flags=deserialize_VkVideoCodingControlFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkPhysicalDeviceInheritedViewportScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nhxDMOW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["inheritedViewportScissor2D"]=[&]() {
    json return_HBfNTXD=json({});
    return_HBfNTXD=[&]() {
    json return_zNgDUVx=json({});
    return serialize_uint32_t(name.inheritedViewportScissor2D);}();return return_HBfNTXD;}();
return result;}

    VkPhysicalDeviceInheritedViewportScissorFeaturesNV deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(json &name){
        auto result=VkPhysicalDeviceInheritedViewportScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.inheritedViewportScissor2D=deserialize_uint32_t(name["members"]["inheritedViewportScissor2D"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceViewportScissorInfoNV(VkCommandBufferInheritanceViewportScissorInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_meccfpS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PxmaseH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["viewportScissor2D"]=[&]() {
    json return_RnyAFWE=json({});
    return_RnyAFWE=[&]() {
    json return_sfATKXI=json({});
    return serialize_uint32_t(name.viewportScissor2D);}();return return_RnyAFWE;}();
result["members"]["viewportDepthCount"]=[&]() {
    json return_ERLOXhy=json({});
    return serialize_uint32_t(name.viewportDepthCount);}();
result["members"]["pViewportDepths"]=[&]() {
    json return_vxJBijN=json({});
    
        if (name.pViewportDepths==NULL){
            return_vxJBijN["null"]=true;
            return return_vxJBijN;
        }
        return_vxJBijN=[&]() {
    json return_UjyzjbK=json({});
    return serialize_VkViewport(*name.pViewportDepths);}();
return return_vxJBijN;}();
return result;}

    VkCommandBufferInheritanceViewportScissorInfoNV deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(json &name){
        auto result=VkCommandBufferInheritanceViewportScissorInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AXgGTyX;[&]() {
temp_AXgGTyX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AXgGTyX;}();
[&]() {
[&]() {
result.viewportScissor2D=deserialize_uint32_t(name["members"]["viewportScissor2D"]);}();}();
[&]() {
result.viewportDepthCount=deserialize_uint32_t(name["members"]["viewportDepthCount"]);}();
[&]() {
VkViewport* temp_svKLhPC;[&]() {

        if (name["members"]["pViewportDepths"].contains("null")){
        temp_svKLhPC=NULL;
        return;
        }
    temp_svKLhPC=(VkViewport*)malloc(sizeof(VkViewport));
[&]() {
*(temp_svKLhPC)=deserialize_VkViewport(name["members"]["pViewportDepths"]);}();
}();result.pViewportDepths=temp_svKLhPC;}();
return result;}

    json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jYQAyoU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["ycbcr2plane444Formats"]=[&]() {
    json return_TfYefij=json({});
    return_TfYefij=[&]() {
    json return_kSQwNmd=json({});
    return serialize_uint32_t(name.ycbcr2plane444Formats);}();return return_TfYefij;}();
return result;}

    VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.ycbcr2plane444Formats=deserialize_uint32_t(name["members"]["ycbcr2plane444Formats"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(VkPhysicalDeviceProvokingVertexFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sGcHegI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["provokingVertexLast"]=[&]() {
    json return_cMrBfPv=json({});
    return_cMrBfPv=[&]() {
    json return_wnOxowU=json({});
    return serialize_uint32_t(name.provokingVertexLast);}();return return_cMrBfPv;}();
result["members"]["transformFeedbackPreservesProvokingVertex"]=[&]() {
    json return_rHREpPE=json({});
    return_rHREpPE=[&]() {
    json return_TnSzDza=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesProvokingVertex);}();return return_rHREpPE;}();
return result;}

    VkPhysicalDeviceProvokingVertexFeaturesEXT deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceProvokingVertexFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.provokingVertexLast=deserialize_uint32_t(name["members"]["provokingVertexLast"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(VkPhysicalDeviceProvokingVertexPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_weKoFiR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["provokingVertexModePerPipeline"]=[&]() {
    json return_PyQZJie=json({});
    return_PyQZJie=[&]() {
    json return_iWLkbDT=json({});
    return serialize_uint32_t(name.provokingVertexModePerPipeline);}();return return_PyQZJie;}();
result["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]=[&]() {
    json return_KTBVckF=json({});
    return_KTBVckF=[&]() {
    json return_LOrfPUO=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesTriangleFanProvokingVertex);}();return return_KTBVckF;}();
return result;}

    VkPhysicalDeviceProvokingVertexPropertiesEXT deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceProvokingVertexPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.provokingVertexModePerPipeline=deserialize_uint32_t(name["members"]["provokingVertexModePerPipeline"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesTriangleFanProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HSeuoHk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["provokingVertexMode"]=[&]() {
    json return_RmNAWqr=json({});
    return serialize_VkProvokingVertexModeEXT(name.provokingVertexMode);}();
return result;}

    VkPipelineRasterizationProvokingVertexStateCreateInfoEXT deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(json &name){
        auto result=VkPipelineRasterizationProvokingVertexStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.provokingVertexMode=deserialize_VkProvokingVertexModeEXT(name["members"]["provokingVertexMode"]);}();
return result;}

    json serialize_VkCuModuleCreateInfoNVX(VkCuModuleCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VIZUfYs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dataSize"]=[&]() {
    json return_oCvJTOo=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_NWFmwrW=json({});
    
        if (name.pData==NULL){
            return_NWFmwrW["null"]=true;
            return return_NWFmwrW;
        }
        return_NWFmwrW=[&]() {
    json return_ConcZiV=json({});
    
        if (((char*)(name.pData))==NULL){
            return_ConcZiV["null"]=true;
            return return_ConcZiV;
        }
        
        return_ConcZiV["members"]={};
        for(int ConcZiV=0; ConcZiV < name.dataSize; ConcZiV++){
            json temp;
            temp=[&]() {
    json return_JDKvCvo=json({});
    return serialize_char(((char*)(name.pData))[ConcZiV]);}();
            return_ConcZiV["members"].push_back(temp);
        }
        return return_ConcZiV;
        }();return return_NWFmwrW;}();
return result;}

    VkCuModuleCreateInfoNVX deserialize_VkCuModuleCreateInfoNVX(json &name){
        auto result=VkCuModuleCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_PxdMDvf;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_PxdMDvf=NULL;
        return;
        }
    char* temp_PIJQeIy;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_PIJQeIy=NULL;
        return;
        }
    temp_PIJQeIy=(char*)malloc(result.dataSize*sizeof(char));
        for (int dogEDlc=0; dogEDlc < result.dataSize; dogEDlc++){
            [&]() {
temp_PIJQeIy[dogEDlc]=deserialize_char(name["members"]["pData"]["members"][dogEDlc]);}();;
        }
        }();temp_PxdMDvf=(void*)temp_PIJQeIy;
}();result.pData=temp_PxdMDvf;}();
return result;}

    json serialize_VkCuFunctionCreateInfoNVX(VkCuFunctionCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZNMaOSi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["module"]=[&]() {
    json return_ZhPWipr=json({});
    return serialize_VkCuModuleNVX(name.module);}();
result["members"]["pName"]=[&]() {
    json return_HXLbzcU=json({});
    
        if (name.pName==NULL){
            return_HXLbzcU["null"]=true;
            return return_HXLbzcU;
        }
        
        return_HXLbzcU["members"]={};
        for(int HXLbzcU=0; HXLbzcU < strlen(name.pName)+1; HXLbzcU++){
            json temp;
            temp=[&]() {
    json return_xDnnhTB=json({});
    return serialize_char(name.pName[HXLbzcU]);}();
            return_HXLbzcU["members"].push_back(temp);
        }
        return return_HXLbzcU;
        }();
return result;}

    VkCuFunctionCreateInfoNVX deserialize_VkCuFunctionCreateInfoNVX(json &name){
        auto result=VkCuFunctionCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.module=deserialize_VkCuModuleNVX(name["members"]["module"]);}();
[&]() {
char* temp_UcqsveI;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_UcqsveI=NULL;
        return;
        }
    temp_UcqsveI=(char*)malloc(name["members"]["pName"]["members"].size()*sizeof(char));
        for (int eAtkaDV=0; eAtkaDV < name["members"]["pName"]["members"].size(); eAtkaDV++){
            [&]() {
temp_UcqsveI[eAtkaDV]=deserialize_char(name["members"]["pName"]["members"][eAtkaDV]);}();;
        }
        }();result.pName=temp_UcqsveI;}();
return result;}

    json serialize_VkCuLaunchInfoNVX(VkCuLaunchInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XeMKPll=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["function"]=[&]() {
    json return_ZilQbRF=json({});
    return serialize_VkCuFunctionNVX(name.function);}();
result["members"]["gridDimX"]=[&]() {
    json return_YmQjAlM=json({});
    return serialize_uint32_t(name.gridDimX);}();
result["members"]["gridDimY"]=[&]() {
    json return_TTVlbOG=json({});
    return serialize_uint32_t(name.gridDimY);}();
result["members"]["gridDimZ"]=[&]() {
    json return_TyBzmAD=json({});
    return serialize_uint32_t(name.gridDimZ);}();
result["members"]["blockDimX"]=[&]() {
    json return_DrJUGCR=json({});
    return serialize_uint32_t(name.blockDimX);}();
result["members"]["blockDimY"]=[&]() {
    json return_xMYKixq=json({});
    return serialize_uint32_t(name.blockDimY);}();
result["members"]["blockDimZ"]=[&]() {
    json return_gxnsHwk=json({});
    return serialize_uint32_t(name.blockDimZ);}();
result["members"]["sharedMemBytes"]=[&]() {
    json return_gKVjvON=json({});
    return serialize_uint32_t(name.sharedMemBytes);}();
result["members"]["paramCount"]=[&]() {
    json return_TGxlMYp=json({});
    return serialize_size_t(name.paramCount);}();
result["members"]["pParams"]=[&]() {
    json return_ZHueopK=json({});
    
        if (name.pParams==NULL){
            return_ZHueopK["null"]=true;
            return return_ZHueopK;
        }
        
        return_ZHueopK["members"]={};
        for(int ZHueopK=0; ZHueopK < name.paramCount; ZHueopK++){
            json temp;
            temp=[&]() {
    json return_SCnFzmd=json({});
    
        if (name.pParams[ZHueopK]==NULL){
            return_SCnFzmd["null"]=true;
            return return_SCnFzmd;
        }
        return_SCnFzmd=[&]() {
    json return_xqJCLDe=json({});
    
        if (((char*)(name.pParams[ZHueopK]))==NULL){
            return_xqJCLDe["null"]=true;
            return return_xqJCLDe;
        }
        
        return_xqJCLDe["members"]={};
        for(int xqJCLDe=0; xqJCLDe < strlen(((char*)(name.pParams[ZHueopK])))+1; xqJCLDe++){
            json temp;
            temp=[&]() {
    json return_uDkLCnT=json({});
    return serialize_char(((char*)(name.pParams[ZHueopK]))[xqJCLDe]);}();
            return_xqJCLDe["members"].push_back(temp);
        }
        return return_xqJCLDe;
        }();return return_SCnFzmd;}();
            return_ZHueopK["members"].push_back(temp);
        }
        return return_ZHueopK;
        }();
result["members"]["extraCount"]=[&]() {
    json return_zBEKjhm=json({});
    return serialize_size_t(name.extraCount);}();
result["members"]["pExtras"]=[&]() {
    json return_SfrXqyD=json({});
    
        if (name.pExtras==NULL){
            return_SfrXqyD["null"]=true;
            return return_SfrXqyD;
        }
        
        return_SfrXqyD["members"]={};
        for(int SfrXqyD=0; SfrXqyD < name.extraCount; SfrXqyD++){
            json temp;
            temp=[&]() {
    json return_NPbwbuR=json({});
    
        if (name.pExtras[SfrXqyD]==NULL){
            return_NPbwbuR["null"]=true;
            return return_NPbwbuR;
        }
        return_NPbwbuR=[&]() {
    json return_jKKAeiH=json({});
    
        if (((char*)(name.pExtras[SfrXqyD]))==NULL){
            return_jKKAeiH["null"]=true;
            return return_jKKAeiH;
        }
        
        return_jKKAeiH["members"]={};
        for(int jKKAeiH=0; jKKAeiH < strlen(((char*)(name.pExtras[SfrXqyD])))+1; jKKAeiH++){
            json temp;
            temp=[&]() {
    json return_SHWzjAf=json({});
    return serialize_char(((char*)(name.pExtras[SfrXqyD]))[jKKAeiH]);}();
            return_jKKAeiH["members"].push_back(temp);
        }
        return return_jKKAeiH;
        }();return return_NPbwbuR;}();
            return_SfrXqyD["members"].push_back(temp);
        }
        return return_SfrXqyD;
        }();
return result;}

    VkCuLaunchInfoNVX deserialize_VkCuLaunchInfoNVX(json &name){
        auto result=VkCuLaunchInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.function=deserialize_VkCuFunctionNVX(name["members"]["function"]);}();
[&]() {
result.gridDimX=deserialize_uint32_t(name["members"]["gridDimX"]);}();
[&]() {
result.gridDimY=deserialize_uint32_t(name["members"]["gridDimY"]);}();
[&]() {
result.gridDimZ=deserialize_uint32_t(name["members"]["gridDimZ"]);}();
[&]() {
result.blockDimX=deserialize_uint32_t(name["members"]["blockDimX"]);}();
[&]() {
result.blockDimY=deserialize_uint32_t(name["members"]["blockDimY"]);}();
[&]() {
result.blockDimZ=deserialize_uint32_t(name["members"]["blockDimZ"]);}();
[&]() {
result.sharedMemBytes=deserialize_uint32_t(name["members"]["sharedMemBytes"]);}();
[&]() {
result.paramCount=deserialize_size_t(name["members"]["paramCount"]);}();
[&]() {
void** temp_vWFqKnj;[&]() {

        if (name["members"]["pParams"].contains("null")){
        temp_vWFqKnj=NULL;
        return;
        }
    temp_vWFqKnj=(void**)malloc(result.paramCount*sizeof(void*));
        for (int UVQfile=0; UVQfile < result.paramCount; UVQfile++){
            [&]() {

        if (name["members"]["pParams"]["members"][UVQfile].contains("null")){
        temp_vWFqKnj[UVQfile]=NULL;
        return;
        }
    char* temp_ICESyBO;[&]() {

        if (name["members"]["pParams"]["members"][UVQfile].contains("null")){
        temp_ICESyBO=NULL;
        return;
        }
    temp_ICESyBO=(char*)malloc(name["members"]["pParams"]["members"][UVQfile]["members"].size()*sizeof(char));
        for (int WZvWdpX=0; WZvWdpX < name["members"]["pParams"]["members"][UVQfile]["members"].size(); WZvWdpX++){
            [&]() {
temp_ICESyBO[WZvWdpX]=deserialize_char(name["members"]["pParams"]["members"][UVQfile]["members"][WZvWdpX]);}();;
        }
        }();temp_vWFqKnj[UVQfile]=(void*)temp_ICESyBO;
}();;
        }
        }();result.pParams=temp_vWFqKnj;}();
[&]() {
result.extraCount=deserialize_size_t(name["members"]["extraCount"]);}();
[&]() {
void** temp_alLtaKK;[&]() {

        if (name["members"]["pExtras"].contains("null")){
        temp_alLtaKK=NULL;
        return;
        }
    temp_alLtaKK=(void**)malloc(result.extraCount*sizeof(void*));
        for (int CfbzEjY=0; CfbzEjY < result.extraCount; CfbzEjY++){
            [&]() {

        if (name["members"]["pExtras"]["members"][CfbzEjY].contains("null")){
        temp_alLtaKK[CfbzEjY]=NULL;
        return;
        }
    char* temp_UUgBRiC;[&]() {

        if (name["members"]["pExtras"]["members"][CfbzEjY].contains("null")){
        temp_UUgBRiC=NULL;
        return;
        }
    temp_UUgBRiC=(char*)malloc(name["members"]["pExtras"]["members"][CfbzEjY]["members"].size()*sizeof(char));
        for (int wWDIKzx=0; wWDIKzx < name["members"]["pExtras"]["members"][CfbzEjY]["members"].size(); wWDIKzx++){
            [&]() {
temp_UUgBRiC[wWDIKzx]=deserialize_char(name["members"]["pExtras"]["members"][CfbzEjY]["members"][wWDIKzx]);}();;
        }
        }();temp_alLtaKK[CfbzEjY]=(void*)temp_UUgBRiC;
}();;
        }
        }();result.pExtras=temp_alLtaKK;}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkPhysicalDeviceDescriptorBufferFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kNsRydx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorBuffer"]=[&]() {
    json return_hRpgCqS=json({});
    return_hRpgCqS=[&]() {
    json return_ltdJyhn=json({});
    return serialize_uint32_t(name.descriptorBuffer);}();return return_hRpgCqS;}();
result["members"]["descriptorBufferCaptureReplay"]=[&]() {
    json return_kIAoJxr=json({});
    return_kIAoJxr=[&]() {
    json return_YjudfqQ=json({});
    return serialize_uint32_t(name.descriptorBufferCaptureReplay);}();return return_kIAoJxr;}();
result["members"]["descriptorBufferImageLayoutIgnored"]=[&]() {
    json return_YExPraN=json({});
    return_YExPraN=[&]() {
    json return_oksxwgL=json({});
    return serialize_uint32_t(name.descriptorBufferImageLayoutIgnored);}();return return_YExPraN;}();
result["members"]["descriptorBufferPushDescriptors"]=[&]() {
    json return_fvZIeiw=json({});
    return_fvZIeiw=[&]() {
    json return_wINiRAQ=json({});
    return serialize_uint32_t(name.descriptorBufferPushDescriptors);}();return return_fvZIeiw;}();
return result;}

    VkPhysicalDeviceDescriptorBufferFeaturesEXT deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDescriptorBufferFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.descriptorBuffer=deserialize_uint32_t(name["members"]["descriptorBuffer"]);}();}();
[&]() {
[&]() {
result.descriptorBufferCaptureReplay=deserialize_uint32_t(name["members"]["descriptorBufferCaptureReplay"]);}();}();
[&]() {
[&]() {
result.descriptorBufferImageLayoutIgnored=deserialize_uint32_t(name["members"]["descriptorBufferImageLayoutIgnored"]);}();}();
[&]() {
[&]() {
result.descriptorBufferPushDescriptors=deserialize_uint32_t(name["members"]["descriptorBufferPushDescriptors"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkPhysicalDeviceDescriptorBufferPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tdoIOCx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["combinedImageSamplerDescriptorSingleArray"]=[&]() {
    json return_YJqNFGQ=json({});
    return_YJqNFGQ=[&]() {
    json return_KlXyxLZ=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorSingleArray);}();return return_YJqNFGQ;}();
result["members"]["bufferlessPushDescriptors"]=[&]() {
    json return_eNnOnMP=json({});
    return_eNnOnMP=[&]() {
    json return_GpsZDQZ=json({});
    return serialize_uint32_t(name.bufferlessPushDescriptors);}();return return_eNnOnMP;}();
result["members"]["allowSamplerImageViewPostSubmitCreation"]=[&]() {
    json return_ayiximt=json({});
    return_ayiximt=[&]() {
    json return_KLVUJOx=json({});
    return serialize_uint32_t(name.allowSamplerImageViewPostSubmitCreation);}();return return_ayiximt;}();
result["members"]["descriptorBufferOffsetAlignment"]=[&]() {
    json return_gTuofdZ=json({});
    return_gTuofdZ=[&]() {
    json return_CuscPmH=json({});
    return serialize_uint64_t(name.descriptorBufferOffsetAlignment);}();return return_gTuofdZ;}();
result["members"]["maxDescriptorBufferBindings"]=[&]() {
    json return_FVWMFIO=json({});
    return serialize_uint32_t(name.maxDescriptorBufferBindings);}();
result["members"]["maxResourceDescriptorBufferBindings"]=[&]() {
    json return_GSECyjy=json({});
    return serialize_uint32_t(name.maxResourceDescriptorBufferBindings);}();
result["members"]["maxSamplerDescriptorBufferBindings"]=[&]() {
    json return_IzSchWX=json({});
    return serialize_uint32_t(name.maxSamplerDescriptorBufferBindings);}();
result["members"]["maxEmbeddedImmutableSamplerBindings"]=[&]() {
    json return_BiQJXcx=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplerBindings);}();
result["members"]["maxEmbeddedImmutableSamplers"]=[&]() {
    json return_waadQKT=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplers);}();
result["members"]["bufferCaptureReplayDescriptorDataSize"]=[&]() {
    json return_HkmbBTh=json({});
    return serialize_size_t(name.bufferCaptureReplayDescriptorDataSize);}();
result["members"]["imageCaptureReplayDescriptorDataSize"]=[&]() {
    json return_hIGmNdx=json({});
    return serialize_size_t(name.imageCaptureReplayDescriptorDataSize);}();
result["members"]["imageViewCaptureReplayDescriptorDataSize"]=[&]() {
    json return_FwGilxQ=json({});
    return serialize_size_t(name.imageViewCaptureReplayDescriptorDataSize);}();
result["members"]["samplerCaptureReplayDescriptorDataSize"]=[&]() {
    json return_ehdsstV=json({});
    return serialize_size_t(name.samplerCaptureReplayDescriptorDataSize);}();
result["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]=[&]() {
    json return_qvBBZnm=json({});
    return serialize_size_t(name.accelerationStructureCaptureReplayDescriptorDataSize);}();
result["members"]["samplerDescriptorSize"]=[&]() {
    json return_svbKoPS=json({});
    return serialize_size_t(name.samplerDescriptorSize);}();
result["members"]["combinedImageSamplerDescriptorSize"]=[&]() {
    json return_pUWkRqB=json({});
    return serialize_size_t(name.combinedImageSamplerDescriptorSize);}();
result["members"]["sampledImageDescriptorSize"]=[&]() {
    json return_YEgrCiw=json({});
    return serialize_size_t(name.sampledImageDescriptorSize);}();
result["members"]["storageImageDescriptorSize"]=[&]() {
    json return_QMIyUws=json({});
    return serialize_size_t(name.storageImageDescriptorSize);}();
result["members"]["uniformTexelBufferDescriptorSize"]=[&]() {
    json return_PYFwIJe=json({});
    return serialize_size_t(name.uniformTexelBufferDescriptorSize);}();
result["members"]["robustUniformTexelBufferDescriptorSize"]=[&]() {
    json return_QuCqwbc=json({});
    return serialize_size_t(name.robustUniformTexelBufferDescriptorSize);}();
result["members"]["storageTexelBufferDescriptorSize"]=[&]() {
    json return_ltcpzZe=json({});
    return serialize_size_t(name.storageTexelBufferDescriptorSize);}();
result["members"]["robustStorageTexelBufferDescriptorSize"]=[&]() {
    json return_ghjjJLH=json({});
    return serialize_size_t(name.robustStorageTexelBufferDescriptorSize);}();
result["members"]["uniformBufferDescriptorSize"]=[&]() {
    json return_fzIJScj=json({});
    return serialize_size_t(name.uniformBufferDescriptorSize);}();
result["members"]["robustUniformBufferDescriptorSize"]=[&]() {
    json return_LOZMDTg=json({});
    return serialize_size_t(name.robustUniformBufferDescriptorSize);}();
result["members"]["storageBufferDescriptorSize"]=[&]() {
    json return_IvQbVVn=json({});
    return serialize_size_t(name.storageBufferDescriptorSize);}();
result["members"]["robustStorageBufferDescriptorSize"]=[&]() {
    json return_azWsPvB=json({});
    return serialize_size_t(name.robustStorageBufferDescriptorSize);}();
result["members"]["inputAttachmentDescriptorSize"]=[&]() {
    json return_EMbOOnZ=json({});
    return serialize_size_t(name.inputAttachmentDescriptorSize);}();
result["members"]["accelerationStructureDescriptorSize"]=[&]() {
    json return_SEkmPwi=json({});
    return serialize_size_t(name.accelerationStructureDescriptorSize);}();
result["members"]["maxSamplerDescriptorBufferRange"]=[&]() {
    json return_CQGagrp=json({});
    return_CQGagrp=[&]() {
    json return_XlhDKCi=json({});
    return serialize_uint64_t(name.maxSamplerDescriptorBufferRange);}();return return_CQGagrp;}();
result["members"]["maxResourceDescriptorBufferRange"]=[&]() {
    json return_pTCjPBu=json({});
    return_pTCjPBu=[&]() {
    json return_yKXsfuM=json({});
    return serialize_uint64_t(name.maxResourceDescriptorBufferRange);}();return return_pTCjPBu;}();
result["members"]["samplerDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_NLdHsYo=json({});
    return_NLdHsYo=[&]() {
    json return_qefeQPN=json({});
    return serialize_uint64_t(name.samplerDescriptorBufferAddressSpaceSize);}();return return_NLdHsYo;}();
result["members"]["resourceDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_eNvhpIc=json({});
    return_eNvhpIc=[&]() {
    json return_gWwguGx=json({});
    return serialize_uint64_t(name.resourceDescriptorBufferAddressSpaceSize);}();return return_eNvhpIc;}();
result["members"]["descriptorBufferAddressSpaceSize"]=[&]() {
    json return_LftnnXZ=json({});
    return_LftnnXZ=[&]() {
    json return_XoveEan=json({});
    return serialize_uint64_t(name.descriptorBufferAddressSpaceSize);}();return return_LftnnXZ;}();
return result;}

    VkPhysicalDeviceDescriptorBufferPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceDescriptorBufferPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.combinedImageSamplerDescriptorSingleArray=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorSingleArray"]);}();}();
[&]() {
[&]() {
result.bufferlessPushDescriptors=deserialize_uint32_t(name["members"]["bufferlessPushDescriptors"]);}();}();
[&]() {
[&]() {
result.allowSamplerImageViewPostSubmitCreation=deserialize_uint32_t(name["members"]["allowSamplerImageViewPostSubmitCreation"]);}();}();
[&]() {
[&]() {
result.descriptorBufferOffsetAlignment=deserialize_uint64_t(name["members"]["descriptorBufferOffsetAlignment"]);}();}();
[&]() {
result.maxDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxDescriptorBufferBindings"]);}();
[&]() {
result.maxResourceDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxResourceDescriptorBufferBindings"]);}();
[&]() {
result.maxSamplerDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxSamplerDescriptorBufferBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplerBindings=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplerBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplers=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplers"]);}();
[&]() {
result.bufferCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["bufferCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageViewCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageViewCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["samplerCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.accelerationStructureCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerDescriptorSize=deserialize_size_t(name["members"]["samplerDescriptorSize"]);}();
[&]() {
result.combinedImageSamplerDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDescriptorSize"]);}();
[&]() {
result.sampledImageDescriptorSize=deserialize_size_t(name["members"]["sampledImageDescriptorSize"]);}();
[&]() {
result.storageImageDescriptorSize=deserialize_size_t(name["members"]["storageImageDescriptorSize"]);}();
[&]() {
result.uniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["uniformTexelBufferDescriptorSize"]);}();
[&]() {
result.robustUniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformTexelBufferDescriptorSize"]);}();
[&]() {
result.storageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["storageTexelBufferDescriptorSize"]);}();
[&]() {
result.robustStorageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageTexelBufferDescriptorSize"]);}();
[&]() {
result.uniformBufferDescriptorSize=deserialize_size_t(name["members"]["uniformBufferDescriptorSize"]);}();
[&]() {
result.robustUniformBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformBufferDescriptorSize"]);}();
[&]() {
result.storageBufferDescriptorSize=deserialize_size_t(name["members"]["storageBufferDescriptorSize"]);}();
[&]() {
result.robustStorageBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageBufferDescriptorSize"]);}();
[&]() {
result.inputAttachmentDescriptorSize=deserialize_size_t(name["members"]["inputAttachmentDescriptorSize"]);}();
[&]() {
result.accelerationStructureDescriptorSize=deserialize_size_t(name["members"]["accelerationStructureDescriptorSize"]);}();
[&]() {
[&]() {
result.maxSamplerDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxSamplerDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.maxResourceDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxResourceDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.samplerDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["samplerDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.resourceDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["resourceDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.descriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["descriptorBufferAddressSpaceSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RUOKHUa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["combinedImageSamplerDensityMapDescriptorSize"]=[&]() {
    json return_tsRZSww=json({});
    return serialize_size_t(name.combinedImageSamplerDensityMapDescriptorSize);}();
return result;}

    VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.combinedImageSamplerDensityMapDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDensityMapDescriptorSize"]);}();
return result;}

    json serialize_VkDescriptorAddressInfoEXT(VkDescriptorAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YHqZNUX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXLilEx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["address"]=[&]() {
    json return_kbSAJYq=json({});
    return_kbSAJYq=[&]() {
    json return_azSluQn=json({});
    return serialize_uint64_t(name.address);}();return return_kbSAJYq;}();
result["members"]["range"]=[&]() {
    json return_WTspQAb=json({});
    return_WTspQAb=[&]() {
    json return_TRPZfkR=json({});
    return serialize_uint64_t(name.range);}();return return_WTspQAb;}();
result["members"]["format"]=[&]() {
    json return_oTbpNVM=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkDescriptorAddressInfoEXT deserialize_VkDescriptorAddressInfoEXT(json &name){
        auto result=VkDescriptorAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingInfoEXT(VkDescriptorBufferBindingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ohSGKfO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXLilEx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["address"]=[&]() {
    json return_kbSAJYq=json({});
    return_kbSAJYq=[&]() {
    json return_azSluQn=json({});
    return serialize_uint64_t(name.address);}();return return_kbSAJYq;}();
result["members"]["usage"]=[&]() {
    json return_brcQsBy=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
return result;}

    VkDescriptorBufferBindingInfoEXT deserialize_VkDescriptorBufferBindingInfoEXT(json &name){
        auto result=VkDescriptorBufferBindingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IdhLEel=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXLilEx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_PRQEgFy=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDescriptorBufferBindingPushDescriptorBufferHandleEXT deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(json &name){
        auto result=VkDescriptorBufferBindingPushDescriptorBufferHandleEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDescriptorDataEXT(VkDescriptorDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pSampler"]=[&]() {
    json return_ftKZizF=json({});
    
        if (name.pSampler==NULL){
            return_ftKZizF["null"]=true;
            return return_ftKZizF;
        }
        return_ftKZizF=[&]() {
    json return_CXLyWWZ=json({});
    return serialize_VkSampler(*name.pSampler);}();
return return_ftKZizF;}();
result["members"]["pCombinedImageSampler"]=[&]() {
    json return_zBSMvUt=json({});
    
        if (name.pCombinedImageSampler==NULL){
            return_zBSMvUt["null"]=true;
            return return_zBSMvUt;
        }
        return_zBSMvUt=[&]() {
    json return_eupVkYK=json({});
    return serialize_VkDescriptorImageInfo(*name.pCombinedImageSampler);}();
return return_zBSMvUt;}();
result["members"]["pInputAttachmentImage"]=[&]() {
    json return_pZJEVXZ=json({});
    
        if (name.pInputAttachmentImage==NULL){
            return_pZJEVXZ["null"]=true;
            return return_pZJEVXZ;
        }
        return_pZJEVXZ=[&]() {
    json return_VswvbQT=json({});
    return serialize_VkDescriptorImageInfo(*name.pInputAttachmentImage);}();
return return_pZJEVXZ;}();
result["members"]["pSampledImage"]=[&]() {
    json return_PXmphSm=json({});
    
        if (name.pSampledImage==NULL){
            return_PXmphSm["null"]=true;
            return return_PXmphSm;
        }
        return_PXmphSm=[&]() {
    json return_uOgSMkV=json({});
    return serialize_VkDescriptorImageInfo(*name.pSampledImage);}();
return return_PXmphSm;}();
result["members"]["pStorageImage"]=[&]() {
    json return_csJEBap=json({});
    
        if (name.pStorageImage==NULL){
            return_csJEBap["null"]=true;
            return return_csJEBap;
        }
        return_csJEBap=[&]() {
    json return_nBrGJTo=json({});
    return serialize_VkDescriptorImageInfo(*name.pStorageImage);}();
return return_csJEBap;}();
result["members"]["pUniformTexelBuffer"]=[&]() {
    json return_sFbCDov=json({});
    
        if (name.pUniformTexelBuffer==NULL){
            return_sFbCDov["null"]=true;
            return return_sFbCDov;
        }
        return_sFbCDov=[&]() {
    json return_VdnsTXW=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformTexelBuffer);}();
return return_sFbCDov;}();
result["members"]["pStorageTexelBuffer"]=[&]() {
    json return_PZewtyi=json({});
    
        if (name.pStorageTexelBuffer==NULL){
            return_PZewtyi["null"]=true;
            return return_PZewtyi;
        }
        return_PZewtyi=[&]() {
    json return_RxnpVPf=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageTexelBuffer);}();
return return_PZewtyi;}();
result["members"]["pUniformBuffer"]=[&]() {
    json return_txhxCha=json({});
    
        if (name.pUniformBuffer==NULL){
            return_txhxCha["null"]=true;
            return return_txhxCha;
        }
        return_txhxCha=[&]() {
    json return_PUgWheR=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformBuffer);}();
return return_txhxCha;}();
result["members"]["pStorageBuffer"]=[&]() {
    json return_gpfCbbD=json({});
    
        if (name.pStorageBuffer==NULL){
            return_gpfCbbD["null"]=true;
            return return_gpfCbbD;
        }
        return_gpfCbbD=[&]() {
    json return_QBeNlOc=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageBuffer);}();
return return_gpfCbbD;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_BSTCuDt=json({});
    return_BSTCuDt=[&]() {
    json return_UpXJaIy=json({});
    return serialize_uint64_t(name.accelerationStructure);}();return return_BSTCuDt;}();
return result;}

    VkDescriptorDataEXT deserialize_VkDescriptorDataEXT(json &name){
        auto result=VkDescriptorDataEXT();
    
[&]() {
VkSampler* temp_LgVGUEp;[&]() {

        if (name["members"]["pSampler"].contains("null")){
        temp_LgVGUEp=NULL;
        return;
        }
    temp_LgVGUEp=(VkSampler*)malloc(sizeof(VkSampler));
[&]() {
*(temp_LgVGUEp)=deserialize_VkSampler(name["members"]["pSampler"]);}();
}();result.pSampler=temp_LgVGUEp;}();
[&]() {
VkDescriptorImageInfo* temp_OZwNWRY;[&]() {

        if (name["members"]["pCombinedImageSampler"].contains("null")){
        temp_OZwNWRY=NULL;
        return;
        }
    temp_OZwNWRY=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_OZwNWRY)=deserialize_VkDescriptorImageInfo(name["members"]["pCombinedImageSampler"]);}();
}();result.pCombinedImageSampler=temp_OZwNWRY;}();
[&]() {
VkDescriptorImageInfo* temp_JWsqjTr;[&]() {

        if (name["members"]["pInputAttachmentImage"].contains("null")){
        temp_JWsqjTr=NULL;
        return;
        }
    temp_JWsqjTr=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_JWsqjTr)=deserialize_VkDescriptorImageInfo(name["members"]["pInputAttachmentImage"]);}();
}();result.pInputAttachmentImage=temp_JWsqjTr;}();
[&]() {
VkDescriptorImageInfo* temp_lSHUJWq;[&]() {

        if (name["members"]["pSampledImage"].contains("null")){
        temp_lSHUJWq=NULL;
        return;
        }
    temp_lSHUJWq=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_lSHUJWq)=deserialize_VkDescriptorImageInfo(name["members"]["pSampledImage"]);}();
}();result.pSampledImage=temp_lSHUJWq;}();
[&]() {
VkDescriptorImageInfo* temp_bRAQqLd;[&]() {

        if (name["members"]["pStorageImage"].contains("null")){
        temp_bRAQqLd=NULL;
        return;
        }
    temp_bRAQqLd=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_bRAQqLd)=deserialize_VkDescriptorImageInfo(name["members"]["pStorageImage"]);}();
}();result.pStorageImage=temp_bRAQqLd;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_kDDqXJD;[&]() {

        if (name["members"]["pUniformTexelBuffer"].contains("null")){
        temp_kDDqXJD=NULL;
        return;
        }
    temp_kDDqXJD=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_kDDqXJD)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformTexelBuffer"]);}();
}();result.pUniformTexelBuffer=temp_kDDqXJD;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_yEBHzFs;[&]() {

        if (name["members"]["pStorageTexelBuffer"].contains("null")){
        temp_yEBHzFs=NULL;
        return;
        }
    temp_yEBHzFs=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_yEBHzFs)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageTexelBuffer"]);}();
}();result.pStorageTexelBuffer=temp_yEBHzFs;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_fKFqazp;[&]() {

        if (name["members"]["pUniformBuffer"].contains("null")){
        temp_fKFqazp=NULL;
        return;
        }
    temp_fKFqazp=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_fKFqazp)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformBuffer"]);}();
}();result.pUniformBuffer=temp_fKFqazp;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_glCLjnP;[&]() {

        if (name["members"]["pStorageBuffer"].contains("null")){
        temp_glCLjnP=NULL;
        return;
        }
    temp_glCLjnP=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_glCLjnP)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageBuffer"]);}();
}();result.pStorageBuffer=temp_glCLjnP;}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint64_t(name["members"]["accelerationStructure"]);}();}();
return result;}

    json serialize_VkDescriptorGetInfoEXT(VkDescriptorGetInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sESLLOu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_WNKGRaa=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["data"]=[&]() {
    json return_GSDKduT=json({});
    return serialize_VkDescriptorDataEXT(name.data);}();
return result;}

    VkDescriptorGetInfoEXT deserialize_VkDescriptorGetInfoEXT(json &name){
        auto result=VkDescriptorGetInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkDescriptorDataEXT(name["members"]["data"]);}();
return result;}

    json serialize_VkBufferCaptureDescriptorDataInfoEXT(VkBufferCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SZTqPLX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["buffer"]=[&]() {
    json return_QohYNmk=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferCaptureDescriptorDataInfoEXT deserialize_VkBufferCaptureDescriptorDataInfoEXT(json &name){
        auto result=VkBufferCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageCaptureDescriptorDataInfoEXT(VkImageCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wWqFBDq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["image"]=[&]() {
    json return_HYfgJRB=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageCaptureDescriptorDataInfoEXT deserialize_VkImageCaptureDescriptorDataInfoEXT(json &name){
        auto result=VkImageCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageViewCaptureDescriptorDataInfoEXT(VkImageViewCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eZPHiwN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageView"]=[&]() {
    json return_zEDFaqS=json({});
    return serialize_VkImageView(name.imageView);}();
return result;}

    VkImageViewCaptureDescriptorDataInfoEXT deserialize_VkImageViewCaptureDescriptorDataInfoEXT(json &name){
        auto result=VkImageViewCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
return result;}

    json serialize_VkSamplerCaptureDescriptorDataInfoEXT(VkSamplerCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ABJVsWN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["sampler"]=[&]() {
    json return_tJtePLP=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkSamplerCaptureDescriptorDataInfoEXT deserialize_VkSamplerCaptureDescriptorDataInfoEXT(json &name){
        auto result=VkSamplerCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkAccelerationStructureCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XPaVziP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_aksZTsK=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
result["members"]["accelerationStructureNV"]=[&]() {
    json return_BbSRyKr=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructureNV);}();
return result;}

    VkAccelerationStructureCaptureDescriptorDataInfoEXT deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(json &name){
        auto result=VkAccelerationStructureCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
[&]() {
result.accelerationStructureNV=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructureNV"]);}();
return result;}

    json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkOpaqueCaptureDescriptorDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aiaGoXm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["opaqueCaptureDescriptorData"]=[&]() {
    json return_GbLhljT=json({});
    
        if (name.opaqueCaptureDescriptorData==NULL){
            return_GbLhljT["null"]=true;
            return return_GbLhljT;
        }
        return_GbLhljT=[&]() {
    json return_dPhVrAg=json({});
    
        if (((char*)(name.opaqueCaptureDescriptorData))==NULL){
            return_dPhVrAg["null"]=true;
            return return_dPhVrAg;
        }
        
        return_dPhVrAg["members"]={};
        for(int dPhVrAg=0; dPhVrAg < strlen(((char*)(name.opaqueCaptureDescriptorData)))+1; dPhVrAg++){
            json temp;
            temp=[&]() {
    json return_SEagXyn=json({});
    return serialize_char(((char*)(name.opaqueCaptureDescriptorData))[dPhVrAg]);}();
            return_dPhVrAg["members"].push_back(temp);
        }
        return return_dPhVrAg;
        }();return return_GbLhljT;}();
return result;}

    VkOpaqueCaptureDescriptorDataCreateInfoEXT deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(json &name){
        auto result=VkOpaqueCaptureDescriptorDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
void* temp_pcADTCm;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_pcADTCm=NULL;
        return;
        }
    char* temp_OjWUTIa;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_OjWUTIa=NULL;
        return;
        }
    temp_OjWUTIa=(char*)malloc(name["members"]["opaqueCaptureDescriptorData"]["members"].size()*sizeof(char));
        for (int pXSlpdB=0; pXSlpdB < name["members"]["opaqueCaptureDescriptorData"]["members"].size(); pXSlpdB++){
            [&]() {
temp_OjWUTIa[pXSlpdB]=deserialize_char(name["members"]["opaqueCaptureDescriptorData"]["members"][pXSlpdB]);}();;
        }
        }();temp_pcADTCm=(void*)temp_OjWUTIa;
}();result.opaqueCaptureDescriptorData=temp_pcADTCm;}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(VkPhysicalDeviceShaderIntegerDotProductFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gALuSgw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_UEbJzlq=json({});
    return_UEbJzlq=[&]() {
    json return_fLpqAoX=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_UEbJzlq;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeatures deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(json &name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gALuSgw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_UEbJzlq=json({});
    return_UEbJzlq=[&]() {
    json return_fLpqAoX=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_UEbJzlq;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(VkPhysicalDeviceShaderIntegerDotProductProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KMTcNcy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_hJEalvF=json({});
    return_hJEalvF=[&]() {
    json return_OWNtXqa=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_hJEalvF;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_pPYiRax=json({});
    return_pPYiRax=[&]() {
    json return_UmdhmSp=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_pPYiRax;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_jZQlFOl=json({});
    return_jZQlFOl=[&]() {
    json return_yUCALDK=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_jZQlFOl;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_YbYNARd=json({});
    return_YbYNARd=[&]() {
    json return_pgiqzrm=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_YbYNARd;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_JGxjTti=json({});
    return_JGxjTti=[&]() {
    json return_YRapNfA=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_JGxjTti;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_fzndfzs=json({});
    return_fzndfzs=[&]() {
    json return_zRvprTT=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_fzndfzs;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_EkpecnF=json({});
    return_EkpecnF=[&]() {
    json return_kVrYZbn=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_EkpecnF;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_TBqgANl=json({});
    return_TBqgANl=[&]() {
    json return_cJLUsVm=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_TBqgANl;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_blPLJrM=json({});
    return_blPLJrM=[&]() {
    json return_dVaWaAn=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_blPLJrM;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_irVjGxM=json({});
    return_irVjGxM=[&]() {
    json return_MLfsjZu=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_irVjGxM;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_ErISnWG=json({});
    return_ErISnWG=[&]() {
    json return_sAYiYQw=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_ErISnWG;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_FpAztVV=json({});
    return_FpAztVV=[&]() {
    json return_ZUgzFvH=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_FpAztVV;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_eKFGMHx=json({});
    return_eKFGMHx=[&]() {
    json return_tBsBggs=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_eKFGMHx;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_hPIfWvL=json({});
    return_hPIfWvL=[&]() {
    json return_ESGmeSZ=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_hPIfWvL;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_UdXvnWW=json({});
    return_UdXvnWW=[&]() {
    json return_JQLARgY=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_UdXvnWW;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_FGNGMak=json({});
    return_FGNGMak=[&]() {
    json return_tRnIYOj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_FGNGMak;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_AJUenSg=json({});
    return_AJUenSg=[&]() {
    json return_DEYxFPq=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_AJUenSg;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_jleWpKp=json({});
    return_jleWpKp=[&]() {
    json return_YqdXcNl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_jleWpKp;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_WzYjQzS=json({});
    return_WzYjQzS=[&]() {
    json return_qKzJfxX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_WzYjQzS;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_HGZJrYs=json({});
    return_HGZJrYs=[&]() {
    json return_ogVUOUg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_HGZJrYs;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_uUbUGyI=json({});
    return_uUbUGyI=[&]() {
    json return_nASoRgU=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_uUbUGyI;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_sLhJiif=json({});
    return_sLhJiif=[&]() {
    json return_kzIKiUE=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_sLhJiif;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_VVIfBjN=json({});
    return_VVIfBjN=[&]() {
    json return_BPEcbuL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_VVIfBjN;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_MlCOfri=json({});
    return_MlCOfri=[&]() {
    json return_kUsogwY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_MlCOfri;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_MOkgyFU=json({});
    return_MOkgyFU=[&]() {
    json return_KXsUeuF=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_MOkgyFU;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_GkyxhoX=json({});
    return_GkyxhoX=[&]() {
    json return_MAhnUUs=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_GkyxhoX;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_hAhUIBS=json({});
    return_hAhUIBS=[&]() {
    json return_wUSHUKQ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_hAhUIBS;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_uvwrmKm=json({});
    return_uvwrmKm=[&]() {
    json return_RZyrczb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_uvwrmKm;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_BkMEjRm=json({});
    return_BkMEjRm=[&]() {
    json return_WYzbTyh=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_BkMEjRm;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_kjBGUGM=json({});
    return_kjBGUGM=[&]() {
    json return_rSpKRms=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_kjBGUGM;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductProperties deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(json &name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KMTcNcy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_hJEalvF=json({});
    return_hJEalvF=[&]() {
    json return_OWNtXqa=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_hJEalvF;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_pPYiRax=json({});
    return_pPYiRax=[&]() {
    json return_UmdhmSp=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_pPYiRax;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_jZQlFOl=json({});
    return_jZQlFOl=[&]() {
    json return_yUCALDK=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_jZQlFOl;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_YbYNARd=json({});
    return_YbYNARd=[&]() {
    json return_pgiqzrm=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_YbYNARd;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_JGxjTti=json({});
    return_JGxjTti=[&]() {
    json return_YRapNfA=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_JGxjTti;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_fzndfzs=json({});
    return_fzndfzs=[&]() {
    json return_zRvprTT=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_fzndfzs;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_EkpecnF=json({});
    return_EkpecnF=[&]() {
    json return_kVrYZbn=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_EkpecnF;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_TBqgANl=json({});
    return_TBqgANl=[&]() {
    json return_cJLUsVm=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_TBqgANl;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_blPLJrM=json({});
    return_blPLJrM=[&]() {
    json return_dVaWaAn=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_blPLJrM;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_irVjGxM=json({});
    return_irVjGxM=[&]() {
    json return_MLfsjZu=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_irVjGxM;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_ErISnWG=json({});
    return_ErISnWG=[&]() {
    json return_sAYiYQw=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_ErISnWG;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_FpAztVV=json({});
    return_FpAztVV=[&]() {
    json return_ZUgzFvH=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_FpAztVV;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_eKFGMHx=json({});
    return_eKFGMHx=[&]() {
    json return_tBsBggs=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_eKFGMHx;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_hPIfWvL=json({});
    return_hPIfWvL=[&]() {
    json return_ESGmeSZ=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_hPIfWvL;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_UdXvnWW=json({});
    return_UdXvnWW=[&]() {
    json return_JQLARgY=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_UdXvnWW;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_FGNGMak=json({});
    return_FGNGMak=[&]() {
    json return_tRnIYOj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_FGNGMak;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_AJUenSg=json({});
    return_AJUenSg=[&]() {
    json return_DEYxFPq=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_AJUenSg;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_jleWpKp=json({});
    return_jleWpKp=[&]() {
    json return_YqdXcNl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_jleWpKp;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_WzYjQzS=json({});
    return_WzYjQzS=[&]() {
    json return_qKzJfxX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_WzYjQzS;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_HGZJrYs=json({});
    return_HGZJrYs=[&]() {
    json return_ogVUOUg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_HGZJrYs;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_uUbUGyI=json({});
    return_uUbUGyI=[&]() {
    json return_nASoRgU=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_uUbUGyI;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_sLhJiif=json({});
    return_sLhJiif=[&]() {
    json return_kzIKiUE=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_sLhJiif;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_VVIfBjN=json({});
    return_VVIfBjN=[&]() {
    json return_BPEcbuL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_VVIfBjN;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_MlCOfri=json({});
    return_MlCOfri=[&]() {
    json return_kUsogwY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_MlCOfri;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_MOkgyFU=json({});
    return_MOkgyFU=[&]() {
    json return_KXsUeuF=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_MOkgyFU;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_GkyxhoX=json({});
    return_GkyxhoX=[&]() {
    json return_MAhnUUs=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_GkyxhoX;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_hAhUIBS=json({});
    return_hAhUIBS=[&]() {
    json return_wUSHUKQ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_hAhUIBS;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_uvwrmKm=json({});
    return_uvwrmKm=[&]() {
    json return_RZyrczb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_uvwrmKm;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_BkMEjRm=json({});
    return_BkMEjRm=[&]() {
    json return_WYzbTyh=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_BkMEjRm;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_kjBGUGM=json({});
    return_kjBGUGM=[&]() {
    json return_rSpKRms=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_kjBGUGM;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDrmPropertiesEXT(VkPhysicalDeviceDrmPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CMxthOS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["hasPrimary"]=[&]() {
    json return_ntNzlEy=json({});
    return_ntNzlEy=[&]() {
    json return_xIVQuYw=json({});
    return serialize_uint32_t(name.hasPrimary);}();return return_ntNzlEy;}();
result["members"]["hasRender"]=[&]() {
    json return_huICrMI=json({});
    return_huICrMI=[&]() {
    json return_IvAxBNI=json({});
    return serialize_uint32_t(name.hasRender);}();return return_huICrMI;}();
result["members"]["primaryMajor"]=[&]() {
    json return_ivsWiwZ=json({});
    return serialize_int64_t(name.primaryMajor);}();
result["members"]["primaryMinor"]=[&]() {
    json return_RXlTwbD=json({});
    return serialize_int64_t(name.primaryMinor);}();
result["members"]["renderMajor"]=[&]() {
    json return_jBficHy=json({});
    return serialize_int64_t(name.renderMajor);}();
result["members"]["renderMinor"]=[&]() {
    json return_xLBiNUW=json({});
    return serialize_int64_t(name.renderMinor);}();
return result;}

    VkPhysicalDeviceDrmPropertiesEXT deserialize_VkPhysicalDeviceDrmPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceDrmPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.hasPrimary=deserialize_uint32_t(name["members"]["hasPrimary"]);}();}();
[&]() {
[&]() {
result.hasRender=deserialize_uint32_t(name["members"]["hasRender"]);}();}();
[&]() {
result.primaryMajor=deserialize_int64_t(name["members"]["primaryMajor"]);}();
[&]() {
result.primaryMinor=deserialize_int64_t(name["members"]["primaryMinor"]);}();
[&]() {
result.renderMajor=deserialize_int64_t(name["members"]["renderMajor"]);}();
[&]() {
result.renderMinor=deserialize_int64_t(name["members"]["renderMinor"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ckFjydu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_jHTpPme=json({});
    return_jHTpPme=[&]() {
    json return_UbzENbC=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_jHTpPme;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ckFjydu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_jHTpPme=json({});
    return_jHTpPme=[&]() {
    json return_UbzENbC=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_jHTpPme;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(json &name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VIIOwSv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["triStripVertexOrderIndependentOfProvokingVertex"]=[&]() {
    json return_cBXCOWm=json({});
    return_cBXCOWm=[&]() {
    json return_fkcSnkG=json({});
    return serialize_uint32_t(name.triStripVertexOrderIndependentOfProvokingVertex);}();return return_cBXCOWm;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.triStripVertexOrderIndependentOfProvokingVertex=deserialize_uint32_t(name["members"]["triStripVertexOrderIndependentOfProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ayPQXyR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rayTracingMotionBlur"]=[&]() {
    json return_geUwgUA=json({});
    return_geUwgUA=[&]() {
    json return_IpwSWuK=json({});
    return serialize_uint32_t(name.rayTracingMotionBlur);}();return return_geUwgUA;}();
result["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]=[&]() {
    json return_KemiwMo=json({});
    return_KemiwMo=[&]() {
    json return_xQIBJDY=json({});
    return serialize_uint32_t(name.rayTracingMotionBlurPipelineTraceRaysIndirect);}();return return_KemiwMo;}();
return result;}

    VkPhysicalDeviceRayTracingMotionBlurFeaturesNV deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(json &name){
        auto result=VkPhysicalDeviceRayTracingMotionBlurFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rayTracingMotionBlur=deserialize_uint32_t(name["members"]["rayTracingMotionBlur"]);}();}();
[&]() {
[&]() {
result.rayTracingMotionBlurPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(VkAccelerationStructureGeometryMotionTrianglesDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SvuntKw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DXfRYCc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["vertexData"]=[&]() {
    json return_zbXqbMs=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
return result;}

    VkAccelerationStructureGeometryMotionTrianglesDataNV deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(json &name){
        auto result=VkAccelerationStructureGeometryMotionTrianglesDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_KmUErOG;[&]() {
temp_KmUErOG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_KmUErOG;}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInfoNV(VkAccelerationStructureMotionInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TOrHDiS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQmQJXc=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxInstances"]=[&]() {
    json return_VqAHvgC=json({});
    return serialize_uint32_t(name.maxInstances);}();
result["members"]["flags"]=[&]() {
    json return_aXYjWHa=json({});
    return serialize_VkAccelerationStructureMotionInfoFlagsNV(name.flags);}();
return result;}

    VkAccelerationStructureMotionInfoNV deserialize_VkAccelerationStructureMotionInfoNV(json &name){
        auto result=VkAccelerationStructureMotionInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_AKhkPTS;[&]() {
temp_AKhkPTS=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_AKhkPTS;}();
[&]() {
result.maxInstances=deserialize_uint32_t(name["members"]["maxInstances"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInfoFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkSRTDataNV(VkSRTDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sx"]=[&]() {
    json return_ZneCanL=json({});
    return serialize_float(name.sx);}();
result["members"]["a"]=[&]() {
    json return_LnFJFEk=json({});
    return serialize_float(name.a);}();
result["members"]["b"]=[&]() {
    json return_nHrfiqp=json({});
    return serialize_float(name.b);}();
result["members"]["pvx"]=[&]() {
    json return_uNLfFjO=json({});
    return serialize_float(name.pvx);}();
result["members"]["sy"]=[&]() {
    json return_rKRhCRt=json({});
    return serialize_float(name.sy);}();
result["members"]["c"]=[&]() {
    json return_EIGZCFC=json({});
    return serialize_float(name.c);}();
result["members"]["pvy"]=[&]() {
    json return_kENrwTL=json({});
    return serialize_float(name.pvy);}();
result["members"]["sz"]=[&]() {
    json return_bCMbsVU=json({});
    return serialize_float(name.sz);}();
result["members"]["pvz"]=[&]() {
    json return_auIFAZO=json({});
    return serialize_float(name.pvz);}();
result["members"]["qx"]=[&]() {
    json return_pQsvXXu=json({});
    return serialize_float(name.qx);}();
result["members"]["qy"]=[&]() {
    json return_JiAxciW=json({});
    return serialize_float(name.qy);}();
result["members"]["qz"]=[&]() {
    json return_vutadGg=json({});
    return serialize_float(name.qz);}();
result["members"]["qw"]=[&]() {
    json return_QmmaMAo=json({});
    return serialize_float(name.qw);}();
result["members"]["tx"]=[&]() {
    json return_MKoEuUg=json({});
    return serialize_float(name.tx);}();
result["members"]["ty"]=[&]() {
    json return_SgHbOiR=json({});
    return serialize_float(name.ty);}();
result["members"]["tz"]=[&]() {
    json return_PDWYXRt=json({});
    return serialize_float(name.tz);}();
return result;}

    VkSRTDataNV deserialize_VkSRTDataNV(json &name){
        auto result=VkSRTDataNV();
    
[&]() {
result.sx=deserialize_float(name["members"]["sx"]);}();
[&]() {
result.a=deserialize_float(name["members"]["a"]);}();
[&]() {
result.b=deserialize_float(name["members"]["b"]);}();
[&]() {
result.pvx=deserialize_float(name["members"]["pvx"]);}();
[&]() {
result.sy=deserialize_float(name["members"]["sy"]);}();
[&]() {
result.c=deserialize_float(name["members"]["c"]);}();
[&]() {
result.pvy=deserialize_float(name["members"]["pvy"]);}();
[&]() {
result.sz=deserialize_float(name["members"]["sz"]);}();
[&]() {
result.pvz=deserialize_float(name["members"]["pvz"]);}();
[&]() {
result.qx=deserialize_float(name["members"]["qx"]);}();
[&]() {
result.qy=deserialize_float(name["members"]["qy"]);}();
[&]() {
result.qz=deserialize_float(name["members"]["qz"]);}();
[&]() {
result.qw=deserialize_float(name["members"]["qw"]);}();
[&]() {
result.tx=deserialize_float(name["members"]["tx"]);}();
[&]() {
result.ty=deserialize_float(name["members"]["ty"]);}();
[&]() {
result.tz=deserialize_float(name["members"]["tz"]);}();
return result;}

    json serialize_VkAccelerationStructureSRTMotionInstanceNV(VkAccelerationStructureSRTMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_mpGFUnk=json({});
    return serialize_VkSRTDataNV(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_RCXAdnl=json({});
    return serialize_VkSRTDataNV(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_ndJKzsa=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_jLDoldr=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_zFXVFdt=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_dFjnTie=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_shXScrU=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureSRTMotionInstanceNV deserialize_VkAccelerationStructureSRTMotionInstanceNV(json &name){
        auto result=VkAccelerationStructureSRTMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkSRTDataNV(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkSRTDataNV(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMatrixMotionInstanceNV(VkAccelerationStructureMatrixMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_uDgtwCI=json({});
    return serialize_VkTransformMatrixKHR(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_LOjGXui=json({});
    return serialize_VkTransformMatrixKHR(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_ndJKzsa=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_jLDoldr=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_zFXVFdt=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_dFjnTie=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_shXScrU=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureMatrixMotionInstanceNV deserialize_VkAccelerationStructureMatrixMotionInstanceNV(json &name){
        auto result=VkAccelerationStructureMatrixMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkTransformMatrixKHR(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkTransformMatrixKHR(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureMotionInstanceDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["staticInstance"]=[&]() {
    json return_zNFUjvR=json({});
    return serialize_VkAccelerationStructureInstanceKHR(name.staticInstance);}();
result["members"]["matrixMotionInstance"]=[&]() {
    json return_FCzXgVH=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(name.matrixMotionInstance);}();
result["members"]["srtMotionInstance"]=[&]() {
    json return_ZHFGYgv=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(name.srtMotionInstance);}();
return result;}

    VkAccelerationStructureMotionInstanceDataNV deserialize_VkAccelerationStructureMotionInstanceDataNV(json &name){
        auto result=VkAccelerationStructureMotionInstanceDataNV();
    
[&]() {
result.staticInstance=deserialize_VkAccelerationStructureInstanceKHR(name["members"]["staticInstance"]);}();
[&]() {
result.matrixMotionInstance=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name["members"]["matrixMotionInstance"]);}();
[&]() {
result.srtMotionInstance=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name["members"]["srtMotionInstance"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_clnTdUD=json({});
    return serialize_VkAccelerationStructureMotionInstanceTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_BIZsoJP=json({});
    return serialize_VkAccelerationStructureMotionInstanceFlagsNV(name.flags);}();
result["members"]["data"]=[&]() {
    json return_jrVkzMh=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(name.data);}();
return result;}

    VkAccelerationStructureMotionInstanceNV deserialize_VkAccelerationStructureMotionInstanceNV(json &name){
        auto result=VkAccelerationStructureMotionInstanceNV();
    
[&]() {
result.type=deserialize_VkAccelerationStructureMotionInstanceTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInstanceFlagsNV(name["members"]["flags"]);}();
[&]() {
result.data=deserialize_VkAccelerationStructureMotionInstanceDataNV(name["members"]["data"]);}();
return result;}

    json serialize_VkMemoryGetRemoteAddressInfoNV(VkMemoryGetRemoteAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QCljFkC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["memory"]=[&]() {
    json return_YTWTGBr=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_oXWuimY=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetRemoteAddressInfoNV deserialize_VkMemoryGetRemoteAddressInfoNV(json &name){
        auto result=VkMemoryGetRemoteAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RufMguh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["formatRgba10x6WithoutYCbCrSampler"]=[&]() {
    json return_yqPZvdO=json({});
    return_yqPZvdO=[&]() {
    json return_KWvQwBH=json({});
    return serialize_uint32_t(name.formatRgba10x6WithoutYCbCrSampler);}();return return_yqPZvdO;}();
return result;}

    VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.formatRgba10x6WithoutYCbCrSampler=deserialize_uint32_t(name["members"]["formatRgba10x6WithoutYCbCrSampler"]);}();}();
return result;}

    json serialize_VkFormatProperties3(VkFormatProperties3 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LGdFiQo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_RwWTMHQ=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_DPnKUdj=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_uSmhjtt=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3 deserialize_VkFormatProperties3(json &name){
        auto result=VkFormatProperties3();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkFormatProperties3KHR(VkFormatProperties3KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LGdFiQo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_RwWTMHQ=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_DPnKUdj=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_uSmhjtt=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3KHR deserialize_VkFormatProperties3KHR(json &name){
        auto result=VkFormatProperties3KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesList2EXT(VkDrmFormatModifierPropertiesList2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qwicGVk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_KtRQVzW=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_mGgPIbZ=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_mGgPIbZ["null"]=true;
            return return_mGgPIbZ;
        }
        
        return_mGgPIbZ["members"]={};
        for(int mGgPIbZ=0; mGgPIbZ < name.drmFormatModifierCount; mGgPIbZ++){
            json temp;
            temp=[&]() {
    json return_bENoriJ=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(name.pDrmFormatModifierProperties[mGgPIbZ]);}();
            return_mGgPIbZ["members"].push_back(temp);
        }
        return return_mGgPIbZ;
        }();
return result;}

    VkDrmFormatModifierPropertiesList2EXT deserialize_VkDrmFormatModifierPropertiesList2EXT(json &name){
        auto result=VkDrmFormatModifierPropertiesList2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        return;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierProperties2EXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierProperties2EXT));
        for (int yOtKFYo=0; yOtKFYo < result.drmFormatModifierCount; yOtKFYo++){
            [&]() {
result.pDrmFormatModifierProperties[yOtKFYo]=deserialize_VkDrmFormatModifierProperties2EXT(name["members"]["pDrmFormatModifierProperties"]["members"][yOtKFYo]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierProperties2EXT(VkDrmFormatModifierProperties2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_SPojzaJ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_WdqXpuS=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_zBbzxkP=json({});
    return serialize_VkFormatFeatureFlags2(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierProperties2EXT deserialize_VkDrmFormatModifierProperties2EXT(json &name){
        auto result=VkDrmFormatModifierProperties2EXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfo(VkPipelineRenderingCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MNvLpza=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["viewMask"]=[&]() {
    json return_DcMPGJc=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HrPhXdI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_eDQlBIF=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_eDQlBIF["null"]=true;
            return return_eDQlBIF;
        }
        
        return_eDQlBIF["members"]={};
        for(int eDQlBIF=0; eDQlBIF < name.colorAttachmentCount; eDQlBIF++){
            json temp;
            temp=[&]() {
    json return_SqnnrVh=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[eDQlBIF]);}();
            return_eDQlBIF["members"].push_back(temp);
        }
        return return_eDQlBIF;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_iyWBfkf=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_pXECKtz=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfo deserialize_VkPipelineRenderingCreateInfo(json &name){
        auto result=VkPipelineRenderingCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_zCgQows;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_zCgQows=NULL;
        return;
        }
    temp_zCgQows=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int gLBJtAT=0; gLBJtAT < result.colorAttachmentCount; gLBJtAT++){
            [&]() {
temp_zCgQows[gLBJtAT]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][gLBJtAT]);}();;
        }
        }();result.pColorAttachmentFormats=temp_zCgQows;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfoKHR(VkPipelineRenderingCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MNvLpza=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["viewMask"]=[&]() {
    json return_DcMPGJc=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HrPhXdI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_eDQlBIF=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_eDQlBIF["null"]=true;
            return return_eDQlBIF;
        }
        
        return_eDQlBIF["members"]={};
        for(int eDQlBIF=0; eDQlBIF < name.colorAttachmentCount; eDQlBIF++){
            json temp;
            temp=[&]() {
    json return_SqnnrVh=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[eDQlBIF]);}();
            return_eDQlBIF["members"].push_back(temp);
        }
        return return_eDQlBIF;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_iyWBfkf=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_pXECKtz=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfoKHR deserialize_VkPipelineRenderingCreateInfoKHR(json &name){
        auto result=VkPipelineRenderingCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_zCgQows;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_zCgQows=NULL;
        return;
        }
    temp_zCgQows=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int gLBJtAT=0; gLBJtAT < result.colorAttachmentCount; gLBJtAT++){
            [&]() {
temp_zCgQows[gLBJtAT]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][gLBJtAT]);}();;
        }
        }();result.pColorAttachmentFormats=temp_zCgQows;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkRenderingInfo(VkRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oRAhAtr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_bwZpgsJ=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_QvVeqBe=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_PJYCKmz=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_DcMPGJc=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HrPhXdI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_BHfVEKu=json({});
    
        if (name.pColorAttachments==NULL){
            return_BHfVEKu["null"]=true;
            return return_BHfVEKu;
        }
        
        return_BHfVEKu["members"]={};
        for(int BHfVEKu=0; BHfVEKu < name.colorAttachmentCount; BHfVEKu++){
            json temp;
            temp=[&]() {
    json return_XvixvgU=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[BHfVEKu]);}();
            return_BHfVEKu["members"].push_back(temp);
        }
        return return_BHfVEKu;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_nOKFRgF=json({});
    
        if (name.pDepthAttachment==NULL){
            return_nOKFRgF["null"]=true;
            return return_nOKFRgF;
        }
        return_nOKFRgF=[&]() {
    json return_THbMMUx=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_nOKFRgF;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_CLpHeGp=json({});
    
        if (name.pStencilAttachment==NULL){
            return_CLpHeGp["null"]=true;
            return return_CLpHeGp;
        }
        return_CLpHeGp=[&]() {
    json return_EuAAEIh=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_CLpHeGp;}();
return result;}

    VkRenderingInfo deserialize_VkRenderingInfo(json &name){
        auto result=VkRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_uyVNSQT;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_uyVNSQT=NULL;
        return;
        }
    temp_uyVNSQT=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int lUeLgZU=0; lUeLgZU < result.colorAttachmentCount; lUeLgZU++){
            [&]() {
temp_uyVNSQT[lUeLgZU]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][lUeLgZU]);}();;
        }
        }();result.pColorAttachments=temp_uyVNSQT;}();
[&]() {
VkRenderingAttachmentInfo* temp_cagfUHO;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_cagfUHO=NULL;
        return;
        }
    temp_cagfUHO=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_cagfUHO)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_cagfUHO;}();
[&]() {
VkRenderingAttachmentInfo* temp_gLtdHth;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_gLtdHth=NULL;
        return;
        }
    temp_gLtdHth=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_gLtdHth)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_gLtdHth;}();
return result;}

    json serialize_VkRenderingInfoKHR(VkRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oRAhAtr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_bwZpgsJ=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_QvVeqBe=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_PJYCKmz=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_DcMPGJc=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HrPhXdI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_BHfVEKu=json({});
    
        if (name.pColorAttachments==NULL){
            return_BHfVEKu["null"]=true;
            return return_BHfVEKu;
        }
        
        return_BHfVEKu["members"]={};
        for(int BHfVEKu=0; BHfVEKu < name.colorAttachmentCount; BHfVEKu++){
            json temp;
            temp=[&]() {
    json return_XvixvgU=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[BHfVEKu]);}();
            return_BHfVEKu["members"].push_back(temp);
        }
        return return_BHfVEKu;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_nOKFRgF=json({});
    
        if (name.pDepthAttachment==NULL){
            return_nOKFRgF["null"]=true;
            return return_nOKFRgF;
        }
        return_nOKFRgF=[&]() {
    json return_THbMMUx=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_nOKFRgF;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_CLpHeGp=json({});
    
        if (name.pStencilAttachment==NULL){
            return_CLpHeGp["null"]=true;
            return return_CLpHeGp;
        }
        return_CLpHeGp=[&]() {
    json return_EuAAEIh=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_CLpHeGp;}();
return result;}

    VkRenderingInfoKHR deserialize_VkRenderingInfoKHR(json &name){
        auto result=VkRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_uyVNSQT;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_uyVNSQT=NULL;
        return;
        }
    temp_uyVNSQT=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int lUeLgZU=0; lUeLgZU < result.colorAttachmentCount; lUeLgZU++){
            [&]() {
temp_uyVNSQT[lUeLgZU]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][lUeLgZU]);}();;
        }
        }();result.pColorAttachments=temp_uyVNSQT;}();
[&]() {
VkRenderingAttachmentInfo* temp_cagfUHO;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_cagfUHO=NULL;
        return;
        }
    temp_cagfUHO=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_cagfUHO)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_cagfUHO;}();
[&]() {
VkRenderingAttachmentInfo* temp_gLtdHth;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_gLtdHth=NULL;
        return;
        }
    temp_gLtdHth=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_gLtdHth)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_gLtdHth;}();
return result;}

    json serialize_VkRenderingAttachmentInfo(VkRenderingAttachmentInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lMnHQyl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageView"]=[&]() {
    json return_bMOcSQG=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_HpcGnvg=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_zaQRzML=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_UyKwIaE=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_JJhDaYs=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_whzKiUL=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_WnceWeA=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_umbOYDp=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfo deserialize_VkRenderingAttachmentInfo(json &name){
        auto result=VkRenderingAttachmentInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingAttachmentInfoKHR(VkRenderingAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lMnHQyl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageView"]=[&]() {
    json return_bMOcSQG=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_HpcGnvg=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_zaQRzML=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_UyKwIaE=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_JJhDaYs=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_whzKiUL=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_WnceWeA=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_umbOYDp=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfoKHR deserialize_VkRenderingAttachmentInfoKHR(json &name){
        auto result=VkRenderingAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(VkRenderingFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vaNiKje=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ngrxQZw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageView"]=[&]() {
    json return_bMOcSQG=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_HpcGnvg=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_SlJdZeA=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkRenderingFragmentShadingRateAttachmentInfoKHR deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(json &name){
        auto result=VkRenderingFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_qRPBhxj;[&]() {
temp_qRPBhxj=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_qRPBhxj;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(VkRenderingFragmentDensityMapAttachmentInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lnivZiP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageView"]=[&]() {
    json return_DpZNsVl=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_JOdPYJi=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkRenderingFragmentDensityMapAttachmentInfoEXT deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(json &name){
        auto result=VkRenderingFragmentDensityMapAttachmentInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeatures(VkPhysicalDeviceDynamicRenderingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oOtRRto=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uSHLIBr=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dynamicRendering"]=[&]() {
    json return_SoGiZOQ=json({});
    return_SoGiZOQ=[&]() {
    json return_cUsBgEM=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_SoGiZOQ;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeatures deserialize_VkPhysicalDeviceDynamicRenderingFeatures(json &name){
        auto result=VkPhysicalDeviceDynamicRenderingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(VkPhysicalDeviceDynamicRenderingFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oOtRRto=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uSHLIBr=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dynamicRendering"]=[&]() {
    json return_SoGiZOQ=json({});
    return_SoGiZOQ=[&]() {
    json return_cUsBgEM=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_SoGiZOQ;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeaturesKHR deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceDynamicRenderingFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfo(VkCommandBufferInheritanceRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qFVwZgJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_bwZpgsJ=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_DcMPGJc=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_PTDHmXi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_ZaqGhTa=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_ZaqGhTa["null"]=true;
            return return_ZaqGhTa;
        }
        
        return_ZaqGhTa["members"]={};
        for(int ZaqGhTa=0; ZaqGhTa < name.colorAttachmentCount; ZaqGhTa++){
            json temp;
            temp=[&]() {
    json return_YHopvrA=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[ZaqGhTa]);}();
            return_ZaqGhTa["members"].push_back(temp);
        }
        return return_ZaqGhTa;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_TWlCNHB=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_uegrJcE=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_OhLngau=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfo deserialize_VkCommandBufferInheritanceRenderingInfo(json &name){
        auto result=VkCommandBufferInheritanceRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_JHUtCWO;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_JHUtCWO=NULL;
        return;
        }
    temp_JHUtCWO=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int QWshGju=0; QWshGju < result.colorAttachmentCount; QWshGju++){
            [&]() {
temp_JHUtCWO[QWshGju]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][QWshGju]);}();;
        }
        }();result.pColorAttachmentFormats=temp_JHUtCWO;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfoKHR(VkCommandBufferInheritanceRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qFVwZgJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_bwZpgsJ=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_DcMPGJc=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_PTDHmXi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_ZaqGhTa=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_ZaqGhTa["null"]=true;
            return return_ZaqGhTa;
        }
        
        return_ZaqGhTa["members"]={};
        for(int ZaqGhTa=0; ZaqGhTa < name.colorAttachmentCount; ZaqGhTa++){
            json temp;
            temp=[&]() {
    json return_YHopvrA=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[ZaqGhTa]);}();
            return_ZaqGhTa["members"].push_back(temp);
        }
        return return_ZaqGhTa;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_TWlCNHB=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_uegrJcE=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_OhLngau=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfoKHR deserialize_VkCommandBufferInheritanceRenderingInfoKHR(json &name){
        auto result=VkCommandBufferInheritanceRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_JHUtCWO;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_JHUtCWO=NULL;
        return;
        }
    temp_JHUtCWO=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int QWshGju=0; QWshGju < result.colorAttachmentCount; QWshGju++){
            [&]() {
temp_JHUtCWO[QWshGju]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][QWshGju]);}();;
        }
        }();result.pColorAttachmentFormats=temp_JHUtCWO;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoAMD(VkAttachmentSampleCountInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LWSTDXt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HrPhXdI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_Lwthpar=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_Lwthpar["null"]=true;
            return return_Lwthpar;
        }
        
        return_Lwthpar["members"]={};
        for(int Lwthpar=0; Lwthpar < name.colorAttachmentCount; Lwthpar++){
            json temp;
            temp=[&]() {
    json return_ZcVJdkG=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[Lwthpar]);}();
            return_Lwthpar["members"].push_back(temp);
        }
        return return_Lwthpar;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_GKUPlFy=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoAMD deserialize_VkAttachmentSampleCountInfoAMD(json &name){
        auto result=VkAttachmentSampleCountInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_LHJdTCA;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_LHJdTCA=NULL;
        return;
        }
    temp_LHJdTCA=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int HOJCpVh=0; HOJCpVh < result.colorAttachmentCount; HOJCpVh++){
            [&]() {
temp_LHJdTCA[HOJCpVh]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][HOJCpVh]);}();;
        }
        }();result.pColorAttachmentSamples=temp_LHJdTCA;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoNV(VkAttachmentSampleCountInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LWSTDXt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfFngYT=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HrPhXdI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_Lwthpar=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_Lwthpar["null"]=true;
            return return_Lwthpar;
        }
        
        return_Lwthpar["members"]={};
        for(int Lwthpar=0; Lwthpar < name.colorAttachmentCount; Lwthpar++){
            json temp;
            temp=[&]() {
    json return_ZcVJdkG=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[Lwthpar]);}();
            return_Lwthpar["members"].push_back(temp);
        }
        return return_Lwthpar;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_GKUPlFy=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoNV deserialize_VkAttachmentSampleCountInfoNV(json &name){
        auto result=VkAttachmentSampleCountInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_unNbVLC;[&]() {
temp_unNbVLC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_unNbVLC;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_LHJdTCA;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_LHJdTCA=NULL;
        return;
        }
    temp_LHJdTCA=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int HOJCpVh=0; HOJCpVh < result.colorAttachmentCount; HOJCpVh++){
            [&]() {
temp_LHJdTCA[HOJCpVh]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][HOJCpVh]);}();;
        }
        }();result.pColorAttachmentSamples=temp_LHJdTCA;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkMultiviewPerViewAttributesInfoNVX(VkMultiviewPerViewAttributesInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uvNYdMn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["perViewAttributes"]=[&]() {
    json return_jjbvDdt=json({});
    return_jjbvDdt=[&]() {
    json return_HXgWsDq=json({});
    return serialize_uint32_t(name.perViewAttributes);}();return return_jjbvDdt;}();
result["members"]["perViewAttributesPositionXOnly"]=[&]() {
    json return_EEUMgkI=json({});
    return_EEUMgkI=[&]() {
    json return_rUCKllb=json({});
    return serialize_uint32_t(name.perViewAttributesPositionXOnly);}();return return_EEUMgkI;}();
return result;}

    VkMultiviewPerViewAttributesInfoNVX deserialize_VkMultiviewPerViewAttributesInfoNVX(json &name){
        auto result=VkMultiviewPerViewAttributesInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
[&]() {
result.perViewAttributes=deserialize_uint32_t(name["members"]["perViewAttributes"]);}();}();
[&]() {
[&]() {
result.perViewAttributesPositionXOnly=deserialize_uint32_t(name["members"]["perViewAttributesPositionXOnly"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(VkPhysicalDeviceImageViewMinLodFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lHnOSDk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minLod"]=[&]() {
    json return_HTHnqNq=json({});
    return_HTHnqNq=[&]() {
    json return_rPBDSta=json({});
    return serialize_uint32_t(name.minLod);}();return return_HTHnqNq;}();
return result;}

    VkPhysicalDeviceImageViewMinLodFeaturesEXT deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceImageViewMinLodFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.minLod=deserialize_uint32_t(name["members"]["minLod"]);}();}();
return result;}

    json serialize_VkImageViewMinLodCreateInfoEXT(VkImageViewMinLodCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MFCOCyE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["minLod"]=[&]() {
    json return_vlgcGzr=json({});
    return serialize_float(name.minLod);}();
return result;}

    VkImageViewMinLodCreateInfoEXT deserialize_VkImageViewMinLodCreateInfoEXT(json &name){
        auto result=VkImageViewMinLodCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qRBeRJs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_iWtTQFr=json({});
    return_iWtTQFr=[&]() {
    json return_yjYuzKo=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_iWtTQFr;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_zlksYMq=json({});
    return_zlksYMq=[&]() {
    json return_GhVHnpI=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_zlksYMq;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_HhxDMEN=json({});
    return_HhxDMEN=[&]() {
    json return_OtGYYtr=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_HhxDMEN;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qRBeRJs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_iWtTQFr=json({});
    return_iWtTQFr=[&]() {
    json return_yjYuzKo=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_iWtTQFr;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_zlksYMq=json({});
    return_zlksYMq=[&]() {
    json return_GhVHnpI=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_zlksYMq;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_HhxDMEN=json({});
    return_HhxDMEN=[&]() {
    json return_OtGYYtr=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_HhxDMEN;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(json &name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(VkPhysicalDeviceLinearColorAttachmentFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YzuIxXg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["linearColorAttachment"]=[&]() {
    json return_QlGikma=json({});
    return_QlGikma=[&]() {
    json return_QtrsHnA=json({});
    return serialize_uint32_t(name.linearColorAttachment);}();return return_QlGikma;}();
return result;}

    VkPhysicalDeviceLinearColorAttachmentFeaturesNV deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(json &name){
        auto result=VkPhysicalDeviceLinearColorAttachmentFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.linearColorAttachment=deserialize_uint32_t(name["members"]["linearColorAttachment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fGdFOVO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["graphicsPipelineLibrary"]=[&]() {
    json return_PUWIHMn=json({});
    return_PUWIHMn=[&]() {
    json return_vineyBi=json({});
    return serialize_uint32_t(name.graphicsPipelineLibrary);}();return return_PUWIHMn;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.graphicsPipelineLibrary=deserialize_uint32_t(name["members"]["graphicsPipelineLibrary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BccMuoF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["graphicsPipelineLibraryFastLinking"]=[&]() {
    json return_ScqegEd=json({});
    return_ScqegEd=[&]() {
    json return_siWnKiM=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryFastLinking);}();return return_ScqegEd;}();
result["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]=[&]() {
    json return_ezbKSUv=json({});
    return_ezbKSUv=[&]() {
    json return_YyjLyGx=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryIndependentInterpolationDecoration);}();return return_ezbKSUv;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.graphicsPipelineLibraryFastLinking=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryFastLinking"]);}();}();
[&]() {
[&]() {
result.graphicsPipelineLibraryIndependentInterpolationDecoration=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]);}();}();
return result;}

    json serialize_VkGraphicsPipelineLibraryCreateInfoEXT(VkGraphicsPipelineLibraryCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fuZvBHu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mAFOLKf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_MHqxpHl=json({});
    return serialize_VkGraphicsPipelineLibraryFlagsEXT(name.flags);}();
return result;}

    VkGraphicsPipelineLibraryCreateInfoEXT deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(json &name){
        auto result=VkGraphicsPipelineLibraryCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_LthbfsD;[&]() {
temp_LthbfsD=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_LthbfsD;}();
[&]() {
result.flags=deserialize_VkGraphicsPipelineLibraryFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ibyojPl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_saXKkvN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorSetHostMapping"]=[&]() {
    json return_wzcDZih=json({});
    return_wzcDZih=[&]() {
    json return_AeJSsVz=json({});
    return serialize_uint32_t(name.descriptorSetHostMapping);}();return return_wzcDZih;}();
return result;}

    VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(json &name){
        auto result=VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.descriptorSetHostMapping=deserialize_uint32_t(name["members"]["descriptorSetHostMapping"]);}();}();
return result;}

    json serialize_VkDescriptorSetBindingReferenceVALVE(VkDescriptorSetBindingReferenceVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BYjlfmg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DTnQGEG=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_jRaRDjO=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["binding"]=[&]() {
    json return_NTZrKzH=json({});
    return serialize_uint32_t(name.binding);}();
return result;}

    VkDescriptorSetBindingReferenceVALVE deserialize_VkDescriptorSetBindingReferenceVALVE(json &name){
        auto result=VkDescriptorSetBindingReferenceVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_PnRMIUw;[&]() {
temp_PnRMIUw=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_PnRMIUw;}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(VkDescriptorSetLayoutHostMappingInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lsLcwjm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rmsApSw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorOffset"]=[&]() {
    json return_ARLDLjL=json({});
    return serialize_size_t(name.descriptorOffset);}();
result["members"]["descriptorSize"]=[&]() {
    json return_dAkgaXq=json({});
    return serialize_uint32_t(name.descriptorSize);}();
return result;}

    VkDescriptorSetLayoutHostMappingInfoVALVE deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(json &name){
        auto result=VkDescriptorSetLayoutHostMappingInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.descriptorOffset=deserialize_size_t(name["members"]["descriptorOffset"]);}();
[&]() {
result.descriptorSize=deserialize_uint32_t(name["members"]["descriptorSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OkAaqxy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZxpTQOn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderModuleIdentifier"]=[&]() {
    json return_FkEYJHS=json({});
    return_FkEYJHS=[&]() {
    json return_tBPePqR=json({});
    return serialize_uint32_t(name.shaderModuleIdentifier);}();return return_FkEYJHS;}();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderModuleIdentifier=deserialize_uint32_t(name["members"]["shaderModuleIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CgmteEM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderModuleIdentifierAlgorithmUUID"]=[&]() {
    json return_hWOfHXe=json({});
    
        return_hWOfHXe["members"]={};
        for(int hWOfHXe=0; hWOfHXe < VK_UUID_SIZE; hWOfHXe++){
            json temp;
            temp=[&]() {
    json return_ZOruvAX=json({});
    return serialize_uint8_t(name.shaderModuleIdentifierAlgorithmUUID[hWOfHXe]);}();
            return_hWOfHXe["members"].push_back(temp);
        }
        return return_hWOfHXe;
        }();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int uJohGtP=0; uJohGtP < VK_UUID_SIZE; uJohGtP++){
            [&]() {
result.shaderModuleIdentifierAlgorithmUUID[uJohGtP]=deserialize_uint8_t(name["members"]["shaderModuleIdentifierAlgorithmUUID"]["members"][uJohGtP]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(VkPipelineShaderStageModuleIdentifierCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vJrTHNU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["identifierSize"]=[&]() {
    json return_QbxcJoG=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["pIdentifier"]=[&]() {
    json return_tPcbPCT=json({});
    
        if (name.pIdentifier==NULL){
            return_tPcbPCT["null"]=true;
            return return_tPcbPCT;
        }
        
        return_tPcbPCT["members"]={};
        for(int tPcbPCT=0; tPcbPCT < name.identifierSize; tPcbPCT++){
            json temp;
            temp=[&]() {
    json return_wJQzABi=json({});
    return serialize_uint8_t(name.pIdentifier[tPcbPCT]);}();
            return_tPcbPCT["members"].push_back(temp);
        }
        return return_tPcbPCT;
        }();
return result;}

    VkPipelineShaderStageModuleIdentifierCreateInfoEXT deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(json &name){
        auto result=VkPipelineShaderStageModuleIdentifierCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {
uint8_t* temp_VPDpgmi;[&]() {

        if (name["members"]["pIdentifier"].contains("null")){
        temp_VPDpgmi=NULL;
        return;
        }
    temp_VPDpgmi=(uint8_t*)malloc(result.identifierSize*sizeof(uint8_t));
        for (int jLwcxKU=0; jLwcxKU < result.identifierSize; jLwcxKU++){
            [&]() {
temp_VPDpgmi[jLwcxKU]=deserialize_uint8_t(name["members"]["pIdentifier"]["members"][jLwcxKU]);}();;
        }
        }();result.pIdentifier=temp_VPDpgmi;}();
return result;}

    json serialize_VkShaderModuleIdentifierEXT(VkShaderModuleIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_glnzqUK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JxLibiQ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["identifierSize"]=[&]() {
    json return_gKuEDnP=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["identifier"]=[&]() {
    json return_YnOxUhd=json({});
    
        return_YnOxUhd["members"]={};
        for(int YnOxUhd=0; YnOxUhd < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; YnOxUhd++){
            json temp;
            temp=[&]() {
    json return_GnOhbMW=json({});
    return serialize_uint8_t(name.identifier[YnOxUhd]);}();
            return_YnOxUhd["members"].push_back(temp);
        }
        return return_YnOxUhd;
        }();
return result;}

    VkShaderModuleIdentifierEXT deserialize_VkShaderModuleIdentifierEXT(json &name){
        auto result=VkShaderModuleIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {

        for (int YzRNTsL=0; YzRNTsL < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; YzRNTsL++){
            [&]() {
result.identifier[YzRNTsL]=deserialize_uint8_t(name["members"]["identifier"]["members"][YzRNTsL]);}();;
        }
        }();
return result;}

    json serialize_VkImageCompressionControlEXT(VkImageCompressionControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yyaGOtY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_IDMaHUx=json({});
    return serialize_VkImageCompressionFlagsEXT(name.flags);}();
result["members"]["compressionControlPlaneCount"]=[&]() {
    json return_TYLWBjC=json({});
    return serialize_uint32_t(name.compressionControlPlaneCount);}();
result["members"]["pFixedRateFlags"]=[&]() {
    json return_IPDwzwU=json({});
    
        if (name.pFixedRateFlags==NULL){
            return_IPDwzwU["null"]=true;
            return return_IPDwzwU;
        }
        
        return_IPDwzwU["members"]={};
        for(int IPDwzwU=0; IPDwzwU < name.compressionControlPlaneCount; IPDwzwU++){
            json temp;
            temp=[&]() {
    json return_BghOPGV=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.pFixedRateFlags[IPDwzwU]);}();
            return_IPDwzwU["members"].push_back(temp);
        }
        return return_IPDwzwU;
        }();
return result;}

    VkImageCompressionControlEXT deserialize_VkImageCompressionControlEXT(json &name){
        auto result=VkImageCompressionControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.flags=deserialize_VkImageCompressionFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.compressionControlPlaneCount=deserialize_uint32_t(name["members"]["compressionControlPlaneCount"]);}();
[&]() {

        if (name["members"]["pFixedRateFlags"].contains("null")){
        result.pFixedRateFlags=NULL;
        return;
        }
    result.pFixedRateFlags=(VkImageCompressionFixedRateFlagsEXT*)malloc(result.compressionControlPlaneCount*sizeof(VkImageCompressionFixedRateFlagsEXT));
        for (int jgpImzr=0; jgpImzr < result.compressionControlPlaneCount; jgpImzr++){
            [&]() {
result.pFixedRateFlags[jgpImzr]=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["pFixedRateFlags"]["members"][jgpImzr]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkPhysicalDeviceImageCompressionControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HZvGtdT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageCompressionControl"]=[&]() {
    json return_mGubsVF=json({});
    return_mGubsVF=[&]() {
    json return_TFRhYte=json({});
    return serialize_uint32_t(name.imageCompressionControl);}();return return_mGubsVF;}();
return result;}

    VkPhysicalDeviceImageCompressionControlFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceImageCompressionControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.imageCompressionControl=deserialize_uint32_t(name["members"]["imageCompressionControl"]);}();}();
return result;}

    json serialize_VkImageCompressionPropertiesEXT(VkImageCompressionPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_opBUXko=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oGlMzHW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageCompressionFlags"]=[&]() {
    json return_DTXnGbU=json({});
    return serialize_VkImageCompressionFlagsEXT(name.imageCompressionFlags);}();
result["members"]["imageCompressionFixedRateFlags"]=[&]() {
    json return_qqjTZQC=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.imageCompressionFixedRateFlags);}();
return result;}

    VkImageCompressionPropertiesEXT deserialize_VkImageCompressionPropertiesEXT(json &name){
        auto result=VkImageCompressionPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.imageCompressionFlags=deserialize_VkImageCompressionFlagsEXT(name["members"]["imageCompressionFlags"]);}();
[&]() {
result.imageCompressionFixedRateFlags=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["imageCompressionFixedRateFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XUzOHQl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageCompressionControlSwapchain"]=[&]() {
    json return_KmIxgzd=json({});
    return_KmIxgzd=[&]() {
    json return_zVtJBsZ=json({});
    return serialize_uint32_t(name.imageCompressionControlSwapchain);}();return return_KmIxgzd;}();
return result;}

    VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.imageCompressionControlSwapchain=deserialize_uint32_t(name["members"]["imageCompressionControlSwapchain"]);}();}();
return result;}

    json serialize_VkImageSubresource2KHR(VkImageSubresource2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WqtzgBo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageSubresource"]=[&]() {
    json return_qWOOnZw=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2KHR deserialize_VkImageSubresource2KHR(json &name){
        auto result=VkImageSubresource2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkImageSubresource2EXT(VkImageSubresource2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WqtzgBo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["imageSubresource"]=[&]() {
    json return_qWOOnZw=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2EXT deserialize_VkImageSubresource2EXT(json &name){
        auto result=VkImageSubresource2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkSubresourceLayout2KHR(VkSubresourceLayout2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yjiGFWn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subresourceLayout"]=[&]() {
    json return_wnypqdE=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2KHR deserialize_VkSubresourceLayout2KHR(json &name){
        auto result=VkSubresourceLayout2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout2EXT(VkSubresourceLayout2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yjiGFWn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUxrfVn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subresourceLayout"]=[&]() {
    json return_wnypqdE=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2EXT deserialize_VkSubresourceLayout2EXT(json &name){
        auto result=VkSubresourceLayout2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkRenderPassCreationControlEXT(VkRenderPassCreationControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_buZeDkP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_apkwzTX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["disallowMerging"]=[&]() {
    json return_ymFZJKY=json({});
    return_ymFZJKY=[&]() {
    json return_JgZnosN=json({});
    return serialize_uint32_t(name.disallowMerging);}();return return_ymFZJKY;}();
return result;}

    VkRenderPassCreationControlEXT deserialize_VkRenderPassCreationControlEXT(json &name){
        auto result=VkRenderPassCreationControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_zuLQiLL;[&]() {
temp_zuLQiLL=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_zuLQiLL;}();
[&]() {
[&]() {
result.disallowMerging=deserialize_uint32_t(name["members"]["disallowMerging"]);}();}();
return result;}

    json serialize_VkRenderPassCreationFeedbackInfoEXT(VkRenderPassCreationFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["postMergeSubpassCount"]=[&]() {
    json return_pqlxDbw=json({});
    return serialize_uint32_t(name.postMergeSubpassCount);}();
return result;}

    VkRenderPassCreationFeedbackInfoEXT deserialize_VkRenderPassCreationFeedbackInfoEXT(json &name){
        auto result=VkRenderPassCreationFeedbackInfoEXT();
    
[&]() {
result.postMergeSubpassCount=deserialize_uint32_t(name["members"]["postMergeSubpassCount"]);}();
return result;}

    json serialize_VkRenderPassCreationFeedbackCreateInfoEXT(VkRenderPassCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lXXwUHi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zqldZgo=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pRenderPassFeedback"]=[&]() {
    json return_pyWpUhk=json({});
    
        if (name.pRenderPassFeedback==NULL){
            return_pyWpUhk["null"]=true;
            return return_pyWpUhk;
        }
        return_pyWpUhk=[&]() {
    json return_oMYXkYg=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*name.pRenderPassFeedback);}();
return return_pyWpUhk;}();
return result;}

    VkRenderPassCreationFeedbackCreateInfoEXT deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(json &name){
        auto result=VkRenderPassCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SGMcpZN;[&]() {
temp_SGMcpZN=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SGMcpZN;}();
[&]() {

        if (name["members"]["pRenderPassFeedback"].contains("null")){
        result.pRenderPassFeedback=NULL;
        return;
        }
    result.pRenderPassFeedback=(VkRenderPassCreationFeedbackInfoEXT*)malloc(sizeof(VkRenderPassCreationFeedbackInfoEXT));
[&]() {
*(result.pRenderPassFeedback)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name["members"]["pRenderPassFeedback"]);}();
}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackInfoEXT(VkRenderPassSubpassFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassMergeStatus"]=[&]() {
    json return_vcYsCdY=json({});
    return serialize_VkSubpassMergeStatusEXT(name.subpassMergeStatus);}();
result["members"]["description"]=[&]() {
    json return_xTMrFba=json({});
    
        return_xTMrFba["members"]={};
        for(int xTMrFba=0; xTMrFba < VK_MAX_DESCRIPTION_SIZE; xTMrFba++){
            json temp;
            temp=[&]() {
    json return_cbxwIut=json({});
    return serialize_char(name.description[xTMrFba]);}();
            return_xTMrFba["members"].push_back(temp);
        }
        return return_xTMrFba;
        }();
result["members"]["postMergeIndex"]=[&]() {
    json return_atGpxQD=json({});
    return serialize_uint32_t(name.postMergeIndex);}();
return result;}

    VkRenderPassSubpassFeedbackInfoEXT deserialize_VkRenderPassSubpassFeedbackInfoEXT(json &name){
        auto result=VkRenderPassSubpassFeedbackInfoEXT();
    
[&]() {
result.subpassMergeStatus=deserialize_VkSubpassMergeStatusEXT(name["members"]["subpassMergeStatus"]);}();
[&]() {

        for (int uwKudYj=0; uwKudYj < VK_MAX_DESCRIPTION_SIZE; uwKudYj++){
            [&]() {
result.description[uwKudYj]=deserialize_char(name["members"]["description"]["members"][uwKudYj]);}();;
        }
        }();
[&]() {
result.postMergeIndex=deserialize_uint32_t(name["members"]["postMergeIndex"]);}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(VkRenderPassSubpassFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_blirbLc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zzMCWOP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pSubpassFeedback"]=[&]() {
    json return_oLADpjv=json({});
    
        if (name.pSubpassFeedback==NULL){
            return_oLADpjv["null"]=true;
            return return_oLADpjv;
        }
        return_oLADpjv=[&]() {
    json return_FRGCIyh=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*name.pSubpassFeedback);}();
return return_oLADpjv;}();
return result;}

    VkRenderPassSubpassFeedbackCreateInfoEXT deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(json &name){
        auto result=VkRenderPassSubpassFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_YGCZsOQ;[&]() {
temp_YGCZsOQ=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_YGCZsOQ;}();
[&]() {

        if (name["members"]["pSubpassFeedback"].contains("null")){
        result.pSubpassFeedback=NULL;
        return;
        }
    result.pSubpassFeedback=(VkRenderPassSubpassFeedbackInfoEXT*)malloc(sizeof(VkRenderPassSubpassFeedbackInfoEXT));
[&]() {
*(result.pSubpassFeedback)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name["members"]["pSubpassFeedback"]);}();
}();
return result;}

    json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qhyAHWl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OvgoGuB=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["subpassMergeFeedback"]=[&]() {
    json return_OBdafrd=json({});
    return_OBdafrd=[&]() {
    json return_GnDtUCB=json({});
    return serialize_uint32_t(name.subpassMergeFeedback);}();return return_OBdafrd;}();
return result;}

    VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.subpassMergeFeedback=deserialize_uint32_t(name["members"]["subpassMergeFeedback"]);}();}();
return result;}

    json serialize_VkMicromapBuildInfoEXT(VkMicromapBuildInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ftSmEVb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HnciAlv=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["type"]=[&]() {
    json return_TsYOnem=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["flags"]=[&]() {
    json return_StouAnd=json({});
    return serialize_VkBuildMicromapFlagsEXT(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_qHIhemy=json({});
    return serialize_VkBuildMicromapModeEXT(name.mode);}();
result["members"]["dstMicromap"]=[&]() {
    json return_rPcblha=json({});
    return serialize_VkMicromapEXT(name.dstMicromap);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_SqCxhss=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_CZaLGzG=json({});
    
        if (name.pUsageCounts==NULL){
            return_CZaLGzG["null"]=true;
            return return_CZaLGzG;
        }
        
        return_CZaLGzG["members"]={};
        for(int CZaLGzG=0; CZaLGzG < name.usageCountsCount; CZaLGzG++){
            json temp;
            temp=[&]() {
    json return_ZEuGsmA=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[CZaLGzG]);}();
            return_CZaLGzG["members"].push_back(temp);
        }
        return return_CZaLGzG;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_UKUahvm=json({});
    
        if (name.ppUsageCounts==NULL){
            return_UKUahvm["null"]=true;
            return return_UKUahvm;
        }
        
        return_UKUahvm["members"]={};
        for(int UKUahvm=0; UKUahvm < name.usageCountsCount; UKUahvm++){
            json temp;
            temp=[&]() {
    json return_uzlgSQw=json({});
    
        if (name.ppUsageCounts[UKUahvm]==NULL){
            return_uzlgSQw["null"]=true;
            return return_uzlgSQw;
        }
        
        return_uzlgSQw["members"]={};
        for(int uzlgSQw=0; uzlgSQw < 1; uzlgSQw++){
            json temp;
            temp=[&]() {
    json return_hNpwzja=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[UKUahvm][uzlgSQw]);}();
            return_uzlgSQw["members"].push_back(temp);
        }
        return return_uzlgSQw;
        }();
            return_UKUahvm["members"].push_back(temp);
        }
        return return_UKUahvm;
        }();
result["members"]["data"]=[&]() {
    json return_DkSyDaB=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["scratchData"]=[&]() {
    json return_qPZNBOY=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
result["members"]["triangleArray"]=[&]() {
    json return_szTkhct=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.triangleArray);}();
result["members"]["triangleArrayStride"]=[&]() {
    json return_UllkxqV=json({});
    return_UllkxqV=[&]() {
    json return_McOWRsL=json({});
    return serialize_uint64_t(name.triangleArrayStride);}();return return_UllkxqV;}();
return result;}

    VkMicromapBuildInfoEXT deserialize_VkMicromapBuildInfoEXT(json &name){
        auto result=VkMicromapBuildInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_vXGbmYO;[&]() {
temp_vXGbmYO=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_vXGbmYO;}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildMicromapFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildMicromapModeEXT(name["members"]["mode"]);}();
[&]() {
result.dstMicromap=deserialize_VkMicromapEXT(name["members"]["dstMicromap"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_pxCpEOZ;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_pxCpEOZ=NULL;
        return;
        }
    temp_pxCpEOZ=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int ptdsktt=0; ptdsktt < result.usageCountsCount; ptdsktt++){
            [&]() {
temp_pxCpEOZ[ptdsktt]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][ptdsktt]);}();;
        }
        }();result.pUsageCounts=temp_pxCpEOZ;}();
[&]() {
VkMicromapUsageEXT** temp_zCDyBAG;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_zCDyBAG=NULL;
        return;
        }
    temp_zCDyBAG=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int IWmmnoY=0; IWmmnoY < result.usageCountsCount; IWmmnoY++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][IWmmnoY].contains("null")){
        temp_zCDyBAG[IWmmnoY]=NULL;
        return;
        }
    temp_zCDyBAG[IWmmnoY]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int QyNBXea=0; QyNBXea < 1; QyNBXea++){
            [&]() {
temp_zCDyBAG[IWmmnoY][QyNBXea]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][IWmmnoY]["members"][QyNBXea]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_zCDyBAG;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
[&]() {
result.triangleArray=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["triangleArray"]);}();
[&]() {
[&]() {
result.triangleArrayStride=deserialize_uint64_t(name["members"]["triangleArrayStride"]);}();}();
return result;}

    json serialize_VkMicromapCreateInfoEXT(VkMicromapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BNfePDa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jjpEuVo=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["createFlags"]=[&]() {
    json return_runeoeN=json({});
    return serialize_VkMicromapCreateFlagsEXT(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_SkMgjlT=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_nEtpdCZ=json({});
    return_nEtpdCZ=[&]() {
    json return_ardsJWU=json({});
    return serialize_uint64_t(name.offset);}();return return_nEtpdCZ;}();
result["members"]["size"]=[&]() {
    json return_UJHxKJn=json({});
    return_UJHxKJn=[&]() {
    json return_NkdsXLC=json({});
    return serialize_uint64_t(name.size);}();return return_UJHxKJn;}();
result["members"]["type"]=[&]() {
    json return_xlAUhpA=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_wbweaLZ=json({});
    return_wbweaLZ=[&]() {
    json return_cWLUink=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_wbweaLZ;}();
return result;}

    VkMicromapCreateInfoEXT deserialize_VkMicromapCreateInfoEXT(json &name){
        auto result=VkMicromapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_MTVHsNm;[&]() {
temp_MTVHsNm=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_MTVHsNm;}();
[&]() {
result.createFlags=deserialize_VkMicromapCreateFlagsEXT(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkMicromapVersionInfoEXT(VkMicromapVersionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PpYPPPx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pVersionData"]=[&]() {
    json return_ZbnrSCj=json({});
    
        if (name.pVersionData==NULL){
            return_ZbnrSCj["null"]=true;
            return return_ZbnrSCj;
        }
        
        return_ZbnrSCj["members"]={};
        for(int ZbnrSCj=0; ZbnrSCj < 2*VK_UUID_SIZE; ZbnrSCj++){
            json temp;
            temp=[&]() {
    json return_LlozPZQ=json({});
    return serialize_uint8_t(name.pVersionData[ZbnrSCj]);}();
            return_ZbnrSCj["members"].push_back(temp);
        }
        return return_ZbnrSCj;
        }();
return result;}

    VkMicromapVersionInfoEXT deserialize_VkMicromapVersionInfoEXT(json &name){
        auto result=VkMicromapVersionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
uint8_t* temp_DRfYnZn;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_DRfYnZn=NULL;
        return;
        }
    temp_DRfYnZn=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int QzAbzzN=0; QzAbzzN < 2*VK_UUID_SIZE; QzAbzzN++){
            [&]() {
temp_DRfYnZn[QzAbzzN]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][QzAbzzN]);}();;
        }
        }();result.pVersionData=temp_DRfYnZn;}();
return result;}

    json serialize_VkCopyMicromapInfoEXT(VkCopyMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gUdDgEd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["src"]=[&]() {
    json return_HGuSADH=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_zfiQKlo=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_zEzXuAd=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapInfoEXT deserialize_VkCopyMicromapInfoEXT(json &name){
        auto result=VkCopyMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMicromapToMemoryInfoEXT(VkCopyMicromapToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zhimksY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["src"]=[&]() {
    json return_HGuSADH=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_hibyXid=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_zEzXuAd=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapToMemoryInfoEXT deserialize_VkCopyMicromapToMemoryInfoEXT(json &name){
        auto result=VkCopyMicromapToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToMicromapInfoEXT(VkCopyMemoryToMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GhYUGJp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpbjHLW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["src"]=[&]() {
    json return_rKsEtaC=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_zfiQKlo=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_zEzXuAd=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMemoryToMicromapInfoEXT deserialize_VkCopyMemoryToMicromapInfoEXT(json &name){
        auto result=VkCopyMemoryToMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_SEMIEti;[&]() {
temp_SEMIEti=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_SEMIEti;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkMicromapBuildSizesInfoEXT(VkMicromapBuildSizesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AQXBlos=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["micromapSize"]=[&]() {
    json return_OCfxaUb=json({});
    return_OCfxaUb=[&]() {
    json return_ziZBGEx=json({});
    return serialize_uint64_t(name.micromapSize);}();return return_OCfxaUb;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_lGxlVCU=json({});
    return_lGxlVCU=[&]() {
    json return_xtqlhyE=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_lGxlVCU;}();
result["members"]["discardable"]=[&]() {
    json return_sSqNCzQ=json({});
    return_sSqNCzQ=[&]() {
    json return_uSQNNwk=json({});
    return serialize_uint32_t(name.discardable);}();return return_sSqNCzQ;}();
return result;}

    VkMicromapBuildSizesInfoEXT deserialize_VkMicromapBuildSizesInfoEXT(json &name){
        auto result=VkMicromapBuildSizesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
[&]() {
result.micromapSize=deserialize_uint64_t(name["members"]["micromapSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
[&]() {
[&]() {
result.discardable=deserialize_uint32_t(name["members"]["discardable"]);}();}();
return result;}

    json serialize_VkMicromapUsageEXT(VkMicromapUsageEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["count"]=[&]() {
    json return_wPOsbPq=json({});
    return serialize_uint32_t(name.count);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_BlxFWVf=json({});
    return serialize_uint32_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_IHoraZm=json({});
    return serialize_uint32_t(name.format);}();
return result;}

    VkMicromapUsageEXT deserialize_VkMicromapUsageEXT(json &name){
        auto result=VkMicromapUsageEXT();
    
[&]() {
result.count=deserialize_uint32_t(name["members"]["count"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint32_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint32_t(name["members"]["format"]);}();
return result;}

    json serialize_VkMicromapTriangleEXT(VkMicromapTriangleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dataOffset"]=[&]() {
    json return_PkGtkns=json({});
    return serialize_uint32_t(name.dataOffset);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_sWcXtXl=json({});
    return serialize_uint16_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_sHYIhDb=json({});
    return serialize_uint16_t(name.format);}();
return result;}

    VkMicromapTriangleEXT deserialize_VkMicromapTriangleEXT(json &name){
        auto result=VkMicromapTriangleEXT();
    
[&]() {
result.dataOffset=deserialize_uint32_t(name["members"]["dataOffset"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint16_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint16_t(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(VkPhysicalDeviceOpacityMicromapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bHKUcaU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["micromap"]=[&]() {
    json return_eWTlnfL=json({});
    return_eWTlnfL=[&]() {
    json return_RMfAXRD=json({});
    return serialize_uint32_t(name.micromap);}();return return_eWTlnfL;}();
result["members"]["micromapCaptureReplay"]=[&]() {
    json return_aKCBACo=json({});
    return_aKCBACo=[&]() {
    json return_nsQKigy=json({});
    return serialize_uint32_t(name.micromapCaptureReplay);}();return return_aKCBACo;}();
result["members"]["micromapHostCommands"]=[&]() {
    json return_AacKsqG=json({});
    return_AacKsqG=[&]() {
    json return_WVDpDBt=json({});
    return serialize_uint32_t(name.micromapHostCommands);}();return return_AacKsqG;}();
return result;}

    VkPhysicalDeviceOpacityMicromapFeaturesEXT deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceOpacityMicromapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.micromap=deserialize_uint32_t(name["members"]["micromap"]);}();}();
[&]() {
[&]() {
result.micromapCaptureReplay=deserialize_uint32_t(name["members"]["micromapCaptureReplay"]);}();}();
[&]() {
[&]() {
result.micromapHostCommands=deserialize_uint32_t(name["members"]["micromapHostCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(VkPhysicalDeviceOpacityMicromapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CswpKZq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxOpacity2StateSubdivisionLevel"]=[&]() {
    json return_oZvWZDB=json({});
    return serialize_uint32_t(name.maxOpacity2StateSubdivisionLevel);}();
result["members"]["maxOpacity4StateSubdivisionLevel"]=[&]() {
    json return_sPVSfqi=json({});
    return serialize_uint32_t(name.maxOpacity4StateSubdivisionLevel);}();
return result;}

    VkPhysicalDeviceOpacityMicromapPropertiesEXT deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceOpacityMicromapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxOpacity2StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity2StateSubdivisionLevel"]);}();
[&]() {
result.maxOpacity4StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity4StateSubdivisionLevel"]);}();
return result;}

    json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(VkAccelerationStructureTrianglesOpacityMicromapEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SqrTreH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cLMbQUP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["indexType"]=[&]() {
    json return_WiiaGVU=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexBuffer"]=[&]() {
    json return_DzzjrhB=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexBuffer);}();
result["members"]["indexStride"]=[&]() {
    json return_RziOPoW=json({});
    return_RziOPoW=[&]() {
    json return_IqdKHuh=json({});
    return serialize_uint64_t(name.indexStride);}();return return_RziOPoW;}();
result["members"]["baseTriangle"]=[&]() {
    json return_gSrAIbB=json({});
    return serialize_uint32_t(name.baseTriangle);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_yQojLOu=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_GgfPxWx=json({});
    
        if (name.pUsageCounts==NULL){
            return_GgfPxWx["null"]=true;
            return return_GgfPxWx;
        }
        
        return_GgfPxWx["members"]={};
        for(int GgfPxWx=0; GgfPxWx < name.usageCountsCount; GgfPxWx++){
            json temp;
            temp=[&]() {
    json return_RHbJYoA=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[GgfPxWx]);}();
            return_GgfPxWx["members"].push_back(temp);
        }
        return return_GgfPxWx;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_nMSkQzF=json({});
    
        if (name.ppUsageCounts==NULL){
            return_nMSkQzF["null"]=true;
            return return_nMSkQzF;
        }
        
        return_nMSkQzF["members"]={};
        for(int nMSkQzF=0; nMSkQzF < name.usageCountsCount; nMSkQzF++){
            json temp;
            temp=[&]() {
    json return_WRQqilE=json({});
    
        if (name.ppUsageCounts[nMSkQzF]==NULL){
            return_WRQqilE["null"]=true;
            return return_WRQqilE;
        }
        
        return_WRQqilE["members"]={};
        for(int WRQqilE=0; WRQqilE < 1; WRQqilE++){
            json temp;
            temp=[&]() {
    json return_kaoZcif=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[nMSkQzF][WRQqilE]);}();
            return_WRQqilE["members"].push_back(temp);
        }
        return return_WRQqilE;
        }();
            return_nMSkQzF["members"].push_back(temp);
        }
        return return_nMSkQzF;
        }();
result["members"]["micromap"]=[&]() {
    json return_vojJTQf=json({});
    return serialize_VkMicromapEXT(name.micromap);}();
return result;}

    VkAccelerationStructureTrianglesOpacityMicromapEXT deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(json &name){
        auto result=VkAccelerationStructureTrianglesOpacityMicromapEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexBuffer=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexBuffer"]);}();
[&]() {
[&]() {
result.indexStride=deserialize_uint64_t(name["members"]["indexStride"]);}();}();
[&]() {
result.baseTriangle=deserialize_uint32_t(name["members"]["baseTriangle"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_vJaLxYz;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_vJaLxYz=NULL;
        return;
        }
    temp_vJaLxYz=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int cOxVFrB=0; cOxVFrB < result.usageCountsCount; cOxVFrB++){
            [&]() {
temp_vJaLxYz[cOxVFrB]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][cOxVFrB]);}();;
        }
        }();result.pUsageCounts=temp_vJaLxYz;}();
[&]() {
VkMicromapUsageEXT** temp_yZmyjLN;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_yZmyjLN=NULL;
        return;
        }
    temp_yZmyjLN=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int vbCvAVm=0; vbCvAVm < result.usageCountsCount; vbCvAVm++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][vbCvAVm].contains("null")){
        temp_yZmyjLN[vbCvAVm]=NULL;
        return;
        }
    temp_yZmyjLN[vbCvAVm]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int OzNutke=0; OzNutke < 1; OzNutke++){
            [&]() {
temp_yZmyjLN[vbCvAVm][OzNutke]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][vbCvAVm]["members"][OzNutke]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_yZmyjLN;}();
[&]() {
result.micromap=deserialize_VkMicromapEXT(name["members"]["micromap"]);}();
return result;}

    json serialize_VkPipelinePropertiesIdentifierEXT(VkPipelinePropertiesIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_imOPKCz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineIdentifier"]=[&]() {
    json return_KnLiOOb=json({});
    
        return_KnLiOOb["members"]={};
        for(int KnLiOOb=0; KnLiOOb < VK_UUID_SIZE; KnLiOOb++){
            json temp;
            temp=[&]() {
    json return_TfxoeIx=json({});
    return serialize_uint8_t(name.pipelineIdentifier[KnLiOOb]);}();
            return_KnLiOOb["members"].push_back(temp);
        }
        return return_KnLiOOb;
        }();
return result;}

    VkPipelinePropertiesIdentifierEXT deserialize_VkPipelinePropertiesIdentifierEXT(json &name){
        auto result=VkPipelinePropertiesIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int dCabYOu=0; dCabYOu < VK_UUID_SIZE; dCabYOu++){
            [&]() {
result.pipelineIdentifier[dCabYOu]=deserialize_uint8_t(name["members"]["pipelineIdentifier"]["members"][dCabYOu]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(VkPhysicalDevicePipelinePropertiesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FWwQVuq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelinePropertiesIdentifier"]=[&]() {
    json return_yFrjMNz=json({});
    return_yFrjMNz=[&]() {
    json return_JvKEmtv=json({});
    return serialize_uint32_t(name.pipelinePropertiesIdentifier);}();return return_yFrjMNz;}();
return result;}

    VkPhysicalDevicePipelinePropertiesFeaturesEXT deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePipelinePropertiesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelinePropertiesIdentifier=deserialize_uint32_t(name["members"]["pipelinePropertiesIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JXObuoE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderEarlyAndLateFragmentTests"]=[&]() {
    json return_tsKjTeX=json({});
    return_tsKjTeX=[&]() {
    json return_jEuDNCM=json({});
    return serialize_uint32_t(name.shaderEarlyAndLateFragmentTests);}();return return_tsKjTeX;}();
return result;}

    VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(json &name){
        auto result=VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderEarlyAndLateFragmentTests=deserialize_uint32_t(name["members"]["shaderEarlyAndLateFragmentTests"]);}();}();
return result;}

    json serialize_VkExternalMemoryAcquireUnmodifiedEXT(VkExternalMemoryAcquireUnmodifiedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mGwbzgp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fJVPDUH=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["acquireUnmodifiedMemory"]=[&]() {
    json return_KgMLPiR=json({});
    return_KgMLPiR=[&]() {
    json return_xjnCDbA=json({});
    return serialize_uint32_t(name.acquireUnmodifiedMemory);}();return return_KgMLPiR;}();
return result;}

    VkExternalMemoryAcquireUnmodifiedEXT deserialize_VkExternalMemoryAcquireUnmodifiedEXT(json &name){
        auto result=VkExternalMemoryAcquireUnmodifiedEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_sKVZcum;[&]() {
temp_sKVZcum=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_sKVZcum;}();
[&]() {
[&]() {
result.acquireUnmodifiedMemory=deserialize_uint32_t(name["members"]["acquireUnmodifiedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ojNxyQB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iVWinnb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["nonSeamlessCubeMap"]=[&]() {
    json return_TRUWyOW=json({});
    return_TRUWyOW=[&]() {
    json return_KjTGKAq=json({});
    return serialize_uint32_t(name.nonSeamlessCubeMap);}();return return_TRUWyOW;}();
return result;}

    VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.nonSeamlessCubeMap=deserialize_uint32_t(name["members"]["nonSeamlessCubeMap"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkPhysicalDevicePipelineRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TLRAzJS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineRobustness"]=[&]() {
    json return_zKqltnh=json({});
    return_zKqltnh=[&]() {
    json return_LmBctiI=json({});
    return serialize_uint32_t(name.pipelineRobustness);}();return return_zKqltnh;}();
return result;}

    VkPhysicalDevicePipelineRobustnessFeaturesEXT deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePipelineRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelineRobustness=deserialize_uint32_t(name["members"]["pipelineRobustness"]);}();}();
return result;}

    json serialize_VkPipelineRobustnessCreateInfoEXT(VkPipelineRobustnessCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_heyFKaE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DikCbxz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["storageBuffers"]=[&]() {
    json return_ExdYrOb=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.storageBuffers);}();
result["members"]["uniformBuffers"]=[&]() {
    json return_pxayusM=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.uniformBuffers);}();
result["members"]["vertexInputs"]=[&]() {
    json return_IYJbvEb=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.vertexInputs);}();
result["members"]["images"]=[&]() {
    json return_KQxUUjM=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.images);}();
return result;}

    VkPipelineRobustnessCreateInfoEXT deserialize_VkPipelineRobustnessCreateInfoEXT(json &name){
        auto result=VkPipelineRobustnessCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_Rfdumjd;[&]() {
temp_Rfdumjd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_Rfdumjd;}();
[&]() {
result.storageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["storageBuffers"]);}();
[&]() {
result.uniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["uniformBuffers"]);}();
[&]() {
result.vertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["vertexInputs"]);}();
[&]() {
result.images=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["images"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkPhysicalDevicePipelineRobustnessPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qhETSee=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["defaultRobustnessStorageBuffers"]=[&]() {
    json return_yBUBzYm=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessStorageBuffers);}();
result["members"]["defaultRobustnessUniformBuffers"]=[&]() {
    json return_GXWgRrC=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessUniformBuffers);}();
result["members"]["defaultRobustnessVertexInputs"]=[&]() {
    json return_XVzvWct=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessVertexInputs);}();
result["members"]["defaultRobustnessImages"]=[&]() {
    json return_CKvAigH=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.defaultRobustnessImages);}();
return result;}

    VkPhysicalDevicePipelineRobustnessPropertiesEXT deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(json &name){
        auto result=VkPhysicalDevicePipelineRobustnessPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.defaultRobustnessStorageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessStorageBuffers"]);}();
[&]() {
result.defaultRobustnessUniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessUniformBuffers"]);}();
[&]() {
result.defaultRobustnessVertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessVertexInputs"]);}();
[&]() {
result.defaultRobustnessImages=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["defaultRobustnessImages"]);}();
return result;}

    json serialize_VkImageViewSampleWeightCreateInfoQCOM(VkImageViewSampleWeightCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wCHwcyn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mAFOLKf=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["filterCenter"]=[&]() {
    json return_epKdyKi=json({});
    return serialize_VkOffset2D(name.filterCenter);}();
result["members"]["filterSize"]=[&]() {
    json return_YGtootm=json({});
    return serialize_VkExtent2D(name.filterSize);}();
result["members"]["numPhases"]=[&]() {
    json return_oXeEran=json({});
    return serialize_uint32_t(name.numPhases);}();
return result;}

    VkImageViewSampleWeightCreateInfoQCOM deserialize_VkImageViewSampleWeightCreateInfoQCOM(json &name){
        auto result=VkImageViewSampleWeightCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_LthbfsD;[&]() {
temp_LthbfsD=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_LthbfsD;}();
[&]() {
result.filterCenter=deserialize_VkOffset2D(name["members"]["filterCenter"]);}();
[&]() {
result.filterSize=deserialize_VkExtent2D(name["members"]["filterSize"]);}();
[&]() {
result.numPhases=deserialize_uint32_t(name["members"]["numPhases"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(VkPhysicalDeviceImageProcessingFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nbYGjBU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["textureSampleWeighted"]=[&]() {
    json return_xGMpRGB=json({});
    return_xGMpRGB=[&]() {
    json return_iHBZJIk=json({});
    return serialize_uint32_t(name.textureSampleWeighted);}();return return_xGMpRGB;}();
result["members"]["textureBoxFilter"]=[&]() {
    json return_aabKZpq=json({});
    return_aabKZpq=[&]() {
    json return_wFMgdZk=json({});
    return serialize_uint32_t(name.textureBoxFilter);}();return return_aabKZpq;}();
result["members"]["textureBlockMatch"]=[&]() {
    json return_vaYuPMG=json({});
    return_vaYuPMG=[&]() {
    json return_imnxNhC=json({});
    return serialize_uint32_t(name.textureBlockMatch);}();return return_vaYuPMG;}();
return result;}

    VkPhysicalDeviceImageProcessingFeaturesQCOM deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceImageProcessingFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.textureSampleWeighted=deserialize_uint32_t(name["members"]["textureSampleWeighted"]);}();}();
[&]() {
[&]() {
result.textureBoxFilter=deserialize_uint32_t(name["members"]["textureBoxFilter"]);}();}();
[&]() {
[&]() {
result.textureBlockMatch=deserialize_uint32_t(name["members"]["textureBlockMatch"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(VkPhysicalDeviceImageProcessingPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aLiVgcg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twilBNM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxWeightFilterPhases"]=[&]() {
    json return_dwldppO=json({});
    return serialize_uint32_t(name.maxWeightFilterPhases);}();
result["members"]["maxWeightFilterDimension"]=[&]() {
    json return_yNcjfqx=json({});
    return serialize_VkExtent2D(name.maxWeightFilterDimension);}();
result["members"]["maxBlockMatchRegion"]=[&]() {
    json return_BHmimDj=json({});
    return serialize_VkExtent2D(name.maxBlockMatchRegion);}();
result["members"]["maxBoxFilterBlockSize"]=[&]() {
    json return_PjqwRGf=json({});
    return serialize_VkExtent2D(name.maxBoxFilterBlockSize);}();
return result;}

    VkPhysicalDeviceImageProcessingPropertiesQCOM deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(json &name){
        auto result=VkPhysicalDeviceImageProcessingPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxWeightFilterPhases=deserialize_uint32_t(name["members"]["maxWeightFilterPhases"]);}();
[&]() {
result.maxWeightFilterDimension=deserialize_VkExtent2D(name["members"]["maxWeightFilterDimension"]);}();
[&]() {
result.maxBlockMatchRegion=deserialize_VkExtent2D(name["members"]["maxBlockMatchRegion"]);}();
[&]() {
result.maxBoxFilterBlockSize=deserialize_VkExtent2D(name["members"]["maxBoxFilterBlockSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(VkPhysicalDeviceTilePropertiesFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GoSEjWk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["tileProperties"]=[&]() {
    json return_LlcKYRl=json({});
    return_LlcKYRl=[&]() {
    json return_qrsjdgb=json({});
    return serialize_uint32_t(name.tileProperties);}();return return_LlcKYRl;}();
return result;}

    VkPhysicalDeviceTilePropertiesFeaturesQCOM deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceTilePropertiesFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.tileProperties=deserialize_uint32_t(name["members"]["tileProperties"]);}();}();
return result;}

    json serialize_VkTilePropertiesQCOM(VkTilePropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iTGdrUF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["tileSize"]=[&]() {
    json return_czjYmXX=json({});
    return serialize_VkExtent3D(name.tileSize);}();
result["members"]["apronSize"]=[&]() {
    json return_yWgrjhC=json({});
    return serialize_VkExtent2D(name.apronSize);}();
result["members"]["origin"]=[&]() {
    json return_rAapOOR=json({});
    return serialize_VkOffset2D(name.origin);}();
return result;}

    VkTilePropertiesQCOM deserialize_VkTilePropertiesQCOM(json &name){
        auto result=VkTilePropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.tileSize=deserialize_VkExtent3D(name["members"]["tileSize"]);}();
[&]() {
result.apronSize=deserialize_VkExtent2D(name["members"]["apronSize"]);}();
[&]() {
result.origin=deserialize_VkOffset2D(name["members"]["origin"]);}();
return result;}

    json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(VkPhysicalDeviceAmigoProfilingFeaturesSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rjwquTK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["amigoProfiling"]=[&]() {
    json return_mRLpdSo=json({});
    return_mRLpdSo=[&]() {
    json return_GTDhIGp=json({});
    return serialize_uint32_t(name.amigoProfiling);}();return return_mRLpdSo;}();
return result;}

    VkPhysicalDeviceAmigoProfilingFeaturesSEC deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(json &name){
        auto result=VkPhysicalDeviceAmigoProfilingFeaturesSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.amigoProfiling=deserialize_uint32_t(name["members"]["amigoProfiling"]);}();}();
return result;}

    json serialize_VkAmigoProfilingSubmitInfoSEC(VkAmigoProfilingSubmitInfoSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pDsHTco=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DikCbxz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["firstDrawTimestamp"]=[&]() {
    json return_jpYNYNd=json({});
    return serialize_uint64_t(name.firstDrawTimestamp);}();
result["members"]["swapBufferTimestamp"]=[&]() {
    json return_YnaCrXj=json({});
    return serialize_uint64_t(name.swapBufferTimestamp);}();
return result;}

    VkAmigoProfilingSubmitInfoSEC deserialize_VkAmigoProfilingSubmitInfoSEC(json &name){
        auto result=VkAmigoProfilingSubmitInfoSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_Rfdumjd;[&]() {
temp_Rfdumjd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_Rfdumjd;}();
[&]() {
result.firstDrawTimestamp=deserialize_uint64_t(name["members"]["firstDrawTimestamp"]);}();
[&]() {
result.swapBufferTimestamp=deserialize_uint64_t(name["members"]["swapBufferTimestamp"]);}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QLKQwjx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["attachmentFeedbackLoopLayout"]=[&]() {
    json return_kbFgWdZ=json({});
    return_kbFgWdZ=[&]() {
    json return_XAzLxvT=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopLayout);}();return return_kbFgWdZ;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.attachmentFeedbackLoopLayout=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ysPtfGC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthClampZeroOne"]=[&]() {
    json return_opKmTRi=json({});
    return_opKmTRi=[&]() {
    json return_ZBigbKf=json({});
    return serialize_uint32_t(name.depthClampZeroOne);}();return return_opKmTRi;}();
return result;}

    VkPhysicalDeviceDepthClampZeroOneFeaturesEXT deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDepthClampZeroOneFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.depthClampZeroOne=deserialize_uint32_t(name["members"]["depthClampZeroOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(VkPhysicalDeviceAddressBindingReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_InLGawX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["reportAddressBinding"]=[&]() {
    json return_BfCSrOB=json({});
    return_BfCSrOB=[&]() {
    json return_WgrggEB=json({});
    return serialize_uint32_t(name.reportAddressBinding);}();return return_BfCSrOB;}();
return result;}

    VkPhysicalDeviceAddressBindingReportFeaturesEXT deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceAddressBindingReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.reportAddressBinding=deserialize_uint32_t(name["members"]["reportAddressBinding"]);}();}();
return result;}

    json serialize_VkDeviceAddressBindingCallbackDataEXT(VkDeviceAddressBindingCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rMKpIhr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_CZqtXbH=json({});
    return serialize_VkDeviceAddressBindingFlagsEXT(name.flags);}();
result["members"]["baseAddress"]=[&]() {
    json return_ijCNJHk=json({});
    return_ijCNJHk=[&]() {
    json return_cNhzkmB=json({});
    return serialize_uint64_t(name.baseAddress);}();return return_ijCNJHk;}();
result["members"]["size"]=[&]() {
    json return_qckMKlf=json({});
    return_qckMKlf=[&]() {
    json return_nVtFmnn=json({});
    return serialize_uint64_t(name.size);}();return return_qckMKlf;}();
result["members"]["bindingType"]=[&]() {
    json return_asYokIL=json({});
    return serialize_VkDeviceAddressBindingTypeEXT(name.bindingType);}();
return result;}

    VkDeviceAddressBindingCallbackDataEXT deserialize_VkDeviceAddressBindingCallbackDataEXT(json &name){
        auto result=VkDeviceAddressBindingCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.flags=deserialize_VkDeviceAddressBindingFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.baseAddress=deserialize_uint64_t(name["members"]["baseAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.bindingType=deserialize_VkDeviceAddressBindingTypeEXT(name["members"]["bindingType"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(VkPhysicalDeviceOpticalFlowFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pqTPMVU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["opticalFlow"]=[&]() {
    json return_dPswBxM=json({});
    return_dPswBxM=[&]() {
    json return_IwByJui=json({});
    return serialize_uint32_t(name.opticalFlow);}();return return_dPswBxM;}();
return result;}

    VkPhysicalDeviceOpticalFlowFeaturesNV deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(json &name){
        auto result=VkPhysicalDeviceOpticalFlowFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.opticalFlow=deserialize_uint32_t(name["members"]["opticalFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(VkPhysicalDeviceOpticalFlowPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EkwytBm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supportedOutputGridSizes"]=[&]() {
    json return_xFOkHaC=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedOutputGridSizes);}();
result["members"]["supportedHintGridSizes"]=[&]() {
    json return_zAIPftN=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedHintGridSizes);}();
result["members"]["hintSupported"]=[&]() {
    json return_LBDyUUL=json({});
    return_LBDyUUL=[&]() {
    json return_zXpqlDj=json({});
    return serialize_uint32_t(name.hintSupported);}();return return_LBDyUUL;}();
result["members"]["costSupported"]=[&]() {
    json return_YPcjCBM=json({});
    return_YPcjCBM=[&]() {
    json return_afDpZAf=json({});
    return serialize_uint32_t(name.costSupported);}();return return_YPcjCBM;}();
result["members"]["bidirectionalFlowSupported"]=[&]() {
    json return_dfpgXdU=json({});
    return_dfpgXdU=[&]() {
    json return_KQWuxyV=json({});
    return serialize_uint32_t(name.bidirectionalFlowSupported);}();return return_dfpgXdU;}();
result["members"]["globalFlowSupported"]=[&]() {
    json return_xPSXNcY=json({});
    return_xPSXNcY=[&]() {
    json return_frwgYVU=json({});
    return serialize_uint32_t(name.globalFlowSupported);}();return return_xPSXNcY;}();
result["members"]["minWidth"]=[&]() {
    json return_XlIixdT=json({});
    return serialize_uint32_t(name.minWidth);}();
result["members"]["minHeight"]=[&]() {
    json return_qSMCjNw=json({});
    return serialize_uint32_t(name.minHeight);}();
result["members"]["maxWidth"]=[&]() {
    json return_CCvFRDz=json({});
    return serialize_uint32_t(name.maxWidth);}();
result["members"]["maxHeight"]=[&]() {
    json return_epEDxiE=json({});
    return serialize_uint32_t(name.maxHeight);}();
result["members"]["maxNumRegionsOfInterest"]=[&]() {
    json return_siweyPz=json({});
    return serialize_uint32_t(name.maxNumRegionsOfInterest);}();
return result;}

    VkPhysicalDeviceOpticalFlowPropertiesNV deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(json &name){
        auto result=VkPhysicalDeviceOpticalFlowPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.supportedOutputGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedOutputGridSizes"]);}();
[&]() {
result.supportedHintGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedHintGridSizes"]);}();
[&]() {
[&]() {
result.hintSupported=deserialize_uint32_t(name["members"]["hintSupported"]);}();}();
[&]() {
[&]() {
result.costSupported=deserialize_uint32_t(name["members"]["costSupported"]);}();}();
[&]() {
[&]() {
result.bidirectionalFlowSupported=deserialize_uint32_t(name["members"]["bidirectionalFlowSupported"]);}();}();
[&]() {
[&]() {
result.globalFlowSupported=deserialize_uint32_t(name["members"]["globalFlowSupported"]);}();}();
[&]() {
result.minWidth=deserialize_uint32_t(name["members"]["minWidth"]);}();
[&]() {
result.minHeight=deserialize_uint32_t(name["members"]["minHeight"]);}();
[&]() {
result.maxWidth=deserialize_uint32_t(name["members"]["maxWidth"]);}();
[&]() {
result.maxHeight=deserialize_uint32_t(name["members"]["maxHeight"]);}();
[&]() {
result.maxNumRegionsOfInterest=deserialize_uint32_t(name["members"]["maxNumRegionsOfInterest"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatInfoNV(VkOpticalFlowImageFormatInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RGNTlat=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ezEOKPE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["usage"]=[&]() {
    json return_bBebhlC=json({});
    return serialize_VkOpticalFlowUsageFlagsNV(name.usage);}();
return result;}

    VkOpticalFlowImageFormatInfoNV deserialize_VkOpticalFlowImageFormatInfoNV(json &name){
        auto result=VkOpticalFlowImageFormatInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_YdXSoFF;[&]() {
temp_YdXSoFF=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_YdXSoFF;}();
[&]() {
result.usage=deserialize_VkOpticalFlowUsageFlagsNV(name["members"]["usage"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatPropertiesNV(VkOpticalFlowImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vehSlXs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ezEOKPE=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["format"]=[&]() {
    json return_nLVDJsO=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkOpticalFlowImageFormatPropertiesNV deserialize_VkOpticalFlowImageFormatPropertiesNV(json &name){
        auto result=VkOpticalFlowImageFormatPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_YdXSoFF;[&]() {
temp_YdXSoFF=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_YdXSoFF;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreateInfoNV(VkOpticalFlowSessionCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tqjvvlK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Vuehjae=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["width"]=[&]() {
    json return_bTnoRay=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_vRZmvLD=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["imageFormat"]=[&]() {
    json return_lqAJSNo=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["flowVectorFormat"]=[&]() {
    json return_hKtzQKv=json({});
    return serialize_VkFormat(name.flowVectorFormat);}();
result["members"]["costFormat"]=[&]() {
    json return_jiuBiQU=json({});
    return serialize_VkFormat(name.costFormat);}();
result["members"]["outputGridSize"]=[&]() {
    json return_OQCHgad=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.outputGridSize);}();
result["members"]["hintGridSize"]=[&]() {
    json return_zoLdFSa=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.hintGridSize);}();
result["members"]["performanceLevel"]=[&]() {
    json return_kkNEyBK=json({});
    return serialize_VkOpticalFlowPerformanceLevelNV(name.performanceLevel);}();
result["members"]["flags"]=[&]() {
    json return_xRlhagy=json({});
    return serialize_VkOpticalFlowSessionCreateFlagsNV(name.flags);}();
return result;}

    VkOpticalFlowSessionCreateInfoNV deserialize_VkOpticalFlowSessionCreateInfoNV(json &name){
        auto result=VkOpticalFlowSessionCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.flowVectorFormat=deserialize_VkFormat(name["members"]["flowVectorFormat"]);}();
[&]() {
result.costFormat=deserialize_VkFormat(name["members"]["costFormat"]);}();
[&]() {
result.outputGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["outputGridSize"]);}();
[&]() {
result.hintGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["hintGridSize"]);}();
[&]() {
result.performanceLevel=deserialize_VkOpticalFlowPerformanceLevelNV(name["members"]["performanceLevel"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowSessionCreateFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(VkOpticalFlowSessionCreatePrivateDataInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AkpBmcr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Vuehjae=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["id"]=[&]() {
    json return_FaJnaKT=json({});
    return serialize_uint32_t(name.id);}();
result["members"]["size"]=[&]() {
    json return_IHziFSs=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["pPrivateData"]=[&]() {
    json return_lYmqvJQ=json({});
    
        if (name.pPrivateData==NULL){
            return_lYmqvJQ["null"]=true;
            return return_lYmqvJQ;
        }
        return_lYmqvJQ=[&]() {
    json return_DYcIvBf=json({});
    
        if (((char*)(name.pPrivateData))==NULL){
            return_DYcIvBf["null"]=true;
            return return_DYcIvBf;
        }
        
        return_DYcIvBf["members"]={};
        for(int DYcIvBf=0; DYcIvBf < strlen(((char*)(name.pPrivateData)))+1; DYcIvBf++){
            json temp;
            temp=[&]() {
    json return_EmIMsUt=json({});
    return serialize_char(((char*)(name.pPrivateData))[DYcIvBf]);}();
            return_DYcIvBf["members"].push_back(temp);
        }
        return return_DYcIvBf;
        }();return return_lYmqvJQ;}();
return result;}

    VkOpticalFlowSessionCreatePrivateDataInfoNV deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(json &name){
        auto result=VkOpticalFlowSessionCreatePrivateDataInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.id=deserialize_uint32_t(name["members"]["id"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
void* temp_imtNGII;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_imtNGII=NULL;
        return;
        }
    char* temp_GzZMsai;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_GzZMsai=NULL;
        return;
        }
    temp_GzZMsai=(char*)malloc(name["members"]["pPrivateData"]["members"].size()*sizeof(char));
        for (int gqtAkGO=0; gqtAkGO < name["members"]["pPrivateData"]["members"].size(); gqtAkGO++){
            [&]() {
temp_GzZMsai[gqtAkGO]=deserialize_char(name["members"]["pPrivateData"]["members"][gqtAkGO]);}();;
        }
        }();temp_imtNGII=(void*)temp_GzZMsai;
}();result.pPrivateData=temp_imtNGII;}();
return result;}

    json serialize_VkOpticalFlowExecuteInfoNV(VkOpticalFlowExecuteInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NFKofmc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_cbGgNYF=json({});
    return serialize_VkOpticalFlowExecuteFlagsNV(name.flags);}();
result["members"]["regionCount"]=[&]() {
    json return_zxeXWXy=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_dtHJnbw=json({});
    
        if (name.pRegions==NULL){
            return_dtHJnbw["null"]=true;
            return return_dtHJnbw;
        }
        
        return_dtHJnbw["members"]={};
        for(int dtHJnbw=0; dtHJnbw < name.regionCount; dtHJnbw++){
            json temp;
            temp=[&]() {
    json return_Ckfhgbn=json({});
    return serialize_VkRect2D(name.pRegions[dtHJnbw]);}();
            return_dtHJnbw["members"].push_back(temp);
        }
        return return_dtHJnbw;
        }();
return result;}

    VkOpticalFlowExecuteInfoNV deserialize_VkOpticalFlowExecuteInfoNV(json &name){
        auto result=VkOpticalFlowExecuteInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowExecuteFlagsNV(name["members"]["flags"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkRect2D* temp_URMWbTw;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_URMWbTw=NULL;
        return;
        }
    temp_URMWbTw=(VkRect2D*)malloc(result.regionCount*sizeof(VkRect2D));
        for (int sSIAWwl=0; sSIAWwl < result.regionCount; sSIAWwl++){
            [&]() {
temp_URMWbTw[sSIAWwl]=deserialize_VkRect2D(name["members"]["pRegions"]["members"][sSIAWwl]);}();;
        }
        }();result.pRegions=temp_URMWbTw;}();
return result;}

    json serialize_VkPhysicalDeviceFaultFeaturesEXT(VkPhysicalDeviceFaultFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XDJHMQt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["deviceFault"]=[&]() {
    json return_LpTgoMt=json({});
    return_LpTgoMt=[&]() {
    json return_PxsQxbd=json({});
    return serialize_uint32_t(name.deviceFault);}();return return_LpTgoMt;}();
result["members"]["deviceFaultVendorBinary"]=[&]() {
    json return_VcZryZb=json({});
    return_VcZryZb=[&]() {
    json return_ifAuVcF=json({});
    return serialize_uint32_t(name.deviceFaultVendorBinary);}();return return_VcZryZb;}();
return result;}

    VkPhysicalDeviceFaultFeaturesEXT deserialize_VkPhysicalDeviceFaultFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceFaultFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.deviceFault=deserialize_uint32_t(name["members"]["deviceFault"]);}();}();
[&]() {
[&]() {
result.deviceFaultVendorBinary=deserialize_uint32_t(name["members"]["deviceFaultVendorBinary"]);}();}();
return result;}

    json serialize_VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["addressType"]=[&]() {
    json return_sKgzCZu=json({});
    return serialize_VkDeviceFaultAddressTypeEXT(name.addressType);}();
result["members"]["reportedAddress"]=[&]() {
    json return_zkKpDrn=json({});
    return_zkKpDrn=[&]() {
    json return_WzhnwwY=json({});
    return serialize_uint64_t(name.reportedAddress);}();return return_zkKpDrn;}();
result["members"]["addressPrecision"]=[&]() {
    json return_xuTHoyX=json({});
    return_xuTHoyX=[&]() {
    json return_QReByKK=json({});
    return serialize_uint64_t(name.addressPrecision);}();return return_xuTHoyX;}();
return result;}

    VkDeviceFaultAddressInfoEXT deserialize_VkDeviceFaultAddressInfoEXT(json &name){
        auto result=VkDeviceFaultAddressInfoEXT();
    
[&]() {
result.addressType=deserialize_VkDeviceFaultAddressTypeEXT(name["members"]["addressType"]);}();
[&]() {
[&]() {
result.reportedAddress=deserialize_uint64_t(name["members"]["reportedAddress"]);}();}();
[&]() {
[&]() {
result.addressPrecision=deserialize_uint64_t(name["members"]["addressPrecision"]);}();}();
return result;}

    json serialize_VkDeviceFaultVendorInfoEXT(VkDeviceFaultVendorInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["description"]=[&]() {
    json return_GmLcllU=json({});
    
        return_GmLcllU["members"]={};
        for(int GmLcllU=0; GmLcllU < VK_MAX_DESCRIPTION_SIZE; GmLcllU++){
            json temp;
            temp=[&]() {
    json return_XoznyKs=json({});
    return serialize_char(name.description[GmLcllU]);}();
            return_GmLcllU["members"].push_back(temp);
        }
        return return_GmLcllU;
        }();
result["members"]["vendorFaultCode"]=[&]() {
    json return_ahWaAUF=json({});
    return serialize_uint64_t(name.vendorFaultCode);}();
result["members"]["vendorFaultData"]=[&]() {
    json return_cdyXCwF=json({});
    return serialize_uint64_t(name.vendorFaultData);}();
return result;}

    VkDeviceFaultVendorInfoEXT deserialize_VkDeviceFaultVendorInfoEXT(json &name){
        auto result=VkDeviceFaultVendorInfoEXT();
    
[&]() {

        for (int GHDwLta=0; GHDwLta < VK_MAX_DESCRIPTION_SIZE; GHDwLta++){
            [&]() {
result.description[GHDwLta]=deserialize_char(name["members"]["description"]["members"][GHDwLta]);}();;
        }
        }();
[&]() {
result.vendorFaultCode=deserialize_uint64_t(name["members"]["vendorFaultCode"]);}();
[&]() {
result.vendorFaultData=deserialize_uint64_t(name["members"]["vendorFaultData"]);}();
return result;}

    json serialize_VkDeviceFaultCountsEXT(VkDeviceFaultCountsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BClVfYv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["addressInfoCount"]=[&]() {
    json return_ABRLkXc=json({});
    return serialize_uint32_t(name.addressInfoCount);}();
result["members"]["vendorInfoCount"]=[&]() {
    json return_IcqWYms=json({});
    return serialize_uint32_t(name.vendorInfoCount);}();
result["members"]["vendorBinarySize"]=[&]() {
    json return_HywDbhS=json({});
    return_HywDbhS=[&]() {
    json return_DzlpVNi=json({});
    return serialize_uint64_t(name.vendorBinarySize);}();return return_HywDbhS;}();
return result;}

    VkDeviceFaultCountsEXT deserialize_VkDeviceFaultCountsEXT(json &name){
        auto result=VkDeviceFaultCountsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.addressInfoCount=deserialize_uint32_t(name["members"]["addressInfoCount"]);}();
[&]() {
result.vendorInfoCount=deserialize_uint32_t(name["members"]["vendorInfoCount"]);}();
[&]() {
[&]() {
result.vendorBinarySize=deserialize_uint64_t(name["members"]["vendorBinarySize"]);}();}();
return result;}

    json serialize_VkDeviceFaultInfoEXT(VkDeviceFaultInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gkopDTy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["description"]=[&]() {
    json return_GmLcllU=json({});
    
        return_GmLcllU["members"]={};
        for(int GmLcllU=0; GmLcllU < VK_MAX_DESCRIPTION_SIZE; GmLcllU++){
            json temp;
            temp=[&]() {
    json return_XoznyKs=json({});
    return serialize_char(name.description[GmLcllU]);}();
            return_GmLcllU["members"].push_back(temp);
        }
        return return_GmLcllU;
        }();
result["members"]["pAddressInfos"]=[&]() {
    json return_qWXBitG=json({});
    
        if (name.pAddressInfos==NULL){
            return_qWXBitG["null"]=true;
            return return_qWXBitG;
        }
        return_qWXBitG=[&]() {
    json return_effXWZh=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*name.pAddressInfos);}();
return return_qWXBitG;}();
result["members"]["pVendorInfos"]=[&]() {
    json return_TSdMNxe=json({});
    
        if (name.pVendorInfos==NULL){
            return_TSdMNxe["null"]=true;
            return return_TSdMNxe;
        }
        return_TSdMNxe=[&]() {
    json return_coZjBwP=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*name.pVendorInfos);}();
return return_TSdMNxe;}();
result["members"]["pVendorBinaryData"]=[&]() {
    json return_ULIIeIa=json({});
    
        if (name.pVendorBinaryData==NULL){
            return_ULIIeIa["null"]=true;
            return return_ULIIeIa;
        }
        return_ULIIeIa=[&]() {
    json return_lLhDsLH=json({});
    
        if (((char*)(name.pVendorBinaryData))==NULL){
            return_lLhDsLH["null"]=true;
            return return_lLhDsLH;
        }
        
        return_lLhDsLH["members"]={};
        for(int lLhDsLH=0; lLhDsLH < strlen(((char*)(name.pVendorBinaryData)))+1; lLhDsLH++){
            json temp;
            temp=[&]() {
    json return_onnlnvn=json({});
    return serialize_char(((char*)(name.pVendorBinaryData))[lLhDsLH]);}();
            return_lLhDsLH["members"].push_back(temp);
        }
        return return_lLhDsLH;
        }();return return_ULIIeIa;}();
return result;}

    VkDeviceFaultInfoEXT deserialize_VkDeviceFaultInfoEXT(json &name){
        auto result=VkDeviceFaultInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int GHDwLta=0; GHDwLta < VK_MAX_DESCRIPTION_SIZE; GHDwLta++){
            [&]() {
result.description[GHDwLta]=deserialize_char(name["members"]["description"]["members"][GHDwLta]);}();;
        }
        }();
[&]() {

        if (name["members"]["pAddressInfos"].contains("null")){
        result.pAddressInfos=NULL;
        return;
        }
    result.pAddressInfos=(VkDeviceFaultAddressInfoEXT*)malloc(sizeof(VkDeviceFaultAddressInfoEXT));
[&]() {
*(result.pAddressInfos)=deserialize_VkDeviceFaultAddressInfoEXT(name["members"]["pAddressInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorInfos"].contains("null")){
        result.pVendorInfos=NULL;
        return;
        }
    result.pVendorInfos=(VkDeviceFaultVendorInfoEXT*)malloc(sizeof(VkDeviceFaultVendorInfoEXT));
[&]() {
*(result.pVendorInfos)=deserialize_VkDeviceFaultVendorInfoEXT(name["members"]["pVendorInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        result.pVendorBinaryData=NULL;
        return;
        }
    char* temp_XqajgLg;[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        temp_XqajgLg=NULL;
        return;
        }
    temp_XqajgLg=(char*)malloc(name["members"]["pVendorBinaryData"]["members"].size()*sizeof(char));
        for (int DZhOUVk=0; DZhOUVk < name["members"]["pVendorBinaryData"]["members"].size(); DZhOUVk++){
            [&]() {
temp_XqajgLg[DZhOUVk]=deserialize_char(name["members"]["pVendorBinaryData"]["members"][DZhOUVk]);}();;
        }
        }();result.pVendorBinaryData=(void*)temp_XqajgLg;
}();
return result;}

    json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(VkDeviceFaultVendorBinaryHeaderVersionOneEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_KRurgmB=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_MqlRxoK=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_sYbmtTD=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_yrilIdT=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["driverVersion"]=[&]() {
    json return_jocSMgW=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_ZBoArki=json({});
    
        return_ZBoArki["members"]={};
        for(int ZBoArki=0; ZBoArki < VK_UUID_SIZE; ZBoArki++){
            json temp;
            temp=[&]() {
    json return_QZIuUgo=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[ZBoArki]);}();
            return_ZBoArki["members"].push_back(temp);
        }
        return return_ZBoArki;
        }();
result["members"]["applicationNameOffset"]=[&]() {
    json return_NAvBnAe=json({});
    return serialize_uint32_t(name.applicationNameOffset);}();
result["members"]["applicationVersion"]=[&]() {
    json return_kjlXuGt=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["engineNameOffset"]=[&]() {
    json return_JUjPfjF=json({});
    return serialize_uint32_t(name.engineNameOffset);}();
result["members"]["engineVersion"]=[&]() {
    json return_qhodQge=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_necfFBs=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkDeviceFaultVendorBinaryHeaderVersionOneEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(json &name){
        auto result=VkDeviceFaultVendorBinaryHeaderVersionOneEXT();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {

        for (int yjhdeev=0; yjhdeev < VK_UUID_SIZE; yjhdeev++){
            [&]() {
result.pipelineCacheUUID[yjhdeev]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][yjhdeev]);}();;
        }
        }();
[&]() {
result.applicationNameOffset=deserialize_uint32_t(name["members"]["applicationNameOffset"]);}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
result.engineNameOffset=deserialize_uint32_t(name["members"]["engineNameOffset"]);}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TOISYBf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ydOnyeU=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pipelineLibraryGroupHandles"]=[&]() {
    json return_xbuEbGS=json({});
    return_xbuEbGS=[&]() {
    json return_JyDSPTP=json({});
    return serialize_uint32_t(name.pipelineLibraryGroupHandles);}();return return_xbuEbGS;}();
return result;}

    VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(json &name){
        auto result=VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.pipelineLibraryGroupHandles=deserialize_uint32_t(name["members"]["pipelineLibraryGroupHandles"]);}();}();
return result;}

    json serialize_VkDepthBiasInfoEXT(VkDepthBiasInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kzzERnA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_RsJAJRu=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_JtWzMHi=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_sCkgIYm=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
return result;}

    VkDepthBiasInfoEXT deserialize_VkDepthBiasInfoEXT(json &name){
        auto result=VkDepthBiasInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
return result;}

    json serialize_VkDepthBiasRepresentationInfoEXT(VkDepthBiasRepresentationInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MLMmByO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XfZOnDM=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthBiasRepresentation"]=[&]() {
    json return_NotaQXp=json({});
    return serialize_VkDepthBiasRepresentationEXT(name.depthBiasRepresentation);}();
result["members"]["depthBiasExact"]=[&]() {
    json return_lGwcjSe=json({});
    return_lGwcjSe=[&]() {
    json return_yeFBfHR=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_lGwcjSe;}();
return result;}

    VkDepthBiasRepresentationInfoEXT deserialize_VkDepthBiasRepresentationInfoEXT(json &name){
        auto result=VkDepthBiasRepresentationInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_erbmnaX;[&]() {
temp_erbmnaX=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_erbmnaX;}();
[&]() {
result.depthBiasRepresentation=deserialize_VkDepthBiasRepresentationEXT(name["members"]["depthBiasRepresentation"]);}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkDecompressMemoryRegionNV(VkDecompressMemoryRegionNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_MDUWKdC=json({});
    return_MDUWKdC=[&]() {
    json return_tbnvAYc=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_MDUWKdC;}();
result["members"]["dstAddress"]=[&]() {
    json return_fBAOxYg=json({});
    return_fBAOxYg=[&]() {
    json return_pzhDwdU=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_fBAOxYg;}();
result["members"]["compressedSize"]=[&]() {
    json return_jOdKupO=json({});
    return_jOdKupO=[&]() {
    json return_frTjMlQ=json({});
    return serialize_uint64_t(name.compressedSize);}();return return_jOdKupO;}();
result["members"]["decompressedSize"]=[&]() {
    json return_EMVavgv=json({});
    return_EMVavgv=[&]() {
    json return_bSdaDTb=json({});
    return serialize_uint64_t(name.decompressedSize);}();return return_EMVavgv;}();
result["members"]["decompressionMethod"]=[&]() {
    json return_HfbnIPl=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethod);}();
return result;}

    VkDecompressMemoryRegionNV deserialize_VkDecompressMemoryRegionNV(json &name){
        auto result=VkDecompressMemoryRegionNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.compressedSize=deserialize_uint64_t(name["members"]["compressedSize"]);}();}();
[&]() {
[&]() {
result.decompressedSize=deserialize_uint64_t(name["members"]["decompressedSize"]);}();}();
[&]() {
result.decompressionMethod=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethod"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZqTIRaf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderCoreMask"]=[&]() {
    json return_VTmrhEo=json({});
    return serialize_uint64_t(name.shaderCoreMask);}();
result["members"]["shaderCoreCount"]=[&]() {
    json return_QvSbUMj=json({});
    return serialize_uint32_t(name.shaderCoreCount);}();
result["members"]["shaderWarpsPerCore"]=[&]() {
    json return_IMXImTq=json({});
    return serialize_uint32_t(name.shaderWarpsPerCore);}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(json &name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.shaderCoreMask=deserialize_uint64_t(name["members"]["shaderCoreMask"]);}();
[&]() {
result.shaderCoreCount=deserialize_uint32_t(name["members"]["shaderCoreCount"]);}();
[&]() {
result.shaderWarpsPerCore=deserialize_uint32_t(name["members"]["shaderWarpsPerCore"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_URoKjnS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderCoreBuiltins"]=[&]() {
    json return_HBVOPns=json({});
    return_HBVOPns=[&]() {
    json return_ABorVKh=json({});
    return serialize_uint32_t(name.shaderCoreBuiltins);}();return return_HBVOPns;}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(json &name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderCoreBuiltins=deserialize_uint32_t(name["members"]["shaderCoreBuiltins"]);}();}();
return result;}

    json serialize_VkFrameBoundaryEXT(VkFrameBoundaryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uhUixqS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dlkPATN=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_tePBdRq=json({});
    return serialize_VkFrameBoundaryFlagsEXT(name.flags);}();
result["members"]["frameID"]=[&]() {
    json return_tlrAVNW=json({});
    return serialize_uint64_t(name.frameID);}();
result["members"]["imageCount"]=[&]() {
    json return_vtiGErU=json({});
    return serialize_uint32_t(name.imageCount);}();
result["members"]["pImages"]=[&]() {
    json return_pmWKRxD=json({});
    
        if (name.pImages==NULL){
            return_pmWKRxD["null"]=true;
            return return_pmWKRxD;
        }
        
        return_pmWKRxD["members"]={};
        for(int pmWKRxD=0; pmWKRxD < name.imageCount; pmWKRxD++){
            json temp;
            temp=[&]() {
    json return_VWSjjXy=json({});
    return serialize_VkImage(name.pImages[pmWKRxD]);}();
            return_pmWKRxD["members"].push_back(temp);
        }
        return return_pmWKRxD;
        }();
result["members"]["bufferCount"]=[&]() {
    json return_BKMduLn=json({});
    return serialize_uint32_t(name.bufferCount);}();
result["members"]["pBuffers"]=[&]() {
    json return_Bsvdvni=json({});
    
        if (name.pBuffers==NULL){
            return_Bsvdvni["null"]=true;
            return return_Bsvdvni;
        }
        
        return_Bsvdvni["members"]={};
        for(int Bsvdvni=0; Bsvdvni < name.bufferCount; Bsvdvni++){
            json temp;
            temp=[&]() {
    json return_gRHymfs=json({});
    return serialize_VkBuffer(name.pBuffers[Bsvdvni]);}();
            return_Bsvdvni["members"].push_back(temp);
        }
        return return_Bsvdvni;
        }();
result["members"]["tagName"]=[&]() {
    json return_IKFzQzd=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_NzYJnDR=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_NcjvWAI=json({});
    
        if (name.pTag==NULL){
            return_NcjvWAI["null"]=true;
            return return_NcjvWAI;
        }
        return_NcjvWAI=[&]() {
    json return_aNEieWr=json({});
    
        if (((char*)(name.pTag))==NULL){
            return_aNEieWr["null"]=true;
            return return_aNEieWr;
        }
        
        return_aNEieWr["members"]={};
        for(int aNEieWr=0; aNEieWr < strlen(((char*)(name.pTag)))+1; aNEieWr++){
            json temp;
            temp=[&]() {
    json return_INkXweT=json({});
    return serialize_char(((char*)(name.pTag))[aNEieWr]);}();
            return_aNEieWr["members"].push_back(temp);
        }
        return return_aNEieWr;
        }();return return_NcjvWAI;}();
return result;}

    VkFrameBoundaryEXT deserialize_VkFrameBoundaryEXT(json &name){
        auto result=VkFrameBoundaryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_GmCEwHf;[&]() {
temp_GmCEwHf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_GmCEwHf;}();
[&]() {
result.flags=deserialize_VkFrameBoundaryFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.frameID=deserialize_uint64_t(name["members"]["frameID"]);}();
[&]() {
result.imageCount=deserialize_uint32_t(name["members"]["imageCount"]);}();
[&]() {
VkImage* temp_EKVsfkd;[&]() {

        if (name["members"]["pImages"].contains("null")){
        temp_EKVsfkd=NULL;
        return;
        }
    temp_EKVsfkd=(VkImage*)malloc(result.imageCount*sizeof(VkImage));
        for (int LgoIgEx=0; LgoIgEx < result.imageCount; LgoIgEx++){
            [&]() {
temp_EKVsfkd[LgoIgEx]=deserialize_VkImage(name["members"]["pImages"]["members"][LgoIgEx]);}();;
        }
        }();result.pImages=temp_EKVsfkd;}();
[&]() {
result.bufferCount=deserialize_uint32_t(name["members"]["bufferCount"]);}();
[&]() {
VkBuffer* temp_SgFzcXh;[&]() {

        if (name["members"]["pBuffers"].contains("null")){
        temp_SgFzcXh=NULL;
        return;
        }
    temp_SgFzcXh=(VkBuffer*)malloc(result.bufferCount*sizeof(VkBuffer));
        for (int CLQvsWQ=0; CLQvsWQ < result.bufferCount; CLQvsWQ++){
            [&]() {
temp_SgFzcXh[CLQvsWQ]=deserialize_VkBuffer(name["members"]["pBuffers"]["members"][CLQvsWQ]);}();;
        }
        }();result.pBuffers=temp_SgFzcXh;}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_TXiPGCX;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_TXiPGCX=NULL;
        return;
        }
    char* temp_AUckfdA;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_AUckfdA=NULL;
        return;
        }
    temp_AUckfdA=(char*)malloc(name["members"]["pTag"]["members"].size()*sizeof(char));
        for (int YmLxpfN=0; YmLxpfN < name["members"]["pTag"]["members"].size(); YmLxpfN++){
            [&]() {
temp_AUckfdA[YmLxpfN]=deserialize_char(name["members"]["pTag"]["members"][YmLxpfN]);}();;
        }
        }();temp_TXiPGCX=(void*)temp_AUckfdA;
}();result.pTag=temp_TXiPGCX;}();
return result;}

    json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(VkPhysicalDeviceFrameBoundaryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DlFpOWB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["frameBoundary"]=[&]() {
    json return_mPfOwDE=json({});
    return_mPfOwDE=[&]() {
    json return_UFcXgXe=json({});
    return serialize_uint32_t(name.frameBoundary);}();return return_mPfOwDE;}();
return result;}

    VkPhysicalDeviceFrameBoundaryFeaturesEXT deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceFrameBoundaryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.frameBoundary=deserialize_uint32_t(name["members"]["frameBoundary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VhbIdRi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Eanongt=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["dynamicRenderingUnusedAttachments"]=[&]() {
    json return_gyMNUSl=json({});
    return_gyMNUSl=[&]() {
    json return_ghusJlm=json({});
    return serialize_uint32_t(name.dynamicRenderingUnusedAttachments);}();return return_gyMNUSl;}();
return result;}

    VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.dynamicRenderingUnusedAttachments=deserialize_uint32_t(name["members"]["dynamicRenderingUnusedAttachments"]);}();}();
return result;}

    json serialize_VkSurfacePresentModeEXT(VkSurfacePresentModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HSlcvJx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentMode"]=[&]() {
    json return_wmRGJCL=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
return result;}

    VkSurfacePresentModeEXT deserialize_VkSurfacePresentModeEXT(json &name){
        auto result=VkSurfacePresentModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
return result;}

    json serialize_VkSurfacePresentScalingCapabilitiesEXT(VkSurfacePresentScalingCapabilitiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Zqixqeo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PuLiXGJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["supportedPresentScaling"]=[&]() {
    json return_bXTteht=json({});
    return serialize_VkPresentScalingFlagsEXT(name.supportedPresentScaling);}();
result["members"]["supportedPresentGravityX"]=[&]() {
    json return_nDJTIQI=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityX);}();
result["members"]["supportedPresentGravityY"]=[&]() {
    json return_zYDqgFR=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityY);}();
result["members"]["minScaledImageExtent"]=[&]() {
    json return_GLcUmbq=json({});
    return serialize_VkExtent2D(name.minScaledImageExtent);}();
result["members"]["maxScaledImageExtent"]=[&]() {
    json return_hqsoPLU=json({});
    return serialize_VkExtent2D(name.maxScaledImageExtent);}();
return result;}

    VkSurfacePresentScalingCapabilitiesEXT deserialize_VkSurfacePresentScalingCapabilitiesEXT(json &name){
        auto result=VkSurfacePresentScalingCapabilitiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.supportedPresentScaling=deserialize_VkPresentScalingFlagsEXT(name["members"]["supportedPresentScaling"]);}();
[&]() {
result.supportedPresentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityX"]);}();
[&]() {
result.supportedPresentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityY"]);}();
[&]() {
result.minScaledImageExtent=deserialize_VkExtent2D(name["members"]["minScaledImageExtent"]);}();
[&]() {
result.maxScaledImageExtent=deserialize_VkExtent2D(name["members"]["maxScaledImageExtent"]);}();
return result;}

    json serialize_VkSurfacePresentModeCompatibilityEXT(VkSurfacePresentModeCompatibilityEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VmVLySX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xKlslqu=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentModeCount"]=[&]() {
    json return_WPrqWiB=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_rgIzmaP=json({});
    
        if (name.pPresentModes==NULL){
            return_rgIzmaP["null"]=true;
            return return_rgIzmaP;
        }
        
        return_rgIzmaP["members"]={};
        for(int rgIzmaP=0; rgIzmaP < name.presentModeCount; rgIzmaP++){
            json temp;
            temp=[&]() {
    json return_vKJvsQB=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[rgIzmaP]);}();
            return_rgIzmaP["members"].push_back(temp);
        }
        return return_rgIzmaP;
        }();
return result;}

    VkSurfacePresentModeCompatibilityEXT deserialize_VkSurfacePresentModeCompatibilityEXT(json &name){
        auto result=VkSurfacePresentModeCompatibilityEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        result.pPresentModes=NULL;
        return;
        }
    result.pPresentModes=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int fBNvPRh=0; fBNvPRh < result.presentModeCount; fBNvPRh++){
            [&]() {
result.pPresentModes[fBNvPRh]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][fBNvPRh]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XzkZfiD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchainMaintenance1"]=[&]() {
    json return_liZtrJS=json({});
    return_liZtrJS=[&]() {
    json return_ognluIl=json({});
    return serialize_uint32_t(name.swapchainMaintenance1);}();return return_liZtrJS;}();
return result;}

    VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(json &name){
        auto result=VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.swapchainMaintenance1=deserialize_uint32_t(name["members"]["swapchainMaintenance1"]);}();}();
return result;}

    json serialize_VkSwapchainPresentFenceInfoEXT(VkSwapchainPresentFenceInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_efRPDJZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchainCount"]=[&]() {
    json return_tkQMEnu=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pFences"]=[&]() {
    json return_QkPxIbM=json({});
    
        if (name.pFences==NULL){
            return_QkPxIbM["null"]=true;
            return return_QkPxIbM;
        }
        
        return_QkPxIbM["members"]={};
        for(int QkPxIbM=0; QkPxIbM < name.swapchainCount; QkPxIbM++){
            json temp;
            temp=[&]() {
    json return_lBLxKAw=json({});
    return serialize_VkFence(name.pFences[QkPxIbM]);}();
            return_QkPxIbM["members"].push_back(temp);
        }
        return return_QkPxIbM;
        }();
return result;}

    VkSwapchainPresentFenceInfoEXT deserialize_VkSwapchainPresentFenceInfoEXT(json &name){
        auto result=VkSwapchainPresentFenceInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkFence* temp_ucxyKis;[&]() {

        if (name["members"]["pFences"].contains("null")){
        temp_ucxyKis=NULL;
        return;
        }
    temp_ucxyKis=(VkFence*)malloc(result.swapchainCount*sizeof(VkFence));
        for (int PqXVliq=0; PqXVliq < result.swapchainCount; PqXVliq++){
            [&]() {
temp_ucxyKis[PqXVliq]=deserialize_VkFence(name["members"]["pFences"]["members"][PqXVliq]);}();;
        }
        }();result.pFences=temp_ucxyKis;}();
return result;}

    json serialize_VkSwapchainPresentModesCreateInfoEXT(VkSwapchainPresentModesCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wjHTGKa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["presentModeCount"]=[&]() {
    json return_VKygVtR=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_OxBPGDA=json({});
    
        if (name.pPresentModes==NULL){
            return_OxBPGDA["null"]=true;
            return return_OxBPGDA;
        }
        
        return_OxBPGDA["members"]={};
        for(int OxBPGDA=0; OxBPGDA < name.presentModeCount; OxBPGDA++){
            json temp;
            temp=[&]() {
    json return_EcGLbDI=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[OxBPGDA]);}();
            return_OxBPGDA["members"].push_back(temp);
        }
        return return_OxBPGDA;
        }();
return result;}

    VkSwapchainPresentModesCreateInfoEXT deserialize_VkSwapchainPresentModesCreateInfoEXT(json &name){
        auto result=VkSwapchainPresentModesCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {
VkPresentModeKHR* temp_zBwvTSA;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_zBwvTSA=NULL;
        return;
        }
    temp_zBwvTSA=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int GqFMEwa=0; GqFMEwa < result.presentModeCount; GqFMEwa++){
            [&]() {
temp_zBwvTSA[GqFMEwa]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][GqFMEwa]);}();;
        }
        }();result.pPresentModes=temp_zBwvTSA;}();
return result;}

    json serialize_VkSwapchainPresentModeInfoEXT(VkSwapchainPresentModeInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vxeqoFY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrWNwlX=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchainCount"]=[&]() {
    json return_tkQMEnu=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_daUdETm=json({});
    
        if (name.pPresentModes==NULL){
            return_daUdETm["null"]=true;
            return return_daUdETm;
        }
        
        return_daUdETm["members"]={};
        for(int daUdETm=0; daUdETm < name.swapchainCount; daUdETm++){
            json temp;
            temp=[&]() {
    json return_VZdCDFq=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[daUdETm]);}();
            return_daUdETm["members"].push_back(temp);
        }
        return return_daUdETm;
        }();
return result;}

    VkSwapchainPresentModeInfoEXT deserialize_VkSwapchainPresentModeInfoEXT(json &name){
        auto result=VkSwapchainPresentModeInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_xqzHWhH;[&]() {
temp_xqzHWhH=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_xqzHWhH;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentModeKHR* temp_USSVXJL;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_USSVXJL=NULL;
        return;
        }
    temp_USSVXJL=(VkPresentModeKHR*)malloc(result.swapchainCount*sizeof(VkPresentModeKHR));
        for (int vbGvZKy=0; vbGvZKy < result.swapchainCount; vbGvZKy++){
            [&]() {
temp_USSVXJL[vbGvZKy]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][vbGvZKy]);}();;
        }
        }();result.pPresentModes=temp_USSVXJL;}();
return result;}

    json serialize_VkSwapchainPresentScalingCreateInfoEXT(VkSwapchainPresentScalingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mEeSzaD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KlESVpD=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["scalingBehavior"]=[&]() {
    json return_iHPqQbC=json({});
    return serialize_VkPresentScalingFlagsEXT(name.scalingBehavior);}();
result["members"]["presentGravityX"]=[&]() {
    json return_kGASjNX=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityX);}();
result["members"]["presentGravityY"]=[&]() {
    json return_zzofQIh=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityY);}();
return result;}

    VkSwapchainPresentScalingCreateInfoEXT deserialize_VkSwapchainPresentScalingCreateInfoEXT(json &name){
        auto result=VkSwapchainPresentScalingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XeEuUtf;[&]() {
temp_XeEuUtf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XeEuUtf;}();
[&]() {
result.scalingBehavior=deserialize_VkPresentScalingFlagsEXT(name["members"]["scalingBehavior"]);}();
[&]() {
result.presentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityX"]);}();
[&]() {
result.presentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityY"]);}();
return result;}

    json serialize_VkReleaseSwapchainImagesInfoEXT(VkReleaseSwapchainImagesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ziCXYqb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KlESVpD=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["swapchain"]=[&]() {
    json return_WEJYaMi=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndexCount"]=[&]() {
    json return_pTIFcQO=json({});
    return serialize_uint32_t(name.imageIndexCount);}();
result["members"]["pImageIndices"]=[&]() {
    json return_PemcQTw=json({});
    
        if (name.pImageIndices==NULL){
            return_PemcQTw["null"]=true;
            return return_PemcQTw;
        }
        
        return_PemcQTw["members"]={};
        for(int PemcQTw=0; PemcQTw < name.imageIndexCount; PemcQTw++){
            json temp;
            temp=[&]() {
    json return_FJpZTos=json({});
    return serialize_uint32_t(name.pImageIndices[PemcQTw]);}();
            return_PemcQTw["members"].push_back(temp);
        }
        return return_PemcQTw;
        }();
return result;}

    VkReleaseSwapchainImagesInfoEXT deserialize_VkReleaseSwapchainImagesInfoEXT(json &name){
        auto result=VkReleaseSwapchainImagesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XeEuUtf;[&]() {
temp_XeEuUtf=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XeEuUtf;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndexCount=deserialize_uint32_t(name["members"]["imageIndexCount"]);}();
[&]() {
uint32_t* temp_XKJXyeE;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_XKJXyeE=NULL;
        return;
        }
    temp_XKJXyeE=(uint32_t*)malloc(result.imageIndexCount*sizeof(uint32_t));
        for (int nqjwZUx=0; nqjwZUx < result.imageIndexCount; nqjwZUx++){
            [&]() {
temp_XKJXyeE[nqjwZUx]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][nqjwZUx]);}();;
        }
        }();result.pImageIndices=temp_XKJXyeE;}();
return result;}

    json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(VkPhysicalDeviceDepthBiasControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LAEEpld=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["depthBiasControl"]=[&]() {
    json return_nJwcGSV=json({});
    return_nJwcGSV=[&]() {
    json return_tpVvixz=json({});
    return serialize_uint32_t(name.depthBiasControl);}();return return_nJwcGSV;}();
result["members"]["leastRepresentableValueForceUnormRepresentation"]=[&]() {
    json return_AcPaZQH=json({});
    return_AcPaZQH=[&]() {
    json return_xJSaVcP=json({});
    return serialize_uint32_t(name.leastRepresentableValueForceUnormRepresentation);}();return return_AcPaZQH;}();
result["members"]["floatRepresentation"]=[&]() {
    json return_UASbdHt=json({});
    return_UASbdHt=[&]() {
    json return_zvXunOQ=json({});
    return serialize_uint32_t(name.floatRepresentation);}();return return_UASbdHt;}();
result["members"]["depthBiasExact"]=[&]() {
    json return_lGwcjSe=json({});
    return_lGwcjSe=[&]() {
    json return_yeFBfHR=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_lGwcjSe;}();
return result;}

    VkPhysicalDeviceDepthBiasControlFeaturesEXT deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceDepthBiasControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.depthBiasControl=deserialize_uint32_t(name["members"]["depthBiasControl"]);}();}();
[&]() {
[&]() {
result.leastRepresentableValueForceUnormRepresentation=deserialize_uint32_t(name["members"]["leastRepresentableValueForceUnormRepresentation"]);}();}();
[&]() {
[&]() {
result.floatRepresentation=deserialize_uint32_t(name["members"]["floatRepresentation"]);}();}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yJULVNB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZxpTQOn=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rayTracingInvocationReorder"]=[&]() {
    json return_eTMptkq=json({});
    return_eTMptkq=[&]() {
    json return_uWAAGWb=json({});
    return serialize_uint32_t(name.rayTracingInvocationReorder);}();return return_eTMptkq;}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(json &name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rayTracingInvocationReorder=deserialize_uint32_t(name["members"]["rayTracingInvocationReorder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BvqMLdn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnuQYIR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rayTracingInvocationReorderReorderingHint"]=[&]() {
    json return_TaCgtbd=json({});
    return serialize_VkRayTracingInvocationReorderModeNV(name.rayTracingInvocationReorderReorderingHint);}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(json &name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.rayTracingInvocationReorderReorderingHint=deserialize_VkRayTracingInvocationReorderModeNV(name["members"]["rayTracingInvocationReorderReorderingHint"]);}();
return result;}

    json serialize_VkDirectDriverLoadingInfoLUNARG(VkDirectDriverLoadingInfoLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JqKkcrE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cLMbQUP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_NLNzmkO=json({});
    return serialize_VkDirectDriverLoadingFlagsLUNARG(name.flags);}();
result["members"]["pfnGetInstanceProcAddr"]=[&]() {
    json return_kTyOTby=json({});
    return serialize_PFN_vkGetInstanceProcAddrLUNARG(name.pfnGetInstanceProcAddr);}();
return result;}

    VkDirectDriverLoadingInfoLUNARG deserialize_VkDirectDriverLoadingInfoLUNARG(json &name){
        auto result=VkDirectDriverLoadingInfoLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.flags=deserialize_VkDirectDriverLoadingFlagsLUNARG(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnGetInstanceProcAddr=deserialize_PFN_vkGetInstanceProcAddrLUNARG(name["members"]["pfnGetInstanceProcAddr"]);
        #endif
        }();
return result;}

    json serialize_VkDirectDriverLoadingListLUNARG(VkDirectDriverLoadingListLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kPcUkAg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KLmDGaW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["mode"]=[&]() {
    json return_nLxAykJ=json({});
    return serialize_VkDirectDriverLoadingModeLUNARG(name.mode);}();
result["members"]["driverCount"]=[&]() {
    json return_jqEkhcZ=json({});
    return serialize_uint32_t(name.driverCount);}();
result["members"]["pDrivers"]=[&]() {
    json return_hErLFHX=json({});
    
        if (name.pDrivers==NULL){
            return_hErLFHX["null"]=true;
            return return_hErLFHX;
        }
        
        return_hErLFHX["members"]={};
        for(int hErLFHX=0; hErLFHX < name.driverCount; hErLFHX++){
            json temp;
            temp=[&]() {
    json return_XdcKiYG=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(name.pDrivers[hErLFHX]);}();
            return_hErLFHX["members"].push_back(temp);
        }
        return return_hErLFHX;
        }();
return result;}

    VkDirectDriverLoadingListLUNARG deserialize_VkDirectDriverLoadingListLUNARG(json &name){
        auto result=VkDirectDriverLoadingListLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.mode=deserialize_VkDirectDriverLoadingModeLUNARG(name["members"]["mode"]);}();
[&]() {
result.driverCount=deserialize_uint32_t(name["members"]["driverCount"]);}();
[&]() {
VkDirectDriverLoadingInfoLUNARG* temp_airCGol;[&]() {

        if (name["members"]["pDrivers"].contains("null")){
        temp_airCGol=NULL;
        return;
        }
    temp_airCGol=(VkDirectDriverLoadingInfoLUNARG*)malloc(result.driverCount*sizeof(VkDirectDriverLoadingInfoLUNARG));
        for (int EBjRfEn=0; EBjRfEn < result.driverCount; EBjRfEn++){
            [&]() {
temp_airCGol[EBjRfEn]=deserialize_VkDirectDriverLoadingInfoLUNARG(name["members"]["pDrivers"]["members"][EBjRfEn]);}();;
        }
        }();result.pDrivers=temp_airCGol;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NxymtQh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["multiviewPerViewViewports"]=[&]() {
    json return_XBwYzsr=json({});
    return_XBwYzsr=[&]() {
    json return_bWSEOXK=json({});
    return serialize_uint32_t(name.multiviewPerViewViewports);}();return return_XBwYzsr;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.multiviewPerViewViewports=deserialize_uint32_t(name["members"]["multiviewPerViewViewports"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kLBYPqJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["rayTracingPositionFetch"]=[&]() {
    json return_luSbWCX=json({});
    return_luSbWCX=[&]() {
    json return_DDEHbFd=json({});
    return serialize_uint32_t(name.rayTracingPositionFetch);}();return return_luSbWCX;}();
return result;}

    VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.rayTracingPositionFetch=deserialize_uint32_t(name["members"]["rayTracingPositionFetch"]);}();}();
return result;}

    json serialize_VkDeviceImageSubresourceInfoKHR(VkDeviceImageSubresourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DlJSmfT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JVbFNCe=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pCreateInfo"]=[&]() {
    json return_xVuKRfQ=json({});
    
        if (name.pCreateInfo==NULL){
            return_xVuKRfQ["null"]=true;
            return return_xVuKRfQ;
        }
        return_xVuKRfQ=[&]() {
    json return_KdEtanY=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_xVuKRfQ;}();
result["members"]["pSubresource"]=[&]() {
    json return_UzcbRvA=json({});
    
        if (name.pSubresource==NULL){
            return_UzcbRvA["null"]=true;
            return return_UzcbRvA;
        }
        return_UzcbRvA=[&]() {
    json return_HvPtOLz=json({});
    return serialize_VkImageSubresource2KHR(*name.pSubresource);}();
return return_UzcbRvA;}();
return result;}

    VkDeviceImageSubresourceInfoKHR deserialize_VkDeviceImageSubresourceInfoKHR(json &name){
        auto result=VkDeviceImageSubresourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_tOlEGmq;[&]() {
temp_tOlEGmq=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_tOlEGmq;}();
[&]() {
VkImageCreateInfo* temp_hnNkVdw;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_hnNkVdw=NULL;
        return;
        }
    temp_hnNkVdw=(VkImageCreateInfo*)malloc(sizeof(VkImageCreateInfo));
[&]() {
*(temp_hnNkVdw)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_hnNkVdw;}();
[&]() {
VkImageSubresource2KHR* temp_QsHJxdB;[&]() {

        if (name["members"]["pSubresource"].contains("null")){
        temp_QsHJxdB=NULL;
        return;
        }
    temp_QsHJxdB=(VkImageSubresource2KHR*)malloc(sizeof(VkImageSubresource2KHR));
[&]() {
*(temp_QsHJxdB)=deserialize_VkImageSubresource2KHR(name["members"]["pSubresource"]);}();
}();result.pSubresource=temp_QsHJxdB;}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesARM(VkPhysicalDeviceShaderCorePropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xBCVZnB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RfTbzLx=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pixelRate"]=[&]() {
    json return_TkhyqyM=json({});
    return serialize_uint32_t(name.pixelRate);}();
result["members"]["texelRate"]=[&]() {
    json return_QOwEthL=json({});
    return serialize_uint32_t(name.texelRate);}();
result["members"]["fmaRate"]=[&]() {
    json return_BDLPOZB=json({});
    return serialize_uint32_t(name.fmaRate);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesARM deserialize_VkPhysicalDeviceShaderCorePropertiesARM(json &name){
        auto result=VkPhysicalDeviceShaderCorePropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.pixelRate=deserialize_uint32_t(name["members"]["pixelRate"]);}();
[&]() {
result.texelRate=deserialize_uint32_t(name["members"]["texelRate"]);}();
[&]() {
result.fmaRate=deserialize_uint32_t(name["members"]["fmaRate"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dPNebWu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["multiviewPerViewRenderAreas"]=[&]() {
    json return_VEHTZEc=json({});
    return_VEHTZEc=[&]() {
    json return_hwRqsJO=json({});
    return serialize_uint32_t(name.multiviewPerViewRenderAreas);}();return return_VEHTZEc;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.multiviewPerViewRenderAreas=deserialize_uint32_t(name["members"]["multiviewPerViewRenderAreas"]);}();}();
return result;}

    json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LpWnsZb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evTlstJ=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["perViewRenderAreaCount"]=[&]() {
    json return_OwaxCWL=json({});
    return serialize_uint32_t(name.perViewRenderAreaCount);}();
result["members"]["pPerViewRenderAreas"]=[&]() {
    json return_hPKKYAb=json({});
    
        if (name.pPerViewRenderAreas==NULL){
            return_hPKKYAb["null"]=true;
            return return_hPKKYAb;
        }
        
        return_hPKKYAb["members"]={};
        for(int hPKKYAb=0; hPKKYAb < name.perViewRenderAreaCount; hPKKYAb++){
            json temp;
            temp=[&]() {
    json return_nijuLYg=json({});
    return serialize_VkRect2D(name.pPerViewRenderAreas[hPKKYAb]);}();
            return_hPKKYAb["members"].push_back(temp);
        }
        return return_hPKKYAb;
        }();
return result;}

    VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(json &name){
        auto result=VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mRasBAG;[&]() {
temp_mRasBAG=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mRasBAG;}();
[&]() {
result.perViewRenderAreaCount=deserialize_uint32_t(name["members"]["perViewRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_JiapmkM;[&]() {

        if (name["members"]["pPerViewRenderAreas"].contains("null")){
        temp_JiapmkM=NULL;
        return;
        }
    temp_JiapmkM=(VkRect2D*)malloc(result.perViewRenderAreaCount*sizeof(VkRect2D));
        for (int qtSHeCy=0; qtSHeCy < result.perViewRenderAreaCount; qtSHeCy++){
            [&]() {
temp_JiapmkM[qtSHeCy]=deserialize_VkRect2D(name["members"]["pPerViewRenderAreas"]["members"][qtSHeCy]);}();;
        }
        }();result.pPerViewRenderAreas=temp_JiapmkM;}();
return result;}

    json serialize_VkQueryLowLatencySupportNV(VkQueryLowLatencySupportNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VTNoSBQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLAlHNR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["pQueriedLowLatencyData"]=[&]() {
    json return_hrYPaim=json({});
    
        if (name.pQueriedLowLatencyData==NULL){
            return_hrYPaim["null"]=true;
            return return_hrYPaim;
        }
        return_hrYPaim=[&]() {
    json return_wsEemGL=json({});
    
        if (((char*)(name.pQueriedLowLatencyData))==NULL){
            return_wsEemGL["null"]=true;
            return return_wsEemGL;
        }
        
        return_wsEemGL["members"]={};
        for(int wsEemGL=0; wsEemGL < strlen(((char*)(name.pQueriedLowLatencyData)))+1; wsEemGL++){
            json temp;
            temp=[&]() {
    json return_TkCcaxz=json({});
    return serialize_char(((char*)(name.pQueriedLowLatencyData))[wsEemGL]);}();
            return_wsEemGL["members"].push_back(temp);
        }
        return return_wsEemGL;
        }();return return_hrYPaim;}();
return result;}

    VkQueryLowLatencySupportNV deserialize_VkQueryLowLatencySupportNV(json &name){
        auto result=VkQueryLowLatencySupportNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_XXYvqCg;[&]() {
temp_XXYvqCg=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_XXYvqCg;}();
[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        result.pQueriedLowLatencyData=NULL;
        return;
        }
    char* temp_LCIeOlC;[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        temp_LCIeOlC=NULL;
        return;
        }
    temp_LCIeOlC=(char*)malloc(name["members"]["pQueriedLowLatencyData"]["members"].size()*sizeof(char));
        for (int CtkBFsL=0; CtkBFsL < name["members"]["pQueriedLowLatencyData"]["members"].size(); CtkBFsL++){
            [&]() {
temp_LCIeOlC[CtkBFsL]=deserialize_char(name["members"]["pQueriedLowLatencyData"]["members"][CtkBFsL]);}();;
        }
        }();result.pQueriedLowLatencyData=(void*)temp_LCIeOlC;
}();
return result;}

    json serialize_VkMemoryMapInfoKHR(VkMemoryMapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_agUfLdm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DikCbxz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_DIWUtAQ=json({});
    return serialize_VkMemoryMapFlags(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_poCYBfs=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_DvZjrqj=json({});
    return_DvZjrqj=[&]() {
    json return_qOWzFWN=json({});
    return serialize_uint64_t(name.offset);}();return return_DvZjrqj;}();
result["members"]["size"]=[&]() {
    json return_lNgFJhS=json({});
    return_lNgFJhS=[&]() {
    json return_RmTIZzr=json({});
    return serialize_uint64_t(name.size);}();return return_lNgFJhS;}();
return result;}

    VkMemoryMapInfoKHR deserialize_VkMemoryMapInfoKHR(json &name){
        auto result=VkMemoryMapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_Rfdumjd;[&]() {
temp_Rfdumjd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_Rfdumjd;}();
[&]() {
result.flags=deserialize_VkMemoryMapFlags(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkMemoryUnmapInfoKHR(VkMemoryUnmapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iNCWosj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvklqjP=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_klNphAc=json({});
    return serialize_VkMemoryUnmapFlagsKHR(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_FkjkzUy=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkMemoryUnmapInfoKHR deserialize_VkMemoryUnmapInfoKHR(json &name){
        auto result=VkMemoryUnmapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_plwBNNC;[&]() {
temp_plwBNNC=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_plwBNNC;}();
[&]() {
result.flags=deserialize_VkMemoryUnmapFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(VkPhysicalDeviceShaderObjectFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IDigyfg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QZvMKiU=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderObject"]=[&]() {
    json return_FxmPsPo=json({});
    return_FxmPsPo=[&]() {
    json return_TvsdqJY=json({});
    return serialize_uint32_t(name.shaderObject);}();return return_FxmPsPo;}();
return result;}

    VkPhysicalDeviceShaderObjectFeaturesEXT deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceShaderObjectFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderObject=deserialize_uint32_t(name["members"]["shaderObject"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(VkPhysicalDeviceShaderObjectPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oHYdyqj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eugjfyR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderBinaryUUID"]=[&]() {
    json return_CUUOYeF=json({});
    
        return_CUUOYeF["members"]={};
        for(int CUUOYeF=0; CUUOYeF < VK_UUID_SIZE; CUUOYeF++){
            json temp;
            temp=[&]() {
    json return_wPcGXiT=json({});
    return serialize_uint8_t(name.shaderBinaryUUID[CUUOYeF]);}();
            return_CUUOYeF["members"].push_back(temp);
        }
        return return_CUUOYeF;
        }();
result["members"]["shaderBinaryVersion"]=[&]() {
    json return_wMUEhpW=json({});
    return serialize_uint32_t(name.shaderBinaryVersion);}();
return result;}

    VkPhysicalDeviceShaderObjectPropertiesEXT deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(json &name){
        auto result=VkPhysicalDeviceShaderObjectPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {

        for (int BCZZgrC=0; BCZZgrC < VK_UUID_SIZE; BCZZgrC++){
            [&]() {
result.shaderBinaryUUID[BCZZgrC]=deserialize_uint8_t(name["members"]["shaderBinaryUUID"]["members"][BCZZgrC]);}();;
        }
        }();
[&]() {
result.shaderBinaryVersion=deserialize_uint32_t(name["members"]["shaderBinaryVersion"]);}();
return result;}

    json serialize_VkShaderCreateInfoEXT(VkShaderCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VWLJiBJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dqFtZzB=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["flags"]=[&]() {
    json return_sZtpLTX=json({});
    return serialize_VkShaderCreateFlagsEXT(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_uXnXClj=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["nextStage"]=[&]() {
    json return_QuiudfU=json({});
    return serialize_VkShaderStageFlags(name.nextStage);}();
result["members"]["codeType"]=[&]() {
    json return_gHdSrED=json({});
    return serialize_VkShaderCodeTypeEXT(name.codeType);}();
result["members"]["codeSize"]=[&]() {
    json return_XOVjvKJ=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_QiUpKBR=json({});
    
        if (name.pCode==NULL){
            return_QiUpKBR["null"]=true;
            return return_QiUpKBR;
        }
        return_QiUpKBR=[&]() {
    json return_nvBHenm=json({});
    
        if (((char*)(name.pCode))==NULL){
            return_nvBHenm["null"]=true;
            return return_nvBHenm;
        }
        
        return_nvBHenm["members"]={};
        for(int nvBHenm=0; nvBHenm < name.codeSize; nvBHenm++){
            json temp;
            temp=[&]() {
    json return_hKLNrld=json({});
    return serialize_char(((char*)(name.pCode))[nvBHenm]);}();
            return_nvBHenm["members"].push_back(temp);
        }
        return return_nvBHenm;
        }();return return_QiUpKBR;}();
result["members"]["pName"]=[&]() {
    json return_BqUkwaG=json({});
    
        if (name.pName==NULL){
            return_BqUkwaG["null"]=true;
            return return_BqUkwaG;
        }
        
        return_BqUkwaG["members"]={};
        for(int BqUkwaG=0; BqUkwaG < strlen(name.pName)+1; BqUkwaG++){
            json temp;
            temp=[&]() {
    json return_NpIBhAB=json({});
    return serialize_char(name.pName[BqUkwaG]);}();
            return_BqUkwaG["members"].push_back(temp);
        }
        return return_BqUkwaG;
        }();
result["members"]["setLayoutCount"]=[&]() {
    json return_YYehBdh=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_nMQIySZ=json({});
    
        if (name.pSetLayouts==NULL){
            return_nMQIySZ["null"]=true;
            return return_nMQIySZ;
        }
        
        return_nMQIySZ["members"]={};
        for(int nMQIySZ=0; nMQIySZ < name.setLayoutCount; nMQIySZ++){
            json temp;
            temp=[&]() {
    json return_bRAMqBF=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[nMQIySZ]);}();
            return_nMQIySZ["members"].push_back(temp);
        }
        return return_nMQIySZ;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_nkKjLKg=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_bGPaNXP=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_bGPaNXP["null"]=true;
            return return_bGPaNXP;
        }
        
        return_bGPaNXP["members"]={};
        for(int bGPaNXP=0; bGPaNXP < name.pushConstantRangeCount; bGPaNXP++){
            json temp;
            temp=[&]() {
    json return_pYddkVw=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[bGPaNXP]);}();
            return_bGPaNXP["members"].push_back(temp);
        }
        return return_bGPaNXP;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_XvWlAuf=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_XvWlAuf["null"]=true;
            return return_XvWlAuf;
        }
        return_XvWlAuf=[&]() {
    json return_mdbTAKx=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_XvWlAuf;}();
return result;}

    VkShaderCreateInfoEXT deserialize_VkShaderCreateInfoEXT(json &name){
        auto result=VkShaderCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_COstZkd;[&]() {
temp_COstZkd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_COstZkd;}();
[&]() {
result.flags=deserialize_VkShaderCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.nextStage=deserialize_VkShaderStageFlags(name["members"]["nextStage"]);}();
[&]() {
result.codeType=deserialize_VkShaderCodeTypeEXT(name["members"]["codeType"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
void* temp_YNeNZhY;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_YNeNZhY=NULL;
        return;
        }
    char* temp_EXXnqFy;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_EXXnqFy=NULL;
        return;
        }
    temp_EXXnqFy=(char*)malloc(result.codeSize*sizeof(char));
        for (int SXNwjWH=0; SXNwjWH < result.codeSize; SXNwjWH++){
            [&]() {
temp_EXXnqFy[SXNwjWH]=deserialize_char(name["members"]["pCode"]["members"][SXNwjWH]);}();;
        }
        }();temp_YNeNZhY=(void*)temp_EXXnqFy;
}();result.pCode=temp_YNeNZhY;}();
[&]() {
char* temp_VjqHYiA;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_VjqHYiA=NULL;
        return;
        }
    temp_VjqHYiA=(char*)malloc(name["members"]["pName"]["members"].size()*sizeof(char));
        for (int ApehwkP=0; ApehwkP < name["members"]["pName"]["members"].size(); ApehwkP++){
            [&]() {
temp_VjqHYiA[ApehwkP]=deserialize_char(name["members"]["pName"]["members"][ApehwkP]);}();;
        }
        }();result.pName=temp_VjqHYiA;}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_hcwpgrl;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_hcwpgrl=NULL;
        return;
        }
    temp_hcwpgrl=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int GsiZsnu=0; GsiZsnu < result.setLayoutCount; GsiZsnu++){
            [&]() {
temp_hcwpgrl[GsiZsnu]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][GsiZsnu]);}();;
        }
        }();result.pSetLayouts=temp_hcwpgrl;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_ufNOkXN;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_ufNOkXN=NULL;
        return;
        }
    temp_ufNOkXN=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int lucEZTA=0; lucEZTA < result.pushConstantRangeCount; lucEZTA++){
            [&]() {
temp_ufNOkXN[lucEZTA]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][lucEZTA]);}();;
        }
        }();result.pPushConstantRanges=temp_ufNOkXN;}();
[&]() {
VkSpecializationInfo* temp_nWrwAhf;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_nWrwAhf=NULL;
        return;
        }
    temp_nWrwAhf=(VkSpecializationInfo*)malloc(sizeof(VkSpecializationInfo));
[&]() {
*(temp_nWrwAhf)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_nWrwAhf;}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(VkPhysicalDeviceShaderTileImageFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EVxNceZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderTileImageColorReadAccess"]=[&]() {
    json return_JQipqRn=json({});
    return_JQipqRn=[&]() {
    json return_Uiyjdjk=json({});
    return serialize_uint32_t(name.shaderTileImageColorReadAccess);}();return return_JQipqRn;}();
result["members"]["shaderTileImageDepthReadAccess"]=[&]() {
    json return_VEHGKnu=json({});
    return_VEHGKnu=[&]() {
    json return_uGjrJaF=json({});
    return serialize_uint32_t(name.shaderTileImageDepthReadAccess);}();return return_VEHGKnu;}();
result["members"]["shaderTileImageStencilReadAccess"]=[&]() {
    json return_KbCXTyA=json({});
    return_KbCXTyA=[&]() {
    json return_akxqgPB=json({});
    return serialize_uint32_t(name.shaderTileImageStencilReadAccess);}();return return_KbCXTyA;}();
return result;}

    VkPhysicalDeviceShaderTileImageFeaturesEXT deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(json &name){
        auto result=VkPhysicalDeviceShaderTileImageFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderTileImageColorReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageColorReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageDepthReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageDepthReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageStencilReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageStencilReadAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(VkPhysicalDeviceShaderTileImagePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FUzxllw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["shaderTileImageCoherentReadAccelerated"]=[&]() {
    json return_cuahEBC=json({});
    return_cuahEBC=[&]() {
    json return_mDmGYzG=json({});
    return serialize_uint32_t(name.shaderTileImageCoherentReadAccelerated);}();return return_cuahEBC;}();
result["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]=[&]() {
    json return_UhAqZqo=json({});
    return_UhAqZqo=[&]() {
    json return_uPPPQpT=json({});
    return serialize_uint32_t(name.shaderTileImageReadSampleFromPixelRateInvocation);}();return return_UhAqZqo;}();
result["members"]["shaderTileImageReadFromHelperInvocation"]=[&]() {
    json return_DQitteu=json({});
    return_DQitteu=[&]() {
    json return_eBCytnb=json({});
    return serialize_uint32_t(name.shaderTileImageReadFromHelperInvocation);}();return return_DQitteu;}();
return result;}

    VkPhysicalDeviceShaderTileImagePropertiesEXT deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(json &name){
        auto result=VkPhysicalDeviceShaderTileImagePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.shaderTileImageCoherentReadAccelerated=deserialize_uint32_t(name["members"]["shaderTileImageCoherentReadAccelerated"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadSampleFromPixelRateInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadFromHelperInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadFromHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(VkPhysicalDeviceCooperativeMatrixFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gKIXjkU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNVItUV=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_AVgOFEj=json({});
    return_AVgOFEj=[&]() {
    json return_sLyjNRF=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_AVgOFEj;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_nMPaRKT=json({});
    return_nMPaRKT=[&]() {
    json return_HjZGYFy=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_nMPaRKT;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesKHR deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(json &name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesKHR(VkCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jnfDFoY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["MSize"]=[&]() {
    json return_qSkxFdv=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_cCseNJd=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_uvWzeSW=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_WAXcyLv=json({});
    return serialize_VkComponentTypeKHR(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_DHQpyvX=json({});
    return serialize_VkComponentTypeKHR(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_psYVaUj=json({});
    return serialize_VkComponentTypeKHR(name.CType);}();
result["members"]["ResultType"]=[&]() {
    json return_eNxjRIS=json({});
    return serialize_VkComponentTypeKHR(name.ResultType);}();
result["members"]["saturatingAccumulation"]=[&]() {
    json return_wHOGWmC=json({});
    return_wHOGWmC=[&]() {
    json return_BiXSCGR=json({});
    return serialize_uint32_t(name.saturatingAccumulation);}();return return_wHOGWmC;}();
result["members"]["scope"]=[&]() {
    json return_ZpQgjQN=json({});
    return serialize_VkScopeKHR(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesKHR deserialize_VkCooperativeMatrixPropertiesKHR(json &name){
        auto result=VkCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeKHR(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeKHR(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeKHR(name["members"]["CType"]);}();
[&]() {
result.ResultType=deserialize_VkComponentTypeKHR(name["members"]["ResultType"]);}();
[&]() {
[&]() {
result.saturatingAccumulation=deserialize_uint32_t(name["members"]["saturatingAccumulation"]);}();}();
[&]() {
result.scope=deserialize_VkScopeKHR(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDeviceCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BytovDP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uGncfcW=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_EAUyhwj=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesKHR deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(json &name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(VkPhysicalDeviceCubicClampFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ilmLIgJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cubicRangeClamp"]=[&]() {
    json return_XMYblzb=json({});
    return_XMYblzb=[&]() {
    json return_EwnUpKD=json({});
    return serialize_uint32_t(name.cubicRangeClamp);}();return return_XMYblzb;}();
return result;}

    VkPhysicalDeviceCubicClampFeaturesQCOM deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceCubicClampFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.cubicRangeClamp=deserialize_uint32_t(name["members"]["cubicRangeClamp"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WpdBWHO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OsnqkSb=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["ycbcrDegamma"]=[&]() {
    json return_hHEKCKx=json({});
    return_hHEKCKx=[&]() {
    json return_lsphirW=json({});
    return serialize_uint32_t(name.ycbcrDegamma);}();return return_hHEKCKx;}();
return result;}

    VkPhysicalDeviceYcbcrDegammaFeaturesQCOM deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceYcbcrDegammaFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.ycbcrDegamma=deserialize_uint32_t(name["members"]["ycbcrDegamma"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OIlGgbD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUHbEpy=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["enableYDegamma"]=[&]() {
    json return_xDrGcsF=json({});
    return_xDrGcsF=[&]() {
    json return_RlRTfjn=json({});
    return serialize_uint32_t(name.enableYDegamma);}();return return_xDrGcsF;}();
result["members"]["enableCbCrDegamma"]=[&]() {
    json return_SjDqjjr=json({});
    return_SjDqjjr=[&]() {
    json return_pRVDYMt=json({});
    return serialize_uint32_t(name.enableCbCrDegamma);}();return return_SjDqjjr;}();
return result;}

    VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(json &name){
        auto result=VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.enableYDegamma=deserialize_uint32_t(name["members"]["enableYDegamma"]);}();}();
[&]() {
[&]() {
result.enableCbCrDegamma=deserialize_uint32_t(name["members"]["enableCbCrDegamma"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(VkPhysicalDeviceCubicWeightsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DQETPzn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BKkteCw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["selectableCubicWeights"]=[&]() {
    json return_XrSdKeY=json({});
    return_XrSdKeY=[&]() {
    json return_IppHJzJ=json({});
    return serialize_uint32_t(name.selectableCubicWeights);}();return return_XrSdKeY;}();
return result;}

    VkPhysicalDeviceCubicWeightsFeaturesQCOM deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceCubicWeightsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.selectableCubicWeights=deserialize_uint32_t(name["members"]["selectableCubicWeights"]);}();}();
return result;}

    json serialize_VkSamplerCubicWeightsCreateInfoQCOM(VkSamplerCubicWeightsCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nrksEsl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DikCbxz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cubicWeights"]=[&]() {
    json return_AsurilE=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkSamplerCubicWeightsCreateInfoQCOM deserialize_VkSamplerCubicWeightsCreateInfoQCOM(json &name){
        auto result=VkSamplerCubicWeightsCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_Rfdumjd;[&]() {
temp_Rfdumjd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_Rfdumjd;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkBlitImageCubicWeightsInfoQCOM(VkBlitImageCubicWeightsInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NMycnsp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DikCbxz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["cubicWeights"]=[&]() {
    json return_AsurilE=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkBlitImageCubicWeightsInfoQCOM deserialize_VkBlitImageCubicWeightsInfoQCOM(json &name){
        auto result=VkBlitImageCubicWeightsInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_Rfdumjd;[&]() {
temp_Rfdumjd=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_Rfdumjd;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(VkPhysicalDeviceImageProcessing2FeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tJHLaqk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEEdpgl=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["textureBlockMatch2"]=[&]() {
    json return_qOzPEAW=json({});
    return_qOzPEAW=[&]() {
    json return_zzVeEhs=json({});
    return serialize_uint32_t(name.textureBlockMatch2);}();return return_qOzPEAW;}();
return result;}

    VkPhysicalDeviceImageProcessing2FeaturesQCOM deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(json &name){
        auto result=VkPhysicalDeviceImageProcessing2FeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.textureBlockMatch2=deserialize_uint32_t(name["members"]["textureBlockMatch2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(VkPhysicalDeviceImageProcessing2PropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AcsHHJV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rHrCezz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["maxBlockMatchWindow"]=[&]() {
    json return_HpHyvqW=json({});
    return serialize_VkExtent2D(name.maxBlockMatchWindow);}();
return result;}

    VkPhysicalDeviceImageProcessing2PropertiesQCOM deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(json &name){
        auto result=VkPhysicalDeviceImageProcessing2PropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.maxBlockMatchWindow=deserialize_VkExtent2D(name["members"]["maxBlockMatchWindow"]);}();
return result;}

    json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(VkSamplerBlockMatchWindowCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SmurWCL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qVxSsBz=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["windowExtent"]=[&]() {
    json return_xwKvAIU=json({});
    return serialize_VkExtent2D(name.windowExtent);}();
result["members"]["windowCompareMode"]=[&]() {
    json return_ofqFwXW=json({});
    return serialize_VkBlockMatchWindowCompareModeQCOM(name.windowCompareMode);}();
return result;}

    VkSamplerBlockMatchWindowCreateInfoQCOM deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(json &name){
        auto result=VkSamplerBlockMatchWindowCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
pNext temp_mZwGOqW;[&]() {
temp_mZwGOqW=deserialize_pNext(name["members"]["pNext"]);}();result.pNext=temp_mZwGOqW;}();
[&]() {
result.windowExtent=deserialize_VkExtent2D(name["members"]["windowExtent"]);}();
[&]() {
result.windowCompareMode=deserialize_VkBlockMatchWindowCompareModeQCOM(name["members"]["windowCompareMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lQrMldR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEGcYDw=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["descriptorPoolOverallocation"]=[&]() {
    json return_mbLKDKu=json({});
    return_mbLKDKu=[&]() {
    json return_YiOtMDu=json({});
    return serialize_uint32_t(name.descriptorPoolOverallocation);}();return return_mbLKDKu;}();
return result;}

    VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(json &name){
        auto result=VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
[&]() {
result.descriptorPoolOverallocation=deserialize_uint32_t(name["members"]["descriptorPoolOverallocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(VkPhysicalDeviceLayeredDriverPropertiesMSFT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dcqAWdF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KDtBxZR=json({});
    return serialize_pNext(name.pNext);}();
result["members"]["underlyingAPI"]=[&]() {
    json return_VWxgfpP=json({});
    return serialize_VkLayeredDriverUnderlyingApiMSFT(name.underlyingAPI);}();
return result;}

    VkPhysicalDeviceLayeredDriverPropertiesMSFT deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(json &name){
        auto result=VkPhysicalDeviceLayeredDriverPropertiesMSFT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
result.pNext=deserialize_pNext(name["members"]["pNext"]);}();
[&]() {
result.underlyingAPI=deserialize_VkLayeredDriverUnderlyingApiMSFT(name["members"]["underlyingAPI"]);}();
return result;}

            json serialize_int(int name){
                return json::object({{"value",name}});
            };
        

            int deserialize_int(json &name){
                return name["value"].get<int>();
            };
        

            json serialize_char(char name){
                return json::object({{"value",name}});
            };
        

            char deserialize_char(json &name){
                return name["value"].get<char>();
            };
        

            json serialize_float(float name){
                return json::object({{"value",name}});
            };
        

            float deserialize_float(json &name){
                return name["value"].get<float>();
            };
        

            json serialize_double(double name){
                return json::object({{"value",name}});
            };
        

            double deserialize_double(json &name){
                return name["value"].get<double>();
            };
        

            json serialize_int8_t(int8_t name){
                return json::object({{"value",name}});
            };
        

            int8_t deserialize_int8_t(json &name){
                return name["value"].get<int8_t>();
            };
        

            json serialize_uint8_t(uint8_t name){
                return json::object({{"value",name}});
            };
        

            uint8_t deserialize_uint8_t(json &name){
                return name["value"].get<uint8_t>();
            };
        

            json serialize_int16_t(int16_t name){
                return json::object({{"value",name}});
            };
        

            int16_t deserialize_int16_t(json &name){
                return name["value"].get<int16_t>();
            };
        

            json serialize_uint16_t(uint16_t name){
                return json::object({{"value",name}});
            };
        

            uint16_t deserialize_uint16_t(json &name){
                return name["value"].get<uint16_t>();
            };
        

            json serialize_uint32_t(uint32_t name){
                return json::object({{"value",name}});
            };
        

            uint32_t deserialize_uint32_t(json &name){
                return name["value"].get<uint32_t>();
            };
        

            json serialize_uint64_t(uint64_t name){
                return json::object({{"value",name}});
            };
        

            uint64_t deserialize_uint64_t(json &name){
                return name["value"].get<uint64_t>();
            };
        

            json serialize_int32_t(int32_t name){
                return json::object({{"value",name}});
            };
        

            int32_t deserialize_int32_t(json &name){
                return name["value"].get<int32_t>();
            };
        

            json serialize_int64_t(int64_t name){
                return json::object({{"value",name}});
            };
        

            int64_t deserialize_int64_t(json &name){
                return name["value"].get<int64_t>();
            };
        

            json serialize_size_t(size_t name){
                return json::object({{"value",name}});
            };
        

            size_t deserialize_size_t(json &name){
                return name["value"].get<size_t>();
            };
        

            json serialize_VkFramebufferCreateFlags(VkFramebufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlags deserialize_VkFramebufferCreateFlags(json &name){
                return name["value"].get<VkFramebufferCreateFlags>();
            };
        

            json serialize_VkQueryPoolCreateFlags(VkQueryPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolCreateFlags deserialize_VkQueryPoolCreateFlags(json &name){
                return name["value"].get<VkQueryPoolCreateFlags>();
            };
        

            json serialize_VkRenderPassCreateFlags(VkRenderPassCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlags deserialize_VkRenderPassCreateFlags(json &name){
                return name["value"].get<VkRenderPassCreateFlags>();
            };
        

            json serialize_VkSamplerCreateFlags(VkSamplerCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlags deserialize_VkSamplerCreateFlags(json &name){
                return name["value"].get<VkSamplerCreateFlags>();
            };
        

            json serialize_VkPipelineLayoutCreateFlags(VkPipelineLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlags deserialize_VkPipelineLayoutCreateFlags(json &name){
                return name["value"].get<VkPipelineLayoutCreateFlags>();
            };
        

            json serialize_VkPipelineCacheCreateFlags(VkPipelineCacheCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlags deserialize_VkPipelineCacheCreateFlags(json &name){
                return name["value"].get<VkPipelineCacheCreateFlags>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlags(VkPipelineDepthStencilStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlags deserialize_VkPipelineDepthStencilStateCreateFlags(json &name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlags>();
            };
        

            json serialize_VkPipelineDynamicStateCreateFlags(VkPipelineDynamicStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDynamicStateCreateFlags deserialize_VkPipelineDynamicStateCreateFlags(json &name){
                return name["value"].get<VkPipelineDynamicStateCreateFlags>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlags(VkPipelineColorBlendStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlags deserialize_VkPipelineColorBlendStateCreateFlags(json &name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlags>();
            };
        

            json serialize_VkPipelineMultisampleStateCreateFlags(VkPipelineMultisampleStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineMultisampleStateCreateFlags deserialize_VkPipelineMultisampleStateCreateFlags(json &name){
                return name["value"].get<VkPipelineMultisampleStateCreateFlags>();
            };
        

            json serialize_VkPipelineRasterizationStateCreateFlags(VkPipelineRasterizationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateCreateFlags deserialize_VkPipelineRasterizationStateCreateFlags(json &name){
                return name["value"].get<VkPipelineRasterizationStateCreateFlags>();
            };
        

            json serialize_VkPipelineViewportStateCreateFlags(VkPipelineViewportStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportStateCreateFlags deserialize_VkPipelineViewportStateCreateFlags(json &name){
                return name["value"].get<VkPipelineViewportStateCreateFlags>();
            };
        

            json serialize_VkPipelineTessellationStateCreateFlags(VkPipelineTessellationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineTessellationStateCreateFlags deserialize_VkPipelineTessellationStateCreateFlags(json &name){
                return name["value"].get<VkPipelineTessellationStateCreateFlags>();
            };
        

            json serialize_VkPipelineInputAssemblyStateCreateFlags(VkPipelineInputAssemblyStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineInputAssemblyStateCreateFlags deserialize_VkPipelineInputAssemblyStateCreateFlags(json &name){
                return name["value"].get<VkPipelineInputAssemblyStateCreateFlags>();
            };
        

            json serialize_VkPipelineVertexInputStateCreateFlags(VkPipelineVertexInputStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineVertexInputStateCreateFlags deserialize_VkPipelineVertexInputStateCreateFlags(json &name){
                return name["value"].get<VkPipelineVertexInputStateCreateFlags>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlags(VkPipelineShaderStageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlags deserialize_VkPipelineShaderStageCreateFlags(json &name){
                return name["value"].get<VkPipelineShaderStageCreateFlags>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlags(VkDescriptorSetLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlags deserialize_VkDescriptorSetLayoutCreateFlags(json &name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlags>();
            };
        

            json serialize_VkBufferViewCreateFlags(VkBufferViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferViewCreateFlags deserialize_VkBufferViewCreateFlags(json &name){
                return name["value"].get<VkBufferViewCreateFlags>();
            };
        

            json serialize_VkInstanceCreateFlags(VkInstanceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlags deserialize_VkInstanceCreateFlags(json &name){
                return name["value"].get<VkInstanceCreateFlags>();
            };
        

            json serialize_VkDeviceCreateFlags(VkDeviceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceCreateFlags deserialize_VkDeviceCreateFlags(json &name){
                return name["value"].get<VkDeviceCreateFlags>();
            };
        

            json serialize_VkDeviceQueueCreateFlags(VkDeviceQueueCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlags deserialize_VkDeviceQueueCreateFlags(json &name){
                return name["value"].get<VkDeviceQueueCreateFlags>();
            };
        

            json serialize_VkQueueFlags(VkQueueFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlags deserialize_VkQueueFlags(json &name){
                return name["value"].get<VkQueueFlags>();
            };
        

            json serialize_VkMemoryPropertyFlags(VkMemoryPropertyFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlags deserialize_VkMemoryPropertyFlags(json &name){
                return name["value"].get<VkMemoryPropertyFlags>();
            };
        

            json serialize_VkMemoryHeapFlags(VkMemoryHeapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlags deserialize_VkMemoryHeapFlags(json &name){
                return name["value"].get<VkMemoryHeapFlags>();
            };
        

            json serialize_VkAccessFlags(VkAccessFlags name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags deserialize_VkAccessFlags(json &name){
                return name["value"].get<VkAccessFlags>();
            };
        

            json serialize_VkBufferUsageFlags(VkBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags deserialize_VkBufferUsageFlags(json &name){
                return name["value"].get<VkBufferUsageFlags>();
            };
        

            json serialize_VkBufferCreateFlags(VkBufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlags deserialize_VkBufferCreateFlags(json &name){
                return name["value"].get<VkBufferCreateFlags>();
            };
        

            json serialize_VkShaderStageFlags(VkShaderStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlags deserialize_VkShaderStageFlags(json &name){
                return name["value"].get<VkShaderStageFlags>();
            };
        

            json serialize_VkImageUsageFlags(VkImageUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlags deserialize_VkImageUsageFlags(json &name){
                return name["value"].get<VkImageUsageFlags>();
            };
        

            json serialize_VkImageCreateFlags(VkImageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlags deserialize_VkImageCreateFlags(json &name){
                return name["value"].get<VkImageCreateFlags>();
            };
        

            json serialize_VkImageViewCreateFlags(VkImageViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlags deserialize_VkImageViewCreateFlags(json &name){
                return name["value"].get<VkImageViewCreateFlags>();
            };
        

            json serialize_VkPipelineCreateFlags(VkPipelineCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags deserialize_VkPipelineCreateFlags(json &name){
                return name["value"].get<VkPipelineCreateFlags>();
            };
        

            json serialize_VkColorComponentFlags(VkColorComponentFlags name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlags deserialize_VkColorComponentFlags(json &name){
                return name["value"].get<VkColorComponentFlags>();
            };
        

            json serialize_VkFenceCreateFlags(VkFenceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlags deserialize_VkFenceCreateFlags(json &name){
                return name["value"].get<VkFenceCreateFlags>();
            };
        

            json serialize_VkSemaphoreCreateFlags(VkSemaphoreCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreCreateFlags deserialize_VkSemaphoreCreateFlags(json &name){
                return name["value"].get<VkSemaphoreCreateFlags>();
            };
        

            json serialize_VkFormatFeatureFlags(VkFormatFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags deserialize_VkFormatFeatureFlags(json &name){
                return name["value"].get<VkFormatFeatureFlags>();
            };
        

            json serialize_VkQueryControlFlags(VkQueryControlFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlags deserialize_VkQueryControlFlags(json &name){
                return name["value"].get<VkQueryControlFlags>();
            };
        

            json serialize_VkQueryResultFlags(VkQueryResultFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlags deserialize_VkQueryResultFlags(json &name){
                return name["value"].get<VkQueryResultFlags>();
            };
        

            json serialize_VkShaderModuleCreateFlags(VkShaderModuleCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderModuleCreateFlags deserialize_VkShaderModuleCreateFlags(json &name){
                return name["value"].get<VkShaderModuleCreateFlags>();
            };
        

            json serialize_VkEventCreateFlags(VkEventCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlags deserialize_VkEventCreateFlags(json &name){
                return name["value"].get<VkEventCreateFlags>();
            };
        

            json serialize_VkCommandPoolCreateFlags(VkCommandPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlags deserialize_VkCommandPoolCreateFlags(json &name){
                return name["value"].get<VkCommandPoolCreateFlags>();
            };
        

            json serialize_VkCommandPoolResetFlags(VkCommandPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlags deserialize_VkCommandPoolResetFlags(json &name){
                return name["value"].get<VkCommandPoolResetFlags>();
            };
        

            json serialize_VkCommandBufferResetFlags(VkCommandBufferResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlags deserialize_VkCommandBufferResetFlags(json &name){
                return name["value"].get<VkCommandBufferResetFlags>();
            };
        

            json serialize_VkCommandBufferUsageFlags(VkCommandBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlags deserialize_VkCommandBufferUsageFlags(json &name){
                return name["value"].get<VkCommandBufferUsageFlags>();
            };
        

            json serialize_VkQueryPipelineStatisticFlags(VkQueryPipelineStatisticFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlags deserialize_VkQueryPipelineStatisticFlags(json &name){
                return name["value"].get<VkQueryPipelineStatisticFlags>();
            };
        

            json serialize_VkMemoryMapFlags(VkMemoryMapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryMapFlags deserialize_VkMemoryMapFlags(json &name){
                return name["value"].get<VkMemoryMapFlags>();
            };
        

            json serialize_VkMemoryUnmapFlagsKHR(VkMemoryUnmapFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryUnmapFlagsKHR deserialize_VkMemoryUnmapFlagsKHR(json &name){
                return name["value"].get<VkMemoryUnmapFlagsKHR>();
            };
        

            json serialize_VkImageAspectFlags(VkImageAspectFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlags deserialize_VkImageAspectFlags(json &name){
                return name["value"].get<VkImageAspectFlags>();
            };
        

            json serialize_VkSparseMemoryBindFlags(VkSparseMemoryBindFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlags deserialize_VkSparseMemoryBindFlags(json &name){
                return name["value"].get<VkSparseMemoryBindFlags>();
            };
        

            json serialize_VkSparseImageFormatFlags(VkSparseImageFormatFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlags deserialize_VkSparseImageFormatFlags(json &name){
                return name["value"].get<VkSparseImageFormatFlags>();
            };
        

            json serialize_VkSubpassDescriptionFlags(VkSubpassDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlags deserialize_VkSubpassDescriptionFlags(json &name){
                return name["value"].get<VkSubpassDescriptionFlags>();
            };
        

            json serialize_VkPipelineStageFlags(VkPipelineStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags deserialize_VkPipelineStageFlags(json &name){
                return name["value"].get<VkPipelineStageFlags>();
            };
        

            json serialize_VkSampleCountFlags(VkSampleCountFlags name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlags deserialize_VkSampleCountFlags(json &name){
                return name["value"].get<VkSampleCountFlags>();
            };
        

            json serialize_VkAttachmentDescriptionFlags(VkAttachmentDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlags deserialize_VkAttachmentDescriptionFlags(json &name){
                return name["value"].get<VkAttachmentDescriptionFlags>();
            };
        

            json serialize_VkStencilFaceFlags(VkStencilFaceFlags name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlags deserialize_VkStencilFaceFlags(json &name){
                return name["value"].get<VkStencilFaceFlags>();
            };
        

            json serialize_VkCullModeFlags(VkCullModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlags deserialize_VkCullModeFlags(json &name){
                return name["value"].get<VkCullModeFlags>();
            };
        

            json serialize_VkDescriptorPoolCreateFlags(VkDescriptorPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlags deserialize_VkDescriptorPoolCreateFlags(json &name){
                return name["value"].get<VkDescriptorPoolCreateFlags>();
            };
        

            json serialize_VkDescriptorPoolResetFlags(VkDescriptorPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolResetFlags deserialize_VkDescriptorPoolResetFlags(json &name){
                return name["value"].get<VkDescriptorPoolResetFlags>();
            };
        

            json serialize_VkDependencyFlags(VkDependencyFlags name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlags deserialize_VkDependencyFlags(json &name){
                return name["value"].get<VkDependencyFlags>();
            };
        

            json serialize_VkSubgroupFeatureFlags(VkSubgroupFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlags deserialize_VkSubgroupFeatureFlags(json &name){
                return name["value"].get<VkSubgroupFeatureFlags>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagsNV(VkIndirectCommandsLayoutUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagsNV deserialize_VkIndirectCommandsLayoutUsageFlagsNV(json &name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagsNV>();
            };
        

            json serialize_VkIndirectStateFlagsNV(VkIndirectStateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagsNV deserialize_VkIndirectStateFlagsNV(json &name){
                return name["value"].get<VkIndirectStateFlagsNV>();
            };
        

            json serialize_VkGeometryFlagsKHR(VkGeometryFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsKHR deserialize_VkGeometryFlagsKHR(json &name){
                return name["value"].get<VkGeometryFlagsKHR>();
            };
        

            json serialize_VkGeometryFlagsNV(VkGeometryFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsNV deserialize_VkGeometryFlagsNV(json &name){
                return name["value"].get<VkGeometryFlagsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagsKHR(VkGeometryInstanceFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsKHR deserialize_VkGeometryInstanceFlagsKHR(json &name){
                return name["value"].get<VkGeometryInstanceFlagsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagsNV(VkGeometryInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsNV deserialize_VkGeometryInstanceFlagsNV(json &name){
                return name["value"].get<VkGeometryInstanceFlagsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsKHR(VkBuildAccelerationStructureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsKHR deserialize_VkBuildAccelerationStructureFlagsKHR(json &name){
                return name["value"].get<VkBuildAccelerationStructureFlagsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsNV(VkBuildAccelerationStructureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsNV deserialize_VkBuildAccelerationStructureFlagsNV(json &name){
                return name["value"].get<VkBuildAccelerationStructureFlagsNV>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlags(VkPrivateDataSlotCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlags deserialize_VkPrivateDataSlotCreateFlags(json &name){
                return name["value"].get<VkPrivateDataSlotCreateFlags>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlagsEXT(VkPrivateDataSlotCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlagsEXT deserialize_VkPrivateDataSlotCreateFlagsEXT(json &name){
                return name["value"].get<VkPrivateDataSlotCreateFlagsEXT>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagsKHR(VkAccelerationStructureCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagsKHR deserialize_VkAccelerationStructureCreateFlagsKHR(json &name){
                return name["value"].get<VkAccelerationStructureCreateFlagsKHR>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlags(VkDescriptorUpdateTemplateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlags deserialize_VkDescriptorUpdateTemplateCreateFlags(json &name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlags>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlagsKHR(VkDescriptorUpdateTemplateCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlagsKHR deserialize_VkDescriptorUpdateTemplateCreateFlagsKHR(json &name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlagsKHR>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlags(VkPipelineCreationFeedbackFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlags deserialize_VkPipelineCreationFeedbackFlags(json &name){
                return name["value"].get<VkPipelineCreationFeedbackFlags>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagsEXT(VkPipelineCreationFeedbackFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagsEXT deserialize_VkPipelineCreationFeedbackFlagsEXT(json &name){
                return name["value"].get<VkPipelineCreationFeedbackFlagsEXT>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagsKHR(VkPerformanceCounterDescriptionFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagsKHR deserialize_VkPerformanceCounterDescriptionFlagsKHR(json &name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagsKHR(VkAcquireProfilingLockFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagsKHR deserialize_VkAcquireProfilingLockFlagsKHR(json &name){
                return name["value"].get<VkAcquireProfilingLockFlagsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlags(VkSemaphoreWaitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlags deserialize_VkSemaphoreWaitFlags(json &name){
                return name["value"].get<VkSemaphoreWaitFlags>();
            };
        

            json serialize_VkSemaphoreWaitFlagsKHR(VkSemaphoreWaitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagsKHR deserialize_VkSemaphoreWaitFlagsKHR(json &name){
                return name["value"].get<VkSemaphoreWaitFlagsKHR>();
            };
        

            json serialize_VkPipelineCompilerControlFlagsAMD(VkPipelineCompilerControlFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagsAMD deserialize_VkPipelineCompilerControlFlagsAMD(json &name){
                return name["value"].get<VkPipelineCompilerControlFlagsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagsAMD(VkShaderCorePropertiesFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagsAMD deserialize_VkShaderCorePropertiesFlagsAMD(json &name){
                return name["value"].get<VkShaderCorePropertiesFlagsAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagsNV(VkDeviceDiagnosticsConfigFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagsNV deserialize_VkDeviceDiagnosticsConfigFlagsNV(json &name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagsNV>();
            };
        

            json serialize_VkAccessFlags2(VkAccessFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2 deserialize_VkAccessFlags2(json &name){
                return name["value"].get<VkAccessFlags2>();
            };
        

            json serialize_VkAccessFlags2KHR(VkAccessFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2KHR deserialize_VkAccessFlags2KHR(json &name){
                return name["value"].get<VkAccessFlags2KHR>();
            };
        

            json serialize_VkPipelineStageFlags2(VkPipelineStageFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2 deserialize_VkPipelineStageFlags2(json &name){
                return name["value"].get<VkPipelineStageFlags2>();
            };
        

            json serialize_VkPipelineStageFlags2KHR(VkPipelineStageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2KHR deserialize_VkPipelineStageFlags2KHR(json &name){
                return name["value"].get<VkPipelineStageFlags2KHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInfoFlagsNV(VkAccelerationStructureMotionInfoFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInfoFlagsNV deserialize_VkAccelerationStructureMotionInfoFlagsNV(json &name){
                return name["value"].get<VkAccelerationStructureMotionInfoFlagsNV>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceFlagsNV(VkAccelerationStructureMotionInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceFlagsNV deserialize_VkAccelerationStructureMotionInstanceFlagsNV(json &name){
                return name["value"].get<VkAccelerationStructureMotionInstanceFlagsNV>();
            };
        

            json serialize_VkFormatFeatureFlags2(VkFormatFeatureFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2 deserialize_VkFormatFeatureFlags2(json &name){
                return name["value"].get<VkFormatFeatureFlags2>();
            };
        

            json serialize_VkFormatFeatureFlags2KHR(VkFormatFeatureFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2KHR deserialize_VkFormatFeatureFlags2KHR(json &name){
                return name["value"].get<VkFormatFeatureFlags2KHR>();
            };
        

            json serialize_VkRenderingFlags(VkRenderingFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlags deserialize_VkRenderingFlags(json &name){
                return name["value"].get<VkRenderingFlags>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagsNV(VkMemoryDecompressionMethodFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagsNV deserialize_VkMemoryDecompressionMethodFlagsNV(json &name){
                return name["value"].get<VkMemoryDecompressionMethodFlagsNV>();
            };
        

            json serialize_VkRenderingFlagsKHR(VkRenderingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagsKHR deserialize_VkRenderingFlagsKHR(json &name){
                return name["value"].get<VkRenderingFlagsKHR>();
            };
        

            json serialize_VkBuildMicromapFlagsEXT(VkBuildMicromapFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagsEXT deserialize_VkBuildMicromapFlagsEXT(json &name){
                return name["value"].get<VkBuildMicromapFlagsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagsEXT(VkMicromapCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagsEXT deserialize_VkMicromapCreateFlagsEXT(json &name){
                return name["value"].get<VkMicromapCreateFlagsEXT>();
            };
        

            json serialize_VkDirectDriverLoadingFlagsLUNARG(VkDirectDriverLoadingFlagsLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingFlagsLUNARG deserialize_VkDirectDriverLoadingFlagsLUNARG(json &name){
                return name["value"].get<VkDirectDriverLoadingFlagsLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlags2KHR(VkPipelineCreateFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags2KHR deserialize_VkPipelineCreateFlags2KHR(json &name){
                return name["value"].get<VkPipelineCreateFlags2KHR>();
            };
        

            json serialize_VkBufferUsageFlags2KHR(VkBufferUsageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags2KHR deserialize_VkBufferUsageFlags2KHR(json &name){
                return name["value"].get<VkBufferUsageFlags2KHR>();
            };
        

            json serialize_VkCompositeAlphaFlagsKHR(VkCompositeAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagsKHR deserialize_VkCompositeAlphaFlagsKHR(json &name){
                return name["value"].get<VkCompositeAlphaFlagsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagsKHR(VkDisplayPlaneAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagsKHR deserialize_VkDisplayPlaneAlphaFlagsKHR(json &name){
                return name["value"].get<VkDisplayPlaneAlphaFlagsKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagsKHR(VkSurfaceTransformFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagsKHR deserialize_VkSurfaceTransformFlagsKHR(json &name){
                return name["value"].get<VkSurfaceTransformFlagsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagsKHR(VkSwapchainCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagsKHR deserialize_VkSwapchainCreateFlagsKHR(json &name){
                return name["value"].get<VkSwapchainCreateFlagsKHR>();
            };
        

            json serialize_VkDisplayModeCreateFlagsKHR(VkDisplayModeCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayModeCreateFlagsKHR deserialize_VkDisplayModeCreateFlagsKHR(json &name){
                return name["value"].get<VkDisplayModeCreateFlagsKHR>();
            };
        

            json serialize_VkDisplaySurfaceCreateFlagsKHR(VkDisplaySurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplaySurfaceCreateFlagsKHR deserialize_VkDisplaySurfaceCreateFlagsKHR(json &name){
                return name["value"].get<VkDisplaySurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXlibSurfaceCreateFlagsKHR(VkXlibSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXlibSurfaceCreateFlagsKHR deserialize_VkXlibSurfaceCreateFlagsKHR(json &name){
                return name["value"].get<VkXlibSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXcbSurfaceCreateFlagsKHR(VkXcbSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXcbSurfaceCreateFlagsKHR deserialize_VkXcbSurfaceCreateFlagsKHR(json &name){
                return name["value"].get<VkXcbSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkHeadlessSurfaceCreateFlagsEXT(VkHeadlessSurfaceCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHeadlessSurfaceCreateFlagsEXT deserialize_VkHeadlessSurfaceCreateFlagsEXT(json &name){
                return name["value"].get<VkHeadlessSurfaceCreateFlagsEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlags(VkPeerMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlags deserialize_VkPeerMemoryFeatureFlags(json &name){
                return name["value"].get<VkPeerMemoryFeatureFlags>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagsKHR(VkPeerMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagsKHR deserialize_VkPeerMemoryFeatureFlagsKHR(json &name){
                return name["value"].get<VkPeerMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlags(VkMemoryAllocateFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlags deserialize_VkMemoryAllocateFlags(json &name){
                return name["value"].get<VkMemoryAllocateFlags>();
            };
        

            json serialize_VkMemoryAllocateFlagsKHR(VkMemoryAllocateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagsKHR deserialize_VkMemoryAllocateFlagsKHR(json &name){
                return name["value"].get<VkMemoryAllocateFlagsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagsKHR(VkDeviceGroupPresentModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagsKHR deserialize_VkDeviceGroupPresentModeFlagsKHR(json &name){
                return name["value"].get<VkDeviceGroupPresentModeFlagsKHR>();
            };
        

            json serialize_VkDebugReportFlagsEXT(VkDebugReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagsEXT deserialize_VkDebugReportFlagsEXT(json &name){
                return name["value"].get<VkDebugReportFlagsEXT>();
            };
        

            json serialize_VkCommandPoolTrimFlags(VkCommandPoolTrimFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlags deserialize_VkCommandPoolTrimFlags(json &name){
                return name["value"].get<VkCommandPoolTrimFlags>();
            };
        

            json serialize_VkCommandPoolTrimFlagsKHR(VkCommandPoolTrimFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlagsKHR deserialize_VkCommandPoolTrimFlagsKHR(json &name){
                return name["value"].get<VkCommandPoolTrimFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsNV(VkExternalMemoryHandleTypeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsNV deserialize_VkExternalMemoryHandleTypeFlagsNV(json &name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsNV(VkExternalMemoryFeatureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsNV deserialize_VkExternalMemoryFeatureFlagsNV(json &name){
                return name["value"].get<VkExternalMemoryFeatureFlagsNV>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlags(VkExternalMemoryHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlags deserialize_VkExternalMemoryHandleTypeFlags(json &name){
                return name["value"].get<VkExternalMemoryHandleTypeFlags>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsKHR(VkExternalMemoryHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsKHR deserialize_VkExternalMemoryHandleTypeFlagsKHR(json &name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlags(VkExternalMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlags deserialize_VkExternalMemoryFeatureFlags(json &name){
                return name["value"].get<VkExternalMemoryFeatureFlags>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsKHR(VkExternalMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsKHR deserialize_VkExternalMemoryFeatureFlagsKHR(json &name){
                return name["value"].get<VkExternalMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlags(VkExternalSemaphoreHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlags deserialize_VkExternalSemaphoreHandleTypeFlags(json &name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlags>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagsKHR(VkExternalSemaphoreHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagsKHR deserialize_VkExternalSemaphoreHandleTypeFlagsKHR(json &name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlags(VkExternalSemaphoreFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlags deserialize_VkExternalSemaphoreFeatureFlags(json &name){
                return name["value"].get<VkExternalSemaphoreFeatureFlags>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagsKHR(VkExternalSemaphoreFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagsKHR deserialize_VkExternalSemaphoreFeatureFlagsKHR(json &name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlags(VkSemaphoreImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlags deserialize_VkSemaphoreImportFlags(json &name){
                return name["value"].get<VkSemaphoreImportFlags>();
            };
        

            json serialize_VkSemaphoreImportFlagsKHR(VkSemaphoreImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagsKHR deserialize_VkSemaphoreImportFlagsKHR(json &name){
                return name["value"].get<VkSemaphoreImportFlagsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlags(VkExternalFenceHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlags deserialize_VkExternalFenceHandleTypeFlags(json &name){
                return name["value"].get<VkExternalFenceHandleTypeFlags>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagsKHR(VkExternalFenceHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagsKHR deserialize_VkExternalFenceHandleTypeFlagsKHR(json &name){
                return name["value"].get<VkExternalFenceHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlags(VkExternalFenceFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlags deserialize_VkExternalFenceFeatureFlags(json &name){
                return name["value"].get<VkExternalFenceFeatureFlags>();
            };
        

            json serialize_VkExternalFenceFeatureFlagsKHR(VkExternalFenceFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagsKHR deserialize_VkExternalFenceFeatureFlagsKHR(json &name){
                return name["value"].get<VkExternalFenceFeatureFlagsKHR>();
            };
        

            json serialize_VkFenceImportFlags(VkFenceImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlags deserialize_VkFenceImportFlags(json &name){
                return name["value"].get<VkFenceImportFlags>();
            };
        

            json serialize_VkFenceImportFlagsKHR(VkFenceImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagsKHR deserialize_VkFenceImportFlagsKHR(json &name){
                return name["value"].get<VkFenceImportFlagsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagsEXT(VkSurfaceCounterFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagsEXT deserialize_VkSurfaceCounterFlagsEXT(json &name){
                return name["value"].get<VkSurfaceCounterFlagsEXT>();
            };
        

            json serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(VkPipelineViewportSwizzleStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportSwizzleStateCreateFlagsNV deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(json &name){
                return name["value"].get<VkPipelineViewportSwizzleStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(VkPipelineDiscardRectangleStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDiscardRectangleStateCreateFlagsEXT deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(json &name){
                return name["value"].get<VkPipelineDiscardRectangleStateCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineCoverageToColorStateCreateFlagsNV(VkPipelineCoverageToColorStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageToColorStateCreateFlagsNV deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(json &name){
                return name["value"].get<VkPipelineCoverageToColorStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageModulationStateCreateFlagsNV(VkPipelineCoverageModulationStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageModulationStateCreateFlagsNV deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(json &name){
                return name["value"].get<VkPipelineCoverageModulationStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageReductionStateCreateFlagsNV(VkPipelineCoverageReductionStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageReductionStateCreateFlagsNV deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(json &name){
                return name["value"].get<VkPipelineCoverageReductionStateCreateFlagsNV>();
            };
        

            json serialize_VkValidationCacheCreateFlagsEXT(VkValidationCacheCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheCreateFlagsEXT deserialize_VkValidationCacheCreateFlagsEXT(json &name){
                return name["value"].get<VkValidationCacheCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagsEXT(VkDebugUtilsMessageSeverityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagsEXT deserialize_VkDebugUtilsMessageSeverityFlagsEXT(json &name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagsEXT(VkDebugUtilsMessageTypeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagsEXT deserialize_VkDebugUtilsMessageTypeFlagsEXT(json &name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCreateFlagsEXT(VkDebugUtilsMessengerCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCreateFlagsEXT deserialize_VkDebugUtilsMessengerCreateFlagsEXT(json &name){
                return name["value"].get<VkDebugUtilsMessengerCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(VkDebugUtilsMessengerCallbackDataFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCallbackDataFlagsEXT deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(json &name){
                return name["value"].get<VkDebugUtilsMessengerCallbackDataFlagsEXT>();
            };
        

            json serialize_VkDeviceMemoryReportFlagsEXT(VkDeviceMemoryReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportFlagsEXT deserialize_VkDeviceMemoryReportFlagsEXT(json &name){
                return name["value"].get<VkDeviceMemoryReportFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(VkPipelineRasterizationConservativeStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationConservativeStateCreateFlagsEXT deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(json &name){
                return name["value"].get<VkPipelineRasterizationConservativeStateCreateFlagsEXT>();
            };
        

            json serialize_VkDescriptorBindingFlags(VkDescriptorBindingFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlags deserialize_VkDescriptorBindingFlags(json &name){
                return name["value"].get<VkDescriptorBindingFlags>();
            };
        

            json serialize_VkDescriptorBindingFlagsEXT(VkDescriptorBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagsEXT deserialize_VkDescriptorBindingFlagsEXT(json &name){
                return name["value"].get<VkDescriptorBindingFlagsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagsEXT(VkConditionalRenderingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagsEXT deserialize_VkConditionalRenderingFlagsEXT(json &name){
                return name["value"].get<VkConditionalRenderingFlagsEXT>();
            };
        

            json serialize_VkResolveModeFlags(VkResolveModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlags deserialize_VkResolveModeFlags(json &name){
                return name["value"].get<VkResolveModeFlags>();
            };
        

            json serialize_VkResolveModeFlagsKHR(VkResolveModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagsKHR deserialize_VkResolveModeFlagsKHR(json &name){
                return name["value"].get<VkResolveModeFlagsKHR>();
            };
        

            json serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(VkPipelineRasterizationStateStreamCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateStreamCreateFlagsEXT deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(json &name){
                return name["value"].get<VkPipelineRasterizationStateStreamCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(VkPipelineRasterizationDepthClipStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationDepthClipStateCreateFlagsEXT deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(json &name){
                return name["value"].get<VkPipelineRasterizationDepthClipStateCreateFlagsEXT>();
            };
        

            json serialize_VkToolPurposeFlags(VkToolPurposeFlags name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlags deserialize_VkToolPurposeFlags(json &name){
                return name["value"].get<VkToolPurposeFlags>();
            };
        

            json serialize_VkToolPurposeFlagsEXT(VkToolPurposeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagsEXT deserialize_VkToolPurposeFlagsEXT(json &name){
                return name["value"].get<VkToolPurposeFlagsEXT>();
            };
        

            json serialize_VkSubmitFlags(VkSubmitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlags deserialize_VkSubmitFlags(json &name){
                return name["value"].get<VkSubmitFlags>();
            };
        

            json serialize_VkSubmitFlagsKHR(VkSubmitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagsKHR deserialize_VkSubmitFlagsKHR(json &name){
                return name["value"].get<VkSubmitFlagsKHR>();
            };
        

            json serialize_VkHostImageCopyFlagsEXT(VkHostImageCopyFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagsEXT deserialize_VkHostImageCopyFlagsEXT(json &name){
                return name["value"].get<VkHostImageCopyFlagsEXT>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagsEXT(VkGraphicsPipelineLibraryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagsEXT deserialize_VkGraphicsPipelineLibraryFlagsEXT(json &name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFlagsEXT(VkImageCompressionFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagsEXT deserialize_VkImageCompressionFlagsEXT(json &name){
                return name["value"].get<VkImageCompressionFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagsEXT(VkImageCompressionFixedRateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagsEXT deserialize_VkImageCompressionFixedRateFlagsEXT(json &name){
                return name["value"].get<VkImageCompressionFixedRateFlagsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagsEXT(VkDeviceAddressBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagsEXT deserialize_VkDeviceAddressBindingFlagsEXT(json &name){
                return name["value"].get<VkDeviceAddressBindingFlagsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagsNV(VkOpticalFlowGridSizeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagsNV deserialize_VkOpticalFlowGridSizeFlagsNV(json &name){
                return name["value"].get<VkOpticalFlowGridSizeFlagsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagsNV(VkOpticalFlowUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagsNV deserialize_VkOpticalFlowUsageFlagsNV(json &name){
                return name["value"].get<VkOpticalFlowUsageFlagsNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagsNV(VkOpticalFlowSessionCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagsNV deserialize_VkOpticalFlowSessionCreateFlagsNV(json &name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagsNV(VkOpticalFlowExecuteFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagsNV deserialize_VkOpticalFlowExecuteFlagsNV(json &name){
                return name["value"].get<VkOpticalFlowExecuteFlagsNV>();
            };
        

            json serialize_VkFrameBoundaryFlagsEXT(VkFrameBoundaryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagsEXT deserialize_VkFrameBoundaryFlagsEXT(json &name){
                return name["value"].get<VkFrameBoundaryFlagsEXT>();
            };
        

            json serialize_VkPresentScalingFlagsEXT(VkPresentScalingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagsEXT deserialize_VkPresentScalingFlagsEXT(json &name){
                return name["value"].get<VkPresentScalingFlagsEXT>();
            };
        

            json serialize_VkPresentGravityFlagsEXT(VkPresentGravityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagsEXT deserialize_VkPresentGravityFlagsEXT(json &name){
                return name["value"].get<VkPresentGravityFlagsEXT>();
            };
        

            json serialize_VkShaderCreateFlagsEXT(VkShaderCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagsEXT deserialize_VkShaderCreateFlagsEXT(json &name){
                return name["value"].get<VkShaderCreateFlagsEXT>();
            };
        

            json serialize_VkVideoCodecOperationFlagsKHR(VkVideoCodecOperationFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagsKHR deserialize_VkVideoCodecOperationFlagsKHR(json &name){
                return name["value"].get<VkVideoCodecOperationFlagsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagsKHR(VkVideoCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagsKHR deserialize_VkVideoCapabilityFlagsKHR(json &name){
                return name["value"].get<VkVideoCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagsKHR(VkVideoSessionCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagsKHR deserialize_VkVideoSessionCreateFlagsKHR(json &name){
                return name["value"].get<VkVideoSessionCreateFlagsKHR>();
            };
        

            json serialize_VkVideoSessionParametersCreateFlagsKHR(VkVideoSessionParametersCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionParametersCreateFlagsKHR deserialize_VkVideoSessionParametersCreateFlagsKHR(json &name){
                return name["value"].get<VkVideoSessionParametersCreateFlagsKHR>();
            };
        

            json serialize_VkVideoBeginCodingFlagsKHR(VkVideoBeginCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoBeginCodingFlagsKHR deserialize_VkVideoBeginCodingFlagsKHR(json &name){
                return name["value"].get<VkVideoBeginCodingFlagsKHR>();
            };
        

            json serialize_VkVideoEndCodingFlagsKHR(VkVideoEndCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoEndCodingFlagsKHR deserialize_VkVideoEndCodingFlagsKHR(json &name){
                return name["value"].get<VkVideoEndCodingFlagsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagsKHR(VkVideoCodingControlFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagsKHR deserialize_VkVideoCodingControlFlagsKHR(json &name){
                return name["value"].get<VkVideoCodingControlFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagsKHR(VkVideoDecodeUsageFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagsKHR deserialize_VkVideoDecodeUsageFlagsKHR(json &name){
                return name["value"].get<VkVideoDecodeUsageFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagsKHR(VkVideoDecodeCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagsKHR deserialize_VkVideoDecodeCapabilityFlagsKHR(json &name){
                return name["value"].get<VkVideoDecodeCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeFlagsKHR(VkVideoDecodeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeFlagsKHR deserialize_VkVideoDecodeFlagsKHR(json &name){
                return name["value"].get<VkVideoDecodeFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagsKHR(VkVideoDecodeH264PictureLayoutFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagsKHR(json &name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagsKHR(VkVideoChromaSubsamplingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagsKHR deserialize_VkVideoChromaSubsamplingFlagsKHR(json &name){
                return name["value"].get<VkVideoChromaSubsamplingFlagsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagsKHR(VkVideoComponentBitDepthFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagsKHR deserialize_VkVideoComponentBitDepthFlagsKHR(json &name){
                return name["value"].get<VkVideoComponentBitDepthFlagsKHR>();
            };
        

            json serialize_VkAttachmentLoadOp(VkAttachmentLoadOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentLoadOp deserialize_VkAttachmentLoadOp(json &name){
                return name["value"].get<VkAttachmentLoadOp>();
            };
        

            json serialize_VkAttachmentStoreOp(VkAttachmentStoreOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentStoreOp deserialize_VkAttachmentStoreOp(json &name){
                return name["value"].get<VkAttachmentStoreOp>();
            };
        

            json serialize_VkBlendFactor(VkBlendFactor name){
                return json::object({{"value",name}});
            };
        

            VkBlendFactor deserialize_VkBlendFactor(json &name){
                return name["value"].get<VkBlendFactor>();
            };
        

            json serialize_VkBlendOp(VkBlendOp name){
                return json::object({{"value",name}});
            };
        

            VkBlendOp deserialize_VkBlendOp(json &name){
                return name["value"].get<VkBlendOp>();
            };
        

            json serialize_VkBorderColor(VkBorderColor name){
                return json::object({{"value",name}});
            };
        

            VkBorderColor deserialize_VkBorderColor(json &name){
                return name["value"].get<VkBorderColor>();
            };
        

            json serialize_VkFramebufferCreateFlagBits(VkFramebufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlagBits deserialize_VkFramebufferCreateFlagBits(json &name){
                return name["value"].get<VkFramebufferCreateFlagBits>();
            };
        

            json serialize_VkRenderPassCreateFlagBits(VkRenderPassCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlagBits deserialize_VkRenderPassCreateFlagBits(json &name){
                return name["value"].get<VkRenderPassCreateFlagBits>();
            };
        

            json serialize_VkSamplerCreateFlagBits(VkSamplerCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlagBits deserialize_VkSamplerCreateFlagBits(json &name){
                return name["value"].get<VkSamplerCreateFlagBits>();
            };
        

            json serialize_VkPipelineCacheHeaderVersion(VkPipelineCacheHeaderVersion name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheHeaderVersion deserialize_VkPipelineCacheHeaderVersion(json &name){
                return name["value"].get<VkPipelineCacheHeaderVersion>();
            };
        

            json serialize_VkPipelineCacheCreateFlagBits(VkPipelineCacheCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlagBits deserialize_VkPipelineCacheCreateFlagBits(json &name){
                return name["value"].get<VkPipelineCacheCreateFlagBits>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlagBits(VkPipelineShaderStageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlagBits deserialize_VkPipelineShaderStageCreateFlagBits(json &name){
                return name["value"].get<VkPipelineShaderStageCreateFlagBits>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlagBits(VkDescriptorSetLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlagBits deserialize_VkDescriptorSetLayoutCreateFlagBits(json &name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlagBits>();
            };
        

            json serialize_VkInstanceCreateFlagBits(VkInstanceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlagBits deserialize_VkInstanceCreateFlagBits(json &name){
                return name["value"].get<VkInstanceCreateFlagBits>();
            };
        

            json serialize_VkDeviceQueueCreateFlagBits(VkDeviceQueueCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlagBits deserialize_VkDeviceQueueCreateFlagBits(json &name){
                return name["value"].get<VkDeviceQueueCreateFlagBits>();
            };
        

            json serialize_VkBufferCreateFlagBits(VkBufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlagBits deserialize_VkBufferCreateFlagBits(json &name){
                return name["value"].get<VkBufferCreateFlagBits>();
            };
        

            json serialize_VkBufferUsageFlagBits(VkBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits deserialize_VkBufferUsageFlagBits(json &name){
                return name["value"].get<VkBufferUsageFlagBits>();
            };
        

            json serialize_VkColorComponentFlagBits(VkColorComponentFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlagBits deserialize_VkColorComponentFlagBits(json &name){
                return name["value"].get<VkColorComponentFlagBits>();
            };
        

            json serialize_VkComponentSwizzle(VkComponentSwizzle name){
                return json::object({{"value",name}});
            };
        

            VkComponentSwizzle deserialize_VkComponentSwizzle(json &name){
                return name["value"].get<VkComponentSwizzle>();
            };
        

            json serialize_VkCommandPoolCreateFlagBits(VkCommandPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlagBits deserialize_VkCommandPoolCreateFlagBits(json &name){
                return name["value"].get<VkCommandPoolCreateFlagBits>();
            };
        

            json serialize_VkCommandPoolResetFlagBits(VkCommandPoolResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlagBits deserialize_VkCommandPoolResetFlagBits(json &name){
                return name["value"].get<VkCommandPoolResetFlagBits>();
            };
        

            json serialize_VkCommandBufferResetFlagBits(VkCommandBufferResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlagBits deserialize_VkCommandBufferResetFlagBits(json &name){
                return name["value"].get<VkCommandBufferResetFlagBits>();
            };
        

            json serialize_VkCommandBufferLevel(VkCommandBufferLevel name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferLevel deserialize_VkCommandBufferLevel(json &name){
                return name["value"].get<VkCommandBufferLevel>();
            };
        

            json serialize_VkCommandBufferUsageFlagBits(VkCommandBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlagBits deserialize_VkCommandBufferUsageFlagBits(json &name){
                return name["value"].get<VkCommandBufferUsageFlagBits>();
            };
        

            json serialize_VkCompareOp(VkCompareOp name){
                return json::object({{"value",name}});
            };
        

            VkCompareOp deserialize_VkCompareOp(json &name){
                return name["value"].get<VkCompareOp>();
            };
        

            json serialize_VkCullModeFlagBits(VkCullModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlagBits deserialize_VkCullModeFlagBits(json &name){
                return name["value"].get<VkCullModeFlagBits>();
            };
        

            json serialize_VkDescriptorType(VkDescriptorType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorType deserialize_VkDescriptorType(json &name){
                return name["value"].get<VkDescriptorType>();
            };
        

            json serialize_VkDynamicState(VkDynamicState name){
                return json::object({{"value",name}});
            };
        

            VkDynamicState deserialize_VkDynamicState(json &name){
                return name["value"].get<VkDynamicState>();
            };
        

            json serialize_VkFenceCreateFlagBits(VkFenceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlagBits deserialize_VkFenceCreateFlagBits(json &name){
                return name["value"].get<VkFenceCreateFlagBits>();
            };
        

            json serialize_VkPolygonMode(VkPolygonMode name){
                return json::object({{"value",name}});
            };
        

            VkPolygonMode deserialize_VkPolygonMode(json &name){
                return name["value"].get<VkPolygonMode>();
            };
        

            json serialize_VkFormat(VkFormat name){
                return json::object({{"value",name}});
            };
        

            VkFormat deserialize_VkFormat(json &name){
                return name["value"].get<VkFormat>();
            };
        

            json serialize_VkFormatFeatureFlagBits(VkFormatFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits deserialize_VkFormatFeatureFlagBits(json &name){
                return name["value"].get<VkFormatFeatureFlagBits>();
            };
        

            json serialize_VkFrontFace(VkFrontFace name){
                return json::object({{"value",name}});
            };
        

            VkFrontFace deserialize_VkFrontFace(json &name){
                return name["value"].get<VkFrontFace>();
            };
        

            json serialize_VkImageAspectFlagBits(VkImageAspectFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlagBits deserialize_VkImageAspectFlagBits(json &name){
                return name["value"].get<VkImageAspectFlagBits>();
            };
        

            json serialize_VkImageCreateFlagBits(VkImageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlagBits deserialize_VkImageCreateFlagBits(json &name){
                return name["value"].get<VkImageCreateFlagBits>();
            };
        

            json serialize_VkImageLayout(VkImageLayout name){
                return json::object({{"value",name}});
            };
        

            VkImageLayout deserialize_VkImageLayout(json &name){
                return name["value"].get<VkImageLayout>();
            };
        

            json serialize_VkImageTiling(VkImageTiling name){
                return json::object({{"value",name}});
            };
        

            VkImageTiling deserialize_VkImageTiling(json &name){
                return name["value"].get<VkImageTiling>();
            };
        

            json serialize_VkImageType(VkImageType name){
                return json::object({{"value",name}});
            };
        

            VkImageType deserialize_VkImageType(json &name){
                return name["value"].get<VkImageType>();
            };
        

            json serialize_VkImageUsageFlagBits(VkImageUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlagBits deserialize_VkImageUsageFlagBits(json &name){
                return name["value"].get<VkImageUsageFlagBits>();
            };
        

            json serialize_VkImageViewCreateFlagBits(VkImageViewCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlagBits deserialize_VkImageViewCreateFlagBits(json &name){
                return name["value"].get<VkImageViewCreateFlagBits>();
            };
        

            json serialize_VkImageViewType(VkImageViewType name){
                return json::object({{"value",name}});
            };
        

            VkImageViewType deserialize_VkImageViewType(json &name){
                return name["value"].get<VkImageViewType>();
            };
        

            json serialize_VkSharingMode(VkSharingMode name){
                return json::object({{"value",name}});
            };
        

            VkSharingMode deserialize_VkSharingMode(json &name){
                return name["value"].get<VkSharingMode>();
            };
        

            json serialize_VkIndexType(VkIndexType name){
                return json::object({{"value",name}});
            };
        

            VkIndexType deserialize_VkIndexType(json &name){
                return name["value"].get<VkIndexType>();
            };
        

            json serialize_VkLogicOp(VkLogicOp name){
                return json::object({{"value",name}});
            };
        

            VkLogicOp deserialize_VkLogicOp(json &name){
                return name["value"].get<VkLogicOp>();
            };
        

            json serialize_VkMemoryHeapFlagBits(VkMemoryHeapFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlagBits deserialize_VkMemoryHeapFlagBits(json &name){
                return name["value"].get<VkMemoryHeapFlagBits>();
            };
        

            json serialize_VkAccessFlagBits(VkAccessFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits deserialize_VkAccessFlagBits(json &name){
                return name["value"].get<VkAccessFlagBits>();
            };
        

            json serialize_VkMemoryPropertyFlagBits(VkMemoryPropertyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlagBits deserialize_VkMemoryPropertyFlagBits(json &name){
                return name["value"].get<VkMemoryPropertyFlagBits>();
            };
        

            json serialize_VkPhysicalDeviceType(VkPhysicalDeviceType name){
                return json::object({{"value",name}});
            };
        

            VkPhysicalDeviceType deserialize_VkPhysicalDeviceType(json &name){
                return name["value"].get<VkPhysicalDeviceType>();
            };
        

            json serialize_VkPipelineBindPoint(VkPipelineBindPoint name){
                return json::object({{"value",name}});
            };
        

            VkPipelineBindPoint deserialize_VkPipelineBindPoint(json &name){
                return name["value"].get<VkPipelineBindPoint>();
            };
        

            json serialize_VkPipelineCreateFlagBits(VkPipelineCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits deserialize_VkPipelineCreateFlagBits(json &name){
                return name["value"].get<VkPipelineCreateFlagBits>();
            };
        

            json serialize_VkPrimitiveTopology(VkPrimitiveTopology name){
                return json::object({{"value",name}});
            };
        

            VkPrimitiveTopology deserialize_VkPrimitiveTopology(json &name){
                return name["value"].get<VkPrimitiveTopology>();
            };
        

            json serialize_VkQueryControlFlagBits(VkQueryControlFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlagBits deserialize_VkQueryControlFlagBits(json &name){
                return name["value"].get<VkQueryControlFlagBits>();
            };
        

            json serialize_VkQueryPipelineStatisticFlagBits(VkQueryPipelineStatisticFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlagBits deserialize_VkQueryPipelineStatisticFlagBits(json &name){
                return name["value"].get<VkQueryPipelineStatisticFlagBits>();
            };
        

            json serialize_VkQueryResultFlagBits(VkQueryResultFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlagBits deserialize_VkQueryResultFlagBits(json &name){
                return name["value"].get<VkQueryResultFlagBits>();
            };
        

            json serialize_VkQueryType(VkQueryType name){
                return json::object({{"value",name}});
            };
        

            VkQueryType deserialize_VkQueryType(json &name){
                return name["value"].get<VkQueryType>();
            };
        

            json serialize_VkQueueFlagBits(VkQueueFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlagBits deserialize_VkQueueFlagBits(json &name){
                return name["value"].get<VkQueueFlagBits>();
            };
        

            json serialize_VkSubpassContents(VkSubpassContents name){
                return json::object({{"value",name}});
            };
        

            VkSubpassContents deserialize_VkSubpassContents(json &name){
                return name["value"].get<VkSubpassContents>();
            };
        

            json serialize_VkResult(VkResult name){
                return json::object({{"value",name}});
            };
        

            VkResult deserialize_VkResult(json &name){
                return name["value"].get<VkResult>();
            };
        

            json serialize_VkShaderStageFlagBits(VkShaderStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlagBits deserialize_VkShaderStageFlagBits(json &name){
                return name["value"].get<VkShaderStageFlagBits>();
            };
        

            json serialize_VkSparseMemoryBindFlagBits(VkSparseMemoryBindFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlagBits deserialize_VkSparseMemoryBindFlagBits(json &name){
                return name["value"].get<VkSparseMemoryBindFlagBits>();
            };
        

            json serialize_VkStencilFaceFlagBits(VkStencilFaceFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlagBits deserialize_VkStencilFaceFlagBits(json &name){
                return name["value"].get<VkStencilFaceFlagBits>();
            };
        

            json serialize_VkStencilOp(VkStencilOp name){
                return json::object({{"value",name}});
            };
        

            VkStencilOp deserialize_VkStencilOp(json &name){
                return name["value"].get<VkStencilOp>();
            };
        

            json serialize_VkStructureType(VkStructureType name){
                return json::object({{"value",name}});
            };
        

            VkStructureType deserialize_VkStructureType(json &name){
                return name["value"].get<VkStructureType>();
            };
        

            json serialize_VkSystemAllocationScope(VkSystemAllocationScope name){
                return json::object({{"value",name}});
            };
        

            VkSystemAllocationScope deserialize_VkSystemAllocationScope(json &name){
                return name["value"].get<VkSystemAllocationScope>();
            };
        

            json serialize_VkInternalAllocationType(VkInternalAllocationType name){
                return json::object({{"value",name}});
            };
        

            VkInternalAllocationType deserialize_VkInternalAllocationType(json &name){
                return name["value"].get<VkInternalAllocationType>();
            };
        

            json serialize_VkSamplerAddressMode(VkSamplerAddressMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerAddressMode deserialize_VkSamplerAddressMode(json &name){
                return name["value"].get<VkSamplerAddressMode>();
            };
        

            json serialize_VkFilter(VkFilter name){
                return json::object({{"value",name}});
            };
        

            VkFilter deserialize_VkFilter(json &name){
                return name["value"].get<VkFilter>();
            };
        

            json serialize_VkSamplerMipmapMode(VkSamplerMipmapMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerMipmapMode deserialize_VkSamplerMipmapMode(json &name){
                return name["value"].get<VkSamplerMipmapMode>();
            };
        

            json serialize_VkVertexInputRate(VkVertexInputRate name){
                return json::object({{"value",name}});
            };
        

            VkVertexInputRate deserialize_VkVertexInputRate(json &name){
                return name["value"].get<VkVertexInputRate>();
            };
        

            json serialize_VkPipelineStageFlagBits(VkPipelineStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits deserialize_VkPipelineStageFlagBits(json &name){
                return name["value"].get<VkPipelineStageFlagBits>();
            };
        

            json serialize_VkSparseImageFormatFlagBits(VkSparseImageFormatFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlagBits deserialize_VkSparseImageFormatFlagBits(json &name){
                return name["value"].get<VkSparseImageFormatFlagBits>();
            };
        

            json serialize_VkSampleCountFlagBits(VkSampleCountFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlagBits deserialize_VkSampleCountFlagBits(json &name){
                return name["value"].get<VkSampleCountFlagBits>();
            };
        

            json serialize_VkAttachmentDescriptionFlagBits(VkAttachmentDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlagBits deserialize_VkAttachmentDescriptionFlagBits(json &name){
                return name["value"].get<VkAttachmentDescriptionFlagBits>();
            };
        

            json serialize_VkDescriptorPoolCreateFlagBits(VkDescriptorPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlagBits deserialize_VkDescriptorPoolCreateFlagBits(json &name){
                return name["value"].get<VkDescriptorPoolCreateFlagBits>();
            };
        

            json serialize_VkDependencyFlagBits(VkDependencyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlagBits deserialize_VkDependencyFlagBits(json &name){
                return name["value"].get<VkDependencyFlagBits>();
            };
        

            json serialize_VkObjectType(VkObjectType name){
                return json::object({{"value",name}});
            };
        

            VkObjectType deserialize_VkObjectType(json &name){
                return name["value"].get<VkObjectType>();
            };
        

            json serialize_VkEventCreateFlagBits(VkEventCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlagBits deserialize_VkEventCreateFlagBits(json &name){
                return name["value"].get<VkEventCreateFlagBits>();
            };
        

            json serialize_VkPipelineLayoutCreateFlagBits(VkPipelineLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlagBits deserialize_VkPipelineLayoutCreateFlagBits(json &name){
                return name["value"].get<VkPipelineLayoutCreateFlagBits>();
            };
        

            json serialize_VkRayTracingInvocationReorderModeNV(VkRayTracingInvocationReorderModeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingInvocationReorderModeNV deserialize_VkRayTracingInvocationReorderModeNV(json &name){
                return name["value"].get<VkRayTracingInvocationReorderModeNV>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagBitsNV(VkIndirectCommandsLayoutUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagBitsNV deserialize_VkIndirectCommandsLayoutUsageFlagBitsNV(json &name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagBitsNV>();
            };
        

            json serialize_VkIndirectCommandsTokenTypeNV(VkIndirectCommandsTokenTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsTokenTypeNV deserialize_VkIndirectCommandsTokenTypeNV(json &name){
                return name["value"].get<VkIndirectCommandsTokenTypeNV>();
            };
        

            json serialize_VkIndirectStateFlagBitsNV(VkIndirectStateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagBitsNV deserialize_VkIndirectStateFlagBitsNV(json &name){
                return name["value"].get<VkIndirectStateFlagBitsNV>();
            };
        

            json serialize_VkDescriptorUpdateTemplateType(VkDescriptorUpdateTemplateType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateType deserialize_VkDescriptorUpdateTemplateType(json &name){
                return name["value"].get<VkDescriptorUpdateTemplateType>();
            };
        

            json serialize_VkDescriptorUpdateTemplateTypeKHR(VkDescriptorUpdateTemplateTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateTypeKHR deserialize_VkDescriptorUpdateTemplateTypeKHR(json &name){
                return name["value"].get<VkDescriptorUpdateTemplateTypeKHR>();
            };
        

            json serialize_VkViewportCoordinateSwizzleNV(VkViewportCoordinateSwizzleNV name){
                return json::object({{"value",name}});
            };
        

            VkViewportCoordinateSwizzleNV deserialize_VkViewportCoordinateSwizzleNV(json &name){
                return name["value"].get<VkViewportCoordinateSwizzleNV>();
            };
        

            json serialize_VkDiscardRectangleModeEXT(VkDiscardRectangleModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDiscardRectangleModeEXT deserialize_VkDiscardRectangleModeEXT(json &name){
                return name["value"].get<VkDiscardRectangleModeEXT>();
            };
        

            json serialize_VkSubpassDescriptionFlagBits(VkSubpassDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlagBits deserialize_VkSubpassDescriptionFlagBits(json &name){
                return name["value"].get<VkSubpassDescriptionFlagBits>();
            };
        

            json serialize_VkPointClippingBehavior(VkPointClippingBehavior name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehavior deserialize_VkPointClippingBehavior(json &name){
                return name["value"].get<VkPointClippingBehavior>();
            };
        

            json serialize_VkPointClippingBehaviorKHR(VkPointClippingBehaviorKHR name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehaviorKHR deserialize_VkPointClippingBehaviorKHR(json &name){
                return name["value"].get<VkPointClippingBehaviorKHR>();
            };
        

            json serialize_VkCoverageModulationModeNV(VkCoverageModulationModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageModulationModeNV deserialize_VkCoverageModulationModeNV(json &name){
                return name["value"].get<VkCoverageModulationModeNV>();
            };
        

            json serialize_VkCoverageReductionModeNV(VkCoverageReductionModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageReductionModeNV deserialize_VkCoverageReductionModeNV(json &name){
                return name["value"].get<VkCoverageReductionModeNV>();
            };
        

            json serialize_VkValidationCacheHeaderVersionEXT(VkValidationCacheHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheHeaderVersionEXT deserialize_VkValidationCacheHeaderVersionEXT(json &name){
                return name["value"].get<VkValidationCacheHeaderVersionEXT>();
            };
        

            json serialize_VkShaderInfoTypeAMD(VkShaderInfoTypeAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderInfoTypeAMD deserialize_VkShaderInfoTypeAMD(json &name){
                return name["value"].get<VkShaderInfoTypeAMD>();
            };
        

            json serialize_VkQueueGlobalPriorityKHR(VkQueueGlobalPriorityKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityKHR deserialize_VkQueueGlobalPriorityKHR(json &name){
                return name["value"].get<VkQueueGlobalPriorityKHR>();
            };
        

            json serialize_VkQueueGlobalPriorityEXT(VkQueueGlobalPriorityEXT name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityEXT deserialize_VkQueueGlobalPriorityEXT(json &name){
                return name["value"].get<VkQueueGlobalPriorityEXT>();
            };
        

            json serialize_VkTimeDomainEXT(VkTimeDomainEXT name){
                return json::object({{"value",name}});
            };
        

            VkTimeDomainEXT deserialize_VkTimeDomainEXT(json &name){
                return name["value"].get<VkTimeDomainEXT>();
            };
        

            json serialize_VkConservativeRasterizationModeEXT(VkConservativeRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkConservativeRasterizationModeEXT deserialize_VkConservativeRasterizationModeEXT(json &name){
                return name["value"].get<VkConservativeRasterizationModeEXT>();
            };
        

            json serialize_VkResolveModeFlagBits(VkResolveModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBits deserialize_VkResolveModeFlagBits(json &name){
                return name["value"].get<VkResolveModeFlagBits>();
            };
        

            json serialize_VkResolveModeFlagBitsKHR(VkResolveModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBitsKHR deserialize_VkResolveModeFlagBitsKHR(json &name){
                return name["value"].get<VkResolveModeFlagBitsKHR>();
            };
        

            json serialize_VkDescriptorBindingFlagBits(VkDescriptorBindingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBits deserialize_VkDescriptorBindingFlagBits(json &name){
                return name["value"].get<VkDescriptorBindingFlagBits>();
            };
        

            json serialize_VkDescriptorBindingFlagBitsEXT(VkDescriptorBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBitsEXT deserialize_VkDescriptorBindingFlagBitsEXT(json &name){
                return name["value"].get<VkDescriptorBindingFlagBitsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagBitsEXT(VkConditionalRenderingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagBitsEXT deserialize_VkConditionalRenderingFlagBitsEXT(json &name){
                return name["value"].get<VkConditionalRenderingFlagBitsEXT>();
            };
        

            json serialize_VkSemaphoreType(VkSemaphoreType name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreType deserialize_VkSemaphoreType(json &name){
                return name["value"].get<VkSemaphoreType>();
            };
        

            json serialize_VkSemaphoreTypeKHR(VkSemaphoreTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreTypeKHR deserialize_VkSemaphoreTypeKHR(json &name){
                return name["value"].get<VkSemaphoreTypeKHR>();
            };
        

            json serialize_VkGeometryFlagBitsKHR(VkGeometryFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsKHR deserialize_VkGeometryFlagBitsKHR(json &name){
                return name["value"].get<VkGeometryFlagBitsKHR>();
            };
        

            json serialize_VkGeometryFlagBitsNV(VkGeometryFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsNV deserialize_VkGeometryFlagBitsNV(json &name){
                return name["value"].get<VkGeometryFlagBitsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsKHR(VkGeometryInstanceFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsKHR deserialize_VkGeometryInstanceFlagBitsKHR(json &name){
                return name["value"].get<VkGeometryInstanceFlagBitsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsNV(VkGeometryInstanceFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsNV deserialize_VkGeometryInstanceFlagBitsNV(json &name){
                return name["value"].get<VkGeometryInstanceFlagBitsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsKHR(VkBuildAccelerationStructureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsKHR deserialize_VkBuildAccelerationStructureFlagBitsKHR(json &name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsNV(VkBuildAccelerationStructureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsNV deserialize_VkBuildAccelerationStructureFlagBitsNV(json &name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsNV>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagBitsKHR(VkAccelerationStructureCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagBitsKHR deserialize_VkAccelerationStructureCreateFlagBitsKHR(json &name){
                return name["value"].get<VkAccelerationStructureCreateFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureModeKHR(VkBuildAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureModeKHR deserialize_VkBuildAccelerationStructureModeKHR(json &name){
                return name["value"].get<VkBuildAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeKHR(VkCopyAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeKHR deserialize_VkCopyAccelerationStructureModeKHR(json &name){
                return name["value"].get<VkCopyAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeNV(VkCopyAccelerationStructureModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeNV deserialize_VkCopyAccelerationStructureModeNV(json &name){
                return name["value"].get<VkCopyAccelerationStructureModeNV>();
            };
        

            json serialize_VkAccelerationStructureTypeKHR(VkAccelerationStructureTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeKHR deserialize_VkAccelerationStructureTypeKHR(json &name){
                return name["value"].get<VkAccelerationStructureTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureTypeNV(VkAccelerationStructureTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeNV deserialize_VkAccelerationStructureTypeNV(json &name){
                return name["value"].get<VkAccelerationStructureTypeNV>();
            };
        

            json serialize_VkGeometryTypeKHR(VkGeometryTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeKHR deserialize_VkGeometryTypeKHR(json &name){
                return name["value"].get<VkGeometryTypeKHR>();
            };
        

            json serialize_VkGeometryTypeNV(VkGeometryTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeNV deserialize_VkGeometryTypeNV(json &name){
                return name["value"].get<VkGeometryTypeNV>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeKHR(VkRayTracingShaderGroupTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeKHR deserialize_VkRayTracingShaderGroupTypeKHR(json &name){
                return name["value"].get<VkRayTracingShaderGroupTypeKHR>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeNV(VkRayTracingShaderGroupTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeNV deserialize_VkRayTracingShaderGroupTypeNV(json &name){
                return name["value"].get<VkRayTracingShaderGroupTypeNV>();
            };
        

            json serialize_VkAccelerationStructureMemoryRequirementsTypeNV(VkAccelerationStructureMemoryRequirementsTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMemoryRequirementsTypeNV deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(json &name){
                return name["value"].get<VkAccelerationStructureMemoryRequirementsTypeNV>();
            };
        

            json serialize_VkAccelerationStructureBuildTypeKHR(VkAccelerationStructureBuildTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureBuildTypeKHR deserialize_VkAccelerationStructureBuildTypeKHR(json &name){
                return name["value"].get<VkAccelerationStructureBuildTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureCompatibilityKHR(VkAccelerationStructureCompatibilityKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCompatibilityKHR deserialize_VkAccelerationStructureCompatibilityKHR(json &name){
                return name["value"].get<VkAccelerationStructureCompatibilityKHR>();
            };
        

            json serialize_VkShaderGroupShaderKHR(VkShaderGroupShaderKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderGroupShaderKHR deserialize_VkShaderGroupShaderKHR(json &name){
                return name["value"].get<VkShaderGroupShaderKHR>();
            };
        

            json serialize_VkMemoryOverallocationBehaviorAMD(VkMemoryOverallocationBehaviorAMD name){
                return json::object({{"value",name}});
            };
        

            VkMemoryOverallocationBehaviorAMD deserialize_VkMemoryOverallocationBehaviorAMD(json &name){
                return name["value"].get<VkMemoryOverallocationBehaviorAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagBitsNV(VkDeviceDiagnosticsConfigFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagBitsNV deserialize_VkDeviceDiagnosticsConfigFlagBitsNV(json &name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagBitsNV>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBits(VkPipelineCreationFeedbackFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBits deserialize_VkPipelineCreationFeedbackFlagBits(json &name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBits>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBitsEXT(VkPipelineCreationFeedbackFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBitsEXT deserialize_VkPipelineCreationFeedbackFlagBitsEXT(json &name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBitsEXT>();
            };
        

            json serialize_VkPerformanceCounterScopeKHR(VkPerformanceCounterScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterScopeKHR deserialize_VkPerformanceCounterScopeKHR(json &name){
                return name["value"].get<VkPerformanceCounterScopeKHR>();
            };
        

            json serialize_VkPerformanceCounterUnitKHR(VkPerformanceCounterUnitKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterUnitKHR deserialize_VkPerformanceCounterUnitKHR(json &name){
                return name["value"].get<VkPerformanceCounterUnitKHR>();
            };
        

            json serialize_VkPerformanceCounterStorageKHR(VkPerformanceCounterStorageKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterStorageKHR deserialize_VkPerformanceCounterStorageKHR(json &name){
                return name["value"].get<VkPerformanceCounterStorageKHR>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagBitsKHR(VkPerformanceCounterDescriptionFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagBitsKHR deserialize_VkPerformanceCounterDescriptionFlagBitsKHR(json &name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagBitsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagBitsKHR(VkAcquireProfilingLockFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagBitsKHR deserialize_VkAcquireProfilingLockFlagBitsKHR(json &name){
                return name["value"].get<VkAcquireProfilingLockFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlagBits(VkSemaphoreWaitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBits deserialize_VkSemaphoreWaitFlagBits(json &name){
                return name["value"].get<VkSemaphoreWaitFlagBits>();
            };
        

            json serialize_VkSemaphoreWaitFlagBitsKHR(VkSemaphoreWaitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBitsKHR deserialize_VkSemaphoreWaitFlagBitsKHR(json &name){
                return name["value"].get<VkSemaphoreWaitFlagBitsKHR>();
            };
        

            json serialize_VkPerformanceConfigurationTypeINTEL(VkPerformanceConfigurationTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceConfigurationTypeINTEL deserialize_VkPerformanceConfigurationTypeINTEL(json &name){
                return name["value"].get<VkPerformanceConfigurationTypeINTEL>();
            };
        

            json serialize_VkQueryPoolSamplingModeINTEL(VkQueryPoolSamplingModeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolSamplingModeINTEL deserialize_VkQueryPoolSamplingModeINTEL(json &name){
                return name["value"].get<VkQueryPoolSamplingModeINTEL>();
            };
        

            json serialize_VkPerformanceOverrideTypeINTEL(VkPerformanceOverrideTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceOverrideTypeINTEL deserialize_VkPerformanceOverrideTypeINTEL(json &name){
                return name["value"].get<VkPerformanceOverrideTypeINTEL>();
            };
        

            json serialize_VkPerformanceParameterTypeINTEL(VkPerformanceParameterTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceParameterTypeINTEL deserialize_VkPerformanceParameterTypeINTEL(json &name){
                return name["value"].get<VkPerformanceParameterTypeINTEL>();
            };
        

            json serialize_VkPerformanceValueTypeINTEL(VkPerformanceValueTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceValueTypeINTEL deserialize_VkPerformanceValueTypeINTEL(json &name){
                return name["value"].get<VkPerformanceValueTypeINTEL>();
            };
        

            json serialize_VkLineRasterizationModeEXT(VkLineRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkLineRasterizationModeEXT deserialize_VkLineRasterizationModeEXT(json &name){
                return name["value"].get<VkLineRasterizationModeEXT>();
            };
        

            json serialize_VkPipelineCompilerControlFlagBitsAMD(VkPipelineCompilerControlFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagBitsAMD deserialize_VkPipelineCompilerControlFlagBitsAMD(json &name){
                return name["value"].get<VkPipelineCompilerControlFlagBitsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagBitsAMD(VkShaderCorePropertiesFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagBitsAMD deserialize_VkShaderCorePropertiesFlagBitsAMD(json &name){
                return name["value"].get<VkShaderCorePropertiesFlagBitsAMD>();
            };
        

            json serialize_VkToolPurposeFlagBits(VkToolPurposeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBits deserialize_VkToolPurposeFlagBits(json &name){
                return name["value"].get<VkToolPurposeFlagBits>();
            };
        

            json serialize_VkToolPurposeFlagBitsEXT(VkToolPurposeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBitsEXT deserialize_VkToolPurposeFlagBitsEXT(json &name){
                return name["value"].get<VkToolPurposeFlagBitsEXT>();
            };
        

            json serialize_VkFragmentShadingRateNV(VkFragmentShadingRateNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateNV deserialize_VkFragmentShadingRateNV(json &name){
                return name["value"].get<VkFragmentShadingRateNV>();
            };
        

            json serialize_VkFragmentShadingRateTypeNV(VkFragmentShadingRateTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateTypeNV deserialize_VkFragmentShadingRateTypeNV(json &name){
                return name["value"].get<VkFragmentShadingRateTypeNV>();
            };
        

            json serialize_VkSubpassMergeStatusEXT(VkSubpassMergeStatusEXT name){
                return json::object({{"value",name}});
            };
        

            VkSubpassMergeStatusEXT deserialize_VkSubpassMergeStatusEXT(json &name){
                return name["value"].get<VkSubpassMergeStatusEXT>();
            };
        

            json serialize_VkAccessFlagBits2(VkAccessFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2 deserialize_VkAccessFlagBits2(json &name){
                return name["value"].get<VkAccessFlagBits2>();
            };
        

            json serialize_VkAccessFlagBits2KHR(VkAccessFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2KHR deserialize_VkAccessFlagBits2KHR(json &name){
                return name["value"].get<VkAccessFlagBits2KHR>();
            };
        

            json serialize_VkPipelineStageFlagBits2(VkPipelineStageFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2 deserialize_VkPipelineStageFlagBits2(json &name){
                return name["value"].get<VkPipelineStageFlagBits2>();
            };
        

            json serialize_VkPipelineStageFlagBits2KHR(VkPipelineStageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2KHR deserialize_VkPipelineStageFlagBits2KHR(json &name){
                return name["value"].get<VkPipelineStageFlagBits2KHR>();
            };
        

            json serialize_VkProvokingVertexModeEXT(VkProvokingVertexModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkProvokingVertexModeEXT deserialize_VkProvokingVertexModeEXT(json &name){
                return name["value"].get<VkProvokingVertexModeEXT>();
            };
        

            json serialize_VkHostImageCopyFlagBitsEXT(VkHostImageCopyFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagBitsEXT deserialize_VkHostImageCopyFlagBitsEXT(json &name){
                return name["value"].get<VkHostImageCopyFlagBitsEXT>();
            };
        

            json serialize_VkFormatFeatureFlagBits2(VkFormatFeatureFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2 deserialize_VkFormatFeatureFlagBits2(json &name){
                return name["value"].get<VkFormatFeatureFlagBits2>();
            };
        

            json serialize_VkFormatFeatureFlagBits2KHR(VkFormatFeatureFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2KHR deserialize_VkFormatFeatureFlagBits2KHR(json &name){
                return name["value"].get<VkFormatFeatureFlagBits2KHR>();
            };
        

            json serialize_VkRenderingFlagBits(VkRenderingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBits deserialize_VkRenderingFlagBits(json &name){
                return name["value"].get<VkRenderingFlagBits>();
            };
        

            json serialize_VkRenderingFlagBitsKHR(VkRenderingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBitsKHR deserialize_VkRenderingFlagBitsKHR(json &name){
                return name["value"].get<VkRenderingFlagBitsKHR>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlagBits(VkPipelineDepthStencilStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlagBits deserialize_VkPipelineDepthStencilStateCreateFlagBits(json &name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlagBits>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlagBits(VkPipelineColorBlendStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlagBits deserialize_VkPipelineColorBlendStateCreateFlagBits(json &name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlagBits>();
            };
        

            json serialize_VkImageCompressionFlagBitsEXT(VkImageCompressionFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagBitsEXT deserialize_VkImageCompressionFlagBitsEXT(json &name){
                return name["value"].get<VkImageCompressionFlagBitsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagBitsEXT(VkImageCompressionFixedRateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagBitsEXT deserialize_VkImageCompressionFixedRateFlagBitsEXT(json &name){
                return name["value"].get<VkImageCompressionFixedRateFlagBitsEXT>();
            };
        

            json serialize_VkPipelineRobustnessBufferBehaviorEXT(VkPipelineRobustnessBufferBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessBufferBehaviorEXT deserialize_VkPipelineRobustnessBufferBehaviorEXT(json &name){
                return name["value"].get<VkPipelineRobustnessBufferBehaviorEXT>();
            };
        

            json serialize_VkPipelineRobustnessImageBehaviorEXT(VkPipelineRobustnessImageBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessImageBehaviorEXT deserialize_VkPipelineRobustnessImageBehaviorEXT(json &name){
                return name["value"].get<VkPipelineRobustnessImageBehaviorEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagBitsEXT(VkDeviceAddressBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagBitsEXT deserialize_VkDeviceAddressBindingFlagBitsEXT(json &name){
                return name["value"].get<VkDeviceAddressBindingFlagBitsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingTypeEXT(VkDeviceAddressBindingTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingTypeEXT deserialize_VkDeviceAddressBindingTypeEXT(json &name){
                return name["value"].get<VkDeviceAddressBindingTypeEXT>();
            };
        

            json serialize_VkMicromapTypeEXT(VkMicromapTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapTypeEXT deserialize_VkMicromapTypeEXT(json &name){
                return name["value"].get<VkMicromapTypeEXT>();
            };
        

            json serialize_VkBuildMicromapModeEXT(VkBuildMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapModeEXT deserialize_VkBuildMicromapModeEXT(json &name){
                return name["value"].get<VkBuildMicromapModeEXT>();
            };
        

            json serialize_VkCopyMicromapModeEXT(VkCopyMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkCopyMicromapModeEXT deserialize_VkCopyMicromapModeEXT(json &name){
                return name["value"].get<VkCopyMicromapModeEXT>();
            };
        

            json serialize_VkBuildMicromapFlagBitsEXT(VkBuildMicromapFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagBitsEXT deserialize_VkBuildMicromapFlagBitsEXT(json &name){
                return name["value"].get<VkBuildMicromapFlagBitsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagBitsEXT(VkMicromapCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagBitsEXT deserialize_VkMicromapCreateFlagBitsEXT(json &name){
                return name["value"].get<VkMicromapCreateFlagBitsEXT>();
            };
        

            json serialize_VkOpacityMicromapFormatEXT(VkOpacityMicromapFormatEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapFormatEXT deserialize_VkOpacityMicromapFormatEXT(json &name){
                return name["value"].get<VkOpacityMicromapFormatEXT>();
            };
        

            json serialize_VkOpacityMicromapSpecialIndexEXT(VkOpacityMicromapSpecialIndexEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapSpecialIndexEXT deserialize_VkOpacityMicromapSpecialIndexEXT(json &name){
                return name["value"].get<VkOpacityMicromapSpecialIndexEXT>();
            };
        

            json serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(VkDeviceFaultVendorBinaryHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultVendorBinaryHeaderVersionEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(json &name){
                return name["value"].get<VkDeviceFaultVendorBinaryHeaderVersionEXT>();
            };
        

            json serialize_VkFrameBoundaryFlagBitsEXT(VkFrameBoundaryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagBitsEXT deserialize_VkFrameBoundaryFlagBitsEXT(json &name){
                return name["value"].get<VkFrameBoundaryFlagBitsEXT>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagBitsNV(VkMemoryDecompressionMethodFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagBitsNV deserialize_VkMemoryDecompressionMethodFlagBitsNV(json &name){
                return name["value"].get<VkMemoryDecompressionMethodFlagBitsNV>();
            };
        

            json serialize_VkDepthBiasRepresentationEXT(VkDepthBiasRepresentationEXT name){
                return json::object({{"value",name}});
            };
        

            VkDepthBiasRepresentationEXT deserialize_VkDepthBiasRepresentationEXT(json &name){
                return name["value"].get<VkDepthBiasRepresentationEXT>();
            };
        

            json serialize_VkDirectDriverLoadingModeLUNARG(VkDirectDriverLoadingModeLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingModeLUNARG deserialize_VkDirectDriverLoadingModeLUNARG(json &name){
                return name["value"].get<VkDirectDriverLoadingModeLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlagBits2KHR(VkPipelineCreateFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits2KHR deserialize_VkPipelineCreateFlagBits2KHR(json &name){
                return name["value"].get<VkPipelineCreateFlagBits2KHR>();
            };
        

            json serialize_VkBufferUsageFlagBits2KHR(VkBufferUsageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits2KHR deserialize_VkBufferUsageFlagBits2KHR(json &name){
                return name["value"].get<VkBufferUsageFlagBits2KHR>();
            };
        

            json serialize_VkShaderCreateFlagBitsEXT(VkShaderCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagBitsEXT deserialize_VkShaderCreateFlagBitsEXT(json &name){
                return name["value"].get<VkShaderCreateFlagBitsEXT>();
            };
        

            json serialize_VkShaderCodeTypeEXT(VkShaderCodeTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCodeTypeEXT deserialize_VkShaderCodeTypeEXT(json &name){
                return name["value"].get<VkShaderCodeTypeEXT>();
            };
        

            json serialize_VkScopeKHR(VkScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkScopeKHR deserialize_VkScopeKHR(json &name){
                return name["value"].get<VkScopeKHR>();
            };
        

            json serialize_VkComponentTypeKHR(VkComponentTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeKHR deserialize_VkComponentTypeKHR(json &name){
                return name["value"].get<VkComponentTypeKHR>();
            };
        

            json serialize_VkScopeNV(VkScopeNV name){
                return json::object({{"value",name}});
            };
        

            VkScopeNV deserialize_VkScopeNV(json &name){
                return name["value"].get<VkScopeNV>();
            };
        

            json serialize_VkComponentTypeNV(VkComponentTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeNV deserialize_VkComponentTypeNV(json &name){
                return name["value"].get<VkComponentTypeNV>();
            };
        

            json serialize_VkCubicFilterWeightsQCOM(VkCubicFilterWeightsQCOM name){
                return json::object({{"value",name}});
            };
        

            VkCubicFilterWeightsQCOM deserialize_VkCubicFilterWeightsQCOM(json &name){
                return name["value"].get<VkCubicFilterWeightsQCOM>();
            };
        

            json serialize_VkBlockMatchWindowCompareModeQCOM(VkBlockMatchWindowCompareModeQCOM name){
                return json::object({{"value",name}});
            };
        

            VkBlockMatchWindowCompareModeQCOM deserialize_VkBlockMatchWindowCompareModeQCOM(json &name){
                return name["value"].get<VkBlockMatchWindowCompareModeQCOM>();
            };
        

            json serialize_VkLayeredDriverUnderlyingApiMSFT(VkLayeredDriverUnderlyingApiMSFT name){
                return json::object({{"value",name}});
            };
        

            VkLayeredDriverUnderlyingApiMSFT deserialize_VkLayeredDriverUnderlyingApiMSFT(json &name){
                return name["value"].get<VkLayeredDriverUnderlyingApiMSFT>();
            };
        

            json serialize_VkColorSpaceKHR(VkColorSpaceKHR name){
                return json::object({{"value",name}});
            };
        

            VkColorSpaceKHR deserialize_VkColorSpaceKHR(json &name){
                return name["value"].get<VkColorSpaceKHR>();
            };
        

            json serialize_VkCompositeAlphaFlagBitsKHR(VkCompositeAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagBitsKHR deserialize_VkCompositeAlphaFlagBitsKHR(json &name){
                return name["value"].get<VkCompositeAlphaFlagBitsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagBitsKHR(VkDisplayPlaneAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagBitsKHR deserialize_VkDisplayPlaneAlphaFlagBitsKHR(json &name){
                return name["value"].get<VkDisplayPlaneAlphaFlagBitsKHR>();
            };
        

            json serialize_VkPresentModeKHR(VkPresentModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPresentModeKHR deserialize_VkPresentModeKHR(json &name){
                return name["value"].get<VkPresentModeKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagBitsKHR(VkSurfaceTransformFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagBitsKHR deserialize_VkSurfaceTransformFlagBitsKHR(json &name){
                return name["value"].get<VkSurfaceTransformFlagBitsKHR>();
            };
        

            json serialize_VkDebugReportFlagBitsEXT(VkDebugReportFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagBitsEXT deserialize_VkDebugReportFlagBitsEXT(json &name){
                return name["value"].get<VkDebugReportFlagBitsEXT>();
            };
        

            json serialize_VkDebugReportObjectTypeEXT(VkDebugReportObjectTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportObjectTypeEXT deserialize_VkDebugReportObjectTypeEXT(json &name){
                return name["value"].get<VkDebugReportObjectTypeEXT>();
            };
        

            json serialize_VkDeviceMemoryReportEventTypeEXT(VkDeviceMemoryReportEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportEventTypeEXT deserialize_VkDeviceMemoryReportEventTypeEXT(json &name){
                return name["value"].get<VkDeviceMemoryReportEventTypeEXT>();
            };
        

            json serialize_VkRasterizationOrderAMD(VkRasterizationOrderAMD name){
                return json::object({{"value",name}});
            };
        

            VkRasterizationOrderAMD deserialize_VkRasterizationOrderAMD(json &name){
                return name["value"].get<VkRasterizationOrderAMD>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsNV(VkExternalMemoryHandleTypeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsNV deserialize_VkExternalMemoryHandleTypeFlagBitsNV(json &name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsNV(VkExternalMemoryFeatureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsNV deserialize_VkExternalMemoryFeatureFlagBitsNV(json &name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsNV>();
            };
        

            json serialize_VkValidationCheckEXT(VkValidationCheckEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCheckEXT deserialize_VkValidationCheckEXT(json &name){
                return name["value"].get<VkValidationCheckEXT>();
            };
        

            json serialize_VkValidationFeatureEnableEXT(VkValidationFeatureEnableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureEnableEXT deserialize_VkValidationFeatureEnableEXT(json &name){
                return name["value"].get<VkValidationFeatureEnableEXT>();
            };
        

            json serialize_VkValidationFeatureDisableEXT(VkValidationFeatureDisableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureDisableEXT deserialize_VkValidationFeatureDisableEXT(json &name){
                return name["value"].get<VkValidationFeatureDisableEXT>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBits(VkExternalMemoryHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBits deserialize_VkExternalMemoryHandleTypeFlagBits(json &name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsKHR(VkExternalMemoryHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsKHR deserialize_VkExternalMemoryHandleTypeFlagBitsKHR(json &name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBits(VkExternalMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBits deserialize_VkExternalMemoryFeatureFlagBits(json &name){
                return name["value"].get<VkExternalMemoryFeatureFlagBits>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsKHR(VkExternalMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsKHR deserialize_VkExternalMemoryFeatureFlagBitsKHR(json &name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBits(VkExternalSemaphoreHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBits deserialize_VkExternalSemaphoreHandleTypeFlagBits(json &name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(VkExternalSemaphoreHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBitsKHR deserialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(json &name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBits(VkExternalSemaphoreFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBits deserialize_VkExternalSemaphoreFeatureFlagBits(json &name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBitsKHR(VkExternalSemaphoreFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBitsKHR deserialize_VkExternalSemaphoreFeatureFlagBitsKHR(json &name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlagBits(VkSemaphoreImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBits deserialize_VkSemaphoreImportFlagBits(json &name){
                return name["value"].get<VkSemaphoreImportFlagBits>();
            };
        

            json serialize_VkSemaphoreImportFlagBitsKHR(VkSemaphoreImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBitsKHR deserialize_VkSemaphoreImportFlagBitsKHR(json &name){
                return name["value"].get<VkSemaphoreImportFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBits(VkExternalFenceHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBits deserialize_VkExternalFenceHandleTypeFlagBits(json &name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBitsKHR(VkExternalFenceHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBitsKHR deserialize_VkExternalFenceHandleTypeFlagBitsKHR(json &name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBits(VkExternalFenceFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBits deserialize_VkExternalFenceFeatureFlagBits(json &name){
                return name["value"].get<VkExternalFenceFeatureFlagBits>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBitsKHR(VkExternalFenceFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBitsKHR deserialize_VkExternalFenceFeatureFlagBitsKHR(json &name){
                return name["value"].get<VkExternalFenceFeatureFlagBitsKHR>();
            };
        

            json serialize_VkFenceImportFlagBits(VkFenceImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBits deserialize_VkFenceImportFlagBits(json &name){
                return name["value"].get<VkFenceImportFlagBits>();
            };
        

            json serialize_VkFenceImportFlagBitsKHR(VkFenceImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBitsKHR deserialize_VkFenceImportFlagBitsKHR(json &name){
                return name["value"].get<VkFenceImportFlagBitsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagBitsEXT(VkSurfaceCounterFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagBitsEXT deserialize_VkSurfaceCounterFlagBitsEXT(json &name){
                return name["value"].get<VkSurfaceCounterFlagBitsEXT>();
            };
        

            json serialize_VkDisplayPowerStateEXT(VkDisplayPowerStateEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPowerStateEXT deserialize_VkDisplayPowerStateEXT(json &name){
                return name["value"].get<VkDisplayPowerStateEXT>();
            };
        

            json serialize_VkDeviceEventTypeEXT(VkDeviceEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceEventTypeEXT deserialize_VkDeviceEventTypeEXT(json &name){
                return name["value"].get<VkDeviceEventTypeEXT>();
            };
        

            json serialize_VkDisplayEventTypeEXT(VkDisplayEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayEventTypeEXT deserialize_VkDisplayEventTypeEXT(json &name){
                return name["value"].get<VkDisplayEventTypeEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBits(VkPeerMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBits deserialize_VkPeerMemoryFeatureFlagBits(json &name){
                return name["value"].get<VkPeerMemoryFeatureFlagBits>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBitsKHR(VkPeerMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBitsKHR deserialize_VkPeerMemoryFeatureFlagBitsKHR(json &name){
                return name["value"].get<VkPeerMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlagBits(VkMemoryAllocateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBits deserialize_VkMemoryAllocateFlagBits(json &name){
                return name["value"].get<VkMemoryAllocateFlagBits>();
            };
        

            json serialize_VkMemoryAllocateFlagBitsKHR(VkMemoryAllocateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBitsKHR deserialize_VkMemoryAllocateFlagBitsKHR(json &name){
                return name["value"].get<VkMemoryAllocateFlagBitsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagBitsKHR(VkDeviceGroupPresentModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagBitsKHR deserialize_VkDeviceGroupPresentModeFlagBitsKHR(json &name){
                return name["value"].get<VkDeviceGroupPresentModeFlagBitsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagBitsKHR(VkSwapchainCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagBitsKHR deserialize_VkSwapchainCreateFlagBitsKHR(json &name){
                return name["value"].get<VkSwapchainCreateFlagBitsKHR>();
            };
        

            json serialize_VkSubgroupFeatureFlagBits(VkSubgroupFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlagBits deserialize_VkSubgroupFeatureFlagBits(json &name){
                return name["value"].get<VkSubgroupFeatureFlagBits>();
            };
        

            json serialize_VkTessellationDomainOrigin(VkTessellationDomainOrigin name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOrigin deserialize_VkTessellationDomainOrigin(json &name){
                return name["value"].get<VkTessellationDomainOrigin>();
            };
        

            json serialize_VkTessellationDomainOriginKHR(VkTessellationDomainOriginKHR name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOriginKHR deserialize_VkTessellationDomainOriginKHR(json &name){
                return name["value"].get<VkTessellationDomainOriginKHR>();
            };
        

            json serialize_VkSamplerYcbcrModelConversion(VkSamplerYcbcrModelConversion name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversion deserialize_VkSamplerYcbcrModelConversion(json &name){
                return name["value"].get<VkSamplerYcbcrModelConversion>();
            };
        

            json serialize_VkSamplerYcbcrModelConversionKHR(VkSamplerYcbcrModelConversionKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversionKHR deserialize_VkSamplerYcbcrModelConversionKHR(json &name){
                return name["value"].get<VkSamplerYcbcrModelConversionKHR>();
            };
        

            json serialize_VkSamplerYcbcrRange(VkSamplerYcbcrRange name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRange deserialize_VkSamplerYcbcrRange(json &name){
                return name["value"].get<VkSamplerYcbcrRange>();
            };
        

            json serialize_VkSamplerYcbcrRangeKHR(VkSamplerYcbcrRangeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRangeKHR deserialize_VkSamplerYcbcrRangeKHR(json &name){
                return name["value"].get<VkSamplerYcbcrRangeKHR>();
            };
        

            json serialize_VkChromaLocation(VkChromaLocation name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocation deserialize_VkChromaLocation(json &name){
                return name["value"].get<VkChromaLocation>();
            };
        

            json serialize_VkChromaLocationKHR(VkChromaLocationKHR name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocationKHR deserialize_VkChromaLocationKHR(json &name){
                return name["value"].get<VkChromaLocationKHR>();
            };
        

            json serialize_VkSamplerReductionMode(VkSamplerReductionMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionMode deserialize_VkSamplerReductionMode(json &name){
                return name["value"].get<VkSamplerReductionMode>();
            };
        

            json serialize_VkSamplerReductionModeEXT(VkSamplerReductionModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionModeEXT deserialize_VkSamplerReductionModeEXT(json &name){
                return name["value"].get<VkSamplerReductionModeEXT>();
            };
        

            json serialize_VkBlendOverlapEXT(VkBlendOverlapEXT name){
                return json::object({{"value",name}});
            };
        

            VkBlendOverlapEXT deserialize_VkBlendOverlapEXT(json &name){
                return name["value"].get<VkBlendOverlapEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(VkDebugUtilsMessageSeverityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagBitsEXT deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(json &name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagBitsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagBitsEXT(VkDebugUtilsMessageTypeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagBitsEXT deserialize_VkDebugUtilsMessageTypeFlagBitsEXT(json &name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagBitsEXT>();
            };
        

            json serialize_VkShaderFloatControlsIndependence(VkShaderFloatControlsIndependence name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependence deserialize_VkShaderFloatControlsIndependence(json &name){
                return name["value"].get<VkShaderFloatControlsIndependence>();
            };
        

            json serialize_VkShaderFloatControlsIndependenceKHR(VkShaderFloatControlsIndependenceKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependenceKHR deserialize_VkShaderFloatControlsIndependenceKHR(json &name){
                return name["value"].get<VkShaderFloatControlsIndependenceKHR>();
            };
        

            json serialize_VkFragmentShadingRateCombinerOpKHR(VkFragmentShadingRateCombinerOpKHR name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateCombinerOpKHR deserialize_VkFragmentShadingRateCombinerOpKHR(json &name){
                return name["value"].get<VkFragmentShadingRateCombinerOpKHR>();
            };
        

            json serialize_VkSubmitFlagBits(VkSubmitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBits deserialize_VkSubmitFlagBits(json &name){
                return name["value"].get<VkSubmitFlagBits>();
            };
        

            json serialize_VkSubmitFlagBitsKHR(VkSubmitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBitsKHR deserialize_VkSubmitFlagBitsKHR(json &name){
                return name["value"].get<VkSubmitFlagBitsKHR>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagBitsEXT(VkGraphicsPipelineLibraryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagBitsEXT deserialize_VkGraphicsPipelineLibraryFlagBitsEXT(json &name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagBitsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagBitsNV(VkOpticalFlowGridSizeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagBitsNV deserialize_VkOpticalFlowGridSizeFlagBitsNV(json &name){
                return name["value"].get<VkOpticalFlowGridSizeFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagBitsNV(VkOpticalFlowUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagBitsNV deserialize_VkOpticalFlowUsageFlagBitsNV(json &name){
                return name["value"].get<VkOpticalFlowUsageFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowPerformanceLevelNV(VkOpticalFlowPerformanceLevelNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowPerformanceLevelNV deserialize_VkOpticalFlowPerformanceLevelNV(json &name){
                return name["value"].get<VkOpticalFlowPerformanceLevelNV>();
            };
        

            json serialize_VkOpticalFlowSessionBindingPointNV(VkOpticalFlowSessionBindingPointNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionBindingPointNV deserialize_VkOpticalFlowSessionBindingPointNV(json &name){
                return name["value"].get<VkOpticalFlowSessionBindingPointNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagBitsNV(VkOpticalFlowSessionCreateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagBitsNV deserialize_VkOpticalFlowSessionCreateFlagBitsNV(json &name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagBitsNV(VkOpticalFlowExecuteFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagBitsNV deserialize_VkOpticalFlowExecuteFlagBitsNV(json &name){
                return name["value"].get<VkOpticalFlowExecuteFlagBitsNV>();
            };
        

            json serialize_VkDeviceFaultAddressTypeEXT(VkDeviceFaultAddressTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultAddressTypeEXT deserialize_VkDeviceFaultAddressTypeEXT(json &name){
                return name["value"].get<VkDeviceFaultAddressTypeEXT>();
            };
        

            json serialize_VkPresentScalingFlagBitsEXT(VkPresentScalingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagBitsEXT deserialize_VkPresentScalingFlagBitsEXT(json &name){
                return name["value"].get<VkPresentScalingFlagBitsEXT>();
            };
        

            json serialize_VkPresentGravityFlagBitsEXT(VkPresentGravityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagBitsEXT deserialize_VkPresentGravityFlagBitsEXT(json &name){
                return name["value"].get<VkPresentGravityFlagBitsEXT>();
            };
        

            json serialize_VkVendorId(VkVendorId name){
                return json::object({{"value",name}});
            };
        

            VkVendorId deserialize_VkVendorId(json &name){
                return name["value"].get<VkVendorId>();
            };
        

            json serialize_VkDriverId(VkDriverId name){
                return json::object({{"value",name}});
            };
        

            VkDriverId deserialize_VkDriverId(json &name){
                return name["value"].get<VkDriverId>();
            };
        

            json serialize_VkDriverIdKHR(VkDriverIdKHR name){
                return json::object({{"value",name}});
            };
        

            VkDriverIdKHR deserialize_VkDriverIdKHR(json &name){
                return name["value"].get<VkDriverIdKHR>();
            };
        

            json serialize_VkShadingRatePaletteEntryNV(VkShadingRatePaletteEntryNV name){
                return json::object({{"value",name}});
            };
        

            VkShadingRatePaletteEntryNV deserialize_VkShadingRatePaletteEntryNV(json &name){
                return name["value"].get<VkShadingRatePaletteEntryNV>();
            };
        

            json serialize_VkCoarseSampleOrderTypeNV(VkCoarseSampleOrderTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoarseSampleOrderTypeNV deserialize_VkCoarseSampleOrderTypeNV(json &name){
                return name["value"].get<VkCoarseSampleOrderTypeNV>();
            };
        

            json serialize_VkPipelineExecutableStatisticFormatKHR(VkPipelineExecutableStatisticFormatKHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineExecutableStatisticFormatKHR deserialize_VkPipelineExecutableStatisticFormatKHR(json &name){
                return name["value"].get<VkPipelineExecutableStatisticFormatKHR>();
            };
        

            json serialize_VkVideoCodecOperationFlagBitsKHR(VkVideoCodecOperationFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagBitsKHR deserialize_VkVideoCodecOperationFlagBitsKHR(json &name){
                return name["value"].get<VkVideoCodecOperationFlagBitsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagBitsKHR(VkVideoChromaSubsamplingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagBitsKHR deserialize_VkVideoChromaSubsamplingFlagBitsKHR(json &name){
                return name["value"].get<VkVideoChromaSubsamplingFlagBitsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagBitsKHR(VkVideoComponentBitDepthFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagBitsKHR deserialize_VkVideoComponentBitDepthFlagBitsKHR(json &name){
                return name["value"].get<VkVideoComponentBitDepthFlagBitsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagBitsKHR(VkVideoCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagBitsKHR deserialize_VkVideoCapabilityFlagBitsKHR(json &name){
                return name["value"].get<VkVideoCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagBitsKHR(VkVideoSessionCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagBitsKHR deserialize_VkVideoSessionCreateFlagBitsKHR(json &name){
                return name["value"].get<VkVideoSessionCreateFlagBitsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagBitsKHR(VkVideoCodingControlFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagBitsKHR deserialize_VkVideoCodingControlFlagBitsKHR(json &name){
                return name["value"].get<VkVideoCodingControlFlagBitsKHR>();
            };
        

            json serialize_VkQueryResultStatusKHR(VkQueryResultStatusKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultStatusKHR deserialize_VkQueryResultStatusKHR(json &name){
                return name["value"].get<VkQueryResultStatusKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagBitsKHR(VkVideoDecodeUsageFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagBitsKHR deserialize_VkVideoDecodeUsageFlagBitsKHR(json &name){
                return name["value"].get<VkVideoDecodeUsageFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagBitsKHR(VkVideoDecodeCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagBitsKHR deserialize_VkVideoDecodeCapabilityFlagBitsKHR(json &name){
                return name["value"].get<VkVideoDecodeCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(VkVideoDecodeH264PictureLayoutFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagBitsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(json &name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagBitsKHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceTypeNV(VkAccelerationStructureMotionInstanceTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceTypeNV deserialize_VkAccelerationStructureMotionInstanceTypeNV(json &name){
                return name["value"].get<VkAccelerationStructureMotionInstanceTypeNV>();
            };
        

        json serialize_Display_p(const Display* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Display* deserialize_Display_p(json &name){
            return (Display*) (uintptr_t)name["value"];
        };
    

        json serialize_VisualID_p(const VisualID* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        VisualID* deserialize_VisualID_p(json &name){
            return (VisualID*) (uintptr_t)name["value"];
        };
    

            json serialize_VisualID(const VisualID name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            VisualID deserialize_VisualID(json &name){
                return (VisualID) name["value"];
            };
        

        json serialize_Window_p(const Window* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Window* deserialize_Window_p(json &name){
            return (Window*) (uintptr_t)name["value"];
        };
    

            json serialize_Window(const Window name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            Window deserialize_Window(json &name){
                return (Window) name["value"];
            };
        

        json serialize_xcb_connection_t_p(const xcb_connection_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_connection_t* deserialize_xcb_connection_t_p(json &name){
            return (xcb_connection_t*) (uintptr_t)name["value"];
        };
    

        json serialize_xcb_visualid_t_p(const xcb_visualid_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_visualid_t* deserialize_xcb_visualid_t_p(json &name){
            return (xcb_visualid_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_visualid_t(const xcb_visualid_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_visualid_t deserialize_xcb_visualid_t(json &name){
                return (xcb_visualid_t) name["value"];
            };
        

        json serialize_xcb_window_t_p(const xcb_window_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_window_t* deserialize_xcb_window_t_p(json &name){
            return (xcb_window_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_window_t(const xcb_window_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_window_t deserialize_xcb_window_t(json &name){
                return (xcb_window_t) name["value"];
            };
        

        json serialize_StdVideoH264ProfileIdc_p(const StdVideoH264ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ProfileIdc* deserialize_StdVideoH264ProfileIdc_p(json &name){
            return (StdVideoH264ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264ProfileIdc(const StdVideoH264ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264ProfileIdc deserialize_StdVideoH264ProfileIdc(json &name){
                return (StdVideoH264ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH264LevelIdc_p(const StdVideoH264LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264LevelIdc* deserialize_StdVideoH264LevelIdc_p(json &name){
            return (StdVideoH264LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264LevelIdc(const StdVideoH264LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264LevelIdc deserialize_StdVideoH264LevelIdc(json &name){
                return (StdVideoH264LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH264ChromaFormatIdc_p(const StdVideoH264ChromaFormatIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ChromaFormatIdc* deserialize_StdVideoH264ChromaFormatIdc_p(json &name){
            return (StdVideoH264ChromaFormatIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PocType_p(const StdVideoH264PocType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PocType* deserialize_StdVideoH264PocType_p(json &name){
            return (StdVideoH264PocType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsFlags_p(const StdVideoH264SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsFlags* deserialize_StdVideoH264SpsFlags_p(json &name){
            return (StdVideoH264SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ScalingLists_p(const StdVideoH264ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ScalingLists* deserialize_StdVideoH264ScalingLists_p(json &name){
            return (StdVideoH264ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSetVui_p(const StdVideoH264SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSetVui* deserialize_StdVideoH264SequenceParameterSetVui_p(json &name){
            return (StdVideoH264SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264AspectRatioIdc_p(const StdVideoH264AspectRatioIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264AspectRatioIdc* deserialize_StdVideoH264AspectRatioIdc_p(json &name){
            return (StdVideoH264AspectRatioIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264HrdParameters_p(const StdVideoH264HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264HrdParameters* deserialize_StdVideoH264HrdParameters_p(json &name){
            return (StdVideoH264HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsVuiFlags_p(const StdVideoH264SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsVuiFlags* deserialize_StdVideoH264SpsVuiFlags_p(json &name){
            return (StdVideoH264SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264WeightedBipredIdc_p(const StdVideoH264WeightedBipredIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264WeightedBipredIdc* deserialize_StdVideoH264WeightedBipredIdc_p(json &name){
            return (StdVideoH264WeightedBipredIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PpsFlags_p(const StdVideoH264PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PpsFlags* deserialize_StdVideoH264PpsFlags_p(json &name){
            return (StdVideoH264PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SliceType_p(const StdVideoH264SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SliceType* deserialize_StdVideoH264SliceType_p(json &name){
            return (StdVideoH264SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264CabacInitIdc_p(const StdVideoH264CabacInitIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264CabacInitIdc* deserialize_StdVideoH264CabacInitIdc_p(json &name){
            return (StdVideoH264CabacInitIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264DisableDeblockingFilterIdc_p(const StdVideoH264DisableDeblockingFilterIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264DisableDeblockingFilterIdc* deserialize_StdVideoH264DisableDeblockingFilterIdc_p(json &name){
            return (StdVideoH264DisableDeblockingFilterIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureType_p(const StdVideoH264PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureType* deserialize_StdVideoH264PictureType_p(json &name){
            return (StdVideoH264PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ModificationOfPicNumsIdc_p(const StdVideoH264ModificationOfPicNumsIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ModificationOfPicNumsIdc* deserialize_StdVideoH264ModificationOfPicNumsIdc_p(json &name){
            return (StdVideoH264ModificationOfPicNumsIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264MemMgmtControlOp_p(const StdVideoH264MemMgmtControlOp* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264MemMgmtControlOp* deserialize_StdVideoH264MemMgmtControlOp_p(json &name){
            return (StdVideoH264MemMgmtControlOp*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfo_p(const StdVideoDecodeH264PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfo* deserialize_StdVideoDecodeH264PictureInfo_p(json &name){
            return (StdVideoDecodeH264PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfo_p(const StdVideoDecodeH264ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfo* deserialize_StdVideoDecodeH264ReferenceInfo_p(json &name){
            return (StdVideoDecodeH264ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfoFlags_p(const StdVideoDecodeH264PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfoFlags* deserialize_StdVideoDecodeH264PictureInfoFlags_p(json &name){
            return (StdVideoDecodeH264PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfoFlags_p(const StdVideoDecodeH264ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfoFlags* deserialize_StdVideoDecodeH264ReferenceInfoFlags_p(json &name){
            return (StdVideoDecodeH264ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSet_p(const StdVideoH264SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSet* deserialize_StdVideoH264SequenceParameterSet_p(json &name){
            return (StdVideoH264SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureParameterSet_p(const StdVideoH264PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureParameterSet* deserialize_StdVideoH264PictureParameterSet_p(json &name){
            return (StdVideoH264PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ProfileIdc_p(const StdVideoH265ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ProfileIdc* deserialize_StdVideoH265ProfileIdc_p(json &name){
            return (StdVideoH265ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265ProfileIdc(const StdVideoH265ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265ProfileIdc deserialize_StdVideoH265ProfileIdc(json &name){
                return (StdVideoH265ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH265VideoParameterSet_p(const StdVideoH265VideoParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VideoParameterSet* deserialize_StdVideoH265VideoParameterSet_p(json &name){
            return (StdVideoH265VideoParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSet_p(const StdVideoH265SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSet* deserialize_StdVideoH265SequenceParameterSet_p(json &name){
            return (StdVideoH265SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureParameterSet_p(const StdVideoH265PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureParameterSet* deserialize_StdVideoH265PictureParameterSet_p(json &name){
            return (StdVideoH265PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265DecPicBufMgr_p(const StdVideoH265DecPicBufMgr* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265DecPicBufMgr* deserialize_StdVideoH265DecPicBufMgr_p(json &name){
            return (StdVideoH265DecPicBufMgr*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdParameters_p(const StdVideoH265HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdParameters* deserialize_StdVideoH265HrdParameters_p(json &name){
            return (StdVideoH265HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265VpsFlags_p(const StdVideoH265VpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VpsFlags* deserialize_StdVideoH265VpsFlags_p(json &name){
            return (StdVideoH265VpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265LevelIdc_p(const StdVideoH265LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265LevelIdc* deserialize_StdVideoH265LevelIdc_p(json &name){
            return (StdVideoH265LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265LevelIdc(const StdVideoH265LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265LevelIdc deserialize_StdVideoH265LevelIdc(json &name){
                return (StdVideoH265LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH265SpsFlags_p(const StdVideoH265SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsFlags* deserialize_StdVideoH265SpsFlags_p(json &name){
            return (StdVideoH265SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ScalingLists_p(const StdVideoH265ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ScalingLists* deserialize_StdVideoH265ScalingLists_p(json &name){
            return (StdVideoH265ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSetVui_p(const StdVideoH265SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSetVui* deserialize_StdVideoH265SequenceParameterSetVui_p(json &name){
            return (StdVideoH265SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PredictorPaletteEntries_p(const StdVideoH265PredictorPaletteEntries* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PredictorPaletteEntries* deserialize_StdVideoH265PredictorPaletteEntries_p(json &name){
            return (StdVideoH265PredictorPaletteEntries*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PpsFlags_p(const StdVideoH265PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PpsFlags* deserialize_StdVideoH265PpsFlags_p(json &name){
            return (StdVideoH265PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SubLayerHrdParameters_p(const StdVideoH265SubLayerHrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SubLayerHrdParameters* deserialize_StdVideoH265SubLayerHrdParameters_p(json &name){
            return (StdVideoH265SubLayerHrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdFlags_p(const StdVideoH265HrdFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdFlags* deserialize_StdVideoH265HrdFlags_p(json &name){
            return (StdVideoH265HrdFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SpsVuiFlags_p(const StdVideoH265SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsVuiFlags* deserialize_StdVideoH265SpsVuiFlags_p(json &name){
            return (StdVideoH265SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SliceType_p(const StdVideoH265SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SliceType* deserialize_StdVideoH265SliceType_p(json &name){
            return (StdVideoH265SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureType_p(const StdVideoH265PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureType* deserialize_StdVideoH265PictureType_p(json &name){
            return (StdVideoH265PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfo_p(const StdVideoDecodeH265PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfo* deserialize_StdVideoDecodeH265PictureInfo_p(json &name){
            return (StdVideoDecodeH265PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfo_p(const StdVideoDecodeH265ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfo* deserialize_StdVideoDecodeH265ReferenceInfo_p(json &name){
            return (StdVideoDecodeH265ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfoFlags_p(const StdVideoDecodeH265PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfoFlags* deserialize_StdVideoDecodeH265PictureInfoFlags_p(json &name){
            return (StdVideoDecodeH265PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfoFlags_p(const StdVideoDecodeH265ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfoFlags* deserialize_StdVideoDecodeH265ReferenceInfoFlags_p(json &name){
            return (StdVideoDecodeH265ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    
std::map<uintptr_t,PFN_vkInternalAllocationNotification> id_to_PFN_vkInternalAllocationNotification;

    json serialize_PFN_vkInternalAllocationNotification(PFN_vkInternalAllocationNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalAllocationNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalAllocationNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalAllocationNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalAllocationNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalAllocationNotification_response"){
        
handle_PFN_vkInternalAllocationNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalAllocationNotification deserialize_PFN_vkInternalAllocationNotification(json &name){
            //Will only be called by the server
            
            return PFN_vkInternalAllocationNotification_wrapper;
            };
        

            void handle_PFN_vkInternalAllocationNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalAllocationNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalAllocationNotification[data["id"]];
            
            result["type"]="PFN_vkInternalAllocationNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalAllocationNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalAllocationNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkInternalFreeNotification> id_to_PFN_vkInternalFreeNotification;

    json serialize_PFN_vkInternalFreeNotification(PFN_vkInternalFreeNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalFreeNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalFreeNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalFreeNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalFreeNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalFreeNotification_response"){
        
handle_PFN_vkInternalFreeNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalFreeNotification deserialize_PFN_vkInternalFreeNotification(json &name){
            //Will only be called by the server
            
            return PFN_vkInternalFreeNotification_wrapper;
            };
        

            void handle_PFN_vkInternalFreeNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalFreeNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalFreeNotification[data["id"]];
            
            result["type"]="PFN_vkInternalFreeNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalFreeNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalFreeNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkReallocationFunction> id_to_PFN_vkReallocationFunction;

    json serialize_PFN_vkReallocationFunction(PFN_vkReallocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkReallocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkReallocationFunction_wrapper(
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkReallocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkReallocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["pOriginal"]=[&]() {
    json return_qUMsCyj=json({});
    
        if (pOriginal==NULL){
            return_qUMsCyj["null"]=true;
            return return_qUMsCyj;
        }
        return_qUMsCyj=[&]() {
    json return_hpAXNbU=json({});
    
        if (((char*)(pOriginal))==NULL){
            return_hpAXNbU["null"]=true;
            return return_hpAXNbU;
        }
        
        return_hpAXNbU["members"]={};
        for(int hpAXNbU=0; hpAXNbU < strlen(((char*)(pOriginal)))+1; hpAXNbU++){
            json temp;
            temp=[&]() {
    json return_OLmcPVf=json({});
    return serialize_char(((char*)(pOriginal))[hpAXNbU]);}();
            return_hpAXNbU["members"].push_back(temp);
        }
        return return_hpAXNbU;
        }();return return_qUMsCyj;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkReallocationFunction_response"){
        
auto result= handle_PFN_vkReallocationFunction_response(data, _struct->pUserData, pOriginal, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkReallocationFunction deserialize_PFN_vkReallocationFunction(json &name){
            //Will only be called by the server
            
            return PFN_vkReallocationFunction_wrapper;
            };
        

            void handle_PFN_vkReallocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkReallocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkReallocationFunction[data["id"]];
            
            result["type"]="PFN_vkReallocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
 void*                                       pOriginal;
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        return;
        }
    char* temp_UEkqwkP;[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        temp_UEkqwkP=NULL;
        return;
        }
    temp_UEkqwkP=(char*)malloc(data["members"]["pOriginal"]["members"].size()*sizeof(char));
        for (int SBajMeG=0; SBajMeG < data["members"]["pOriginal"]["members"].size(); SBajMeG++){
            [&]() {
temp_UEkqwkP[SBajMeG]=deserialize_char(data["members"]["pOriginal"]["members"][SBajMeG]);}();;
        }
        }();pOriginal=(void*)temp_UEkqwkP;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,pOriginal,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_Arllkwk=json({});
    
        if (result_temp==NULL){
            return_Arllkwk["null"]=true;
            return return_Arllkwk;
        }
        return_Arllkwk=[&]() {
    json return_XKfffIn=json({});
    
        if (((char*)(result_temp))==NULL){
            return_XKfffIn["null"]=true;
            return return_XKfffIn;
        }
        
        return_XKfffIn["members"]={};
        for(int XKfffIn=0; XKfffIn < strlen(((char*)(result_temp)))+1; XKfffIn++){
            json temp;
            temp=[&]() {
    json return_kogWQlH=json({});
    return serialize_char(((char*)(result_temp))[XKfffIn]);}();
            return_XKfffIn["members"].push_back(temp);
        }
        return return_XKfffIn;
        }();return return_Arllkwk;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["pOriginal"]=[&]() {
    json return_qUMsCyj=json({});
    
        if (pOriginal==NULL){
            return_qUMsCyj["null"]=true;
            return return_qUMsCyj;
        }
        return_qUMsCyj=[&]() {
    json return_hpAXNbU=json({});
    
        if (((char*)(pOriginal))==NULL){
            return_hpAXNbU["null"]=true;
            return return_hpAXNbU;
        }
        
        return_hpAXNbU["members"]={};
        for(int hpAXNbU=0; hpAXNbU < strlen(((char*)(pOriginal)))+1; hpAXNbU++){
            json temp;
            temp=[&]() {
    json return_OLmcPVf=json({});
    return serialize_char(((char*)(pOriginal))[hpAXNbU]);}();
            return_hpAXNbU["members"].push_back(temp);
        }
        return return_hpAXNbU;
        }();return return_qUMsCyj;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkReallocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkReallocationFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkReallocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        return;
        }
    char* temp_UEkqwkP;[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        temp_UEkqwkP=NULL;
        return;
        }
    temp_UEkqwkP=(char*)malloc(data["members"]["pOriginal"]["members"].size()*sizeof(char));
        for (int SBajMeG=0; SBajMeG < data["members"]["pOriginal"]["members"].size(); SBajMeG++){
            [&]() {
temp_UEkqwkP[SBajMeG]=deserialize_char(data["members"]["pOriginal"]["members"][SBajMeG]);}();;
        }
        }();pOriginal=(void*)temp_UEkqwkP;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        return;
        }
    char* temp_MqRADxK;[&]() {

        if (data["result"].contains("null")){
        temp_MqRADxK=NULL;
        return;
        }
    temp_MqRADxK=(char*)malloc(data["result"]["members"].size()*sizeof(char));
        for (int pZIIzsC=0; pZIIzsC < data["result"]["members"].size(); pZIIzsC++){
            [&]() {
temp_MqRADxK[pZIIzsC]=deserialize_char(data["result"]["members"][pZIIzsC]);}();;
        }
        }();result=(void*)temp_MqRADxK;
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkReallocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkAllocationFunction> id_to_PFN_vkAllocationFunction;

    json serialize_PFN_vkAllocationFunction(PFN_vkAllocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkAllocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkAllocationFunction_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkAllocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkAllocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkAllocationFunction_response"){
        
auto result= handle_PFN_vkAllocationFunction_response(data, _struct->pUserData, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkAllocationFunction deserialize_PFN_vkAllocationFunction(json &name){
            //Will only be called by the server
            
            return PFN_vkAllocationFunction_wrapper;
            };
        

            void handle_PFN_vkAllocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkAllocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkAllocationFunction[data["id"]];
            
            result["type"]="PFN_vkAllocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_CaWjkee=json({});
    
        if (result_temp==NULL){
            return_CaWjkee["null"]=true;
            return return_CaWjkee;
        }
        return_CaWjkee=[&]() {
    json return_CDUsIoi=json({});
    
        if (((char*)(result_temp))==NULL){
            return_CDUsIoi["null"]=true;
            return return_CDUsIoi;
        }
        
        return_CDUsIoi["members"]={};
        for(int CDUsIoi=0; CDUsIoi < strlen(((char*)(result_temp)))+1; CDUsIoi++){
            json temp;
            temp=[&]() {
    json return_zIefmUP=json({});
    return serialize_char(((char*)(result_temp))[CDUsIoi]);}();
            return_CDUsIoi["members"].push_back(temp);
        }
        return return_CDUsIoi;
        }();return return_CaWjkee;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkAllocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkAllocationFunction_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkAllocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        return;
        }
    char* temp_CiRUcCe;[&]() {

        if (data["result"].contains("null")){
        temp_CiRUcCe=NULL;
        return;
        }
    temp_CiRUcCe=(char*)malloc(data["result"]["members"].size()*sizeof(char));
        for (int IgLZDWV=0; IgLZDWV < data["result"]["members"].size(); IgLZDWV++){
            [&]() {
temp_CiRUcCe[IgLZDWV]=deserialize_char(data["result"]["members"][IgLZDWV]);}();;
        }
        }();result=(void*)temp_CiRUcCe;
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkAllocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkFreeFunction> id_to_PFN_vkFreeFunction;

    json serialize_PFN_vkFreeFunction(PFN_vkFreeFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkFreeFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkFreeFunction_wrapper(
    void*                                       pUserData,
    void*                                       pMemory){
            json data=json({});
            data["type"]="PFN_vkFreeFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkFreeFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["pMemory"]=[&]() {
    json return_sFERVwr=json({});
    
        if (pMemory==NULL){
            return_sFERVwr["null"]=true;
            return return_sFERVwr;
        }
        return_sFERVwr=[&]() {
    json return_tUdVjxD=json({});
    
        if (((char*)(pMemory))==NULL){
            return_tUdVjxD["null"]=true;
            return return_tUdVjxD;
        }
        
        return_tUdVjxD["members"]={};
        for(int tUdVjxD=0; tUdVjxD < strlen(((char*)(pMemory)))+1; tUdVjxD++){
            json temp;
            temp=[&]() {
    json return_MNfkVsd=json({});
    return serialize_char(((char*)(pMemory))[tUdVjxD]);}();
            return_tUdVjxD["members"].push_back(temp);
        }
        return return_tUdVjxD;
        }();return return_sFERVwr;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkFreeFunction_response"){
        
handle_PFN_vkFreeFunction_response(data, _struct->pUserData, pMemory);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkFreeFunction deserialize_PFN_vkFreeFunction(json &name){
            //Will only be called by the server
            
            return PFN_vkFreeFunction_wrapper;
            };
        

            void handle_PFN_vkFreeFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkFreeFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkFreeFunction[data["id"]];
            
            result["type"]="PFN_vkFreeFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
 void*                                       pMemory;
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        return;
        }
    char* temp_fJcyDgb;[&]() {

        if (data["members"]["pMemory"].contains("null")){
        temp_fJcyDgb=NULL;
        return;
        }
    temp_fJcyDgb=(char*)malloc(data["members"]["pMemory"]["members"].size()*sizeof(char));
        for (int gIlUuhM=0; gIlUuhM < data["members"]["pMemory"]["members"].size(); gIlUuhM++){
            [&]() {
temp_fJcyDgb[gIlUuhM]=deserialize_char(data["members"]["pMemory"]["members"][gIlUuhM]);}();;
        }
        }();pMemory=(void*)temp_fJcyDgb;
}();
funcpointer(pUserData,pMemory);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["pMemory"]=[&]() {
    json return_sFERVwr=json({});
    
        if (pMemory==NULL){
            return_sFERVwr["null"]=true;
            return return_sFERVwr;
        }
        return_sFERVwr=[&]() {
    json return_tUdVjxD=json({});
    
        if (((char*)(pMemory))==NULL){
            return_tUdVjxD["null"]=true;
            return return_tUdVjxD;
        }
        
        return_tUdVjxD["members"]={};
        for(int tUdVjxD=0; tUdVjxD < strlen(((char*)(pMemory)))+1; tUdVjxD++){
            json temp;
            temp=[&]() {
    json return_MNfkVsd=json({});
    return serialize_char(((char*)(pMemory))[tUdVjxD]);}();
            return_tUdVjxD["members"].push_back(temp);
        }
        return return_tUdVjxD;
        }();return return_sFERVwr;}();
writeToConn(result);
};

        void handle_PFN_vkFreeFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pMemory) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkFreeFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        return;
        }
    char* temp_fJcyDgb;[&]() {

        if (data["members"]["pMemory"].contains("null")){
        temp_fJcyDgb=NULL;
        return;
        }
    temp_fJcyDgb=(char*)malloc(data["members"]["pMemory"]["members"].size()*sizeof(char));
        for (int gIlUuhM=0; gIlUuhM < data["members"]["pMemory"]["members"].size(); gIlUuhM++){
            [&]() {
temp_fJcyDgb[gIlUuhM]=deserialize_char(data["members"]["pMemory"]["members"][gIlUuhM]);}();;
        }
        }();pMemory=(void*)temp_fJcyDgb;
}();

}
std::map<uintptr_t,PFN_vkDebugReportCallbackEXT> id_to_PFN_vkDebugReportCallbackEXT;

    json serialize_PFN_vkDebugReportCallbackEXT(PFN_vkDebugReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugReportCallbackEXT_wrapper(
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugReportCallbackCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugReportCallbackEXT_id;
            
data["members"]["flags"]=[&]() {
    json return_XSZRFnv=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
data["members"]["objectType"]=[&]() {
    json return_KZUYZEp=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
data["members"]["object"]=[&]() {
    json return_ePswGlN=json({});
    return serialize_uint64_t(object);}();
data["members"]["location"]=[&]() {
    json return_MfvLciZ=json({});
    return serialize_size_t(location);}();
data["members"]["messageCode"]=[&]() {
    json return_YoGUCPx=json({});
    return serialize_int32_t(messageCode);}();
data["members"]["pLayerPrefix"]=[&]() {
    json return_dAeRyOC=json({});
    
        if (pLayerPrefix==NULL){
            return_dAeRyOC["null"]=true;
            return return_dAeRyOC;
        }
        return_dAeRyOC=[&]() {
    json return_YkzUCyD=json({});
    return serialize_char(*pLayerPrefix);}();
return return_dAeRyOC;}();
data["members"]["pMessage"]=[&]() {
    json return_bPCQekx=json({});
    
        if (pMessage==NULL){
            return_bPCQekx["null"]=true;
            return return_bPCQekx;
        }
        return_bPCQekx=[&]() {
    json return_qCszycM=json({});
    return serialize_char(*pMessage);}();
return return_bPCQekx;}();
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugReportCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugReportCallbackEXT_response(data, flags, objectType, object, location, messageCode, pLayerPrefix, pMessage, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugReportCallbackEXT deserialize_PFN_vkDebugReportCallbackEXT(json &name){
            //Will only be called by the server
            
            return PFN_vkDebugReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugReportCallbackEXT_response";
            
        
 VkDebugReportFlagsEXT                       flags;
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
 VkDebugReportObjectTypeEXT                  objectType;
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
 uint64_t                                    object;
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
 size_t                                      location;
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
 int32_t                                     messageCode;
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();
const char*                                 pLayerPrefix;
[&]() {
char* temp_BwfBQOH;[&]() {

        if (data["members"]["pLayerPrefix"].contains("null")){
        temp_BwfBQOH=NULL;
        return;
        }
    temp_BwfBQOH=(char*)malloc(sizeof(char));
[&]() {
*(temp_BwfBQOH)=deserialize_char(data["members"]["pLayerPrefix"]);}();
}();pLayerPrefix=temp_BwfBQOH;}();
const char*                                 pMessage;
[&]() {
char* temp_iHizcpU;[&]() {

        if (data["members"]["pMessage"].contains("null")){
        temp_iHizcpU=NULL;
        return;
        }
    temp_iHizcpU=(char*)malloc(sizeof(char));
[&]() {
*(temp_iHizcpU)=deserialize_char(data["members"]["pMessage"]);}();
}();pMessage=temp_iHizcpU;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
auto result_temp=funcpointer(flags,objectType,object,location,messageCode,pLayerPrefix,pMessage,pUserData);
result["result"]=[&]() {
    json return_zpvJyFZ=json({});
    return_zpvJyFZ=[&]() {
    json return_YcIYsel=json({});
    return serialize_uint32_t(result_temp);}();return return_zpvJyFZ;}();
result["params"]["flags"]=[&]() {
    json return_XSZRFnv=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
result["params"]["objectType"]=[&]() {
    json return_KZUYZEp=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
result["params"]["object"]=[&]() {
    json return_ePswGlN=json({});
    return serialize_uint64_t(object);}();
result["params"]["location"]=[&]() {
    json return_MfvLciZ=json({});
    return serialize_size_t(location);}();
result["params"]["messageCode"]=[&]() {
    json return_YoGUCPx=json({});
    return serialize_int32_t(messageCode);}();
result["params"]["pLayerPrefix"]=[&]() {
    json return_dAeRyOC=json({});
    
        if (pLayerPrefix==NULL){
            return_dAeRyOC["null"]=true;
            return return_dAeRyOC;
        }
        return_dAeRyOC=[&]() {
    json return_YkzUCyD=json({});
    return serialize_char(*pLayerPrefix);}();
return return_dAeRyOC;}();
result["params"]["pMessage"]=[&]() {
    json return_bPCQekx=json({});
    
        if (pMessage==NULL){
            return_bPCQekx["null"]=true;
            return return_bPCQekx;
        }
        return_bPCQekx=[&]() {
    json return_qCszycM=json({});
    return serialize_char(*pMessage);}();
return return_bPCQekx;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugReportCallbackEXT_response(json data, 
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();


[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDebugUtilsMessengerCallbackEXT> id_to_PFN_vkDebugUtilsMessengerCallbackEXT;

    json serialize_PFN_vkDebugUtilsMessengerCallbackEXT(PFN_vkDebugUtilsMessengerCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugUtilsMessengerCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugUtilsMessengerCallbackEXT_wrapper(
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugUtilsMessengerCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id;
            
data["members"]["messageSeverity"]=[&]() {
    json return_sNxtKmA=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
data["members"]["messageTypes"]=[&]() {
    json return_vagGLtM=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
data["members"]["pCallbackData"]=[&]() {
    json return_oJOcfsX=json({});
    
        if (pCallbackData==NULL){
            return_oJOcfsX["null"]=true;
            return return_oJOcfsX;
        }
        return_oJOcfsX=[&]() {
    json return_FPrcMto=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_oJOcfsX;}();
data["members"]["pUserData"]=[&]() {
    json return_dHTULNO=json({});
    
        if (_struct->pUserData==NULL){
            return_dHTULNO["null"]=true;
            return return_dHTULNO;
        }
        return_dHTULNO=[&]() {
    json return_fRlCnrV=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_fRlCnrV["null"]=true;
            return return_fRlCnrV;
        }
        
        return_fRlCnrV["members"]={};
        for(int fRlCnrV=0; fRlCnrV < strlen(((char*)(_struct->pUserData)))+1; fRlCnrV++){
            json temp;
            temp=[&]() {
    json return_XipnJcc=json({});
    return serialize_char(((char*)(_struct->pUserData))[fRlCnrV]);}();
            return_fRlCnrV["members"].push_back(temp);
        }
        return return_fRlCnrV;
        }();return return_dHTULNO;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugUtilsMessengerCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(data, messageSeverity, messageTypes, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugUtilsMessengerCallbackEXT deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(json &name){
            //Will only be called by the server
            
            return PFN_vkDebugUtilsMessengerCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugUtilsMessengerCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugUtilsMessengerCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugUtilsMessengerCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_response";
            
        
 VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity;
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
 VkDebugUtilsMessageTypeFlagsEXT                  messageTypes;
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();
const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData;
[&]() {
VkDebugUtilsMessengerCallbackDataEXT* temp_xGrGtVB;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_xGrGtVB=NULL;
        return;
        }
    temp_xGrGtVB=(VkDebugUtilsMessengerCallbackDataEXT*)malloc(sizeof(VkDebugUtilsMessengerCallbackDataEXT));
[&]() {
*(temp_xGrGtVB)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_xGrGtVB;}();
 void*                                            pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_wNtvpzw;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_wNtvpzw=NULL;
        return;
        }
    temp_wNtvpzw=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int YtUluaf=0; YtUluaf < data["members"]["pUserData"]["members"].size(); YtUluaf++){
            [&]() {
temp_wNtvpzw[YtUluaf]=deserialize_char(data["members"]["pUserData"]["members"][YtUluaf]);}();;
        }
        }();pUserData=(void*)temp_wNtvpzw;
}();
auto result_temp=funcpointer(messageSeverity,messageTypes,pCallbackData,pUserData);
result["result"]=[&]() {
    json return_eplspvb=json({});
    return_eplspvb=[&]() {
    json return_qXBGUnK=json({});
    return serialize_uint32_t(result_temp);}();return return_eplspvb;}();
result["params"]["messageSeverity"]=[&]() {
    json return_sNxtKmA=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
result["params"]["messageTypes"]=[&]() {
    json return_vagGLtM=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
result["params"]["pCallbackData"]=[&]() {
    json return_oJOcfsX=json({});
    
        if (pCallbackData==NULL){
            return_oJOcfsX["null"]=true;
            return return_oJOcfsX;
        }
        return_oJOcfsX=[&]() {
    json return_FPrcMto=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_oJOcfsX;}();
result["params"]["pUserData"]=[&]() {
    json return_fZfXUrt=json({});
    
        if (pUserData==NULL){
            return_fZfXUrt["null"]=true;
            return return_fZfXUrt;
        }
        return_fZfXUrt=[&]() {
    json return_gGNzsdh=json({});
    
        if (((char*)(pUserData))==NULL){
            return_gGNzsdh["null"]=true;
            return return_gGNzsdh;
        }
        
        return_gGNzsdh["members"]={};
        for(int gGNzsdh=0; gGNzsdh < strlen(((char*)(pUserData)))+1; gGNzsdh++){
            json temp;
            temp=[&]() {
    json return_BJHGTiO=json({});
    return serialize_char(((char*)(pUserData))[gGNzsdh]);}();
            return_gGNzsdh["members"].push_back(temp);
        }
        return return_gGNzsdh;
        }();return return_fZfXUrt;}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(json data, 
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugUtilsMessengerCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_wNtvpzw;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_wNtvpzw=NULL;
        return;
        }
    temp_wNtvpzw=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int YtUluaf=0; YtUluaf < data["members"]["pUserData"]["members"].size(); YtUluaf++){
            [&]() {
temp_wNtvpzw[YtUluaf]=deserialize_char(data["members"]["pUserData"]["members"][YtUluaf]);}();;
        }
        }();pUserData=(void*)temp_wNtvpzw;
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDeviceMemoryReportCallbackEXT> id_to_PFN_vkDeviceMemoryReportCallbackEXT;

    json serialize_PFN_vkDeviceMemoryReportCallbackEXT(PFN_vkDeviceMemoryReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDeviceMemoryReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDeviceMemoryReportCallbackEXT_wrapper(
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDeviceMemoryReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDeviceDeviceMemoryReportCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDeviceMemoryReportCallbackEXT_id;
            
data["members"]["pCallbackData"]=[&]() {
    json return_lDVRiGB=json({});
    
        if (pCallbackData==NULL){
            return_lDVRiGB["null"]=true;
            return return_lDVRiGB;
        }
        return_lDVRiGB=[&]() {
    json return_bRBLRaq=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_lDVRiGB;}();
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDeviceMemoryReportCallbackEXT_response"){
        
handle_PFN_vkDeviceMemoryReportCallbackEXT_response(data, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkDeviceMemoryReportCallbackEXT deserialize_PFN_vkDeviceMemoryReportCallbackEXT(json &name){
            //Will only be called by the server
            
            return PFN_vkDeviceMemoryReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDeviceMemoryReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDeviceMemoryReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDeviceMemoryReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDeviceMemoryReportCallbackEXT_response";
            
        
const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData;
[&]() {
VkDeviceMemoryReportCallbackDataEXT* temp_NmJlCaN;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_NmJlCaN=NULL;
        return;
        }
    temp_NmJlCaN=(VkDeviceMemoryReportCallbackDataEXT*)malloc(sizeof(VkDeviceMemoryReportCallbackDataEXT));
[&]() {
*(temp_NmJlCaN)=deserialize_VkDeviceMemoryReportCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_NmJlCaN;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();
funcpointer(pCallbackData,pUserData);
result["params"]["pCallbackData"]=[&]() {
    json return_lDVRiGB=json({});
    
        if (pCallbackData==NULL){
            return_lDVRiGB["null"]=true;
            return return_lDVRiGB;
        }
        return_lDVRiGB=[&]() {
    json return_bRBLRaq=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_lDVRiGB;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
writeToConn(result);
};

        void handle_PFN_vkDeviceMemoryReportCallbackEXT_response(json data, 
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDeviceMemoryReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp_iVKBubm;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp_iVKBubm=NULL;
        return;
        }
    temp_iVKBubm=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp_iVKBubm[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp_iVKBubm;
}();

}
std::map<uintptr_t,PFN_vkGetInstanceProcAddrLUNARG> id_to_PFN_vkGetInstanceProcAddrLUNARG;

    json serialize_PFN_vkGetInstanceProcAddrLUNARG(PFN_vkGetInstanceProcAddrLUNARG name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkGetInstanceProcAddrLUNARG[(uintptr_t)name]=name;
        return result;
    }
    

        PFN_vkGetInstanceProcAddrLUNARG deserialize_PFN_vkGetInstanceProcAddrLUNARG(json &name){
            //Will only be called by the server
            
            return vkGetInstanceProcAddr;
            };
        

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkInstance_to_server_VkInstance;
            std::map<uintptr_t,uintptr_t> server_VkInstance_to_client_VkInstance;
            
        #endif
        

        json serialize_VkInstance(VkInstance data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkInstance_to_server_VkInstance.contains( (uintptr_t)data ))){
                        printf("Panic: VkInstance %p not found!\n",data);
                    }
                     printf("Serializing VkInstance %p...\n",(VkInstance)client_VkInstance_to_server_VkInstance[(uintptr_t)data]);
                    result["value"]=client_VkInstance_to_server_VkInstance[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkInstance deserialize_VkInstance(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkInstance result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkInstance)pointer);
                    if (server_VkInstance_to_client_VkInstance.contains(pointer)){
                        result=(VkInstance)server_VkInstance_to_client_VkInstance[pointer];
                        printf("Deserializing to VkInstance %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkInstance));
                        printf("Mapping to VkInstance %p...\n",handle);
                        server_VkInstance_to_client_VkInstance[pointer]=(uintptr_t)handle;
                        client_VkInstance_to_server_VkInstance[(uintptr_t)handle]=pointer;
                        
                        result=(VkInstance)handle;
                    }
                #else
                    result=(VkInstance)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkPhysicalDevice_to_server_VkPhysicalDevice;
            std::map<uintptr_t,uintptr_t> server_VkPhysicalDevice_to_client_VkPhysicalDevice;
            
        #endif
        

        json serialize_VkPhysicalDevice(VkPhysicalDevice data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkPhysicalDevice_to_server_VkPhysicalDevice.contains( (uintptr_t)data ))){
                        printf("Panic: VkPhysicalDevice %p not found!\n",data);
                    }
                     printf("Serializing VkPhysicalDevice %p...\n",(VkPhysicalDevice)client_VkPhysicalDevice_to_server_VkPhysicalDevice[(uintptr_t)data]);
                    result["value"]=client_VkPhysicalDevice_to_server_VkPhysicalDevice[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkPhysicalDevice deserialize_VkPhysicalDevice(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkPhysicalDevice result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkPhysicalDevice)pointer);
                    if (server_VkPhysicalDevice_to_client_VkPhysicalDevice.contains(pointer)){
                        result=(VkPhysicalDevice)server_VkPhysicalDevice_to_client_VkPhysicalDevice[pointer];
                        printf("Deserializing to VkPhysicalDevice %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkPhysicalDevice));
                        printf("Mapping to VkPhysicalDevice %p...\n",handle);
                        server_VkPhysicalDevice_to_client_VkPhysicalDevice[pointer]=(uintptr_t)handle;
                        client_VkPhysicalDevice_to_server_VkPhysicalDevice[(uintptr_t)handle]=pointer;
                        
                        result=(VkPhysicalDevice)handle;
                    }
                #else
                    result=(VkPhysicalDevice)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDevice_to_server_VkDevice;
            std::map<uintptr_t,uintptr_t> server_VkDevice_to_client_VkDevice;
            
        #endif
        

        json serialize_VkDevice(VkDevice data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDevice_to_server_VkDevice.contains( (uintptr_t)data ))){
                        printf("Panic: VkDevice %p not found!\n",data);
                    }
                     printf("Serializing VkDevice %p...\n",(VkDevice)client_VkDevice_to_server_VkDevice[(uintptr_t)data]);
                    result["value"]=client_VkDevice_to_server_VkDevice[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDevice deserialize_VkDevice(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDevice result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDevice)pointer);
                    if (server_VkDevice_to_client_VkDevice.contains(pointer)){
                        result=(VkDevice)server_VkDevice_to_client_VkDevice[pointer];
                        printf("Deserializing to VkDevice %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDevice));
                        printf("Mapping to VkDevice %p...\n",handle);
                        server_VkDevice_to_client_VkDevice[pointer]=(uintptr_t)handle;
                        client_VkDevice_to_server_VkDevice[(uintptr_t)handle]=pointer;
                        
                        result=(VkDevice)handle;
                    }
                #else
                    result=(VkDevice)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkQueue_to_server_VkQueue;
            std::map<uintptr_t,uintptr_t> server_VkQueue_to_client_VkQueue;
            
        #endif
        

        json serialize_VkQueue(VkQueue data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkQueue_to_server_VkQueue.contains( (uintptr_t)data ))){
                        printf("Panic: VkQueue %p not found!\n",data);
                    }
                     printf("Serializing VkQueue %p...\n",(VkQueue)client_VkQueue_to_server_VkQueue[(uintptr_t)data]);
                    result["value"]=client_VkQueue_to_server_VkQueue[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkQueue deserialize_VkQueue(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkQueue result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkQueue)pointer);
                    if (server_VkQueue_to_client_VkQueue.contains(pointer)){
                        result=(VkQueue)server_VkQueue_to_client_VkQueue[pointer];
                        printf("Deserializing to VkQueue %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkQueue));
                        printf("Mapping to VkQueue %p...\n",handle);
                        server_VkQueue_to_client_VkQueue[pointer]=(uintptr_t)handle;
                        client_VkQueue_to_server_VkQueue[(uintptr_t)handle]=pointer;
                        
                        result=(VkQueue)handle;
                    }
                #else
                    result=(VkQueue)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkCommandBuffer_to_server_VkCommandBuffer;
            std::map<uintptr_t,uintptr_t> server_VkCommandBuffer_to_client_VkCommandBuffer;
            
        #endif
        

        json serialize_VkCommandBuffer(VkCommandBuffer data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkCommandBuffer_to_server_VkCommandBuffer.contains( (uintptr_t)data ))){
                        printf("Panic: VkCommandBuffer %p not found!\n",data);
                    }
                     printf("Serializing VkCommandBuffer %p...\n",(VkCommandBuffer)client_VkCommandBuffer_to_server_VkCommandBuffer[(uintptr_t)data]);
                    result["value"]=client_VkCommandBuffer_to_server_VkCommandBuffer[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkCommandBuffer deserialize_VkCommandBuffer(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkCommandBuffer result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkCommandBuffer)pointer);
                    if (server_VkCommandBuffer_to_client_VkCommandBuffer.contains(pointer)){
                        result=(VkCommandBuffer)server_VkCommandBuffer_to_client_VkCommandBuffer[pointer];
                        printf("Deserializing to VkCommandBuffer %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkCommandBuffer));
                        printf("Mapping to VkCommandBuffer %p...\n",handle);
                        server_VkCommandBuffer_to_client_VkCommandBuffer[pointer]=(uintptr_t)handle;
                        client_VkCommandBuffer_to_server_VkCommandBuffer[(uintptr_t)handle]=pointer;
                        
                        result=(VkCommandBuffer)handle;
                    }
                #else
                    result=(VkCommandBuffer)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDeviceMemory_to_server_VkDeviceMemory;
            std::map<uintptr_t,uintptr_t> server_VkDeviceMemory_to_client_VkDeviceMemory;
            
        #endif
        

        json serialize_VkDeviceMemory(VkDeviceMemory data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDeviceMemory_to_server_VkDeviceMemory.contains( (uintptr_t)data ))){
                        printf("Panic: VkDeviceMemory %p not found!\n",data);
                    }
                     printf("Serializing VkDeviceMemory %p...\n",(VkDeviceMemory)client_VkDeviceMemory_to_server_VkDeviceMemory[(uintptr_t)data]);
                    result["value"]=client_VkDeviceMemory_to_server_VkDeviceMemory[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            #ifdef CLIENT
                currStruct()->mem_to_sync->insert((uintptr_t)data);
            #endif
            

            return result;
        }
       

       VkDeviceMemory deserialize_VkDeviceMemory(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDeviceMemory result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDeviceMemory)pointer);
                    if (server_VkDeviceMemory_to_client_VkDeviceMemory.contains(pointer)){
                        result=(VkDeviceMemory)server_VkDeviceMemory_to_client_VkDeviceMemory[pointer];
                        printf("Deserializing to VkDeviceMemory %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDeviceMemory));
                        printf("Mapping to VkDeviceMemory %p...\n",handle);
                        server_VkDeviceMemory_to_client_VkDeviceMemory[pointer]=(uintptr_t)handle;
                        client_VkDeviceMemory_to_server_VkDeviceMemory[(uintptr_t)handle]=pointer;
                        
                        result=(VkDeviceMemory)handle;
                    }
                #else
                    result=(VkDeviceMemory)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkCommandPool_to_server_VkCommandPool;
            std::map<uintptr_t,uintptr_t> server_VkCommandPool_to_client_VkCommandPool;
            
        #endif
        

        json serialize_VkCommandPool(VkCommandPool data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkCommandPool_to_server_VkCommandPool.contains( (uintptr_t)data ))){
                        printf("Panic: VkCommandPool %p not found!\n",data);
                    }
                     printf("Serializing VkCommandPool %p...\n",(VkCommandPool)client_VkCommandPool_to_server_VkCommandPool[(uintptr_t)data]);
                    result["value"]=client_VkCommandPool_to_server_VkCommandPool[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkCommandPool deserialize_VkCommandPool(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkCommandPool result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkCommandPool)pointer);
                    if (server_VkCommandPool_to_client_VkCommandPool.contains(pointer)){
                        result=(VkCommandPool)server_VkCommandPool_to_client_VkCommandPool[pointer];
                        printf("Deserializing to VkCommandPool %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkCommandPool));
                        printf("Mapping to VkCommandPool %p...\n",handle);
                        server_VkCommandPool_to_client_VkCommandPool[pointer]=(uintptr_t)handle;
                        client_VkCommandPool_to_server_VkCommandPool[(uintptr_t)handle]=pointer;
                        
                        result=(VkCommandPool)handle;
                    }
                #else
                    result=(VkCommandPool)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkBuffer_to_server_VkBuffer;
            std::map<uintptr_t,uintptr_t> server_VkBuffer_to_client_VkBuffer;
            
        #endif
        

        json serialize_VkBuffer(VkBuffer data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkBuffer_to_server_VkBuffer.contains( (uintptr_t)data ))){
                        printf("Panic: VkBuffer %p not found!\n",data);
                    }
                     printf("Serializing VkBuffer %p...\n",(VkBuffer)client_VkBuffer_to_server_VkBuffer[(uintptr_t)data]);
                    result["value"]=client_VkBuffer_to_server_VkBuffer[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkBuffer deserialize_VkBuffer(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkBuffer result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkBuffer)pointer);
                    if (server_VkBuffer_to_client_VkBuffer.contains(pointer)){
                        result=(VkBuffer)server_VkBuffer_to_client_VkBuffer[pointer];
                        printf("Deserializing to VkBuffer %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkBuffer));
                        printf("Mapping to VkBuffer %p...\n",handle);
                        server_VkBuffer_to_client_VkBuffer[pointer]=(uintptr_t)handle;
                        client_VkBuffer_to_server_VkBuffer[(uintptr_t)handle]=pointer;
                        
                        result=(VkBuffer)handle;
                    }
                #else
                    result=(VkBuffer)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkBufferView_to_server_VkBufferView;
            std::map<uintptr_t,uintptr_t> server_VkBufferView_to_client_VkBufferView;
            
        #endif
        

        json serialize_VkBufferView(VkBufferView data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkBufferView_to_server_VkBufferView.contains( (uintptr_t)data ))){
                        printf("Panic: VkBufferView %p not found!\n",data);
                    }
                     printf("Serializing VkBufferView %p...\n",(VkBufferView)client_VkBufferView_to_server_VkBufferView[(uintptr_t)data]);
                    result["value"]=client_VkBufferView_to_server_VkBufferView[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkBufferView deserialize_VkBufferView(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkBufferView result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkBufferView)pointer);
                    if (server_VkBufferView_to_client_VkBufferView.contains(pointer)){
                        result=(VkBufferView)server_VkBufferView_to_client_VkBufferView[pointer];
                        printf("Deserializing to VkBufferView %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkBufferView));
                        printf("Mapping to VkBufferView %p...\n",handle);
                        server_VkBufferView_to_client_VkBufferView[pointer]=(uintptr_t)handle;
                        client_VkBufferView_to_server_VkBufferView[(uintptr_t)handle]=pointer;
                        
                        result=(VkBufferView)handle;
                    }
                #else
                    result=(VkBufferView)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkImage_to_server_VkImage;
            std::map<uintptr_t,uintptr_t> server_VkImage_to_client_VkImage;
            
        #endif
        

        json serialize_VkImage(VkImage data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkImage_to_server_VkImage.contains( (uintptr_t)data ))){
                        printf("Panic: VkImage %p not found!\n",data);
                    }
                     printf("Serializing VkImage %p...\n",(VkImage)client_VkImage_to_server_VkImage[(uintptr_t)data]);
                    result["value"]=client_VkImage_to_server_VkImage[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkImage deserialize_VkImage(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkImage result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkImage)pointer);
                    if (server_VkImage_to_client_VkImage.contains(pointer)){
                        result=(VkImage)server_VkImage_to_client_VkImage[pointer];
                        printf("Deserializing to VkImage %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkImage));
                        printf("Mapping to VkImage %p...\n",handle);
                        server_VkImage_to_client_VkImage[pointer]=(uintptr_t)handle;
                        client_VkImage_to_server_VkImage[(uintptr_t)handle]=pointer;
                        
                        result=(VkImage)handle;
                    }
                #else
                    result=(VkImage)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkImageView_to_server_VkImageView;
            std::map<uintptr_t,uintptr_t> server_VkImageView_to_client_VkImageView;
            
        #endif
        

        json serialize_VkImageView(VkImageView data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkImageView_to_server_VkImageView.contains( (uintptr_t)data ))){
                        printf("Panic: VkImageView %p not found!\n",data);
                    }
                     printf("Serializing VkImageView %p...\n",(VkImageView)client_VkImageView_to_server_VkImageView[(uintptr_t)data]);
                    result["value"]=client_VkImageView_to_server_VkImageView[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkImageView deserialize_VkImageView(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkImageView result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkImageView)pointer);
                    if (server_VkImageView_to_client_VkImageView.contains(pointer)){
                        result=(VkImageView)server_VkImageView_to_client_VkImageView[pointer];
                        printf("Deserializing to VkImageView %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkImageView));
                        printf("Mapping to VkImageView %p...\n",handle);
                        server_VkImageView_to_client_VkImageView[pointer]=(uintptr_t)handle;
                        client_VkImageView_to_server_VkImageView[(uintptr_t)handle]=pointer;
                        
                        result=(VkImageView)handle;
                    }
                #else
                    result=(VkImageView)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkShaderModule_to_server_VkShaderModule;
            std::map<uintptr_t,uintptr_t> server_VkShaderModule_to_client_VkShaderModule;
            
        #endif
        

        json serialize_VkShaderModule(VkShaderModule data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkShaderModule_to_server_VkShaderModule.contains( (uintptr_t)data ))){
                        printf("Panic: VkShaderModule %p not found!\n",data);
                    }
                     printf("Serializing VkShaderModule %p...\n",(VkShaderModule)client_VkShaderModule_to_server_VkShaderModule[(uintptr_t)data]);
                    result["value"]=client_VkShaderModule_to_server_VkShaderModule[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkShaderModule deserialize_VkShaderModule(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkShaderModule result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkShaderModule)pointer);
                    if (server_VkShaderModule_to_client_VkShaderModule.contains(pointer)){
                        result=(VkShaderModule)server_VkShaderModule_to_client_VkShaderModule[pointer];
                        printf("Deserializing to VkShaderModule %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkShaderModule));
                        printf("Mapping to VkShaderModule %p...\n",handle);
                        server_VkShaderModule_to_client_VkShaderModule[pointer]=(uintptr_t)handle;
                        client_VkShaderModule_to_server_VkShaderModule[(uintptr_t)handle]=pointer;
                        
                        result=(VkShaderModule)handle;
                    }
                #else
                    result=(VkShaderModule)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkPipeline_to_server_VkPipeline;
            std::map<uintptr_t,uintptr_t> server_VkPipeline_to_client_VkPipeline;
            
        #endif
        

        json serialize_VkPipeline(VkPipeline data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkPipeline_to_server_VkPipeline.contains( (uintptr_t)data ))){
                        printf("Panic: VkPipeline %p not found!\n",data);
                    }
                     printf("Serializing VkPipeline %p...\n",(VkPipeline)client_VkPipeline_to_server_VkPipeline[(uintptr_t)data]);
                    result["value"]=client_VkPipeline_to_server_VkPipeline[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkPipeline deserialize_VkPipeline(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkPipeline result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkPipeline)pointer);
                    if (server_VkPipeline_to_client_VkPipeline.contains(pointer)){
                        result=(VkPipeline)server_VkPipeline_to_client_VkPipeline[pointer];
                        printf("Deserializing to VkPipeline %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkPipeline));
                        printf("Mapping to VkPipeline %p...\n",handle);
                        server_VkPipeline_to_client_VkPipeline[pointer]=(uintptr_t)handle;
                        client_VkPipeline_to_server_VkPipeline[(uintptr_t)handle]=pointer;
                        
                        result=(VkPipeline)handle;
                    }
                #else
                    result=(VkPipeline)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkPipelineLayout_to_server_VkPipelineLayout;
            std::map<uintptr_t,uintptr_t> server_VkPipelineLayout_to_client_VkPipelineLayout;
            
        #endif
        

        json serialize_VkPipelineLayout(VkPipelineLayout data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkPipelineLayout_to_server_VkPipelineLayout.contains( (uintptr_t)data ))){
                        printf("Panic: VkPipelineLayout %p not found!\n",data);
                    }
                     printf("Serializing VkPipelineLayout %p...\n",(VkPipelineLayout)client_VkPipelineLayout_to_server_VkPipelineLayout[(uintptr_t)data]);
                    result["value"]=client_VkPipelineLayout_to_server_VkPipelineLayout[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkPipelineLayout deserialize_VkPipelineLayout(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkPipelineLayout result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkPipelineLayout)pointer);
                    if (server_VkPipelineLayout_to_client_VkPipelineLayout.contains(pointer)){
                        result=(VkPipelineLayout)server_VkPipelineLayout_to_client_VkPipelineLayout[pointer];
                        printf("Deserializing to VkPipelineLayout %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkPipelineLayout));
                        printf("Mapping to VkPipelineLayout %p...\n",handle);
                        server_VkPipelineLayout_to_client_VkPipelineLayout[pointer]=(uintptr_t)handle;
                        client_VkPipelineLayout_to_server_VkPipelineLayout[(uintptr_t)handle]=pointer;
                        
                        result=(VkPipelineLayout)handle;
                    }
                #else
                    result=(VkPipelineLayout)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkSampler_to_server_VkSampler;
            std::map<uintptr_t,uintptr_t> server_VkSampler_to_client_VkSampler;
            
        #endif
        

        json serialize_VkSampler(VkSampler data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkSampler_to_server_VkSampler.contains( (uintptr_t)data ))){
                        printf("Panic: VkSampler %p not found!\n",data);
                    }
                     printf("Serializing VkSampler %p...\n",(VkSampler)client_VkSampler_to_server_VkSampler[(uintptr_t)data]);
                    result["value"]=client_VkSampler_to_server_VkSampler[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkSampler deserialize_VkSampler(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkSampler result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkSampler)pointer);
                    if (server_VkSampler_to_client_VkSampler.contains(pointer)){
                        result=(VkSampler)server_VkSampler_to_client_VkSampler[pointer];
                        printf("Deserializing to VkSampler %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkSampler));
                        printf("Mapping to VkSampler %p...\n",handle);
                        server_VkSampler_to_client_VkSampler[pointer]=(uintptr_t)handle;
                        client_VkSampler_to_server_VkSampler[(uintptr_t)handle]=pointer;
                        
                        result=(VkSampler)handle;
                    }
                #else
                    result=(VkSampler)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDescriptorSet_to_server_VkDescriptorSet;
            std::map<uintptr_t,uintptr_t> server_VkDescriptorSet_to_client_VkDescriptorSet;
            
        #endif
        

        json serialize_VkDescriptorSet(VkDescriptorSet data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDescriptorSet_to_server_VkDescriptorSet.contains( (uintptr_t)data ))){
                        printf("Panic: VkDescriptorSet %p not found!\n",data);
                    }
                     printf("Serializing VkDescriptorSet %p...\n",(VkDescriptorSet)client_VkDescriptorSet_to_server_VkDescriptorSet[(uintptr_t)data]);
                    result["value"]=client_VkDescriptorSet_to_server_VkDescriptorSet[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDescriptorSet deserialize_VkDescriptorSet(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDescriptorSet result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDescriptorSet)pointer);
                    if (server_VkDescriptorSet_to_client_VkDescriptorSet.contains(pointer)){
                        result=(VkDescriptorSet)server_VkDescriptorSet_to_client_VkDescriptorSet[pointer];
                        printf("Deserializing to VkDescriptorSet %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDescriptorSet));
                        printf("Mapping to VkDescriptorSet %p...\n",handle);
                        server_VkDescriptorSet_to_client_VkDescriptorSet[pointer]=(uintptr_t)handle;
                        client_VkDescriptorSet_to_server_VkDescriptorSet[(uintptr_t)handle]=pointer;
                        
                        result=(VkDescriptorSet)handle;
                    }
                #else
                    result=(VkDescriptorSet)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDescriptorSetLayout_to_server_VkDescriptorSetLayout;
            std::map<uintptr_t,uintptr_t> server_VkDescriptorSetLayout_to_client_VkDescriptorSetLayout;
            
        #endif
        

        json serialize_VkDescriptorSetLayout(VkDescriptorSetLayout data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDescriptorSetLayout_to_server_VkDescriptorSetLayout.contains( (uintptr_t)data ))){
                        printf("Panic: VkDescriptorSetLayout %p not found!\n",data);
                    }
                     printf("Serializing VkDescriptorSetLayout %p...\n",(VkDescriptorSetLayout)client_VkDescriptorSetLayout_to_server_VkDescriptorSetLayout[(uintptr_t)data]);
                    result["value"]=client_VkDescriptorSetLayout_to_server_VkDescriptorSetLayout[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDescriptorSetLayout deserialize_VkDescriptorSetLayout(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDescriptorSetLayout result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDescriptorSetLayout)pointer);
                    if (server_VkDescriptorSetLayout_to_client_VkDescriptorSetLayout.contains(pointer)){
                        result=(VkDescriptorSetLayout)server_VkDescriptorSetLayout_to_client_VkDescriptorSetLayout[pointer];
                        printf("Deserializing to VkDescriptorSetLayout %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDescriptorSetLayout));
                        printf("Mapping to VkDescriptorSetLayout %p...\n",handle);
                        server_VkDescriptorSetLayout_to_client_VkDescriptorSetLayout[pointer]=(uintptr_t)handle;
                        client_VkDescriptorSetLayout_to_server_VkDescriptorSetLayout[(uintptr_t)handle]=pointer;
                        
                        result=(VkDescriptorSetLayout)handle;
                    }
                #else
                    result=(VkDescriptorSetLayout)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDescriptorPool_to_server_VkDescriptorPool;
            std::map<uintptr_t,uintptr_t> server_VkDescriptorPool_to_client_VkDescriptorPool;
            
        #endif
        

        json serialize_VkDescriptorPool(VkDescriptorPool data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDescriptorPool_to_server_VkDescriptorPool.contains( (uintptr_t)data ))){
                        printf("Panic: VkDescriptorPool %p not found!\n",data);
                    }
                     printf("Serializing VkDescriptorPool %p...\n",(VkDescriptorPool)client_VkDescriptorPool_to_server_VkDescriptorPool[(uintptr_t)data]);
                    result["value"]=client_VkDescriptorPool_to_server_VkDescriptorPool[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDescriptorPool deserialize_VkDescriptorPool(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDescriptorPool result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDescriptorPool)pointer);
                    if (server_VkDescriptorPool_to_client_VkDescriptorPool.contains(pointer)){
                        result=(VkDescriptorPool)server_VkDescriptorPool_to_client_VkDescriptorPool[pointer];
                        printf("Deserializing to VkDescriptorPool %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDescriptorPool));
                        printf("Mapping to VkDescriptorPool %p...\n",handle);
                        server_VkDescriptorPool_to_client_VkDescriptorPool[pointer]=(uintptr_t)handle;
                        client_VkDescriptorPool_to_server_VkDescriptorPool[(uintptr_t)handle]=pointer;
                        
                        result=(VkDescriptorPool)handle;
                    }
                #else
                    result=(VkDescriptorPool)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkFence_to_server_VkFence;
            std::map<uintptr_t,uintptr_t> server_VkFence_to_client_VkFence;
            
        #endif
        

        json serialize_VkFence(VkFence data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkFence_to_server_VkFence.contains( (uintptr_t)data ))){
                        printf("Panic: VkFence %p not found!\n",data);
                    }
                     printf("Serializing VkFence %p...\n",(VkFence)client_VkFence_to_server_VkFence[(uintptr_t)data]);
                    result["value"]=client_VkFence_to_server_VkFence[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkFence deserialize_VkFence(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkFence result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkFence)pointer);
                    if (server_VkFence_to_client_VkFence.contains(pointer)){
                        result=(VkFence)server_VkFence_to_client_VkFence[pointer];
                        printf("Deserializing to VkFence %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkFence));
                        printf("Mapping to VkFence %p...\n",handle);
                        server_VkFence_to_client_VkFence[pointer]=(uintptr_t)handle;
                        client_VkFence_to_server_VkFence[(uintptr_t)handle]=pointer;
                        
                        result=(VkFence)handle;
                    }
                #else
                    result=(VkFence)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkSemaphore_to_server_VkSemaphore;
            std::map<uintptr_t,uintptr_t> server_VkSemaphore_to_client_VkSemaphore;
            
        #endif
        

        json serialize_VkSemaphore(VkSemaphore data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkSemaphore_to_server_VkSemaphore.contains( (uintptr_t)data ))){
                        printf("Panic: VkSemaphore %p not found!\n",data);
                    }
                     printf("Serializing VkSemaphore %p...\n",(VkSemaphore)client_VkSemaphore_to_server_VkSemaphore[(uintptr_t)data]);
                    result["value"]=client_VkSemaphore_to_server_VkSemaphore[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkSemaphore deserialize_VkSemaphore(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkSemaphore result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkSemaphore)pointer);
                    if (server_VkSemaphore_to_client_VkSemaphore.contains(pointer)){
                        result=(VkSemaphore)server_VkSemaphore_to_client_VkSemaphore[pointer];
                        printf("Deserializing to VkSemaphore %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkSemaphore));
                        printf("Mapping to VkSemaphore %p...\n",handle);
                        server_VkSemaphore_to_client_VkSemaphore[pointer]=(uintptr_t)handle;
                        client_VkSemaphore_to_server_VkSemaphore[(uintptr_t)handle]=pointer;
                        
                        result=(VkSemaphore)handle;
                    }
                #else
                    result=(VkSemaphore)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkEvent_to_server_VkEvent;
            std::map<uintptr_t,uintptr_t> server_VkEvent_to_client_VkEvent;
            
        #endif
        

        json serialize_VkEvent(VkEvent data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkEvent_to_server_VkEvent.contains( (uintptr_t)data ))){
                        printf("Panic: VkEvent %p not found!\n",data);
                    }
                     printf("Serializing VkEvent %p...\n",(VkEvent)client_VkEvent_to_server_VkEvent[(uintptr_t)data]);
                    result["value"]=client_VkEvent_to_server_VkEvent[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkEvent deserialize_VkEvent(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkEvent result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkEvent)pointer);
                    if (server_VkEvent_to_client_VkEvent.contains(pointer)){
                        result=(VkEvent)server_VkEvent_to_client_VkEvent[pointer];
                        printf("Deserializing to VkEvent %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkEvent));
                        printf("Mapping to VkEvent %p...\n",handle);
                        server_VkEvent_to_client_VkEvent[pointer]=(uintptr_t)handle;
                        client_VkEvent_to_server_VkEvent[(uintptr_t)handle]=pointer;
                        
                        result=(VkEvent)handle;
                    }
                #else
                    result=(VkEvent)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkQueryPool_to_server_VkQueryPool;
            std::map<uintptr_t,uintptr_t> server_VkQueryPool_to_client_VkQueryPool;
            
        #endif
        

        json serialize_VkQueryPool(VkQueryPool data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkQueryPool_to_server_VkQueryPool.contains( (uintptr_t)data ))){
                        printf("Panic: VkQueryPool %p not found!\n",data);
                    }
                     printf("Serializing VkQueryPool %p...\n",(VkQueryPool)client_VkQueryPool_to_server_VkQueryPool[(uintptr_t)data]);
                    result["value"]=client_VkQueryPool_to_server_VkQueryPool[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkQueryPool deserialize_VkQueryPool(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkQueryPool result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkQueryPool)pointer);
                    if (server_VkQueryPool_to_client_VkQueryPool.contains(pointer)){
                        result=(VkQueryPool)server_VkQueryPool_to_client_VkQueryPool[pointer];
                        printf("Deserializing to VkQueryPool %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkQueryPool));
                        printf("Mapping to VkQueryPool %p...\n",handle);
                        server_VkQueryPool_to_client_VkQueryPool[pointer]=(uintptr_t)handle;
                        client_VkQueryPool_to_server_VkQueryPool[(uintptr_t)handle]=pointer;
                        
                        result=(VkQueryPool)handle;
                    }
                #else
                    result=(VkQueryPool)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkFramebuffer_to_server_VkFramebuffer;
            std::map<uintptr_t,uintptr_t> server_VkFramebuffer_to_client_VkFramebuffer;
            
        #endif
        

        json serialize_VkFramebuffer(VkFramebuffer data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkFramebuffer_to_server_VkFramebuffer.contains( (uintptr_t)data ))){
                        printf("Panic: VkFramebuffer %p not found!\n",data);
                    }
                     printf("Serializing VkFramebuffer %p...\n",(VkFramebuffer)client_VkFramebuffer_to_server_VkFramebuffer[(uintptr_t)data]);
                    result["value"]=client_VkFramebuffer_to_server_VkFramebuffer[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkFramebuffer deserialize_VkFramebuffer(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkFramebuffer result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkFramebuffer)pointer);
                    if (server_VkFramebuffer_to_client_VkFramebuffer.contains(pointer)){
                        result=(VkFramebuffer)server_VkFramebuffer_to_client_VkFramebuffer[pointer];
                        printf("Deserializing to VkFramebuffer %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkFramebuffer));
                        printf("Mapping to VkFramebuffer %p...\n",handle);
                        server_VkFramebuffer_to_client_VkFramebuffer[pointer]=(uintptr_t)handle;
                        client_VkFramebuffer_to_server_VkFramebuffer[(uintptr_t)handle]=pointer;
                        
                        result=(VkFramebuffer)handle;
                    }
                #else
                    result=(VkFramebuffer)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkRenderPass_to_server_VkRenderPass;
            std::map<uintptr_t,uintptr_t> server_VkRenderPass_to_client_VkRenderPass;
            
        #endif
        

        json serialize_VkRenderPass(VkRenderPass data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkRenderPass_to_server_VkRenderPass.contains( (uintptr_t)data ))){
                        printf("Panic: VkRenderPass %p not found!\n",data);
                    }
                     printf("Serializing VkRenderPass %p...\n",(VkRenderPass)client_VkRenderPass_to_server_VkRenderPass[(uintptr_t)data]);
                    result["value"]=client_VkRenderPass_to_server_VkRenderPass[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkRenderPass deserialize_VkRenderPass(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkRenderPass result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkRenderPass)pointer);
                    if (server_VkRenderPass_to_client_VkRenderPass.contains(pointer)){
                        result=(VkRenderPass)server_VkRenderPass_to_client_VkRenderPass[pointer];
                        printf("Deserializing to VkRenderPass %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkRenderPass));
                        printf("Mapping to VkRenderPass %p...\n",handle);
                        server_VkRenderPass_to_client_VkRenderPass[pointer]=(uintptr_t)handle;
                        client_VkRenderPass_to_server_VkRenderPass[(uintptr_t)handle]=pointer;
                        
                        result=(VkRenderPass)handle;
                    }
                #else
                    result=(VkRenderPass)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkPipelineCache_to_server_VkPipelineCache;
            std::map<uintptr_t,uintptr_t> server_VkPipelineCache_to_client_VkPipelineCache;
            
        #endif
        

        json serialize_VkPipelineCache(VkPipelineCache data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkPipelineCache_to_server_VkPipelineCache.contains( (uintptr_t)data ))){
                        printf("Panic: VkPipelineCache %p not found!\n",data);
                    }
                     printf("Serializing VkPipelineCache %p...\n",(VkPipelineCache)client_VkPipelineCache_to_server_VkPipelineCache[(uintptr_t)data]);
                    result["value"]=client_VkPipelineCache_to_server_VkPipelineCache[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkPipelineCache deserialize_VkPipelineCache(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkPipelineCache result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkPipelineCache)pointer);
                    if (server_VkPipelineCache_to_client_VkPipelineCache.contains(pointer)){
                        result=(VkPipelineCache)server_VkPipelineCache_to_client_VkPipelineCache[pointer];
                        printf("Deserializing to VkPipelineCache %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkPipelineCache));
                        printf("Mapping to VkPipelineCache %p...\n",handle);
                        server_VkPipelineCache_to_client_VkPipelineCache[pointer]=(uintptr_t)handle;
                        client_VkPipelineCache_to_server_VkPipelineCache[(uintptr_t)handle]=pointer;
                        
                        result=(VkPipelineCache)handle;
                    }
                #else
                    result=(VkPipelineCache)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkIndirectCommandsLayoutNV_to_server_VkIndirectCommandsLayoutNV;
            std::map<uintptr_t,uintptr_t> server_VkIndirectCommandsLayoutNV_to_client_VkIndirectCommandsLayoutNV;
            
        #endif
        

        json serialize_VkIndirectCommandsLayoutNV(VkIndirectCommandsLayoutNV data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkIndirectCommandsLayoutNV_to_server_VkIndirectCommandsLayoutNV.contains( (uintptr_t)data ))){
                        printf("Panic: VkIndirectCommandsLayoutNV %p not found!\n",data);
                    }
                     printf("Serializing VkIndirectCommandsLayoutNV %p...\n",(VkIndirectCommandsLayoutNV)client_VkIndirectCommandsLayoutNV_to_server_VkIndirectCommandsLayoutNV[(uintptr_t)data]);
                    result["value"]=client_VkIndirectCommandsLayoutNV_to_server_VkIndirectCommandsLayoutNV[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkIndirectCommandsLayoutNV deserialize_VkIndirectCommandsLayoutNV(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkIndirectCommandsLayoutNV result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkIndirectCommandsLayoutNV)pointer);
                    if (server_VkIndirectCommandsLayoutNV_to_client_VkIndirectCommandsLayoutNV.contains(pointer)){
                        result=(VkIndirectCommandsLayoutNV)server_VkIndirectCommandsLayoutNV_to_client_VkIndirectCommandsLayoutNV[pointer];
                        printf("Deserializing to VkIndirectCommandsLayoutNV %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkIndirectCommandsLayoutNV));
                        printf("Mapping to VkIndirectCommandsLayoutNV %p...\n",handle);
                        server_VkIndirectCommandsLayoutNV_to_client_VkIndirectCommandsLayoutNV[pointer]=(uintptr_t)handle;
                        client_VkIndirectCommandsLayoutNV_to_server_VkIndirectCommandsLayoutNV[(uintptr_t)handle]=pointer;
                        
                        result=(VkIndirectCommandsLayoutNV)handle;
                    }
                #else
                    result=(VkIndirectCommandsLayoutNV)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDescriptorUpdateTemplate_to_server_VkDescriptorUpdateTemplate;
            std::map<uintptr_t,uintptr_t> server_VkDescriptorUpdateTemplate_to_client_VkDescriptorUpdateTemplate;
            
        #endif
        

        json serialize_VkDescriptorUpdateTemplate(VkDescriptorUpdateTemplate data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDescriptorUpdateTemplate_to_server_VkDescriptorUpdateTemplate.contains( (uintptr_t)data ))){
                        printf("Panic: VkDescriptorUpdateTemplate %p not found!\n",data);
                    }
                     printf("Serializing VkDescriptorUpdateTemplate %p...\n",(VkDescriptorUpdateTemplate)client_VkDescriptorUpdateTemplate_to_server_VkDescriptorUpdateTemplate[(uintptr_t)data]);
                    result["value"]=client_VkDescriptorUpdateTemplate_to_server_VkDescriptorUpdateTemplate[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDescriptorUpdateTemplate deserialize_VkDescriptorUpdateTemplate(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDescriptorUpdateTemplate result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDescriptorUpdateTemplate)pointer);
                    if (server_VkDescriptorUpdateTemplate_to_client_VkDescriptorUpdateTemplate.contains(pointer)){
                        result=(VkDescriptorUpdateTemplate)server_VkDescriptorUpdateTemplate_to_client_VkDescriptorUpdateTemplate[pointer];
                        printf("Deserializing to VkDescriptorUpdateTemplate %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDescriptorUpdateTemplate));
                        printf("Mapping to VkDescriptorUpdateTemplate %p...\n",handle);
                        server_VkDescriptorUpdateTemplate_to_client_VkDescriptorUpdateTemplate[pointer]=(uintptr_t)handle;
                        client_VkDescriptorUpdateTemplate_to_server_VkDescriptorUpdateTemplate[(uintptr_t)handle]=pointer;
                        
                        result=(VkDescriptorUpdateTemplate)handle;
                    }
                #else
                    result=(VkDescriptorUpdateTemplate)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDescriptorUpdateTemplateKHR_to_server_VkDescriptorUpdateTemplateKHR;
            std::map<uintptr_t,uintptr_t> server_VkDescriptorUpdateTemplateKHR_to_client_VkDescriptorUpdateTemplateKHR;
            
        #endif
        

        json serialize_VkDescriptorUpdateTemplateKHR(VkDescriptorUpdateTemplateKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDescriptorUpdateTemplateKHR_to_server_VkDescriptorUpdateTemplateKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkDescriptorUpdateTemplateKHR %p not found!\n",data);
                    }
                     printf("Serializing VkDescriptorUpdateTemplateKHR %p...\n",(VkDescriptorUpdateTemplateKHR)client_VkDescriptorUpdateTemplateKHR_to_server_VkDescriptorUpdateTemplateKHR[(uintptr_t)data]);
                    result["value"]=client_VkDescriptorUpdateTemplateKHR_to_server_VkDescriptorUpdateTemplateKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDescriptorUpdateTemplateKHR deserialize_VkDescriptorUpdateTemplateKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDescriptorUpdateTemplateKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDescriptorUpdateTemplateKHR)pointer);
                    if (server_VkDescriptorUpdateTemplateKHR_to_client_VkDescriptorUpdateTemplateKHR.contains(pointer)){
                        result=(VkDescriptorUpdateTemplateKHR)server_VkDescriptorUpdateTemplateKHR_to_client_VkDescriptorUpdateTemplateKHR[pointer];
                        printf("Deserializing to VkDescriptorUpdateTemplateKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDescriptorUpdateTemplateKHR));
                        printf("Mapping to VkDescriptorUpdateTemplateKHR %p...\n",handle);
                        server_VkDescriptorUpdateTemplateKHR_to_client_VkDescriptorUpdateTemplateKHR[pointer]=(uintptr_t)handle;
                        client_VkDescriptorUpdateTemplateKHR_to_server_VkDescriptorUpdateTemplateKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkDescriptorUpdateTemplateKHR)handle;
                    }
                #else
                    result=(VkDescriptorUpdateTemplateKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkSamplerYcbcrConversion_to_server_VkSamplerYcbcrConversion;
            std::map<uintptr_t,uintptr_t> server_VkSamplerYcbcrConversion_to_client_VkSamplerYcbcrConversion;
            
        #endif
        

        json serialize_VkSamplerYcbcrConversion(VkSamplerYcbcrConversion data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkSamplerYcbcrConversion_to_server_VkSamplerYcbcrConversion.contains( (uintptr_t)data ))){
                        printf("Panic: VkSamplerYcbcrConversion %p not found!\n",data);
                    }
                     printf("Serializing VkSamplerYcbcrConversion %p...\n",(VkSamplerYcbcrConversion)client_VkSamplerYcbcrConversion_to_server_VkSamplerYcbcrConversion[(uintptr_t)data]);
                    result["value"]=client_VkSamplerYcbcrConversion_to_server_VkSamplerYcbcrConversion[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkSamplerYcbcrConversion deserialize_VkSamplerYcbcrConversion(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkSamplerYcbcrConversion result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkSamplerYcbcrConversion)pointer);
                    if (server_VkSamplerYcbcrConversion_to_client_VkSamplerYcbcrConversion.contains(pointer)){
                        result=(VkSamplerYcbcrConversion)server_VkSamplerYcbcrConversion_to_client_VkSamplerYcbcrConversion[pointer];
                        printf("Deserializing to VkSamplerYcbcrConversion %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkSamplerYcbcrConversion));
                        printf("Mapping to VkSamplerYcbcrConversion %p...\n",handle);
                        server_VkSamplerYcbcrConversion_to_client_VkSamplerYcbcrConversion[pointer]=(uintptr_t)handle;
                        client_VkSamplerYcbcrConversion_to_server_VkSamplerYcbcrConversion[(uintptr_t)handle]=pointer;
                        
                        result=(VkSamplerYcbcrConversion)handle;
                    }
                #else
                    result=(VkSamplerYcbcrConversion)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkSamplerYcbcrConversionKHR_to_server_VkSamplerYcbcrConversionKHR;
            std::map<uintptr_t,uintptr_t> server_VkSamplerYcbcrConversionKHR_to_client_VkSamplerYcbcrConversionKHR;
            
        #endif
        

        json serialize_VkSamplerYcbcrConversionKHR(VkSamplerYcbcrConversionKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkSamplerYcbcrConversionKHR_to_server_VkSamplerYcbcrConversionKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkSamplerYcbcrConversionKHR %p not found!\n",data);
                    }
                     printf("Serializing VkSamplerYcbcrConversionKHR %p...\n",(VkSamplerYcbcrConversionKHR)client_VkSamplerYcbcrConversionKHR_to_server_VkSamplerYcbcrConversionKHR[(uintptr_t)data]);
                    result["value"]=client_VkSamplerYcbcrConversionKHR_to_server_VkSamplerYcbcrConversionKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkSamplerYcbcrConversionKHR deserialize_VkSamplerYcbcrConversionKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkSamplerYcbcrConversionKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkSamplerYcbcrConversionKHR)pointer);
                    if (server_VkSamplerYcbcrConversionKHR_to_client_VkSamplerYcbcrConversionKHR.contains(pointer)){
                        result=(VkSamplerYcbcrConversionKHR)server_VkSamplerYcbcrConversionKHR_to_client_VkSamplerYcbcrConversionKHR[pointer];
                        printf("Deserializing to VkSamplerYcbcrConversionKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkSamplerYcbcrConversionKHR));
                        printf("Mapping to VkSamplerYcbcrConversionKHR %p...\n",handle);
                        server_VkSamplerYcbcrConversionKHR_to_client_VkSamplerYcbcrConversionKHR[pointer]=(uintptr_t)handle;
                        client_VkSamplerYcbcrConversionKHR_to_server_VkSamplerYcbcrConversionKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkSamplerYcbcrConversionKHR)handle;
                    }
                #else
                    result=(VkSamplerYcbcrConversionKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkValidationCacheEXT_to_server_VkValidationCacheEXT;
            std::map<uintptr_t,uintptr_t> server_VkValidationCacheEXT_to_client_VkValidationCacheEXT;
            
        #endif
        

        json serialize_VkValidationCacheEXT(VkValidationCacheEXT data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkValidationCacheEXT_to_server_VkValidationCacheEXT.contains( (uintptr_t)data ))){
                        printf("Panic: VkValidationCacheEXT %p not found!\n",data);
                    }
                     printf("Serializing VkValidationCacheEXT %p...\n",(VkValidationCacheEXT)client_VkValidationCacheEXT_to_server_VkValidationCacheEXT[(uintptr_t)data]);
                    result["value"]=client_VkValidationCacheEXT_to_server_VkValidationCacheEXT[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkValidationCacheEXT deserialize_VkValidationCacheEXT(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkValidationCacheEXT result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkValidationCacheEXT)pointer);
                    if (server_VkValidationCacheEXT_to_client_VkValidationCacheEXT.contains(pointer)){
                        result=(VkValidationCacheEXT)server_VkValidationCacheEXT_to_client_VkValidationCacheEXT[pointer];
                        printf("Deserializing to VkValidationCacheEXT %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkValidationCacheEXT));
                        printf("Mapping to VkValidationCacheEXT %p...\n",handle);
                        server_VkValidationCacheEXT_to_client_VkValidationCacheEXT[pointer]=(uintptr_t)handle;
                        client_VkValidationCacheEXT_to_server_VkValidationCacheEXT[(uintptr_t)handle]=pointer;
                        
                        result=(VkValidationCacheEXT)handle;
                    }
                #else
                    result=(VkValidationCacheEXT)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkAccelerationStructureKHR_to_server_VkAccelerationStructureKHR;
            std::map<uintptr_t,uintptr_t> server_VkAccelerationStructureKHR_to_client_VkAccelerationStructureKHR;
            
        #endif
        

        json serialize_VkAccelerationStructureKHR(VkAccelerationStructureKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkAccelerationStructureKHR_to_server_VkAccelerationStructureKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkAccelerationStructureKHR %p not found!\n",data);
                    }
                     printf("Serializing VkAccelerationStructureKHR %p...\n",(VkAccelerationStructureKHR)client_VkAccelerationStructureKHR_to_server_VkAccelerationStructureKHR[(uintptr_t)data]);
                    result["value"]=client_VkAccelerationStructureKHR_to_server_VkAccelerationStructureKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkAccelerationStructureKHR deserialize_VkAccelerationStructureKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkAccelerationStructureKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkAccelerationStructureKHR)pointer);
                    if (server_VkAccelerationStructureKHR_to_client_VkAccelerationStructureKHR.contains(pointer)){
                        result=(VkAccelerationStructureKHR)server_VkAccelerationStructureKHR_to_client_VkAccelerationStructureKHR[pointer];
                        printf("Deserializing to VkAccelerationStructureKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkAccelerationStructureKHR));
                        printf("Mapping to VkAccelerationStructureKHR %p...\n",handle);
                        server_VkAccelerationStructureKHR_to_client_VkAccelerationStructureKHR[pointer]=(uintptr_t)handle;
                        client_VkAccelerationStructureKHR_to_server_VkAccelerationStructureKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkAccelerationStructureKHR)handle;
                    }
                #else
                    result=(VkAccelerationStructureKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkAccelerationStructureNV_to_server_VkAccelerationStructureNV;
            std::map<uintptr_t,uintptr_t> server_VkAccelerationStructureNV_to_client_VkAccelerationStructureNV;
            
        #endif
        

        json serialize_VkAccelerationStructureNV(VkAccelerationStructureNV data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkAccelerationStructureNV_to_server_VkAccelerationStructureNV.contains( (uintptr_t)data ))){
                        printf("Panic: VkAccelerationStructureNV %p not found!\n",data);
                    }
                     printf("Serializing VkAccelerationStructureNV %p...\n",(VkAccelerationStructureNV)client_VkAccelerationStructureNV_to_server_VkAccelerationStructureNV[(uintptr_t)data]);
                    result["value"]=client_VkAccelerationStructureNV_to_server_VkAccelerationStructureNV[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkAccelerationStructureNV deserialize_VkAccelerationStructureNV(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkAccelerationStructureNV result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkAccelerationStructureNV)pointer);
                    if (server_VkAccelerationStructureNV_to_client_VkAccelerationStructureNV.contains(pointer)){
                        result=(VkAccelerationStructureNV)server_VkAccelerationStructureNV_to_client_VkAccelerationStructureNV[pointer];
                        printf("Deserializing to VkAccelerationStructureNV %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkAccelerationStructureNV));
                        printf("Mapping to VkAccelerationStructureNV %p...\n",handle);
                        server_VkAccelerationStructureNV_to_client_VkAccelerationStructureNV[pointer]=(uintptr_t)handle;
                        client_VkAccelerationStructureNV_to_server_VkAccelerationStructureNV[(uintptr_t)handle]=pointer;
                        
                        result=(VkAccelerationStructureNV)handle;
                    }
                #else
                    result=(VkAccelerationStructureNV)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkPerformanceConfigurationINTEL_to_server_VkPerformanceConfigurationINTEL;
            std::map<uintptr_t,uintptr_t> server_VkPerformanceConfigurationINTEL_to_client_VkPerformanceConfigurationINTEL;
            
        #endif
        

        json serialize_VkPerformanceConfigurationINTEL(VkPerformanceConfigurationINTEL data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkPerformanceConfigurationINTEL_to_server_VkPerformanceConfigurationINTEL.contains( (uintptr_t)data ))){
                        printf("Panic: VkPerformanceConfigurationINTEL %p not found!\n",data);
                    }
                     printf("Serializing VkPerformanceConfigurationINTEL %p...\n",(VkPerformanceConfigurationINTEL)client_VkPerformanceConfigurationINTEL_to_server_VkPerformanceConfigurationINTEL[(uintptr_t)data]);
                    result["value"]=client_VkPerformanceConfigurationINTEL_to_server_VkPerformanceConfigurationINTEL[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkPerformanceConfigurationINTEL deserialize_VkPerformanceConfigurationINTEL(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkPerformanceConfigurationINTEL result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkPerformanceConfigurationINTEL)pointer);
                    if (server_VkPerformanceConfigurationINTEL_to_client_VkPerformanceConfigurationINTEL.contains(pointer)){
                        result=(VkPerformanceConfigurationINTEL)server_VkPerformanceConfigurationINTEL_to_client_VkPerformanceConfigurationINTEL[pointer];
                        printf("Deserializing to VkPerformanceConfigurationINTEL %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkPerformanceConfigurationINTEL));
                        printf("Mapping to VkPerformanceConfigurationINTEL %p...\n",handle);
                        server_VkPerformanceConfigurationINTEL_to_client_VkPerformanceConfigurationINTEL[pointer]=(uintptr_t)handle;
                        client_VkPerformanceConfigurationINTEL_to_server_VkPerformanceConfigurationINTEL[(uintptr_t)handle]=pointer;
                        
                        result=(VkPerformanceConfigurationINTEL)handle;
                    }
                #else
                    result=(VkPerformanceConfigurationINTEL)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDeferredOperationKHR_to_server_VkDeferredOperationKHR;
            std::map<uintptr_t,uintptr_t> server_VkDeferredOperationKHR_to_client_VkDeferredOperationKHR;
            
        #endif
        

        json serialize_VkDeferredOperationKHR(VkDeferredOperationKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDeferredOperationKHR_to_server_VkDeferredOperationKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkDeferredOperationKHR %p not found!\n",data);
                    }
                     printf("Serializing VkDeferredOperationKHR %p...\n",(VkDeferredOperationKHR)client_VkDeferredOperationKHR_to_server_VkDeferredOperationKHR[(uintptr_t)data]);
                    result["value"]=client_VkDeferredOperationKHR_to_server_VkDeferredOperationKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDeferredOperationKHR deserialize_VkDeferredOperationKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDeferredOperationKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDeferredOperationKHR)pointer);
                    if (server_VkDeferredOperationKHR_to_client_VkDeferredOperationKHR.contains(pointer)){
                        result=(VkDeferredOperationKHR)server_VkDeferredOperationKHR_to_client_VkDeferredOperationKHR[pointer];
                        printf("Deserializing to VkDeferredOperationKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDeferredOperationKHR));
                        printf("Mapping to VkDeferredOperationKHR %p...\n",handle);
                        server_VkDeferredOperationKHR_to_client_VkDeferredOperationKHR[pointer]=(uintptr_t)handle;
                        client_VkDeferredOperationKHR_to_server_VkDeferredOperationKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkDeferredOperationKHR)handle;
                    }
                #else
                    result=(VkDeferredOperationKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkPrivateDataSlot_to_server_VkPrivateDataSlot;
            std::map<uintptr_t,uintptr_t> server_VkPrivateDataSlot_to_client_VkPrivateDataSlot;
            
        #endif
        

        json serialize_VkPrivateDataSlot(VkPrivateDataSlot data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkPrivateDataSlot_to_server_VkPrivateDataSlot.contains( (uintptr_t)data ))){
                        printf("Panic: VkPrivateDataSlot %p not found!\n",data);
                    }
                     printf("Serializing VkPrivateDataSlot %p...\n",(VkPrivateDataSlot)client_VkPrivateDataSlot_to_server_VkPrivateDataSlot[(uintptr_t)data]);
                    result["value"]=client_VkPrivateDataSlot_to_server_VkPrivateDataSlot[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkPrivateDataSlot deserialize_VkPrivateDataSlot(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkPrivateDataSlot result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkPrivateDataSlot)pointer);
                    if (server_VkPrivateDataSlot_to_client_VkPrivateDataSlot.contains(pointer)){
                        result=(VkPrivateDataSlot)server_VkPrivateDataSlot_to_client_VkPrivateDataSlot[pointer];
                        printf("Deserializing to VkPrivateDataSlot %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkPrivateDataSlot));
                        printf("Mapping to VkPrivateDataSlot %p...\n",handle);
                        server_VkPrivateDataSlot_to_client_VkPrivateDataSlot[pointer]=(uintptr_t)handle;
                        client_VkPrivateDataSlot_to_server_VkPrivateDataSlot[(uintptr_t)handle]=pointer;
                        
                        result=(VkPrivateDataSlot)handle;
                    }
                #else
                    result=(VkPrivateDataSlot)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkPrivateDataSlotEXT_to_server_VkPrivateDataSlotEXT;
            std::map<uintptr_t,uintptr_t> server_VkPrivateDataSlotEXT_to_client_VkPrivateDataSlotEXT;
            
        #endif
        

        json serialize_VkPrivateDataSlotEXT(VkPrivateDataSlotEXT data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkPrivateDataSlotEXT_to_server_VkPrivateDataSlotEXT.contains( (uintptr_t)data ))){
                        printf("Panic: VkPrivateDataSlotEXT %p not found!\n",data);
                    }
                     printf("Serializing VkPrivateDataSlotEXT %p...\n",(VkPrivateDataSlotEXT)client_VkPrivateDataSlotEXT_to_server_VkPrivateDataSlotEXT[(uintptr_t)data]);
                    result["value"]=client_VkPrivateDataSlotEXT_to_server_VkPrivateDataSlotEXT[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkPrivateDataSlotEXT deserialize_VkPrivateDataSlotEXT(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkPrivateDataSlotEXT result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkPrivateDataSlotEXT)pointer);
                    if (server_VkPrivateDataSlotEXT_to_client_VkPrivateDataSlotEXT.contains(pointer)){
                        result=(VkPrivateDataSlotEXT)server_VkPrivateDataSlotEXT_to_client_VkPrivateDataSlotEXT[pointer];
                        printf("Deserializing to VkPrivateDataSlotEXT %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkPrivateDataSlotEXT));
                        printf("Mapping to VkPrivateDataSlotEXT %p...\n",handle);
                        server_VkPrivateDataSlotEXT_to_client_VkPrivateDataSlotEXT[pointer]=(uintptr_t)handle;
                        client_VkPrivateDataSlotEXT_to_server_VkPrivateDataSlotEXT[(uintptr_t)handle]=pointer;
                        
                        result=(VkPrivateDataSlotEXT)handle;
                    }
                #else
                    result=(VkPrivateDataSlotEXT)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkCuModuleNVX_to_server_VkCuModuleNVX;
            std::map<uintptr_t,uintptr_t> server_VkCuModuleNVX_to_client_VkCuModuleNVX;
            
        #endif
        

        json serialize_VkCuModuleNVX(VkCuModuleNVX data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkCuModuleNVX_to_server_VkCuModuleNVX.contains( (uintptr_t)data ))){
                        printf("Panic: VkCuModuleNVX %p not found!\n",data);
                    }
                     printf("Serializing VkCuModuleNVX %p...\n",(VkCuModuleNVX)client_VkCuModuleNVX_to_server_VkCuModuleNVX[(uintptr_t)data]);
                    result["value"]=client_VkCuModuleNVX_to_server_VkCuModuleNVX[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkCuModuleNVX deserialize_VkCuModuleNVX(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkCuModuleNVX result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkCuModuleNVX)pointer);
                    if (server_VkCuModuleNVX_to_client_VkCuModuleNVX.contains(pointer)){
                        result=(VkCuModuleNVX)server_VkCuModuleNVX_to_client_VkCuModuleNVX[pointer];
                        printf("Deserializing to VkCuModuleNVX %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkCuModuleNVX));
                        printf("Mapping to VkCuModuleNVX %p...\n",handle);
                        server_VkCuModuleNVX_to_client_VkCuModuleNVX[pointer]=(uintptr_t)handle;
                        client_VkCuModuleNVX_to_server_VkCuModuleNVX[(uintptr_t)handle]=pointer;
                        
                        result=(VkCuModuleNVX)handle;
                    }
                #else
                    result=(VkCuModuleNVX)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkCuFunctionNVX_to_server_VkCuFunctionNVX;
            std::map<uintptr_t,uintptr_t> server_VkCuFunctionNVX_to_client_VkCuFunctionNVX;
            
        #endif
        

        json serialize_VkCuFunctionNVX(VkCuFunctionNVX data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkCuFunctionNVX_to_server_VkCuFunctionNVX.contains( (uintptr_t)data ))){
                        printf("Panic: VkCuFunctionNVX %p not found!\n",data);
                    }
                     printf("Serializing VkCuFunctionNVX %p...\n",(VkCuFunctionNVX)client_VkCuFunctionNVX_to_server_VkCuFunctionNVX[(uintptr_t)data]);
                    result["value"]=client_VkCuFunctionNVX_to_server_VkCuFunctionNVX[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkCuFunctionNVX deserialize_VkCuFunctionNVX(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkCuFunctionNVX result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkCuFunctionNVX)pointer);
                    if (server_VkCuFunctionNVX_to_client_VkCuFunctionNVX.contains(pointer)){
                        result=(VkCuFunctionNVX)server_VkCuFunctionNVX_to_client_VkCuFunctionNVX[pointer];
                        printf("Deserializing to VkCuFunctionNVX %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkCuFunctionNVX));
                        printf("Mapping to VkCuFunctionNVX %p...\n",handle);
                        server_VkCuFunctionNVX_to_client_VkCuFunctionNVX[pointer]=(uintptr_t)handle;
                        client_VkCuFunctionNVX_to_server_VkCuFunctionNVX[(uintptr_t)handle]=pointer;
                        
                        result=(VkCuFunctionNVX)handle;
                    }
                #else
                    result=(VkCuFunctionNVX)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkOpticalFlowSessionNV_to_server_VkOpticalFlowSessionNV;
            std::map<uintptr_t,uintptr_t> server_VkOpticalFlowSessionNV_to_client_VkOpticalFlowSessionNV;
            
        #endif
        

        json serialize_VkOpticalFlowSessionNV(VkOpticalFlowSessionNV data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkOpticalFlowSessionNV_to_server_VkOpticalFlowSessionNV.contains( (uintptr_t)data ))){
                        printf("Panic: VkOpticalFlowSessionNV %p not found!\n",data);
                    }
                     printf("Serializing VkOpticalFlowSessionNV %p...\n",(VkOpticalFlowSessionNV)client_VkOpticalFlowSessionNV_to_server_VkOpticalFlowSessionNV[(uintptr_t)data]);
                    result["value"]=client_VkOpticalFlowSessionNV_to_server_VkOpticalFlowSessionNV[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkOpticalFlowSessionNV deserialize_VkOpticalFlowSessionNV(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkOpticalFlowSessionNV result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkOpticalFlowSessionNV)pointer);
                    if (server_VkOpticalFlowSessionNV_to_client_VkOpticalFlowSessionNV.contains(pointer)){
                        result=(VkOpticalFlowSessionNV)server_VkOpticalFlowSessionNV_to_client_VkOpticalFlowSessionNV[pointer];
                        printf("Deserializing to VkOpticalFlowSessionNV %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkOpticalFlowSessionNV));
                        printf("Mapping to VkOpticalFlowSessionNV %p...\n",handle);
                        server_VkOpticalFlowSessionNV_to_client_VkOpticalFlowSessionNV[pointer]=(uintptr_t)handle;
                        client_VkOpticalFlowSessionNV_to_server_VkOpticalFlowSessionNV[(uintptr_t)handle]=pointer;
                        
                        result=(VkOpticalFlowSessionNV)handle;
                    }
                #else
                    result=(VkOpticalFlowSessionNV)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkMicromapEXT_to_server_VkMicromapEXT;
            std::map<uintptr_t,uintptr_t> server_VkMicromapEXT_to_client_VkMicromapEXT;
            
        #endif
        

        json serialize_VkMicromapEXT(VkMicromapEXT data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkMicromapEXT_to_server_VkMicromapEXT.contains( (uintptr_t)data ))){
                        printf("Panic: VkMicromapEXT %p not found!\n",data);
                    }
                     printf("Serializing VkMicromapEXT %p...\n",(VkMicromapEXT)client_VkMicromapEXT_to_server_VkMicromapEXT[(uintptr_t)data]);
                    result["value"]=client_VkMicromapEXT_to_server_VkMicromapEXT[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkMicromapEXT deserialize_VkMicromapEXT(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkMicromapEXT result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkMicromapEXT)pointer);
                    if (server_VkMicromapEXT_to_client_VkMicromapEXT.contains(pointer)){
                        result=(VkMicromapEXT)server_VkMicromapEXT_to_client_VkMicromapEXT[pointer];
                        printf("Deserializing to VkMicromapEXT %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkMicromapEXT));
                        printf("Mapping to VkMicromapEXT %p...\n",handle);
                        server_VkMicromapEXT_to_client_VkMicromapEXT[pointer]=(uintptr_t)handle;
                        client_VkMicromapEXT_to_server_VkMicromapEXT[(uintptr_t)handle]=pointer;
                        
                        result=(VkMicromapEXT)handle;
                    }
                #else
                    result=(VkMicromapEXT)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkShaderEXT_to_server_VkShaderEXT;
            std::map<uintptr_t,uintptr_t> server_VkShaderEXT_to_client_VkShaderEXT;
            
        #endif
        

        json serialize_VkShaderEXT(VkShaderEXT data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkShaderEXT_to_server_VkShaderEXT.contains( (uintptr_t)data ))){
                        printf("Panic: VkShaderEXT %p not found!\n",data);
                    }
                     printf("Serializing VkShaderEXT %p...\n",(VkShaderEXT)client_VkShaderEXT_to_server_VkShaderEXT[(uintptr_t)data]);
                    result["value"]=client_VkShaderEXT_to_server_VkShaderEXT[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkShaderEXT deserialize_VkShaderEXT(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkShaderEXT result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkShaderEXT)pointer);
                    if (server_VkShaderEXT_to_client_VkShaderEXT.contains(pointer)){
                        result=(VkShaderEXT)server_VkShaderEXT_to_client_VkShaderEXT[pointer];
                        printf("Deserializing to VkShaderEXT %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkShaderEXT));
                        printf("Mapping to VkShaderEXT %p...\n",handle);
                        server_VkShaderEXT_to_client_VkShaderEXT[pointer]=(uintptr_t)handle;
                        client_VkShaderEXT_to_server_VkShaderEXT[(uintptr_t)handle]=pointer;
                        
                        result=(VkShaderEXT)handle;
                    }
                #else
                    result=(VkShaderEXT)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDisplayKHR_to_server_VkDisplayKHR;
            std::map<uintptr_t,uintptr_t> server_VkDisplayKHR_to_client_VkDisplayKHR;
            
        #endif
        

        json serialize_VkDisplayKHR(VkDisplayKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDisplayKHR_to_server_VkDisplayKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkDisplayKHR %p not found!\n",data);
                    }
                     printf("Serializing VkDisplayKHR %p...\n",(VkDisplayKHR)client_VkDisplayKHR_to_server_VkDisplayKHR[(uintptr_t)data]);
                    result["value"]=client_VkDisplayKHR_to_server_VkDisplayKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDisplayKHR deserialize_VkDisplayKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDisplayKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDisplayKHR)pointer);
                    if (server_VkDisplayKHR_to_client_VkDisplayKHR.contains(pointer)){
                        result=(VkDisplayKHR)server_VkDisplayKHR_to_client_VkDisplayKHR[pointer];
                        printf("Deserializing to VkDisplayKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDisplayKHR));
                        printf("Mapping to VkDisplayKHR %p...\n",handle);
                        server_VkDisplayKHR_to_client_VkDisplayKHR[pointer]=(uintptr_t)handle;
                        client_VkDisplayKHR_to_server_VkDisplayKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkDisplayKHR)handle;
                    }
                #else
                    result=(VkDisplayKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDisplayModeKHR_to_server_VkDisplayModeKHR;
            std::map<uintptr_t,uintptr_t> server_VkDisplayModeKHR_to_client_VkDisplayModeKHR;
            
        #endif
        

        json serialize_VkDisplayModeKHR(VkDisplayModeKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDisplayModeKHR_to_server_VkDisplayModeKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkDisplayModeKHR %p not found!\n",data);
                    }
                     printf("Serializing VkDisplayModeKHR %p...\n",(VkDisplayModeKHR)client_VkDisplayModeKHR_to_server_VkDisplayModeKHR[(uintptr_t)data]);
                    result["value"]=client_VkDisplayModeKHR_to_server_VkDisplayModeKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDisplayModeKHR deserialize_VkDisplayModeKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDisplayModeKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDisplayModeKHR)pointer);
                    if (server_VkDisplayModeKHR_to_client_VkDisplayModeKHR.contains(pointer)){
                        result=(VkDisplayModeKHR)server_VkDisplayModeKHR_to_client_VkDisplayModeKHR[pointer];
                        printf("Deserializing to VkDisplayModeKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDisplayModeKHR));
                        printf("Mapping to VkDisplayModeKHR %p...\n",handle);
                        server_VkDisplayModeKHR_to_client_VkDisplayModeKHR[pointer]=(uintptr_t)handle;
                        client_VkDisplayModeKHR_to_server_VkDisplayModeKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkDisplayModeKHR)handle;
                    }
                #else
                    result=(VkDisplayModeKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkSurfaceKHR_to_server_VkSurfaceKHR;
            std::map<uintptr_t,uintptr_t> server_VkSurfaceKHR_to_client_VkSurfaceKHR;
            
        #endif
        

        json serialize_VkSurfaceKHR(VkSurfaceKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkSurfaceKHR_to_server_VkSurfaceKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkSurfaceKHR %p not found!\n",data);
                    }
                     printf("Serializing VkSurfaceKHR %p...\n",(VkSurfaceKHR)client_VkSurfaceKHR_to_server_VkSurfaceKHR[(uintptr_t)data]);
                    result["value"]=client_VkSurfaceKHR_to_server_VkSurfaceKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkSurfaceKHR deserialize_VkSurfaceKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkSurfaceKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkSurfaceKHR)pointer);
                    if (server_VkSurfaceKHR_to_client_VkSurfaceKHR.contains(pointer)){
                        result=(VkSurfaceKHR)server_VkSurfaceKHR_to_client_VkSurfaceKHR[pointer];
                        printf("Deserializing to VkSurfaceKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkSurfaceKHR));
                        printf("Mapping to VkSurfaceKHR %p...\n",handle);
                        server_VkSurfaceKHR_to_client_VkSurfaceKHR[pointer]=(uintptr_t)handle;
                        client_VkSurfaceKHR_to_server_VkSurfaceKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkSurfaceKHR)handle;
                    }
                #else
                    result=(VkSurfaceKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkSwapchainKHR_to_server_VkSwapchainKHR;
            std::map<uintptr_t,uintptr_t> server_VkSwapchainKHR_to_client_VkSwapchainKHR;
            
        #endif
        

        json serialize_VkSwapchainKHR(VkSwapchainKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkSwapchainKHR_to_server_VkSwapchainKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkSwapchainKHR %p not found!\n",data);
                    }
                     printf("Serializing VkSwapchainKHR %p...\n",(VkSwapchainKHR)client_VkSwapchainKHR_to_server_VkSwapchainKHR[(uintptr_t)data]);
                    result["value"]=client_VkSwapchainKHR_to_server_VkSwapchainKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkSwapchainKHR deserialize_VkSwapchainKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkSwapchainKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkSwapchainKHR)pointer);
                    if (server_VkSwapchainKHR_to_client_VkSwapchainKHR.contains(pointer)){
                        result=(VkSwapchainKHR)server_VkSwapchainKHR_to_client_VkSwapchainKHR[pointer];
                        printf("Deserializing to VkSwapchainKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkSwapchainKHR));
                        printf("Mapping to VkSwapchainKHR %p...\n",handle);
                        server_VkSwapchainKHR_to_client_VkSwapchainKHR[pointer]=(uintptr_t)handle;
                        client_VkSwapchainKHR_to_server_VkSwapchainKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkSwapchainKHR)handle;
                    }
                #else
                    result=(VkSwapchainKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDebugReportCallbackEXT_to_server_VkDebugReportCallbackEXT;
            std::map<uintptr_t,uintptr_t> server_VkDebugReportCallbackEXT_to_client_VkDebugReportCallbackEXT;
            
        #endif
        

        json serialize_VkDebugReportCallbackEXT(VkDebugReportCallbackEXT data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDebugReportCallbackEXT_to_server_VkDebugReportCallbackEXT.contains( (uintptr_t)data ))){
                        printf("Panic: VkDebugReportCallbackEXT %p not found!\n",data);
                    }
                     printf("Serializing VkDebugReportCallbackEXT %p...\n",(VkDebugReportCallbackEXT)client_VkDebugReportCallbackEXT_to_server_VkDebugReportCallbackEXT[(uintptr_t)data]);
                    result["value"]=client_VkDebugReportCallbackEXT_to_server_VkDebugReportCallbackEXT[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDebugReportCallbackEXT deserialize_VkDebugReportCallbackEXT(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDebugReportCallbackEXT result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDebugReportCallbackEXT)pointer);
                    if (server_VkDebugReportCallbackEXT_to_client_VkDebugReportCallbackEXT.contains(pointer)){
                        result=(VkDebugReportCallbackEXT)server_VkDebugReportCallbackEXT_to_client_VkDebugReportCallbackEXT[pointer];
                        printf("Deserializing to VkDebugReportCallbackEXT %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDebugReportCallbackEXT));
                        printf("Mapping to VkDebugReportCallbackEXT %p...\n",handle);
                        server_VkDebugReportCallbackEXT_to_client_VkDebugReportCallbackEXT[pointer]=(uintptr_t)handle;
                        client_VkDebugReportCallbackEXT_to_server_VkDebugReportCallbackEXT[(uintptr_t)handle]=pointer;
                        
                        result=(VkDebugReportCallbackEXT)handle;
                    }
                #else
                    result=(VkDebugReportCallbackEXT)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkDebugUtilsMessengerEXT_to_server_VkDebugUtilsMessengerEXT;
            std::map<uintptr_t,uintptr_t> server_VkDebugUtilsMessengerEXT_to_client_VkDebugUtilsMessengerEXT;
            
        #endif
        

        json serialize_VkDebugUtilsMessengerEXT(VkDebugUtilsMessengerEXT data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkDebugUtilsMessengerEXT_to_server_VkDebugUtilsMessengerEXT.contains( (uintptr_t)data ))){
                        printf("Panic: VkDebugUtilsMessengerEXT %p not found!\n",data);
                    }
                     printf("Serializing VkDebugUtilsMessengerEXT %p...\n",(VkDebugUtilsMessengerEXT)client_VkDebugUtilsMessengerEXT_to_server_VkDebugUtilsMessengerEXT[(uintptr_t)data]);
                    result["value"]=client_VkDebugUtilsMessengerEXT_to_server_VkDebugUtilsMessengerEXT[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkDebugUtilsMessengerEXT deserialize_VkDebugUtilsMessengerEXT(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkDebugUtilsMessengerEXT result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkDebugUtilsMessengerEXT)pointer);
                    if (server_VkDebugUtilsMessengerEXT_to_client_VkDebugUtilsMessengerEXT.contains(pointer)){
                        result=(VkDebugUtilsMessengerEXT)server_VkDebugUtilsMessengerEXT_to_client_VkDebugUtilsMessengerEXT[pointer];
                        printf("Deserializing to VkDebugUtilsMessengerEXT %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkDebugUtilsMessengerEXT));
                        printf("Mapping to VkDebugUtilsMessengerEXT %p...\n",handle);
                        server_VkDebugUtilsMessengerEXT_to_client_VkDebugUtilsMessengerEXT[pointer]=(uintptr_t)handle;
                        client_VkDebugUtilsMessengerEXT_to_server_VkDebugUtilsMessengerEXT[(uintptr_t)handle]=pointer;
                        
                        result=(VkDebugUtilsMessengerEXT)handle;
                    }
                #else
                    result=(VkDebugUtilsMessengerEXT)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkVideoSessionKHR_to_server_VkVideoSessionKHR;
            std::map<uintptr_t,uintptr_t> server_VkVideoSessionKHR_to_client_VkVideoSessionKHR;
            
        #endif
        

        json serialize_VkVideoSessionKHR(VkVideoSessionKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkVideoSessionKHR_to_server_VkVideoSessionKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkVideoSessionKHR %p not found!\n",data);
                    }
                     printf("Serializing VkVideoSessionKHR %p...\n",(VkVideoSessionKHR)client_VkVideoSessionKHR_to_server_VkVideoSessionKHR[(uintptr_t)data]);
                    result["value"]=client_VkVideoSessionKHR_to_server_VkVideoSessionKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkVideoSessionKHR deserialize_VkVideoSessionKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkVideoSessionKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkVideoSessionKHR)pointer);
                    if (server_VkVideoSessionKHR_to_client_VkVideoSessionKHR.contains(pointer)){
                        result=(VkVideoSessionKHR)server_VkVideoSessionKHR_to_client_VkVideoSessionKHR[pointer];
                        printf("Deserializing to VkVideoSessionKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkVideoSessionKHR));
                        printf("Mapping to VkVideoSessionKHR %p...\n",handle);
                        server_VkVideoSessionKHR_to_client_VkVideoSessionKHR[pointer]=(uintptr_t)handle;
                        client_VkVideoSessionKHR_to_server_VkVideoSessionKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkVideoSessionKHR)handle;
                    }
                #else
                    result=(VkVideoSessionKHR)pointer;
                #endif
                
                return result;
       }

        #ifdef CLIENT
            std::map<uintptr_t,uintptr_t> client_VkVideoSessionParametersKHR_to_server_VkVideoSessionParametersKHR;
            std::map<uintptr_t,uintptr_t> server_VkVideoSessionParametersKHR_to_client_VkVideoSessionParametersKHR;
            
        #endif
        

        json serialize_VkVideoSessionParametersKHR(VkVideoSessionParametersKHR data){
            json result=json({});
            #ifdef CLIENT
                if (data==NULL){
                    result["value"]=(uintptr_t)NULL;
                    printf("Handle is NULL, serializing to %p...\n",NULL);
                }else{
                    if(!(client_VkVideoSessionParametersKHR_to_server_VkVideoSessionParametersKHR.contains( (uintptr_t)data ))){
                        printf("Panic: VkVideoSessionParametersKHR %p not found!\n",data);
                    }
                     printf("Serializing VkVideoSessionParametersKHR %p...\n",(VkVideoSessionParametersKHR)client_VkVideoSessionParametersKHR_to_server_VkVideoSessionParametersKHR[(uintptr_t)data]);
                    result["value"]=client_VkVideoSessionParametersKHR_to_server_VkVideoSessionParametersKHR[(uintptr_t)data];
                }
            #else
                result["value"]=(uintptr_t)data;
            #endif
        

            return result;
        }
       

       VkVideoSessionParametersKHR deserialize_VkVideoSessionParametersKHR(json data){
                auto pointer=data["value"].get<uintptr_t>();
                VkVideoSessionParametersKHR result;
                #ifdef CLIENT
                    printf("Handle server pointer %p:\n",(VkVideoSessionParametersKHR)pointer);
                    if (server_VkVideoSessionParametersKHR_to_client_VkVideoSessionParametersKHR.contains(pointer)){
                        result=(VkVideoSessionParametersKHR)server_VkVideoSessionParametersKHR_to_client_VkVideoSessionParametersKHR[pointer];
                        printf("Deserializing to VkVideoSessionParametersKHR %p...\n",result);
                    }else{
                        auto handle=malloc(sizeof(VkVideoSessionParametersKHR));
                        printf("Mapping to VkVideoSessionParametersKHR %p...\n",handle);
                        server_VkVideoSessionParametersKHR_to_client_VkVideoSessionParametersKHR[pointer]=(uintptr_t)handle;
                        client_VkVideoSessionParametersKHR_to_server_VkVideoSessionParametersKHR[(uintptr_t)handle]=pointer;
                        
                        result=(VkVideoSessionParametersKHR)handle;
                    }
                #else
                    result=(VkVideoSessionParametersKHR)pointer;
                #endif
                
                return result;
       }
