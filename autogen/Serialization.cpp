
#include <ThreadStruct.hpp>
#include <nlohmann/json.hpp>

// for convenience
using json = nlohmann::json;

#include <Serialization.hpp>
#include <Server.hpp>
#include <Synchronization.hpp>


    json serialize_VkBaseOutStructure(VkBaseOutStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MjITDjg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GlHnImN=json({});
    
        if (name.pNext==NULL){
            return_GlHnImN["null"]=true;
            return return_GlHnImN;
        }
        return_GlHnImN=[&]() {
    json return_Dsvgcrg=json({});
    return serialize_VkBaseOutStructure(*name.pNext);}();
return return_GlHnImN;}();
return result;}

    VkBaseOutStructure deserialize_VkBaseOutStructure(json name){
        auto result=VkBaseOutStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    [&]() {
*(result.pNext)=deserialize_VkBaseOutStructure(name["members"]["pNext"]);}();
}();
return result;}

    json serialize_VkBaseInStructure(VkBaseInStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FztPKGi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YRctpuD=json({});
    
        if (name.pNext==NULL){
            return_YRctpuD["null"]=true;
            return return_YRctpuD;
        }
        return_YRctpuD=[&]() {
    json return_MXSVnJc=json({});
    return serialize_VkBaseInStructure(*name.pNext);}();
return return_YRctpuD;}();
return result;}

    VkBaseInStructure deserialize_VkBaseInStructure(json name){
        auto result=VkBaseInStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
VkBaseInStructure* temp_jdYdbYw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jdYdbYw=NULL;
        }
    [&]() {
*(temp_jdYdbYw)=deserialize_VkBaseInStructure(name["members"]["pNext"]);}();
}();result.pNext=temp_jdYdbYw;}();
return result;}

    json serialize_VkOffset2D(VkOffset2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_lkExrtl=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_qWhxnqZ=json({});
    return serialize_int32_t(name.y);}();
return result;}

    VkOffset2D deserialize_VkOffset2D(json name){
        auto result=VkOffset2D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
return result;}

    json serialize_VkOffset3D(VkOffset3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_lHEJWPK=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_ZHtOSsB=json({});
    return serialize_int32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_AYqLmHf=json({});
    return serialize_int32_t(name.z);}();
return result;}

    VkOffset3D deserialize_VkOffset3D(json name){
        auto result=VkOffset3D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_int32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkExtent2D(VkExtent2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_muGbJeF=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_DKGNVis=json({});
    return serialize_uint32_t(name.height);}();
return result;}

    VkExtent2D deserialize_VkExtent2D(json name){
        auto result=VkExtent2D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
return result;}

    json serialize_VkExtent3D(VkExtent3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_YNKPDWT=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_xHKovXu=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_PktynIX=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkExtent3D deserialize_VkExtent3D(json name){
        auto result=VkExtent3D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkViewport(VkViewport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_eeagDWC=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_TzXLPPJ=json({});
    return serialize_float(name.y);}();
result["members"]["width"]=[&]() {
    json return_XpmOrQW=json({});
    return serialize_float(name.width);}();
result["members"]["height"]=[&]() {
    json return_FiHecLN=json({});
    return serialize_float(name.height);}();
result["members"]["minDepth"]=[&]() {
    json return_XbGeOwr=json({});
    return serialize_float(name.minDepth);}();
result["members"]["maxDepth"]=[&]() {
    json return_zOlSPdd=json({});
    return serialize_float(name.maxDepth);}();
return result;}

    VkViewport deserialize_VkViewport(json name){
        auto result=VkViewport();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
[&]() {
result.width=deserialize_float(name["members"]["width"]);}();
[&]() {
result.height=deserialize_float(name["members"]["height"]);}();
[&]() {
result.minDepth=deserialize_float(name["members"]["minDepth"]);}();
[&]() {
result.maxDepth=deserialize_float(name["members"]["maxDepth"]);}();
return result;}

    json serialize_VkRect2D(VkRect2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_gjmPoJC=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_wlPHKIG=json({});
    return serialize_VkExtent2D(name.extent);}();
return result;}

    VkRect2D deserialize_VkRect2D(json name){
        auto result=VkRect2D();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
return result;}

    json serialize_VkClearRect(VkClearRect name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rect"]=[&]() {
    json return_TDbGlwX=json({});
    return serialize_VkRect2D(name.rect);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_wArtgGs=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_qvqmBQI=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkClearRect deserialize_VkClearRect(json name){
        auto result=VkClearRect();
    
[&]() {
result.rect=deserialize_VkRect2D(name["members"]["rect"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkComponentMapping(VkComponentMapping name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["r"]=[&]() {
    json return_VekEPFe=json({});
    return serialize_VkComponentSwizzle(name.r);}();
result["members"]["g"]=[&]() {
    json return_rcrnyUp=json({});
    return serialize_VkComponentSwizzle(name.g);}();
result["members"]["b"]=[&]() {
    json return_nkfrWKV=json({});
    return serialize_VkComponentSwizzle(name.b);}();
result["members"]["a"]=[&]() {
    json return_lzsyaSB=json({});
    return serialize_VkComponentSwizzle(name.a);}();
return result;}

    VkComponentMapping deserialize_VkComponentMapping(json name){
        auto result=VkComponentMapping();
    
[&]() {
result.r=deserialize_VkComponentSwizzle(name["members"]["r"]);}();
[&]() {
result.g=deserialize_VkComponentSwizzle(name["members"]["g"]);}();
[&]() {
result.b=deserialize_VkComponentSwizzle(name["members"]["b"]);}();
[&]() {
result.a=deserialize_VkComponentSwizzle(name["members"]["a"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties(VkPhysicalDeviceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["apiVersion"]=[&]() {
    json return_IrFULZk=json({});
    return serialize_uint32_t(name.apiVersion);}();
result["members"]["driverVersion"]=[&]() {
    json return_eXkJLhd=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_GyQBMvs=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_umQVwGL=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["deviceType"]=[&]() {
    json return_SSfQDMg=json({});
    return serialize_VkPhysicalDeviceType(name.deviceType);}();
result["members"]["deviceName"]=[&]() {
    json return_GpKalNu=json({});
    
        return_GpKalNu["members"]={};
        for(int i=0; i < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_cMortYk=json({});
    return serialize_char(name.deviceName[i]);}();
            return_GpKalNu["members"][std::to_string(i)].push_back(temp);
        }
        return return_GpKalNu;
        }();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_TLlcABB=json({});
    
        return_TLlcABB["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_iVubRzv=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_TLlcABB["members"][std::to_string(i)].push_back(temp);
        }
        return return_TLlcABB;
        }();
result["members"]["limits"]=[&]() {
    json return_oBIUFIh=json({});
    return serialize_VkPhysicalDeviceLimits(name.limits);}();
result["members"]["sparseProperties"]=[&]() {
    json return_ImDdiWS=json({});
    return serialize_VkPhysicalDeviceSparseProperties(name.sparseProperties);}();
return result;}

    VkPhysicalDeviceProperties deserialize_VkPhysicalDeviceProperties(json name){
        auto result=VkPhysicalDeviceProperties();
    
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.deviceType=deserialize_VkPhysicalDeviceType(name["members"]["deviceType"]);}();
[&]() {

        for (int OHPHzKV=0; OHPHzKV < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; OHPHzKV++){
            [&]() {
result.deviceName[OHPHzKV]=deserialize_char(name["members"]["deviceName"]["members"][OHPHzKV]);}();;
        }
        }();
[&]() {

        for (int ijBcATD=0; ijBcATD < VK_UUID_SIZE; ijBcATD++){
            [&]() {
result.pipelineCacheUUID[ijBcATD]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][ijBcATD]);}();;
        }
        }();
[&]() {
result.limits=deserialize_VkPhysicalDeviceLimits(name["members"]["limits"]);}();
[&]() {
result.sparseProperties=deserialize_VkPhysicalDeviceSparseProperties(name["members"]["sparseProperties"]);}();
return result;}

    json serialize_VkExtensionProperties(VkExtensionProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["extensionName"]=[&]() {
    json return_Yciufcd=json({});
    
        return_Yciufcd["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_keGOxhe=json({});
    return serialize_char(name.extensionName[i]);}();
            return_Yciufcd["members"][std::to_string(i)].push_back(temp);
        }
        return return_Yciufcd;
        }();
result["members"]["specVersion"]=[&]() {
    json return_DaDmdTJ=json({});
    return serialize_uint32_t(name.specVersion);}();
return result;}

    VkExtensionProperties deserialize_VkExtensionProperties(json name){
        auto result=VkExtensionProperties();
    
[&]() {

        for (int CzLJEyo=0; CzLJEyo < VK_MAX_EXTENSION_NAME_SIZE; CzLJEyo++){
            [&]() {
result.extensionName[CzLJEyo]=deserialize_char(name["members"]["extensionName"]["members"][CzLJEyo]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
return result;}

    json serialize_VkLayerProperties(VkLayerProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["layerName"]=[&]() {
    json return_sbVtYKc=json({});
    
        return_sbVtYKc["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_NjTlUvq=json({});
    return serialize_char(name.layerName[i]);}();
            return_sbVtYKc["members"][std::to_string(i)].push_back(temp);
        }
        return return_sbVtYKc;
        }();
result["members"]["specVersion"]=[&]() {
    json return_Xyhqrkg=json({});
    return serialize_uint32_t(name.specVersion);}();
result["members"]["implementationVersion"]=[&]() {
    json return_SsZKIUj=json({});
    return serialize_uint32_t(name.implementationVersion);}();
result["members"]["description"]=[&]() {
    json return_IawpKtN=json({});
    
        return_IawpKtN["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_QLXaAKS=json({});
    return serialize_char(name.description[i]);}();
            return_IawpKtN["members"][std::to_string(i)].push_back(temp);
        }
        return return_IawpKtN;
        }();
return result;}

    VkLayerProperties deserialize_VkLayerProperties(json name){
        auto result=VkLayerProperties();
    
[&]() {

        for (int NeZvreb=0; NeZvreb < VK_MAX_EXTENSION_NAME_SIZE; NeZvreb++){
            [&]() {
result.layerName[NeZvreb]=deserialize_char(name["members"]["layerName"]["members"][NeZvreb]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
[&]() {
result.implementationVersion=deserialize_uint32_t(name["members"]["implementationVersion"]);}();
[&]() {

        for (int VPKZMKj=0; VPKZMKj < VK_MAX_DESCRIPTION_SIZE; VPKZMKj++){
            [&]() {
result.description[VPKZMKj]=deserialize_char(name["members"]["description"]["members"][VPKZMKj]);}();;
        }
        }();
return result;}

    json serialize_VkApplicationInfo(VkApplicationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dKLbxau=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_snhXowk=json({});
    
        if (name.pNext==NULL){
            return_snhXowk["null"]=true;
            return return_snhXowk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pApplicationName"]=[&]() {
    json return_XNUxZbF=json({});
    
        if (name.pApplicationName==NULL){
            return_XNUxZbF["null"]=true;
            return return_XNUxZbF;
        }
        return serialize_char_p(name.pApplicationName);
}();
result["members"]["applicationVersion"]=[&]() {
    json return_eWjMVlM=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["pEngineName"]=[&]() {
    json return_oiDrblK=json({});
    
        if (name.pEngineName==NULL){
            return_oiDrblK["null"]=true;
            return return_oiDrblK;
        }
        return serialize_char_p(name.pEngineName);
}();
result["members"]["engineVersion"]=[&]() {
    json return_rrXqVDb=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_fykTEaI=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkApplicationInfo deserialize_VkApplicationInfo(json name){
        auto result=VkApplicationInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SFekqxL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SFekqxL=NULL;
        }
    temp_SFekqxL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SFekqxL;}();
[&]() {
char* temp_tZDDEtU;[&]() {

        if (name["members"]["pApplicationName"].contains("null")){
        temp_tZDDEtU=NULL;
        }
    temp_tZDDEtU=deserialize_char_p(name["members"]["pApplicationName"]);
}();result.pApplicationName=temp_tZDDEtU;}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
char* temp_wPuMhDb;[&]() {

        if (name["members"]["pEngineName"].contains("null")){
        temp_wPuMhDb=NULL;
        }
    temp_wPuMhDb=deserialize_char_p(name["members"]["pEngineName"]);
}();result.pEngineName=temp_wPuMhDb;}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkAllocationCallbacks(VkAllocationCallbacks name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pUserData"]=[&]() {
    json return_BDjhYyI=json({});
    
        if (name.pUserData==NULL){
            return_BDjhYyI["null"]=true;
            return return_BDjhYyI;
        }
        return serialize_void_p(name.pUserData);
}();
result["members"]["pfnAllocation"]=[&]() {
    json return_ytfVDPA=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkAllocationFunction(name.pfnAllocation);
        #endif
        }();
result["members"]["pfnReallocation"]=[&]() {
    json return_yUppPfd=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkReallocationFunction(name.pfnReallocation);
        #endif
        }();
result["members"]["pfnFree"]=[&]() {
    json return_GYFDxKZ=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkFreeFunction(name.pfnFree);
        #endif
        }();
result["members"]["pfnInternalAllocation"]=[&]() {
    json return_EZtxqmc=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalAllocationNotification(name.pfnInternalAllocation);
        #endif
        }();
result["members"]["pfnInternalFree"]=[&]() {
    json return_UzqnNcy=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalFreeNotification(name.pfnInternalFree);
        #endif
        }();
return result;}
typedef struct {
void* pUserData;
uintptr_t PFN_vkAllocationFunction_id;
uintptr_t PFN_vkReallocationFunction_id;
uintptr_t PFN_vkFreeFunction_id;
uintptr_t PFN_vkInternalAllocationNotification_id;
uintptr_t PFN_vkInternalFreeNotification_id;
} VkAllocationCallbacks_struct;

    VkAllocationCallbacks deserialize_VkAllocationCallbacks(json name){
        auto result=VkAllocationCallbacks();
    
auto _struct = new VkAllocationCallbacks_struct;
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
[&]() {

        #ifndef CLIENT
        result.pfnAllocation=deserialize_PFN_vkAllocationFunction(name["members"]["pfnAllocation"]);
        #endif
        }();
_struct->PFN_vkAllocationFunction_id=name["members"]["pfnAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnReallocation=deserialize_PFN_vkReallocationFunction(name["members"]["pfnReallocation"]);
        #endif
        }();
_struct->PFN_vkReallocationFunction_id=name["members"]["pfnReallocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnFree=deserialize_PFN_vkFreeFunction(name["members"]["pfnFree"]);
        #endif
        }();
_struct->PFN_vkFreeFunction_id=name["members"]["pfnFree"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalAllocation=deserialize_PFN_vkInternalAllocationNotification(name["members"]["pfnInternalAllocation"]);
        #endif
        }();
_struct->PFN_vkInternalAllocationNotification_id=name["members"]["pfnInternalAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalFree=deserialize_PFN_vkInternalFreeNotification(name["members"]["pfnInternalFree"]);
        #endif
        }();
_struct->PFN_vkInternalFreeNotification_id=name["members"]["pfnInternalFree"]["id"];
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceQueueCreateInfo(VkDeviceQueueCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gawecey=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VUQAYro=json({});
    
        if (name.pNext==NULL){
            return_VUQAYro["null"]=true;
            return return_VUQAYro;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_TAbIgTG=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_eyuldxc=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueCount"]=[&]() {
    json return_ibSbulN=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["pQueuePriorities"]=[&]() {
    json return_bIIBowb=json({});
    
        if (name.pQueuePriorities==NULL){
            return_bIIBowb["null"]=true;
            return return_bIIBowb;
        }
        
        return_bIIBowb["members"]={};
        for(int i=0; i < name.queueCount; i++){
            json temp;
            temp=[&]() {
    json return_AVEsHUE=json({});
    return serialize_float(name.pQueuePriorities[i]);}();
            return_bIIBowb["members"][std::to_string(i)].push_back(temp);
        }
        return return_bIIBowb;
        }();
return result;}

    VkDeviceQueueCreateInfo deserialize_VkDeviceQueueCreateInfo(json name){
        auto result=VkDeviceQueueCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EtcDfmS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EtcDfmS=NULL;
        }
    temp_EtcDfmS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EtcDfmS;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
float* temp_nJKhFFr;[&]() {

        if (name["members"]["pQueuePriorities"].contains("null")){
        temp_nJKhFFr=NULL;
        }
    temp_nJKhFFr=(float*)malloc(result.queueCount*sizeof(float));
        for (int rTjljpW=0; rTjljpW < result.queueCount; rTjljpW++){
            [&]() {
temp_nJKhFFr[rTjljpW]=deserialize_float(name["members"]["pQueuePriorities"]["members"][rTjljpW]);}();;
        }
        }();result.pQueuePriorities=temp_nJKhFFr;}();
return result;}

    json serialize_VkDeviceCreateInfo(VkDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_poMxDVI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ImvbCdj=json({});
    
        if (name.pNext==NULL){
            return_ImvbCdj["null"]=true;
            return return_ImvbCdj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OquwxtV=json({});
    return serialize_VkDeviceCreateFlags(name.flags);}();
result["members"]["queueCreateInfoCount"]=[&]() {
    json return_desItXw=json({});
    return serialize_uint32_t(name.queueCreateInfoCount);}();
result["members"]["pQueueCreateInfos"]=[&]() {
    json return_YTkYLTf=json({});
    
        if (name.pQueueCreateInfos==NULL){
            return_YTkYLTf["null"]=true;
            return return_YTkYLTf;
        }
        
        return_YTkYLTf["members"]={};
        for(int i=0; i < name.queueCreateInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_xkMopZC=json({});
    return serialize_VkDeviceQueueCreateInfo(name.pQueueCreateInfos[i]);}();
            return_YTkYLTf["members"][std::to_string(i)].push_back(temp);
        }
        return return_YTkYLTf;
        }();
result["members"]["enabledLayerCount"]=[&]() {
    json return_jxAexzf=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_aDnITix=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_aDnITix["null"]=true;
            return return_aDnITix;
        }
        
        return_aDnITix["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_TxxEjYY=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_TxxEjYY["null"]=true;
            return return_TxxEjYY;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_aDnITix["members"][std::to_string(i)].push_back(temp);
        }
        return return_aDnITix;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_crtJIMm=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_VeSlTEK=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_VeSlTEK["null"]=true;
            return return_VeSlTEK;
        }
        
        return_VeSlTEK["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_hubPCcL=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_hubPCcL["null"]=true;
            return return_hubPCcL;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_VeSlTEK["members"][std::to_string(i)].push_back(temp);
        }
        return return_VeSlTEK;
        }();
result["members"]["pEnabledFeatures"]=[&]() {
    json return_xVkYdQz=json({});
    
        if (name.pEnabledFeatures==NULL){
            return_xVkYdQz["null"]=true;
            return return_xVkYdQz;
        }
        return_xVkYdQz=[&]() {
    json return_SOWSAou=json({});
    return serialize_VkPhysicalDeviceFeatures(*name.pEnabledFeatures);}();
return return_xVkYdQz;}();
return result;}

    VkDeviceCreateInfo deserialize_VkDeviceCreateInfo(json name){
        auto result=VkDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BtVDKOw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BtVDKOw=NULL;
        }
    temp_BtVDKOw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BtVDKOw;}();
[&]() {
result.flags=deserialize_VkDeviceCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueCreateInfoCount=deserialize_uint32_t(name["members"]["queueCreateInfoCount"]);}();
[&]() {
VkDeviceQueueCreateInfo* temp_zTzCsYn;[&]() {

        if (name["members"]["pQueueCreateInfos"].contains("null")){
        temp_zTzCsYn=NULL;
        }
    temp_zTzCsYn=(VkDeviceQueueCreateInfo*)malloc(result.queueCreateInfoCount*sizeof(VkDeviceQueueCreateInfo));
        for (int RrxPzvD=0; RrxPzvD < result.queueCreateInfoCount; RrxPzvD++){
            [&]() {
temp_zTzCsYn[RrxPzvD]=deserialize_VkDeviceQueueCreateInfo(name["members"]["pQueueCreateInfos"]["members"][RrxPzvD]);}();;
        }
        }();result.pQueueCreateInfos=temp_zTzCsYn;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_rzcdXXl;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_rzcdXXl=NULL;
        }
    temp_rzcdXXl=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int AiRDEck=0; AiRDEck < result.enabledLayerCount; AiRDEck++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][AiRDEck].contains("null")){
        temp_rzcdXXl[AiRDEck]=NULL;
        }
    temp_rzcdXXl[AiRDEck]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][AiRDEck]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_rzcdXXl;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_WPTxuEg;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_WPTxuEg=NULL;
        }
    temp_WPTxuEg=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int IpVXlgH=0; IpVXlgH < result.enabledExtensionCount; IpVXlgH++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][IpVXlgH].contains("null")){
        temp_WPTxuEg[IpVXlgH]=NULL;
        }
    temp_WPTxuEg[IpVXlgH]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][IpVXlgH]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_WPTxuEg;}();
[&]() {
VkPhysicalDeviceFeatures* temp_ESoVkRq;[&]() {

        if (name["members"]["pEnabledFeatures"].contains("null")){
        temp_ESoVkRq=NULL;
        }
    [&]() {
*(temp_ESoVkRq)=deserialize_VkPhysicalDeviceFeatures(name["members"]["pEnabledFeatures"]);}();
}();result.pEnabledFeatures=temp_ESoVkRq;}();
return result;}

    json serialize_VkInstanceCreateInfo(VkInstanceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QjEUcPy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZlftUVL=json({});
    
        if (name.pNext==NULL){
            return_ZlftUVL["null"]=true;
            return return_ZlftUVL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EkzwhMv=json({});
    return serialize_VkInstanceCreateFlags(name.flags);}();
result["members"]["pApplicationInfo"]=[&]() {
    json return_gESgCUt=json({});
    
        if (name.pApplicationInfo==NULL){
            return_gESgCUt["null"]=true;
            return return_gESgCUt;
        }
        return_gESgCUt=[&]() {
    json return_AZlJRPG=json({});
    return serialize_VkApplicationInfo(*name.pApplicationInfo);}();
return return_gESgCUt;}();
result["members"]["enabledLayerCount"]=[&]() {
    json return_gVmWKmk=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_eWFrASw=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_eWFrASw["null"]=true;
            return return_eWFrASw;
        }
        
        return_eWFrASw["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_cDkpzKs=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_cDkpzKs["null"]=true;
            return return_cDkpzKs;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_eWFrASw["members"][std::to_string(i)].push_back(temp);
        }
        return return_eWFrASw;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_rtUJGir=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_EAEuKXB=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_EAEuKXB["null"]=true;
            return return_EAEuKXB;
        }
        
        return_EAEuKXB["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_wyFjRqp=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_wyFjRqp["null"]=true;
            return return_wyFjRqp;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_EAEuKXB["members"][std::to_string(i)].push_back(temp);
        }
        return return_EAEuKXB;
        }();
return result;}

    VkInstanceCreateInfo deserialize_VkInstanceCreateInfo(json name){
        auto result=VkInstanceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zKjNglz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zKjNglz=NULL;
        }
    temp_zKjNglz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zKjNglz;}();
[&]() {
result.flags=deserialize_VkInstanceCreateFlags(name["members"]["flags"]);}();
[&]() {
VkApplicationInfo* temp_qobJrWo;[&]() {

        if (name["members"]["pApplicationInfo"].contains("null")){
        temp_qobJrWo=NULL;
        }
    [&]() {
*(temp_qobJrWo)=deserialize_VkApplicationInfo(name["members"]["pApplicationInfo"]);}();
}();result.pApplicationInfo=temp_qobJrWo;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_WfnsTuJ;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_WfnsTuJ=NULL;
        }
    temp_WfnsTuJ=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int LepflZM=0; LepflZM < result.enabledLayerCount; LepflZM++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][LepflZM].contains("null")){
        temp_WfnsTuJ[LepflZM]=NULL;
        }
    temp_WfnsTuJ[LepflZM]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][LepflZM]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_WfnsTuJ;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_dXgCIPp;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_dXgCIPp=NULL;
        }
    temp_dXgCIPp=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int VjCifTV=0; VjCifTV < result.enabledExtensionCount; VjCifTV++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][VjCifTV].contains("null")){
        temp_dXgCIPp[VjCifTV]=NULL;
        }
    temp_dXgCIPp[VjCifTV]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][VjCifTV]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_dXgCIPp;}();
return result;}

    json serialize_VkQueueFamilyProperties(VkQueueFamilyProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["queueFlags"]=[&]() {
    json return_rbBnEnf=json({});
    return serialize_VkQueueFlags(name.queueFlags);}();
result["members"]["queueCount"]=[&]() {
    json return_lpGzSqi=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["timestampValidBits"]=[&]() {
    json return_SFWwpHM=json({});
    return serialize_uint32_t(name.timestampValidBits);}();
result["members"]["minImageTransferGranularity"]=[&]() {
    json return_ryRjiYQ=json({});
    return serialize_VkExtent3D(name.minImageTransferGranularity);}();
return result;}

    VkQueueFamilyProperties deserialize_VkQueueFamilyProperties(json name){
        auto result=VkQueueFamilyProperties();
    
[&]() {
result.queueFlags=deserialize_VkQueueFlags(name["members"]["queueFlags"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
result.timestampValidBits=deserialize_uint32_t(name["members"]["timestampValidBits"]);}();
[&]() {
result.minImageTransferGranularity=deserialize_VkExtent3D(name["members"]["minImageTransferGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties(VkPhysicalDeviceMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["memoryTypeCount"]=[&]() {
    json return_pIZFTov=json({});
    return serialize_uint32_t(name.memoryTypeCount);}();
result["members"]["memoryTypes"]=[&]() {
    json return_rIQGeTi=json({});
    
        return_rIQGeTi["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_TYPES; i++){
            json temp;
            temp=[&]() {
    json return_PtZzonb=json({});
    return serialize_VkMemoryType(name.memoryTypes[i]);}();
            return_rIQGeTi["members"][std::to_string(i)].push_back(temp);
        }
        return return_rIQGeTi;
        }();
result["members"]["memoryHeapCount"]=[&]() {
    json return_tEFNrUS=json({});
    return serialize_uint32_t(name.memoryHeapCount);}();
result["members"]["memoryHeaps"]=[&]() {
    json return_mppxUCD=json({});
    
        return_mppxUCD["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_hUINFlQ=json({});
    return serialize_VkMemoryHeap(name.memoryHeaps[i]);}();
            return_mppxUCD["members"][std::to_string(i)].push_back(temp);
        }
        return return_mppxUCD;
        }();
return result;}

    VkPhysicalDeviceMemoryProperties deserialize_VkPhysicalDeviceMemoryProperties(json name){
        auto result=VkPhysicalDeviceMemoryProperties();
    
[&]() {
result.memoryTypeCount=deserialize_uint32_t(name["members"]["memoryTypeCount"]);}();
[&]() {

        for (int nroOPAU=0; nroOPAU < VK_MAX_MEMORY_TYPES; nroOPAU++){
            [&]() {
result.memoryTypes[nroOPAU]=deserialize_VkMemoryType(name["members"]["memoryTypes"]["members"][nroOPAU]);}();;
        }
        }();
[&]() {
result.memoryHeapCount=deserialize_uint32_t(name["members"]["memoryHeapCount"]);}();
[&]() {

        for (int qjkRJEU=0; qjkRJEU < VK_MAX_MEMORY_HEAPS; qjkRJEU++){
            [&]() {
result.memoryHeaps[qjkRJEU]=deserialize_VkMemoryHeap(name["members"]["memoryHeaps"]["members"][qjkRJEU]);}();;
        }
        }();
return result;}

    json serialize_VkMemoryAllocateInfo(VkMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IcuLLXv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bvrcxKs=json({});
    
        if (name.pNext==NULL){
            return_bvrcxKs["null"]=true;
            return return_bvrcxKs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allocationSize"]=[&]() {
    json return_OmhvAUl=json({});
    return_OmhvAUl=[&]() {
    json return_YGfNPJG=json({});
    return serialize_uint64_t(name.allocationSize);}();return return_OmhvAUl;}();
result["members"]["memoryTypeIndex"]=[&]() {
    json return_gLUaxvO=json({});
    return serialize_uint32_t(name.memoryTypeIndex);}();
return result;}

    VkMemoryAllocateInfo deserialize_VkMemoryAllocateInfo(json name){
        auto result=VkMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oHHbBFR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oHHbBFR=NULL;
        }
    temp_oHHbBFR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oHHbBFR;}();
[&]() {
[&]() {
result.allocationSize=deserialize_uint64_t(name["members"]["allocationSize"]);}();}();
[&]() {
result.memoryTypeIndex=deserialize_uint32_t(name["members"]["memoryTypeIndex"]);}();
return result;}

    json serialize_VkMemoryRequirements(VkMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_KmbiTDI=json({});
    return_KmbiTDI=[&]() {
    json return_bEQdjOT=json({});
    return serialize_uint64_t(name.size);}();return return_KmbiTDI;}();
result["members"]["alignment"]=[&]() {
    json return_FIfCAoZ=json({});
    return_FIfCAoZ=[&]() {
    json return_OjHCyje=json({});
    return serialize_uint64_t(name.alignment);}();return return_FIfCAoZ;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_zrRNVnc=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryRequirements deserialize_VkMemoryRequirements(json name){
        auto result=VkMemoryRequirements();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.alignment=deserialize_uint64_t(name["members"]["alignment"]);}();}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties(VkSparseImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_khxYJnB=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["imageGranularity"]=[&]() {
    json return_gltLoJQ=json({});
    return serialize_VkExtent3D(name.imageGranularity);}();
result["members"]["flags"]=[&]() {
    json return_AaOKTJC=json({});
    return serialize_VkSparseImageFormatFlags(name.flags);}();
return result;}

    VkSparseImageFormatProperties deserialize_VkSparseImageFormatProperties(json name){
        auto result=VkSparseImageFormatProperties();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.imageGranularity=deserialize_VkExtent3D(name["members"]["imageGranularity"]);}();
[&]() {
result.flags=deserialize_VkSparseImageFormatFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements(VkSparseImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["formatProperties"]=[&]() {
    json return_vquMTaT=json({});
    return serialize_VkSparseImageFormatProperties(name.formatProperties);}();
result["members"]["imageMipTailFirstLod"]=[&]() {
    json return_exCJHGb=json({});
    return serialize_uint32_t(name.imageMipTailFirstLod);}();
result["members"]["imageMipTailSize"]=[&]() {
    json return_OLbQHhW=json({});
    return_OLbQHhW=[&]() {
    json return_xkrvwYC=json({});
    return serialize_uint64_t(name.imageMipTailSize);}();return return_OLbQHhW;}();
result["members"]["imageMipTailOffset"]=[&]() {
    json return_oLsSaqD=json({});
    return_oLsSaqD=[&]() {
    json return_qXGGXFl=json({});
    return serialize_uint64_t(name.imageMipTailOffset);}();return return_oLsSaqD;}();
result["members"]["imageMipTailStride"]=[&]() {
    json return_iDJyFTX=json({});
    return_iDJyFTX=[&]() {
    json return_JLuaxoE=json({});
    return serialize_uint64_t(name.imageMipTailStride);}();return return_iDJyFTX;}();
return result;}

    VkSparseImageMemoryRequirements deserialize_VkSparseImageMemoryRequirements(json name){
        auto result=VkSparseImageMemoryRequirements();
    
[&]() {
result.formatProperties=deserialize_VkSparseImageFormatProperties(name["members"]["formatProperties"]);}();
[&]() {
result.imageMipTailFirstLod=deserialize_uint32_t(name["members"]["imageMipTailFirstLod"]);}();
[&]() {
[&]() {
result.imageMipTailSize=deserialize_uint64_t(name["members"]["imageMipTailSize"]);}();}();
[&]() {
[&]() {
result.imageMipTailOffset=deserialize_uint64_t(name["members"]["imageMipTailOffset"]);}();}();
[&]() {
[&]() {
result.imageMipTailStride=deserialize_uint64_t(name["members"]["imageMipTailStride"]);}();}();
return result;}

    json serialize_VkMemoryType(VkMemoryType name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["propertyFlags"]=[&]() {
    json return_WYRHrhs=json({});
    return serialize_VkMemoryPropertyFlags(name.propertyFlags);}();
result["members"]["heapIndex"]=[&]() {
    json return_hYagRtp=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkMemoryType deserialize_VkMemoryType(json name){
        auto result=VkMemoryType();
    
[&]() {
result.propertyFlags=deserialize_VkMemoryPropertyFlags(name["members"]["propertyFlags"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkMemoryHeap(VkMemoryHeap name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_ncDBBAj=json({});
    return_ncDBBAj=[&]() {
    json return_AFzzmvW=json({});
    return serialize_uint64_t(name.size);}();return return_ncDBBAj;}();
result["members"]["flags"]=[&]() {
    json return_GSAZPKB=json({});
    return serialize_VkMemoryHeapFlags(name.flags);}();
return result;}

    VkMemoryHeap deserialize_VkMemoryHeap(json name){
        auto result=VkMemoryHeap();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.flags=deserialize_VkMemoryHeapFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkMappedMemoryRange(VkMappedMemoryRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_onihrIN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ypLZJNO=json({});
    
        if (name.pNext==NULL){
            return_ypLZJNO["null"]=true;
            return return_ypLZJNO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_QDFAJVF=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_pdKpLGt=json({});
    return_pdKpLGt=[&]() {
    json return_tVodPkh=json({});
    return serialize_uint64_t(name.offset);}();return return_pdKpLGt;}();
result["members"]["size"]=[&]() {
    json return_AWQSDDv=json({});
    return_AWQSDDv=[&]() {
    json return_ADtAXSB=json({});
    return serialize_uint64_t(name.size);}();return return_AWQSDDv;}();
return result;}

    VkMappedMemoryRange deserialize_VkMappedMemoryRange(json name){
        auto result=VkMappedMemoryRange();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OFIHmne;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OFIHmne=NULL;
        }
    temp_OFIHmne=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OFIHmne;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkFormatProperties(VkFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["linearTilingFeatures"]=[&]() {
    json return_hDCkQtK=json({});
    return serialize_VkFormatFeatureFlags(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_iuKAvES=json({});
    return serialize_VkFormatFeatureFlags(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_pZLlKgd=json({});
    return serialize_VkFormatFeatureFlags(name.bufferFeatures);}();
return result;}

    VkFormatProperties deserialize_VkFormatProperties(json name){
        auto result=VkFormatProperties();
    
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkImageFormatProperties(VkImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxExtent"]=[&]() {
    json return_RGEGPtX=json({});
    return serialize_VkExtent3D(name.maxExtent);}();
result["members"]["maxMipLevels"]=[&]() {
    json return_KYdLKsq=json({});
    return serialize_uint32_t(name.maxMipLevels);}();
result["members"]["maxArrayLayers"]=[&]() {
    json return_OKKXtjX=json({});
    return serialize_uint32_t(name.maxArrayLayers);}();
result["members"]["sampleCounts"]=[&]() {
    json return_Qkaajji=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["maxResourceSize"]=[&]() {
    json return_sigYXQr=json({});
    return_sigYXQr=[&]() {
    json return_iEriuEP=json({});
    return serialize_uint64_t(name.maxResourceSize);}();return return_sigYXQr;}();
return result;}

    VkImageFormatProperties deserialize_VkImageFormatProperties(json name){
        auto result=VkImageFormatProperties();
    
[&]() {
result.maxExtent=deserialize_VkExtent3D(name["members"]["maxExtent"]);}();
[&]() {
result.maxMipLevels=deserialize_uint32_t(name["members"]["maxMipLevels"]);}();
[&]() {
result.maxArrayLayers=deserialize_uint32_t(name["members"]["maxArrayLayers"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
[&]() {
result.maxResourceSize=deserialize_uint64_t(name["members"]["maxResourceSize"]);}();}();
return result;}

    json serialize_VkDescriptorBufferInfo(VkDescriptorBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_lEsOkdn=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_pSTnfEA=json({});
    return_pSTnfEA=[&]() {
    json return_CbpVbOk=json({});
    return serialize_uint64_t(name.offset);}();return return_pSTnfEA;}();
result["members"]["range"]=[&]() {
    json return_qJrmgzb=json({});
    return_qJrmgzb=[&]() {
    json return_pWxXebR=json({});
    return serialize_uint64_t(name.range);}();return return_qJrmgzb;}();
return result;}

    VkDescriptorBufferInfo deserialize_VkDescriptorBufferInfo(json name){
        auto result=VkDescriptorBufferInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkDescriptorImageInfo(VkDescriptorImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sampler"]=[&]() {
    json return_hnkQUAI=json({});
    return serialize_VkSampler(name.sampler);}();
result["members"]["imageView"]=[&]() {
    json return_pKDSfKW=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_gHXfWHc=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkDescriptorImageInfo deserialize_VkDescriptorImageInfo(json name){
        auto result=VkDescriptorImageInfo();
    
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkWriteDescriptorSet(VkWriteDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vYAZCDn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gNkYpOM=json({});
    
        if (name.pNext==NULL){
            return_gNkYpOM["null"]=true;
            return return_gNkYpOM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dstSet"]=[&]() {
    json return_ocaSfSj=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_QsmeliP=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_kvnNgcf=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_DARbxVp=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_mOXfbwS=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["pImageInfo"]=[&]() {
    json return_dxklOfJ=json({});
    
        if (name.pImageInfo==NULL){
            return_dxklOfJ["null"]=true;
            return return_dxklOfJ;
        }
        
        return_dxklOfJ["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_GUiiSXR=json({});
    return serialize_VkDescriptorImageInfo(name.pImageInfo[i]);}();
            return_dxklOfJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_dxklOfJ;
        }();
result["members"]["pBufferInfo"]=[&]() {
    json return_vWTkVOV=json({});
    
        if (name.pBufferInfo==NULL){
            return_vWTkVOV["null"]=true;
            return return_vWTkVOV;
        }
        
        return_vWTkVOV["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_vioMJhR=json({});
    return serialize_VkDescriptorBufferInfo(name.pBufferInfo[i]);}();
            return_vWTkVOV["members"][std::to_string(i)].push_back(temp);
        }
        return return_vWTkVOV;
        }();
result["members"]["pTexelBufferView"]=[&]() {
    json return_QPWXwdf=json({});
    
        if (name.pTexelBufferView==NULL){
            return_QPWXwdf["null"]=true;
            return return_QPWXwdf;
        }
        
        return_QPWXwdf["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_rJZwOJL=json({});
    return serialize_VkBufferView(name.pTexelBufferView[i]);}();
            return_QPWXwdf["members"][std::to_string(i)].push_back(temp);
        }
        return return_QPWXwdf;
        }();
return result;}

    VkWriteDescriptorSet deserialize_VkWriteDescriptorSet(json name){
        auto result=VkWriteDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_evplwPd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_evplwPd=NULL;
        }
    temp_evplwPd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_evplwPd;}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
VkDescriptorImageInfo* temp_cOZLUfv;[&]() {

        if (name["members"]["pImageInfo"].contains("null")){
        temp_cOZLUfv=NULL;
        }
    temp_cOZLUfv=(VkDescriptorImageInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorImageInfo));
        for (int PBNbCCA=0; PBNbCCA < result.descriptorCount; PBNbCCA++){
            [&]() {
temp_cOZLUfv[PBNbCCA]=deserialize_VkDescriptorImageInfo(name["members"]["pImageInfo"]["members"][PBNbCCA]);}();;
        }
        }();result.pImageInfo=temp_cOZLUfv;}();
[&]() {
VkDescriptorBufferInfo* temp_eHkHDaf;[&]() {

        if (name["members"]["pBufferInfo"].contains("null")){
        temp_eHkHDaf=NULL;
        }
    temp_eHkHDaf=(VkDescriptorBufferInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorBufferInfo));
        for (int otPqnwY=0; otPqnwY < result.descriptorCount; otPqnwY++){
            [&]() {
temp_eHkHDaf[otPqnwY]=deserialize_VkDescriptorBufferInfo(name["members"]["pBufferInfo"]["members"][otPqnwY]);}();;
        }
        }();result.pBufferInfo=temp_eHkHDaf;}();
[&]() {
VkBufferView* temp_wrYupRz;[&]() {

        if (name["members"]["pTexelBufferView"].contains("null")){
        temp_wrYupRz=NULL;
        }
    temp_wrYupRz=(VkBufferView*)malloc(result.descriptorCount*sizeof(VkBufferView));
        for (int iwEGrKt=0; iwEGrKt < result.descriptorCount; iwEGrKt++){
            [&]() {
temp_wrYupRz[iwEGrKt]=deserialize_VkBufferView(name["members"]["pTexelBufferView"]["members"][iwEGrKt]);}();;
        }
        }();result.pTexelBufferView=temp_wrYupRz;}();
return result;}

    json serialize_VkCopyDescriptorSet(VkCopyDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eULMRMC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qxKwabO=json({});
    
        if (name.pNext==NULL){
            return_qxKwabO["null"]=true;
            return return_qxKwabO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSet"]=[&]() {
    json return_GlrQSQd=json({});
    return serialize_VkDescriptorSet(name.srcSet);}();
result["members"]["srcBinding"]=[&]() {
    json return_eQOOwta=json({});
    return serialize_uint32_t(name.srcBinding);}();
result["members"]["srcArrayElement"]=[&]() {
    json return_XUnRSUL=json({});
    return serialize_uint32_t(name.srcArrayElement);}();
result["members"]["dstSet"]=[&]() {
    json return_rHuzKLU=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_tFshwVg=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_OoGFmWW=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_ELWfRTp=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkCopyDescriptorSet deserialize_VkCopyDescriptorSet(json name){
        auto result=VkCopyDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DDwQtRo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DDwQtRo=NULL;
        }
    temp_DDwQtRo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DDwQtRo;}();
[&]() {
result.srcSet=deserialize_VkDescriptorSet(name["members"]["srcSet"]);}();
[&]() {
result.srcBinding=deserialize_uint32_t(name["members"]["srcBinding"]);}();
[&]() {
result.srcArrayElement=deserialize_uint32_t(name["members"]["srcArrayElement"]);}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkBufferUsageFlags2CreateInfoKHR(VkBufferUsageFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NJosdLL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lQwIuBD=json({});
    
        if (name.pNext==NULL){
            return_lQwIuBD["null"]=true;
            return return_lQwIuBD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_KQaWpiP=json({});
    return serialize_VkBufferUsageFlags2KHR(name.usage);}();
return result;}

    VkBufferUsageFlags2CreateInfoKHR deserialize_VkBufferUsageFlags2CreateInfoKHR(json name){
        auto result=VkBufferUsageFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ygazcfp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ygazcfp=NULL;
        }
    temp_ygazcfp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ygazcfp;}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags2KHR(name["members"]["usage"]);}();
return result;}

    json serialize_VkBufferCreateInfo(VkBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_joJlhwR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ROQwvDe=json({});
    
        if (name.pNext==NULL){
            return_ROQwvDe["null"]=true;
            return return_ROQwvDe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_VBZFJnc=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["size"]=[&]() {
    json return_VFLUqIl=json({});
    return_VFLUqIl=[&]() {
    json return_elrWEgN=json({});
    return serialize_uint64_t(name.size);}();return return_VFLUqIl;}();
result["members"]["usage"]=[&]() {
    json return_SYUlZWC=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_wBFsSpk=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_biBjuho=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_zljCDsA=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_zljCDsA["null"]=true;
            return return_zljCDsA;
        }
        
        return_zljCDsA["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_RTTFgvA=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_zljCDsA["members"][std::to_string(i)].push_back(temp);
        }
        return return_zljCDsA;
        }();
return result;}

    VkBufferCreateInfo deserialize_VkBufferCreateInfo(json name){
        auto result=VkBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kaFDRTq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kaFDRTq=NULL;
        }
    temp_kaFDRTq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kaFDRTq;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_GRUJJOx;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_GRUJJOx=NULL;
        }
    temp_GRUJJOx=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int aDMOteA=0; aDMOteA < result.queueFamilyIndexCount; aDMOteA++){
            [&]() {
temp_GRUJJOx[aDMOteA]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][aDMOteA]);}();;
        }
        }();result.pQueueFamilyIndices=temp_GRUJJOx;}();
return result;}

    json serialize_VkBufferViewCreateInfo(VkBufferViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LxqTyfA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QWcYHLs=json({});
    
        if (name.pNext==NULL){
            return_QWcYHLs["null"]=true;
            return return_QWcYHLs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AKxhpMi=json({});
    return serialize_VkBufferViewCreateFlags(name.flags);}();
result["members"]["buffer"]=[&]() {
    json return_zfqLOBR=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["format"]=[&]() {
    json return_OMnMQWo=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_IavGIGY=json({});
    return_IavGIGY=[&]() {
    json return_ayztGLZ=json({});
    return serialize_uint64_t(name.offset);}();return return_IavGIGY;}();
result["members"]["range"]=[&]() {
    json return_xCBgCBY=json({});
    return_xCBgCBY=[&]() {
    json return_BnrWRcb=json({});
    return serialize_uint64_t(name.range);}();return return_xCBgCBY;}();
return result;}

    VkBufferViewCreateInfo deserialize_VkBufferViewCreateInfo(json name){
        auto result=VkBufferViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FtPyIDk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FtPyIDk=NULL;
        }
    temp_FtPyIDk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FtPyIDk;}();
[&]() {
result.flags=deserialize_VkBufferViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkImageSubresource(VkImageSubresource name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_jZWMbGy=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_hntBMGA=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["arrayLayer"]=[&]() {
    json return_BEgGbhg=json({});
    return serialize_uint32_t(name.arrayLayer);}();
return result;}

    VkImageSubresource deserialize_VkImageSubresource(json name){
        auto result=VkImageSubresource();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.arrayLayer=deserialize_uint32_t(name["members"]["arrayLayer"]);}();
return result;}

    json serialize_VkImageSubresourceLayers(VkImageSubresourceLayers name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_UcVkKtg=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_tjbbPZk=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_nwoHAuq=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_TsedNtr=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceLayers deserialize_VkImageSubresourceLayers(json name){
        auto result=VkImageSubresourceLayers();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkImageSubresourceRange(VkImageSubresourceRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_XkRkLFf=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["baseMipLevel"]=[&]() {
    json return_bORUwle=json({});
    return serialize_uint32_t(name.baseMipLevel);}();
result["members"]["levelCount"]=[&]() {
    json return_jWTOoXk=json({});
    return serialize_uint32_t(name.levelCount);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_zWEPKSy=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_ZwOyJWh=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceRange deserialize_VkImageSubresourceRange(json name){
        auto result=VkImageSubresourceRange();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.baseMipLevel=deserialize_uint32_t(name["members"]["baseMipLevel"]);}();
[&]() {
result.levelCount=deserialize_uint32_t(name["members"]["levelCount"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkMemoryBarrier(VkMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TTXVMTV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KBtLtOr=json({});
    
        if (name.pNext==NULL){
            return_KBtLtOr["null"]=true;
            return return_KBtLtOr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_WowDJGv=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zkGzlwa=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier deserialize_VkMemoryBarrier(json name){
        auto result=VkMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vEetzeh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vEetzeh=NULL;
        }
    temp_vEetzeh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vEetzeh;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier(VkBufferMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lvlGVWq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ArUhnao=json({});
    
        if (name.pNext==NULL){
            return_ArUhnao["null"]=true;
            return return_ArUhnao;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_sBdspWQ=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_uMgStYu=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_IHBNzVz=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_TnOnhrm=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_kvZKQwP=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_LjtkQWm=json({});
    return_LjtkQWm=[&]() {
    json return_rmxsVzY=json({});
    return serialize_uint64_t(name.offset);}();return return_LjtkQWm;}();
result["members"]["size"]=[&]() {
    json return_qNElVwN=json({});
    return_qNElVwN=[&]() {
    json return_LbVMyZp=json({});
    return serialize_uint64_t(name.size);}();return return_qNElVwN;}();
return result;}

    VkBufferMemoryBarrier deserialize_VkBufferMemoryBarrier(json name){
        auto result=VkBufferMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DcObJbZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DcObJbZ=NULL;
        }
    temp_DcObJbZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DcObJbZ;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageMemoryBarrier(VkImageMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zqIhPro=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YHEfMUi=json({});
    
        if (name.pNext==NULL){
            return_YHEfMUi["null"]=true;
            return return_YHEfMUi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_wLdqeWx=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_bGDDzoY=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_ykapwcx=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_iQgaMcf=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_RMBJUCI=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_QXiuGfG=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_oYiHItn=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_ZEuqSEx=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier deserialize_VkImageMemoryBarrier(json name){
        auto result=VkImageMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_biMEVnC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_biMEVnC=NULL;
        }
    temp_biMEVnC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_biMEVnC;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageCreateInfo(VkImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aAbxaiP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CNpICje=json({});
    
        if (name.pNext==NULL){
            return_CNpICje["null"]=true;
            return return_CNpICje;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_kWpKmOo=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["imageType"]=[&]() {
    json return_roAQQAY=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["format"]=[&]() {
    json return_EICrZke=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["extent"]=[&]() {
    json return_TwezHWX=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["mipLevels"]=[&]() {
    json return_eEkRdfj=json({});
    return serialize_uint32_t(name.mipLevels);}();
result["members"]["arrayLayers"]=[&]() {
    json return_xyMNUjP=json({});
    return serialize_uint32_t(name.arrayLayers);}();
result["members"]["samples"]=[&]() {
    json return_kFbIHOn=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["tiling"]=[&]() {
    json return_KrPhLnI=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_KjiZANN=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_duuaygB=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_qMBQxyB=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_JYxDgMD=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_JYxDgMD["null"]=true;
            return return_JYxDgMD;
        }
        
        return_JYxDgMD["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_GKtbLsX=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_JYxDgMD["members"][std::to_string(i)].push_back(temp);
        }
        return return_JYxDgMD;
        }();
result["members"]["initialLayout"]=[&]() {
    json return_toKJaIA=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
return result;}

    VkImageCreateInfo deserialize_VkImageCreateInfo(json name){
        auto result=VkImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VhnBFoq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VhnBFoq=NULL;
        }
    temp_VhnBFoq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VhnBFoq;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.mipLevels=deserialize_uint32_t(name["members"]["mipLevels"]);}();
[&]() {
result.arrayLayers=deserialize_uint32_t(name["members"]["arrayLayers"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_aBQUkPI;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_aBQUkPI=NULL;
        }
    temp_aBQUkPI=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int fmxgbgL=0; fmxgbgL < result.queueFamilyIndexCount; fmxgbgL++){
            [&]() {
temp_aBQUkPI[fmxgbgL]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][fmxgbgL]);}();;
        }
        }();result.pQueueFamilyIndices=temp_aBQUkPI;}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout(VkSubresourceLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_WJERSna=json({});
    return_WJERSna=[&]() {
    json return_eVHbRDf=json({});
    return serialize_uint64_t(name.offset);}();return return_WJERSna;}();
result["members"]["size"]=[&]() {
    json return_GBHRraM=json({});
    return_GBHRraM=[&]() {
    json return_PFOTJyb=json({});
    return serialize_uint64_t(name.size);}();return return_GBHRraM;}();
result["members"]["rowPitch"]=[&]() {
    json return_rnSThSK=json({});
    return_rnSThSK=[&]() {
    json return_QXgbLQj=json({});
    return serialize_uint64_t(name.rowPitch);}();return return_rnSThSK;}();
result["members"]["arrayPitch"]=[&]() {
    json return_pyKdknp=json({});
    return_pyKdknp=[&]() {
    json return_OyjkpGC=json({});
    return serialize_uint64_t(name.arrayPitch);}();return return_pyKdknp;}();
result["members"]["depthPitch"]=[&]() {
    json return_QrGBZEd=json({});
    return_QrGBZEd=[&]() {
    json return_fkQVOsB=json({});
    return serialize_uint64_t(name.depthPitch);}();return return_QrGBZEd;}();
return result;}

    VkSubresourceLayout deserialize_VkSubresourceLayout(json name){
        auto result=VkSubresourceLayout();
    
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.rowPitch=deserialize_uint64_t(name["members"]["rowPitch"]);}();}();
[&]() {
[&]() {
result.arrayPitch=deserialize_uint64_t(name["members"]["arrayPitch"]);}();}();
[&]() {
[&]() {
result.depthPitch=deserialize_uint64_t(name["members"]["depthPitch"]);}();}();
return result;}

    json serialize_VkImageViewCreateInfo(VkImageViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fqLTKSL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cXrvxQh=json({});
    
        if (name.pNext==NULL){
            return_cXrvxQh["null"]=true;
            return return_cXrvxQh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_KdsHxyc=json({});
    return serialize_VkImageViewCreateFlags(name.flags);}();
result["members"]["image"]=[&]() {
    json return_UJyQTJt=json({});
    return serialize_VkImage(name.image);}();
result["members"]["viewType"]=[&]() {
    json return_xMXKDSt=json({});
    return serialize_VkImageViewType(name.viewType);}();
result["members"]["format"]=[&]() {
    json return_LuKRQYZ=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["components"]=[&]() {
    json return_cuWVsnV=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["subresourceRange"]=[&]() {
    json return_VLHCQSA=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageViewCreateInfo deserialize_VkImageViewCreateInfo(json name){
        auto result=VkImageViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tryzdNk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tryzdNk=NULL;
        }
    temp_tryzdNk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tryzdNk;}();
[&]() {
result.flags=deserialize_VkImageViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.viewType=deserialize_VkImageViewType(name["members"]["viewType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferCopy(VkBufferCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcOffset"]=[&]() {
    json return_EkffpyH=json({});
    return_EkffpyH=[&]() {
    json return_fOnpcEx=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_EkffpyH;}();
result["members"]["dstOffset"]=[&]() {
    json return_jGLagCV=json({});
    return_jGLagCV=[&]() {
    json return_RmOmVhF=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_jGLagCV;}();
result["members"]["size"]=[&]() {
    json return_TWGntAM=json({});
    return_TWGntAM=[&]() {
    json return_leFhaKh=json({});
    return serialize_uint64_t(name.size);}();return return_TWGntAM;}();
return result;}

    VkBufferCopy deserialize_VkBufferCopy(json name){
        auto result=VkBufferCopy();
    
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkSparseMemoryBind(VkSparseMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["resourceOffset"]=[&]() {
    json return_pXxjLSU=json({});
    return_pXxjLSU=[&]() {
    json return_PbYxIWV=json({});
    return serialize_uint64_t(name.resourceOffset);}();return return_pXxjLSU;}();
result["members"]["size"]=[&]() {
    json return_JXgglHy=json({});
    return_JXgglHy=[&]() {
    json return_CFAyYdI=json({});
    return serialize_uint64_t(name.size);}();return return_JXgglHy;}();
result["members"]["memory"]=[&]() {
    json return_ftKAiLh=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_dhCNdcf=json({});
    return_dhCNdcf=[&]() {
    json return_JsmbYWj=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_dhCNdcf;}();
result["members"]["flags"]=[&]() {
    json return_MBAPRsZ=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseMemoryBind deserialize_VkSparseMemoryBind(json name){
        auto result=VkSparseMemoryBind();
    
[&]() {
[&]() {
result.resourceOffset=deserialize_uint64_t(name["members"]["resourceOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryBind(VkSparseImageMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subresource"]=[&]() {
    json return_VvpVfmR=json({});
    return serialize_VkImageSubresource(name.subresource);}();
result["members"]["offset"]=[&]() {
    json return_HTYEemE=json({});
    return serialize_VkOffset3D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_mmSjxNQ=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["memory"]=[&]() {
    json return_hrLSSrX=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_agOYUoZ=json({});
    return_agOYUoZ=[&]() {
    json return_nmpNivx=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_agOYUoZ;}();
result["members"]["flags"]=[&]() {
    json return_rDSbSEv=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseImageMemoryBind deserialize_VkSparseImageMemoryBind(json name){
        auto result=VkSparseImageMemoryBind();
    
[&]() {
result.subresource=deserialize_VkImageSubresource(name["members"]["subresource"]);}();
[&]() {
result.offset=deserialize_VkOffset3D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseBufferMemoryBindInfo(VkSparseBufferMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_bMgSxaq=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["bindCount"]=[&]() {
    json return_IEgQHvQ=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_uEaYISa=json({});
    
        if (name.pBinds==NULL){
            return_uEaYISa["null"]=true;
            return return_uEaYISa;
        }
        
        return_uEaYISa["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_tcwVTZf=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_uEaYISa["members"][std::to_string(i)].push_back(temp);
        }
        return return_uEaYISa;
        }();
return result;}

    VkSparseBufferMemoryBindInfo deserialize_VkSparseBufferMemoryBindInfo(json name){
        auto result=VkSparseBufferMemoryBindInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_qXliRVx;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_qXliRVx=NULL;
        }
    temp_qXliRVx=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int hBcqBDu=0; hBcqBDu < result.bindCount; hBcqBDu++){
            [&]() {
temp_qXliRVx[hBcqBDu]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][hBcqBDu]);}();;
        }
        }();result.pBinds=temp_qXliRVx;}();
return result;}

    json serialize_VkSparseImageOpaqueMemoryBindInfo(VkSparseImageOpaqueMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_hqRPvyF=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_oPyjGGQ=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_UBVpbui=json({});
    
        if (name.pBinds==NULL){
            return_UBVpbui["null"]=true;
            return return_UBVpbui;
        }
        
        return_UBVpbui["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_VdfLXVw=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_UBVpbui["members"][std::to_string(i)].push_back(temp);
        }
        return return_UBVpbui;
        }();
return result;}

    VkSparseImageOpaqueMemoryBindInfo deserialize_VkSparseImageOpaqueMemoryBindInfo(json name){
        auto result=VkSparseImageOpaqueMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_XDdpKOG;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_XDdpKOG=NULL;
        }
    temp_XDdpKOG=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int zjKKXWt=0; zjKKXWt < result.bindCount; zjKKXWt++){
            [&]() {
temp_XDdpKOG[zjKKXWt]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][zjKKXWt]);}();;
        }
        }();result.pBinds=temp_XDdpKOG;}();
return result;}

    json serialize_VkSparseImageMemoryBindInfo(VkSparseImageMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_laXfBSz=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_tnEhsGc=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_VhRRzAM=json({});
    
        if (name.pBinds==NULL){
            return_VhRRzAM["null"]=true;
            return return_VhRRzAM;
        }
        
        return_VhRRzAM["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_KeeflwH=json({});
    return serialize_VkSparseImageMemoryBind(name.pBinds[i]);}();
            return_VhRRzAM["members"][std::to_string(i)].push_back(temp);
        }
        return return_VhRRzAM;
        }();
return result;}

    VkSparseImageMemoryBindInfo deserialize_VkSparseImageMemoryBindInfo(json name){
        auto result=VkSparseImageMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseImageMemoryBind* temp_JqtmraD;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_JqtmraD=NULL;
        }
    temp_JqtmraD=(VkSparseImageMemoryBind*)malloc(result.bindCount*sizeof(VkSparseImageMemoryBind));
        for (int msCUaKe=0; msCUaKe < result.bindCount; msCUaKe++){
            [&]() {
temp_JqtmraD[msCUaKe]=deserialize_VkSparseImageMemoryBind(name["members"]["pBinds"]["members"][msCUaKe]);}();;
        }
        }();result.pBinds=temp_JqtmraD;}();
return result;}

    json serialize_VkBindSparseInfo(VkBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aZhTXyO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_esvpHfK=json({});
    
        if (name.pNext==NULL){
            return_esvpHfK["null"]=true;
            return return_esvpHfK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_JXizwgI=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_atdlTIA=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_atdlTIA["null"]=true;
            return return_atdlTIA;
        }
        
        return_atdlTIA["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_NHSaGRe=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_atdlTIA["members"][std::to_string(i)].push_back(temp);
        }
        return return_atdlTIA;
        }();
result["members"]["bufferBindCount"]=[&]() {
    json return_zaoTqRS=json({});
    return serialize_uint32_t(name.bufferBindCount);}();
result["members"]["pBufferBinds"]=[&]() {
    json return_CrvCAnZ=json({});
    
        if (name.pBufferBinds==NULL){
            return_CrvCAnZ["null"]=true;
            return return_CrvCAnZ;
        }
        
        return_CrvCAnZ["members"]={};
        for(int i=0; i < name.bufferBindCount; i++){
            json temp;
            temp=[&]() {
    json return_mvZdcUY=json({});
    return serialize_VkSparseBufferMemoryBindInfo(name.pBufferBinds[i]);}();
            return_CrvCAnZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_CrvCAnZ;
        }();
result["members"]["imageOpaqueBindCount"]=[&]() {
    json return_qorEjZJ=json({});
    return serialize_uint32_t(name.imageOpaqueBindCount);}();
result["members"]["pImageOpaqueBinds"]=[&]() {
    json return_NllAdoO=json({});
    
        if (name.pImageOpaqueBinds==NULL){
            return_NllAdoO["null"]=true;
            return return_NllAdoO;
        }
        
        return_NllAdoO["members"]={};
        for(int i=0; i < name.imageOpaqueBindCount; i++){
            json temp;
            temp=[&]() {
    json return_hdnasKW=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(name.pImageOpaqueBinds[i]);}();
            return_NllAdoO["members"][std::to_string(i)].push_back(temp);
        }
        return return_NllAdoO;
        }();
result["members"]["imageBindCount"]=[&]() {
    json return_TFmVpqz=json({});
    return serialize_uint32_t(name.imageBindCount);}();
result["members"]["pImageBinds"]=[&]() {
    json return_ZlhmyJP=json({});
    
        if (name.pImageBinds==NULL){
            return_ZlhmyJP["null"]=true;
            return return_ZlhmyJP;
        }
        
        return_ZlhmyJP["members"]={};
        for(int i=0; i < name.imageBindCount; i++){
            json temp;
            temp=[&]() {
    json return_GdbrWti=json({});
    return serialize_VkSparseImageMemoryBindInfo(name.pImageBinds[i]);}();
            return_ZlhmyJP["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZlhmyJP;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_knFnxeH=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_zeXidOx=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_zeXidOx["null"]=true;
            return return_zeXidOx;
        }
        
        return_zeXidOx["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_rlDrmWL=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_zeXidOx["members"][std::to_string(i)].push_back(temp);
        }
        return return_zeXidOx;
        }();
return result;}

    VkBindSparseInfo deserialize_VkBindSparseInfo(json name){
        auto result=VkBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ffxYowo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ffxYowo=NULL;
        }
    temp_ffxYowo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ffxYowo;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_xRDOowL;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_xRDOowL=NULL;
        }
    temp_xRDOowL=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int mlVgHlz=0; mlVgHlz < result.waitSemaphoreCount; mlVgHlz++){
            [&]() {
temp_xRDOowL[mlVgHlz]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][mlVgHlz]);}();;
        }
        }();result.pWaitSemaphores=temp_xRDOowL;}();
[&]() {
result.bufferBindCount=deserialize_uint32_t(name["members"]["bufferBindCount"]);}();
[&]() {
VkSparseBufferMemoryBindInfo* temp_vDKaLbX;[&]() {

        if (name["members"]["pBufferBinds"].contains("null")){
        temp_vDKaLbX=NULL;
        }
    temp_vDKaLbX=(VkSparseBufferMemoryBindInfo*)malloc(result.bufferBindCount*sizeof(VkSparseBufferMemoryBindInfo));
        for (int NPIMkgN=0; NPIMkgN < result.bufferBindCount; NPIMkgN++){
            [&]() {
temp_vDKaLbX[NPIMkgN]=deserialize_VkSparseBufferMemoryBindInfo(name["members"]["pBufferBinds"]["members"][NPIMkgN]);}();;
        }
        }();result.pBufferBinds=temp_vDKaLbX;}();
[&]() {
result.imageOpaqueBindCount=deserialize_uint32_t(name["members"]["imageOpaqueBindCount"]);}();
[&]() {
VkSparseImageOpaqueMemoryBindInfo* temp_pLprwGW;[&]() {

        if (name["members"]["pImageOpaqueBinds"].contains("null")){
        temp_pLprwGW=NULL;
        }
    temp_pLprwGW=(VkSparseImageOpaqueMemoryBindInfo*)malloc(result.imageOpaqueBindCount*sizeof(VkSparseImageOpaqueMemoryBindInfo));
        for (int Jwcgsou=0; Jwcgsou < result.imageOpaqueBindCount; Jwcgsou++){
            [&]() {
temp_pLprwGW[Jwcgsou]=deserialize_VkSparseImageOpaqueMemoryBindInfo(name["members"]["pImageOpaqueBinds"]["members"][Jwcgsou]);}();;
        }
        }();result.pImageOpaqueBinds=temp_pLprwGW;}();
[&]() {
result.imageBindCount=deserialize_uint32_t(name["members"]["imageBindCount"]);}();
[&]() {
VkSparseImageMemoryBindInfo* temp_oJXARYN;[&]() {

        if (name["members"]["pImageBinds"].contains("null")){
        temp_oJXARYN=NULL;
        }
    temp_oJXARYN=(VkSparseImageMemoryBindInfo*)malloc(result.imageBindCount*sizeof(VkSparseImageMemoryBindInfo));
        for (int bYBbwVf=0; bYBbwVf < result.imageBindCount; bYBbwVf++){
            [&]() {
temp_oJXARYN[bYBbwVf]=deserialize_VkSparseImageMemoryBindInfo(name["members"]["pImageBinds"]["members"][bYBbwVf]);}();;
        }
        }();result.pImageBinds=temp_oJXARYN;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_aLxSMZI;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_aLxSMZI=NULL;
        }
    temp_aLxSMZI=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int PqvlWFk=0; PqvlWFk < result.signalSemaphoreCount; PqvlWFk++){
            [&]() {
temp_aLxSMZI[PqvlWFk]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][PqvlWFk]);}();;
        }
        }();result.pSignalSemaphores=temp_aLxSMZI;}();
return result;}

    json serialize_VkImageCopy(VkImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_SrdAktY=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_krpfTIo=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_WLxZsDs=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_CikUKcu=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_StobGRN=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy deserialize_VkImageCopy(json name){
        auto result=VkImageCopy();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit(VkImageBlit name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_RKDtAkM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_iTOzRBy=json({});
    
        return_iTOzRBy["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_ePqHSTs=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_iTOzRBy["members"][std::to_string(i)].push_back(temp);
        }
        return return_iTOzRBy;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_vHObbYq=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_kfIAWcW=json({});
    
        return_kfIAWcW["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_RHZBRfs=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_kfIAWcW["members"][std::to_string(i)].push_back(temp);
        }
        return return_kfIAWcW;
        }();
return result;}

    VkImageBlit deserialize_VkImageBlit(json name){
        auto result=VkImageBlit();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int auEkotq=0; auEkotq < 2; auEkotq++){
            [&]() {
result.srcOffsets[auEkotq]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][auEkotq]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int iHttqIs=0; iHttqIs < 2; iHttqIs++){
            [&]() {
result.dstOffsets[iHttqIs]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][iHttqIs]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy(VkBufferImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferOffset"]=[&]() {
    json return_pQKpujT=json({});
    return_pQKpujT=[&]() {
    json return_gCioqAG=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_pQKpujT;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_WJFtonf=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_cGmEHdW=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_JDBuSjG=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_FSLenoI=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_cYHCEYO=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy deserialize_VkBufferImageCopy(json name){
        auto result=VkBufferImageCopy();
    
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryIndirectCommandNV(VkCopyMemoryIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_bMHJgBs=json({});
    return_bMHJgBs=[&]() {
    json return_oaZpPfp=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_bMHJgBs;}();
result["members"]["dstAddress"]=[&]() {
    json return_QNWudFS=json({});
    return_QNWudFS=[&]() {
    json return_zBInNyj=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_QNWudFS;}();
result["members"]["size"]=[&]() {
    json return_EmEEKqp=json({});
    return_EmEEKqp=[&]() {
    json return_JjpNToK=json({});
    return serialize_uint64_t(name.size);}();return return_EmEEKqp;}();
return result;}

    VkCopyMemoryIndirectCommandNV deserialize_VkCopyMemoryIndirectCommandNV(json name){
        auto result=VkCopyMemoryIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkCopyMemoryToImageIndirectCommandNV(VkCopyMemoryToImageIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_EcjPpBR=json({});
    return_EcjPpBR=[&]() {
    json return_BBPgbkn=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_EcjPpBR;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_OLNQjgP=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_sFoJkwG=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_lLfBrAI=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_pUarfEz=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_XBOmiDJ=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkCopyMemoryToImageIndirectCommandNV deserialize_VkCopyMemoryToImageIndirectCommandNV(json name){
        auto result=VkCopyMemoryToImageIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve(VkImageResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_gMzLCUI=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_DKMvJLH=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_OXqoIAo=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_mkSJIQn=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_jFqjigx=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve deserialize_VkImageResolve(json name){
        auto result=VkImageResolve();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkShaderModuleCreateInfo(VkShaderModuleCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kGFjhtm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KaBPTTN=json({});
    
        if (name.pNext==NULL){
            return_KaBPTTN["null"]=true;
            return return_KaBPTTN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MtWyUbq=json({});
    return serialize_VkShaderModuleCreateFlags(name.flags);}();
result["members"]["codeSize"]=[&]() {
    json return_CMtYRgx=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_MQWwXjv=json({});
    
        if (name.pCode==NULL){
            return_MQWwXjv["null"]=true;
            return return_MQWwXjv;
        }
        
        return_MQWwXjv["members"]={};
        for(int i=0; i < name.codeSize / 4; i++){
            json temp;
            temp=[&]() {
    json return_bMObBxB=json({});
    return serialize_uint32_t(name.pCode[i]);}();
            return_MQWwXjv["members"][std::to_string(i)].push_back(temp);
        }
        return return_MQWwXjv;
        }();
return result;}

    VkShaderModuleCreateInfo deserialize_VkShaderModuleCreateInfo(json name){
        auto result=VkShaderModuleCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UNjEZeT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UNjEZeT=NULL;
        }
    temp_UNjEZeT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UNjEZeT;}();
[&]() {
result.flags=deserialize_VkShaderModuleCreateFlags(name["members"]["flags"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
uint32_t* temp_XllgWUG;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_XllgWUG=NULL;
        }
    temp_XllgWUG=(uint32_t*)malloc(result.codeSize / 4*sizeof(uint32_t));
        for (int heNExfj=0; heNExfj < result.codeSize / 4; heNExfj++){
            [&]() {
temp_XllgWUG[heNExfj]=deserialize_uint32_t(name["members"]["pCode"]["members"][heNExfj]);}();;
        }
        }();result.pCode=temp_XllgWUG;}();
return result;}

    json serialize_VkDescriptorSetLayoutBinding(VkDescriptorSetLayoutBinding name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_MyBmpid=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["descriptorType"]=[&]() {
    json return_WxCelrl=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["descriptorCount"]=[&]() {
    json return_pcgPcaJ=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["stageFlags"]=[&]() {
    json return_UIFPZsC=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["pImmutableSamplers"]=[&]() {
    json return_WAokDSx=json({});
    
        if (name.pImmutableSamplers==NULL){
            return_WAokDSx["null"]=true;
            return return_WAokDSx;
        }
        
        return_WAokDSx["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_AthpkaF=json({});
    return serialize_VkSampler(name.pImmutableSamplers[i]);}();
            return_WAokDSx["members"][std::to_string(i)].push_back(temp);
        }
        return return_WAokDSx;
        }();
return result;}

    VkDescriptorSetLayoutBinding deserialize_VkDescriptorSetLayoutBinding(json name){
        auto result=VkDescriptorSetLayoutBinding();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
VkSampler* temp_dUTeXkT;[&]() {

        if (name["members"]["pImmutableSamplers"].contains("null")){
        temp_dUTeXkT=NULL;
        }
    temp_dUTeXkT=(VkSampler*)malloc(result.descriptorCount*sizeof(VkSampler));
        for (int FmioQuH=0; FmioQuH < result.descriptorCount; FmioQuH++){
            [&]() {
temp_dUTeXkT[FmioQuH]=deserialize_VkSampler(name["members"]["pImmutableSamplers"]["members"][FmioQuH]);}();;
        }
        }();result.pImmutableSamplers=temp_dUTeXkT;}();
return result;}

    json serialize_VkDescriptorSetLayoutCreateInfo(VkDescriptorSetLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MLucUwK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IxVholc=json({});
    
        if (name.pNext==NULL){
            return_IxVholc["null"]=true;
            return return_IxVholc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tUoLmBF=json({});
    return serialize_VkDescriptorSetLayoutCreateFlags(name.flags);}();
result["members"]["bindingCount"]=[&]() {
    json return_xebMmCu=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindings"]=[&]() {
    json return_QIXvxpn=json({});
    
        if (name.pBindings==NULL){
            return_QIXvxpn["null"]=true;
            return return_QIXvxpn;
        }
        
        return_QIXvxpn["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_RcytaQJ=json({});
    return serialize_VkDescriptorSetLayoutBinding(name.pBindings[i]);}();
            return_QIXvxpn["members"][std::to_string(i)].push_back(temp);
        }
        return return_QIXvxpn;
        }();
return result;}

    VkDescriptorSetLayoutCreateInfo deserialize_VkDescriptorSetLayoutCreateInfo(json name){
        auto result=VkDescriptorSetLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KHCnsRo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KHCnsRo=NULL;
        }
    temp_KHCnsRo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KHCnsRo;}();
[&]() {
result.flags=deserialize_VkDescriptorSetLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorSetLayoutBinding* temp_QChwtrH;[&]() {

        if (name["members"]["pBindings"].contains("null")){
        temp_QChwtrH=NULL;
        }
    temp_QChwtrH=(VkDescriptorSetLayoutBinding*)malloc(result.bindingCount*sizeof(VkDescriptorSetLayoutBinding));
        for (int qpVrjeh=0; qpVrjeh < result.bindingCount; qpVrjeh++){
            [&]() {
temp_QChwtrH[qpVrjeh]=deserialize_VkDescriptorSetLayoutBinding(name["members"]["pBindings"]["members"][qpVrjeh]);}();;
        }
        }();result.pBindings=temp_QChwtrH;}();
return result;}

    json serialize_VkDescriptorPoolSize(VkDescriptorPoolSize name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_LOAvRMc=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["descriptorCount"]=[&]() {
    json return_TKjiwsz=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkDescriptorPoolSize deserialize_VkDescriptorPoolSize(json name){
        auto result=VkDescriptorPoolSize();
    
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkDescriptorPoolCreateInfo(VkDescriptorPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jLhVegi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UtqhiGc=json({});
    
        if (name.pNext==NULL){
            return_UtqhiGc["null"]=true;
            return return_UtqhiGc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xilutQJ=json({});
    return serialize_VkDescriptorPoolCreateFlags(name.flags);}();
result["members"]["maxSets"]=[&]() {
    json return_WdXFgrK=json({});
    return serialize_uint32_t(name.maxSets);}();
result["members"]["poolSizeCount"]=[&]() {
    json return_lqHRfwd=json({});
    return serialize_uint32_t(name.poolSizeCount);}();
result["members"]["pPoolSizes"]=[&]() {
    json return_fdcMqjc=json({});
    
        if (name.pPoolSizes==NULL){
            return_fdcMqjc["null"]=true;
            return return_fdcMqjc;
        }
        
        return_fdcMqjc["members"]={};
        for(int i=0; i < name.poolSizeCount; i++){
            json temp;
            temp=[&]() {
    json return_iRNEMgh=json({});
    return serialize_VkDescriptorPoolSize(name.pPoolSizes[i]);}();
            return_fdcMqjc["members"][std::to_string(i)].push_back(temp);
        }
        return return_fdcMqjc;
        }();
return result;}

    VkDescriptorPoolCreateInfo deserialize_VkDescriptorPoolCreateInfo(json name){
        auto result=VkDescriptorPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JPSoKEy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JPSoKEy=NULL;
        }
    temp_JPSoKEy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JPSoKEy;}();
[&]() {
result.flags=deserialize_VkDescriptorPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.maxSets=deserialize_uint32_t(name["members"]["maxSets"]);}();
[&]() {
result.poolSizeCount=deserialize_uint32_t(name["members"]["poolSizeCount"]);}();
[&]() {
VkDescriptorPoolSize* temp_XoGrKia;[&]() {

        if (name["members"]["pPoolSizes"].contains("null")){
        temp_XoGrKia=NULL;
        }
    temp_XoGrKia=(VkDescriptorPoolSize*)malloc(result.poolSizeCount*sizeof(VkDescriptorPoolSize));
        for (int THnOPEd=0; THnOPEd < result.poolSizeCount; THnOPEd++){
            [&]() {
temp_XoGrKia[THnOPEd]=deserialize_VkDescriptorPoolSize(name["members"]["pPoolSizes"]["members"][THnOPEd]);}();;
        }
        }();result.pPoolSizes=temp_XoGrKia;}();
return result;}

    json serialize_VkDescriptorSetAllocateInfo(VkDescriptorSetAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZyQDauD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GebbtIB=json({});
    
        if (name.pNext==NULL){
            return_GebbtIB["null"]=true;
            return return_GebbtIB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPool"]=[&]() {
    json return_uXdDqLb=json({});
    return serialize_VkDescriptorPool(name.descriptorPool);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_GMTSUGk=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_mdcpKMm=json({});
    
        if (name.pSetLayouts==NULL){
            return_mdcpKMm["null"]=true;
            return return_mdcpKMm;
        }
        
        return_mdcpKMm["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_ipjDkrX=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_mdcpKMm["members"][std::to_string(i)].push_back(temp);
        }
        return return_mdcpKMm;
        }();
return result;}

    VkDescriptorSetAllocateInfo deserialize_VkDescriptorSetAllocateInfo(json name){
        auto result=VkDescriptorSetAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xJrMcPk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xJrMcPk=NULL;
        }
    temp_xJrMcPk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xJrMcPk;}();
[&]() {
result.descriptorPool=deserialize_VkDescriptorPool(name["members"]["descriptorPool"]);}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_iRhhEtP;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_iRhhEtP=NULL;
        }
    temp_iRhhEtP=(VkDescriptorSetLayout*)malloc(result.descriptorSetCount*sizeof(VkDescriptorSetLayout));
        for (int GqHbMbK=0; GqHbMbK < result.descriptorSetCount; GqHbMbK++){
            [&]() {
temp_iRhhEtP[GqHbMbK]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][GqHbMbK]);}();;
        }
        }();result.pSetLayouts=temp_iRhhEtP;}();
return result;}

    json serialize_VkSpecializationMapEntry(VkSpecializationMapEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["constantID"]=[&]() {
    json return_qMRGQtg=json({});
    return serialize_uint32_t(name.constantID);}();
result["members"]["offset"]=[&]() {
    json return_QnDKvXO=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_XQzMhGN=json({});
    return serialize_size_t(name.size);}();
return result;}

    VkSpecializationMapEntry deserialize_VkSpecializationMapEntry(json name){
        auto result=VkSpecializationMapEntry();
    
[&]() {
result.constantID=deserialize_uint32_t(name["members"]["constantID"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_size_t(name["members"]["size"]);}();
return result;}

    json serialize_VkSpecializationInfo(VkSpecializationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["mapEntryCount"]=[&]() {
    json return_GmNKaCU=json({});
    return serialize_uint32_t(name.mapEntryCount);}();
result["members"]["pMapEntries"]=[&]() {
    json return_UpZAdiM=json({});
    
        if (name.pMapEntries==NULL){
            return_UpZAdiM["null"]=true;
            return return_UpZAdiM;
        }
        
        return_UpZAdiM["members"]={};
        for(int i=0; i < name.mapEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_wzXyeiA=json({});
    return serialize_VkSpecializationMapEntry(name.pMapEntries[i]);}();
            return_UpZAdiM["members"][std::to_string(i)].push_back(temp);
        }
        return return_UpZAdiM;
        }();
result["members"]["dataSize"]=[&]() {
    json return_BLGZUJb=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_ZzuQNqL=json({});
    
        if (name.pData==NULL){
            return_ZzuQNqL["null"]=true;
            return return_ZzuQNqL;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkSpecializationInfo deserialize_VkSpecializationInfo(json name){
        auto result=VkSpecializationInfo();
    
[&]() {
result.mapEntryCount=deserialize_uint32_t(name["members"]["mapEntryCount"]);}();
[&]() {
VkSpecializationMapEntry* temp_eiimpsW;[&]() {

        if (name["members"]["pMapEntries"].contains("null")){
        temp_eiimpsW=NULL;
        }
    temp_eiimpsW=(VkSpecializationMapEntry*)malloc(result.mapEntryCount*sizeof(VkSpecializationMapEntry));
        for (int cSOueSO=0; cSOueSO < result.mapEntryCount; cSOueSO++){
            [&]() {
temp_eiimpsW[cSOueSO]=deserialize_VkSpecializationMapEntry(name["members"]["pMapEntries"]["members"][cSOueSO]);}();;
        }
        }();result.pMapEntries=temp_eiimpsW;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_sGxwDFl;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_sGxwDFl=NULL;
        }
    temp_sGxwDFl=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_sGxwDFl;}();
return result;}

    json serialize_VkPipelineShaderStageCreateInfo(VkPipelineShaderStageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sxiVqrw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GcgFCPN=json({});
    
        if (name.pNext==NULL){
            return_GcgFCPN["null"]=true;
            return return_GcgFCPN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OVDwwan=json({});
    return serialize_VkPipelineShaderStageCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_tGRZQgK=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["module"]=[&]() {
    json return_xWwATXl=json({});
    return serialize_VkShaderModule(name.module);}();
result["members"]["pName"]=[&]() {
    json return_sZjtxJv=json({});
    
        if (name.pName==NULL){
            return_sZjtxJv["null"]=true;
            return return_sZjtxJv;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pName"]=[&]() {
    json return_yMIifAQ=json({});
    
        if (name.pName==NULL){
            return_yMIifAQ["null"]=true;
            return return_yMIifAQ;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_SRMnwml=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_SRMnwml["null"]=true;
            return return_SRMnwml;
        }
        return_SRMnwml=[&]() {
    json return_LJGDYun=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_SRMnwml;}();
return result;}

    VkPipelineShaderStageCreateInfo deserialize_VkPipelineShaderStageCreateInfo(json name){
        auto result=VkPipelineShaderStageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZMthVHT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZMthVHT=NULL;
        }
    temp_ZMthVHT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZMthVHT;}();
[&]() {
result.flags=deserialize_VkPipelineShaderStageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.module=deserialize_VkShaderModule(name["members"]["module"]);}();
[&]() {
char* temp_kGBgUFa;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_kGBgUFa=NULL;
        }
    temp_kGBgUFa=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_kGBgUFa;}();
[&]() {
char* temp_LDlCDgX;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_LDlCDgX=NULL;
        }
    temp_LDlCDgX=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_LDlCDgX;}();
[&]() {
VkSpecializationInfo* temp_eabYRXT;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_eabYRXT=NULL;
        }
    [&]() {
*(temp_eabYRXT)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_eabYRXT;}();
return result;}

    json serialize_VkComputePipelineCreateInfo(VkComputePipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EXBAJFR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BwqFKxA=json({});
    
        if (name.pNext==NULL){
            return_BwqFKxA["null"]=true;
            return return_BwqFKxA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WhjQfYQ=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_yPNtbXj=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.stage);}();
result["members"]["layout"]=[&]() {
    json return_CDojcuD=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_DysQgAE=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_PJaIkTu=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkComputePipelineCreateInfo deserialize_VkComputePipelineCreateInfo(json name){
        auto result=VkComputePipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bVEwRXq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bVEwRXq=NULL;
        }
    temp_bVEwRXq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bVEwRXq;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["stage"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkComputePipelineIndirectBufferInfoNV(VkComputePipelineIndirectBufferInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AQQZBjM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AXcwOJw=json({});
    
        if (name.pNext==NULL){
            return_AXcwOJw["null"]=true;
            return return_AXcwOJw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_KJjnuSf=json({});
    return_KJjnuSf=[&]() {
    json return_NwmdvHz=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_KJjnuSf;}();
result["members"]["size"]=[&]() {
    json return_RJxSnAY=json({});
    return_RJxSnAY=[&]() {
    json return_FJyekUv=json({});
    return serialize_uint64_t(name.size);}();return return_RJxSnAY;}();
result["members"]["pipelineDeviceAddressCaptureReplay"]=[&]() {
    json return_eryzrmS=json({});
    return_eryzrmS=[&]() {
    json return_wopDJiZ=json({});
    return serialize_uint64_t(name.pipelineDeviceAddressCaptureReplay);}();return return_eryzrmS;}();
return result;}

    VkComputePipelineIndirectBufferInfoNV deserialize_VkComputePipelineIndirectBufferInfoNV(json name){
        auto result=VkComputePipelineIndirectBufferInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OXQbtus;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OXQbtus=NULL;
        }
    temp_OXQbtus=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OXQbtus;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.pipelineDeviceAddressCaptureReplay=deserialize_uint64_t(name["members"]["pipelineDeviceAddressCaptureReplay"]);}();}();
return result;}

    json serialize_VkPipelineCreateFlags2CreateInfoKHR(VkPipelineCreateFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zZfIbnO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sCFlplJ=json({});
    
        if (name.pNext==NULL){
            return_sCFlplJ["null"]=true;
            return return_sCFlplJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mAMTGsF=json({});
    return serialize_VkPipelineCreateFlags2KHR(name.flags);}();
return result;}

    VkPipelineCreateFlags2CreateInfoKHR deserialize_VkPipelineCreateFlags2CreateInfoKHR(json name){
        auto result=VkPipelineCreateFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QmjGJuI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QmjGJuI=NULL;
        }
    temp_QmjGJuI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QmjGJuI;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags2KHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVertexInputBindingDescription(VkVertexInputBindingDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_xvgAcvx=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_NlCZPRV=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_LcrlUsC=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
return result;}

    VkVertexInputBindingDescription deserialize_VkVertexInputBindingDescription(json name){
        auto result=VkVertexInputBindingDescription();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription(VkVertexInputAttributeDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["location"]=[&]() {
    json return_HetAAHm=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_zOsXYGX=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_GaLtWoj=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_BDyDaka=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription deserialize_VkVertexInputAttributeDescription(json name){
        auto result=VkVertexInputAttributeDescription();
    
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPipelineVertexInputStateCreateInfo(VkPipelineVertexInputStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lyiRvyr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uSIxODk=json({});
    
        if (name.pNext==NULL){
            return_uSIxODk["null"]=true;
            return return_uSIxODk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_SQSZEua=json({});
    return serialize_VkPipelineVertexInputStateCreateFlags(name.flags);}();
result["members"]["vertexBindingDescriptionCount"]=[&]() {
    json return_enqIHrZ=json({});
    return serialize_uint32_t(name.vertexBindingDescriptionCount);}();
result["members"]["pVertexBindingDescriptions"]=[&]() {
    json return_fCSDUez=json({});
    
        if (name.pVertexBindingDescriptions==NULL){
            return_fCSDUez["null"]=true;
            return return_fCSDUez;
        }
        
        return_fCSDUez["members"]={};
        for(int i=0; i < name.vertexBindingDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_Ounzttu=json({});
    return serialize_VkVertexInputBindingDescription(name.pVertexBindingDescriptions[i]);}();
            return_fCSDUez["members"][std::to_string(i)].push_back(temp);
        }
        return return_fCSDUez;
        }();
result["members"]["vertexAttributeDescriptionCount"]=[&]() {
    json return_HXAVFTd=json({});
    return serialize_uint32_t(name.vertexAttributeDescriptionCount);}();
result["members"]["pVertexAttributeDescriptions"]=[&]() {
    json return_dgjCNaR=json({});
    
        if (name.pVertexAttributeDescriptions==NULL){
            return_dgjCNaR["null"]=true;
            return return_dgjCNaR;
        }
        
        return_dgjCNaR["members"]={};
        for(int i=0; i < name.vertexAttributeDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_tbkvFyk=json({});
    return serialize_VkVertexInputAttributeDescription(name.pVertexAttributeDescriptions[i]);}();
            return_dgjCNaR["members"][std::to_string(i)].push_back(temp);
        }
        return return_dgjCNaR;
        }();
return result;}

    VkPipelineVertexInputStateCreateInfo deserialize_VkPipelineVertexInputStateCreateInfo(json name){
        auto result=VkPipelineVertexInputStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rQTAxfO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rQTAxfO=NULL;
        }
    temp_rQTAxfO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rQTAxfO;}();
[&]() {
result.flags=deserialize_VkPipelineVertexInputStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.vertexBindingDescriptionCount=deserialize_uint32_t(name["members"]["vertexBindingDescriptionCount"]);}();
[&]() {
VkVertexInputBindingDescription* temp_wjbwHbN;[&]() {

        if (name["members"]["pVertexBindingDescriptions"].contains("null")){
        temp_wjbwHbN=NULL;
        }
    temp_wjbwHbN=(VkVertexInputBindingDescription*)malloc(result.vertexBindingDescriptionCount*sizeof(VkVertexInputBindingDescription));
        for (int ENRsKZy=0; ENRsKZy < result.vertexBindingDescriptionCount; ENRsKZy++){
            [&]() {
temp_wjbwHbN[ENRsKZy]=deserialize_VkVertexInputBindingDescription(name["members"]["pVertexBindingDescriptions"]["members"][ENRsKZy]);}();;
        }
        }();result.pVertexBindingDescriptions=temp_wjbwHbN;}();
[&]() {
result.vertexAttributeDescriptionCount=deserialize_uint32_t(name["members"]["vertexAttributeDescriptionCount"]);}();
[&]() {
VkVertexInputAttributeDescription* temp_MdnqvaS;[&]() {

        if (name["members"]["pVertexAttributeDescriptions"].contains("null")){
        temp_MdnqvaS=NULL;
        }
    temp_MdnqvaS=(VkVertexInputAttributeDescription*)malloc(result.vertexAttributeDescriptionCount*sizeof(VkVertexInputAttributeDescription));
        for (int zgjssCk=0; zgjssCk < result.vertexAttributeDescriptionCount; zgjssCk++){
            [&]() {
temp_MdnqvaS[zgjssCk]=deserialize_VkVertexInputAttributeDescription(name["members"]["pVertexAttributeDescriptions"]["members"][zgjssCk]);}();;
        }
        }();result.pVertexAttributeDescriptions=temp_MdnqvaS;}();
return result;}

    json serialize_VkPipelineInputAssemblyStateCreateInfo(VkPipelineInputAssemblyStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MVrwSyL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KiUSRIe=json({});
    
        if (name.pNext==NULL){
            return_KiUSRIe["null"]=true;
            return return_KiUSRIe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_eGSKihu=json({});
    return serialize_VkPipelineInputAssemblyStateCreateFlags(name.flags);}();
result["members"]["topology"]=[&]() {
    json return_hosiMwY=json({});
    return serialize_VkPrimitiveTopology(name.topology);}();
result["members"]["primitiveRestartEnable"]=[&]() {
    json return_wrDpQNW=json({});
    return_wrDpQNW=[&]() {
    json return_ICUHGVL=json({});
    return serialize_uint32_t(name.primitiveRestartEnable);}();return return_wrDpQNW;}();
return result;}

    VkPipelineInputAssemblyStateCreateInfo deserialize_VkPipelineInputAssemblyStateCreateInfo(json name){
        auto result=VkPipelineInputAssemblyStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nSHGDIO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nSHGDIO=NULL;
        }
    temp_nSHGDIO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nSHGDIO;}();
[&]() {
result.flags=deserialize_VkPipelineInputAssemblyStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.topology=deserialize_VkPrimitiveTopology(name["members"]["topology"]);}();
[&]() {
[&]() {
result.primitiveRestartEnable=deserialize_uint32_t(name["members"]["primitiveRestartEnable"]);}();}();
return result;}

    json serialize_VkPipelineTessellationStateCreateInfo(VkPipelineTessellationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rGeFicO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RnSmKRk=json({});
    
        if (name.pNext==NULL){
            return_RnSmKRk["null"]=true;
            return return_RnSmKRk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sHOmIiy=json({});
    return serialize_VkPipelineTessellationStateCreateFlags(name.flags);}();
result["members"]["patchControlPoints"]=[&]() {
    json return_PIokpWf=json({});
    return serialize_uint32_t(name.patchControlPoints);}();
return result;}

    VkPipelineTessellationStateCreateInfo deserialize_VkPipelineTessellationStateCreateInfo(json name){
        auto result=VkPipelineTessellationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zvjeDry;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zvjeDry=NULL;
        }
    temp_zvjeDry=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zvjeDry;}();
[&]() {
result.flags=deserialize_VkPipelineTessellationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.patchControlPoints=deserialize_uint32_t(name["members"]["patchControlPoints"]);}();
return result;}

    json serialize_VkPipelineViewportStateCreateInfo(VkPipelineViewportStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YPZskNh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VVSbzmJ=json({});
    
        if (name.pNext==NULL){
            return_VVSbzmJ["null"]=true;
            return return_VVSbzmJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_oXcqEtN=json({});
    return serialize_VkPipelineViewportStateCreateFlags(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_uXxQjHo=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewports"]=[&]() {
    json return_ToPGVsQ=json({});
    
        if (name.pViewports==NULL){
            return_ToPGVsQ["null"]=true;
            return return_ToPGVsQ;
        }
        
        return_ToPGVsQ["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_UmgcQKs=json({});
    return serialize_VkViewport(name.pViewports[i]);}();
            return_ToPGVsQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_ToPGVsQ;
        }();
result["members"]["scissorCount"]=[&]() {
    json return_vaVMgmO=json({});
    return serialize_uint32_t(name.scissorCount);}();
result["members"]["pScissors"]=[&]() {
    json return_HlUGvlE=json({});
    
        if (name.pScissors==NULL){
            return_HlUGvlE["null"]=true;
            return return_HlUGvlE;
        }
        
        return_HlUGvlE["members"]={};
        for(int i=0; i < name.scissorCount; i++){
            json temp;
            temp=[&]() {
    json return_nJRAxVw=json({});
    return serialize_VkRect2D(name.pScissors[i]);}();
            return_HlUGvlE["members"][std::to_string(i)].push_back(temp);
        }
        return return_HlUGvlE;
        }();
return result;}

    VkPipelineViewportStateCreateInfo deserialize_VkPipelineViewportStateCreateInfo(json name){
        auto result=VkPipelineViewportStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mKQNbgc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mKQNbgc=NULL;
        }
    temp_mKQNbgc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mKQNbgc;}();
[&]() {
result.flags=deserialize_VkPipelineViewportStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewport* temp_OJZAxWf;[&]() {

        if (name["members"]["pViewports"].contains("null")){
        temp_OJZAxWf=NULL;
        }
    temp_OJZAxWf=(VkViewport*)malloc(result.viewportCount*sizeof(VkViewport));
        for (int JxIijJi=0; JxIijJi < result.viewportCount; JxIijJi++){
            [&]() {
temp_OJZAxWf[JxIijJi]=deserialize_VkViewport(name["members"]["pViewports"]["members"][JxIijJi]);}();;
        }
        }();result.pViewports=temp_OJZAxWf;}();
[&]() {
result.scissorCount=deserialize_uint32_t(name["members"]["scissorCount"]);}();
[&]() {
VkRect2D* temp_EoIXRaC;[&]() {

        if (name["members"]["pScissors"].contains("null")){
        temp_EoIXRaC=NULL;
        }
    temp_EoIXRaC=(VkRect2D*)malloc(result.scissorCount*sizeof(VkRect2D));
        for (int wqrTXci=0; wqrTXci < result.scissorCount; wqrTXci++){
            [&]() {
temp_EoIXRaC[wqrTXci]=deserialize_VkRect2D(name["members"]["pScissors"]["members"][wqrTXci]);}();;
        }
        }();result.pScissors=temp_EoIXRaC;}();
return result;}

    json serialize_VkPipelineRasterizationStateCreateInfo(VkPipelineRasterizationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bRTjQBX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pTiPyyr=json({});
    
        if (name.pNext==NULL){
            return_pTiPyyr["null"]=true;
            return return_pTiPyyr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cAtkjxn=json({});
    return serialize_VkPipelineRasterizationStateCreateFlags(name.flags);}();
result["members"]["depthClampEnable"]=[&]() {
    json return_HEzfiMn=json({});
    return_HEzfiMn=[&]() {
    json return_bPzLqab=json({});
    return serialize_uint32_t(name.depthClampEnable);}();return return_HEzfiMn;}();
result["members"]["rasterizerDiscardEnable"]=[&]() {
    json return_QXIeRtC=json({});
    return_QXIeRtC=[&]() {
    json return_fDUWlRZ=json({});
    return serialize_uint32_t(name.rasterizerDiscardEnable);}();return return_QXIeRtC;}();
result["members"]["polygonMode"]=[&]() {
    json return_atdrwQF=json({});
    return serialize_VkPolygonMode(name.polygonMode);}();
result["members"]["cullMode"]=[&]() {
    json return_mCGLvBB=json({});
    return serialize_VkCullModeFlags(name.cullMode);}();
result["members"]["frontFace"]=[&]() {
    json return_VPeeXlg=json({});
    return serialize_VkFrontFace(name.frontFace);}();
result["members"]["depthBiasEnable"]=[&]() {
    json return_LRSQRYW=json({});
    return_LRSQRYW=[&]() {
    json return_NnPTUpf=json({});
    return serialize_uint32_t(name.depthBiasEnable);}();return return_LRSQRYW;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_jSUcKwf=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_gGgCnQF=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_hEEFMlB=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
result["members"]["lineWidth"]=[&]() {
    json return_ylMZyPu=json({});
    return serialize_float(name.lineWidth);}();
return result;}

    VkPipelineRasterizationStateCreateInfo deserialize_VkPipelineRasterizationStateCreateInfo(json name){
        auto result=VkPipelineRasterizationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xHiiBdH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xHiiBdH=NULL;
        }
    temp_xHiiBdH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xHiiBdH;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClampEnable=deserialize_uint32_t(name["members"]["depthClampEnable"]);}();}();
[&]() {
[&]() {
result.rasterizerDiscardEnable=deserialize_uint32_t(name["members"]["rasterizerDiscardEnable"]);}();}();
[&]() {
result.polygonMode=deserialize_VkPolygonMode(name["members"]["polygonMode"]);}();
[&]() {
result.cullMode=deserialize_VkCullModeFlags(name["members"]["cullMode"]);}();
[&]() {
result.frontFace=deserialize_VkFrontFace(name["members"]["frontFace"]);}();
[&]() {
[&]() {
result.depthBiasEnable=deserialize_uint32_t(name["members"]["depthBiasEnable"]);}();}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
[&]() {
result.lineWidth=deserialize_float(name["members"]["lineWidth"]);}();
return result;}

    json serialize_VkPipelineMultisampleStateCreateInfo(VkPipelineMultisampleStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uifliHR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PcUeusC=json({});
    
        if (name.pNext==NULL){
            return_PcUeusC["null"]=true;
            return return_PcUeusC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zPDSjjc=json({});
    return serialize_VkPipelineMultisampleStateCreateFlags(name.flags);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_UFtmnPl=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["sampleShadingEnable"]=[&]() {
    json return_mfkICWT=json({});
    return_mfkICWT=[&]() {
    json return_RQqMFjp=json({});
    return serialize_uint32_t(name.sampleShadingEnable);}();return return_mfkICWT;}();
result["members"]["minSampleShading"]=[&]() {
    json return_nzCGeBs=json({});
    return serialize_float(name.minSampleShading);}();
result["members"]["pSampleMask"]=[&]() {
    json return_QqWXUuK=json({});
    
        if (name.pSampleMask==NULL){
            return_QqWXUuK["null"]=true;
            return return_QqWXUuK;
        }
        
        return_QqWXUuK["members"]={};
        for(int i=0; i < (name.rasterizationSamples + 31) / 32; i++){
            json temp;
            temp=[&]() {
    json return_RZotVJN=json({});
    return_RZotVJN=[&]() {
    json return_pixSFgw=json({});
    return serialize_uint32_t(name.pSampleMask[i]);}();return return_RZotVJN;}();
            return_QqWXUuK["members"][std::to_string(i)].push_back(temp);
        }
        return return_QqWXUuK;
        }();
result["members"]["alphaToCoverageEnable"]=[&]() {
    json return_axvOQFk=json({});
    return_axvOQFk=[&]() {
    json return_lPhptXM=json({});
    return serialize_uint32_t(name.alphaToCoverageEnable);}();return return_axvOQFk;}();
result["members"]["alphaToOneEnable"]=[&]() {
    json return_cCMJuau=json({});
    return_cCMJuau=[&]() {
    json return_zjFfwer=json({});
    return serialize_uint32_t(name.alphaToOneEnable);}();return return_cCMJuau;}();
return result;}

    VkPipelineMultisampleStateCreateInfo deserialize_VkPipelineMultisampleStateCreateInfo(json name){
        auto result=VkPipelineMultisampleStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CfCcmFJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CfCcmFJ=NULL;
        }
    temp_CfCcmFJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CfCcmFJ;}();
[&]() {
result.flags=deserialize_VkPipelineMultisampleStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
[&]() {
result.sampleShadingEnable=deserialize_uint32_t(name["members"]["sampleShadingEnable"]);}();}();
[&]() {
result.minSampleShading=deserialize_float(name["members"]["minSampleShading"]);}();
[&]() {
VkSampleMask* temp_NYOVuMo;[&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_NYOVuMo=NULL;
        }
    temp_NYOVuMo=(VkSampleMask*)malloc((result.rasterizationSamples + 31) / 32*sizeof(VkSampleMask));
        for (int kzliLUe=0; kzliLUe < (result.rasterizationSamples + 31) / 32; kzliLUe++){
            [&]() {
[&]() {
temp_NYOVuMo[kzliLUe]=deserialize_uint32_t(name["members"]["pSampleMask"]["members"][kzliLUe]);}();}();;
        }
        }();result.pSampleMask=temp_NYOVuMo;}();
[&]() {
[&]() {
result.alphaToCoverageEnable=deserialize_uint32_t(name["members"]["alphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.alphaToOneEnable=deserialize_uint32_t(name["members"]["alphaToOneEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAttachmentState(VkPipelineColorBlendAttachmentState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["blendEnable"]=[&]() {
    json return_fEuIJKW=json({});
    return_fEuIJKW=[&]() {
    json return_RhVoDqS=json({});
    return serialize_uint32_t(name.blendEnable);}();return return_fEuIJKW;}();
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_AIpJJkA=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_cQrQPoI=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_FLjgbgy=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_FgoTZDs=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_CRDAShi=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_mtDVebU=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
result["members"]["colorWriteMask"]=[&]() {
    json return_WZiqsci=json({});
    return serialize_VkColorComponentFlags(name.colorWriteMask);}();
return result;}

    VkPipelineColorBlendAttachmentState deserialize_VkPipelineColorBlendAttachmentState(json name){
        auto result=VkPipelineColorBlendAttachmentState();
    
[&]() {
[&]() {
result.blendEnable=deserialize_uint32_t(name["members"]["blendEnable"]);}();}();
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
[&]() {
result.colorWriteMask=deserialize_VkColorComponentFlags(name["members"]["colorWriteMask"]);}();
return result;}

    json serialize_VkPipelineColorBlendStateCreateInfo(VkPipelineColorBlendStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CtieooE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vosIvyt=json({});
    
        if (name.pNext==NULL){
            return_vosIvyt["null"]=true;
            return return_vosIvyt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XJLzlAA=json({});
    return serialize_VkPipelineColorBlendStateCreateFlags(name.flags);}();
result["members"]["logicOpEnable"]=[&]() {
    json return_WUtFvHV=json({});
    return_WUtFvHV=[&]() {
    json return_VchWqcE=json({});
    return serialize_uint32_t(name.logicOpEnable);}();return return_WUtFvHV;}();
result["members"]["logicOp"]=[&]() {
    json return_mjqaPCn=json({});
    return serialize_VkLogicOp(name.logicOp);}();
result["members"]["attachmentCount"]=[&]() {
    json return_VCLbFEI=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_ccNBwEI=json({});
    
        if (name.pAttachments==NULL){
            return_ccNBwEI["null"]=true;
            return return_ccNBwEI;
        }
        
        return_ccNBwEI["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_jfvaNHM=json({});
    return serialize_VkPipelineColorBlendAttachmentState(name.pAttachments[i]);}();
            return_ccNBwEI["members"][std::to_string(i)].push_back(temp);
        }
        return return_ccNBwEI;
        }();
result["members"]["blendConstants"]=[&]() {
    json return_QzoVhdO=json({});
    
        return_QzoVhdO["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_WHaaMyd=json({});
    return serialize_float(name.blendConstants[i]);}();
            return_QzoVhdO["members"][std::to_string(i)].push_back(temp);
        }
        return return_QzoVhdO;
        }();
return result;}

    VkPipelineColorBlendStateCreateInfo deserialize_VkPipelineColorBlendStateCreateInfo(json name){
        auto result=VkPipelineColorBlendStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SKlSkCl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SKlSkCl=NULL;
        }
    temp_SKlSkCl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SKlSkCl;}();
[&]() {
result.flags=deserialize_VkPipelineColorBlendStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.logicOpEnable=deserialize_uint32_t(name["members"]["logicOpEnable"]);}();}();
[&]() {
result.logicOp=deserialize_VkLogicOp(name["members"]["logicOp"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkPipelineColorBlendAttachmentState* temp_YNbvrqw;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_YNbvrqw=NULL;
        }
    temp_YNbvrqw=(VkPipelineColorBlendAttachmentState*)malloc(result.attachmentCount*sizeof(VkPipelineColorBlendAttachmentState));
        for (int gyWHHCv=0; gyWHHCv < result.attachmentCount; gyWHHCv++){
            [&]() {
temp_YNbvrqw[gyWHHCv]=deserialize_VkPipelineColorBlendAttachmentState(name["members"]["pAttachments"]["members"][gyWHHCv]);}();;
        }
        }();result.pAttachments=temp_YNbvrqw;}();
[&]() {

        for (int uOAuyoY=0; uOAuyoY < 4; uOAuyoY++){
            [&]() {
result.blendConstants[uOAuyoY]=deserialize_float(name["members"]["blendConstants"]["members"][uOAuyoY]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineDynamicStateCreateInfo(VkPipelineDynamicStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YnidBsg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UphOETt=json({});
    
        if (name.pNext==NULL){
            return_UphOETt["null"]=true;
            return return_UphOETt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vBWUaIP=json({});
    return serialize_VkPipelineDynamicStateCreateFlags(name.flags);}();
result["members"]["dynamicStateCount"]=[&]() {
    json return_qYWBzyR=json({});
    return serialize_uint32_t(name.dynamicStateCount);}();
result["members"]["pDynamicStates"]=[&]() {
    json return_CSArNYO=json({});
    
        if (name.pDynamicStates==NULL){
            return_CSArNYO["null"]=true;
            return return_CSArNYO;
        }
        
        return_CSArNYO["members"]={};
        for(int i=0; i < name.dynamicStateCount; i++){
            json temp;
            temp=[&]() {
    json return_ArGfLah=json({});
    return serialize_VkDynamicState(name.pDynamicStates[i]);}();
            return_CSArNYO["members"][std::to_string(i)].push_back(temp);
        }
        return return_CSArNYO;
        }();
return result;}

    VkPipelineDynamicStateCreateInfo deserialize_VkPipelineDynamicStateCreateInfo(json name){
        auto result=VkPipelineDynamicStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MVOlydE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MVOlydE=NULL;
        }
    temp_MVOlydE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MVOlydE;}();
[&]() {
result.flags=deserialize_VkPipelineDynamicStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.dynamicStateCount=deserialize_uint32_t(name["members"]["dynamicStateCount"]);}();
[&]() {
VkDynamicState* temp_MVkFlgQ;[&]() {

        if (name["members"]["pDynamicStates"].contains("null")){
        temp_MVkFlgQ=NULL;
        }
    temp_MVkFlgQ=(VkDynamicState*)malloc(result.dynamicStateCount*sizeof(VkDynamicState));
        for (int FiwRlmf=0; FiwRlmf < result.dynamicStateCount; FiwRlmf++){
            [&]() {
temp_MVkFlgQ[FiwRlmf]=deserialize_VkDynamicState(name["members"]["pDynamicStates"]["members"][FiwRlmf]);}();;
        }
        }();result.pDynamicStates=temp_MVkFlgQ;}();
return result;}

    json serialize_VkStencilOpState(VkStencilOpState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["failOp"]=[&]() {
    json return_fATXvOB=json({});
    return serialize_VkStencilOp(name.failOp);}();
result["members"]["passOp"]=[&]() {
    json return_bTpXJeP=json({});
    return serialize_VkStencilOp(name.passOp);}();
result["members"]["depthFailOp"]=[&]() {
    json return_MhzLUdd=json({});
    return serialize_VkStencilOp(name.depthFailOp);}();
result["members"]["compareOp"]=[&]() {
    json return_jkznsDg=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["compareMask"]=[&]() {
    json return_JsuFNXj=json({});
    return serialize_uint32_t(name.compareMask);}();
result["members"]["writeMask"]=[&]() {
    json return_EftrPph=json({});
    return serialize_uint32_t(name.writeMask);}();
result["members"]["reference"]=[&]() {
    json return_JKOLmVG=json({});
    return serialize_uint32_t(name.reference);}();
return result;}

    VkStencilOpState deserialize_VkStencilOpState(json name){
        auto result=VkStencilOpState();
    
[&]() {
result.failOp=deserialize_VkStencilOp(name["members"]["failOp"]);}();
[&]() {
result.passOp=deserialize_VkStencilOp(name["members"]["passOp"]);}();
[&]() {
result.depthFailOp=deserialize_VkStencilOp(name["members"]["depthFailOp"]);}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.compareMask=deserialize_uint32_t(name["members"]["compareMask"]);}();
[&]() {
result.writeMask=deserialize_uint32_t(name["members"]["writeMask"]);}();
[&]() {
result.reference=deserialize_uint32_t(name["members"]["reference"]);}();
return result;}

    json serialize_VkPipelineDepthStencilStateCreateInfo(VkPipelineDepthStencilStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BjtWHdc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NpDJuwH=json({});
    
        if (name.pNext==NULL){
            return_NpDJuwH["null"]=true;
            return return_NpDJuwH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dKuGSFc=json({});
    return serialize_VkPipelineDepthStencilStateCreateFlags(name.flags);}();
result["members"]["depthTestEnable"]=[&]() {
    json return_eaHajtg=json({});
    return_eaHajtg=[&]() {
    json return_PtLNnlE=json({});
    return serialize_uint32_t(name.depthTestEnable);}();return return_eaHajtg;}();
result["members"]["depthWriteEnable"]=[&]() {
    json return_EzqhoJP=json({});
    return_EzqhoJP=[&]() {
    json return_AHtcsfv=json({});
    return serialize_uint32_t(name.depthWriteEnable);}();return return_EzqhoJP;}();
result["members"]["depthCompareOp"]=[&]() {
    json return_JyCgMpN=json({});
    return serialize_VkCompareOp(name.depthCompareOp);}();
result["members"]["depthBoundsTestEnable"]=[&]() {
    json return_EwmxaEP=json({});
    return_EwmxaEP=[&]() {
    json return_KNlpzaJ=json({});
    return serialize_uint32_t(name.depthBoundsTestEnable);}();return return_EwmxaEP;}();
result["members"]["stencilTestEnable"]=[&]() {
    json return_qbLfYTf=json({});
    return_qbLfYTf=[&]() {
    json return_kvnJMVg=json({});
    return serialize_uint32_t(name.stencilTestEnable);}();return return_qbLfYTf;}();
result["members"]["front"]=[&]() {
    json return_jSugjTI=json({});
    return serialize_VkStencilOpState(name.front);}();
result["members"]["back"]=[&]() {
    json return_xHJKBuL=json({});
    return serialize_VkStencilOpState(name.back);}();
result["members"]["minDepthBounds"]=[&]() {
    json return_SlUbQzN=json({});
    return serialize_float(name.minDepthBounds);}();
result["members"]["maxDepthBounds"]=[&]() {
    json return_gcygYJU=json({});
    return serialize_float(name.maxDepthBounds);}();
return result;}

    VkPipelineDepthStencilStateCreateInfo deserialize_VkPipelineDepthStencilStateCreateInfo(json name){
        auto result=VkPipelineDepthStencilStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VmsSTNr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VmsSTNr=NULL;
        }
    temp_VmsSTNr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VmsSTNr;}();
[&]() {
result.flags=deserialize_VkPipelineDepthStencilStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthTestEnable=deserialize_uint32_t(name["members"]["depthTestEnable"]);}();}();
[&]() {
[&]() {
result.depthWriteEnable=deserialize_uint32_t(name["members"]["depthWriteEnable"]);}();}();
[&]() {
result.depthCompareOp=deserialize_VkCompareOp(name["members"]["depthCompareOp"]);}();
[&]() {
[&]() {
result.depthBoundsTestEnable=deserialize_uint32_t(name["members"]["depthBoundsTestEnable"]);}();}();
[&]() {
[&]() {
result.stencilTestEnable=deserialize_uint32_t(name["members"]["stencilTestEnable"]);}();}();
[&]() {
result.front=deserialize_VkStencilOpState(name["members"]["front"]);}();
[&]() {
result.back=deserialize_VkStencilOpState(name["members"]["back"]);}();
[&]() {
result.minDepthBounds=deserialize_float(name["members"]["minDepthBounds"]);}();
[&]() {
result.maxDepthBounds=deserialize_float(name["members"]["maxDepthBounds"]);}();
return result;}

    json serialize_VkGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JoudObK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bSUnoqc=json({});
    
        if (name.pNext==NULL){
            return_bSUnoqc["null"]=true;
            return return_bSUnoqc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_puTsGRs=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_rVYSJdE=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_JeqMmgP=json({});
    
        if (name.pStages==NULL){
            return_JeqMmgP["null"]=true;
            return return_JeqMmgP;
        }
        
        return_JeqMmgP["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_XCtszHk=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_JeqMmgP["members"][std::to_string(i)].push_back(temp);
        }
        return return_JeqMmgP;
        }();
result["members"]["pStages"]=[&]() {
    json return_TaXTilN=json({});
    
        if (name.pStages==NULL){
            return_TaXTilN["null"]=true;
            return return_TaXTilN;
        }
        
        return_TaXTilN["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_PZkVDPH=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_TaXTilN["members"][std::to_string(i)].push_back(temp);
        }
        return return_TaXTilN;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_uIzDybI=json({});
    
        if (name.pVertexInputState==NULL){
            return_uIzDybI["null"]=true;
            return return_uIzDybI;
        }
        return_uIzDybI=[&]() {
    json return_eCZkxFj=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_uIzDybI;}();
result["members"]["pInputAssemblyState"]=[&]() {
    json return_aLnAGuH=json({});
    
        if (name.pInputAssemblyState==NULL){
            return_aLnAGuH["null"]=true;
            return return_aLnAGuH;
        }
        return_aLnAGuH=[&]() {
    json return_YSxCgBf=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*name.pInputAssemblyState);}();
return return_aLnAGuH;}();
result["members"]["pTessellationState"]=[&]() {
    json return_NinaJXI=json({});
    
        if (name.pTessellationState==NULL){
            return_NinaJXI["null"]=true;
            return return_NinaJXI;
        }
        return_NinaJXI=[&]() {
    json return_zBbPOGq=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_NinaJXI;}();
result["members"]["pViewportState"]=[&]() {
    json return_BuPcEHx=json({});
    
        if (name.pViewportState==NULL){
            return_BuPcEHx["null"]=true;
            return return_BuPcEHx;
        }
        return_BuPcEHx=[&]() {
    json return_KeBGgsg=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*name.pViewportState);}();
return return_BuPcEHx;}();
result["members"]["pRasterizationState"]=[&]() {
    json return_QYURadD=json({});
    
        if (name.pRasterizationState==NULL){
            return_QYURadD["null"]=true;
            return return_QYURadD;
        }
        return_QYURadD=[&]() {
    json return_xJjGyJU=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*name.pRasterizationState);}();
return return_QYURadD;}();
result["members"]["pMultisampleState"]=[&]() {
    json return_VqMTTBb=json({});
    
        if (name.pMultisampleState==NULL){
            return_VqMTTBb["null"]=true;
            return return_VqMTTBb;
        }
        return_VqMTTBb=[&]() {
    json return_mwpooDJ=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*name.pMultisampleState);}();
return return_VqMTTBb;}();
result["members"]["pDepthStencilState"]=[&]() {
    json return_DEjlJwa=json({});
    
        if (name.pDepthStencilState==NULL){
            return_DEjlJwa["null"]=true;
            return return_DEjlJwa;
        }
        return_DEjlJwa=[&]() {
    json return_MrrmIvF=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*name.pDepthStencilState);}();
return return_DEjlJwa;}();
result["members"]["pColorBlendState"]=[&]() {
    json return_JCzYpLE=json({});
    
        if (name.pColorBlendState==NULL){
            return_JCzYpLE["null"]=true;
            return return_JCzYpLE;
        }
        return_JCzYpLE=[&]() {
    json return_RrFkYqH=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*name.pColorBlendState);}();
return return_JCzYpLE;}();
result["members"]["pDynamicState"]=[&]() {
    json return_LHoPpCK=json({});
    
        if (name.pDynamicState==NULL){
            return_LHoPpCK["null"]=true;
            return return_LHoPpCK;
        }
        return_LHoPpCK=[&]() {
    json return_asCVnkH=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_LHoPpCK;}();
result["members"]["layout"]=[&]() {
    json return_anTnlUN=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["renderPass"]=[&]() {
    json return_FGHkrvn=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_bXjYVWG=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_hRdBcPr=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_AfKmJUe=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkGraphicsPipelineCreateInfo deserialize_VkGraphicsPipelineCreateInfo(json name){
        auto result=VkGraphicsPipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aiHVcjD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aiHVcjD=NULL;
        }
    temp_aiHVcjD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aiHVcjD;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_Ahoohgm;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_Ahoohgm=NULL;
        }
    temp_Ahoohgm=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int UzsRREI=0; UzsRREI < result.stageCount; UzsRREI++){
            [&]() {
temp_Ahoohgm[UzsRREI]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][UzsRREI]);}();;
        }
        }();result.pStages=temp_Ahoohgm;}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_WBwbucD;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_WBwbucD=NULL;
        }
    temp_WBwbucD=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int ugEvbBa=0; ugEvbBa < result.stageCount; ugEvbBa++){
            [&]() {
temp_WBwbucD[ugEvbBa]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][ugEvbBa]);}();;
        }
        }();result.pStages=temp_WBwbucD;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_iTDhvOy;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_iTDhvOy=NULL;
        }
    [&]() {
*(temp_iTDhvOy)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_iTDhvOy;}();
[&]() {
VkPipelineInputAssemblyStateCreateInfo* temp_UdlLhJL;[&]() {

        if (name["members"]["pInputAssemblyState"].contains("null")){
        temp_UdlLhJL=NULL;
        }
    [&]() {
*(temp_UdlLhJL)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name["members"]["pInputAssemblyState"]);}();
}();result.pInputAssemblyState=temp_UdlLhJL;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_YgSOSyy;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_YgSOSyy=NULL;
        }
    [&]() {
*(temp_YgSOSyy)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_YgSOSyy;}();
[&]() {
VkPipelineViewportStateCreateInfo* temp_kDerxEy;[&]() {

        if (name["members"]["pViewportState"].contains("null")){
        temp_kDerxEy=NULL;
        }
    [&]() {
*(temp_kDerxEy)=deserialize_VkPipelineViewportStateCreateInfo(name["members"]["pViewportState"]);}();
}();result.pViewportState=temp_kDerxEy;}();
[&]() {
VkPipelineRasterizationStateCreateInfo* temp_jYHqutz;[&]() {

        if (name["members"]["pRasterizationState"].contains("null")){
        temp_jYHqutz=NULL;
        }
    [&]() {
*(temp_jYHqutz)=deserialize_VkPipelineRasterizationStateCreateInfo(name["members"]["pRasterizationState"]);}();
}();result.pRasterizationState=temp_jYHqutz;}();
[&]() {
VkPipelineMultisampleStateCreateInfo* temp_BdWDKFe;[&]() {

        if (name["members"]["pMultisampleState"].contains("null")){
        temp_BdWDKFe=NULL;
        }
    [&]() {
*(temp_BdWDKFe)=deserialize_VkPipelineMultisampleStateCreateInfo(name["members"]["pMultisampleState"]);}();
}();result.pMultisampleState=temp_BdWDKFe;}();
[&]() {
VkPipelineDepthStencilStateCreateInfo* temp_cWWOIYN;[&]() {

        if (name["members"]["pDepthStencilState"].contains("null")){
        temp_cWWOIYN=NULL;
        }
    [&]() {
*(temp_cWWOIYN)=deserialize_VkPipelineDepthStencilStateCreateInfo(name["members"]["pDepthStencilState"]);}();
}();result.pDepthStencilState=temp_cWWOIYN;}();
[&]() {
VkPipelineColorBlendStateCreateInfo* temp_SqLedAS;[&]() {

        if (name["members"]["pColorBlendState"].contains("null")){
        temp_SqLedAS=NULL;
        }
    [&]() {
*(temp_SqLedAS)=deserialize_VkPipelineColorBlendStateCreateInfo(name["members"]["pColorBlendState"]);}();
}();result.pColorBlendState=temp_SqLedAS;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_NCVqVrx;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_NCVqVrx=NULL;
        }
    [&]() {
*(temp_NCVqVrx)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_NCVqVrx;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkPipelineCacheCreateInfo(VkPipelineCacheCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fMcdJGT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AIXDMZx=json({});
    
        if (name.pNext==NULL){
            return_AIXDMZx["null"]=true;
            return return_AIXDMZx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LWkojCH=json({});
    return serialize_VkPipelineCacheCreateFlags(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_dgRKmuY=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["initialDataSize"]=[&]() {
    json return_fDahISu=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_vweSCLb=json({});
    
        if (name.pInitialData==NULL){
            return_vweSCLb["null"]=true;
            return return_vweSCLb;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkPipelineCacheCreateInfo deserialize_VkPipelineCacheCreateInfo(json name){
        auto result=VkPipelineCacheCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pbjzYTd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pbjzYTd=NULL;
        }
    temp_pbjzYTd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pbjzYTd;}();
[&]() {
result.flags=deserialize_VkPipelineCacheCreateFlags(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_ZzHtRFt;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_ZzHtRFt=NULL;
        }
    temp_ZzHtRFt=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_ZzHtRFt;}();
return result;}

    json serialize_VkPipelineCacheHeaderVersionOne(VkPipelineCacheHeaderVersionOne name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_ItSUtBf=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_jvNwnKm=json({});
    return serialize_VkPipelineCacheHeaderVersion(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_Iigrhxi=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_BjQNtAH=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_DrsqXya=json({});
    
        return_DrsqXya["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_GkIjuoh=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_DrsqXya["members"][std::to_string(i)].push_back(temp);
        }
        return return_DrsqXya;
        }();
return result;}

    VkPipelineCacheHeaderVersionOne deserialize_VkPipelineCacheHeaderVersionOne(json name){
        auto result=VkPipelineCacheHeaderVersionOne();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkPipelineCacheHeaderVersion(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {

        for (int EwMpSJD=0; EwMpSJD < VK_UUID_SIZE; EwMpSJD++){
            [&]() {
result.pipelineCacheUUID[EwMpSJD]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][EwMpSJD]);}();;
        }
        }();
return result;}

    json serialize_VkPushConstantRange(VkPushConstantRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["stageFlags"]=[&]() {
    json return_RCxLvUT=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["offset"]=[&]() {
    json return_ScvConh=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_GbwyZQk=json({});
    return serialize_uint32_t(name.size);}();
return result;}

    VkPushConstantRange deserialize_VkPushConstantRange(json name){
        auto result=VkPushConstantRange();
    
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
return result;}

    json serialize_VkPipelineLayoutCreateInfo(VkPipelineLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DPwgLgT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FeqqEcv=json({});
    
        if (name.pNext==NULL){
            return_FeqqEcv["null"]=true;
            return return_FeqqEcv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yyaOkLi=json({});
    return serialize_VkPipelineLayoutCreateFlags(name.flags);}();
result["members"]["setLayoutCount"]=[&]() {
    json return_NAqVeJf=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_UDXkvEf=json({});
    
        if (name.pSetLayouts==NULL){
            return_UDXkvEf["null"]=true;
            return return_UDXkvEf;
        }
        
        return_UDXkvEf["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_hQsoIbJ=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_UDXkvEf["members"][std::to_string(i)].push_back(temp);
        }
        return return_UDXkvEf;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_YCHcAMS=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_wSosNCY=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_wSosNCY["null"]=true;
            return return_wSosNCY;
        }
        
        return_wSosNCY["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_sfJZQwI=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_wSosNCY["members"][std::to_string(i)].push_back(temp);
        }
        return return_wSosNCY;
        }();
return result;}

    VkPipelineLayoutCreateInfo deserialize_VkPipelineLayoutCreateInfo(json name){
        auto result=VkPipelineLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lTvhkIH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lTvhkIH=NULL;
        }
    temp_lTvhkIH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lTvhkIH;}();
[&]() {
result.flags=deserialize_VkPipelineLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_rKyBYyR;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_rKyBYyR=NULL;
        }
    temp_rKyBYyR=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int cABwrPV=0; cABwrPV < result.setLayoutCount; cABwrPV++){
            [&]() {
temp_rKyBYyR[cABwrPV]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][cABwrPV]);}();;
        }
        }();result.pSetLayouts=temp_rKyBYyR;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_oXnIWzL;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_oXnIWzL=NULL;
        }
    temp_oXnIWzL=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int MNEuTGo=0; MNEuTGo < result.pushConstantRangeCount; MNEuTGo++){
            [&]() {
temp_oXnIWzL[MNEuTGo]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][MNEuTGo]);}();;
        }
        }();result.pPushConstantRanges=temp_oXnIWzL;}();
return result;}

    json serialize_VkSamplerCreateInfo(VkSamplerCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rYqNYfH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gGiGOBw=json({});
    
        if (name.pNext==NULL){
            return_gGiGOBw["null"]=true;
            return return_gGiGOBw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xWnVDGY=json({});
    return serialize_VkSamplerCreateFlags(name.flags);}();
result["members"]["magFilter"]=[&]() {
    json return_EHbypnd=json({});
    return serialize_VkFilter(name.magFilter);}();
result["members"]["minFilter"]=[&]() {
    json return_ZmgGLtC=json({});
    return serialize_VkFilter(name.minFilter);}();
result["members"]["mipmapMode"]=[&]() {
    json return_HynOfDq=json({});
    return serialize_VkSamplerMipmapMode(name.mipmapMode);}();
result["members"]["addressModeU"]=[&]() {
    json return_cHeKrlJ=json({});
    return serialize_VkSamplerAddressMode(name.addressModeU);}();
result["members"]["addressModeV"]=[&]() {
    json return_IBqUWCE=json({});
    return serialize_VkSamplerAddressMode(name.addressModeV);}();
result["members"]["addressModeW"]=[&]() {
    json return_ppzfqXU=json({});
    return serialize_VkSamplerAddressMode(name.addressModeW);}();
result["members"]["mipLodBias"]=[&]() {
    json return_DUnuqmU=json({});
    return serialize_float(name.mipLodBias);}();
result["members"]["anisotropyEnable"]=[&]() {
    json return_HjhiEvO=json({});
    return_HjhiEvO=[&]() {
    json return_XlEZRZh=json({});
    return serialize_uint32_t(name.anisotropyEnable);}();return return_HjhiEvO;}();
result["members"]["maxAnisotropy"]=[&]() {
    json return_lAuoYIx=json({});
    return serialize_float(name.maxAnisotropy);}();
result["members"]["compareEnable"]=[&]() {
    json return_rnGtsBH=json({});
    return_rnGtsBH=[&]() {
    json return_CPxFIKx=json({});
    return serialize_uint32_t(name.compareEnable);}();return return_rnGtsBH;}();
result["members"]["compareOp"]=[&]() {
    json return_WcASljO=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["minLod"]=[&]() {
    json return_zKlMero=json({});
    return serialize_float(name.minLod);}();
result["members"]["maxLod"]=[&]() {
    json return_ZrIXEvM=json({});
    return serialize_float(name.maxLod);}();
result["members"]["borderColor"]=[&]() {
    json return_zEpIVku=json({});
    return serialize_VkBorderColor(name.borderColor);}();
result["members"]["unnormalizedCoordinates"]=[&]() {
    json return_POFdAER=json({});
    return_POFdAER=[&]() {
    json return_bJFWooP=json({});
    return serialize_uint32_t(name.unnormalizedCoordinates);}();return return_POFdAER;}();
return result;}

    VkSamplerCreateInfo deserialize_VkSamplerCreateInfo(json name){
        auto result=VkSamplerCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_czJDLKS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_czJDLKS=NULL;
        }
    temp_czJDLKS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_czJDLKS;}();
[&]() {
result.flags=deserialize_VkSamplerCreateFlags(name["members"]["flags"]);}();
[&]() {
result.magFilter=deserialize_VkFilter(name["members"]["magFilter"]);}();
[&]() {
result.minFilter=deserialize_VkFilter(name["members"]["minFilter"]);}();
[&]() {
result.mipmapMode=deserialize_VkSamplerMipmapMode(name["members"]["mipmapMode"]);}();
[&]() {
result.addressModeU=deserialize_VkSamplerAddressMode(name["members"]["addressModeU"]);}();
[&]() {
result.addressModeV=deserialize_VkSamplerAddressMode(name["members"]["addressModeV"]);}();
[&]() {
result.addressModeW=deserialize_VkSamplerAddressMode(name["members"]["addressModeW"]);}();
[&]() {
result.mipLodBias=deserialize_float(name["members"]["mipLodBias"]);}();
[&]() {
[&]() {
result.anisotropyEnable=deserialize_uint32_t(name["members"]["anisotropyEnable"]);}();}();
[&]() {
result.maxAnisotropy=deserialize_float(name["members"]["maxAnisotropy"]);}();
[&]() {
[&]() {
result.compareEnable=deserialize_uint32_t(name["members"]["compareEnable"]);}();}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
[&]() {
result.maxLod=deserialize_float(name["members"]["maxLod"]);}();
[&]() {
result.borderColor=deserialize_VkBorderColor(name["members"]["borderColor"]);}();
[&]() {
[&]() {
result.unnormalizedCoordinates=deserialize_uint32_t(name["members"]["unnormalizedCoordinates"]);}();}();
return result;}

    json serialize_VkCommandPoolCreateInfo(VkCommandPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hyyGRmj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PvIVYpg=json({});
    
        if (name.pNext==NULL){
            return_PvIVYpg["null"]=true;
            return return_PvIVYpg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mEgvIgp=json({});
    return serialize_VkCommandPoolCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_LsHfovq=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
return result;}

    VkCommandPoolCreateInfo deserialize_VkCommandPoolCreateInfo(json name){
        auto result=VkCommandPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BwPymvy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BwPymvy=NULL;
        }
    temp_BwPymvy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BwPymvy;}();
[&]() {
result.flags=deserialize_VkCommandPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
return result;}

    json serialize_VkCommandBufferAllocateInfo(VkCommandBufferAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zJHhEQt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yXpYiVX=json({});
    
        if (name.pNext==NULL){
            return_yXpYiVX["null"]=true;
            return return_yXpYiVX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandPool"]=[&]() {
    json return_GYwddOE=json({});
    return serialize_VkCommandPool(name.commandPool);}();
result["members"]["level"]=[&]() {
    json return_bkAMfSI=json({});
    return serialize_VkCommandBufferLevel(name.level);}();
result["members"]["commandBufferCount"]=[&]() {
    json return_yDajsmS=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
return result;}

    VkCommandBufferAllocateInfo deserialize_VkCommandBufferAllocateInfo(json name){
        auto result=VkCommandBufferAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gyIbLpa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gyIbLpa=NULL;
        }
    temp_gyIbLpa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gyIbLpa;}();
[&]() {
result.commandPool=deserialize_VkCommandPool(name["members"]["commandPool"]);}();
[&]() {
result.level=deserialize_VkCommandBufferLevel(name["members"]["level"]);}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceInfo(VkCommandBufferInheritanceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_THPqscP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HMvzsfh=json({});
    
        if (name.pNext==NULL){
            return_HMvzsfh["null"]=true;
            return return_HMvzsfh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_WWtgVmD=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_TQuQKmZ=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["framebuffer"]=[&]() {
    json return_uBmcLTb=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["occlusionQueryEnable"]=[&]() {
    json return_hWpDXvh=json({});
    return_hWpDXvh=[&]() {
    json return_yJDPzhS=json({});
    return serialize_uint32_t(name.occlusionQueryEnable);}();return return_hWpDXvh;}();
result["members"]["queryFlags"]=[&]() {
    json return_HvQMXNL=json({});
    return serialize_VkQueryControlFlags(name.queryFlags);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_uIjqkYt=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkCommandBufferInheritanceInfo deserialize_VkCommandBufferInheritanceInfo(json name){
        auto result=VkCommandBufferInheritanceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qSsGgrm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qSsGgrm=NULL;
        }
    temp_qSsGgrm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qSsGgrm;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
[&]() {
result.occlusionQueryEnable=deserialize_uint32_t(name["members"]["occlusionQueryEnable"]);}();}();
[&]() {
result.queryFlags=deserialize_VkQueryControlFlags(name["members"]["queryFlags"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkCommandBufferBeginInfo(VkCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VMXPDTA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_STBXaQx=json({});
    
        if (name.pNext==NULL){
            return_STBXaQx["null"]=true;
            return return_STBXaQx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_TsIVjmf=json({});
    return serialize_VkCommandBufferUsageFlags(name.flags);}();
result["members"]["pInheritanceInfo"]=[&]() {
    json return_sIAYEKo=json({});
    
        if (name.pInheritanceInfo==NULL){
            return_sIAYEKo["null"]=true;
            return return_sIAYEKo;
        }
        return_sIAYEKo=[&]() {
    json return_TcVmMIT=json({});
    return serialize_VkCommandBufferInheritanceInfo(*name.pInheritanceInfo);}();
return return_sIAYEKo;}();
return result;}

    VkCommandBufferBeginInfo deserialize_VkCommandBufferBeginInfo(json name){
        auto result=VkCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CvpNArO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CvpNArO=NULL;
        }
    temp_CvpNArO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CvpNArO;}();
[&]() {
result.flags=deserialize_VkCommandBufferUsageFlags(name["members"]["flags"]);}();
[&]() {
VkCommandBufferInheritanceInfo* temp_TiRSAvw;[&]() {

        if (name["members"]["pInheritanceInfo"].contains("null")){
        temp_TiRSAvw=NULL;
        }
    [&]() {
*(temp_TiRSAvw)=deserialize_VkCommandBufferInheritanceInfo(name["members"]["pInheritanceInfo"]);}();
}();result.pInheritanceInfo=temp_TiRSAvw;}();
return result;}

    json serialize_VkRenderPassBeginInfo(VkRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QBhrjey=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QNQEJYh=json({});
    
        if (name.pNext==NULL){
            return_QNQEJYh["null"]=true;
            return return_QNQEJYh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_QydQJQH=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["framebuffer"]=[&]() {
    json return_bVhySzr=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["renderArea"]=[&]() {
    json return_bKfWjVX=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["clearValueCount"]=[&]() {
    json return_CICAQqj=json({});
    return serialize_uint32_t(name.clearValueCount);}();
result["members"]["pClearValues"]=[&]() {
    json return_mkPxDlQ=json({});
    
        if (name.pClearValues==NULL){
            return_mkPxDlQ["null"]=true;
            return return_mkPxDlQ;
        }
        
        return_mkPxDlQ["members"]={};
        for(int i=0; i < name.clearValueCount; i++){
            json temp;
            temp=[&]() {
    json return_UcBAYoE=json({});
    return serialize_VkClearValue(name.pClearValues[i]);}();
            return_mkPxDlQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_mkPxDlQ;
        }();
return result;}

    VkRenderPassBeginInfo deserialize_VkRenderPassBeginInfo(json name){
        auto result=VkRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EOzLLKB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EOzLLKB=NULL;
        }
    temp_EOzLLKB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EOzLLKB;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.clearValueCount=deserialize_uint32_t(name["members"]["clearValueCount"]);}();
[&]() {
VkClearValue* temp_opBcdKL;[&]() {

        if (name["members"]["pClearValues"].contains("null")){
        temp_opBcdKL=NULL;
        }
    temp_opBcdKL=(VkClearValue*)malloc(result.clearValueCount*sizeof(VkClearValue));
        for (int TsAVgvY=0; TsAVgvY < result.clearValueCount; TsAVgvY++){
            [&]() {
temp_opBcdKL[TsAVgvY]=deserialize_VkClearValue(name["members"]["pClearValues"]["members"][TsAVgvY]);}();;
        }
        }();result.pClearValues=temp_opBcdKL;}();
return result;}

    json serialize_VkClearColorValue(VkClearColorValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["float32"]=[&]() {
    json return_lLljhll=json({});
    
        return_lLljhll["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_TAtQGWv=json({});
    return serialize_float(name.float32[i]);}();
            return_lLljhll["members"][std::to_string(i)].push_back(temp);
        }
        return return_lLljhll;
        }();
result["members"]["int32"]=[&]() {
    json return_jfMBoVw=json({});
    
        return_jfMBoVw["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_jlLLXHx=json({});
    return serialize_int32_t(name.int32[i]);}();
            return_jfMBoVw["members"][std::to_string(i)].push_back(temp);
        }
        return return_jfMBoVw;
        }();
result["members"]["uint32"]=[&]() {
    json return_KaMQXsI=json({});
    
        return_KaMQXsI["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_JFDzEEI=json({});
    return serialize_uint32_t(name.uint32[i]);}();
            return_KaMQXsI["members"][std::to_string(i)].push_back(temp);
        }
        return return_KaMQXsI;
        }();
return result;}

    VkClearColorValue deserialize_VkClearColorValue(json name){
        auto result=VkClearColorValue();
    
[&]() {

        for (int IxxeZvK=0; IxxeZvK < 4; IxxeZvK++){
            [&]() {
result.float32[IxxeZvK]=deserialize_float(name["members"]["float32"]["members"][IxxeZvK]);}();;
        }
        }();
[&]() {

        for (int dWFDcCy=0; dWFDcCy < 4; dWFDcCy++){
            [&]() {
result.int32[dWFDcCy]=deserialize_int32_t(name["members"]["int32"]["members"][dWFDcCy]);}();;
        }
        }();
[&]() {

        for (int ohZozbr=0; ohZozbr < 4; ohZozbr++){
            [&]() {
result.uint32[ohZozbr]=deserialize_uint32_t(name["members"]["uint32"]["members"][ohZozbr]);}();;
        }
        }();
return result;}

    json serialize_VkClearDepthStencilValue(VkClearDepthStencilValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["depth"]=[&]() {
    json return_tmZEAso=json({});
    return serialize_float(name.depth);}();
result["members"]["stencil"]=[&]() {
    json return_phTBsDp=json({});
    return serialize_uint32_t(name.stencil);}();
return result;}

    VkClearDepthStencilValue deserialize_VkClearDepthStencilValue(json name){
        auto result=VkClearDepthStencilValue();
    
[&]() {
result.depth=deserialize_float(name["members"]["depth"]);}();
[&]() {
result.stencil=deserialize_uint32_t(name["members"]["stencil"]);}();
return result;}

    json serialize_VkClearValue(VkClearValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["color"]=[&]() {
    json return_vgaknzd=json({});
    return serialize_VkClearColorValue(name.color);}();
result["members"]["depthStencil"]=[&]() {
    json return_vxyhayg=json({});
    return serialize_VkClearDepthStencilValue(name.depthStencil);}();
return result;}

    VkClearValue deserialize_VkClearValue(json name){
        auto result=VkClearValue();
    
[&]() {
result.color=deserialize_VkClearColorValue(name["members"]["color"]);}();
[&]() {
result.depthStencil=deserialize_VkClearDepthStencilValue(name["members"]["depthStencil"]);}();
return result;}

    json serialize_VkClearAttachment(VkClearAttachment name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_XuLiHuN=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["colorAttachment"]=[&]() {
    json return_SWolbaI=json({});
    return serialize_uint32_t(name.colorAttachment);}();
result["members"]["clearValue"]=[&]() {
    json return_ffJNZnN=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkClearAttachment deserialize_VkClearAttachment(json name){
        auto result=VkClearAttachment();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.colorAttachment=deserialize_uint32_t(name["members"]["colorAttachment"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkAttachmentDescription(VkAttachmentDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_IPpWuRG=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_hSLztCM=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_MqHRcEp=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_NuagPGy=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_EgAOLui=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_QYoKJyw=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_eNbJAVd=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_LhmUWgz=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_sDoGgsD=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription deserialize_VkAttachmentDescription(json name){
        auto result=VkAttachmentDescription();
    
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference(VkAttachmentReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachment"]=[&]() {
    json return_sySBMfC=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_vWHKGul=json({});
    return serialize_VkImageLayout(name.layout);}();
return result;}

    VkAttachmentReference deserialize_VkAttachmentReference(json name){
        auto result=VkAttachmentReference();
    
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
return result;}

    json serialize_VkSubpassDescription(VkSubpassDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_nDwXGQJ=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_xPNLnJu=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_WlrxBZO=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_gFvmcsg=json({});
    
        if (name.pInputAttachments==NULL){
            return_gFvmcsg["null"]=true;
            return return_gFvmcsg;
        }
        
        return_gFvmcsg["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_kpAfYAi=json({});
    return serialize_VkAttachmentReference(name.pInputAttachments[i]);}();
            return_gFvmcsg["members"][std::to_string(i)].push_back(temp);
        }
        return return_gFvmcsg;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_IClzmDa=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_PIVcxPF=json({});
    
        if (name.pColorAttachments==NULL){
            return_PIVcxPF["null"]=true;
            return return_PIVcxPF;
        }
        
        return_PIVcxPF["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_SmLfKSU=json({});
    return serialize_VkAttachmentReference(name.pColorAttachments[i]);}();
            return_PIVcxPF["members"][std::to_string(i)].push_back(temp);
        }
        return return_PIVcxPF;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_Vdfwdeg=json({});
    
        if (name.pResolveAttachments==NULL){
            return_Vdfwdeg["null"]=true;
            return return_Vdfwdeg;
        }
        
        return_Vdfwdeg["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_PlOwSyL=json({});
    return serialize_VkAttachmentReference(name.pResolveAttachments[i]);}();
            return_Vdfwdeg["members"][std::to_string(i)].push_back(temp);
        }
        return return_Vdfwdeg;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_ZdjabMM=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_ZdjabMM["null"]=true;
            return return_ZdjabMM;
        }
        return_ZdjabMM=[&]() {
    json return_GQQeQdb=json({});
    return serialize_VkAttachmentReference(*name.pDepthStencilAttachment);}();
return return_ZdjabMM;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_ENvuHyk=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_GNpCVRg=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_GNpCVRg["null"]=true;
            return return_GNpCVRg;
        }
        
        return_GNpCVRg["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_fHaZTJr=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_GNpCVRg["members"][std::to_string(i)].push_back(temp);
        }
        return return_GNpCVRg;
        }();
return result;}

    VkSubpassDescription deserialize_VkSubpassDescription(json name){
        auto result=VkSubpassDescription();
    
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_SvoAHVe;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_SvoAHVe=NULL;
        }
    temp_SvoAHVe=(VkAttachmentReference*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference));
        for (int txyKRiG=0; txyKRiG < result.inputAttachmentCount; txyKRiG++){
            [&]() {
temp_SvoAHVe[txyKRiG]=deserialize_VkAttachmentReference(name["members"]["pInputAttachments"]["members"][txyKRiG]);}();;
        }
        }();result.pInputAttachments=temp_SvoAHVe;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_NVsnrwQ;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_NVsnrwQ=NULL;
        }
    temp_NVsnrwQ=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int mYIIFHd=0; mYIIFHd < result.colorAttachmentCount; mYIIFHd++){
            [&]() {
temp_NVsnrwQ[mYIIFHd]=deserialize_VkAttachmentReference(name["members"]["pColorAttachments"]["members"][mYIIFHd]);}();;
        }
        }();result.pColorAttachments=temp_NVsnrwQ;}();
[&]() {
VkAttachmentReference* temp_dnrGNwy;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_dnrGNwy=NULL;
        }
    temp_dnrGNwy=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int YFFQfuL=0; YFFQfuL < result.colorAttachmentCount; YFFQfuL++){
            [&]() {
temp_dnrGNwy[YFFQfuL]=deserialize_VkAttachmentReference(name["members"]["pResolveAttachments"]["members"][YFFQfuL]);}();;
        }
        }();result.pResolveAttachments=temp_dnrGNwy;}();
[&]() {
VkAttachmentReference* temp_dmPXfWb;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_dmPXfWb=NULL;
        }
    [&]() {
*(temp_dmPXfWb)=deserialize_VkAttachmentReference(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_dmPXfWb;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_LkyZsyA;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_LkyZsyA=NULL;
        }
    temp_LkyZsyA=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int fEUWpeS=0; fEUWpeS < result.preserveAttachmentCount; fEUWpeS++){
            [&]() {
temp_LkyZsyA[fEUWpeS]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][fEUWpeS]);}();;
        }
        }();result.pPreserveAttachments=temp_LkyZsyA;}();
return result;}

    json serialize_VkSubpassDependency(VkSubpassDependency name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubpass"]=[&]() {
    json return_xTcMjys=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_doazTOH=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_hkxQKav=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_NkWdecS=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_aAFUVfL=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_yIoIurv=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_rEGixUy=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
return result;}

    VkSubpassDependency deserialize_VkSubpassDependency(json name){
        auto result=VkSubpassDependency();
    
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo(VkRenderPassCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fHcNpML=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ddAMurG=json({});
    
        if (name.pNext==NULL){
            return_ddAMurG["null"]=true;
            return return_ddAMurG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fKKOnQL=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_LsIwsZS=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_qZvpzfS=json({});
    
        if (name.pAttachments==NULL){
            return_qZvpzfS["null"]=true;
            return return_qZvpzfS;
        }
        
        return_qZvpzfS["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_axTukHF=json({});
    return serialize_VkAttachmentDescription(name.pAttachments[i]);}();
            return_qZvpzfS["members"][std::to_string(i)].push_back(temp);
        }
        return return_qZvpzfS;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_Orkyliz=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_dPgRScW=json({});
    
        if (name.pSubpasses==NULL){
            return_dPgRScW["null"]=true;
            return return_dPgRScW;
        }
        
        return_dPgRScW["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_kxfYwPz=json({});
    return serialize_VkSubpassDescription(name.pSubpasses[i]);}();
            return_dPgRScW["members"][std::to_string(i)].push_back(temp);
        }
        return return_dPgRScW;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_ZxzKeYJ=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_fafHnnd=json({});
    
        if (name.pDependencies==NULL){
            return_fafHnnd["null"]=true;
            return return_fafHnnd;
        }
        
        return_fafHnnd["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_FxaWyTi=json({});
    return serialize_VkSubpassDependency(name.pDependencies[i]);}();
            return_fafHnnd["members"][std::to_string(i)].push_back(temp);
        }
        return return_fafHnnd;
        }();
return result;}

    VkRenderPassCreateInfo deserialize_VkRenderPassCreateInfo(json name){
        auto result=VkRenderPassCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KgisPnJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KgisPnJ=NULL;
        }
    temp_KgisPnJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KgisPnJ;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription* temp_qJgKzmL;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_qJgKzmL=NULL;
        }
    temp_qJgKzmL=(VkAttachmentDescription*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription));
        for (int EjjQKiF=0; EjjQKiF < result.attachmentCount; EjjQKiF++){
            [&]() {
temp_qJgKzmL[EjjQKiF]=deserialize_VkAttachmentDescription(name["members"]["pAttachments"]["members"][EjjQKiF]);}();;
        }
        }();result.pAttachments=temp_qJgKzmL;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription* temp_jOcKYRS;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_jOcKYRS=NULL;
        }
    temp_jOcKYRS=(VkSubpassDescription*)malloc(result.subpassCount*sizeof(VkSubpassDescription));
        for (int UHMhwNB=0; UHMhwNB < result.subpassCount; UHMhwNB++){
            [&]() {
temp_jOcKYRS[UHMhwNB]=deserialize_VkSubpassDescription(name["members"]["pSubpasses"]["members"][UHMhwNB]);}();;
        }
        }();result.pSubpasses=temp_jOcKYRS;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency* temp_AucWEaD;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_AucWEaD=NULL;
        }
    temp_AucWEaD=(VkSubpassDependency*)malloc(result.dependencyCount*sizeof(VkSubpassDependency));
        for (int bLEwyza=0; bLEwyza < result.dependencyCount; bLEwyza++){
            [&]() {
temp_AucWEaD[bLEwyza]=deserialize_VkSubpassDependency(name["members"]["pDependencies"]["members"][bLEwyza]);}();;
        }
        }();result.pDependencies=temp_AucWEaD;}();
return result;}

    json serialize_VkEventCreateInfo(VkEventCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zSbfofO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sORYGvX=json({});
    
        if (name.pNext==NULL){
            return_sORYGvX["null"]=true;
            return return_sORYGvX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hVtMfFI=json({});
    return serialize_VkEventCreateFlags(name.flags);}();
return result;}

    VkEventCreateInfo deserialize_VkEventCreateInfo(json name){
        auto result=VkEventCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ugoGzPF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ugoGzPF=NULL;
        }
    temp_ugoGzPF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ugoGzPF;}();
[&]() {
result.flags=deserialize_VkEventCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkFenceCreateInfo(VkFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jbKIeRG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYPqIAv=json({});
    
        if (name.pNext==NULL){
            return_PYPqIAv["null"]=true;
            return return_PYPqIAv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WntqNDm=json({});
    return serialize_VkFenceCreateFlags(name.flags);}();
return result;}

    VkFenceCreateInfo deserialize_VkFenceCreateInfo(json name){
        auto result=VkFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wHMqqdH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wHMqqdH=NULL;
        }
    temp_wHMqqdH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wHMqqdH;}();
[&]() {
result.flags=deserialize_VkFenceCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures(VkPhysicalDeviceFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["robustBufferAccess"]=[&]() {
    json return_uikpWDE=json({});
    return_uikpWDE=[&]() {
    json return_frNTVCL=json({});
    return serialize_uint32_t(name.robustBufferAccess);}();return return_uikpWDE;}();
result["members"]["fullDrawIndexUint32"]=[&]() {
    json return_gMtLSzf=json({});
    return_gMtLSzf=[&]() {
    json return_KGoeIbv=json({});
    return serialize_uint32_t(name.fullDrawIndexUint32);}();return return_gMtLSzf;}();
result["members"]["imageCubeArray"]=[&]() {
    json return_zMGSLpx=json({});
    return_zMGSLpx=[&]() {
    json return_goTtjvI=json({});
    return serialize_uint32_t(name.imageCubeArray);}();return return_zMGSLpx;}();
result["members"]["independentBlend"]=[&]() {
    json return_PZjSkAS=json({});
    return_PZjSkAS=[&]() {
    json return_FwcBGGU=json({});
    return serialize_uint32_t(name.independentBlend);}();return return_PZjSkAS;}();
result["members"]["geometryShader"]=[&]() {
    json return_NYrjiIc=json({});
    return_NYrjiIc=[&]() {
    json return_QOfFlmU=json({});
    return serialize_uint32_t(name.geometryShader);}();return return_NYrjiIc;}();
result["members"]["tessellationShader"]=[&]() {
    json return_ofihKIo=json({});
    return_ofihKIo=[&]() {
    json return_FfUvDdV=json({});
    return serialize_uint32_t(name.tessellationShader);}();return return_ofihKIo;}();
result["members"]["sampleRateShading"]=[&]() {
    json return_PbEwHvR=json({});
    return_PbEwHvR=[&]() {
    json return_viwFknM=json({});
    return serialize_uint32_t(name.sampleRateShading);}();return return_PbEwHvR;}();
result["members"]["dualSrcBlend"]=[&]() {
    json return_gCKBDTB=json({});
    return_gCKBDTB=[&]() {
    json return_AbTJtnV=json({});
    return serialize_uint32_t(name.dualSrcBlend);}();return return_gCKBDTB;}();
result["members"]["logicOp"]=[&]() {
    json return_OzJGdyf=json({});
    return_OzJGdyf=[&]() {
    json return_PxhWrMR=json({});
    return serialize_uint32_t(name.logicOp);}();return return_OzJGdyf;}();
result["members"]["multiDrawIndirect"]=[&]() {
    json return_AthRdSZ=json({});
    return_AthRdSZ=[&]() {
    json return_PlWdUEC=json({});
    return serialize_uint32_t(name.multiDrawIndirect);}();return return_AthRdSZ;}();
result["members"]["drawIndirectFirstInstance"]=[&]() {
    json return_ebHTZSt=json({});
    return_ebHTZSt=[&]() {
    json return_DVkBiwg=json({});
    return serialize_uint32_t(name.drawIndirectFirstInstance);}();return return_ebHTZSt;}();
result["members"]["depthClamp"]=[&]() {
    json return_ujzijss=json({});
    return_ujzijss=[&]() {
    json return_TEoqUyy=json({});
    return serialize_uint32_t(name.depthClamp);}();return return_ujzijss;}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_MDdWXTL=json({});
    return_MDdWXTL=[&]() {
    json return_YIpoOPc=json({});
    return serialize_uint32_t(name.depthBiasClamp);}();return return_MDdWXTL;}();
result["members"]["fillModeNonSolid"]=[&]() {
    json return_kmLgBZQ=json({});
    return_kmLgBZQ=[&]() {
    json return_AwOtcEK=json({});
    return serialize_uint32_t(name.fillModeNonSolid);}();return return_kmLgBZQ;}();
result["members"]["depthBounds"]=[&]() {
    json return_KRQYFTT=json({});
    return_KRQYFTT=[&]() {
    json return_lupQmar=json({});
    return serialize_uint32_t(name.depthBounds);}();return return_KRQYFTT;}();
result["members"]["wideLines"]=[&]() {
    json return_NCVVqci=json({});
    return_NCVVqci=[&]() {
    json return_NBnStno=json({});
    return serialize_uint32_t(name.wideLines);}();return return_NCVVqci;}();
result["members"]["largePoints"]=[&]() {
    json return_UlULnJp=json({});
    return_UlULnJp=[&]() {
    json return_tZDyWCv=json({});
    return serialize_uint32_t(name.largePoints);}();return return_UlULnJp;}();
result["members"]["alphaToOne"]=[&]() {
    json return_CvMGViF=json({});
    return_CvMGViF=[&]() {
    json return_RmHCzVh=json({});
    return serialize_uint32_t(name.alphaToOne);}();return return_CvMGViF;}();
result["members"]["multiViewport"]=[&]() {
    json return_YbvFeTQ=json({});
    return_YbvFeTQ=[&]() {
    json return_FvCGuzt=json({});
    return serialize_uint32_t(name.multiViewport);}();return return_YbvFeTQ;}();
result["members"]["samplerAnisotropy"]=[&]() {
    json return_mSrcseI=json({});
    return_mSrcseI=[&]() {
    json return_PnsUnNX=json({});
    return serialize_uint32_t(name.samplerAnisotropy);}();return return_mSrcseI;}();
result["members"]["textureCompressionETC2"]=[&]() {
    json return_RmdlwGe=json({});
    return_RmdlwGe=[&]() {
    json return_kFQWzDt=json({});
    return serialize_uint32_t(name.textureCompressionETC2);}();return return_RmdlwGe;}();
result["members"]["textureCompressionASTC_LDR"]=[&]() {
    json return_UYQQZyw=json({});
    return_UYQQZyw=[&]() {
    json return_TpKCHyx=json({});
    return serialize_uint32_t(name.textureCompressionASTC_LDR);}();return return_UYQQZyw;}();
result["members"]["textureCompressionBC"]=[&]() {
    json return_BPbAHZH=json({});
    return_BPbAHZH=[&]() {
    json return_UAszQmT=json({});
    return serialize_uint32_t(name.textureCompressionBC);}();return return_BPbAHZH;}();
result["members"]["occlusionQueryPrecise"]=[&]() {
    json return_TzhpJXb=json({});
    return_TzhpJXb=[&]() {
    json return_kpXglts=json({});
    return serialize_uint32_t(name.occlusionQueryPrecise);}();return return_TzhpJXb;}();
result["members"]["pipelineStatisticsQuery"]=[&]() {
    json return_JhzLwwe=json({});
    return_JhzLwwe=[&]() {
    json return_shanQgC=json({});
    return serialize_uint32_t(name.pipelineStatisticsQuery);}();return return_JhzLwwe;}();
result["members"]["vertexPipelineStoresAndAtomics"]=[&]() {
    json return_BmVTUlz=json({});
    return_BmVTUlz=[&]() {
    json return_MUYqfnG=json({});
    return serialize_uint32_t(name.vertexPipelineStoresAndAtomics);}();return return_BmVTUlz;}();
result["members"]["fragmentStoresAndAtomics"]=[&]() {
    json return_sskPFqq=json({});
    return_sskPFqq=[&]() {
    json return_sVvOara=json({});
    return serialize_uint32_t(name.fragmentStoresAndAtomics);}();return return_sskPFqq;}();
result["members"]["shaderTessellationAndGeometryPointSize"]=[&]() {
    json return_KiUcJuE=json({});
    return_KiUcJuE=[&]() {
    json return_xmGSsYW=json({});
    return serialize_uint32_t(name.shaderTessellationAndGeometryPointSize);}();return return_KiUcJuE;}();
result["members"]["shaderImageGatherExtended"]=[&]() {
    json return_TgUtmUz=json({});
    return_TgUtmUz=[&]() {
    json return_NZLLNac=json({});
    return serialize_uint32_t(name.shaderImageGatherExtended);}();return return_TgUtmUz;}();
result["members"]["shaderStorageImageExtendedFormats"]=[&]() {
    json return_skdESOS=json({});
    return_skdESOS=[&]() {
    json return_CJUFbiP=json({});
    return serialize_uint32_t(name.shaderStorageImageExtendedFormats);}();return return_skdESOS;}();
result["members"]["shaderStorageImageMultisample"]=[&]() {
    json return_WXCzaoN=json({});
    return_WXCzaoN=[&]() {
    json return_SoeqBCa=json({});
    return serialize_uint32_t(name.shaderStorageImageMultisample);}();return return_WXCzaoN;}();
result["members"]["shaderStorageImageReadWithoutFormat"]=[&]() {
    json return_krnRxRs=json({});
    return_krnRxRs=[&]() {
    json return_pzUEPic=json({});
    return serialize_uint32_t(name.shaderStorageImageReadWithoutFormat);}();return return_krnRxRs;}();
result["members"]["shaderStorageImageWriteWithoutFormat"]=[&]() {
    json return_CrJPNsw=json({});
    return_CrJPNsw=[&]() {
    json return_DkoFIDv=json({});
    return serialize_uint32_t(name.shaderStorageImageWriteWithoutFormat);}();return return_CrJPNsw;}();
result["members"]["shaderUniformBufferArrayDynamicIndexing"]=[&]() {
    json return_HaxzhCd=json({});
    return_HaxzhCd=[&]() {
    json return_fppkAub=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayDynamicIndexing);}();return return_HaxzhCd;}();
result["members"]["shaderSampledImageArrayDynamicIndexing"]=[&]() {
    json return_QqHXWAS=json({});
    return_QqHXWAS=[&]() {
    json return_CeiqoNO=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayDynamicIndexing);}();return return_QqHXWAS;}();
result["members"]["shaderStorageBufferArrayDynamicIndexing"]=[&]() {
    json return_lKkihrD=json({});
    return_lKkihrD=[&]() {
    json return_rvgAlQQ=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayDynamicIndexing);}();return return_lKkihrD;}();
result["members"]["shaderStorageImageArrayDynamicIndexing"]=[&]() {
    json return_LAozbua=json({});
    return_LAozbua=[&]() {
    json return_tKHamso=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayDynamicIndexing);}();return return_LAozbua;}();
result["members"]["shaderClipDistance"]=[&]() {
    json return_EFuDdkm=json({});
    return_EFuDdkm=[&]() {
    json return_pRUNhsi=json({});
    return serialize_uint32_t(name.shaderClipDistance);}();return return_EFuDdkm;}();
result["members"]["shaderCullDistance"]=[&]() {
    json return_jYRapnq=json({});
    return_jYRapnq=[&]() {
    json return_quOlqLe=json({});
    return serialize_uint32_t(name.shaderCullDistance);}();return return_jYRapnq;}();
result["members"]["shaderFloat64"]=[&]() {
    json return_mWTnExj=json({});
    return_mWTnExj=[&]() {
    json return_AiwRqGO=json({});
    return serialize_uint32_t(name.shaderFloat64);}();return return_mWTnExj;}();
result["members"]["shaderInt64"]=[&]() {
    json return_dGZcuCd=json({});
    return_dGZcuCd=[&]() {
    json return_QafoAOJ=json({});
    return serialize_uint32_t(name.shaderInt64);}();return return_dGZcuCd;}();
result["members"]["shaderInt16"]=[&]() {
    json return_TuUzSdm=json({});
    return_TuUzSdm=[&]() {
    json return_dTYoSpu=json({});
    return serialize_uint32_t(name.shaderInt16);}();return return_TuUzSdm;}();
result["members"]["shaderResourceResidency"]=[&]() {
    json return_gXNxrMZ=json({});
    return_gXNxrMZ=[&]() {
    json return_pspeuJn=json({});
    return serialize_uint32_t(name.shaderResourceResidency);}();return return_gXNxrMZ;}();
result["members"]["shaderResourceMinLod"]=[&]() {
    json return_jHeuHIb=json({});
    return_jHeuHIb=[&]() {
    json return_dOdbNpQ=json({});
    return serialize_uint32_t(name.shaderResourceMinLod);}();return return_jHeuHIb;}();
result["members"]["sparseBinding"]=[&]() {
    json return_xUAWOBU=json({});
    return_xUAWOBU=[&]() {
    json return_aRqldlh=json({});
    return serialize_uint32_t(name.sparseBinding);}();return return_xUAWOBU;}();
result["members"]["sparseResidencyBuffer"]=[&]() {
    json return_ZKMPJre=json({});
    return_ZKMPJre=[&]() {
    json return_IZYsRAC=json({});
    return serialize_uint32_t(name.sparseResidencyBuffer);}();return return_ZKMPJre;}();
result["members"]["sparseResidencyImage2D"]=[&]() {
    json return_iceyFIY=json({});
    return_iceyFIY=[&]() {
    json return_TeurqFB=json({});
    return serialize_uint32_t(name.sparseResidencyImage2D);}();return return_iceyFIY;}();
result["members"]["sparseResidencyImage3D"]=[&]() {
    json return_SWsrqFF=json({});
    return_SWsrqFF=[&]() {
    json return_aFDmFmC=json({});
    return serialize_uint32_t(name.sparseResidencyImage3D);}();return return_SWsrqFF;}();
result["members"]["sparseResidency2Samples"]=[&]() {
    json return_yJRHUob=json({});
    return_yJRHUob=[&]() {
    json return_cRbMxwT=json({});
    return serialize_uint32_t(name.sparseResidency2Samples);}();return return_yJRHUob;}();
result["members"]["sparseResidency4Samples"]=[&]() {
    json return_LOWEctT=json({});
    return_LOWEctT=[&]() {
    json return_ovQEDcK=json({});
    return serialize_uint32_t(name.sparseResidency4Samples);}();return return_LOWEctT;}();
result["members"]["sparseResidency8Samples"]=[&]() {
    json return_zhrvStj=json({});
    return_zhrvStj=[&]() {
    json return_jqnyWQR=json({});
    return serialize_uint32_t(name.sparseResidency8Samples);}();return return_zhrvStj;}();
result["members"]["sparseResidency16Samples"]=[&]() {
    json return_lzrjWnE=json({});
    return_lzrjWnE=[&]() {
    json return_hEuxbaU=json({});
    return serialize_uint32_t(name.sparseResidency16Samples);}();return return_lzrjWnE;}();
result["members"]["sparseResidencyAliased"]=[&]() {
    json return_KJBgGgX=json({});
    return_KJBgGgX=[&]() {
    json return_NEHEnIv=json({});
    return serialize_uint32_t(name.sparseResidencyAliased);}();return return_KJBgGgX;}();
result["members"]["variableMultisampleRate"]=[&]() {
    json return_oSeGpYS=json({});
    return_oSeGpYS=[&]() {
    json return_YtlyuXT=json({});
    return serialize_uint32_t(name.variableMultisampleRate);}();return return_oSeGpYS;}();
result["members"]["inheritedQueries"]=[&]() {
    json return_zjfOjGt=json({});
    return_zjfOjGt=[&]() {
    json return_QvIMZgD=json({});
    return serialize_uint32_t(name.inheritedQueries);}();return return_zjfOjGt;}();
return result;}

    VkPhysicalDeviceFeatures deserialize_VkPhysicalDeviceFeatures(json name){
        auto result=VkPhysicalDeviceFeatures();
    
[&]() {
[&]() {
result.robustBufferAccess=deserialize_uint32_t(name["members"]["robustBufferAccess"]);}();}();
[&]() {
[&]() {
result.fullDrawIndexUint32=deserialize_uint32_t(name["members"]["fullDrawIndexUint32"]);}();}();
[&]() {
[&]() {
result.imageCubeArray=deserialize_uint32_t(name["members"]["imageCubeArray"]);}();}();
[&]() {
[&]() {
result.independentBlend=deserialize_uint32_t(name["members"]["independentBlend"]);}();}();
[&]() {
[&]() {
result.geometryShader=deserialize_uint32_t(name["members"]["geometryShader"]);}();}();
[&]() {
[&]() {
result.tessellationShader=deserialize_uint32_t(name["members"]["tessellationShader"]);}();}();
[&]() {
[&]() {
result.sampleRateShading=deserialize_uint32_t(name["members"]["sampleRateShading"]);}();}();
[&]() {
[&]() {
result.dualSrcBlend=deserialize_uint32_t(name["members"]["dualSrcBlend"]);}();}();
[&]() {
[&]() {
result.logicOp=deserialize_uint32_t(name["members"]["logicOp"]);}();}();
[&]() {
[&]() {
result.multiDrawIndirect=deserialize_uint32_t(name["members"]["multiDrawIndirect"]);}();}();
[&]() {
[&]() {
result.drawIndirectFirstInstance=deserialize_uint32_t(name["members"]["drawIndirectFirstInstance"]);}();}();
[&]() {
[&]() {
result.depthClamp=deserialize_uint32_t(name["members"]["depthClamp"]);}();}();
[&]() {
[&]() {
result.depthBiasClamp=deserialize_uint32_t(name["members"]["depthBiasClamp"]);}();}();
[&]() {
[&]() {
result.fillModeNonSolid=deserialize_uint32_t(name["members"]["fillModeNonSolid"]);}();}();
[&]() {
[&]() {
result.depthBounds=deserialize_uint32_t(name["members"]["depthBounds"]);}();}();
[&]() {
[&]() {
result.wideLines=deserialize_uint32_t(name["members"]["wideLines"]);}();}();
[&]() {
[&]() {
result.largePoints=deserialize_uint32_t(name["members"]["largePoints"]);}();}();
[&]() {
[&]() {
result.alphaToOne=deserialize_uint32_t(name["members"]["alphaToOne"]);}();}();
[&]() {
[&]() {
result.multiViewport=deserialize_uint32_t(name["members"]["multiViewport"]);}();}();
[&]() {
[&]() {
result.samplerAnisotropy=deserialize_uint32_t(name["members"]["samplerAnisotropy"]);}();}();
[&]() {
[&]() {
result.textureCompressionETC2=deserialize_uint32_t(name["members"]["textureCompressionETC2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_LDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_LDR"]);}();}();
[&]() {
[&]() {
result.textureCompressionBC=deserialize_uint32_t(name["members"]["textureCompressionBC"]);}();}();
[&]() {
[&]() {
result.occlusionQueryPrecise=deserialize_uint32_t(name["members"]["occlusionQueryPrecise"]);}();}();
[&]() {
[&]() {
result.pipelineStatisticsQuery=deserialize_uint32_t(name["members"]["pipelineStatisticsQuery"]);}();}();
[&]() {
[&]() {
result.vertexPipelineStoresAndAtomics=deserialize_uint32_t(name["members"]["vertexPipelineStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.fragmentStoresAndAtomics=deserialize_uint32_t(name["members"]["fragmentStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.shaderTessellationAndGeometryPointSize=deserialize_uint32_t(name["members"]["shaderTessellationAndGeometryPointSize"]);}();}();
[&]() {
[&]() {
result.shaderImageGatherExtended=deserialize_uint32_t(name["members"]["shaderImageGatherExtended"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageExtendedFormats=deserialize_uint32_t(name["members"]["shaderStorageImageExtendedFormats"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageMultisample=deserialize_uint32_t(name["members"]["shaderStorageImageMultisample"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageReadWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageReadWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageWriteWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageWriteWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderClipDistance=deserialize_uint32_t(name["members"]["shaderClipDistance"]);}();}();
[&]() {
[&]() {
result.shaderCullDistance=deserialize_uint32_t(name["members"]["shaderCullDistance"]);}();}();
[&]() {
[&]() {
result.shaderFloat64=deserialize_uint32_t(name["members"]["shaderFloat64"]);}();}();
[&]() {
[&]() {
result.shaderInt64=deserialize_uint32_t(name["members"]["shaderInt64"]);}();}();
[&]() {
[&]() {
result.shaderInt16=deserialize_uint32_t(name["members"]["shaderInt16"]);}();}();
[&]() {
[&]() {
result.shaderResourceResidency=deserialize_uint32_t(name["members"]["shaderResourceResidency"]);}();}();
[&]() {
[&]() {
result.shaderResourceMinLod=deserialize_uint32_t(name["members"]["shaderResourceMinLod"]);}();}();
[&]() {
[&]() {
result.sparseBinding=deserialize_uint32_t(name["members"]["sparseBinding"]);}();}();
[&]() {
[&]() {
result.sparseResidencyBuffer=deserialize_uint32_t(name["members"]["sparseResidencyBuffer"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage2D=deserialize_uint32_t(name["members"]["sparseResidencyImage2D"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage3D=deserialize_uint32_t(name["members"]["sparseResidencyImage3D"]);}();}();
[&]() {
[&]() {
result.sparseResidency2Samples=deserialize_uint32_t(name["members"]["sparseResidency2Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency4Samples=deserialize_uint32_t(name["members"]["sparseResidency4Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency8Samples=deserialize_uint32_t(name["members"]["sparseResidency8Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency16Samples=deserialize_uint32_t(name["members"]["sparseResidency16Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidencyAliased=deserialize_uint32_t(name["members"]["sparseResidencyAliased"]);}();}();
[&]() {
[&]() {
result.variableMultisampleRate=deserialize_uint32_t(name["members"]["variableMultisampleRate"]);}();}();
[&]() {
[&]() {
result.inheritedQueries=deserialize_uint32_t(name["members"]["inheritedQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSparseProperties(VkPhysicalDeviceSparseProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["residencyStandard2DBlockShape"]=[&]() {
    json return_JQylGpg=json({});
    return_JQylGpg=[&]() {
    json return_nafDWZP=json({});
    return serialize_uint32_t(name.residencyStandard2DBlockShape);}();return return_JQylGpg;}();
result["members"]["residencyStandard2DMultisampleBlockShape"]=[&]() {
    json return_HrTwGey=json({});
    return_HrTwGey=[&]() {
    json return_mdVGSnG=json({});
    return serialize_uint32_t(name.residencyStandard2DMultisampleBlockShape);}();return return_HrTwGey;}();
result["members"]["residencyStandard3DBlockShape"]=[&]() {
    json return_sPwCnww=json({});
    return_sPwCnww=[&]() {
    json return_badALoS=json({});
    return serialize_uint32_t(name.residencyStandard3DBlockShape);}();return return_sPwCnww;}();
result["members"]["residencyAlignedMipSize"]=[&]() {
    json return_iSWdJsM=json({});
    return_iSWdJsM=[&]() {
    json return_BkaSoar=json({});
    return serialize_uint32_t(name.residencyAlignedMipSize);}();return return_iSWdJsM;}();
result["members"]["residencyNonResidentStrict"]=[&]() {
    json return_ViRLkMG=json({});
    return_ViRLkMG=[&]() {
    json return_IwwZwlP=json({});
    return serialize_uint32_t(name.residencyNonResidentStrict);}();return return_ViRLkMG;}();
return result;}

    VkPhysicalDeviceSparseProperties deserialize_VkPhysicalDeviceSparseProperties(json name){
        auto result=VkPhysicalDeviceSparseProperties();
    
[&]() {
[&]() {
result.residencyStandard2DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard2DMultisampleBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DMultisampleBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard3DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard3DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyAlignedMipSize=deserialize_uint32_t(name["members"]["residencyAlignedMipSize"]);}();}();
[&]() {
[&]() {
result.residencyNonResidentStrict=deserialize_uint32_t(name["members"]["residencyNonResidentStrict"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLimits(VkPhysicalDeviceLimits name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxImageDimension1D"]=[&]() {
    json return_xFKwCRx=json({});
    return serialize_uint32_t(name.maxImageDimension1D);}();
result["members"]["maxImageDimension2D"]=[&]() {
    json return_NxFGmEr=json({});
    return serialize_uint32_t(name.maxImageDimension2D);}();
result["members"]["maxImageDimension3D"]=[&]() {
    json return_ZKCjxqR=json({});
    return serialize_uint32_t(name.maxImageDimension3D);}();
result["members"]["maxImageDimensionCube"]=[&]() {
    json return_kSXzOmA=json({});
    return serialize_uint32_t(name.maxImageDimensionCube);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_SwjNNWV=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["maxTexelBufferElements"]=[&]() {
    json return_BxNCdTk=json({});
    return serialize_uint32_t(name.maxTexelBufferElements);}();
result["members"]["maxUniformBufferRange"]=[&]() {
    json return_dyaugjv=json({});
    return serialize_uint32_t(name.maxUniformBufferRange);}();
result["members"]["maxStorageBufferRange"]=[&]() {
    json return_rKrOlyw=json({});
    return serialize_uint32_t(name.maxStorageBufferRange);}();
result["members"]["maxPushConstantsSize"]=[&]() {
    json return_yGdaiTr=json({});
    return serialize_uint32_t(name.maxPushConstantsSize);}();
result["members"]["maxMemoryAllocationCount"]=[&]() {
    json return_jklKaQe=json({});
    return serialize_uint32_t(name.maxMemoryAllocationCount);}();
result["members"]["maxSamplerAllocationCount"]=[&]() {
    json return_icnVyxI=json({});
    return serialize_uint32_t(name.maxSamplerAllocationCount);}();
result["members"]["bufferImageGranularity"]=[&]() {
    json return_DlwGLYL=json({});
    return_DlwGLYL=[&]() {
    json return_nvRXoxm=json({});
    return serialize_uint64_t(name.bufferImageGranularity);}();return return_DlwGLYL;}();
result["members"]["sparseAddressSpaceSize"]=[&]() {
    json return_gjGmzDM=json({});
    return_gjGmzDM=[&]() {
    json return_ZrYEvyG=json({});
    return serialize_uint64_t(name.sparseAddressSpaceSize);}();return return_gjGmzDM;}();
result["members"]["maxBoundDescriptorSets"]=[&]() {
    json return_MSqNyAo=json({});
    return serialize_uint32_t(name.maxBoundDescriptorSets);}();
result["members"]["maxPerStageDescriptorSamplers"]=[&]() {
    json return_FCDTwvK=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSamplers);}();
result["members"]["maxPerStageDescriptorUniformBuffers"]=[&]() {
    json return_TciqVwk=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUniformBuffers);}();
result["members"]["maxPerStageDescriptorStorageBuffers"]=[&]() {
    json return_HSOFJfb=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageBuffers);}();
result["members"]["maxPerStageDescriptorSampledImages"]=[&]() {
    json return_khOHidw=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSampledImages);}();
result["members"]["maxPerStageDescriptorStorageImages"]=[&]() {
    json return_CzzQZpx=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageImages);}();
result["members"]["maxPerStageDescriptorInputAttachments"]=[&]() {
    json return_IwvBYtg=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInputAttachments);}();
result["members"]["maxPerStageResources"]=[&]() {
    json return_DbEvaSH=json({});
    return serialize_uint32_t(name.maxPerStageResources);}();
result["members"]["maxDescriptorSetSamplers"]=[&]() {
    json return_qODVyiQ=json({});
    return serialize_uint32_t(name.maxDescriptorSetSamplers);}();
result["members"]["maxDescriptorSetUniformBuffers"]=[&]() {
    json return_yVzVRLf=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffers);}();
result["members"]["maxDescriptorSetUniformBuffersDynamic"]=[&]() {
    json return_rbAoqbP=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetStorageBuffers"]=[&]() {
    json return_IEKgchj=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffers);}();
result["members"]["maxDescriptorSetStorageBuffersDynamic"]=[&]() {
    json return_mZxbzwJ=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetSampledImages"]=[&]() {
    json return_ASOPjJB=json({});
    return serialize_uint32_t(name.maxDescriptorSetSampledImages);}();
result["members"]["maxDescriptorSetStorageImages"]=[&]() {
    json return_MttvIAp=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageImages);}();
result["members"]["maxDescriptorSetInputAttachments"]=[&]() {
    json return_zPPODpn=json({});
    return serialize_uint32_t(name.maxDescriptorSetInputAttachments);}();
result["members"]["maxVertexInputAttributes"]=[&]() {
    json return_jGibnMe=json({});
    return serialize_uint32_t(name.maxVertexInputAttributes);}();
result["members"]["maxVertexInputBindings"]=[&]() {
    json return_bDphQho=json({});
    return serialize_uint32_t(name.maxVertexInputBindings);}();
result["members"]["maxVertexInputAttributeOffset"]=[&]() {
    json return_pdKwySZ=json({});
    return serialize_uint32_t(name.maxVertexInputAttributeOffset);}();
result["members"]["maxVertexInputBindingStride"]=[&]() {
    json return_RwtdZYT=json({});
    return serialize_uint32_t(name.maxVertexInputBindingStride);}();
result["members"]["maxVertexOutputComponents"]=[&]() {
    json return_nrcejUQ=json({});
    return serialize_uint32_t(name.maxVertexOutputComponents);}();
result["members"]["maxTessellationGenerationLevel"]=[&]() {
    json return_VXoXMHL=json({});
    return serialize_uint32_t(name.maxTessellationGenerationLevel);}();
result["members"]["maxTessellationPatchSize"]=[&]() {
    json return_QBBGLYy=json({});
    return serialize_uint32_t(name.maxTessellationPatchSize);}();
result["members"]["maxTessellationControlPerVertexInputComponents"]=[&]() {
    json return_aQcEzuJ=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexInputComponents);}();
result["members"]["maxTessellationControlPerVertexOutputComponents"]=[&]() {
    json return_LRVMCEm=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexOutputComponents);}();
result["members"]["maxTessellationControlPerPatchOutputComponents"]=[&]() {
    json return_baDQGQx=json({});
    return serialize_uint32_t(name.maxTessellationControlPerPatchOutputComponents);}();
result["members"]["maxTessellationControlTotalOutputComponents"]=[&]() {
    json return_LonWLpp=json({});
    return serialize_uint32_t(name.maxTessellationControlTotalOutputComponents);}();
result["members"]["maxTessellationEvaluationInputComponents"]=[&]() {
    json return_eaTIkWl=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationInputComponents);}();
result["members"]["maxTessellationEvaluationOutputComponents"]=[&]() {
    json return_NcmlOBl=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationOutputComponents);}();
result["members"]["maxGeometryShaderInvocations"]=[&]() {
    json return_RPJlRcn=json({});
    return serialize_uint32_t(name.maxGeometryShaderInvocations);}();
result["members"]["maxGeometryInputComponents"]=[&]() {
    json return_SkLtENS=json({});
    return serialize_uint32_t(name.maxGeometryInputComponents);}();
result["members"]["maxGeometryOutputComponents"]=[&]() {
    json return_BJJGlVF=json({});
    return serialize_uint32_t(name.maxGeometryOutputComponents);}();
result["members"]["maxGeometryOutputVertices"]=[&]() {
    json return_UuLacNM=json({});
    return serialize_uint32_t(name.maxGeometryOutputVertices);}();
result["members"]["maxGeometryTotalOutputComponents"]=[&]() {
    json return_rWXFvaX=json({});
    return serialize_uint32_t(name.maxGeometryTotalOutputComponents);}();
result["members"]["maxFragmentInputComponents"]=[&]() {
    json return_sKAhRLd=json({});
    return serialize_uint32_t(name.maxFragmentInputComponents);}();
result["members"]["maxFragmentOutputAttachments"]=[&]() {
    json return_GFpaCDN=json({});
    return serialize_uint32_t(name.maxFragmentOutputAttachments);}();
result["members"]["maxFragmentDualSrcAttachments"]=[&]() {
    json return_qlFqUTE=json({});
    return serialize_uint32_t(name.maxFragmentDualSrcAttachments);}();
result["members"]["maxFragmentCombinedOutputResources"]=[&]() {
    json return_IXurHFR=json({});
    return serialize_uint32_t(name.maxFragmentCombinedOutputResources);}();
result["members"]["maxComputeSharedMemorySize"]=[&]() {
    json return_tpEWVko=json({});
    return serialize_uint32_t(name.maxComputeSharedMemorySize);}();
result["members"]["maxComputeWorkGroupCount"]=[&]() {
    json return_oImvRnZ=json({});
    
        return_oImvRnZ["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_QgbiFUf=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupCount[i]);}();
            return_oImvRnZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_oImvRnZ;
        }();
result["members"]["maxComputeWorkGroupInvocations"]=[&]() {
    json return_lAlupzN=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupInvocations);}();
result["members"]["maxComputeWorkGroupSize"]=[&]() {
    json return_ZeWSrmX=json({});
    
        return_ZeWSrmX["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_TtMpIUj=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupSize[i]);}();
            return_ZeWSrmX["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZeWSrmX;
        }();
result["members"]["subPixelPrecisionBits"]=[&]() {
    json return_VIhaZfN=json({});
    return serialize_uint32_t(name.subPixelPrecisionBits);}();
result["members"]["subTexelPrecisionBits"]=[&]() {
    json return_iCgVuGO=json({});
    return serialize_uint32_t(name.subTexelPrecisionBits);}();
result["members"]["mipmapPrecisionBits"]=[&]() {
    json return_loCNAmC=json({});
    return serialize_uint32_t(name.mipmapPrecisionBits);}();
result["members"]["maxDrawIndexedIndexValue"]=[&]() {
    json return_XNGvFnb=json({});
    return serialize_uint32_t(name.maxDrawIndexedIndexValue);}();
result["members"]["maxDrawIndirectCount"]=[&]() {
    json return_BwNLJUg=json({});
    return serialize_uint32_t(name.maxDrawIndirectCount);}();
result["members"]["maxSamplerLodBias"]=[&]() {
    json return_kwZoZgn=json({});
    return serialize_float(name.maxSamplerLodBias);}();
result["members"]["maxSamplerAnisotropy"]=[&]() {
    json return_hFDwAbu=json({});
    return serialize_float(name.maxSamplerAnisotropy);}();
result["members"]["maxViewports"]=[&]() {
    json return_ArHdDvC=json({});
    return serialize_uint32_t(name.maxViewports);}();
result["members"]["maxViewportDimensions"]=[&]() {
    json return_CawRKPB=json({});
    
        return_CawRKPB["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_hDOGyON=json({});
    return serialize_uint32_t(name.maxViewportDimensions[i]);}();
            return_CawRKPB["members"][std::to_string(i)].push_back(temp);
        }
        return return_CawRKPB;
        }();
result["members"]["viewportBoundsRange"]=[&]() {
    json return_hTVILqH=json({});
    
        return_hTVILqH["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_mDyCcrT=json({});
    return serialize_float(name.viewportBoundsRange[i]);}();
            return_hTVILqH["members"][std::to_string(i)].push_back(temp);
        }
        return return_hTVILqH;
        }();
result["members"]["viewportSubPixelBits"]=[&]() {
    json return_bDAGAOP=json({});
    return serialize_uint32_t(name.viewportSubPixelBits);}();
result["members"]["minMemoryMapAlignment"]=[&]() {
    json return_fRxayrh=json({});
    return serialize_size_t(name.minMemoryMapAlignment);}();
result["members"]["minTexelBufferOffsetAlignment"]=[&]() {
    json return_qzjpTPH=json({});
    return_qzjpTPH=[&]() {
    json return_VxchgFA=json({});
    return serialize_uint64_t(name.minTexelBufferOffsetAlignment);}();return return_qzjpTPH;}();
result["members"]["minUniformBufferOffsetAlignment"]=[&]() {
    json return_QVROzZr=json({});
    return_QVROzZr=[&]() {
    json return_poBxFjK=json({});
    return serialize_uint64_t(name.minUniformBufferOffsetAlignment);}();return return_QVROzZr;}();
result["members"]["minStorageBufferOffsetAlignment"]=[&]() {
    json return_lrRJaez=json({});
    return_lrRJaez=[&]() {
    json return_ebAbguX=json({});
    return serialize_uint64_t(name.minStorageBufferOffsetAlignment);}();return return_lrRJaez;}();
result["members"]["minTexelOffset"]=[&]() {
    json return_kuXkmUV=json({});
    return serialize_int32_t(name.minTexelOffset);}();
result["members"]["maxTexelOffset"]=[&]() {
    json return_sbcqSwk=json({});
    return serialize_uint32_t(name.maxTexelOffset);}();
result["members"]["minTexelGatherOffset"]=[&]() {
    json return_lyCDUKS=json({});
    return serialize_int32_t(name.minTexelGatherOffset);}();
result["members"]["maxTexelGatherOffset"]=[&]() {
    json return_gXtsAtX=json({});
    return serialize_uint32_t(name.maxTexelGatherOffset);}();
result["members"]["minInterpolationOffset"]=[&]() {
    json return_dZWejoW=json({});
    return serialize_float(name.minInterpolationOffset);}();
result["members"]["maxInterpolationOffset"]=[&]() {
    json return_aIlWqbN=json({});
    return serialize_float(name.maxInterpolationOffset);}();
result["members"]["subPixelInterpolationOffsetBits"]=[&]() {
    json return_RfwpudM=json({});
    return serialize_uint32_t(name.subPixelInterpolationOffsetBits);}();
result["members"]["maxFramebufferWidth"]=[&]() {
    json return_hibySMr=json({});
    return serialize_uint32_t(name.maxFramebufferWidth);}();
result["members"]["maxFramebufferHeight"]=[&]() {
    json return_ytaUCVW=json({});
    return serialize_uint32_t(name.maxFramebufferHeight);}();
result["members"]["maxFramebufferLayers"]=[&]() {
    json return_recAhID=json({});
    return serialize_uint32_t(name.maxFramebufferLayers);}();
result["members"]["framebufferColorSampleCounts"]=[&]() {
    json return_oCqEWDT=json({});
    return serialize_VkSampleCountFlags(name.framebufferColorSampleCounts);}();
result["members"]["framebufferDepthSampleCounts"]=[&]() {
    json return_MdttUeY=json({});
    return serialize_VkSampleCountFlags(name.framebufferDepthSampleCounts);}();
result["members"]["framebufferStencilSampleCounts"]=[&]() {
    json return_AwJrXBJ=json({});
    return serialize_VkSampleCountFlags(name.framebufferStencilSampleCounts);}();
result["members"]["framebufferNoAttachmentsSampleCounts"]=[&]() {
    json return_ytIoamE=json({});
    return serialize_VkSampleCountFlags(name.framebufferNoAttachmentsSampleCounts);}();
result["members"]["maxColorAttachments"]=[&]() {
    json return_AKGZViS=json({});
    return serialize_uint32_t(name.maxColorAttachments);}();
result["members"]["sampledImageColorSampleCounts"]=[&]() {
    json return_mkDrQSY=json({});
    return serialize_VkSampleCountFlags(name.sampledImageColorSampleCounts);}();
result["members"]["sampledImageIntegerSampleCounts"]=[&]() {
    json return_SgXEpCL=json({});
    return serialize_VkSampleCountFlags(name.sampledImageIntegerSampleCounts);}();
result["members"]["sampledImageDepthSampleCounts"]=[&]() {
    json return_BAoIGeG=json({});
    return serialize_VkSampleCountFlags(name.sampledImageDepthSampleCounts);}();
result["members"]["sampledImageStencilSampleCounts"]=[&]() {
    json return_CSYgzVV=json({});
    return serialize_VkSampleCountFlags(name.sampledImageStencilSampleCounts);}();
result["members"]["storageImageSampleCounts"]=[&]() {
    json return_DThuxXZ=json({});
    return serialize_VkSampleCountFlags(name.storageImageSampleCounts);}();
result["members"]["maxSampleMaskWords"]=[&]() {
    json return_sZcQFvH=json({});
    return serialize_uint32_t(name.maxSampleMaskWords);}();
result["members"]["timestampComputeAndGraphics"]=[&]() {
    json return_WctnqIw=json({});
    return_WctnqIw=[&]() {
    json return_ACsVUwC=json({});
    return serialize_uint32_t(name.timestampComputeAndGraphics);}();return return_WctnqIw;}();
result["members"]["timestampPeriod"]=[&]() {
    json return_YRHcRHP=json({});
    return serialize_float(name.timestampPeriod);}();
result["members"]["maxClipDistances"]=[&]() {
    json return_jeRvcTO=json({});
    return serialize_uint32_t(name.maxClipDistances);}();
result["members"]["maxCullDistances"]=[&]() {
    json return_nBHmLme=json({});
    return serialize_uint32_t(name.maxCullDistances);}();
result["members"]["maxCombinedClipAndCullDistances"]=[&]() {
    json return_gLISoVC=json({});
    return serialize_uint32_t(name.maxCombinedClipAndCullDistances);}();
result["members"]["discreteQueuePriorities"]=[&]() {
    json return_oFDVaPY=json({});
    return serialize_uint32_t(name.discreteQueuePriorities);}();
result["members"]["pointSizeRange"]=[&]() {
    json return_NVLPjev=json({});
    
        return_NVLPjev["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_jEyjQeq=json({});
    return serialize_float(name.pointSizeRange[i]);}();
            return_NVLPjev["members"][std::to_string(i)].push_back(temp);
        }
        return return_NVLPjev;
        }();
result["members"]["lineWidthRange"]=[&]() {
    json return_FRotMLa=json({});
    
        return_FRotMLa["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_OeNYzGZ=json({});
    return serialize_float(name.lineWidthRange[i]);}();
            return_FRotMLa["members"][std::to_string(i)].push_back(temp);
        }
        return return_FRotMLa;
        }();
result["members"]["pointSizeGranularity"]=[&]() {
    json return_zhIksBP=json({});
    return serialize_float(name.pointSizeGranularity);}();
result["members"]["lineWidthGranularity"]=[&]() {
    json return_KJAeaAe=json({});
    return serialize_float(name.lineWidthGranularity);}();
result["members"]["strictLines"]=[&]() {
    json return_NeVrjaH=json({});
    return_NeVrjaH=[&]() {
    json return_UkRcLOR=json({});
    return serialize_uint32_t(name.strictLines);}();return return_NeVrjaH;}();
result["members"]["standardSampleLocations"]=[&]() {
    json return_AjFpHRC=json({});
    return_AjFpHRC=[&]() {
    json return_UZzOBJd=json({});
    return serialize_uint32_t(name.standardSampleLocations);}();return return_AjFpHRC;}();
result["members"]["optimalBufferCopyOffsetAlignment"]=[&]() {
    json return_BffygQU=json({});
    return_BffygQU=[&]() {
    json return_htkDzJt=json({});
    return serialize_uint64_t(name.optimalBufferCopyOffsetAlignment);}();return return_BffygQU;}();
result["members"]["optimalBufferCopyRowPitchAlignment"]=[&]() {
    json return_mtadcEz=json({});
    return_mtadcEz=[&]() {
    json return_XMvdlfT=json({});
    return serialize_uint64_t(name.optimalBufferCopyRowPitchAlignment);}();return return_mtadcEz;}();
result["members"]["nonCoherentAtomSize"]=[&]() {
    json return_SWpRnBe=json({});
    return_SWpRnBe=[&]() {
    json return_qWUCGDP=json({});
    return serialize_uint64_t(name.nonCoherentAtomSize);}();return return_SWpRnBe;}();
return result;}

    VkPhysicalDeviceLimits deserialize_VkPhysicalDeviceLimits(json name){
        auto result=VkPhysicalDeviceLimits();
    
[&]() {
result.maxImageDimension1D=deserialize_uint32_t(name["members"]["maxImageDimension1D"]);}();
[&]() {
result.maxImageDimension2D=deserialize_uint32_t(name["members"]["maxImageDimension2D"]);}();
[&]() {
result.maxImageDimension3D=deserialize_uint32_t(name["members"]["maxImageDimension3D"]);}();
[&]() {
result.maxImageDimensionCube=deserialize_uint32_t(name["members"]["maxImageDimensionCube"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.maxTexelBufferElements=deserialize_uint32_t(name["members"]["maxTexelBufferElements"]);}();
[&]() {
result.maxUniformBufferRange=deserialize_uint32_t(name["members"]["maxUniformBufferRange"]);}();
[&]() {
result.maxStorageBufferRange=deserialize_uint32_t(name["members"]["maxStorageBufferRange"]);}();
[&]() {
result.maxPushConstantsSize=deserialize_uint32_t(name["members"]["maxPushConstantsSize"]);}();
[&]() {
result.maxMemoryAllocationCount=deserialize_uint32_t(name["members"]["maxMemoryAllocationCount"]);}();
[&]() {
result.maxSamplerAllocationCount=deserialize_uint32_t(name["members"]["maxSamplerAllocationCount"]);}();
[&]() {
[&]() {
result.bufferImageGranularity=deserialize_uint64_t(name["members"]["bufferImageGranularity"]);}();}();
[&]() {
[&]() {
result.sparseAddressSpaceSize=deserialize_uint64_t(name["members"]["sparseAddressSpaceSize"]);}();}();
[&]() {
result.maxBoundDescriptorSets=deserialize_uint32_t(name["members"]["maxBoundDescriptorSets"]);}();
[&]() {
result.maxPerStageDescriptorSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInputAttachments"]);}();
[&]() {
result.maxPerStageResources=deserialize_uint32_t(name["members"]["maxPerStageResources"]);}();
[&]() {
result.maxDescriptorSetSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSamplers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetSampledImages"]);}();
[&]() {
result.maxDescriptorSetStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageImages"]);}();
[&]() {
result.maxDescriptorSetInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetInputAttachments"]);}();
[&]() {
result.maxVertexInputAttributes=deserialize_uint32_t(name["members"]["maxVertexInputAttributes"]);}();
[&]() {
result.maxVertexInputBindings=deserialize_uint32_t(name["members"]["maxVertexInputBindings"]);}();
[&]() {
result.maxVertexInputAttributeOffset=deserialize_uint32_t(name["members"]["maxVertexInputAttributeOffset"]);}();
[&]() {
result.maxVertexInputBindingStride=deserialize_uint32_t(name["members"]["maxVertexInputBindingStride"]);}();
[&]() {
result.maxVertexOutputComponents=deserialize_uint32_t(name["members"]["maxVertexOutputComponents"]);}();
[&]() {
result.maxTessellationGenerationLevel=deserialize_uint32_t(name["members"]["maxTessellationGenerationLevel"]);}();
[&]() {
result.maxTessellationPatchSize=deserialize_uint32_t(name["members"]["maxTessellationPatchSize"]);}();
[&]() {
result.maxTessellationControlPerVertexInputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexInputComponents"]);}();
[&]() {
result.maxTessellationControlPerVertexOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexOutputComponents"]);}();
[&]() {
result.maxTessellationControlPerPatchOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerPatchOutputComponents"]);}();
[&]() {
result.maxTessellationControlTotalOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlTotalOutputComponents"]);}();
[&]() {
result.maxTessellationEvaluationInputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationInputComponents"]);}();
[&]() {
result.maxTessellationEvaluationOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationOutputComponents"]);}();
[&]() {
result.maxGeometryShaderInvocations=deserialize_uint32_t(name["members"]["maxGeometryShaderInvocations"]);}();
[&]() {
result.maxGeometryInputComponents=deserialize_uint32_t(name["members"]["maxGeometryInputComponents"]);}();
[&]() {
result.maxGeometryOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryOutputComponents"]);}();
[&]() {
result.maxGeometryOutputVertices=deserialize_uint32_t(name["members"]["maxGeometryOutputVertices"]);}();
[&]() {
result.maxGeometryTotalOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryTotalOutputComponents"]);}();
[&]() {
result.maxFragmentInputComponents=deserialize_uint32_t(name["members"]["maxFragmentInputComponents"]);}();
[&]() {
result.maxFragmentOutputAttachments=deserialize_uint32_t(name["members"]["maxFragmentOutputAttachments"]);}();
[&]() {
result.maxFragmentDualSrcAttachments=deserialize_uint32_t(name["members"]["maxFragmentDualSrcAttachments"]);}();
[&]() {
result.maxFragmentCombinedOutputResources=deserialize_uint32_t(name["members"]["maxFragmentCombinedOutputResources"]);}();
[&]() {
result.maxComputeSharedMemorySize=deserialize_uint32_t(name["members"]["maxComputeSharedMemorySize"]);}();
[&]() {

        for (int bpvQarI=0; bpvQarI < 3; bpvQarI++){
            [&]() {
result.maxComputeWorkGroupCount[bpvQarI]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupCount"]["members"][bpvQarI]);}();;
        }
        }();
[&]() {
result.maxComputeWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxComputeWorkGroupInvocations"]);}();
[&]() {

        for (int HtJIJcZ=0; HtJIJcZ < 3; HtJIJcZ++){
            [&]() {
result.maxComputeWorkGroupSize[HtJIJcZ]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupSize"]["members"][HtJIJcZ]);}();;
        }
        }();
[&]() {
result.subPixelPrecisionBits=deserialize_uint32_t(name["members"]["subPixelPrecisionBits"]);}();
[&]() {
result.subTexelPrecisionBits=deserialize_uint32_t(name["members"]["subTexelPrecisionBits"]);}();
[&]() {
result.mipmapPrecisionBits=deserialize_uint32_t(name["members"]["mipmapPrecisionBits"]);}();
[&]() {
result.maxDrawIndexedIndexValue=deserialize_uint32_t(name["members"]["maxDrawIndexedIndexValue"]);}();
[&]() {
result.maxDrawIndirectCount=deserialize_uint32_t(name["members"]["maxDrawIndirectCount"]);}();
[&]() {
result.maxSamplerLodBias=deserialize_float(name["members"]["maxSamplerLodBias"]);}();
[&]() {
result.maxSamplerAnisotropy=deserialize_float(name["members"]["maxSamplerAnisotropy"]);}();
[&]() {
result.maxViewports=deserialize_uint32_t(name["members"]["maxViewports"]);}();
[&]() {

        for (int AQeTHFU=0; AQeTHFU < 2; AQeTHFU++){
            [&]() {
result.maxViewportDimensions[AQeTHFU]=deserialize_uint32_t(name["members"]["maxViewportDimensions"]["members"][AQeTHFU]);}();;
        }
        }();
[&]() {

        for (int okPLbTT=0; okPLbTT < 2; okPLbTT++){
            [&]() {
result.viewportBoundsRange[okPLbTT]=deserialize_float(name["members"]["viewportBoundsRange"]["members"][okPLbTT]);}();;
        }
        }();
[&]() {
result.viewportSubPixelBits=deserialize_uint32_t(name["members"]["viewportSubPixelBits"]);}();
[&]() {
result.minMemoryMapAlignment=deserialize_size_t(name["members"]["minMemoryMapAlignment"]);}();
[&]() {
[&]() {
result.minTexelBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minTexelBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minUniformBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minUniformBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minStorageBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minStorageBufferOffsetAlignment"]);}();}();
[&]() {
result.minTexelOffset=deserialize_int32_t(name["members"]["minTexelOffset"]);}();
[&]() {
result.maxTexelOffset=deserialize_uint32_t(name["members"]["maxTexelOffset"]);}();
[&]() {
result.minTexelGatherOffset=deserialize_int32_t(name["members"]["minTexelGatherOffset"]);}();
[&]() {
result.maxTexelGatherOffset=deserialize_uint32_t(name["members"]["maxTexelGatherOffset"]);}();
[&]() {
result.minInterpolationOffset=deserialize_float(name["members"]["minInterpolationOffset"]);}();
[&]() {
result.maxInterpolationOffset=deserialize_float(name["members"]["maxInterpolationOffset"]);}();
[&]() {
result.subPixelInterpolationOffsetBits=deserialize_uint32_t(name["members"]["subPixelInterpolationOffsetBits"]);}();
[&]() {
result.maxFramebufferWidth=deserialize_uint32_t(name["members"]["maxFramebufferWidth"]);}();
[&]() {
result.maxFramebufferHeight=deserialize_uint32_t(name["members"]["maxFramebufferHeight"]);}();
[&]() {
result.maxFramebufferLayers=deserialize_uint32_t(name["members"]["maxFramebufferLayers"]);}();
[&]() {
result.framebufferColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferColorSampleCounts"]);}();
[&]() {
result.framebufferDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferDepthSampleCounts"]);}();
[&]() {
result.framebufferStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferStencilSampleCounts"]);}();
[&]() {
result.framebufferNoAttachmentsSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferNoAttachmentsSampleCounts"]);}();
[&]() {
result.maxColorAttachments=deserialize_uint32_t(name["members"]["maxColorAttachments"]);}();
[&]() {
result.sampledImageColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageColorSampleCounts"]);}();
[&]() {
result.sampledImageIntegerSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageIntegerSampleCounts"]);}();
[&]() {
result.sampledImageDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageDepthSampleCounts"]);}();
[&]() {
result.sampledImageStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageStencilSampleCounts"]);}();
[&]() {
result.storageImageSampleCounts=deserialize_VkSampleCountFlags(name["members"]["storageImageSampleCounts"]);}();
[&]() {
result.maxSampleMaskWords=deserialize_uint32_t(name["members"]["maxSampleMaskWords"]);}();
[&]() {
[&]() {
result.timestampComputeAndGraphics=deserialize_uint32_t(name["members"]["timestampComputeAndGraphics"]);}();}();
[&]() {
result.timestampPeriod=deserialize_float(name["members"]["timestampPeriod"]);}();
[&]() {
result.maxClipDistances=deserialize_uint32_t(name["members"]["maxClipDistances"]);}();
[&]() {
result.maxCullDistances=deserialize_uint32_t(name["members"]["maxCullDistances"]);}();
[&]() {
result.maxCombinedClipAndCullDistances=deserialize_uint32_t(name["members"]["maxCombinedClipAndCullDistances"]);}();
[&]() {
result.discreteQueuePriorities=deserialize_uint32_t(name["members"]["discreteQueuePriorities"]);}();
[&]() {

        for (int iEiIKZJ=0; iEiIKZJ < 2; iEiIKZJ++){
            [&]() {
result.pointSizeRange[iEiIKZJ]=deserialize_float(name["members"]["pointSizeRange"]["members"][iEiIKZJ]);}();;
        }
        }();
[&]() {

        for (int jvBYHYG=0; jvBYHYG < 2; jvBYHYG++){
            [&]() {
result.lineWidthRange[jvBYHYG]=deserialize_float(name["members"]["lineWidthRange"]["members"][jvBYHYG]);}();;
        }
        }();
[&]() {
result.pointSizeGranularity=deserialize_float(name["members"]["pointSizeGranularity"]);}();
[&]() {
result.lineWidthGranularity=deserialize_float(name["members"]["lineWidthGranularity"]);}();
[&]() {
[&]() {
result.strictLines=deserialize_uint32_t(name["members"]["strictLines"]);}();}();
[&]() {
[&]() {
result.standardSampleLocations=deserialize_uint32_t(name["members"]["standardSampleLocations"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyOffsetAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyRowPitchAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyRowPitchAlignment"]);}();}();
[&]() {
[&]() {
result.nonCoherentAtomSize=deserialize_uint64_t(name["members"]["nonCoherentAtomSize"]);}();}();
return result;}

    json serialize_VkSemaphoreCreateInfo(VkSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SmxxkbC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tlpmKUc=json({});
    
        if (name.pNext==NULL){
            return_tlpmKUc["null"]=true;
            return return_tlpmKUc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qVBpXJb=json({});
    return serialize_VkSemaphoreCreateFlags(name.flags);}();
return result;}

    VkSemaphoreCreateInfo deserialize_VkSemaphoreCreateInfo(json name){
        auto result=VkSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oGqrOpo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oGqrOpo=NULL;
        }
    temp_oGqrOpo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oGqrOpo;}();
[&]() {
result.flags=deserialize_VkSemaphoreCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfo(VkQueryPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GbVlTat=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kQXqVXz=json({});
    
        if (name.pNext==NULL){
            return_kQXqVXz["null"]=true;
            return return_kQXqVXz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_CAkmiAn=json({});
    return serialize_VkQueryPoolCreateFlags(name.flags);}();
result["members"]["queryType"]=[&]() {
    json return_clBORZZ=json({});
    return serialize_VkQueryType(name.queryType);}();
result["members"]["queryCount"]=[&]() {
    json return_JsGKDGp=json({});
    return serialize_uint32_t(name.queryCount);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_yXCsMrM=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkQueryPoolCreateInfo deserialize_VkQueryPoolCreateInfo(json name){
        auto result=VkQueryPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vzCanqN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vzCanqN=NULL;
        }
    temp_vzCanqN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vzCanqN;}();
[&]() {
result.flags=deserialize_VkQueryPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queryType=deserialize_VkQueryType(name["members"]["queryType"]);}();
[&]() {
result.queryCount=deserialize_uint32_t(name["members"]["queryCount"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkFramebufferCreateInfo(VkFramebufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jUohMKY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NxPpeWk=json({});
    
        if (name.pNext==NULL){
            return_NxPpeWk["null"]=true;
            return return_NxPpeWk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zuOsKAp=json({});
    return serialize_VkFramebufferCreateFlags(name.flags);}();
result["members"]["renderPass"]=[&]() {
    json return_XBbatpr=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["attachmentCount"]=[&]() {
    json return_AbayBzR=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_ojFskWz=json({});
    
        if (name.pAttachments==NULL){
            return_ojFskWz["null"]=true;
            return return_ojFskWz;
        }
        
        return_ojFskWz["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_EOMtKhd=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_ojFskWz["members"][std::to_string(i)].push_back(temp);
        }
        return return_ojFskWz;
        }();
result["members"]["width"]=[&]() {
    json return_rJLDYAa=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_MoxBZNJ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layers"]=[&]() {
    json return_GJHQfHZ=json({});
    return serialize_uint32_t(name.layers);}();
return result;}

    VkFramebufferCreateInfo deserialize_VkFramebufferCreateInfo(json name){
        auto result=VkFramebufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QXkQahC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QXkQahC=NULL;
        }
    temp_QXkQahC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QXkQahC;}();
[&]() {
result.flags=deserialize_VkFramebufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_xHobaQp;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_xHobaQp=NULL;
        }
    temp_xHobaQp=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int WOKujjO=0; WOKujjO < result.attachmentCount; WOKujjO++){
            [&]() {
temp_xHobaQp[WOKujjO]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][WOKujjO]);}();;
        }
        }();result.pAttachments=temp_xHobaQp;}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layers=deserialize_uint32_t(name["members"]["layers"]);}();
return result;}

    json serialize_VkDrawIndirectCommand(VkDrawIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["vertexCount"]=[&]() {
    json return_ceXbShK=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_KyOAsrN=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstVertex"]=[&]() {
    json return_TJFhTcx=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["firstInstance"]=[&]() {
    json return_pBubEFn=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndirectCommand deserialize_VkDrawIndirectCommand(json name){
        auto result=VkDrawIndirectCommand();
    
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDrawIndexedIndirectCommand(VkDrawIndexedIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["indexCount"]=[&]() {
    json return_CJcjSxG=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_ZHKUtIg=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstIndex"]=[&]() {
    json return_zXqLIdd=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["vertexOffset"]=[&]() {
    json return_jkriVcg=json({});
    return serialize_int32_t(name.vertexOffset);}();
result["members"]["firstInstance"]=[&]() {
    json return_NNHYPIP=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndexedIndirectCommand deserialize_VkDrawIndexedIndirectCommand(json name){
        auto result=VkDrawIndexedIndirectCommand();
    
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDispatchIndirectCommand(VkDispatchIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ggTIYam=json({});
    return serialize_uint32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_nglZdVS=json({});
    return serialize_uint32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_GHVfMoG=json({});
    return serialize_uint32_t(name.z);}();
return result;}

    VkDispatchIndirectCommand deserialize_VkDispatchIndirectCommand(json name){
        auto result=VkDispatchIndirectCommand();
    
[&]() {
result.x=deserialize_uint32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_uint32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_uint32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkMultiDrawInfoEXT(VkMultiDrawInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstVertex"]=[&]() {
    json return_zQpmyKm=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["vertexCount"]=[&]() {
    json return_MQxzvTr=json({});
    return serialize_uint32_t(name.vertexCount);}();
return result;}

    VkMultiDrawInfoEXT deserialize_VkMultiDrawInfoEXT(json name){
        auto result=VkMultiDrawInfoEXT();
    
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
return result;}

    json serialize_VkMultiDrawIndexedInfoEXT(VkMultiDrawIndexedInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstIndex"]=[&]() {
    json return_xhRBkFb=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["indexCount"]=[&]() {
    json return_gHdLfCm=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["vertexOffset"]=[&]() {
    json return_BzNEtlT=json({});
    return serialize_int32_t(name.vertexOffset);}();
return result;}

    VkMultiDrawIndexedInfoEXT deserialize_VkMultiDrawIndexedInfoEXT(json name){
        auto result=VkMultiDrawIndexedInfoEXT();
    
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
return result;}

    json serialize_VkSubmitInfo(VkSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RuUKgtc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PAzSeWm=json({});
    
        if (name.pNext==NULL){
            return_PAzSeWm["null"]=true;
            return return_PAzSeWm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_tenSjOp=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_pFgYlcw=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_pFgYlcw["null"]=true;
            return return_pFgYlcw;
        }
        
        return_pFgYlcw["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_LJQwYji=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_pFgYlcw["members"][std::to_string(i)].push_back(temp);
        }
        return return_pFgYlcw;
        }();
result["members"]["pWaitDstStageMask"]=[&]() {
    json return_NaVZYTm=json({});
    
        if (name.pWaitDstStageMask==NULL){
            return_NaVZYTm["null"]=true;
            return return_NaVZYTm;
        }
        
        return_NaVZYTm["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_ikiXuGd=json({});
    return serialize_VkPipelineStageFlags(name.pWaitDstStageMask[i]);}();
            return_NaVZYTm["members"][std::to_string(i)].push_back(temp);
        }
        return return_NaVZYTm;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_NalNZcj=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBuffers"]=[&]() {
    json return_NlFPwJk=json({});
    
        if (name.pCommandBuffers==NULL){
            return_NlFPwJk["null"]=true;
            return return_NlFPwJk;
        }
        
        return_NlFPwJk["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_GJLAMvo=json({});
    return serialize_VkCommandBuffer(name.pCommandBuffers[i]);}();
            return_NlFPwJk["members"][std::to_string(i)].push_back(temp);
        }
        return return_NlFPwJk;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_yPKUwIH=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_eSHloKx=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_eSHloKx["null"]=true;
            return return_eSHloKx;
        }
        
        return_eSHloKx["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_oZhgWdo=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_eSHloKx["members"][std::to_string(i)].push_back(temp);
        }
        return return_eSHloKx;
        }();
return result;}

    VkSubmitInfo deserialize_VkSubmitInfo(json name){
        auto result=VkSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eVaRELT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eVaRELT=NULL;
        }
    temp_eVaRELT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eVaRELT;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_lEDlyWN;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_lEDlyWN=NULL;
        }
    temp_lEDlyWN=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int xnzAYRA=0; xnzAYRA < result.waitSemaphoreCount; xnzAYRA++){
            [&]() {
temp_lEDlyWN[xnzAYRA]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][xnzAYRA]);}();;
        }
        }();result.pWaitSemaphores=temp_lEDlyWN;}();
[&]() {
VkPipelineStageFlags* temp_ILTnTrV;[&]() {

        if (name["members"]["pWaitDstStageMask"].contains("null")){
        temp_ILTnTrV=NULL;
        }
    temp_ILTnTrV=(VkPipelineStageFlags*)malloc(result.waitSemaphoreCount*sizeof(VkPipelineStageFlags));
        for (int tbhpNTz=0; tbhpNTz < result.waitSemaphoreCount; tbhpNTz++){
            [&]() {
temp_ILTnTrV[tbhpNTz]=deserialize_VkPipelineStageFlags(name["members"]["pWaitDstStageMask"]["members"][tbhpNTz]);}();;
        }
        }();result.pWaitDstStageMask=temp_ILTnTrV;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
VkCommandBuffer* temp_bMMBKsu;[&]() {

        if (name["members"]["pCommandBuffers"].contains("null")){
        temp_bMMBKsu=NULL;
        }
    temp_bMMBKsu=(VkCommandBuffer*)malloc(result.commandBufferCount*sizeof(VkCommandBuffer));
        for (int jARdHeE=0; jARdHeE < result.commandBufferCount; jARdHeE++){
            [&]() {
temp_bMMBKsu[jARdHeE]=deserialize_VkCommandBuffer(name["members"]["pCommandBuffers"]["members"][jARdHeE]);}();;
        }
        }();result.pCommandBuffers=temp_bMMBKsu;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_nBkxWbC;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_nBkxWbC=NULL;
        }
    temp_nBkxWbC=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int qYbEXnr=0; qYbEXnr < result.signalSemaphoreCount; qYbEXnr++){
            [&]() {
temp_nBkxWbC[qYbEXnr]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][qYbEXnr]);}();;
        }
        }();result.pSignalSemaphores=temp_nBkxWbC;}();
return result;}

    json serialize_VkDisplayPropertiesKHR(VkDisplayPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["display"]=[&]() {
    json return_kAOVheB=json({});
    return serialize_VkDisplayKHR(name.display);}();
result["members"]["displayName"]=[&]() {
    json return_nTXPqZh=json({});
    
        if (name.displayName==NULL){
            return_nTXPqZh["null"]=true;
            return return_nTXPqZh;
        }
        return serialize_char_p(name.displayName);
}();
result["members"]["physicalDimensions"]=[&]() {
    json return_cQUUmEc=json({});
    return serialize_VkExtent2D(name.physicalDimensions);}();
result["members"]["physicalResolution"]=[&]() {
    json return_ZpFfWcA=json({});
    return serialize_VkExtent2D(name.physicalResolution);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_bEgoyWU=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["planeReorderPossible"]=[&]() {
    json return_bkUKFlO=json({});
    return_bkUKFlO=[&]() {
    json return_ZBcyujM=json({});
    return serialize_uint32_t(name.planeReorderPossible);}();return return_bkUKFlO;}();
result["members"]["persistentContent"]=[&]() {
    json return_fwvKjRf=json({});
    return_fwvKjRf=[&]() {
    json return_AoZgtET=json({});
    return serialize_uint32_t(name.persistentContent);}();return return_fwvKjRf;}();
return result;}

    VkDisplayPropertiesKHR deserialize_VkDisplayPropertiesKHR(json name){
        auto result=VkDisplayPropertiesKHR();
    
[&]() {
result.display=deserialize_VkDisplayKHR(name["members"]["display"]);}();
[&]() {
char* temp_xPYCVGD;[&]() {

        if (name["members"]["displayName"].contains("null")){
        temp_xPYCVGD=NULL;
        }
    temp_xPYCVGD=deserialize_char_p(name["members"]["displayName"]);
}();result.displayName=temp_xPYCVGD;}();
[&]() {
result.physicalDimensions=deserialize_VkExtent2D(name["members"]["physicalDimensions"]);}();
[&]() {
result.physicalResolution=deserialize_VkExtent2D(name["members"]["physicalResolution"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
[&]() {
result.planeReorderPossible=deserialize_uint32_t(name["members"]["planeReorderPossible"]);}();}();
[&]() {
[&]() {
result.persistentContent=deserialize_uint32_t(name["members"]["persistentContent"]);}();}();
return result;}

    json serialize_VkDisplayPlanePropertiesKHR(VkDisplayPlanePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["currentDisplay"]=[&]() {
    json return_OVnZoRa=json({});
    return serialize_VkDisplayKHR(name.currentDisplay);}();
result["members"]["currentStackIndex"]=[&]() {
    json return_IhyCqfH=json({});
    return serialize_uint32_t(name.currentStackIndex);}();
return result;}

    VkDisplayPlanePropertiesKHR deserialize_VkDisplayPlanePropertiesKHR(json name){
        auto result=VkDisplayPlanePropertiesKHR();
    
[&]() {
result.currentDisplay=deserialize_VkDisplayKHR(name["members"]["currentDisplay"]);}();
[&]() {
result.currentStackIndex=deserialize_uint32_t(name["members"]["currentStackIndex"]);}();
return result;}

    json serialize_VkDisplayModeParametersKHR(VkDisplayModeParametersKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["visibleRegion"]=[&]() {
    json return_aPToufY=json({});
    return serialize_VkExtent2D(name.visibleRegion);}();
result["members"]["refreshRate"]=[&]() {
    json return_XDpkLgZ=json({});
    return serialize_uint32_t(name.refreshRate);}();
return result;}

    VkDisplayModeParametersKHR deserialize_VkDisplayModeParametersKHR(json name){
        auto result=VkDisplayModeParametersKHR();
    
[&]() {
result.visibleRegion=deserialize_VkExtent2D(name["members"]["visibleRegion"]);}();
[&]() {
result.refreshRate=deserialize_uint32_t(name["members"]["refreshRate"]);}();
return result;}

    json serialize_VkDisplayModePropertiesKHR(VkDisplayModePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["displayMode"]=[&]() {
    json return_bIStkIx=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["parameters"]=[&]() {
    json return_ReptjgY=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModePropertiesKHR deserialize_VkDisplayModePropertiesKHR(json name){
        auto result=VkDisplayModePropertiesKHR();
    
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayModeCreateInfoKHR(VkDisplayModeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jPPMHyp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vrajpqS=json({});
    
        if (name.pNext==NULL){
            return_vrajpqS["null"]=true;
            return return_vrajpqS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_rkliWBw=json({});
    return serialize_VkDisplayModeCreateFlagsKHR(name.flags);}();
result["members"]["parameters"]=[&]() {
    json return_oudvaGE=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModeCreateInfoKHR deserialize_VkDisplayModeCreateInfoKHR(json name){
        auto result=VkDisplayModeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cfBKssz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cfBKssz=NULL;
        }
    temp_cfBKssz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cfBKssz;}();
[&]() {
result.flags=deserialize_VkDisplayModeCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilitiesKHR(VkDisplayPlaneCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["supportedAlpha"]=[&]() {
    json return_vYlWXWd=json({});
    return serialize_VkDisplayPlaneAlphaFlagsKHR(name.supportedAlpha);}();
result["members"]["minSrcPosition"]=[&]() {
    json return_heyoSXQ=json({});
    return serialize_VkOffset2D(name.minSrcPosition);}();
result["members"]["maxSrcPosition"]=[&]() {
    json return_eBobEma=json({});
    return serialize_VkOffset2D(name.maxSrcPosition);}();
result["members"]["minSrcExtent"]=[&]() {
    json return_NQAvMYd=json({});
    return serialize_VkExtent2D(name.minSrcExtent);}();
result["members"]["maxSrcExtent"]=[&]() {
    json return_UjDEqLk=json({});
    return serialize_VkExtent2D(name.maxSrcExtent);}();
result["members"]["minDstPosition"]=[&]() {
    json return_fBvFyLT=json({});
    return serialize_VkOffset2D(name.minDstPosition);}();
result["members"]["maxDstPosition"]=[&]() {
    json return_fXtkKqM=json({});
    return serialize_VkOffset2D(name.maxDstPosition);}();
result["members"]["minDstExtent"]=[&]() {
    json return_OBpZcOx=json({});
    return serialize_VkExtent2D(name.minDstExtent);}();
result["members"]["maxDstExtent"]=[&]() {
    json return_dqsPPui=json({});
    return serialize_VkExtent2D(name.maxDstExtent);}();
return result;}

    VkDisplayPlaneCapabilitiesKHR deserialize_VkDisplayPlaneCapabilitiesKHR(json name){
        auto result=VkDisplayPlaneCapabilitiesKHR();
    
[&]() {
result.supportedAlpha=deserialize_VkDisplayPlaneAlphaFlagsKHR(name["members"]["supportedAlpha"]);}();
[&]() {
result.minSrcPosition=deserialize_VkOffset2D(name["members"]["minSrcPosition"]);}();
[&]() {
result.maxSrcPosition=deserialize_VkOffset2D(name["members"]["maxSrcPosition"]);}();
[&]() {
result.minSrcExtent=deserialize_VkExtent2D(name["members"]["minSrcExtent"]);}();
[&]() {
result.maxSrcExtent=deserialize_VkExtent2D(name["members"]["maxSrcExtent"]);}();
[&]() {
result.minDstPosition=deserialize_VkOffset2D(name["members"]["minDstPosition"]);}();
[&]() {
result.maxDstPosition=deserialize_VkOffset2D(name["members"]["maxDstPosition"]);}();
[&]() {
result.minDstExtent=deserialize_VkExtent2D(name["members"]["minDstExtent"]);}();
[&]() {
result.maxDstExtent=deserialize_VkExtent2D(name["members"]["maxDstExtent"]);}();
return result;}

    json serialize_VkDisplaySurfaceCreateInfoKHR(VkDisplaySurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nKJfVpg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KEcLaUG=json({});
    
        if (name.pNext==NULL){
            return_KEcLaUG["null"]=true;
            return return_KEcLaUG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_CbttVQf=json({});
    return serialize_VkDisplaySurfaceCreateFlagsKHR(name.flags);}();
result["members"]["displayMode"]=[&]() {
    json return_iEVonlE=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["planeIndex"]=[&]() {
    json return_SlPduYv=json({});
    return serialize_uint32_t(name.planeIndex);}();
result["members"]["planeStackIndex"]=[&]() {
    json return_MSKxQME=json({});
    return serialize_uint32_t(name.planeStackIndex);}();
result["members"]["transform"]=[&]() {
    json return_AZLSNyl=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["globalAlpha"]=[&]() {
    json return_RPYvZTU=json({});
    return serialize_float(name.globalAlpha);}();
result["members"]["alphaMode"]=[&]() {
    json return_xMXAGxP=json({});
    return serialize_VkDisplayPlaneAlphaFlagBitsKHR(name.alphaMode);}();
result["members"]["imageExtent"]=[&]() {
    json return_jUrMhNn=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
return result;}

    VkDisplaySurfaceCreateInfoKHR deserialize_VkDisplaySurfaceCreateInfoKHR(json name){
        auto result=VkDisplaySurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zqYzPPG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zqYzPPG=NULL;
        }
    temp_zqYzPPG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zqYzPPG;}();
[&]() {
result.flags=deserialize_VkDisplaySurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
[&]() {
result.planeStackIndex=deserialize_uint32_t(name["members"]["planeStackIndex"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.globalAlpha=deserialize_float(name["members"]["globalAlpha"]);}();
[&]() {
result.alphaMode=deserialize_VkDisplayPlaneAlphaFlagBitsKHR(name["members"]["alphaMode"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkDisplayPresentInfoKHR(VkDisplayPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BarLYwD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FQPNmJf=json({});
    
        if (name.pNext==NULL){
            return_FQPNmJf["null"]=true;
            return return_FQPNmJf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcRect"]=[&]() {
    json return_YbHYeQP=json({});
    return serialize_VkRect2D(name.srcRect);}();
result["members"]["dstRect"]=[&]() {
    json return_hXVTRgY=json({});
    return serialize_VkRect2D(name.dstRect);}();
result["members"]["persistent"]=[&]() {
    json return_zkWffUn=json({});
    return_zkWffUn=[&]() {
    json return_qoYSuPO=json({});
    return serialize_uint32_t(name.persistent);}();return return_zkWffUn;}();
return result;}

    VkDisplayPresentInfoKHR deserialize_VkDisplayPresentInfoKHR(json name){
        auto result=VkDisplayPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OYDXUtK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OYDXUtK=NULL;
        }
    temp_OYDXUtK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OYDXUtK;}();
[&]() {
result.srcRect=deserialize_VkRect2D(name["members"]["srcRect"]);}();
[&]() {
result.dstRect=deserialize_VkRect2D(name["members"]["dstRect"]);}();
[&]() {
[&]() {
result.persistent=deserialize_uint32_t(name["members"]["persistent"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesKHR(VkSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minImageCount"]=[&]() {
    json return_QgVNojj=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_klvzVjG=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_osYZLum=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_vShcyzq=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_wWYHokq=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_vptHlPP=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_cwaqbsG=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_zHcDKCE=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_rwFbRou=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_pGrWcMU=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
return result;}

    VkSurfaceCapabilitiesKHR deserialize_VkSurfaceCapabilitiesKHR(json name){
        auto result=VkSurfaceCapabilitiesKHR();
    
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
return result;}

    json serialize_VkXlibSurfaceCreateInfoKHR(VkXlibSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AxRuyIr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QUhFZya=json({});
    
        if (name.pNext==NULL){
            return_QUhFZya["null"]=true;
            return return_QUhFZya;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UXmvCjG=json({});
    return serialize_VkXlibSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["dpy"]=[&]() {
    json return_NvpyHIa=json({});
    
        if (name.dpy==NULL){
            return_NvpyHIa["null"]=true;
            return return_NvpyHIa;
        }
        return serialize_Display_p(name.dpy);
}();
result["members"]["window"]=[&]() {
    json return_JbNpFIT=json({});
    return serialize_Window(name.window);
}();
return result;}

    VkXlibSurfaceCreateInfoKHR deserialize_VkXlibSurfaceCreateInfoKHR(json name){
        auto result=VkXlibSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JveLOXW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JveLOXW=NULL;
        }
    temp_JveLOXW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JveLOXW;}();
[&]() {
result.flags=deserialize_VkXlibSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["dpy"].contains("null")){
        result.dpy=NULL;
        }
    result.dpy=deserialize_Display_p(name["members"]["dpy"]);
}();
[&]() {
result.window=deserialize_Window(name["members"]["window"]);
}();
return result;}

    json serialize_VkXcbSurfaceCreateInfoKHR(VkXcbSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZLHxMVN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zpcEZFR=json({});
    
        if (name.pNext==NULL){
            return_zpcEZFR["null"]=true;
            return return_zpcEZFR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ADqNXip=json({});
    return serialize_VkXcbSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["connection"]=[&]() {
    json return_negZQNR=json({});
    
        if (name.connection==NULL){
            return_negZQNR["null"]=true;
            return return_negZQNR;
        }
        return serialize_xcb_connection_t_p(name.connection);
}();
result["members"]["window"]=[&]() {
    json return_QNxEnDK=json({});
    return serialize_xcb_window_t(name.window);
}();
return result;}

    VkXcbSurfaceCreateInfoKHR deserialize_VkXcbSurfaceCreateInfoKHR(json name){
        auto result=VkXcbSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BNbGczf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BNbGczf=NULL;
        }
    temp_BNbGczf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BNbGczf;}();
[&]() {
result.flags=deserialize_VkXcbSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["connection"].contains("null")){
        result.connection=NULL;
        }
    result.connection=deserialize_xcb_connection_t_p(name["members"]["connection"]);
}();
[&]() {
result.window=deserialize_xcb_window_t(name["members"]["window"]);
}();
return result;}

    json serialize_VkSurfaceFormatKHR(VkSurfaceFormatKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["format"]=[&]() {
    json return_oMaDbjB=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["colorSpace"]=[&]() {
    json return_nkztUmD=json({});
    return serialize_VkColorSpaceKHR(name.colorSpace);}();
return result;}

    VkSurfaceFormatKHR deserialize_VkSurfaceFormatKHR(json name){
        auto result=VkSurfaceFormatKHR();
    
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.colorSpace=deserialize_VkColorSpaceKHR(name["members"]["colorSpace"]);}();
return result;}

    json serialize_VkSwapchainCreateInfoKHR(VkSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MjDDfAM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cBpJwQF=json({});
    
        if (name.pNext==NULL){
            return_cBpJwQF["null"]=true;
            return return_cBpJwQF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yxvfmCr=json({});
    return serialize_VkSwapchainCreateFlagsKHR(name.flags);}();
result["members"]["surface"]=[&]() {
    json return_GzeNkWC=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
result["members"]["minImageCount"]=[&]() {
    json return_jeFMVdj=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["imageFormat"]=[&]() {
    json return_qJpyyOy=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["imageColorSpace"]=[&]() {
    json return_QQmUoLM=json({});
    return serialize_VkColorSpaceKHR(name.imageColorSpace);}();
result["members"]["imageExtent"]=[&]() {
    json return_aAPgVQq=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
result["members"]["imageArrayLayers"]=[&]() {
    json return_lDxKoPZ=json({});
    return serialize_uint32_t(name.imageArrayLayers);}();
result["members"]["imageUsage"]=[&]() {
    json return_YtbIpdv=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
result["members"]["imageSharingMode"]=[&]() {
    json return_RQwMZea=json({});
    return serialize_VkSharingMode(name.imageSharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_cgXluAm=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_TcJkncK=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_TcJkncK["null"]=true;
            return return_TcJkncK;
        }
        
        return_TcJkncK["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_cgzvihi=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_TcJkncK["members"][std::to_string(i)].push_back(temp);
        }
        return return_TcJkncK;
        }();
result["members"]["preTransform"]=[&]() {
    json return_hMGvMZS=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.preTransform);}();
result["members"]["compositeAlpha"]=[&]() {
    json return_PAAhmxw=json({});
    return serialize_VkCompositeAlphaFlagBitsKHR(name.compositeAlpha);}();
result["members"]["presentMode"]=[&]() {
    json return_CzozdrK=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
result["members"]["clipped"]=[&]() {
    json return_lWWlpML=json({});
    return_lWWlpML=[&]() {
    json return_zfMCwdf=json({});
    return serialize_uint32_t(name.clipped);}();return return_lWWlpML;}();
result["members"]["oldSwapchain"]=[&]() {
    json return_XYIHCyB=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
result["members"]["oldSwapchain"]=[&]() {
    json return_FHOHOSn=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
return result;}

    VkSwapchainCreateInfoKHR deserialize_VkSwapchainCreateInfoKHR(json name){
        auto result=VkSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IVTBtPU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IVTBtPU=NULL;
        }
    temp_IVTBtPU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IVTBtPU;}();
[&]() {
result.flags=deserialize_VkSwapchainCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.imageColorSpace=deserialize_VkColorSpaceKHR(name["members"]["imageColorSpace"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
[&]() {
result.imageArrayLayers=deserialize_uint32_t(name["members"]["imageArrayLayers"]);}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
[&]() {
result.imageSharingMode=deserialize_VkSharingMode(name["members"]["imageSharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_BoQAIHJ;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_BoQAIHJ=NULL;
        }
    temp_BoQAIHJ=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int CIhgIOm=0; CIhgIOm < result.queueFamilyIndexCount; CIhgIOm++){
            [&]() {
temp_BoQAIHJ[CIhgIOm]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][CIhgIOm]);}();;
        }
        }();result.pQueueFamilyIndices=temp_BoQAIHJ;}();
[&]() {
result.preTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["preTransform"]);}();
[&]() {
result.compositeAlpha=deserialize_VkCompositeAlphaFlagBitsKHR(name["members"]["compositeAlpha"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
[&]() {
[&]() {
result.clipped=deserialize_uint32_t(name["members"]["clipped"]);}();}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
return result;}

    json serialize_VkPresentInfoKHR(VkPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TENFAMp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VketfOJ=json({});
    
        if (name.pNext==NULL){
            return_VketfOJ["null"]=true;
            return return_VketfOJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_vXlgqPw=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_BbBPFtO=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_BbBPFtO["null"]=true;
            return return_BbBPFtO;
        }
        
        return_BbBPFtO["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_HjJzUtz=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_BbBPFtO["members"][std::to_string(i)].push_back(temp);
        }
        return return_BbBPFtO;
        }();
result["members"]["swapchainCount"]=[&]() {
    json return_JCBeqQz=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pSwapchains"]=[&]() {
    json return_TsafYxi=json({});
    
        if (name.pSwapchains==NULL){
            return_TsafYxi["null"]=true;
            return return_TsafYxi;
        }
        
        return_TsafYxi["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_OFgVHfk=json({});
    return serialize_VkSwapchainKHR(name.pSwapchains[i]);}();
            return_TsafYxi["members"][std::to_string(i)].push_back(temp);
        }
        return return_TsafYxi;
        }();
result["members"]["pImageIndices"]=[&]() {
    json return_vvqkmUe=json({});
    
        if (name.pImageIndices==NULL){
            return_vvqkmUe["null"]=true;
            return return_vvqkmUe;
        }
        
        return_vvqkmUe["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_uMGSXvl=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_vvqkmUe["members"][std::to_string(i)].push_back(temp);
        }
        return return_vvqkmUe;
        }();
result["members"]["pResults"]=[&]() {
    json return_sfbowYl=json({});
    
        if (name.pResults==NULL){
            return_sfbowYl["null"]=true;
            return return_sfbowYl;
        }
        
        return_sfbowYl["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_sFVBJqO=json({});
    return serialize_VkResult(name.pResults[i]);}();
            return_sfbowYl["members"][std::to_string(i)].push_back(temp);
        }
        return return_sfbowYl;
        }();
return result;}

    VkPresentInfoKHR deserialize_VkPresentInfoKHR(json name){
        auto result=VkPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_STIMHEy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_STIMHEy=NULL;
        }
    temp_STIMHEy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_STIMHEy;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_ybrKSDQ;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_ybrKSDQ=NULL;
        }
    temp_ybrKSDQ=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int JiBRNex=0; JiBRNex < result.waitSemaphoreCount; JiBRNex++){
            [&]() {
temp_ybrKSDQ[JiBRNex]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][JiBRNex]);}();;
        }
        }();result.pWaitSemaphores=temp_ybrKSDQ;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkSwapchainKHR* temp_JvCJtKr;[&]() {

        if (name["members"]["pSwapchains"].contains("null")){
        temp_JvCJtKr=NULL;
        }
    temp_JvCJtKr=(VkSwapchainKHR*)malloc(result.swapchainCount*sizeof(VkSwapchainKHR));
        for (int rkInXGe=0; rkInXGe < result.swapchainCount; rkInXGe++){
            [&]() {
temp_JvCJtKr[rkInXGe]=deserialize_VkSwapchainKHR(name["members"]["pSwapchains"]["members"][rkInXGe]);}();;
        }
        }();result.pSwapchains=temp_JvCJtKr;}();
[&]() {
uint32_t* temp_xOwMeBs;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_xOwMeBs=NULL;
        }
    temp_xOwMeBs=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int gdyidnm=0; gdyidnm < result.swapchainCount; gdyidnm++){
            [&]() {
temp_xOwMeBs[gdyidnm]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][gdyidnm]);}();;
        }
        }();result.pImageIndices=temp_xOwMeBs;}();
[&]() {

        if (name["members"]["pResults"].contains("null")){
        result.pResults=NULL;
        }
    result.pResults=(VkResult*)malloc(result.swapchainCount*sizeof(VkResult));
        for (int PEITeDX=0; PEITeDX < result.swapchainCount; PEITeDX++){
            [&]() {
result.pResults[PEITeDX]=deserialize_VkResult(name["members"]["pResults"]["members"][PEITeDX]);}();;
        }
        }();
return result;}

    json serialize_VkDebugReportCallbackCreateInfoEXT(VkDebugReportCallbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KuNQFLy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PBYsYDk=json({});
    
        if (name.pNext==NULL){
            return_PBYsYDk["null"]=true;
            return return_PBYsYDk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mPZLHwO=json({});
    return serialize_VkDebugReportFlagsEXT(name.flags);}();
result["members"]["pfnCallback"]=[&]() {
    json return_WauKBRA=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugReportCallbackEXT(name.pfnCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_CRwzOkA=json({});
    
        if (name.pUserData==NULL){
            return_CRwzOkA["null"]=true;
            return return_CRwzOkA;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugReportFlagsEXT_id;
uintptr_t PFN_vkDebugReportCallbackEXT_id;
void* pUserData;
} VkDebugReportCallbackCreateInfoEXT_struct;

    VkDebugReportCallbackCreateInfoEXT deserialize_VkDebugReportCallbackCreateInfoEXT(json name){
        auto result=VkDebugReportCallbackCreateInfoEXT();
    
auto _struct = new VkDebugReportCallbackCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HwzCGXc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HwzCGXc=NULL;
        }
    temp_HwzCGXc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HwzCGXc;}();
[&]() {
result.flags=deserialize_VkDebugReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnCallback=deserialize_PFN_vkDebugReportCallbackEXT(name["members"]["pfnCallback"]);
        #endif
        }();
_struct->PFN_vkDebugReportCallbackEXT_id=name["members"]["pfnCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkValidationFlagsEXT(VkValidationFlagsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IEGYSqD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DfUMJNL=json({});
    
        if (name.pNext==NULL){
            return_DfUMJNL["null"]=true;
            return return_DfUMJNL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disabledValidationCheckCount"]=[&]() {
    json return_CCUtPoo=json({});
    return serialize_uint32_t(name.disabledValidationCheckCount);}();
result["members"]["pDisabledValidationChecks"]=[&]() {
    json return_GLfBNJF=json({});
    
        if (name.pDisabledValidationChecks==NULL){
            return_GLfBNJF["null"]=true;
            return return_GLfBNJF;
        }
        
        return_GLfBNJF["members"]={};
        for(int i=0; i < name.disabledValidationCheckCount; i++){
            json temp;
            temp=[&]() {
    json return_WwczrpG=json({});
    return serialize_VkValidationCheckEXT(name.pDisabledValidationChecks[i]);}();
            return_GLfBNJF["members"][std::to_string(i)].push_back(temp);
        }
        return return_GLfBNJF;
        }();
return result;}

    VkValidationFlagsEXT deserialize_VkValidationFlagsEXT(json name){
        auto result=VkValidationFlagsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Julsplb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Julsplb=NULL;
        }
    temp_Julsplb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Julsplb;}();
[&]() {
result.disabledValidationCheckCount=deserialize_uint32_t(name["members"]["disabledValidationCheckCount"]);}();
[&]() {
VkValidationCheckEXT* temp_BdXNfOZ;[&]() {

        if (name["members"]["pDisabledValidationChecks"].contains("null")){
        temp_BdXNfOZ=NULL;
        }
    temp_BdXNfOZ=(VkValidationCheckEXT*)malloc(result.disabledValidationCheckCount*sizeof(VkValidationCheckEXT));
        for (int oGTUXia=0; oGTUXia < result.disabledValidationCheckCount; oGTUXia++){
            [&]() {
temp_BdXNfOZ[oGTUXia]=deserialize_VkValidationCheckEXT(name["members"]["pDisabledValidationChecks"]["members"][oGTUXia]);}();;
        }
        }();result.pDisabledValidationChecks=temp_BdXNfOZ;}();
return result;}

    json serialize_VkValidationFeaturesEXT(VkValidationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sRGgobW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bdOCbbD=json({});
    
        if (name.pNext==NULL){
            return_bdOCbbD["null"]=true;
            return return_bdOCbbD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enabledValidationFeatureCount"]=[&]() {
    json return_aAvIRlS=json({});
    return serialize_uint32_t(name.enabledValidationFeatureCount);}();
result["members"]["pEnabledValidationFeatures"]=[&]() {
    json return_rMGZrPX=json({});
    
        if (name.pEnabledValidationFeatures==NULL){
            return_rMGZrPX["null"]=true;
            return return_rMGZrPX;
        }
        
        return_rMGZrPX["members"]={};
        for(int i=0; i < name.enabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_USmqwPa=json({});
    return serialize_VkValidationFeatureEnableEXT(name.pEnabledValidationFeatures[i]);}();
            return_rMGZrPX["members"][std::to_string(i)].push_back(temp);
        }
        return return_rMGZrPX;
        }();
result["members"]["disabledValidationFeatureCount"]=[&]() {
    json return_EpYgbfU=json({});
    return serialize_uint32_t(name.disabledValidationFeatureCount);}();
result["members"]["pDisabledValidationFeatures"]=[&]() {
    json return_QUnvMmE=json({});
    
        if (name.pDisabledValidationFeatures==NULL){
            return_QUnvMmE["null"]=true;
            return return_QUnvMmE;
        }
        
        return_QUnvMmE["members"]={};
        for(int i=0; i < name.disabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_tGhvwyi=json({});
    return serialize_VkValidationFeatureDisableEXT(name.pDisabledValidationFeatures[i]);}();
            return_QUnvMmE["members"][std::to_string(i)].push_back(temp);
        }
        return return_QUnvMmE;
        }();
return result;}

    VkValidationFeaturesEXT deserialize_VkValidationFeaturesEXT(json name){
        auto result=VkValidationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yHgOxgX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yHgOxgX=NULL;
        }
    temp_yHgOxgX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yHgOxgX;}();
[&]() {
result.enabledValidationFeatureCount=deserialize_uint32_t(name["members"]["enabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureEnableEXT* temp_sJleVih;[&]() {

        if (name["members"]["pEnabledValidationFeatures"].contains("null")){
        temp_sJleVih=NULL;
        }
    temp_sJleVih=(VkValidationFeatureEnableEXT*)malloc(result.enabledValidationFeatureCount*sizeof(VkValidationFeatureEnableEXT));
        for (int rpeWrnd=0; rpeWrnd < result.enabledValidationFeatureCount; rpeWrnd++){
            [&]() {
temp_sJleVih[rpeWrnd]=deserialize_VkValidationFeatureEnableEXT(name["members"]["pEnabledValidationFeatures"]["members"][rpeWrnd]);}();;
        }
        }();result.pEnabledValidationFeatures=temp_sJleVih;}();
[&]() {
result.disabledValidationFeatureCount=deserialize_uint32_t(name["members"]["disabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureDisableEXT* temp_HigluGB;[&]() {

        if (name["members"]["pDisabledValidationFeatures"].contains("null")){
        temp_HigluGB=NULL;
        }
    temp_HigluGB=(VkValidationFeatureDisableEXT*)malloc(result.disabledValidationFeatureCount*sizeof(VkValidationFeatureDisableEXT));
        for (int WGPpwMr=0; WGPpwMr < result.disabledValidationFeatureCount; WGPpwMr++){
            [&]() {
temp_HigluGB[WGPpwMr]=deserialize_VkValidationFeatureDisableEXT(name["members"]["pDisabledValidationFeatures"]["members"][WGPpwMr]);}();;
        }
        }();result.pDisabledValidationFeatures=temp_HigluGB;}();
return result;}

    json serialize_VkPipelineRasterizationStateRasterizationOrderAMD(VkPipelineRasterizationStateRasterizationOrderAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jIVgyEc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ugVGXJM=json({});
    
        if (name.pNext==NULL){
            return_ugVGXJM["null"]=true;
            return return_ugVGXJM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrder"]=[&]() {
    json return_FUJbqtM=json({});
    return serialize_VkRasterizationOrderAMD(name.rasterizationOrder);}();
return result;}

    VkPipelineRasterizationStateRasterizationOrderAMD deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(json name){
        auto result=VkPipelineRasterizationStateRasterizationOrderAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YtBFLYp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YtBFLYp=NULL;
        }
    temp_YtBFLYp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YtBFLYp;}();
[&]() {
result.rasterizationOrder=deserialize_VkRasterizationOrderAMD(name["members"]["rasterizationOrder"]);}();
return result;}

    json serialize_VkDebugMarkerObjectNameInfoEXT(VkDebugMarkerObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TkTVBVO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mpWofqz=json({});
    
        if (name.pNext==NULL){
            return_mpWofqz["null"]=true;
            return return_mpWofqz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_XYQXtaX=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_OKHdGxS=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["pObjectName"]=[&]() {
    json return_ayfUBwN=json({});
    
        if (name.pObjectName==NULL){
            return_ayfUBwN["null"]=true;
            return return_ayfUBwN;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugMarkerObjectNameInfoEXT deserialize_VkDebugMarkerObjectNameInfoEXT(json name){
        auto result=VkDebugMarkerObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fPcUHPi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fPcUHPi=NULL;
        }
    temp_fPcUHPi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fPcUHPi;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
char* temp_tqxpxYw;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_tqxpxYw=NULL;
        }
    temp_tqxpxYw=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_tqxpxYw;}();
return result;}

    json serialize_VkDebugMarkerObjectTagInfoEXT(VkDebugMarkerObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GGfBYaL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTJIwta=json({});
    
        if (name.pNext==NULL){
            return_VTJIwta["null"]=true;
            return return_VTJIwta;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_UNsEmtH=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_hrwTpFW=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["tagName"]=[&]() {
    json return_YXKScGp=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_wBNTTnJ=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_wZLmkJo=json({});
    
        if (name.pTag==NULL){
            return_wZLmkJo["null"]=true;
            return return_wZLmkJo;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugMarkerObjectTagInfoEXT deserialize_VkDebugMarkerObjectTagInfoEXT(json name){
        auto result=VkDebugMarkerObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hnRhJwE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hnRhJwE=NULL;
        }
    temp_hnRhJwE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hnRhJwE;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_GKZggvk;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_GKZggvk=NULL;
        }
    temp_GKZggvk=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_GKZggvk;}();
return result;}

    json serialize_VkDebugMarkerMarkerInfoEXT(VkDebugMarkerMarkerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UzXFUem=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_usGlyYM=json({});
    
        if (name.pNext==NULL){
            return_usGlyYM["null"]=true;
            return return_usGlyYM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pMarkerName"]=[&]() {
    json return_mTsBtua=json({});
    
        if (name.pMarkerName==NULL){
            return_mTsBtua["null"]=true;
            return return_mTsBtua;
        }
        return serialize_char_p(name.pMarkerName);
}();
result["members"]["color"]=[&]() {
    json return_lognfea=json({});
    
        return_lognfea["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_LZWMSbF=json({});
    return serialize_float(name.color[i]);}();
            return_lognfea["members"][std::to_string(i)].push_back(temp);
        }
        return return_lognfea;
        }();
return result;}

    VkDebugMarkerMarkerInfoEXT deserialize_VkDebugMarkerMarkerInfoEXT(json name){
        auto result=VkDebugMarkerMarkerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yuPWwVS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yuPWwVS=NULL;
        }
    temp_yuPWwVS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yuPWwVS;}();
[&]() {
char* temp_nCsYIzw;[&]() {

        if (name["members"]["pMarkerName"].contains("null")){
        temp_nCsYIzw=NULL;
        }
    temp_nCsYIzw=deserialize_char_p(name["members"]["pMarkerName"]);
}();result.pMarkerName=temp_nCsYIzw;}();
[&]() {

        for (int ffvgvNh=0; ffvgvNh < 4; ffvgvNh++){
            [&]() {
result.color[ffvgvNh]=deserialize_float(name["members"]["color"]["members"][ffvgvNh]);}();;
        }
        }();
return result;}

    json serialize_VkDedicatedAllocationImageCreateInfoNV(VkDedicatedAllocationImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iaIyjYT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ELuGCyS=json({});
    
        if (name.pNext==NULL){
            return_ELuGCyS["null"]=true;
            return return_ELuGCyS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_lfsNXpI=json({});
    return_lfsNXpI=[&]() {
    json return_fVkLqrd=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_lfsNXpI;}();
return result;}

    VkDedicatedAllocationImageCreateInfoNV deserialize_VkDedicatedAllocationImageCreateInfoNV(json name){
        auto result=VkDedicatedAllocationImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tGfZaEo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tGfZaEo=NULL;
        }
    temp_tGfZaEo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tGfZaEo;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationBufferCreateInfoNV(VkDedicatedAllocationBufferCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qZeYnYO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RSPkmSj=json({});
    
        if (name.pNext==NULL){
            return_RSPkmSj["null"]=true;
            return return_RSPkmSj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_UlGUMNm=json({});
    return_UlGUMNm=[&]() {
    json return_UsUaoEw=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_UlGUMNm;}();
return result;}

    VkDedicatedAllocationBufferCreateInfoNV deserialize_VkDedicatedAllocationBufferCreateInfoNV(json name){
        auto result=VkDedicatedAllocationBufferCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YkMsQlj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YkMsQlj=NULL;
        }
    temp_YkMsQlj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YkMsQlj;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationMemoryAllocateInfoNV(VkDedicatedAllocationMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WGIvdgw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JOWRmSZ=json({});
    
        if (name.pNext==NULL){
            return_JOWRmSZ["null"]=true;
            return return_JOWRmSZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_UMVTNTC=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_qvAHRCH=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDedicatedAllocationMemoryAllocateInfoNV deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(json name){
        auto result=VkDedicatedAllocationMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xKuURfF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xKuURfF=NULL;
        }
    temp_xKuURfF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xKuURfF;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesNV(VkExternalImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["imageFormatProperties"]=[&]() {
    json return_hXTcqvZ=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_hFvKyLH=json({});
    return serialize_VkExternalMemoryFeatureFlagsNV(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_RrPKdaf=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_XUOOila=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.compatibleHandleTypes);}();
return result;}

    VkExternalImageFormatPropertiesNV deserialize_VkExternalImageFormatPropertiesNV(json name){
        auto result=VkExternalImageFormatPropertiesNV();
    
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlagsNV(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoNV(VkExternalMemoryImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lkKuOdo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kzbMZhD=json({});
    
        if (name.pNext==NULL){
            return_kzbMZhD["null"]=true;
            return return_kzbMZhD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_SFrJxDD=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoNV deserialize_VkExternalMemoryImageCreateInfoNV(json name){
        auto result=VkExternalMemoryImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZxUEqAo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZxUEqAo=NULL;
        }
    temp_ZxUEqAo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZxUEqAo;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoNV(VkExportMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YPqDcwH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fgpTrHs=json({});
    
        if (name.pNext==NULL){
            return_fgpTrHs["null"]=true;
            return return_fgpTrHs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_wJKFkXZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoNV deserialize_VkExportMemoryAllocateInfoNV(json name){
        auto result=VkExportMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CXiuJRN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CXiuJRN=NULL;
        }
    temp_CXiuJRN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CXiuJRN;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bfnGxnk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MZvLVBN=json({});
    
        if (name.pNext==NULL){
            return_MZvLVBN["null"]=true;
            return return_MZvLVBN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCommands"]=[&]() {
    json return_sxHsVzK=json({});
    return_sxHsVzK=[&]() {
    json return_ZxCiBpO=json({});
    return serialize_uint32_t(name.deviceGeneratedCommands);}();return return_sxHsVzK;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCommands=deserialize_uint32_t(name["members"]["deviceGeneratedCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pgTMbjt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SxMSrzB=json({});
    
        if (name.pNext==NULL){
            return_SxMSrzB["null"]=true;
            return return_SxMSrzB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCompute"]=[&]() {
    json return_rQDaMzf=json({});
    return_rQDaMzf=[&]() {
    json return_PBAHsFv=json({});
    return serialize_uint32_t(name.deviceGeneratedCompute);}();return return_rQDaMzf;}();
result["members"]["deviceGeneratedComputePipelines"]=[&]() {
    json return_SnIuqSU=json({});
    return_SnIuqSU=[&]() {
    json return_NSWbhod=json({});
    return serialize_uint32_t(name.deviceGeneratedComputePipelines);}();return return_SnIuqSU;}();
result["members"]["deviceGeneratedComputeCaptureReplay"]=[&]() {
    json return_RZfoevI=json({});
    return_RZfoevI=[&]() {
    json return_mmiwuGV=json({});
    return serialize_uint32_t(name.deviceGeneratedComputeCaptureReplay);}();return return_RZfoevI;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCompute=deserialize_uint32_t(name["members"]["deviceGeneratedCompute"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputePipelines=deserialize_uint32_t(name["members"]["deviceGeneratedComputePipelines"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputeCaptureReplay=deserialize_uint32_t(name["members"]["deviceGeneratedComputeCaptureReplay"]);}();}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfo(VkDevicePrivateDataCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ENGCzpB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WxkmGUq=json({});
    
        if (name.pNext==NULL){
            return_WxkmGUq["null"]=true;
            return return_WxkmGUq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_HgbNuCj=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfo deserialize_VkDevicePrivateDataCreateInfo(json name){
        auto result=VkDevicePrivateDataCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ntPabVa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ntPabVa=NULL;
        }
    temp_ntPabVa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ntPabVa;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfoEXT(VkDevicePrivateDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xOXapfv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SJDJXcm=json({});
    
        if (name.pNext==NULL){
            return_SJDJXcm["null"]=true;
            return return_SJDJXcm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_hHqxTdr=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfoEXT deserialize_VkDevicePrivateDataCreateInfoEXT(json name){
        auto result=VkDevicePrivateDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RvswCHu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RvswCHu=NULL;
        }
    temp_RvswCHu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RvswCHu;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfo(VkPrivateDataSlotCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XcBvlPA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MscGrQn=json({});
    
        if (name.pNext==NULL){
            return_MscGrQn["null"]=true;
            return return_MscGrQn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tvHOiIU=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfo deserialize_VkPrivateDataSlotCreateInfo(json name){
        auto result=VkPrivateDataSlotCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_potguTi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_potguTi=NULL;
        }
    temp_potguTi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_potguTi;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfoEXT(VkPrivateDataSlotCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gljOqCo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MYWzBBO=json({});
    
        if (name.pNext==NULL){
            return_MYWzBBO["null"]=true;
            return return_MYWzBBO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GLBPghn=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfoEXT deserialize_VkPrivateDataSlotCreateInfoEXT(json name){
        auto result=VkPrivateDataSlotCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wNtFuvW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wNtFuvW=NULL;
        }
    temp_wNtFuvW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wNtFuvW;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeatures(VkPhysicalDevicePrivateDataFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HbZmNmb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ENKuKlY=json({});
    
        if (name.pNext==NULL){
            return_ENKuKlY["null"]=true;
            return return_ENKuKlY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_MchGSpo=json({});
    return_MchGSpo=[&]() {
    json return_cyqqUNB=json({});
    return serialize_uint32_t(name.privateData);}();return return_MchGSpo;}();
return result;}

    VkPhysicalDevicePrivateDataFeatures deserialize_VkPhysicalDevicePrivateDataFeatures(json name){
        auto result=VkPhysicalDevicePrivateDataFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeaturesEXT(VkPhysicalDevicePrivateDataFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jJyJdiv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HUnIFNP=json({});
    
        if (name.pNext==NULL){
            return_HUnIFNP["null"]=true;
            return return_HUnIFNP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_VLjeLeO=json({});
    return_VLjeLeO=[&]() {
    json return_jiQUVbP=json({});
    return serialize_uint32_t(name.privateData);}();return return_VLjeLeO;}();
return result;}

    VkPhysicalDevicePrivateDataFeaturesEXT deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrivateDataFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TcSYZFz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ryeyLhc=json({});
    
        if (name.pNext==NULL){
            return_ryeyLhc["null"]=true;
            return return_ryeyLhc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGraphicsShaderGroupCount"]=[&]() {
    json return_xoFwqha=json({});
    return serialize_uint32_t(name.maxGraphicsShaderGroupCount);}();
result["members"]["maxIndirectSequenceCount"]=[&]() {
    json return_yUJmkrv=json({});
    return serialize_uint32_t(name.maxIndirectSequenceCount);}();
result["members"]["maxIndirectCommandsTokenCount"]=[&]() {
    json return_IEsowcv=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenCount);}();
result["members"]["maxIndirectCommandsStreamCount"]=[&]() {
    json return_EhbTFma=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamCount);}();
result["members"]["maxIndirectCommandsTokenOffset"]=[&]() {
    json return_wDBapiv=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenOffset);}();
result["members"]["maxIndirectCommandsStreamStride"]=[&]() {
    json return_yCIRXee=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamStride);}();
result["members"]["minSequencesCountBufferOffsetAlignment"]=[&]() {
    json return_DObNYyp=json({});
    return serialize_uint32_t(name.minSequencesCountBufferOffsetAlignment);}();
result["members"]["minSequencesIndexBufferOffsetAlignment"]=[&]() {
    json return_GerVzCz=json({});
    return serialize_uint32_t(name.minSequencesIndexBufferOffsetAlignment);}();
result["members"]["minIndirectCommandsBufferOffsetAlignment"]=[&]() {
    json return_uKmKORb=json({});
    return serialize_uint32_t(name.minIndirectCommandsBufferOffsetAlignment);}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGraphicsShaderGroupCount=deserialize_uint32_t(name["members"]["maxGraphicsShaderGroupCount"]);}();
[&]() {
result.maxIndirectSequenceCount=deserialize_uint32_t(name["members"]["maxIndirectSequenceCount"]);}();
[&]() {
result.maxIndirectCommandsTokenCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenCount"]);}();
[&]() {
result.maxIndirectCommandsStreamCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamCount"]);}();
[&]() {
result.maxIndirectCommandsTokenOffset=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenOffset"]);}();
[&]() {
result.maxIndirectCommandsStreamStride=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamStride"]);}();
[&]() {
result.minSequencesCountBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesCountBufferOffsetAlignment"]);}();
[&]() {
result.minSequencesIndexBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesIndexBufferOffsetAlignment"]);}();
[&]() {
result.minIndirectCommandsBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minIndirectCommandsBufferOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(VkPhysicalDeviceMultiDrawPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TMxylDj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZyITAbc=json({});
    
        if (name.pNext==NULL){
            return_ZyITAbc["null"]=true;
            return return_ZyITAbc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiDrawCount"]=[&]() {
    json return_TsmXKCZ=json({});
    return serialize_uint32_t(name.maxMultiDrawCount);}();
return result;}

    VkPhysicalDeviceMultiDrawPropertiesEXT deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiDrawCount=deserialize_uint32_t(name["members"]["maxMultiDrawCount"]);}();
return result;}

    json serialize_VkGraphicsShaderGroupCreateInfoNV(VkGraphicsShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bmEzmDf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zJSvyPf=json({});
    
        if (name.pNext==NULL){
            return_zJSvyPf["null"]=true;
            return return_zJSvyPf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stageCount"]=[&]() {
    json return_LVBuDQF=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_LGbgaPd=json({});
    
        if (name.pStages==NULL){
            return_LGbgaPd["null"]=true;
            return return_LGbgaPd;
        }
        
        return_LGbgaPd["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_TVtjfiY=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_LGbgaPd["members"][std::to_string(i)].push_back(temp);
        }
        return return_LGbgaPd;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_eeJkoqg=json({});
    
        if (name.pVertexInputState==NULL){
            return_eeJkoqg["null"]=true;
            return return_eeJkoqg;
        }
        return_eeJkoqg=[&]() {
    json return_ZqfysNg=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_eeJkoqg;}();
result["members"]["pTessellationState"]=[&]() {
    json return_jZYVUee=json({});
    
        if (name.pTessellationState==NULL){
            return_jZYVUee["null"]=true;
            return return_jZYVUee;
        }
        return_jZYVUee=[&]() {
    json return_aszZpRU=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_jZYVUee;}();
return result;}

    VkGraphicsShaderGroupCreateInfoNV deserialize_VkGraphicsShaderGroupCreateInfoNV(json name){
        auto result=VkGraphicsShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DXBeeEh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DXBeeEh=NULL;
        }
    temp_DXBeeEh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DXBeeEh;}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_vSVqdWt;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_vSVqdWt=NULL;
        }
    temp_vSVqdWt=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int WYqorBe=0; WYqorBe < result.stageCount; WYqorBe++){
            [&]() {
temp_vSVqdWt[WYqorBe]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][WYqorBe]);}();;
        }
        }();result.pStages=temp_vSVqdWt;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_Bqcgjzi;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_Bqcgjzi=NULL;
        }
    [&]() {
*(temp_Bqcgjzi)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_Bqcgjzi;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_HrugRyS;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_HrugRyS=NULL;
        }
    [&]() {
*(temp_HrugRyS)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_HrugRyS;}();
return result;}

    json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(VkGraphicsPipelineShaderGroupsCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZclPGvR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EIXksNA=json({});
    
        if (name.pNext==NULL){
            return_EIXksNA["null"]=true;
            return return_EIXksNA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["groupCount"]=[&]() {
    json return_wdcCTWx=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_NOPxmRy=json({});
    
        if (name.pGroups==NULL){
            return_NOPxmRy["null"]=true;
            return return_NOPxmRy;
        }
        
        return_NOPxmRy["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_kaqzWer=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_NOPxmRy["members"][std::to_string(i)].push_back(temp);
        }
        return return_NOPxmRy;
        }();
result["members"]["pipelineCount"]=[&]() {
    json return_rCWLiHB=json({});
    return serialize_uint32_t(name.pipelineCount);}();
result["members"]["pPipelines"]=[&]() {
    json return_QSpiFfI=json({});
    
        if (name.pPipelines==NULL){
            return_QSpiFfI["null"]=true;
            return return_QSpiFfI;
        }
        
        return_QSpiFfI["members"]={};
        for(int i=0; i < name.pipelineCount; i++){
            json temp;
            temp=[&]() {
    json return_oFmkSLj=json({});
    return serialize_VkPipeline(name.pPipelines[i]);}();
            return_QSpiFfI["members"][std::to_string(i)].push_back(temp);
        }
        return return_QSpiFfI;
        }();
return result;}

    VkGraphicsPipelineShaderGroupsCreateInfoNV deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(json name){
        auto result=VkGraphicsPipelineShaderGroupsCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OGBHnTD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OGBHnTD=NULL;
        }
    temp_OGBHnTD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OGBHnTD;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkGraphicsShaderGroupCreateInfoNV* temp_PBpHUPO;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_PBpHUPO=NULL;
        }
    temp_PBpHUPO=(VkGraphicsShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkGraphicsShaderGroupCreateInfoNV));
        for (int VpwCHhE=0; VpwCHhE < result.groupCount; VpwCHhE++){
            [&]() {
temp_PBpHUPO[VpwCHhE]=deserialize_VkGraphicsShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][VpwCHhE]);}();;
        }
        }();result.pGroups=temp_PBpHUPO;}();
[&]() {
result.pipelineCount=deserialize_uint32_t(name["members"]["pipelineCount"]);}();
[&]() {
VkPipeline* temp_VqilSIp;[&]() {

        if (name["members"]["pPipelines"].contains("null")){
        temp_VqilSIp=NULL;
        }
    temp_VqilSIp=(VkPipeline*)malloc(result.pipelineCount*sizeof(VkPipeline));
        for (int DpAiwIO=0; DpAiwIO < result.pipelineCount; DpAiwIO++){
            [&]() {
temp_VqilSIp[DpAiwIO]=deserialize_VkPipeline(name["members"]["pPipelines"]["members"][DpAiwIO]);}();;
        }
        }();result.pPipelines=temp_VqilSIp;}();
return result;}

    json serialize_VkBindShaderGroupIndirectCommandNV(VkBindShaderGroupIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupIndex"]=[&]() {
    json return_hvJgXGQ=json({});
    return serialize_uint32_t(name.groupIndex);}();
return result;}

    VkBindShaderGroupIndirectCommandNV deserialize_VkBindShaderGroupIndirectCommandNV(json name){
        auto result=VkBindShaderGroupIndirectCommandNV();
    
[&]() {
result.groupIndex=deserialize_uint32_t(name["members"]["groupIndex"]);}();
return result;}

    json serialize_VkBindIndexBufferIndirectCommandNV(VkBindIndexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_sBNmtYi=json({});
    return_sBNmtYi=[&]() {
    json return_uXOoNcM=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_sBNmtYi;}();
result["members"]["size"]=[&]() {
    json return_acSIiVE=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["indexType"]=[&]() {
    json return_KEHHCLW=json({});
    return serialize_VkIndexType(name.indexType);}();
return result;}

    VkBindIndexBufferIndirectCommandNV deserialize_VkBindIndexBufferIndirectCommandNV(json name){
        auto result=VkBindIndexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
return result;}

    json serialize_VkBindVertexBufferIndirectCommandNV(VkBindVertexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_FwBTDUp=json({});
    return_FwBTDUp=[&]() {
    json return_mVlurIk=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_FwBTDUp;}();
result["members"]["size"]=[&]() {
    json return_UuNQfxc=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["stride"]=[&]() {
    json return_vOyyAXs=json({});
    return serialize_uint32_t(name.stride);}();
return result;}

    VkBindVertexBufferIndirectCommandNV deserialize_VkBindVertexBufferIndirectCommandNV(json name){
        auto result=VkBindVertexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkSetStateFlagsIndirectCommandNV(VkSetStateFlagsIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["data"]=[&]() {
    json return_jlYULRj=json({});
    return serialize_uint32_t(name.data);}();
return result;}

    VkSetStateFlagsIndirectCommandNV deserialize_VkSetStateFlagsIndirectCommandNV(json name){
        auto result=VkSetStateFlagsIndirectCommandNV();
    
[&]() {
result.data=deserialize_uint32_t(name["members"]["data"]);}();
return result;}

    json serialize_VkIndirectCommandsStreamNV(VkIndirectCommandsStreamNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_UpjJvVl=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_PoAlkOM=json({});
    return_PoAlkOM=[&]() {
    json return_SaEKNXv=json({});
    return serialize_uint64_t(name.offset);}();return return_PoAlkOM;}();
return result;}

    VkIndirectCommandsStreamNV deserialize_VkIndirectCommandsStreamNV(json name){
        auto result=VkIndirectCommandsStreamNV();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkIndirectCommandsLayoutTokenNV(VkIndirectCommandsLayoutTokenNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jldVhlg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sVXijxQ=json({});
    
        if (name.pNext==NULL){
            return_sVXijxQ["null"]=true;
            return return_sVXijxQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tokenType"]=[&]() {
    json return_YGBmzsT=json({});
    return serialize_VkIndirectCommandsTokenTypeNV(name.tokenType);}();
result["members"]["stream"]=[&]() {
    json return_iKExBTf=json({});
    return serialize_uint32_t(name.stream);}();
result["members"]["offset"]=[&]() {
    json return_wmlylbW=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["vertexBindingUnit"]=[&]() {
    json return_gSqtIoP=json({});
    return serialize_uint32_t(name.vertexBindingUnit);}();
result["members"]["vertexDynamicStride"]=[&]() {
    json return_TSMbUtg=json({});
    return_TSMbUtg=[&]() {
    json return_BRzhvLA=json({});
    return serialize_uint32_t(name.vertexDynamicStride);}();return return_TSMbUtg;}();
result["members"]["pushconstantPipelineLayout"]=[&]() {
    json return_jznbsVo=json({});
    return serialize_VkPipelineLayout(name.pushconstantPipelineLayout);}();
result["members"]["pushconstantShaderStageFlags"]=[&]() {
    json return_tSArahX=json({});
    return serialize_VkShaderStageFlags(name.pushconstantShaderStageFlags);}();
result["members"]["pushconstantOffset"]=[&]() {
    json return_ianhIgC=json({});
    return serialize_uint32_t(name.pushconstantOffset);}();
result["members"]["pushconstantSize"]=[&]() {
    json return_EZVPETH=json({});
    return serialize_uint32_t(name.pushconstantSize);}();
result["members"]["indirectStateFlags"]=[&]() {
    json return_xhqVoqI=json({});
    return serialize_VkIndirectStateFlagsNV(name.indirectStateFlags);}();
result["members"]["indexTypeCount"]=[&]() {
    json return_fUtcbpp=json({});
    return serialize_uint32_t(name.indexTypeCount);}();
result["members"]["pIndexTypes"]=[&]() {
    json return_jxrdojG=json({});
    
        if (name.pIndexTypes==NULL){
            return_jxrdojG["null"]=true;
            return return_jxrdojG;
        }
        
        return_jxrdojG["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_EWxhcPT=json({});
    return serialize_VkIndexType(name.pIndexTypes[i]);}();
            return_jxrdojG["members"][std::to_string(i)].push_back(temp);
        }
        return return_jxrdojG;
        }();
result["members"]["pIndexTypeValues"]=[&]() {
    json return_BwFUYja=json({});
    
        if (name.pIndexTypeValues==NULL){
            return_BwFUYja["null"]=true;
            return return_BwFUYja;
        }
        
        return_BwFUYja["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_lVeCpln=json({});
    return serialize_uint32_t(name.pIndexTypeValues[i]);}();
            return_BwFUYja["members"][std::to_string(i)].push_back(temp);
        }
        return return_BwFUYja;
        }();
return result;}

    VkIndirectCommandsLayoutTokenNV deserialize_VkIndirectCommandsLayoutTokenNV(json name){
        auto result=VkIndirectCommandsLayoutTokenNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yOQSPxW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yOQSPxW=NULL;
        }
    temp_yOQSPxW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yOQSPxW;}();
[&]() {
result.tokenType=deserialize_VkIndirectCommandsTokenTypeNV(name["members"]["tokenType"]);}();
[&]() {
result.stream=deserialize_uint32_t(name["members"]["stream"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.vertexBindingUnit=deserialize_uint32_t(name["members"]["vertexBindingUnit"]);}();
[&]() {
[&]() {
result.vertexDynamicStride=deserialize_uint32_t(name["members"]["vertexDynamicStride"]);}();}();
[&]() {
result.pushconstantPipelineLayout=deserialize_VkPipelineLayout(name["members"]["pushconstantPipelineLayout"]);}();
[&]() {
result.pushconstantShaderStageFlags=deserialize_VkShaderStageFlags(name["members"]["pushconstantShaderStageFlags"]);}();
[&]() {
result.pushconstantOffset=deserialize_uint32_t(name["members"]["pushconstantOffset"]);}();
[&]() {
result.pushconstantSize=deserialize_uint32_t(name["members"]["pushconstantSize"]);}();
[&]() {
result.indirectStateFlags=deserialize_VkIndirectStateFlagsNV(name["members"]["indirectStateFlags"]);}();
[&]() {
result.indexTypeCount=deserialize_uint32_t(name["members"]["indexTypeCount"]);}();
[&]() {
VkIndexType* temp_FPmokaE;[&]() {

        if (name["members"]["pIndexTypes"].contains("null")){
        temp_FPmokaE=NULL;
        }
    temp_FPmokaE=(VkIndexType*)malloc(result.indexTypeCount*sizeof(VkIndexType));
        for (int BvFxBHc=0; BvFxBHc < result.indexTypeCount; BvFxBHc++){
            [&]() {
temp_FPmokaE[BvFxBHc]=deserialize_VkIndexType(name["members"]["pIndexTypes"]["members"][BvFxBHc]);}();;
        }
        }();result.pIndexTypes=temp_FPmokaE;}();
[&]() {
uint32_t* temp_ZwVvICr;[&]() {

        if (name["members"]["pIndexTypeValues"].contains("null")){
        temp_ZwVvICr=NULL;
        }
    temp_ZwVvICr=(uint32_t*)malloc(result.indexTypeCount*sizeof(uint32_t));
        for (int EquiuYa=0; EquiuYa < result.indexTypeCount; EquiuYa++){
            [&]() {
temp_ZwVvICr[EquiuYa]=deserialize_uint32_t(name["members"]["pIndexTypeValues"]["members"][EquiuYa]);}();;
        }
        }();result.pIndexTypeValues=temp_ZwVvICr;}();
return result;}

    json serialize_VkIndirectCommandsLayoutCreateInfoNV(VkIndirectCommandsLayoutCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ecMgtnX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wqphXlQ=json({});
    
        if (name.pNext==NULL){
            return_wqphXlQ["null"]=true;
            return return_wqphXlQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PhGrWhU=json({});
    return serialize_VkIndirectCommandsLayoutUsageFlagsNV(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_njVxsTB=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["tokenCount"]=[&]() {
    json return_Qhtomyo=json({});
    return serialize_uint32_t(name.tokenCount);}();
result["members"]["pTokens"]=[&]() {
    json return_tnKeLZA=json({});
    
        if (name.pTokens==NULL){
            return_tnKeLZA["null"]=true;
            return return_tnKeLZA;
        }
        
        return_tnKeLZA["members"]={};
        for(int i=0; i < name.tokenCount; i++){
            json temp;
            temp=[&]() {
    json return_XTBFErh=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(name.pTokens[i]);}();
            return_tnKeLZA["members"][std::to_string(i)].push_back(temp);
        }
        return return_tnKeLZA;
        }();
result["members"]["streamCount"]=[&]() {
    json return_lRRQclF=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreamStrides"]=[&]() {
    json return_NJNTiDP=json({});
    
        if (name.pStreamStrides==NULL){
            return_NJNTiDP["null"]=true;
            return return_NJNTiDP;
        }
        
        return_NJNTiDP["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_dXGRMvu=json({});
    return serialize_uint32_t(name.pStreamStrides[i]);}();
            return_NJNTiDP["members"][std::to_string(i)].push_back(temp);
        }
        return return_NJNTiDP;
        }();
return result;}

    VkIndirectCommandsLayoutCreateInfoNV deserialize_VkIndirectCommandsLayoutCreateInfoNV(json name){
        auto result=VkIndirectCommandsLayoutCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fGTZucH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fGTZucH=NULL;
        }
    temp_fGTZucH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fGTZucH;}();
[&]() {
result.flags=deserialize_VkIndirectCommandsLayoutUsageFlagsNV(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.tokenCount=deserialize_uint32_t(name["members"]["tokenCount"]);}();
[&]() {
VkIndirectCommandsLayoutTokenNV* temp_wKCRxZe;[&]() {

        if (name["members"]["pTokens"].contains("null")){
        temp_wKCRxZe=NULL;
        }
    temp_wKCRxZe=(VkIndirectCommandsLayoutTokenNV*)malloc(result.tokenCount*sizeof(VkIndirectCommandsLayoutTokenNV));
        for (int PJehxPo=0; PJehxPo < result.tokenCount; PJehxPo++){
            [&]() {
temp_wKCRxZe[PJehxPo]=deserialize_VkIndirectCommandsLayoutTokenNV(name["members"]["pTokens"]["members"][PJehxPo]);}();;
        }
        }();result.pTokens=temp_wKCRxZe;}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
uint32_t* temp_CDkJKBf;[&]() {

        if (name["members"]["pStreamStrides"].contains("null")){
        temp_CDkJKBf=NULL;
        }
    temp_CDkJKBf=(uint32_t*)malloc(result.streamCount*sizeof(uint32_t));
        for (int tcpWrwI=0; tcpWrwI < result.streamCount; tcpWrwI++){
            [&]() {
temp_CDkJKBf[tcpWrwI]=deserialize_uint32_t(name["members"]["pStreamStrides"]["members"][tcpWrwI]);}();;
        }
        }();result.pStreamStrides=temp_CDkJKBf;}();
return result;}

    json serialize_VkGeneratedCommandsInfoNV(VkGeneratedCommandsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GDCBYZk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZYRYVWJ=json({});
    
        if (name.pNext==NULL){
            return_ZYRYVWJ["null"]=true;
            return return_ZYRYVWJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_sQdqIKe=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_YlaTvcd=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_ZwVrOVV=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["streamCount"]=[&]() {
    json return_tEyUXqL=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreams"]=[&]() {
    json return_YkygWhp=json({});
    
        if (name.pStreams==NULL){
            return_YkygWhp["null"]=true;
            return return_YkygWhp;
        }
        
        return_YkygWhp["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_JBLNfqS=json({});
    return serialize_VkIndirectCommandsStreamNV(name.pStreams[i]);}();
            return_YkygWhp["members"][std::to_string(i)].push_back(temp);
        }
        return return_YkygWhp;
        }();
result["members"]["sequencesCount"]=[&]() {
    json return_OaKETCd=json({});
    return serialize_uint32_t(name.sequencesCount);}();
result["members"]["preprocessBuffer"]=[&]() {
    json return_MfwlnjB=json({});
    return serialize_VkBuffer(name.preprocessBuffer);}();
result["members"]["preprocessOffset"]=[&]() {
    json return_racAuKl=json({});
    return_racAuKl=[&]() {
    json return_iZkNFZV=json({});
    return serialize_uint64_t(name.preprocessOffset);}();return return_racAuKl;}();
result["members"]["preprocessSize"]=[&]() {
    json return_rBMdliA=json({});
    return_rBMdliA=[&]() {
    json return_rRBWHgU=json({});
    return serialize_uint64_t(name.preprocessSize);}();return return_rBMdliA;}();
result["members"]["sequencesCountBuffer"]=[&]() {
    json return_DPOHZOu=json({});
    return serialize_VkBuffer(name.sequencesCountBuffer);}();
result["members"]["sequencesCountOffset"]=[&]() {
    json return_jNXaRLU=json({});
    return_jNXaRLU=[&]() {
    json return_OBUzapF=json({});
    return serialize_uint64_t(name.sequencesCountOffset);}();return return_jNXaRLU;}();
result["members"]["sequencesIndexBuffer"]=[&]() {
    json return_KxdpvBm=json({});
    return serialize_VkBuffer(name.sequencesIndexBuffer);}();
result["members"]["sequencesIndexOffset"]=[&]() {
    json return_vxqYeld=json({});
    return_vxqYeld=[&]() {
    json return_NAAjdCN=json({});
    return serialize_uint64_t(name.sequencesIndexOffset);}();return return_vxqYeld;}();
return result;}

    VkGeneratedCommandsInfoNV deserialize_VkGeneratedCommandsInfoNV(json name){
        auto result=VkGeneratedCommandsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WSqIfvA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WSqIfvA=NULL;
        }
    temp_WSqIfvA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WSqIfvA;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
VkIndirectCommandsStreamNV* temp_OlOulvt;[&]() {

        if (name["members"]["pStreams"].contains("null")){
        temp_OlOulvt=NULL;
        }
    temp_OlOulvt=(VkIndirectCommandsStreamNV*)malloc(result.streamCount*sizeof(VkIndirectCommandsStreamNV));
        for (int QTVjing=0; QTVjing < result.streamCount; QTVjing++){
            [&]() {
temp_OlOulvt[QTVjing]=deserialize_VkIndirectCommandsStreamNV(name["members"]["pStreams"]["members"][QTVjing]);}();;
        }
        }();result.pStreams=temp_OlOulvt;}();
[&]() {
result.sequencesCount=deserialize_uint32_t(name["members"]["sequencesCount"]);}();
[&]() {
result.preprocessBuffer=deserialize_VkBuffer(name["members"]["preprocessBuffer"]);}();
[&]() {
[&]() {
result.preprocessOffset=deserialize_uint64_t(name["members"]["preprocessOffset"]);}();}();
[&]() {
[&]() {
result.preprocessSize=deserialize_uint64_t(name["members"]["preprocessSize"]);}();}();
[&]() {
result.sequencesCountBuffer=deserialize_VkBuffer(name["members"]["sequencesCountBuffer"]);}();
[&]() {
[&]() {
result.sequencesCountOffset=deserialize_uint64_t(name["members"]["sequencesCountOffset"]);}();}();
[&]() {
result.sequencesIndexBuffer=deserialize_VkBuffer(name["members"]["sequencesIndexBuffer"]);}();
[&]() {
[&]() {
result.sequencesIndexOffset=deserialize_uint64_t(name["members"]["sequencesIndexOffset"]);}();}();
return result;}

    json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(VkGeneratedCommandsMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cdlEhvV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RGZclsP=json({});
    
        if (name.pNext==NULL){
            return_RGZclsP["null"]=true;
            return return_RGZclsP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_aZKUHGv=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_KtTXwGC=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_iOfIkub=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["maxSequencesCount"]=[&]() {
    json return_UuCfRnT=json({});
    return serialize_uint32_t(name.maxSequencesCount);}();
return result;}

    VkGeneratedCommandsMemoryRequirementsInfoNV deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(json name){
        auto result=VkGeneratedCommandsMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zDHGLbh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zDHGLbh=NULL;
        }
    temp_zDHGLbh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zDHGLbh;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.maxSequencesCount=deserialize_uint32_t(name["members"]["maxSequencesCount"]);}();
return result;}

    json serialize_VkPipelineIndirectDeviceAddressInfoNV(VkPipelineIndirectDeviceAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sjqdedJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_itcHLoT=json({});
    
        if (name.pNext==NULL){
            return_itcHLoT["null"]=true;
            return return_itcHLoT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_IZrouqE=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_MjSGUgY=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineIndirectDeviceAddressInfoNV deserialize_VkPipelineIndirectDeviceAddressInfoNV(json name){
        auto result=VkPipelineIndirectDeviceAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cmhtaeX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cmhtaeX=NULL;
        }
    temp_cmhtaeX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cmhtaeX;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkBindPipelineIndirectCommandNV(VkBindPipelineIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pipelineAddress"]=[&]() {
    json return_rzXKiDH=json({});
    return_rzXKiDH=[&]() {
    json return_ImEQHfA=json({});
    return serialize_uint64_t(name.pipelineAddress);}();return return_rzXKiDH;}();
return result;}

    VkBindPipelineIndirectCommandNV deserialize_VkBindPipelineIndirectCommandNV(json name){
        auto result=VkBindPipelineIndirectCommandNV();
    
[&]() {
[&]() {
result.pipelineAddress=deserialize_uint64_t(name["members"]["pipelineAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2(VkPhysicalDeviceFeatures2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GREgMne=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nJfKSOT=json({});
    
        if (name.pNext==NULL){
            return_nJfKSOT["null"]=true;
            return return_nJfKSOT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_AdCLabD=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2 deserialize_VkPhysicalDeviceFeatures2(json name){
        auto result=VkPhysicalDeviceFeatures2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2KHR(VkPhysicalDeviceFeatures2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WJJCNsK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pdKXOjC=json({});
    
        if (name.pNext==NULL){
            return_pdKXOjC["null"]=true;
            return return_pdKXOjC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_YUfRSnW=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2KHR deserialize_VkPhysicalDeviceFeatures2KHR(json name){
        auto result=VkPhysicalDeviceFeatures2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2(VkPhysicalDeviceProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KuocivY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yyMViJH=json({});
    
        if (name.pNext==NULL){
            return_yyMViJH["null"]=true;
            return return_yyMViJH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_lvJSUGO=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2 deserialize_VkPhysicalDeviceProperties2(json name){
        auto result=VkPhysicalDeviceProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2KHR(VkPhysicalDeviceProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LHevdbV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HFqZydk=json({});
    
        if (name.pNext==NULL){
            return_HFqZydk["null"]=true;
            return return_HFqZydk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_OMXeXcu=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2KHR deserialize_VkPhysicalDeviceProperties2KHR(json name){
        auto result=VkPhysicalDeviceProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkFormatProperties2(VkFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_civTWZz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RrYYwre=json({});
    
        if (name.pNext==NULL){
            return_RrYYwre["null"]=true;
            return return_RrYYwre;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_gUXBKXB=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2 deserialize_VkFormatProperties2(json name){
        auto result=VkFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkFormatProperties2KHR(VkFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Nnlvtpo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GbheiUj=json({});
    
        if (name.pNext==NULL){
            return_GbheiUj["null"]=true;
            return return_GbheiUj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_vYBWAdo=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2KHR deserialize_VkFormatProperties2KHR(json name){
        auto result=VkFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2(VkImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dUJbJfK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LIBLYHJ=json({});
    
        if (name.pNext==NULL){
            return_LIBLYHJ["null"]=true;
            return return_LIBLYHJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_kPgVLWG=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2 deserialize_VkImageFormatProperties2(json name){
        auto result=VkImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2KHR(VkImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MHlfoUr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PVUYUZv=json({});
    
        if (name.pNext==NULL){
            return_PVUYUZv["null"]=true;
            return return_PVUYUZv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_uyKzmki=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2KHR deserialize_VkImageFormatProperties2KHR(json name){
        auto result=VkImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2(VkPhysicalDeviceImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iGDyvCC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LJfkyZR=json({});
    
        if (name.pNext==NULL){
            return_LJfkyZR["null"]=true;
            return return_LJfkyZR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_jvlAlgx=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_XlUBFjr=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_WdyOWXG=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_uFTfncl=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_qTDwHfk=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2 deserialize_VkPhysicalDeviceImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lkOzjBk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lkOzjBk=NULL;
        }
    temp_lkOzjBk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lkOzjBk;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2KHR(VkPhysicalDeviceImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HMAbOiH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rIkInTm=json({});
    
        if (name.pNext==NULL){
            return_rIkInTm["null"]=true;
            return return_rIkInTm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_bpWYcit=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_GzfnrUj=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_RvtplUR=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_LwxLQPR=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_waEqvTs=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2KHR deserialize_VkPhysicalDeviceImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kdbTdEs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kdbTdEs=NULL;
        }
    temp_kdbTdEs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kdbTdEs;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2(VkQueueFamilyProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sJxyMtC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pnCRDaw=json({});
    
        if (name.pNext==NULL){
            return_pnCRDaw["null"]=true;
            return return_pnCRDaw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_hPDpMNs=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2 deserialize_VkQueueFamilyProperties2(json name){
        auto result=VkQueueFamilyProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2KHR(VkQueueFamilyProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_adFnaqH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aNbwTNO=json({});
    
        if (name.pNext==NULL){
            return_aNbwTNO["null"]=true;
            return return_aNbwTNO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_CYZUecp=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2KHR deserialize_VkQueueFamilyProperties2KHR(json name){
        auto result=VkQueueFamilyProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2(VkPhysicalDeviceMemoryProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ckcyWOF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_suOJzVd=json({});
    
        if (name.pNext==NULL){
            return_suOJzVd["null"]=true;
            return return_suOJzVd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_waINXIS=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2 deserialize_VkPhysicalDeviceMemoryProperties2(json name){
        auto result=VkPhysicalDeviceMemoryProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2KHR(VkPhysicalDeviceMemoryProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EkvkpkT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TGdZJTD=json({});
    
        if (name.pNext==NULL){
            return_TGdZJTD["null"]=true;
            return return_TGdZJTD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_FwriPVI=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2KHR deserialize_VkPhysicalDeviceMemoryProperties2KHR(json name){
        auto result=VkPhysicalDeviceMemoryProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2(VkSparseImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CBvgzog=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEWNVBO=json({});
    
        if (name.pNext==NULL){
            return_MEWNVBO["null"]=true;
            return return_MEWNVBO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_UmZcIHK=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2 deserialize_VkSparseImageFormatProperties2(json name){
        auto result=VkSparseImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2KHR(VkSparseImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AKCQLye=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TXQynWi=json({});
    
        if (name.pNext==NULL){
            return_TXQynWi["null"]=true;
            return return_TXQynWi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_IPUrGhZ=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2KHR deserialize_VkSparseImageFormatProperties2KHR(json name){
        auto result=VkSparseImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2(VkPhysicalDeviceSparseImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lwwFxAh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XuWKPKx=json({});
    
        if (name.pNext==NULL){
            return_XuWKPKx["null"]=true;
            return return_XuWKPKx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_taXCiUC=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_acMgHvB=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_SieMUsD=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_tXSYGEP=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_eoLxrnN=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2 deserialize_VkPhysicalDeviceSparseImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cUyiJgy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cUyiJgy=NULL;
        }
    temp_cUyiJgy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cUyiJgy;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(VkPhysicalDeviceSparseImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RaQYqqf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cWBFiju=json({});
    
        if (name.pNext==NULL){
            return_cWBFiju["null"]=true;
            return return_cWBFiju;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_WdsHOTi=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_iipbiYM=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_hLNMkyq=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_fwgfBCl=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_UGhMsKb=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2KHR deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IyFccHk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IyFccHk=NULL;
        }
    temp_IyFccHk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IyFccHk;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(VkPhysicalDevicePushDescriptorPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fnlskSF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MmRdPGS=json({});
    
        if (name.pNext==NULL){
            return_MmRdPGS["null"]=true;
            return return_MmRdPGS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPushDescriptors"]=[&]() {
    json return_pvPsxAT=json({});
    return serialize_uint32_t(name.maxPushDescriptors);}();
return result;}

    VkPhysicalDevicePushDescriptorPropertiesKHR deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(json name){
        auto result=VkPhysicalDevicePushDescriptorPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPushDescriptors=deserialize_uint32_t(name["members"]["maxPushDescriptors"]);}();
return result;}

    json serialize_VkConformanceVersion(VkConformanceVersion name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_pfgVvbR=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_YvfPioV=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_zOpGdmi=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_ywBMzXw=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersion deserialize_VkConformanceVersion(json name){
        auto result=VkConformanceVersion();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkConformanceVersionKHR(VkConformanceVersionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_VfESteR=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_ptfUyvA=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_zkbYNrg=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_PBGGTIN=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersionKHR deserialize_VkConformanceVersionKHR(json name){
        auto result=VkConformanceVersionKHR();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverProperties(VkPhysicalDeviceDriverProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FWCGqTe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fxatAqF=json({});
    
        if (name.pNext==NULL){
            return_fxatAqF["null"]=true;
            return return_fxatAqF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_LquTTaA=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_FvGlWfk=json({});
    
        return_FvGlWfk["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_xhHpZMU=json({});
    return serialize_char(name.driverName[i]);}();
            return_FvGlWfk["members"][std::to_string(i)].push_back(temp);
        }
        return return_FvGlWfk;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_AOKdzHS=json({});
    
        return_AOKdzHS["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_nicEXUm=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_AOKdzHS["members"][std::to_string(i)].push_back(temp);
        }
        return return_AOKdzHS;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_LJVtIna=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverProperties deserialize_VkPhysicalDeviceDriverProperties(json name){
        auto result=VkPhysicalDeviceDriverProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int TEiiiUN=0; TEiiiUN < VK_MAX_DRIVER_NAME_SIZE; TEiiiUN++){
            [&]() {
result.driverName[TEiiiUN]=deserialize_char(name["members"]["driverName"]["members"][TEiiiUN]);}();;
        }
        }();
[&]() {

        for (int OlqenDF=0; OlqenDF < VK_MAX_DRIVER_INFO_SIZE; OlqenDF++){
            [&]() {
result.driverInfo[OlqenDF]=deserialize_char(name["members"]["driverInfo"]["members"][OlqenDF]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverPropertiesKHR(VkPhysicalDeviceDriverPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HUgWkZj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nsBQOoa=json({});
    
        if (name.pNext==NULL){
            return_nsBQOoa["null"]=true;
            return return_nsBQOoa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_NEfEJJB=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_CLHFTad=json({});
    
        return_CLHFTad["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lLSgvje=json({});
    return serialize_char(name.driverName[i]);}();
            return_CLHFTad["members"][std::to_string(i)].push_back(temp);
        }
        return return_CLHFTad;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_yKSNcJs=json({});
    
        return_yKSNcJs["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_FMUdWmH=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_yKSNcJs["members"][std::to_string(i)].push_back(temp);
        }
        return return_yKSNcJs;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_lPidaCO=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverPropertiesKHR deserialize_VkPhysicalDeviceDriverPropertiesKHR(json name){
        auto result=VkPhysicalDeviceDriverPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int pmRMumG=0; pmRMumG < VK_MAX_DRIVER_NAME_SIZE; pmRMumG++){
            [&]() {
result.driverName[pmRMumG]=deserialize_char(name["members"]["driverName"]["members"][pmRMumG]);}();;
        }
        }();
[&]() {

        for (int sySwKku=0; sySwKku < VK_MAX_DRIVER_INFO_SIZE; sySwKku++){
            [&]() {
result.driverInfo[sySwKku]=deserialize_char(name["members"]["driverInfo"]["members"][sySwKku]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPresentRegionsKHR(VkPresentRegionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JtJWpeL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yIaAZwm=json({});
    
        if (name.pNext==NULL){
            return_yIaAZwm["null"]=true;
            return return_yIaAZwm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_tiaSvoI=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pRegions"]=[&]() {
    json return_lvLuzLu=json({});
    
        if (name.pRegions==NULL){
            return_lvLuzLu["null"]=true;
            return return_lvLuzLu;
        }
        
        return_lvLuzLu["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_fBHCRYG=json({});
    return serialize_VkPresentRegionKHR(name.pRegions[i]);}();
            return_lvLuzLu["members"][std::to_string(i)].push_back(temp);
        }
        return return_lvLuzLu;
        }();
return result;}

    VkPresentRegionsKHR deserialize_VkPresentRegionsKHR(json name){
        auto result=VkPresentRegionsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XZJWVRC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XZJWVRC=NULL;
        }
    temp_XZJWVRC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XZJWVRC;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentRegionKHR* temp_nBVIChf;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_nBVIChf=NULL;
        }
    temp_nBVIChf=(VkPresentRegionKHR*)malloc(result.swapchainCount*sizeof(VkPresentRegionKHR));
        for (int IflNFlY=0; IflNFlY < result.swapchainCount; IflNFlY++){
            [&]() {
temp_nBVIChf[IflNFlY]=deserialize_VkPresentRegionKHR(name["members"]["pRegions"]["members"][IflNFlY]);}();;
        }
        }();result.pRegions=temp_nBVIChf;}();
return result;}

    json serialize_VkPresentRegionKHR(VkPresentRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rectangleCount"]=[&]() {
    json return_KOpKfga=json({});
    return serialize_uint32_t(name.rectangleCount);}();
result["members"]["pRectangles"]=[&]() {
    json return_lsGSOIe=json({});
    
        if (name.pRectangles==NULL){
            return_lsGSOIe["null"]=true;
            return return_lsGSOIe;
        }
        
        return_lsGSOIe["members"]={};
        for(int i=0; i < name.rectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_XvREBue=json({});
    return serialize_VkRectLayerKHR(name.pRectangles[i]);}();
            return_lsGSOIe["members"][std::to_string(i)].push_back(temp);
        }
        return return_lsGSOIe;
        }();
return result;}

    VkPresentRegionKHR deserialize_VkPresentRegionKHR(json name){
        auto result=VkPresentRegionKHR();
    
[&]() {
result.rectangleCount=deserialize_uint32_t(name["members"]["rectangleCount"]);}();
[&]() {
VkRectLayerKHR* temp_PcrcEWf;[&]() {

        if (name["members"]["pRectangles"].contains("null")){
        temp_PcrcEWf=NULL;
        }
    temp_PcrcEWf=(VkRectLayerKHR*)malloc(result.rectangleCount*sizeof(VkRectLayerKHR));
        for (int ZvEkzHe=0; ZvEkzHe < result.rectangleCount; ZvEkzHe++){
            [&]() {
temp_PcrcEWf[ZvEkzHe]=deserialize_VkRectLayerKHR(name["members"]["pRectangles"]["members"][ZvEkzHe]);}();;
        }
        }();result.pRectangles=temp_PcrcEWf;}();
return result;}

    json serialize_VkRectLayerKHR(VkRectLayerKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_Qnunwfj=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_OkiZzwG=json({});
    return serialize_VkExtent2D(name.extent);}();
result["members"]["layer"]=[&]() {
    json return_ZfpflZq=json({});
    return serialize_uint32_t(name.layer);}();
return result;}

    VkRectLayerKHR deserialize_VkRectLayerKHR(json name){
        auto result=VkRectLayerKHR();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
[&]() {
result.layer=deserialize_uint32_t(name["members"]["layer"]);}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeatures(VkPhysicalDeviceVariablePointersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RYagwnl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lhXxgpd=json({});
    
        if (name.pNext==NULL){
            return_lhXxgpd["null"]=true;
            return return_lhXxgpd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_BxhVRIu=json({});
    return_BxhVRIu=[&]() {
    json return_tUAWitv=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_BxhVRIu;}();
result["members"]["variablePointers"]=[&]() {
    json return_uvZylxa=json({});
    return_uvZylxa=[&]() {
    json return_HrSktFX=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_uvZylxa;}();
return result;}

    VkPhysicalDeviceVariablePointersFeatures deserialize_VkPhysicalDeviceVariablePointersFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(VkPhysicalDeviceVariablePointersFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_koHSuLO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_obpgwLY=json({});
    
        if (name.pNext==NULL){
            return_obpgwLY["null"]=true;
            return return_obpgwLY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_LyimHjB=json({});
    return_LyimHjB=[&]() {
    json return_GYfuzsn=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_LyimHjB;}();
result["members"]["variablePointers"]=[&]() {
    json return_XbDEveU=json({});
    return_XbDEveU=[&]() {
    json return_roVrqlF=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_XbDEveU;}();
return result;}

    VkPhysicalDeviceVariablePointersFeaturesKHR deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointersFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(VkPhysicalDeviceVariablePointerFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RkMITgr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oLLxGli=json({});
    
        if (name.pNext==NULL){
            return_oLLxGli["null"]=true;
            return return_oLLxGli;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_TCcAVRr=json({});
    return_TCcAVRr=[&]() {
    json return_gpYyIcm=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_TCcAVRr;}();
result["members"]["variablePointers"]=[&]() {
    json return_KzynDst=json({});
    return_KzynDst=[&]() {
    json return_rwLZJui=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_KzynDst;}();
return result;}

    VkPhysicalDeviceVariablePointerFeaturesKHR deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointerFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeatures(VkPhysicalDeviceVariablePointerFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qfPCKkS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lgUXmWW=json({});
    
        if (name.pNext==NULL){
            return_lgUXmWW["null"]=true;
            return return_lgUXmWW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_finCpPK=json({});
    return_finCpPK=[&]() {
    json return_KhAmsQN=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_finCpPK;}();
result["members"]["variablePointers"]=[&]() {
    json return_yfpLhaM=json({});
    return_yfpLhaM=[&]() {
    json return_CMsspfW=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_yfpLhaM;}();
return result;}

    VkPhysicalDeviceVariablePointerFeatures deserialize_VkPhysicalDeviceVariablePointerFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointerFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkExternalMemoryProperties(VkExternalMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_hPGvWRJ=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_vfTEMdb=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_mzgmmMt=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryProperties deserialize_VkExternalMemoryProperties(json name){
        auto result=VkExternalMemoryProperties();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryPropertiesKHR(VkExternalMemoryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_WErcuLr=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_UATJkrx=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_ECvLSGA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryPropertiesKHR deserialize_VkExternalMemoryPropertiesKHR(json name){
        auto result=VkExternalMemoryPropertiesKHR();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfo(VkPhysicalDeviceExternalImageFormatInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KCZwRip=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FMNJJDZ=json({});
    
        if (name.pNext==NULL){
            return_FMNJJDZ["null"]=true;
            return return_FMNJJDZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_ZhoXagz=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfo deserialize_VkPhysicalDeviceExternalImageFormatInfo(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SvHiQwC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SvHiQwC=NULL;
        }
    temp_SvHiQwC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SvHiQwC;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(VkPhysicalDeviceExternalImageFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uShLXEQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hWFoDME=json({});
    
        if (name.pNext==NULL){
            return_hWFoDME["null"]=true;
            return return_hWFoDME;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_JMoZntj=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfoKHR deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ApTyWCi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ApTyWCi=NULL;
        }
    temp_ApTyWCi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ApTyWCi;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalImageFormatProperties(VkExternalImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rbvIMzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SBbxFRG=json({});
    
        if (name.pNext==NULL){
            return_SBbxFRG["null"]=true;
            return return_SBbxFRG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_lPfaOUE=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatProperties deserialize_VkExternalImageFormatProperties(json name){
        auto result=VkExternalImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesKHR(VkExternalImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TyLXiRl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MVvZFtt=json({});
    
        if (name.pNext==NULL){
            return_MVvZFtt["null"]=true;
            return return_MVvZFtt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_jwptwzm=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatPropertiesKHR deserialize_VkExternalImageFormatPropertiesKHR(json name){
        auto result=VkExternalImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfo(VkPhysicalDeviceExternalBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zlqKOHw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JTYoAtp=json({});
    
        if (name.pNext==NULL){
            return_JTYoAtp["null"]=true;
            return return_JTYoAtp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lSGnBNp=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_qziPvaA=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_AnSXwsC=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfo deserialize_VkPhysicalDeviceExternalBufferInfo(json name){
        auto result=VkPhysicalDeviceExternalBufferInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tuGUixH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tuGUixH=NULL;
        }
    temp_tuGUixH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tuGUixH;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfoKHR(VkPhysicalDeviceExternalBufferInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YWJFxgC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iCGokdd=json({});
    
        if (name.pNext==NULL){
            return_iCGokdd["null"]=true;
            return return_iCGokdd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jihiqTL=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_QLeeUSh=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_mFMoXck=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfoKHR deserialize_VkPhysicalDeviceExternalBufferInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalBufferInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WRPhDSk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WRPhDSk=NULL;
        }
    temp_WRPhDSk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WRPhDSk;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalBufferProperties(VkExternalBufferProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AUDYACC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mFOEusq=json({});
    
        if (name.pNext==NULL){
            return_mFOEusq["null"]=true;
            return return_mFOEusq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_xdPPDQh=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferProperties deserialize_VkExternalBufferProperties(json name){
        auto result=VkExternalBufferProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalBufferPropertiesKHR(VkExternalBufferPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qHQlnnr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kVxBzkd=json({});
    
        if (name.pNext==NULL){
            return_kVxBzkd["null"]=true;
            return return_kVxBzkd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_YFDZYNi=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferPropertiesKHR deserialize_VkExternalBufferPropertiesKHR(json name){
        auto result=VkExternalBufferPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceIDProperties(VkPhysicalDeviceIDProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vtfugph=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YmMEPEC=json({});
    
        if (name.pNext==NULL){
            return_YmMEPEC["null"]=true;
            return return_YmMEPEC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_QmjnPad=json({});
    
        return_QmjnPad["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_reJPHrF=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_QmjnPad["members"][std::to_string(i)].push_back(temp);
        }
        return return_QmjnPad;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_lKYdKfP=json({});
    
        return_lKYdKfP["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_VXmUSxE=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_lKYdKfP["members"][std::to_string(i)].push_back(temp);
        }
        return return_lKYdKfP;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_qXLgFQP=json({});
    
        return_qXLgFQP["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_aJrUOeb=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_qXLgFQP["members"][std::to_string(i)].push_back(temp);
        }
        return return_qXLgFQP;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_wBgFsnv=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_sNfyfsF=json({});
    return_sNfyfsF=[&]() {
    json return_YpcJQda=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_sNfyfsF;}();
return result;}

    VkPhysicalDeviceIDProperties deserialize_VkPhysicalDeviceIDProperties(json name){
        auto result=VkPhysicalDeviceIDProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int OXtwreS=0; OXtwreS < VK_UUID_SIZE; OXtwreS++){
            [&]() {
result.deviceUUID[OXtwreS]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][OXtwreS]);}();;
        }
        }();
[&]() {

        for (int MbwoxGS=0; MbwoxGS < VK_UUID_SIZE; MbwoxGS++){
            [&]() {
result.driverUUID[MbwoxGS]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][MbwoxGS]);}();;
        }
        }();
[&]() {

        for (int pvYXlyY=0; pvYXlyY < VK_LUID_SIZE; pvYXlyY++){
            [&]() {
result.deviceLUID[pvYXlyY]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][pvYXlyY]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIDPropertiesKHR(VkPhysicalDeviceIDPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NintfZP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pIDoLgQ=json({});
    
        if (name.pNext==NULL){
            return_pIDoLgQ["null"]=true;
            return return_pIDoLgQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_blxSyAi=json({});
    
        return_blxSyAi["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_VaJDnVu=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_blxSyAi["members"][std::to_string(i)].push_back(temp);
        }
        return return_blxSyAi;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_feZIHWO=json({});
    
        return_feZIHWO["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_djlgHlW=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_feZIHWO["members"][std::to_string(i)].push_back(temp);
        }
        return return_feZIHWO;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_JPThJtk=json({});
    
        return_JPThJtk["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_AGAiKez=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_JPThJtk["members"][std::to_string(i)].push_back(temp);
        }
        return return_JPThJtk;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_ClsLrqK=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_kjvKRqW=json({});
    return_kjvKRqW=[&]() {
    json return_vhpHVSv=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_kjvKRqW;}();
return result;}

    VkPhysicalDeviceIDPropertiesKHR deserialize_VkPhysicalDeviceIDPropertiesKHR(json name){
        auto result=VkPhysicalDeviceIDPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int wLjYcdA=0; wLjYcdA < VK_UUID_SIZE; wLjYcdA++){
            [&]() {
result.deviceUUID[wLjYcdA]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][wLjYcdA]);}();;
        }
        }();
[&]() {

        for (int LxTBTFF=0; LxTBTFF < VK_UUID_SIZE; LxTBTFF++){
            [&]() {
result.driverUUID[LxTBTFF]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][LxTBTFF]);}();;
        }
        }();
[&]() {

        for (int xtdAmZb=0; xtdAmZb < VK_LUID_SIZE; xtdAmZb++){
            [&]() {
result.deviceLUID[xtdAmZb]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][xtdAmZb]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfo(VkExternalMemoryImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_evIZczP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iHfXARP=json({});
    
        if (name.pNext==NULL){
            return_iHfXARP["null"]=true;
            return return_iHfXARP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_seJvjVX=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfo deserialize_VkExternalMemoryImageCreateInfo(json name){
        auto result=VkExternalMemoryImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MJJFGZX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MJJFGZX=NULL;
        }
    temp_MJJFGZX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MJJFGZX;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoKHR(VkExternalMemoryImageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yMYXwMI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HTEQukG=json({});
    
        if (name.pNext==NULL){
            return_HTEQukG["null"]=true;
            return return_HTEQukG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_bHsiBbe=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoKHR deserialize_VkExternalMemoryImageCreateInfoKHR(json name){
        auto result=VkExternalMemoryImageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pgdyvqo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pgdyvqo=NULL;
        }
    temp_pgdyvqo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pgdyvqo;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfo(VkExternalMemoryBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KlytECs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vANQtQK=json({});
    
        if (name.pNext==NULL){
            return_vANQtQK["null"]=true;
            return return_vANQtQK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_SWhVFmQ=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfo deserialize_VkExternalMemoryBufferCreateInfo(json name){
        auto result=VkExternalMemoryBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xwYgsNT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xwYgsNT=NULL;
        }
    temp_xwYgsNT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xwYgsNT;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfoKHR(VkExternalMemoryBufferCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LIOTHpV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LxRDqZQ=json({});
    
        if (name.pNext==NULL){
            return_LxRDqZQ["null"]=true;
            return return_LxRDqZQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_nBlmyxO=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfoKHR deserialize_VkExternalMemoryBufferCreateInfoKHR(json name){
        auto result=VkExternalMemoryBufferCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eEbNInI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eEbNInI=NULL;
        }
    temp_eEbNInI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eEbNInI;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfo(VkExportMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jxYRfBZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ToNpznt=json({});
    
        if (name.pNext==NULL){
            return_ToNpznt["null"]=true;
            return return_ToNpznt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_oCQHgWa=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfo deserialize_VkExportMemoryAllocateInfo(json name){
        auto result=VkExportMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OxAnsUe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OxAnsUe=NULL;
        }
    temp_OxAnsUe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OxAnsUe;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoKHR(VkExportMemoryAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bcVNjwr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_myVmIuK=json({});
    
        if (name.pNext==NULL){
            return_myVmIuK["null"]=true;
            return return_myVmIuK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_nYnyNiw=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoKHR deserialize_VkExportMemoryAllocateInfoKHR(json name){
        auto result=VkExportMemoryAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fbbXdEi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fbbXdEi=NULL;
        }
    temp_fbbXdEi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fbbXdEi;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportMemoryFdInfoKHR(VkImportMemoryFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yIytdvd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KFKEtnm=json({});
    
        if (name.pNext==NULL){
            return_KFKEtnm["null"]=true;
            return return_KFKEtnm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_XeVZzWM=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_YAFirdw=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportMemoryFdInfoKHR deserialize_VkImportMemoryFdInfoKHR(json name){
        auto result=VkImportMemoryFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FnjZzSM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FnjZzSM=NULL;
        }
    temp_FnjZzSM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FnjZzSM;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkMemoryFdPropertiesKHR(VkMemoryFdPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WgjvyMm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FAfUONG=json({});
    
        if (name.pNext==NULL){
            return_FAfUONG["null"]=true;
            return return_FAfUONG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_yvZgHGg=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryFdPropertiesKHR deserialize_VkMemoryFdPropertiesKHR(json name){
        auto result=VkMemoryFdPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkMemoryGetFdInfoKHR(VkMemoryGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ICylWgZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lZLthIh=json({});
    
        if (name.pNext==NULL){
            return_lZLthIh["null"]=true;
            return return_lZLthIh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_vEOdzHo=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_xISFpSf=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetFdInfoKHR deserialize_VkMemoryGetFdInfoKHR(json name){
        auto result=VkMemoryGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gDBIynk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gDBIynk=NULL;
        }
    temp_gDBIynk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gDBIynk;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfo(VkPhysicalDeviceExternalSemaphoreInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uYXSsfd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NoZaTuK=json({});
    
        if (name.pNext==NULL){
            return_NoZaTuK["null"]=true;
            return return_NoZaTuK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_TpoUBIR=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfo deserialize_VkPhysicalDeviceExternalSemaphoreInfo(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EObWVVj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EObWVVj=NULL;
        }
    temp_EObWVVj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EObWVVj;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(VkPhysicalDeviceExternalSemaphoreInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_crJgtmu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nYLwTHi=json({});
    
        if (name.pNext==NULL){
            return_nYLwTHi["null"]=true;
            return return_nYLwTHi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_oaHajjh=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfoKHR deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ikVtpCp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ikVtpCp=NULL;
        }
    temp_ikVtpCp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ikVtpCp;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalSemaphoreProperties(VkExternalSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yfUgQqL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nnpQQbv=json({});
    
        if (name.pNext==NULL){
            return_nnpQQbv["null"]=true;
            return return_nnpQQbv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_RrGRvRR=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_wZDvudA=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_NcaeJqe=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphoreProperties deserialize_VkExternalSemaphoreProperties(json name){
        auto result=VkExternalSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExternalSemaphorePropertiesKHR(VkExternalSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VRxMWgk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wNSRgeN=json({});
    
        if (name.pNext==NULL){
            return_wNSRgeN["null"]=true;
            return return_wNSRgeN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_EKxNbuB=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_yqyZjxd=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_qrAziqT=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphorePropertiesKHR deserialize_VkExternalSemaphorePropertiesKHR(json name){
        auto result=VkExternalSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfo(VkExportSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YDccFHW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CkeXptD=json({});
    
        if (name.pNext==NULL){
            return_CkeXptD["null"]=true;
            return return_CkeXptD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_fDOFafE=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfo deserialize_VkExportSemaphoreCreateInfo(json name){
        auto result=VkExportSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uFyVJMm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uFyVJMm=NULL;
        }
    temp_uFyVJMm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uFyVJMm;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfoKHR(VkExportSemaphoreCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vFRiNPI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RZQqYxX=json({});
    
        if (name.pNext==NULL){
            return_RZQqYxX["null"]=true;
            return return_RZQqYxX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_jIBVUlN=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfoKHR deserialize_VkExportSemaphoreCreateInfoKHR(json name){
        auto result=VkExportSemaphoreCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vBzYQyA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vBzYQyA=NULL;
        }
    temp_vBzYQyA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vBzYQyA;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportSemaphoreFdInfoKHR(VkImportSemaphoreFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XTjavyR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mUrMqVO=json({});
    
        if (name.pNext==NULL){
            return_mUrMqVO["null"]=true;
            return return_mUrMqVO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_UPxNslc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["flags"]=[&]() {
    json return_ijFxwpy=json({});
    return serialize_VkSemaphoreImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_mdWGexs=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_qMFDGCj=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportSemaphoreFdInfoKHR deserialize_VkImportSemaphoreFdInfoKHR(json name){
        auto result=VkImportSemaphoreFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BxiLfwr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BxiLfwr=NULL;
        }
    temp_BxiLfwr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BxiLfwr;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.flags=deserialize_VkSemaphoreImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkSemaphoreGetFdInfoKHR(VkSemaphoreGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NxSfWwQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_khWwjrD=json({});
    
        if (name.pNext==NULL){
            return_khWwjrD["null"]=true;
            return return_khWwjrD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_LNSFlST=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["handleType"]=[&]() {
    json return_QrTfLPR=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkSemaphoreGetFdInfoKHR deserialize_VkSemaphoreGetFdInfoKHR(json name){
        auto result=VkSemaphoreGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aCtaOxh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aCtaOxh=NULL;
        }
    temp_aCtaOxh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aCtaOxh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfo(VkPhysicalDeviceExternalFenceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IOUISLW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVMCkvu=json({});
    
        if (name.pNext==NULL){
            return_gVMCkvu["null"]=true;
            return return_gVMCkvu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_FTzQUnS=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfo deserialize_VkPhysicalDeviceExternalFenceInfo(json name){
        auto result=VkPhysicalDeviceExternalFenceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DNhYmWo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DNhYmWo=NULL;
        }
    temp_DNhYmWo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DNhYmWo;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfoKHR(VkPhysicalDeviceExternalFenceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AjYPTKV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ytUVguN=json({});
    
        if (name.pNext==NULL){
            return_ytUVguN["null"]=true;
            return return_ytUVguN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_IYCwYFT=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfoKHR deserialize_VkPhysicalDeviceExternalFenceInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalFenceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zRkNhTp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zRkNhTp=NULL;
        }
    temp_zRkNhTp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zRkNhTp;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalFenceProperties(VkExternalFenceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hcxzoxC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pfiLbYg=json({});
    
        if (name.pNext==NULL){
            return_pfiLbYg["null"]=true;
            return return_pfiLbYg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_xoPGzVk=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_mZWhxNf=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_vcatAkb=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFenceProperties deserialize_VkExternalFenceProperties(json name){
        auto result=VkExternalFenceProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExternalFencePropertiesKHR(VkExternalFencePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jDopQCy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ANpXbeC=json({});
    
        if (name.pNext==NULL){
            return_ANpXbeC["null"]=true;
            return return_ANpXbeC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_QtVpNqn=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_NeMBKad=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_LZgtZdF=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFencePropertiesKHR deserialize_VkExternalFencePropertiesKHR(json name){
        auto result=VkExternalFencePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExportFenceCreateInfo(VkExportFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lqmYeDu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cKLYLJY=json({});
    
        if (name.pNext==NULL){
            return_cKLYLJY["null"]=true;
            return return_cKLYLJY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_WScEmbn=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfo deserialize_VkExportFenceCreateInfo(json name){
        auto result=VkExportFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OfqbpEm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OfqbpEm=NULL;
        }
    temp_OfqbpEm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OfqbpEm;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportFenceCreateInfoKHR(VkExportFenceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XizaLnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YPefmEt=json({});
    
        if (name.pNext==NULL){
            return_YPefmEt["null"]=true;
            return return_YPefmEt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_gjnTJJw=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfoKHR deserialize_VkExportFenceCreateInfoKHR(json name){
        auto result=VkExportFenceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aWWEixh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aWWEixh=NULL;
        }
    temp_aWWEixh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aWWEixh;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportFenceFdInfoKHR(VkImportFenceFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GEqEdrR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LrpQRAj=json({});
    
        if (name.pNext==NULL){
            return_LrpQRAj["null"]=true;
            return return_LrpQRAj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_YBsNEdq=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["flags"]=[&]() {
    json return_jJSixTw=json({});
    return serialize_VkFenceImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_maijKBy=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_fqHZXmx=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportFenceFdInfoKHR deserialize_VkImportFenceFdInfoKHR(json name){
        auto result=VkImportFenceFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wjcvrjf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wjcvrjf=NULL;
        }
    temp_wjcvrjf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wjcvrjf;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.flags=deserialize_VkFenceImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkFenceGetFdInfoKHR(VkFenceGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IBtVHmt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_leizUte=json({});
    
        if (name.pNext==NULL){
            return_leizUte["null"]=true;
            return return_leizUte;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_NjlMQPf=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["handleType"]=[&]() {
    json return_mpvrLZL=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkFenceGetFdInfoKHR deserialize_VkFenceGetFdInfoKHR(json name){
        auto result=VkFenceGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tRjfnOJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tRjfnOJ=NULL;
        }
    temp_tRjfnOJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tRjfnOJ;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeatures(VkPhysicalDeviceMultiviewFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xZRDioQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BDDQCca=json({});
    
        if (name.pNext==NULL){
            return_BDDQCca["null"]=true;
            return return_BDDQCca;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_oagRyQE=json({});
    return_oagRyQE=[&]() {
    json return_XcgYXtK=json({});
    return serialize_uint32_t(name.multiview);}();return return_oagRyQE;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_XfIvOWG=json({});
    return_XfIvOWG=[&]() {
    json return_FWMRtSp=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_XfIvOWG;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_sflfChe=json({});
    return_sflfChe=[&]() {
    json return_nRIfSkZ=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_sflfChe;}();
return result;}

    VkPhysicalDeviceMultiviewFeatures deserialize_VkPhysicalDeviceMultiviewFeatures(json name){
        auto result=VkPhysicalDeviceMultiviewFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeaturesKHR(VkPhysicalDeviceMultiviewFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zJvfIlM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MQVLaEv=json({});
    
        if (name.pNext==NULL){
            return_MQVLaEv["null"]=true;
            return return_MQVLaEv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_pQolFww=json({});
    return_pQolFww=[&]() {
    json return_bFRHEFR=json({});
    return serialize_uint32_t(name.multiview);}();return return_pQolFww;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_FQSBnRJ=json({});
    return_FQSBnRJ=[&]() {
    json return_MjzJvZY=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_FQSBnRJ;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_AuDfcDm=json({});
    return_AuDfcDm=[&]() {
    json return_xGRbVfg=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_AuDfcDm;}();
return result;}

    VkPhysicalDeviceMultiviewFeaturesKHR deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewProperties(VkPhysicalDeviceMultiviewProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HTTlpOf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WwqbKZh=json({});
    
        if (name.pNext==NULL){
            return_WwqbKZh["null"]=true;
            return return_WwqbKZh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_EbdTTVy=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_gywaseg=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewProperties deserialize_VkPhysicalDeviceMultiviewProperties(json name){
        auto result=VkPhysicalDeviceMultiviewProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPropertiesKHR(VkPhysicalDeviceMultiviewPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fHSfIsB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ktllymB=json({});
    
        if (name.pNext==NULL){
            return_ktllymB["null"]=true;
            return return_ktllymB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_QmzmrtP=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_tJeTNFB=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewPropertiesKHR deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfo(VkRenderPassMultiviewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QijMuiI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zpsNNHz=json({});
    
        if (name.pNext==NULL){
            return_zpsNNHz["null"]=true;
            return return_zpsNNHz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_iGseQPJ=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_zrSgiSu=json({});
    
        if (name.pViewMasks==NULL){
            return_zrSgiSu["null"]=true;
            return return_zrSgiSu;
        }
        
        return_zrSgiSu["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_ZuIrEMh=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_zrSgiSu["members"][std::to_string(i)].push_back(temp);
        }
        return return_zrSgiSu;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_bCTfdVl=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_iIrtuXO=json({});
    
        if (name.pViewOffsets==NULL){
            return_iIrtuXO["null"]=true;
            return return_iIrtuXO;
        }
        
        return_iIrtuXO["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_NZPYVpB=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_iIrtuXO["members"][std::to_string(i)].push_back(temp);
        }
        return return_iIrtuXO;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_HdFMoVB=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_nrHhPdm=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_nrHhPdm["null"]=true;
            return return_nrHhPdm;
        }
        
        return_nrHhPdm["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_DAcEXqz=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_nrHhPdm["members"][std::to_string(i)].push_back(temp);
        }
        return return_nrHhPdm;
        }();
return result;}

    VkRenderPassMultiviewCreateInfo deserialize_VkRenderPassMultiviewCreateInfo(json name){
        auto result=VkRenderPassMultiviewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QaZIPNS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QaZIPNS=NULL;
        }
    temp_QaZIPNS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QaZIPNS;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_hIUpoXa;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_hIUpoXa=NULL;
        }
    temp_hIUpoXa=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int XeGEvwx=0; XeGEvwx < result.subpassCount; XeGEvwx++){
            [&]() {
temp_hIUpoXa[XeGEvwx]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][XeGEvwx]);}();;
        }
        }();result.pViewMasks=temp_hIUpoXa;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_KocwflW;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_KocwflW=NULL;
        }
    temp_KocwflW=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int lVaYUIY=0; lVaYUIY < result.dependencyCount; lVaYUIY++){
            [&]() {
temp_KocwflW[lVaYUIY]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][lVaYUIY]);}();;
        }
        }();result.pViewOffsets=temp_KocwflW;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_AseMzGi;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_AseMzGi=NULL;
        }
    temp_AseMzGi=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int sUxgaPb=0; sUxgaPb < result.correlationMaskCount; sUxgaPb++){
            [&]() {
temp_AseMzGi[sUxgaPb]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][sUxgaPb]);}();;
        }
        }();result.pCorrelationMasks=temp_AseMzGi;}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfoKHR(VkRenderPassMultiviewCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uZKczyE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oThOVKD=json({});
    
        if (name.pNext==NULL){
            return_oThOVKD["null"]=true;
            return return_oThOVKD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_WyYfSNX=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_nWBPDKw=json({});
    
        if (name.pViewMasks==NULL){
            return_nWBPDKw["null"]=true;
            return return_nWBPDKw;
        }
        
        return_nWBPDKw["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_KSnxFVD=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_nWBPDKw["members"][std::to_string(i)].push_back(temp);
        }
        return return_nWBPDKw;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_WPnLxJK=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_tLKRRjr=json({});
    
        if (name.pViewOffsets==NULL){
            return_tLKRRjr["null"]=true;
            return return_tLKRRjr;
        }
        
        return_tLKRRjr["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_BxrTWny=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_tLKRRjr["members"][std::to_string(i)].push_back(temp);
        }
        return return_tLKRRjr;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_sDULSsk=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_UbrCdpL=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_UbrCdpL["null"]=true;
            return return_UbrCdpL;
        }
        
        return_UbrCdpL["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_bOVpiBL=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_UbrCdpL["members"][std::to_string(i)].push_back(temp);
        }
        return return_UbrCdpL;
        }();
return result;}

    VkRenderPassMultiviewCreateInfoKHR deserialize_VkRenderPassMultiviewCreateInfoKHR(json name){
        auto result=VkRenderPassMultiviewCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PwVNmSk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PwVNmSk=NULL;
        }
    temp_PwVNmSk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PwVNmSk;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_MGgloAb;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_MGgloAb=NULL;
        }
    temp_MGgloAb=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int NxpATSj=0; NxpATSj < result.subpassCount; NxpATSj++){
            [&]() {
temp_MGgloAb[NxpATSj]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][NxpATSj]);}();;
        }
        }();result.pViewMasks=temp_MGgloAb;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_aWSETDe;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_aWSETDe=NULL;
        }
    temp_aWSETDe=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int NKPjYfI=0; NKPjYfI < result.dependencyCount; NKPjYfI++){
            [&]() {
temp_aWSETDe[NKPjYfI]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][NKPjYfI]);}();;
        }
        }();result.pViewOffsets=temp_aWSETDe;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_jlqGIcD;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_jlqGIcD=NULL;
        }
    temp_jlqGIcD=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int zZUYfPX=0; zZUYfPX < result.correlationMaskCount; zZUYfPX++){
            [&]() {
temp_jlqGIcD[zZUYfPX]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][zZUYfPX]);}();;
        }
        }();result.pCorrelationMasks=temp_jlqGIcD;}();
return result;}

    json serialize_VkSurfaceCapabilities2EXT(VkSurfaceCapabilities2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JStfVJD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GCYSjHX=json({});
    
        if (name.pNext==NULL){
            return_GCYSjHX["null"]=true;
            return return_GCYSjHX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImageCount"]=[&]() {
    json return_mNkQYqh=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_KJdJzQp=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_GzleDvq=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_uaAHswL=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_NQushuz=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_WSakPNz=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_tuMvhvM=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_uiViNOp=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_tuobJWH=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_pdevYss=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
result["members"]["supportedSurfaceCounters"]=[&]() {
    json return_yMRWrGb=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.supportedSurfaceCounters);}();
return result;}

    VkSurfaceCapabilities2EXT deserialize_VkSurfaceCapabilities2EXT(json name){
        auto result=VkSurfaceCapabilities2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
[&]() {
result.supportedSurfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["supportedSurfaceCounters"]);}();
return result;}

    json serialize_VkDisplayPowerInfoEXT(VkDisplayPowerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jxXTzER=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FyHuYbD=json({});
    
        if (name.pNext==NULL){
            return_FyHuYbD["null"]=true;
            return return_FyHuYbD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["powerState"]=[&]() {
    json return_vcNHWQW=json({});
    return serialize_VkDisplayPowerStateEXT(name.powerState);}();
return result;}

    VkDisplayPowerInfoEXT deserialize_VkDisplayPowerInfoEXT(json name){
        auto result=VkDisplayPowerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MJPLiwE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MJPLiwE=NULL;
        }
    temp_MJPLiwE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MJPLiwE;}();
[&]() {
result.powerState=deserialize_VkDisplayPowerStateEXT(name["members"]["powerState"]);}();
return result;}

    json serialize_VkDeviceEventInfoEXT(VkDeviceEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_icKHFSv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cmVIxQT=json({});
    
        if (name.pNext==NULL){
            return_cmVIxQT["null"]=true;
            return return_cmVIxQT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceEvent"]=[&]() {
    json return_NuatqUx=json({});
    return serialize_VkDeviceEventTypeEXT(name.deviceEvent);}();
return result;}

    VkDeviceEventInfoEXT deserialize_VkDeviceEventInfoEXT(json name){
        auto result=VkDeviceEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MkahbQU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MkahbQU=NULL;
        }
    temp_MkahbQU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MkahbQU;}();
[&]() {
result.deviceEvent=deserialize_VkDeviceEventTypeEXT(name["members"]["deviceEvent"]);}();
return result;}

    json serialize_VkDisplayEventInfoEXT(VkDisplayEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KoPyCeH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GRsQDPT=json({});
    
        if (name.pNext==NULL){
            return_GRsQDPT["null"]=true;
            return return_GRsQDPT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayEvent"]=[&]() {
    json return_yUXxBbh=json({});
    return serialize_VkDisplayEventTypeEXT(name.displayEvent);}();
return result;}

    VkDisplayEventInfoEXT deserialize_VkDisplayEventInfoEXT(json name){
        auto result=VkDisplayEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eCPHHTB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eCPHHTB=NULL;
        }
    temp_eCPHHTB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eCPHHTB;}();
[&]() {
result.displayEvent=deserialize_VkDisplayEventTypeEXT(name["members"]["displayEvent"]);}();
return result;}

    json serialize_VkSwapchainCounterCreateInfoEXT(VkSwapchainCounterCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yUyeHkz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uffnGEl=json({});
    
        if (name.pNext==NULL){
            return_uffnGEl["null"]=true;
            return return_uffnGEl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCounters"]=[&]() {
    json return_NIjqjLx=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.surfaceCounters);}();
return result;}

    VkSwapchainCounterCreateInfoEXT deserialize_VkSwapchainCounterCreateInfoEXT(json name){
        auto result=VkSwapchainCounterCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cMwEYmA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cMwEYmA=NULL;
        }
    temp_cMwEYmA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cMwEYmA;}();
[&]() {
result.surfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["surfaceCounters"]);}();
return result;}

    json serialize_VkPhysicalDeviceGroupProperties(VkPhysicalDeviceGroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ynfZoth=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iTGdNrJ=json({});
    
        if (name.pNext==NULL){
            return_iTGdNrJ["null"]=true;
            return return_iTGdNrJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_QPLoPjc=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_MmayRwz=json({});
    
        return_MmayRwz["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_PLRrMXm=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_MmayRwz["members"][std::to_string(i)].push_back(temp);
        }
        return return_MmayRwz;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_JYqQaRq=json({});
    return_JYqQaRq=[&]() {
    json return_nMIfUKj=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_JYqQaRq;}();
return result;}

    VkPhysicalDeviceGroupProperties deserialize_VkPhysicalDeviceGroupProperties(json name){
        auto result=VkPhysicalDeviceGroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int mQVTxZJ=0; mQVTxZJ < VK_MAX_DEVICE_GROUP_SIZE; mQVTxZJ++){
            [&]() {
result.physicalDevices[mQVTxZJ]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][mQVTxZJ]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGroupPropertiesKHR(VkPhysicalDeviceGroupPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VWGChvm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ESStxAT=json({});
    
        if (name.pNext==NULL){
            return_ESStxAT["null"]=true;
            return return_ESStxAT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_PWVwAvA=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_MsadWvL=json({});
    
        return_MsadWvL["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_muJqZCj=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_MsadWvL["members"][std::to_string(i)].push_back(temp);
        }
        return return_MsadWvL;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_jkjTgvX=json({});
    return_jkjTgvX=[&]() {
    json return_vUBtilw=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_jkjTgvX;}();
return result;}

    VkPhysicalDeviceGroupPropertiesKHR deserialize_VkPhysicalDeviceGroupPropertiesKHR(json name){
        auto result=VkPhysicalDeviceGroupPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int qgrgSOY=0; qgrgSOY < VK_MAX_DEVICE_GROUP_SIZE; qgrgSOY++){
            [&]() {
result.physicalDevices[qgrgSOY]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][qgrgSOY]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfo(VkMemoryAllocateFlagsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fUHxFqF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gYXUYVr=json({});
    
        if (name.pNext==NULL){
            return_gYXUYVr["null"]=true;
            return return_gYXUYVr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ZrjeqYc=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_gXGUKvy=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfo deserialize_VkMemoryAllocateFlagsInfo(json name){
        auto result=VkMemoryAllocateFlagsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UsNRUvm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UsNRUvm=NULL;
        }
    temp_UsNRUvm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UsNRUvm;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfoKHR(VkMemoryAllocateFlagsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AOyJGlk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RrCxmun=json({});
    
        if (name.pNext==NULL){
            return_RrCxmun["null"]=true;
            return return_RrCxmun;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IlLvFil=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_gBDUdhN=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfoKHR deserialize_VkMemoryAllocateFlagsInfoKHR(json name){
        auto result=VkMemoryAllocateFlagsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SXSxztL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SXSxztL=NULL;
        }
    temp_SXSxztL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SXSxztL;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkBindBufferMemoryInfo(VkBindBufferMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zkSIlkD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sXaLqrq=json({});
    
        if (name.pNext==NULL){
            return_sXaLqrq["null"]=true;
            return return_sXaLqrq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_nelDUas=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_uIbkcvk=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_YJHqBIY=json({});
    return_YJHqBIY=[&]() {
    json return_nUvzfCk=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_YJHqBIY;}();
return result;}

    VkBindBufferMemoryInfo deserialize_VkBindBufferMemoryInfo(json name){
        auto result=VkBindBufferMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zlzEyNe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zlzEyNe=NULL;
        }
    temp_zlzEyNe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zlzEyNe;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryInfoKHR(VkBindBufferMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eeGLzba=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GiokHBK=json({});
    
        if (name.pNext==NULL){
            return_GiokHBK["null"]=true;
            return return_GiokHBK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_nNnYmUj=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_WJvlkUn=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_estjBmJ=json({});
    return_estjBmJ=[&]() {
    json return_UmOsQId=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_estjBmJ;}();
return result;}

    VkBindBufferMemoryInfoKHR deserialize_VkBindBufferMemoryInfoKHR(json name){
        auto result=VkBindBufferMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lolredL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lolredL=NULL;
        }
    temp_lolredL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lolredL;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfo(VkBindBufferMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iTeDScu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vqptWMC=json({});
    
        if (name.pNext==NULL){
            return_vqptWMC["null"]=true;
            return return_vqptWMC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_LAbjSbZ=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_hXfgvGy=json({});
    
        if (name.pDeviceIndices==NULL){
            return_hXfgvGy["null"]=true;
            return return_hXfgvGy;
        }
        
        return_hXfgvGy["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_kPwyQeI=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_hXfgvGy["members"][std::to_string(i)].push_back(temp);
        }
        return return_hXfgvGy;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfo deserialize_VkBindBufferMemoryDeviceGroupInfo(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_miuZBxk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_miuZBxk=NULL;
        }
    temp_miuZBxk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_miuZBxk;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_HEJKUha;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_HEJKUha=NULL;
        }
    temp_HEJKUha=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int DbwBNNY=0; DbwBNNY < result.deviceIndexCount; DbwBNNY++){
            [&]() {
temp_HEJKUha[DbwBNNY]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][DbwBNNY]);}();;
        }
        }();result.pDeviceIndices=temp_HEJKUha;}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfoKHR(VkBindBufferMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hUUNtiH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wvvBWra=json({});
    
        if (name.pNext==NULL){
            return_wvvBWra["null"]=true;
            return return_wvvBWra;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_UFJXZxQ=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_boGknce=json({});
    
        if (name.pDeviceIndices==NULL){
            return_boGknce["null"]=true;
            return return_boGknce;
        }
        
        return_boGknce["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_QAGcBBD=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_boGknce["members"][std::to_string(i)].push_back(temp);
        }
        return return_boGknce;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfoKHR deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ycvFHYM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ycvFHYM=NULL;
        }
    temp_ycvFHYM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ycvFHYM;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_SBDCold;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_SBDCold=NULL;
        }
    temp_SBDCold=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int SCbncVn=0; SCbncVn < result.deviceIndexCount; SCbncVn++){
            [&]() {
temp_SBDCold[SCbncVn]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][SCbncVn]);}();;
        }
        }();result.pDeviceIndices=temp_SBDCold;}();
return result;}

    json serialize_VkBindImageMemoryInfo(VkBindImageMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PfVODHL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yaWxNfP=json({});
    
        if (name.pNext==NULL){
            return_yaWxNfP["null"]=true;
            return return_yaWxNfP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_RhsdaLa=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_ruHQWxR=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_hcvvCUt=json({});
    return_hcvvCUt=[&]() {
    json return_ieLvnTQ=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_hcvvCUt;}();
return result;}

    VkBindImageMemoryInfo deserialize_VkBindImageMemoryInfo(json name){
        auto result=VkBindImageMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IOizYsi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IOizYsi=NULL;
        }
    temp_IOizYsi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IOizYsi;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryInfoKHR(VkBindImageMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VttCjjh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rzMhUZF=json({});
    
        if (name.pNext==NULL){
            return_rzMhUZF["null"]=true;
            return return_rzMhUZF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_SQTwpdR=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_YhPbbfk=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_VwBShoP=json({});
    return_VwBShoP=[&]() {
    json return_iXBUjWo=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_VwBShoP;}();
return result;}

    VkBindImageMemoryInfoKHR deserialize_VkBindImageMemoryInfoKHR(json name){
        auto result=VkBindImageMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eCkaGyX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eCkaGyX=NULL;
        }
    temp_eCkaGyX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eCkaGyX;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfo(VkBindImageMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hCfRVnc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bFvTNKj=json({});
    
        if (name.pNext==NULL){
            return_bFvTNKj["null"]=true;
            return return_bFvTNKj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_yyjJdnR=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_iQLqqJF=json({});
    
        if (name.pDeviceIndices==NULL){
            return_iQLqqJF["null"]=true;
            return return_iQLqqJF;
        }
        
        return_iQLqqJF["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_LzUMUhb=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_iQLqqJF["members"][std::to_string(i)].push_back(temp);
        }
        return return_iQLqqJF;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_FaIyRjt=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_oEaZhWn=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_oEaZhWn["null"]=true;
            return return_oEaZhWn;
        }
        
        return_oEaZhWn["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_HupsgeH=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_oEaZhWn["members"][std::to_string(i)].push_back(temp);
        }
        return return_oEaZhWn;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfo deserialize_VkBindImageMemoryDeviceGroupInfo(json name){
        auto result=VkBindImageMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qKwakXH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qKwakXH=NULL;
        }
    temp_qKwakXH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qKwakXH;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_uPjwJYb;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_uPjwJYb=NULL;
        }
    temp_uPjwJYb=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int TYbHgZk=0; TYbHgZk < result.deviceIndexCount; TYbHgZk++){
            [&]() {
temp_uPjwJYb[TYbHgZk]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][TYbHgZk]);}();;
        }
        }();result.pDeviceIndices=temp_uPjwJYb;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_nkfgvhi;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_nkfgvhi=NULL;
        }
    temp_nkfgvhi=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int Hkiyhdn=0; Hkiyhdn < result.splitInstanceBindRegionCount; Hkiyhdn++){
            [&]() {
temp_nkfgvhi[Hkiyhdn]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][Hkiyhdn]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_nkfgvhi;}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfoKHR(VkBindImageMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oaGiDIk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uPGMtkX=json({});
    
        if (name.pNext==NULL){
            return_uPGMtkX["null"]=true;
            return return_uPGMtkX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_PxufbTI=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_CZpgDuk=json({});
    
        if (name.pDeviceIndices==NULL){
            return_CZpgDuk["null"]=true;
            return return_CZpgDuk;
        }
        
        return_CZpgDuk["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_yBYMDyB=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_CZpgDuk["members"][std::to_string(i)].push_back(temp);
        }
        return return_CZpgDuk;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_ASrOeaZ=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_ChgHWVv=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_ChgHWVv["null"]=true;
            return return_ChgHWVv;
        }
        
        return_ChgHWVv["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_yCWjCyL=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_ChgHWVv["members"][std::to_string(i)].push_back(temp);
        }
        return return_ChgHWVv;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfoKHR deserialize_VkBindImageMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindImageMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TCIzbXb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TCIzbXb=NULL;
        }
    temp_TCIzbXb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TCIzbXb;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_AfkWIum;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_AfkWIum=NULL;
        }
    temp_AfkWIum=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int KAqlLZE=0; KAqlLZE < result.deviceIndexCount; KAqlLZE++){
            [&]() {
temp_AfkWIum[KAqlLZE]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][KAqlLZE]);}();;
        }
        }();result.pDeviceIndices=temp_AfkWIum;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_LRecCQD;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_LRecCQD=NULL;
        }
    temp_LRecCQD=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int mNYQGJj=0; mNYQGJj < result.splitInstanceBindRegionCount; mNYQGJj++){
            [&]() {
temp_LRecCQD[mNYQGJj]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][mNYQGJj]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_LRecCQD;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfo(VkDeviceGroupRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uRLiUQA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xBTcKkl=json({});
    
        if (name.pNext==NULL){
            return_xBTcKkl["null"]=true;
            return return_xBTcKkl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_gdjnpIA=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_pkWcsgB=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_LPzUOVk=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_LPzUOVk["null"]=true;
            return return_LPzUOVk;
        }
        
        return_LPzUOVk["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_PTzJnvW=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_LPzUOVk["members"][std::to_string(i)].push_back(temp);
        }
        return return_LPzUOVk;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfo deserialize_VkDeviceGroupRenderPassBeginInfo(json name){
        auto result=VkDeviceGroupRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EqFuLdp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EqFuLdp=NULL;
        }
    temp_EqFuLdp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EqFuLdp;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_TNkJRAn;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_TNkJRAn=NULL;
        }
    temp_TNkJRAn=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int uzoKmva=0; uzoKmva < result.deviceRenderAreaCount; uzoKmva++){
            [&]() {
temp_TNkJRAn[uzoKmva]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][uzoKmva]);}();;
        }
        }();result.pDeviceRenderAreas=temp_TNkJRAn;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfoKHR(VkDeviceGroupRenderPassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gyGHPMK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RQJtuaT=json({});
    
        if (name.pNext==NULL){
            return_RQJtuaT["null"]=true;
            return return_RQJtuaT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_ACtyVuG=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_CFuMCEF=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_EdyirIo=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_EdyirIo["null"]=true;
            return return_EdyirIo;
        }
        
        return_EdyirIo["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_lgOfUfi=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_EdyirIo["members"][std::to_string(i)].push_back(temp);
        }
        return return_EdyirIo;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfoKHR deserialize_VkDeviceGroupRenderPassBeginInfoKHR(json name){
        auto result=VkDeviceGroupRenderPassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qICVrMN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qICVrMN=NULL;
        }
    temp_qICVrMN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qICVrMN;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_okKkRAW;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_okKkRAW=NULL;
        }
    temp_okKkRAW=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int ixIhQlX=0; ixIhQlX < result.deviceRenderAreaCount; ixIhQlX++){
            [&]() {
temp_okKkRAW[ixIhQlX]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][ixIhQlX]);}();;
        }
        }();result.pDeviceRenderAreas=temp_okKkRAW;}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfo(VkDeviceGroupCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WMziWXd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_edwAmTv=json({});
    
        if (name.pNext==NULL){
            return_edwAmTv["null"]=true;
            return return_edwAmTv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_lrTupno=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfo deserialize_VkDeviceGroupCommandBufferBeginInfo(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QHzllBQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QHzllBQ=NULL;
        }
    temp_QHzllBQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QHzllBQ;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfoKHR(VkDeviceGroupCommandBufferBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_guQVmHi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JPTiKaY=json({});
    
        if (name.pNext==NULL){
            return_JPTiKaY["null"]=true;
            return return_JPTiKaY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_mGHnlVb=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfoKHR deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nQeRrLe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nQeRrLe=NULL;
        }
    temp_nQeRrLe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nQeRrLe;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupSubmitInfo(VkDeviceGroupSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FEZlZEk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iQirMKS=json({});
    
        if (name.pNext==NULL){
            return_iQirMKS["null"]=true;
            return return_iQirMKS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_ETvMLZx=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_DvjGUCq=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_DvjGUCq["null"]=true;
            return return_DvjGUCq;
        }
        
        return_DvjGUCq["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_rFdTMNY=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_DvjGUCq["members"][std::to_string(i)].push_back(temp);
        }
        return return_DvjGUCq;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_zXBFPVL=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_GitMjVy=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_GitMjVy["null"]=true;
            return return_GitMjVy;
        }
        
        return_GitMjVy["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_VACWzwk=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_GitMjVy["members"][std::to_string(i)].push_back(temp);
        }
        return return_GitMjVy;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_kpTQbJZ=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_tqhMvvy=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_tqhMvvy["null"]=true;
            return return_tqhMvvy;
        }
        
        return_tqhMvvy["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_qyAZZpz=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_tqhMvvy["members"][std::to_string(i)].push_back(temp);
        }
        return return_tqhMvvy;
        }();
return result;}

    VkDeviceGroupSubmitInfo deserialize_VkDeviceGroupSubmitInfo(json name){
        auto result=VkDeviceGroupSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hbvGqFv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hbvGqFv=NULL;
        }
    temp_hbvGqFv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hbvGqFv;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_QCYYzWu;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_QCYYzWu=NULL;
        }
    temp_QCYYzWu=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int uAywTqE=0; uAywTqE < result.waitSemaphoreCount; uAywTqE++){
            [&]() {
temp_QCYYzWu[uAywTqE]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][uAywTqE]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_QCYYzWu;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_NeyMDJb;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_NeyMDJb=NULL;
        }
    temp_NeyMDJb=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int ZuWRdlU=0; ZuWRdlU < result.commandBufferCount; ZuWRdlU++){
            [&]() {
temp_NeyMDJb[ZuWRdlU]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][ZuWRdlU]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_NeyMDJb;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_kuhOBHz;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_kuhOBHz=NULL;
        }
    temp_kuhOBHz=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int lYPWJCP=0; lYPWJCP < result.signalSemaphoreCount; lYPWJCP++){
            [&]() {
temp_kuhOBHz[lYPWJCP]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][lYPWJCP]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_kuhOBHz;}();
return result;}

    json serialize_VkDeviceGroupSubmitInfoKHR(VkDeviceGroupSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uBwnFRX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_crmoIJb=json({});
    
        if (name.pNext==NULL){
            return_crmoIJb["null"]=true;
            return return_crmoIJb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_AnbOgze=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_Uydxzkn=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_Uydxzkn["null"]=true;
            return return_Uydxzkn;
        }
        
        return_Uydxzkn["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_ALYAdIT=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_Uydxzkn["members"][std::to_string(i)].push_back(temp);
        }
        return return_Uydxzkn;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_nArludX=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_pcPoAll=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_pcPoAll["null"]=true;
            return return_pcPoAll;
        }
        
        return_pcPoAll["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_sWGjZnL=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_pcPoAll["members"][std::to_string(i)].push_back(temp);
        }
        return return_pcPoAll;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_RVUekKU=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_NRiBqIB=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_NRiBqIB["null"]=true;
            return return_NRiBqIB;
        }
        
        return_NRiBqIB["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_BSEpvwu=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_NRiBqIB["members"][std::to_string(i)].push_back(temp);
        }
        return return_NRiBqIB;
        }();
return result;}

    VkDeviceGroupSubmitInfoKHR deserialize_VkDeviceGroupSubmitInfoKHR(json name){
        auto result=VkDeviceGroupSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BAptGtM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BAptGtM=NULL;
        }
    temp_BAptGtM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BAptGtM;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_iFCFKaM;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_iFCFKaM=NULL;
        }
    temp_iFCFKaM=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int RInOVFk=0; RInOVFk < result.waitSemaphoreCount; RInOVFk++){
            [&]() {
temp_iFCFKaM[RInOVFk]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][RInOVFk]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_iFCFKaM;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_XXPCyBe;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_XXPCyBe=NULL;
        }
    temp_XXPCyBe=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int wQrSyDq=0; wQrSyDq < result.commandBufferCount; wQrSyDq++){
            [&]() {
temp_XXPCyBe[wQrSyDq]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][wQrSyDq]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_XXPCyBe;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_ewvYPQM;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_ewvYPQM=NULL;
        }
    temp_ewvYPQM=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int ecRfGRl=0; ecRfGRl < result.signalSemaphoreCount; ecRfGRl++){
            [&]() {
temp_ewvYPQM[ecRfGRl]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][ecRfGRl]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_ewvYPQM;}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfo(VkDeviceGroupBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RCUfSuQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JBmrMoj=json({});
    
        if (name.pNext==NULL){
            return_JBmrMoj["null"]=true;
            return return_JBmrMoj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_agVYiek=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_SrfjVXK=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfo deserialize_VkDeviceGroupBindSparseInfo(json name){
        auto result=VkDeviceGroupBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eWMiJBO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eWMiJBO=NULL;
        }
    temp_eWMiJBO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eWMiJBO;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfoKHR(VkDeviceGroupBindSparseInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NdQNMCO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XRFxeLQ=json({});
    
        if (name.pNext==NULL){
            return_XRFxeLQ["null"]=true;
            return return_XRFxeLQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_lmwjyDQ=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_EVeyJWq=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfoKHR deserialize_VkDeviceGroupBindSparseInfoKHR(json name){
        auto result=VkDeviceGroupBindSparseInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tKvFTvg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tKvFTvg=NULL;
        }
    temp_tKvFTvg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tKvFTvg;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupPresentCapabilitiesKHR(VkDeviceGroupPresentCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_opRxinA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_biqbIih=json({});
    
        if (name.pNext==NULL){
            return_biqbIih["null"]=true;
            return return_biqbIih;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMask"]=[&]() {
    json return_YuXkqOk=json({});
    
        return_YuXkqOk["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_MzxBYss=json({});
    return serialize_uint32_t(name.presentMask[i]);}();
            return_YuXkqOk["members"][std::to_string(i)].push_back(temp);
        }
        return return_YuXkqOk;
        }();
result["members"]["modes"]=[&]() {
    json return_QCCyaqX=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupPresentCapabilitiesKHR deserialize_VkDeviceGroupPresentCapabilitiesKHR(json name){
        auto result=VkDeviceGroupPresentCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int aJNJFZB=0; aJNJFZB < VK_MAX_DEVICE_GROUP_SIZE; aJNJFZB++){
            [&]() {
result.presentMask[aJNJFZB]=deserialize_uint32_t(name["members"]["presentMask"]["members"][aJNJFZB]);}();;
        }
        }();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkImageSwapchainCreateInfoKHR(VkImageSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bCqNczd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hRFHaqP=json({});
    
        if (name.pNext==NULL){
            return_hRFHaqP["null"]=true;
            return return_hRFHaqP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_sIBXRnP=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
return result;}

    VkImageSwapchainCreateInfoKHR deserialize_VkImageSwapchainCreateInfoKHR(json name){
        auto result=VkImageSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fSyNODP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fSyNODP=NULL;
        }
    temp_fSyNODP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fSyNODP;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
return result;}

    json serialize_VkBindImageMemorySwapchainInfoKHR(VkBindImageMemorySwapchainInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uMBPqjj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IRXJHZC=json({});
    
        if (name.pNext==NULL){
            return_IRXJHZC["null"]=true;
            return return_IRXJHZC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_ENmvvDi=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndex"]=[&]() {
    json return_zFwdmfZ=json({});
    return serialize_uint32_t(name.imageIndex);}();
return result;}

    VkBindImageMemorySwapchainInfoKHR deserialize_VkBindImageMemorySwapchainInfoKHR(json name){
        auto result=VkBindImageMemorySwapchainInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uTWIIUF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uTWIIUF=NULL;
        }
    temp_uTWIIUF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uTWIIUF;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndex=deserialize_uint32_t(name["members"]["imageIndex"]);}();
return result;}

    json serialize_VkAcquireNextImageInfoKHR(VkAcquireNextImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kFQEhJy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rzlBkQt=json({});
    
        if (name.pNext==NULL){
            return_rzlBkQt["null"]=true;
            return return_rzlBkQt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_xZELKbm=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["timeout"]=[&]() {
    json return_VKhzufH=json({});
    return serialize_uint64_t(name.timeout);}();
result["members"]["semaphore"]=[&]() {
    json return_DAClAYQ=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["fence"]=[&]() {
    json return_TiZhxrj=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["deviceMask"]=[&]() {
    json return_SZZdCfj=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkAcquireNextImageInfoKHR deserialize_VkAcquireNextImageInfoKHR(json name){
        auto result=VkAcquireNextImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cPrlBZE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cPrlBZE=NULL;
        }
    temp_cPrlBZE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cPrlBZE;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupPresentInfoKHR(VkDeviceGroupPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GsyKklJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NidTOGf=json({});
    
        if (name.pNext==NULL){
            return_NidTOGf["null"]=true;
            return return_NidTOGf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_jmvWbcI=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pDeviceMasks"]=[&]() {
    json return_mUFAeSr=json({});
    
        if (name.pDeviceMasks==NULL){
            return_mUFAeSr["null"]=true;
            return return_mUFAeSr;
        }
        
        return_mUFAeSr["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_zlPImGQ=json({});
    return serialize_uint32_t(name.pDeviceMasks[i]);}();
            return_mUFAeSr["members"][std::to_string(i)].push_back(temp);
        }
        return return_mUFAeSr;
        }();
result["members"]["mode"]=[&]() {
    json return_tNrmabJ=json({});
    return serialize_VkDeviceGroupPresentModeFlagBitsKHR(name.mode);}();
return result;}

    VkDeviceGroupPresentInfoKHR deserialize_VkDeviceGroupPresentInfoKHR(json name){
        auto result=VkDeviceGroupPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ymZTMjM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ymZTMjM=NULL;
        }
    temp_ymZTMjM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ymZTMjM;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint32_t* temp_ZifrPZd;[&]() {

        if (name["members"]["pDeviceMasks"].contains("null")){
        temp_ZifrPZd=NULL;
        }
    temp_ZifrPZd=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int UgSTZDW=0; UgSTZDW < result.swapchainCount; UgSTZDW++){
            [&]() {
temp_ZifrPZd[UgSTZDW]=deserialize_uint32_t(name["members"]["pDeviceMasks"]["members"][UgSTZDW]);}();;
        }
        }();result.pDeviceMasks=temp_ZifrPZd;}();
[&]() {
result.mode=deserialize_VkDeviceGroupPresentModeFlagBitsKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfo(VkDeviceGroupDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IqJMdey=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_USssMTL=json({});
    
        if (name.pNext==NULL){
            return_USssMTL["null"]=true;
            return return_USssMTL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_btghCri=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_OrUihTg=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_OrUihTg["null"]=true;
            return return_OrUihTg;
        }
        
        return_OrUihTg["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_gAConGh=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_OrUihTg["members"][std::to_string(i)].push_back(temp);
        }
        return return_OrUihTg;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfo deserialize_VkDeviceGroupDeviceCreateInfo(json name){
        auto result=VkDeviceGroupDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XIWVnNI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XIWVnNI=NULL;
        }
    temp_XIWVnNI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XIWVnNI;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_lNaQNIB;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_lNaQNIB=NULL;
        }
    temp_lNaQNIB=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int ndcvWNA=0; ndcvWNA < result.physicalDeviceCount; ndcvWNA++){
            [&]() {
temp_lNaQNIB[ndcvWNA]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][ndcvWNA]);}();;
        }
        }();result.pPhysicalDevices=temp_lNaQNIB;}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfoKHR(VkDeviceGroupDeviceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tQRHnLY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blekNpR=json({});
    
        if (name.pNext==NULL){
            return_blekNpR["null"]=true;
            return return_blekNpR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_NTESjnH=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_YHHejqW=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_YHHejqW["null"]=true;
            return return_YHHejqW;
        }
        
        return_YHHejqW["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_SGMctzl=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_YHHejqW["members"][std::to_string(i)].push_back(temp);
        }
        return return_YHHejqW;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfoKHR deserialize_VkDeviceGroupDeviceCreateInfoKHR(json name){
        auto result=VkDeviceGroupDeviceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LUuUAxe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LUuUAxe=NULL;
        }
    temp_LUuUAxe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LUuUAxe;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_BqmuMlS;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_BqmuMlS=NULL;
        }
    temp_BqmuMlS=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int IEMJdli=0; IEMJdli < result.physicalDeviceCount; IEMJdli++){
            [&]() {
temp_BqmuMlS[IEMJdli]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][IEMJdli]);}();;
        }
        }();result.pPhysicalDevices=temp_BqmuMlS;}();
return result;}

    json serialize_VkDeviceGroupSwapchainCreateInfoKHR(VkDeviceGroupSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aOwwrsq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aGBtYKU=json({});
    
        if (name.pNext==NULL){
            return_aGBtYKU["null"]=true;
            return return_aGBtYKU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["modes"]=[&]() {
    json return_AKxAelp=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupSwapchainCreateInfoKHR deserialize_VkDeviceGroupSwapchainCreateInfoKHR(json name){
        auto result=VkDeviceGroupSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Eqekdwk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Eqekdwk=NULL;
        }
    temp_Eqekdwk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Eqekdwk;}();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntry(VkDescriptorUpdateTemplateEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_JAlpCnb=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_DkKcQyy=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_keTfSEE=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_lcOYJiq=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_xiHAxsy=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_MsJqhns=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntry deserialize_VkDescriptorUpdateTemplateEntry(json name){
        auto result=VkDescriptorUpdateTemplateEntry();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntryKHR(VkDescriptorUpdateTemplateEntryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_tNyJSGf=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_fxsHjOj=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_aBMactB=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_EMwuwZi=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_tfhTyQD=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_MNMxsuh=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntryKHR deserialize_VkDescriptorUpdateTemplateEntryKHR(json name){
        auto result=VkDescriptorUpdateTemplateEntryKHR();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfo(VkDescriptorUpdateTemplateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jcLKajp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ewrYiob=json({});
    
        if (name.pNext==NULL){
            return_ewrYiob["null"]=true;
            return return_ewrYiob;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DkTAVxa=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_WEktFbv=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_ETPzndO=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_ETPzndO["null"]=true;
            return return_ETPzndO;
        }
        
        return_ETPzndO["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_YDXkQUZ=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_ETPzndO["members"][std::to_string(i)].push_back(temp);
        }
        return return_ETPzndO;
        }();
result["members"]["templateType"]=[&]() {
    json return_wWaTqSq=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_VnROrxo=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_MqgQHRg=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_irroJPz=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_ocFBrfW=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfo deserialize_VkDescriptorUpdateTemplateCreateInfo(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CHogXhf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CHogXhf=NULL;
        }
    temp_CHogXhf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CHogXhf;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_FocxzwQ;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_FocxzwQ=NULL;
        }
    temp_FocxzwQ=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int ksSatKf=0; ksSatKf < result.descriptorUpdateEntryCount; ksSatKf++){
            [&]() {
temp_FocxzwQ[ksSatKf]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][ksSatKf]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_FocxzwQ;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfoKHR(VkDescriptorUpdateTemplateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yLauYNY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NtaCOFY=json({});
    
        if (name.pNext==NULL){
            return_NtaCOFY["null"]=true;
            return return_NtaCOFY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hIaNKLG=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_Hmhlfxa=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_qgvPzKh=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_qgvPzKh["null"]=true;
            return return_qgvPzKh;
        }
        
        return_qgvPzKh["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_NoSIEko=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_qgvPzKh["members"][std::to_string(i)].push_back(temp);
        }
        return return_qgvPzKh;
        }();
result["members"]["templateType"]=[&]() {
    json return_ZOAslEL=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_BvXqAnK=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_ExYlvMI=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_kjnEuJI=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_VVGoSVp=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfoKHR deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vmZYUGb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vmZYUGb=NULL;
        }
    temp_vmZYUGb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vmZYUGb;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_MdjBwQU;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_MdjBwQU=NULL;
        }
    temp_MdjBwQU=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int YkxLLbW=0; YkxLLbW < result.descriptorUpdateEntryCount; YkxLLbW++){
            [&]() {
temp_MdjBwQU[YkxLLbW]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][YkxLLbW]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_MdjBwQU;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkXYColorEXT(VkXYColorEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_sYmVeuQ=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_GrogHxD=json({});
    return serialize_float(name.y);}();
return result;}

    VkXYColorEXT deserialize_VkXYColorEXT(json name){
        auto result=VkXYColorEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkPhysicalDevicePresentIdFeaturesKHR(VkPhysicalDevicePresentIdFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSUJdng=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VYpKhxB=json({});
    
        if (name.pNext==NULL){
            return_VYpKhxB["null"]=true;
            return return_VYpKhxB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentId"]=[&]() {
    json return_ebDOzlN=json({});
    return_ebDOzlN=[&]() {
    json return_JxpLDUu=json({});
    return serialize_uint32_t(name.presentId);}();return return_ebDOzlN;}();
return result;}

    VkPhysicalDevicePresentIdFeaturesKHR deserialize_VkPhysicalDevicePresentIdFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentIdFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentId=deserialize_uint32_t(name["members"]["presentId"]);}();}();
return result;}

    json serialize_VkPresentIdKHR(VkPresentIdKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zqeBEvn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EgYZbWi=json({});
    
        if (name.pNext==NULL){
            return_EgYZbWi["null"]=true;
            return return_EgYZbWi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_uJgAzsd=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentIds"]=[&]() {
    json return_lCirEZq=json({});
    
        if (name.pPresentIds==NULL){
            return_lCirEZq["null"]=true;
            return return_lCirEZq;
        }
        
        return_lCirEZq["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_PZTuict=json({});
    return serialize_uint64_t(name.pPresentIds[i]);}();
            return_lCirEZq["members"][std::to_string(i)].push_back(temp);
        }
        return return_lCirEZq;
        }();
return result;}

    VkPresentIdKHR deserialize_VkPresentIdKHR(json name){
        auto result=VkPresentIdKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gYevbjy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gYevbjy=NULL;
        }
    temp_gYevbjy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gYevbjy;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint64_t* temp_loXdPpV;[&]() {

        if (name["members"]["pPresentIds"].contains("null")){
        temp_loXdPpV=NULL;
        }
    temp_loXdPpV=(uint64_t*)malloc(result.swapchainCount*sizeof(uint64_t));
        for (int MNSqVDE=0; MNSqVDE < result.swapchainCount; MNSqVDE++){
            [&]() {
temp_loXdPpV[MNSqVDE]=deserialize_uint64_t(name["members"]["pPresentIds"]["members"][MNSqVDE]);}();;
        }
        }();result.pPresentIds=temp_loXdPpV;}();
return result;}

    json serialize_VkPhysicalDevicePresentWaitFeaturesKHR(VkPhysicalDevicePresentWaitFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lWtAWsN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rEIEWSw=json({});
    
        if (name.pNext==NULL){
            return_rEIEWSw["null"]=true;
            return return_rEIEWSw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentWait"]=[&]() {
    json return_dqfKDiu=json({});
    return_dqfKDiu=[&]() {
    json return_aHOvwbl=json({});
    return serialize_uint32_t(name.presentWait);}();return return_dqfKDiu;}();
return result;}

    VkPhysicalDevicePresentWaitFeaturesKHR deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentWaitFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentWait=deserialize_uint32_t(name["members"]["presentWait"]);}();}();
return result;}

    json serialize_VkHdrMetadataEXT(VkHdrMetadataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MkhuhLB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qYTpika=json({});
    
        if (name.pNext==NULL){
            return_qYTpika["null"]=true;
            return return_qYTpika;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPrimaryRed"]=[&]() {
    json return_AvAhZoU=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryRed);}();
result["members"]["displayPrimaryGreen"]=[&]() {
    json return_zBUWjZy=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryGreen);}();
result["members"]["displayPrimaryBlue"]=[&]() {
    json return_cQcecyC=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryBlue);}();
result["members"]["whitePoint"]=[&]() {
    json return_aqjMNep=json({});
    return serialize_VkXYColorEXT(name.whitePoint);}();
result["members"]["maxLuminance"]=[&]() {
    json return_qMevBtr=json({});
    return serialize_float(name.maxLuminance);}();
result["members"]["minLuminance"]=[&]() {
    json return_yJVmhXq=json({});
    return serialize_float(name.minLuminance);}();
result["members"]["maxContentLightLevel"]=[&]() {
    json return_MAPvPgC=json({});
    return serialize_float(name.maxContentLightLevel);}();
result["members"]["maxFrameAverageLightLevel"]=[&]() {
    json return_ySMVVYx=json({});
    return serialize_float(name.maxFrameAverageLightLevel);}();
return result;}

    VkHdrMetadataEXT deserialize_VkHdrMetadataEXT(json name){
        auto result=VkHdrMetadataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kRoqSsN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kRoqSsN=NULL;
        }
    temp_kRoqSsN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kRoqSsN;}();
[&]() {
result.displayPrimaryRed=deserialize_VkXYColorEXT(name["members"]["displayPrimaryRed"]);}();
[&]() {
result.displayPrimaryGreen=deserialize_VkXYColorEXT(name["members"]["displayPrimaryGreen"]);}();
[&]() {
result.displayPrimaryBlue=deserialize_VkXYColorEXT(name["members"]["displayPrimaryBlue"]);}();
[&]() {
result.whitePoint=deserialize_VkXYColorEXT(name["members"]["whitePoint"]);}();
[&]() {
result.maxLuminance=deserialize_float(name["members"]["maxLuminance"]);}();
[&]() {
result.minLuminance=deserialize_float(name["members"]["minLuminance"]);}();
[&]() {
result.maxContentLightLevel=deserialize_float(name["members"]["maxContentLightLevel"]);}();
[&]() {
result.maxFrameAverageLightLevel=deserialize_float(name["members"]["maxFrameAverageLightLevel"]);}();
return result;}

    json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkDisplayNativeHdrSurfaceCapabilitiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PLDCbNT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DVljrGl=json({});
    
        if (name.pNext==NULL){
            return_DVljrGl["null"]=true;
            return return_DVljrGl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingSupport"]=[&]() {
    json return_kiYVFBH=json({});
    return_kiYVFBH=[&]() {
    json return_ffPEpLi=json({});
    return serialize_uint32_t(name.localDimmingSupport);}();return return_kiYVFBH;}();
return result;}

    VkDisplayNativeHdrSurfaceCapabilitiesAMD deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(json name){
        auto result=VkDisplayNativeHdrSurfaceCapabilitiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.localDimmingSupport=deserialize_uint32_t(name["members"]["localDimmingSupport"]);}();}();
return result;}

    json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(VkSwapchainDisplayNativeHdrCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MLGnwLp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yPUhudR=json({});
    
        if (name.pNext==NULL){
            return_yPUhudR["null"]=true;
            return return_yPUhudR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingEnable"]=[&]() {
    json return_CATGkgb=json({});
    return_CATGkgb=[&]() {
    json return_dUAbktC=json({});
    return serialize_uint32_t(name.localDimmingEnable);}();return return_CATGkgb;}();
return result;}

    VkSwapchainDisplayNativeHdrCreateInfoAMD deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(json name){
        auto result=VkSwapchainDisplayNativeHdrCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VPitpEo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VPitpEo=NULL;
        }
    temp_VPitpEo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VPitpEo;}();
[&]() {
[&]() {
result.localDimmingEnable=deserialize_uint32_t(name["members"]["localDimmingEnable"]);}();}();
return result;}

    json serialize_VkRefreshCycleDurationGOOGLE(VkRefreshCycleDurationGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["refreshDuration"]=[&]() {
    json return_VBwVxSK=json({});
    return serialize_uint64_t(name.refreshDuration);}();
return result;}

    VkRefreshCycleDurationGOOGLE deserialize_VkRefreshCycleDurationGOOGLE(json name){
        auto result=VkRefreshCycleDurationGOOGLE();
    
[&]() {
result.refreshDuration=deserialize_uint64_t(name["members"]["refreshDuration"]);}();
return result;}

    json serialize_VkPastPresentationTimingGOOGLE(VkPastPresentationTimingGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_fdUrknt=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_UOWoanZ=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
result["members"]["actualPresentTime"]=[&]() {
    json return_pVRpvSQ=json({});
    return serialize_uint64_t(name.actualPresentTime);}();
result["members"]["earliestPresentTime"]=[&]() {
    json return_zlJxYxj=json({});
    return serialize_uint64_t(name.earliestPresentTime);}();
result["members"]["presentMargin"]=[&]() {
    json return_nWwvnGx=json({});
    return serialize_uint64_t(name.presentMargin);}();
return result;}

    VkPastPresentationTimingGOOGLE deserialize_VkPastPresentationTimingGOOGLE(json name){
        auto result=VkPastPresentationTimingGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
[&]() {
result.actualPresentTime=deserialize_uint64_t(name["members"]["actualPresentTime"]);}();
[&]() {
result.earliestPresentTime=deserialize_uint64_t(name["members"]["earliestPresentTime"]);}();
[&]() {
result.presentMargin=deserialize_uint64_t(name["members"]["presentMargin"]);}();
return result;}

    json serialize_VkPresentTimesInfoGOOGLE(VkPresentTimesInfoGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aGyUeaU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vFHomLi=json({});
    
        if (name.pNext==NULL){
            return_vFHomLi["null"]=true;
            return return_vFHomLi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_CSSZXKK=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pTimes"]=[&]() {
    json return_cKXjaAi=json({});
    
        if (name.pTimes==NULL){
            return_cKXjaAi["null"]=true;
            return return_cKXjaAi;
        }
        
        return_cKXjaAi["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_RtttWsx=json({});
    return serialize_VkPresentTimeGOOGLE(name.pTimes[i]);}();
            return_cKXjaAi["members"][std::to_string(i)].push_back(temp);
        }
        return return_cKXjaAi;
        }();
return result;}

    VkPresentTimesInfoGOOGLE deserialize_VkPresentTimesInfoGOOGLE(json name){
        auto result=VkPresentTimesInfoGOOGLE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eabMqSI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eabMqSI=NULL;
        }
    temp_eabMqSI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eabMqSI;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentTimeGOOGLE* temp_FKpmoZH;[&]() {

        if (name["members"]["pTimes"].contains("null")){
        temp_FKpmoZH=NULL;
        }
    temp_FKpmoZH=(VkPresentTimeGOOGLE*)malloc(result.swapchainCount*sizeof(VkPresentTimeGOOGLE));
        for (int FdycfZx=0; FdycfZx < result.swapchainCount; FdycfZx++){
            [&]() {
temp_FKpmoZH[FdycfZx]=deserialize_VkPresentTimeGOOGLE(name["members"]["pTimes"]["members"][FdycfZx]);}();;
        }
        }();result.pTimes=temp_FKpmoZH;}();
return result;}

    json serialize_VkPresentTimeGOOGLE(VkPresentTimeGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_Shcyebs=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_WyEuSVl=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
return result;}

    VkPresentTimeGOOGLE deserialize_VkPresentTimeGOOGLE(json name){
        auto result=VkPresentTimeGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
return result;}

    json serialize_VkViewportWScalingNV(VkViewportWScalingNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["xcoeff"]=[&]() {
    json return_IlbEpfJ=json({});
    return serialize_float(name.xcoeff);}();
result["members"]["ycoeff"]=[&]() {
    json return_VRqIFIk=json({});
    return serialize_float(name.ycoeff);}();
return result;}

    VkViewportWScalingNV deserialize_VkViewportWScalingNV(json name){
        auto result=VkViewportWScalingNV();
    
[&]() {
result.xcoeff=deserialize_float(name["members"]["xcoeff"]);}();
[&]() {
result.ycoeff=deserialize_float(name["members"]["ycoeff"]);}();
return result;}

    json serialize_VkPipelineViewportWScalingStateCreateInfoNV(VkPipelineViewportWScalingStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CjOLerY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xGiDghO=json({});
    
        if (name.pNext==NULL){
            return_xGiDghO["null"]=true;
            return return_xGiDghO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportWScalingEnable"]=[&]() {
    json return_waxXkqD=json({});
    return_waxXkqD=[&]() {
    json return_hRZSZxL=json({});
    return serialize_uint32_t(name.viewportWScalingEnable);}();return return_waxXkqD;}();
result["members"]["viewportCount"]=[&]() {
    json return_hdiaXSp=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportWScalings"]=[&]() {
    json return_mCOqylQ=json({});
    
        if (name.pViewportWScalings==NULL){
            return_mCOqylQ["null"]=true;
            return return_mCOqylQ;
        }
        
        return_mCOqylQ["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_BMMClgP=json({});
    return serialize_VkViewportWScalingNV(name.pViewportWScalings[i]);}();
            return_mCOqylQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_mCOqylQ;
        }();
return result;}

    VkPipelineViewportWScalingStateCreateInfoNV deserialize_VkPipelineViewportWScalingStateCreateInfoNV(json name){
        auto result=VkPipelineViewportWScalingStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oApMMbU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oApMMbU=NULL;
        }
    temp_oApMMbU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oApMMbU;}();
[&]() {
[&]() {
result.viewportWScalingEnable=deserialize_uint32_t(name["members"]["viewportWScalingEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportWScalingNV* temp_ILkiiDj;[&]() {

        if (name["members"]["pViewportWScalings"].contains("null")){
        temp_ILkiiDj=NULL;
        }
    temp_ILkiiDj=(VkViewportWScalingNV*)malloc(result.viewportCount*sizeof(VkViewportWScalingNV));
        for (int EKUNuef=0; EKUNuef < result.viewportCount; EKUNuef++){
            [&]() {
temp_ILkiiDj[EKUNuef]=deserialize_VkViewportWScalingNV(name["members"]["pViewportWScalings"]["members"][EKUNuef]);}();;
        }
        }();result.pViewportWScalings=temp_ILkiiDj;}();
return result;}

    json serialize_VkViewportSwizzleNV(VkViewportSwizzleNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_LYRxMCs=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.x);}();
result["members"]["y"]=[&]() {
    json return_vWGnNug=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.y);}();
result["members"]["z"]=[&]() {
    json return_vvEuWcG=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.z);}();
result["members"]["w"]=[&]() {
    json return_cqPLsGE=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.w);}();
return result;}

    VkViewportSwizzleNV deserialize_VkViewportSwizzleNV(json name){
        auto result=VkViewportSwizzleNV();
    
[&]() {
result.x=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["x"]);}();
[&]() {
result.y=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["y"]);}();
[&]() {
result.z=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["z"]);}();
[&]() {
result.w=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["w"]);}();
return result;}

    json serialize_VkPipelineViewportSwizzleStateCreateInfoNV(VkPipelineViewportSwizzleStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sMmxEFo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UZudQuZ=json({});
    
        if (name.pNext==NULL){
            return_UZudQuZ["null"]=true;
            return return_UZudQuZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_amqxiSr=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_bMcYTWY=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportSwizzles"]=[&]() {
    json return_MAEkneS=json({});
    
        if (name.pViewportSwizzles==NULL){
            return_MAEkneS["null"]=true;
            return return_MAEkneS;
        }
        
        return_MAEkneS["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_NisxSWW=json({});
    return serialize_VkViewportSwizzleNV(name.pViewportSwizzles[i]);}();
            return_MAEkneS["members"][std::to_string(i)].push_back(temp);
        }
        return return_MAEkneS;
        }();
return result;}

    VkPipelineViewportSwizzleStateCreateInfoNV deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(json name){
        auto result=VkPipelineViewportSwizzleStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KzIMXWI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KzIMXWI=NULL;
        }
    temp_KzIMXWI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KzIMXWI;}();
[&]() {
result.flags=deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportSwizzleNV* temp_yIGXEvg;[&]() {

        if (name["members"]["pViewportSwizzles"].contains("null")){
        temp_yIGXEvg=NULL;
        }
    temp_yIGXEvg=(VkViewportSwizzleNV*)malloc(result.viewportCount*sizeof(VkViewportSwizzleNV));
        for (int KnAOZlV=0; KnAOZlV < result.viewportCount; KnAOZlV++){
            [&]() {
temp_yIGXEvg[KnAOZlV]=deserialize_VkViewportSwizzleNV(name["members"]["pViewportSwizzles"]["members"][KnAOZlV]);}();;
        }
        }();result.pViewportSwizzles=temp_yIGXEvg;}();
return result;}

    json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkPhysicalDeviceDiscardRectanglePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LHULkHe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xLgwqVc=json({});
    
        if (name.pNext==NULL){
            return_xLgwqVc["null"]=true;
            return return_xLgwqVc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDiscardRectangles"]=[&]() {
    json return_OeGtVyL=json({});
    return serialize_uint32_t(name.maxDiscardRectangles);}();
return result;}

    VkPhysicalDeviceDiscardRectanglePropertiesEXT deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(json name){
        auto result=VkPhysicalDeviceDiscardRectanglePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDiscardRectangles=deserialize_uint32_t(name["members"]["maxDiscardRectangles"]);}();
return result;}

    json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(VkPipelineDiscardRectangleStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_arqTbdM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AbkLZTj=json({});
    
        if (name.pNext==NULL){
            return_AbkLZTj["null"]=true;
            return return_AbkLZTj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_oHTpVmW=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name.flags);}();
result["members"]["discardRectangleMode"]=[&]() {
    json return_ENYVhFY=json({});
    return serialize_VkDiscardRectangleModeEXT(name.discardRectangleMode);}();
result["members"]["discardRectangleCount"]=[&]() {
    json return_Yoncihr=json({});
    return serialize_uint32_t(name.discardRectangleCount);}();
result["members"]["pDiscardRectangles"]=[&]() {
    json return_CMdbKVM=json({});
    
        if (name.pDiscardRectangles==NULL){
            return_CMdbKVM["null"]=true;
            return return_CMdbKVM;
        }
        
        return_CMdbKVM["members"]={};
        for(int i=0; i < name.discardRectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_lynVreG=json({});
    return serialize_VkRect2D(name.pDiscardRectangles[i]);}();
            return_CMdbKVM["members"][std::to_string(i)].push_back(temp);
        }
        return return_CMdbKVM;
        }();
return result;}

    VkPipelineDiscardRectangleStateCreateInfoEXT deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(json name){
        auto result=VkPipelineDiscardRectangleStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IjssrPQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IjssrPQ=NULL;
        }
    temp_IjssrPQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IjssrPQ;}();
[&]() {
result.flags=deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.discardRectangleMode=deserialize_VkDiscardRectangleModeEXT(name["members"]["discardRectangleMode"]);}();
[&]() {
result.discardRectangleCount=deserialize_uint32_t(name["members"]["discardRectangleCount"]);}();
[&]() {
VkRect2D* temp_mPrAtLs;[&]() {

        if (name["members"]["pDiscardRectangles"].contains("null")){
        temp_mPrAtLs=NULL;
        }
    temp_mPrAtLs=(VkRect2D*)malloc(result.discardRectangleCount*sizeof(VkRect2D));
        for (int ZbYGGTs=0; ZbYGGTs < result.discardRectangleCount; ZbYGGTs++){
            [&]() {
temp_mPrAtLs[ZbYGGTs]=deserialize_VkRect2D(name["members"]["pDiscardRectangles"]["members"][ZbYGGTs]);}();;
        }
        }();result.pDiscardRectangles=temp_mPrAtLs;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OpzDANw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zkKnOCQ=json({});
    
        if (name.pNext==NULL){
            return_zkKnOCQ["null"]=true;
            return return_zkKnOCQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewPositionAllComponents"]=[&]() {
    json return_dwuSmCe=json({});
    return_dwuSmCe=[&]() {
    json return_tGiZFcw=json({});
    return serialize_uint32_t(name.perViewPositionAllComponents);}();return return_dwuSmCe;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.perViewPositionAllComponents=deserialize_uint32_t(name["members"]["perViewPositionAllComponents"]);}();}();
return result;}

    json serialize_VkInputAttachmentAspectReference(VkInputAttachmentAspectReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_FVSLvlr=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_TNClzKD=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_qZBUWWe=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReference deserialize_VkInputAttachmentAspectReference(json name){
        auto result=VkInputAttachmentAspectReference();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkInputAttachmentAspectReferenceKHR(VkInputAttachmentAspectReferenceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_aexwnft=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_WBqwPJB=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_tkBVjnr=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReferenceKHR deserialize_VkInputAttachmentAspectReferenceKHR(json name){
        auto result=VkInputAttachmentAspectReferenceKHR();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfo(VkRenderPassInputAttachmentAspectCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wlekOzf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gwwXhtx=json({});
    
        if (name.pNext==NULL){
            return_gwwXhtx["null"]=true;
            return return_gwwXhtx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_sTBpTNF=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_XrEYXRV=json({});
    
        if (name.pAspectReferences==NULL){
            return_XrEYXRV["null"]=true;
            return return_XrEYXRV;
        }
        
        return_XrEYXRV["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_PejBnyS=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_XrEYXRV["members"][std::to_string(i)].push_back(temp);
        }
        return return_XrEYXRV;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfo deserialize_VkRenderPassInputAttachmentAspectCreateInfo(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LccFDSh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LccFDSh=NULL;
        }
    temp_LccFDSh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LccFDSh;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_gBHqFaD;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_gBHqFaD=NULL;
        }
    temp_gBHqFaD=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int outdtzA=0; outdtzA < result.aspectReferenceCount; outdtzA++){
            [&]() {
temp_gBHqFaD[outdtzA]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][outdtzA]);}();;
        }
        }();result.pAspectReferences=temp_gBHqFaD;}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(VkRenderPassInputAttachmentAspectCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cldkjsM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gSZyXVQ=json({});
    
        if (name.pNext==NULL){
            return_gSZyXVQ["null"]=true;
            return return_gSZyXVQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_DhvyqFM=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_MsjBHxE=json({});
    
        if (name.pAspectReferences==NULL){
            return_MsjBHxE["null"]=true;
            return return_MsjBHxE;
        }
        
        return_MsjBHxE["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_udonpAb=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_MsjBHxE["members"][std::to_string(i)].push_back(temp);
        }
        return return_MsjBHxE;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfoKHR deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wqlDAbK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wqlDAbK=NULL;
        }
    temp_wqlDAbK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wqlDAbK;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_jZOMCXf;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_jZOMCXf=NULL;
        }
    temp_jZOMCXf=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int OzYFdeS=0; OzYFdeS < result.aspectReferenceCount; OzYFdeS++){
            [&]() {
temp_jZOMCXf[OzYFdeS]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][OzYFdeS]);}();;
        }
        }();result.pAspectReferences=temp_jZOMCXf;}();
return result;}

    json serialize_VkPhysicalDeviceSurfaceInfo2KHR(VkPhysicalDeviceSurfaceInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BUjjBGY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pwDpZjm=json({});
    
        if (name.pNext==NULL){
            return_pwDpZjm["null"]=true;
            return return_pwDpZjm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surface"]=[&]() {
    json return_WxdAjGb=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
return result;}

    VkPhysicalDeviceSurfaceInfo2KHR deserialize_VkPhysicalDeviceSurfaceInfo2KHR(json name){
        auto result=VkPhysicalDeviceSurfaceInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BBUKhJY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BBUKhJY=NULL;
        }
    temp_BBUKhJY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BBUKhJY;}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
return result;}

    json serialize_VkSurfaceCapabilities2KHR(VkSurfaceCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DXpaVwP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iEminhi=json({});
    
        if (name.pNext==NULL){
            return_iEminhi["null"]=true;
            return return_iEminhi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCapabilities"]=[&]() {
    json return_pgDJriM=json({});
    return serialize_VkSurfaceCapabilitiesKHR(name.surfaceCapabilities);}();
return result;}

    VkSurfaceCapabilities2KHR deserialize_VkSurfaceCapabilities2KHR(json name){
        auto result=VkSurfaceCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceCapabilities=deserialize_VkSurfaceCapabilitiesKHR(name["members"]["surfaceCapabilities"]);}();
return result;}

    json serialize_VkSurfaceFormat2KHR(VkSurfaceFormat2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZCROCux=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PhRHbuA=json({});
    
        if (name.pNext==NULL){
            return_PhRHbuA["null"]=true;
            return return_PhRHbuA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceFormat"]=[&]() {
    json return_CUgvufm=json({});
    return serialize_VkSurfaceFormatKHR(name.surfaceFormat);}();
return result;}

    VkSurfaceFormat2KHR deserialize_VkSurfaceFormat2KHR(json name){
        auto result=VkSurfaceFormat2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceFormat=deserialize_VkSurfaceFormatKHR(name["members"]["surfaceFormat"]);}();
return result;}

    json serialize_VkDisplayProperties2KHR(VkDisplayProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VoAMLDI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VpFqCSP=json({});
    
        if (name.pNext==NULL){
            return_VpFqCSP["null"]=true;
            return return_VpFqCSP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayProperties"]=[&]() {
    json return_RaHgmyI=json({});
    return serialize_VkDisplayPropertiesKHR(name.displayProperties);}();
return result;}

    VkDisplayProperties2KHR deserialize_VkDisplayProperties2KHR(json name){
        auto result=VkDisplayProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayProperties=deserialize_VkDisplayPropertiesKHR(name["members"]["displayProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneProperties2KHR(VkDisplayPlaneProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_goMiDkp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ltjtRNM=json({});
    
        if (name.pNext==NULL){
            return_ltjtRNM["null"]=true;
            return return_ltjtRNM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPlaneProperties"]=[&]() {
    json return_bGzVTpr=json({});
    return serialize_VkDisplayPlanePropertiesKHR(name.displayPlaneProperties);}();
return result;}

    VkDisplayPlaneProperties2KHR deserialize_VkDisplayPlaneProperties2KHR(json name){
        auto result=VkDisplayPlaneProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayPlaneProperties=deserialize_VkDisplayPlanePropertiesKHR(name["members"]["displayPlaneProperties"]);}();
return result;}

    json serialize_VkDisplayModeProperties2KHR(VkDisplayModeProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nCkFSge=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IkJoYVt=json({});
    
        if (name.pNext==NULL){
            return_IkJoYVt["null"]=true;
            return return_IkJoYVt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayModeProperties"]=[&]() {
    json return_oySQOsd=json({});
    return serialize_VkDisplayModePropertiesKHR(name.displayModeProperties);}();
return result;}

    VkDisplayModeProperties2KHR deserialize_VkDisplayModeProperties2KHR(json name){
        auto result=VkDisplayModeProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayModeProperties=deserialize_VkDisplayModePropertiesKHR(name["members"]["displayModeProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneInfo2KHR(VkDisplayPlaneInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HlDJDKR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aevpSzf=json({});
    
        if (name.pNext==NULL){
            return_aevpSzf["null"]=true;
            return return_aevpSzf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_bgtyXZc=json({});
    return serialize_VkDisplayModeKHR(name.mode);}();
result["members"]["planeIndex"]=[&]() {
    json return_EJRTDNh=json({});
    return serialize_uint32_t(name.planeIndex);}();
return result;}

    VkDisplayPlaneInfo2KHR deserialize_VkDisplayPlaneInfo2KHR(json name){
        auto result=VkDisplayPlaneInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FuHgMFj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FuHgMFj=NULL;
        }
    temp_FuHgMFj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FuHgMFj;}();
[&]() {
result.mode=deserialize_VkDisplayModeKHR(name["members"]["mode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilities2KHR(VkDisplayPlaneCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CAMnFPZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dfgkqGy=json({});
    
        if (name.pNext==NULL){
            return_dfgkqGy["null"]=true;
            return return_dfgkqGy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["capabilities"]=[&]() {
    json return_qmbIvdJ=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(name.capabilities);}();
return result;}

    VkDisplayPlaneCapabilities2KHR deserialize_VkDisplayPlaneCapabilities2KHR(json name){
        auto result=VkDisplayPlaneCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.capabilities=deserialize_VkDisplayPlaneCapabilitiesKHR(name["members"]["capabilities"]);}();
return result;}

    json serialize_VkSharedPresentSurfaceCapabilitiesKHR(VkSharedPresentSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rTQEOsD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IwprseK=json({});
    
        if (name.pNext==NULL){
            return_IwprseK["null"]=true;
            return return_IwprseK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sharedPresentSupportedUsageFlags"]=[&]() {
    json return_JTKTUyQ=json({});
    return serialize_VkImageUsageFlags(name.sharedPresentSupportedUsageFlags);}();
return result;}

    VkSharedPresentSurfaceCapabilitiesKHR deserialize_VkSharedPresentSurfaceCapabilitiesKHR(json name){
        auto result=VkSharedPresentSurfaceCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sharedPresentSupportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["sharedPresentSupportedUsageFlags"]);}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeatures(VkPhysicalDevice16BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UxqkHVf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kLbEBsU=json({});
    
        if (name.pNext==NULL){
            return_kLbEBsU["null"]=true;
            return return_kLbEBsU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_tGzrKeE=json({});
    return_tGzrKeE=[&]() {
    json return_SKmgEmJ=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_tGzrKeE;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_xkXGWxq=json({});
    return_xkXGWxq=[&]() {
    json return_qYHowDS=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_xkXGWxq;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_gguaZYw=json({});
    return_gguaZYw=[&]() {
    json return_NawVNNl=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_gguaZYw;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_NlXLlxf=json({});
    return_NlXLlxf=[&]() {
    json return_zEGTJHN=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_NlXLlxf;}();
return result;}

    VkPhysicalDevice16BitStorageFeatures deserialize_VkPhysicalDevice16BitStorageFeatures(json name){
        auto result=VkPhysicalDevice16BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeaturesKHR(VkPhysicalDevice16BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Gjgxaum=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TTEhjlY=json({});
    
        if (name.pNext==NULL){
            return_TTEhjlY["null"]=true;
            return return_TTEhjlY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_CoMAzmx=json({});
    return_CoMAzmx=[&]() {
    json return_lUXWBIp=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_CoMAzmx;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_shKBpqc=json({});
    return_shKBpqc=[&]() {
    json return_EKGLEpJ=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_shKBpqc;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_wqlnebV=json({});
    return_wqlnebV=[&]() {
    json return_AMZLEhD=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_wqlnebV;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_yNnHivW=json({});
    return_yNnHivW=[&]() {
    json return_XHZpbsd=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_yNnHivW;}();
return result;}

    VkPhysicalDevice16BitStorageFeaturesKHR deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice16BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupProperties(VkPhysicalDeviceSubgroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QibWoIe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VIaVadv=json({});
    
        if (name.pNext==NULL){
            return_VIaVadv["null"]=true;
            return return_VIaVadv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSize"]=[&]() {
    json return_IVCGpFy=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["supportedStages"]=[&]() {
    json return_QAjuWJP=json({});
    return serialize_VkShaderStageFlags(name.supportedStages);}();
result["members"]["supportedOperations"]=[&]() {
    json return_OwCrAQu=json({});
    return serialize_VkSubgroupFeatureFlags(name.supportedOperations);}();
result["members"]["quadOperationsInAllStages"]=[&]() {
    json return_aJpjROt=json({});
    return_aJpjROt=[&]() {
    json return_IfCMPam=json({});
    return serialize_uint32_t(name.quadOperationsInAllStages);}();return return_aJpjROt;}();
return result;}

    VkPhysicalDeviceSubgroupProperties deserialize_VkPhysicalDeviceSubgroupProperties(json name){
        auto result=VkPhysicalDeviceSubgroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.supportedStages=deserialize_VkShaderStageFlags(name["members"]["supportedStages"]);}();
[&]() {
result.supportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["supportedOperations"]);}();
[&]() {
[&]() {
result.quadOperationsInAllStages=deserialize_uint32_t(name["members"]["quadOperationsInAllStages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_juvXIgY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BuBxeRp=json({});
    
        if (name.pNext==NULL){
            return_BuBxeRp["null"]=true;
            return return_BuBxeRp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_ubCWHcy=json({});
    return_ubCWHcy=[&]() {
    json return_QwfEBPn=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_ubCWHcy;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oTorTav=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WNEtfYJ=json({});
    
        if (name.pNext==NULL){
            return_WNEtfYJ["null"]=true;
            return return_WNEtfYJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_TsVJkJt=json({});
    return_TsVJkJt=[&]() {
    json return_GHcGIXu=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_TsVJkJt;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2(VkBufferMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LEIobzB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yrKSTdV=json({});
    
        if (name.pNext==NULL){
            return_yrKSTdV["null"]=true;
            return return_yrKSTdV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_IdIhKAG=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2 deserialize_VkBufferMemoryRequirementsInfo2(json name){
        auto result=VkBufferMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LtcmyjP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LtcmyjP=NULL;
        }
    temp_LtcmyjP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LtcmyjP;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2KHR(VkBufferMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hLepXDt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HMTEJpy=json({});
    
        if (name.pNext==NULL){
            return_HMTEJpy["null"]=true;
            return return_HMTEJpy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_cTLbmXd=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2KHR deserialize_VkBufferMemoryRequirementsInfo2KHR(json name){
        auto result=VkBufferMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LUXdIYx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LUXdIYx=NULL;
        }
    temp_LUXdIYx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LUXdIYx;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirements(VkDeviceBufferMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BCXblcx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kApWDgU=json({});
    
        if (name.pNext==NULL){
            return_kApWDgU["null"]=true;
            return return_kApWDgU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_uVrwVXe=json({});
    
        if (name.pCreateInfo==NULL){
            return_uVrwVXe["null"]=true;
            return return_uVrwVXe;
        }
        return_uVrwVXe=[&]() {
    json return_qHRHtWc=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_uVrwVXe;}();
return result;}

    VkDeviceBufferMemoryRequirements deserialize_VkDeviceBufferMemoryRequirements(json name){
        auto result=VkDeviceBufferMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EkbOgrh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EkbOgrh=NULL;
        }
    temp_EkbOgrh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EkbOgrh;}();
[&]() {
VkBufferCreateInfo* temp_AITcZIF;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_AITcZIF=NULL;
        }
    [&]() {
*(temp_AITcZIF)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_AITcZIF;}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirementsKHR(VkDeviceBufferMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IIblNLc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sgQmMYj=json({});
    
        if (name.pNext==NULL){
            return_sgQmMYj["null"]=true;
            return return_sgQmMYj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_IWRKLzM=json({});
    
        if (name.pCreateInfo==NULL){
            return_IWRKLzM["null"]=true;
            return return_IWRKLzM;
        }
        return_IWRKLzM=[&]() {
    json return_yQdDtJz=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_IWRKLzM;}();
return result;}

    VkDeviceBufferMemoryRequirementsKHR deserialize_VkDeviceBufferMemoryRequirementsKHR(json name){
        auto result=VkDeviceBufferMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqBRIuK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqBRIuK=NULL;
        }
    temp_UqBRIuK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UqBRIuK;}();
[&]() {
VkBufferCreateInfo* temp_OnjtIRY;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_OnjtIRY=NULL;
        }
    [&]() {
*(temp_OnjtIRY)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_OnjtIRY;}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2(VkImageMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hkilPKc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eLbMENO=json({});
    
        if (name.pNext==NULL){
            return_eLbMENO["null"]=true;
            return return_eLbMENO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_sXsgUKI=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2 deserialize_VkImageMemoryRequirementsInfo2(json name){
        auto result=VkImageMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eWtrZUj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eWtrZUj=NULL;
        }
    temp_eWtrZUj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eWtrZUj;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2KHR(VkImageMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NmgsVCK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AcdFGsz=json({});
    
        if (name.pNext==NULL){
            return_AcdFGsz["null"]=true;
            return return_AcdFGsz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_CegcXAC=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2KHR deserialize_VkImageMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hkVNaiT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hkVNaiT=NULL;
        }
    temp_hkVNaiT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hkVNaiT;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2(VkImageSparseMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CNJLahY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UWnGUrP=json({});
    
        if (name.pNext==NULL){
            return_UWnGUrP["null"]=true;
            return return_UWnGUrP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_HIIaFtP=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2 deserialize_VkImageSparseMemoryRequirementsInfo2(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fiYleMh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fiYleMh=NULL;
        }
    temp_fiYleMh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fiYleMh;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2KHR(VkImageSparseMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lhcvihe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HKYQzaa=json({});
    
        if (name.pNext==NULL){
            return_HKYQzaa["null"]=true;
            return return_HKYQzaa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_wNUdRMM=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2KHR deserialize_VkImageSparseMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HUhQCVK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HUhQCVK=NULL;
        }
    temp_HUhQCVK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HUhQCVK;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirements(VkDeviceImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tovczIx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NqYBfmE=json({});
    
        if (name.pNext==NULL){
            return_NqYBfmE["null"]=true;
            return return_NqYBfmE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_hOgxGZW=json({});
    
        if (name.pCreateInfo==NULL){
            return_hOgxGZW["null"]=true;
            return return_hOgxGZW;
        }
        return_hOgxGZW=[&]() {
    json return_cdmaXKZ=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_hOgxGZW;}();
result["members"]["planeAspect"]=[&]() {
    json return_TgXZBJD=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirements deserialize_VkDeviceImageMemoryRequirements(json name){
        auto result=VkDeviceImageMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dlKtDxa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dlKtDxa=NULL;
        }
    temp_dlKtDxa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dlKtDxa;}();
[&]() {
VkImageCreateInfo* temp_KULuqCE;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_KULuqCE=NULL;
        }
    [&]() {
*(temp_KULuqCE)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_KULuqCE;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirementsKHR(VkDeviceImageMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eNoltAI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MfXLWBS=json({});
    
        if (name.pNext==NULL){
            return_MfXLWBS["null"]=true;
            return return_MfXLWBS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_ewhuNsT=json({});
    
        if (name.pCreateInfo==NULL){
            return_ewhuNsT["null"]=true;
            return return_ewhuNsT;
        }
        return_ewhuNsT=[&]() {
    json return_uaOJlRy=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_ewhuNsT;}();
result["members"]["planeAspect"]=[&]() {
    json return_EvgAoxa=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirementsKHR deserialize_VkDeviceImageMemoryRequirementsKHR(json name){
        auto result=VkDeviceImageMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VCzuaKd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VCzuaKd=NULL;
        }
    temp_VCzuaKd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VCzuaKd;}();
[&]() {
VkImageCreateInfo* temp_dMDOFtn;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_dMDOFtn=NULL;
        }
    [&]() {
*(temp_dMDOFtn)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_dMDOFtn;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkMemoryRequirements2(VkMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Axonydc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TnVtSbo=json({});
    
        if (name.pNext==NULL){
            return_TnVtSbo["null"]=true;
            return return_TnVtSbo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_WMjSTho=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2 deserialize_VkMemoryRequirements2(json name){
        auto result=VkMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkMemoryRequirements2KHR(VkMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kNgIXUE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RFrJxZi=json({});
    
        if (name.pNext==NULL){
            return_RFrJxZi["null"]=true;
            return return_RFrJxZi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_dXXltvp=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2KHR deserialize_VkMemoryRequirements2KHR(json name){
        auto result=VkMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2(VkSparseImageMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BwHaPAh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sauFGec=json({});
    
        if (name.pNext==NULL){
            return_sauFGec["null"]=true;
            return return_sauFGec;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_CIymDfg=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2 deserialize_VkSparseImageMemoryRequirements2(json name){
        auto result=VkSparseImageMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2KHR(VkSparseImageMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OUronEi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tNwRJoZ=json({});
    
        if (name.pNext==NULL){
            return_tNwRJoZ["null"]=true;
            return return_tNwRJoZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_OawmEVo=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2KHR deserialize_VkSparseImageMemoryRequirements2KHR(json name){
        auto result=VkSparseImageMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingProperties(VkPhysicalDevicePointClippingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jmMUbkI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ItNaNvJ=json({});
    
        if (name.pNext==NULL){
            return_ItNaNvJ["null"]=true;
            return return_ItNaNvJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_dWNcDHI=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingProperties deserialize_VkPhysicalDevicePointClippingProperties(json name){
        auto result=VkPhysicalDevicePointClippingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingPropertiesKHR(VkPhysicalDevicePointClippingPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DEGhgDz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mWCQbQW=json({});
    
        if (name.pNext==NULL){
            return_mWCQbQW["null"]=true;
            return return_mWCQbQW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_JwBYWTS=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingPropertiesKHR deserialize_VkPhysicalDevicePointClippingPropertiesKHR(json name){
        auto result=VkPhysicalDevicePointClippingPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkMemoryDedicatedRequirements(VkMemoryDedicatedRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lXJGuPk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DlErVXO=json({});
    
        if (name.pNext==NULL){
            return_DlErVXO["null"]=true;
            return return_DlErVXO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_fjGXHdT=json({});
    return_fjGXHdT=[&]() {
    json return_ibIrSdq=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_fjGXHdT;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_THCaLFL=json({});
    return_THCaLFL=[&]() {
    json return_RLtDrvR=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_THCaLFL;}();
return result;}

    VkMemoryDedicatedRequirements deserialize_VkMemoryDedicatedRequirements(json name){
        auto result=VkMemoryDedicatedRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedRequirementsKHR(VkMemoryDedicatedRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bArvGoJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QukWZTI=json({});
    
        if (name.pNext==NULL){
            return_QukWZTI["null"]=true;
            return return_QukWZTI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_IEzZQnJ=json({});
    return_IEzZQnJ=[&]() {
    json return_PmYKLqK=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_IEzZQnJ;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_fjFgGWJ=json({});
    return_fjFgGWJ=[&]() {
    json return_zzwyFVl=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_fjFgGWJ;}();
return result;}

    VkMemoryDedicatedRequirementsKHR deserialize_VkMemoryDedicatedRequirementsKHR(json name){
        auto result=VkMemoryDedicatedRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfo(VkMemoryDedicatedAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mFXIkpz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YfIonEG=json({});
    
        if (name.pNext==NULL){
            return_YfIonEG["null"]=true;
            return return_YfIonEG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_uXdmqBI=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_zPevrdE=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfo deserialize_VkMemoryDedicatedAllocateInfo(json name){
        auto result=VkMemoryDedicatedAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VlJTBCq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VlJTBCq=NULL;
        }
    temp_VlJTBCq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VlJTBCq;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfoKHR(VkMemoryDedicatedAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TlZUPPn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JiYCvXh=json({});
    
        if (name.pNext==NULL){
            return_JiYCvXh["null"]=true;
            return return_JiYCvXh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_pGjUyVM=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_uAfKccc=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfoKHR deserialize_VkMemoryDedicatedAllocateInfoKHR(json name){
        auto result=VkMemoryDedicatedAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rfqodIb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rfqodIb=NULL;
        }
    temp_rfqodIb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rfqodIb;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfo(VkImageViewUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QrmEolG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QtWqnyM=json({});
    
        if (name.pNext==NULL){
            return_QtWqnyM["null"]=true;
            return return_QtWqnyM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_ZdafbDo=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfo deserialize_VkImageViewUsageCreateInfo(json name){
        auto result=VkImageViewUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ByXyCzB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ByXyCzB=NULL;
        }
    temp_ByXyCzB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ByXyCzB;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkImageViewSlicedCreateInfoEXT(VkImageViewSlicedCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AfutCny=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wAJfIoc=json({});
    
        if (name.pNext==NULL){
            return_wAJfIoc["null"]=true;
            return return_wAJfIoc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sliceOffset"]=[&]() {
    json return_wPinrRa=json({});
    return serialize_uint32_t(name.sliceOffset);}();
result["members"]["sliceCount"]=[&]() {
    json return_qZJuoJS=json({});
    return serialize_uint32_t(name.sliceCount);}();
return result;}

    VkImageViewSlicedCreateInfoEXT deserialize_VkImageViewSlicedCreateInfoEXT(json name){
        auto result=VkImageViewSlicedCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FOLXIzW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FOLXIzW=NULL;
        }
    temp_FOLXIzW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FOLXIzW;}();
[&]() {
result.sliceOffset=deserialize_uint32_t(name["members"]["sliceOffset"]);}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfoKHR(VkImageViewUsageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mWwDYEH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rGSFwEz=json({});
    
        if (name.pNext==NULL){
            return_rGSFwEz["null"]=true;
            return return_rGSFwEz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_KVLlBrq=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfoKHR deserialize_VkImageViewUsageCreateInfoKHR(json name){
        auto result=VkImageViewUsageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Lvtyomi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Lvtyomi=NULL;
        }
    temp_Lvtyomi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Lvtyomi;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfo(VkPipelineTessellationDomainOriginStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GlYwLBo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MXnKZvQ=json({});
    
        if (name.pNext==NULL){
            return_MXnKZvQ["null"]=true;
            return return_MXnKZvQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_wEnJCQz=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfo deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sKbPhDL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sKbPhDL=NULL;
        }
    temp_sKbPhDL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sKbPhDL;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(VkPipelineTessellationDomainOriginStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qjGkjBH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jCMyjNw=json({});
    
        if (name.pNext==NULL){
            return_jCMyjNw["null"]=true;
            return return_jCMyjNw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_HNAoqYG=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfoKHR deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TshADSk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TshADSk=NULL;
        }
    temp_TshADSk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TshADSk;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfo(VkSamplerYcbcrConversionInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qfrGUhI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DvMkNiH=json({});
    
        if (name.pNext==NULL){
            return_DvMkNiH["null"]=true;
            return return_DvMkNiH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_bXOtOUJ=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfo deserialize_VkSamplerYcbcrConversionInfo(json name){
        auto result=VkSamplerYcbcrConversionInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mPQVyKW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mPQVyKW=NULL;
        }
    temp_mPQVyKW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mPQVyKW;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfoKHR(VkSamplerYcbcrConversionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DgyLPHI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bblUvcY=json({});
    
        if (name.pNext==NULL){
            return_bblUvcY["null"]=true;
            return return_bblUvcY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_bCWRlrR=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfoKHR deserialize_VkSamplerYcbcrConversionInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WcZlqPg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WcZlqPg=NULL;
        }
    temp_WcZlqPg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WcZlqPg;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfo(VkSamplerYcbcrConversionCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sSqxxGy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_covnwgO=json({});
    
        if (name.pNext==NULL){
            return_covnwgO["null"]=true;
            return return_covnwgO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_tiZhBOt=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_IEaWWUx=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_TEcPSmG=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_IzyNLQK=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_osApiMc=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_ByelohM=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_GFutduT=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_bRWPqJd=json({});
    return_bRWPqJd=[&]() {
    json return_DlZWnkd=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_bRWPqJd;}();
return result;}

    VkSamplerYcbcrConversionCreateInfo deserialize_VkSamplerYcbcrConversionCreateInfo(json name){
        auto result=VkSamplerYcbcrConversionCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_scLxfwX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_scLxfwX=NULL;
        }
    temp_scLxfwX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_scLxfwX;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfoKHR(VkSamplerYcbcrConversionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fZpnEpu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nLvAcRG=json({});
    
        if (name.pNext==NULL){
            return_nLvAcRG["null"]=true;
            return return_nLvAcRG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_zFaLpjL=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_vYaBVnH=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_pIbQNqX=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_XIOohle=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_fIXpbgZ=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_MmobVdn=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_fNYRQZu=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_HrqRKmv=json({});
    return_HrqRKmv=[&]() {
    json return_URFYEuG=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_HrqRKmv;}();
return result;}

    VkSamplerYcbcrConversionCreateInfoKHR deserialize_VkSamplerYcbcrConversionCreateInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WarZrLO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WarZrLO=NULL;
        }
    temp_WarZrLO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WarZrLO;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfo(VkBindImagePlaneMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lYgjbfd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NfoYHFt=json({});
    
        if (name.pNext==NULL){
            return_NfoYHFt["null"]=true;
            return return_NfoYHFt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_HFfhZQf=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfo deserialize_VkBindImagePlaneMemoryInfo(json name){
        auto result=VkBindImagePlaneMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vrDlBCz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vrDlBCz=NULL;
        }
    temp_vrDlBCz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vrDlBCz;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfoKHR(VkBindImagePlaneMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lIHifrA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DzCShFm=json({});
    
        if (name.pNext==NULL){
            return_DzCShFm["null"]=true;
            return return_DzCShFm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_iPqaJbh=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfoKHR deserialize_VkBindImagePlaneMemoryInfoKHR(json name){
        auto result=VkBindImagePlaneMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vCNlkUO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vCNlkUO=NULL;
        }
    temp_vCNlkUO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vCNlkUO;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfo(VkImagePlaneMemoryRequirementsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bqShMFF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KJiElDr=json({});
    
        if (name.pNext==NULL){
            return_KJiElDr["null"]=true;
            return return_KJiElDr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_nTsOvQg=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfo deserialize_VkImagePlaneMemoryRequirementsInfo(json name){
        auto result=VkImagePlaneMemoryRequirementsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YtthUhd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YtthUhd=NULL;
        }
    temp_YtthUhd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YtthUhd;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfoKHR(VkImagePlaneMemoryRequirementsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HaVtHru=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tlYJtcN=json({});
    
        if (name.pNext==NULL){
            return_tlYJtcN["null"]=true;
            return return_tlYJtcN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_gHxUdex=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfoKHR deserialize_VkImagePlaneMemoryRequirementsInfoKHR(json name){
        auto result=VkImagePlaneMemoryRequirementsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GFSPDhF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GFSPDhF=NULL;
        }
    temp_GFSPDhF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GFSPDhF;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(VkPhysicalDeviceSamplerYcbcrConversionFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KVTAgTh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HCnDPvS=json({});
    
        if (name.pNext==NULL){
            return_HCnDPvS["null"]=true;
            return return_HCnDPvS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_tbSHJRy=json({});
    return_tbSHJRy=[&]() {
    json return_fUoXXEm=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_tbSHJRy;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeatures deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fzMTwOw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aybOuJK=json({});
    
        if (name.pNext==NULL){
            return_aybOuJK["null"]=true;
            return return_aybOuJK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_aLAAQpe=json({});
    return_aLAAQpe=[&]() {
    json return_RLTgLBV=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_aLAAQpe;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatProperties(VkSamplerYcbcrConversionImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lMLpoLP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XsaiokF=json({});
    
        if (name.pNext==NULL){
            return_XsaiokF["null"]=true;
            return return_XsaiokF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_XfzxzKQ=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatProperties deserialize_VkSamplerYcbcrConversionImageFormatProperties(json name){
        auto result=VkSamplerYcbcrConversionImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(VkSamplerYcbcrConversionImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wIxdLeh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kLuOmfF=json({});
    
        if (name.pNext==NULL){
            return_kLuOmfF["null"]=true;
            return return_kLuOmfF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_GXeaMVD=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatPropertiesKHR deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(json name){
        auto result=VkSamplerYcbcrConversionImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkTextureLODGatherFormatPropertiesAMD(VkTextureLODGatherFormatPropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jraqrER=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XtBAZGX=json({});
    
        if (name.pNext==NULL){
            return_XtBAZGX["null"]=true;
            return return_XtBAZGX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsTextureGatherLODBiasAMD"]=[&]() {
    json return_vVmHKBM=json({});
    return_vVmHKBM=[&]() {
    json return_eyNkytW=json({});
    return serialize_uint32_t(name.supportsTextureGatherLODBiasAMD);}();return return_vVmHKBM;}();
return result;}

    VkTextureLODGatherFormatPropertiesAMD deserialize_VkTextureLODGatherFormatPropertiesAMD(json name){
        auto result=VkTextureLODGatherFormatPropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supportsTextureGatherLODBiasAMD=deserialize_uint32_t(name["members"]["supportsTextureGatherLODBiasAMD"]);}();}();
return result;}

    json serialize_VkConditionalRenderingBeginInfoEXT(VkConditionalRenderingBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OBQbIEu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mBotTBx=json({});
    
        if (name.pNext==NULL){
            return_mBotTBx["null"]=true;
            return return_mBotTBx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_GGTQgYx=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_APgeLfP=json({});
    return_APgeLfP=[&]() {
    json return_VRCBPPg=json({});
    return serialize_uint64_t(name.offset);}();return return_APgeLfP;}();
result["members"]["flags"]=[&]() {
    json return_OjCZyOO=json({});
    return serialize_VkConditionalRenderingFlagsEXT(name.flags);}();
return result;}

    VkConditionalRenderingBeginInfoEXT deserialize_VkConditionalRenderingBeginInfoEXT(json name){
        auto result=VkConditionalRenderingBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NtybAbN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NtybAbN=NULL;
        }
    temp_NtybAbN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NtybAbN;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
result.flags=deserialize_VkConditionalRenderingFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkProtectedSubmitInfo(VkProtectedSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VJjCTcu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YOYFXJf=json({});
    
        if (name.pNext==NULL){
            return_YOYFXJf["null"]=true;
            return return_YOYFXJf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedSubmit"]=[&]() {
    json return_DbpzosE=json({});
    return_DbpzosE=[&]() {
    json return_jNwSmbG=json({});
    return serialize_uint32_t(name.protectedSubmit);}();return return_DbpzosE;}();
return result;}

    VkProtectedSubmitInfo deserialize_VkProtectedSubmitInfo(json name){
        auto result=VkProtectedSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yGnGQlD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yGnGQlD=NULL;
        }
    temp_yGnGQlD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yGnGQlD;}();
[&]() {
[&]() {
result.protectedSubmit=deserialize_uint32_t(name["members"]["protectedSubmit"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryFeatures(VkPhysicalDeviceProtectedMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AeBafvf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AXLatjI=json({});
    
        if (name.pNext==NULL){
            return_AXLatjI["null"]=true;
            return return_AXLatjI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedMemory"]=[&]() {
    json return_KMlGWLm=json({});
    return_KMlGWLm=[&]() {
    json return_TJIKlFz=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_KMlGWLm;}();
return result;}

    VkPhysicalDeviceProtectedMemoryFeatures deserialize_VkPhysicalDeviceProtectedMemoryFeatures(json name){
        auto result=VkPhysicalDeviceProtectedMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryProperties(VkPhysicalDeviceProtectedMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NYZVHGV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IGVaOkP=json({});
    
        if (name.pNext==NULL){
            return_IGVaOkP["null"]=true;
            return return_IGVaOkP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedNoFault"]=[&]() {
    json return_ixviVDA=json({});
    return_ixviVDA=[&]() {
    json return_iNPqNYb=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_ixviVDA;}();
return result;}

    VkPhysicalDeviceProtectedMemoryProperties deserialize_VkPhysicalDeviceProtectedMemoryProperties(json name){
        auto result=VkPhysicalDeviceProtectedMemoryProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
return result;}

    json serialize_VkDeviceQueueInfo2(VkDeviceQueueInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZxZuCBO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_izqSbwR=json({});
    
        if (name.pNext==NULL){
            return_izqSbwR["null"]=true;
            return return_izqSbwR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UmLkqcv=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_WrjmTbh=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueIndex"]=[&]() {
    json return_eYeObiD=json({});
    return serialize_uint32_t(name.queueIndex);}();
return result;}

    VkDeviceQueueInfo2 deserialize_VkDeviceQueueInfo2(json name){
        auto result=VkDeviceQueueInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ITCxSkf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ITCxSkf=NULL;
        }
    temp_ITCxSkf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ITCxSkf;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueIndex=deserialize_uint32_t(name["members"]["queueIndex"]);}();
return result;}

    json serialize_VkPipelineCoverageToColorStateCreateInfoNV(VkPipelineCoverageToColorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FygAASu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBeqeHW=json({});
    
        if (name.pNext==NULL){
            return_pBeqeHW["null"]=true;
            return return_pBeqeHW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RONNrRG=json({});
    return serialize_VkPipelineCoverageToColorStateCreateFlagsNV(name.flags);}();
result["members"]["coverageToColorEnable"]=[&]() {
    json return_JQxJqGQ=json({});
    return_JQxJqGQ=[&]() {
    json return_awxWHzB=json({});
    return serialize_uint32_t(name.coverageToColorEnable);}();return return_JQxJqGQ;}();
result["members"]["coverageToColorLocation"]=[&]() {
    json return_ZUjqbqd=json({});
    return serialize_uint32_t(name.coverageToColorLocation);}();
return result;}

    VkPipelineCoverageToColorStateCreateInfoNV deserialize_VkPipelineCoverageToColorStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageToColorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XEbjPxc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XEbjPxc=NULL;
        }
    temp_XEbjPxc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XEbjPxc;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
[&]() {
result.coverageToColorEnable=deserialize_uint32_t(name["members"]["coverageToColorEnable"]);}();}();
[&]() {
result.coverageToColorLocation=deserialize_uint32_t(name["members"]["coverageToColorLocation"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(VkPhysicalDeviceSamplerFilterMinmaxProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TShCnlW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mxuTxOo=json({});
    
        if (name.pNext==NULL){
            return_mxuTxOo["null"]=true;
            return return_mxuTxOo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_Galbpmo=json({});
    return_Galbpmo=[&]() {
    json return_etsRHzP=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_Galbpmo;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_rvOVTIR=json({});
    return_rvOVTIR=[&]() {
    json return_EMWAqsl=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_rvOVTIR;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxProperties deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HbJADfL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OJRlbfE=json({});
    
        if (name.pNext==NULL){
            return_OJRlbfE["null"]=true;
            return return_OJRlbfE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_smzGUyb=json({});
    return_smzGUyb=[&]() {
    json return_BtsvcIw=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_smzGUyb;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_NpBbKqK=json({});
    return_NpBbKqK=[&]() {
    json return_SotdXMi=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_NpBbKqK;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkSampleLocationEXT(VkSampleLocationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_bwrqinB=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_ufBtsko=json({});
    return serialize_float(name.y);}();
return result;}

    VkSampleLocationEXT deserialize_VkSampleLocationEXT(json name){
        auto result=VkSampleLocationEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkSampleLocationsInfoEXT(VkSampleLocationsInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HgasOLt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hgyxwXv=json({});
    
        if (name.pNext==NULL){
            return_hgyxwXv["null"]=true;
            return return_hgyxwXv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsPerPixel"]=[&]() {
    json return_ZybiZus=json({});
    return serialize_VkSampleCountFlagBits(name.sampleLocationsPerPixel);}();
result["members"]["sampleLocationGridSize"]=[&]() {
    json return_umjjJEO=json({});
    return serialize_VkExtent2D(name.sampleLocationGridSize);}();
result["members"]["sampleLocationsCount"]=[&]() {
    json return_JgmRPyg=json({});
    return serialize_uint32_t(name.sampleLocationsCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_ZZUsmtV=json({});
    
        if (name.pSampleLocations==NULL){
            return_ZZUsmtV["null"]=true;
            return return_ZZUsmtV;
        }
        
        return_ZZUsmtV["members"]={};
        for(int i=0; i < name.sampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_ypuVBUe=json({});
    return serialize_VkSampleLocationEXT(name.pSampleLocations[i]);}();
            return_ZZUsmtV["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZZUsmtV;
        }();
return result;}

    VkSampleLocationsInfoEXT deserialize_VkSampleLocationsInfoEXT(json name){
        auto result=VkSampleLocationsInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bGErmkh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bGErmkh=NULL;
        }
    temp_bGErmkh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bGErmkh;}();
[&]() {
result.sampleLocationsPerPixel=deserialize_VkSampleCountFlagBits(name["members"]["sampleLocationsPerPixel"]);}();
[&]() {
result.sampleLocationGridSize=deserialize_VkExtent2D(name["members"]["sampleLocationGridSize"]);}();
[&]() {
result.sampleLocationsCount=deserialize_uint32_t(name["members"]["sampleLocationsCount"]);}();
[&]() {
VkSampleLocationEXT* temp_ixYqUmI;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_ixYqUmI=NULL;
        }
    temp_ixYqUmI=(VkSampleLocationEXT*)malloc(result.sampleLocationsCount*sizeof(VkSampleLocationEXT));
        for (int izwSYDG=0; izwSYDG < result.sampleLocationsCount; izwSYDG++){
            [&]() {
temp_ixYqUmI[izwSYDG]=deserialize_VkSampleLocationEXT(name["members"]["pSampleLocations"]["members"][izwSYDG]);}();;
        }
        }();result.pSampleLocations=temp_ixYqUmI;}();
return result;}

    json serialize_VkAttachmentSampleLocationsEXT(VkAttachmentSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachmentIndex"]=[&]() {
    json return_HDmDeNy=json({});
    return serialize_uint32_t(name.attachmentIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_UEYhoNo=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkAttachmentSampleLocationsEXT deserialize_VkAttachmentSampleLocationsEXT(json name){
        auto result=VkAttachmentSampleLocationsEXT();
    
[&]() {
result.attachmentIndex=deserialize_uint32_t(name["members"]["attachmentIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkSubpassSampleLocationsEXT(VkSubpassSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassIndex"]=[&]() {
    json return_MJNAGxJ=json({});
    return serialize_uint32_t(name.subpassIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_TsjMroi=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkSubpassSampleLocationsEXT deserialize_VkSubpassSampleLocationsEXT(json name){
        auto result=VkSubpassSampleLocationsEXT();
    
[&]() {
result.subpassIndex=deserialize_uint32_t(name["members"]["subpassIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkRenderPassSampleLocationsBeginInfoEXT(VkRenderPassSampleLocationsBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gMHqDha=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CnyCjzZ=json({});
    
        if (name.pNext==NULL){
            return_CnyCjzZ["null"]=true;
            return return_CnyCjzZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentInitialSampleLocationsCount"]=[&]() {
    json return_tcNyXKZ=json({});
    return serialize_uint32_t(name.attachmentInitialSampleLocationsCount);}();
result["members"]["pAttachmentInitialSampleLocations"]=[&]() {
    json return_HKtCbba=json({});
    
        if (name.pAttachmentInitialSampleLocations==NULL){
            return_HKtCbba["null"]=true;
            return return_HKtCbba;
        }
        
        return_HKtCbba["members"]={};
        for(int i=0; i < name.attachmentInitialSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_ahPssvH=json({});
    return serialize_VkAttachmentSampleLocationsEXT(name.pAttachmentInitialSampleLocations[i]);}();
            return_HKtCbba["members"][std::to_string(i)].push_back(temp);
        }
        return return_HKtCbba;
        }();
result["members"]["postSubpassSampleLocationsCount"]=[&]() {
    json return_AzKZfbI=json({});
    return serialize_uint32_t(name.postSubpassSampleLocationsCount);}();
result["members"]["pPostSubpassSampleLocations"]=[&]() {
    json return_qwysOmm=json({});
    
        if (name.pPostSubpassSampleLocations==NULL){
            return_qwysOmm["null"]=true;
            return return_qwysOmm;
        }
        
        return_qwysOmm["members"]={};
        for(int i=0; i < name.postSubpassSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_RzZkUNG=json({});
    return serialize_VkSubpassSampleLocationsEXT(name.pPostSubpassSampleLocations[i]);}();
            return_qwysOmm["members"][std::to_string(i)].push_back(temp);
        }
        return return_qwysOmm;
        }();
return result;}

    VkRenderPassSampleLocationsBeginInfoEXT deserialize_VkRenderPassSampleLocationsBeginInfoEXT(json name){
        auto result=VkRenderPassSampleLocationsBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RQdWEoV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RQdWEoV=NULL;
        }
    temp_RQdWEoV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RQdWEoV;}();
[&]() {
result.attachmentInitialSampleLocationsCount=deserialize_uint32_t(name["members"]["attachmentInitialSampleLocationsCount"]);}();
[&]() {
VkAttachmentSampleLocationsEXT* temp_CKpgoPW;[&]() {

        if (name["members"]["pAttachmentInitialSampleLocations"].contains("null")){
        temp_CKpgoPW=NULL;
        }
    temp_CKpgoPW=(VkAttachmentSampleLocationsEXT*)malloc(result.attachmentInitialSampleLocationsCount*sizeof(VkAttachmentSampleLocationsEXT));
        for (int zQeYFww=0; zQeYFww < result.attachmentInitialSampleLocationsCount; zQeYFww++){
            [&]() {
temp_CKpgoPW[zQeYFww]=deserialize_VkAttachmentSampleLocationsEXT(name["members"]["pAttachmentInitialSampleLocations"]["members"][zQeYFww]);}();;
        }
        }();result.pAttachmentInitialSampleLocations=temp_CKpgoPW;}();
[&]() {
result.postSubpassSampleLocationsCount=deserialize_uint32_t(name["members"]["postSubpassSampleLocationsCount"]);}();
[&]() {
VkSubpassSampleLocationsEXT* temp_tCobdOW;[&]() {

        if (name["members"]["pPostSubpassSampleLocations"].contains("null")){
        temp_tCobdOW=NULL;
        }
    temp_tCobdOW=(VkSubpassSampleLocationsEXT*)malloc(result.postSubpassSampleLocationsCount*sizeof(VkSubpassSampleLocationsEXT));
        for (int QHmANgK=0; QHmANgK < result.postSubpassSampleLocationsCount; QHmANgK++){
            [&]() {
temp_tCobdOW[QHmANgK]=deserialize_VkSubpassSampleLocationsEXT(name["members"]["pPostSubpassSampleLocations"]["members"][QHmANgK]);}();;
        }
        }();result.pPostSubpassSampleLocations=temp_tCobdOW;}();
return result;}

    json serialize_VkPipelineSampleLocationsStateCreateInfoEXT(VkPipelineSampleLocationsStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yZuNKcB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rHtzeJR=json({});
    
        if (name.pNext==NULL){
            return_rHtzeJR["null"]=true;
            return return_rHtzeJR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsEnable"]=[&]() {
    json return_tmdfPaB=json({});
    return_tmdfPaB=[&]() {
    json return_nwabJoy=json({});
    return serialize_uint32_t(name.sampleLocationsEnable);}();return return_tmdfPaB;}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_mOqwuvp=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkPipelineSampleLocationsStateCreateInfoEXT deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(json name){
        auto result=VkPipelineSampleLocationsStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BDknTec;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BDknTec=NULL;
        }
    temp_BDknTec=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BDknTec;}();
[&]() {
[&]() {
result.sampleLocationsEnable=deserialize_uint32_t(name["members"]["sampleLocationsEnable"]);}();}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(VkPhysicalDeviceSampleLocationsPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bCJxDvt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xFwjpcF=json({});
    
        if (name.pNext==NULL){
            return_xFwjpcF["null"]=true;
            return return_xFwjpcF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationSampleCounts"]=[&]() {
    json return_LorrUwk=json({});
    return serialize_VkSampleCountFlags(name.sampleLocationSampleCounts);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_dWJozCd=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
result["members"]["sampleLocationCoordinateRange"]=[&]() {
    json return_tjyNFRl=json({});
    
        return_tjyNFRl["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_VjSRGYm=json({});
    return serialize_float(name.sampleLocationCoordinateRange[i]);}();
            return_tjyNFRl["members"][std::to_string(i)].push_back(temp);
        }
        return return_tjyNFRl;
        }();
result["members"]["sampleLocationSubPixelBits"]=[&]() {
    json return_PdcEjwA=json({});
    return serialize_uint32_t(name.sampleLocationSubPixelBits);}();
result["members"]["variableSampleLocations"]=[&]() {
    json return_vwYIsqa=json({});
    return_vwYIsqa=[&]() {
    json return_YZNaYBB=json({});
    return serialize_uint32_t(name.variableSampleLocations);}();return return_vwYIsqa;}();
return result;}

    VkPhysicalDeviceSampleLocationsPropertiesEXT deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSampleLocationsPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleLocationSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleLocationSampleCounts"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
[&]() {

        for (int pvqmVoE=0; pvqmVoE < 2; pvqmVoE++){
            [&]() {
result.sampleLocationCoordinateRange[pvqmVoE]=deserialize_float(name["members"]["sampleLocationCoordinateRange"]["members"][pvqmVoE]);}();;
        }
        }();
[&]() {
result.sampleLocationSubPixelBits=deserialize_uint32_t(name["members"]["sampleLocationSubPixelBits"]);}();
[&]() {
[&]() {
result.variableSampleLocations=deserialize_uint32_t(name["members"]["variableSampleLocations"]);}();}();
return result;}

    json serialize_VkMultisamplePropertiesEXT(VkMultisamplePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cLCDJhj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tmflYtO=json({});
    
        if (name.pNext==NULL){
            return_tmflYtO["null"]=true;
            return return_tmflYtO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_uqrqupk=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
return result;}

    VkMultisamplePropertiesEXT deserialize_VkMultisamplePropertiesEXT(json name){
        auto result=VkMultisamplePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfo(VkSamplerReductionModeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EvDudsC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pSzPhoR=json({});
    
        if (name.pNext==NULL){
            return_pSzPhoR["null"]=true;
            return return_pSzPhoR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_wahrfTk=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfo deserialize_VkSamplerReductionModeCreateInfo(json name){
        auto result=VkSamplerReductionModeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ojABEgh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ojABEgh=NULL;
        }
    temp_ojABEgh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ojABEgh;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfoEXT(VkSamplerReductionModeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NpwRUhS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eRdLzqn=json({});
    
        if (name.pNext==NULL){
            return_eRdLzqn["null"]=true;
            return return_eRdLzqn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_ndwHFDj=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfoEXT deserialize_VkSamplerReductionModeCreateInfoEXT(json name){
        auto result=VkSamplerReductionModeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZRdJsBC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZRdJsBC=NULL;
        }
    temp_ZRdJsBC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZRdJsBC;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mnirNAY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kVmNuUT=json({});
    
        if (name.pNext==NULL){
            return_kVmNuUT["null"]=true;
            return return_kVmNuUT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendCoherentOperations"]=[&]() {
    json return_BsxUbbz=json({});
    return_BsxUbbz=[&]() {
    json return_gEbNAbI=json({});
    return serialize_uint32_t(name.advancedBlendCoherentOperations);}();return return_BsxUbbz;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.advancedBlendCoherentOperations=deserialize_uint32_t(name["members"]["advancedBlendCoherentOperations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(VkPhysicalDeviceMultiDrawFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_svHFNkH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ibSogkw=json({});
    
        if (name.pNext==NULL){
            return_ibSogkw["null"]=true;
            return return_ibSogkw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiDraw"]=[&]() {
    json return_tavQjCe=json({});
    return_tavQjCe=[&]() {
    json return_wNwUjku=json({});
    return serialize_uint32_t(name.multiDraw);}();return return_tavQjCe;}();
return result;}

    VkPhysicalDeviceMultiDrawFeaturesEXT deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiDraw=deserialize_uint32_t(name["members"]["multiDraw"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JiRGMqW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PSKLOGd=json({});
    
        if (name.pNext==NULL){
            return_PSKLOGd["null"]=true;
            return return_PSKLOGd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendMaxColorAttachments"]=[&]() {
    json return_HosVeaR=json({});
    return serialize_uint32_t(name.advancedBlendMaxColorAttachments);}();
result["members"]["advancedBlendIndependentBlend"]=[&]() {
    json return_TSPxuHN=json({});
    return_TSPxuHN=[&]() {
    json return_GBbqGFs=json({});
    return serialize_uint32_t(name.advancedBlendIndependentBlend);}();return return_TSPxuHN;}();
result["members"]["advancedBlendNonPremultipliedSrcColor"]=[&]() {
    json return_oskJnjL=json({});
    return_oskJnjL=[&]() {
    json return_BdmKcwU=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedSrcColor);}();return return_oskJnjL;}();
result["members"]["advancedBlendNonPremultipliedDstColor"]=[&]() {
    json return_GsUOrJm=json({});
    return_GsUOrJm=[&]() {
    json return_ODiTtMw=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedDstColor);}();return return_GsUOrJm;}();
result["members"]["advancedBlendCorrelatedOverlap"]=[&]() {
    json return_IwzCgRr=json({});
    return_IwzCgRr=[&]() {
    json return_ieoYpQm=json({});
    return serialize_uint32_t(name.advancedBlendCorrelatedOverlap);}();return return_IwzCgRr;}();
result["members"]["advancedBlendAllOperations"]=[&]() {
    json return_lGpbqQe=json({});
    return_lGpbqQe=[&]() {
    json return_JiVLZPz=json({});
    return serialize_uint32_t(name.advancedBlendAllOperations);}();return return_lGpbqQe;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.advancedBlendMaxColorAttachments=deserialize_uint32_t(name["members"]["advancedBlendMaxColorAttachments"]);}();
[&]() {
[&]() {
result.advancedBlendIndependentBlend=deserialize_uint32_t(name["members"]["advancedBlendIndependentBlend"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedSrcColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedSrcColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedDstColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedDstColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendCorrelatedOverlap=deserialize_uint32_t(name["members"]["advancedBlendCorrelatedOverlap"]);}();}();
[&]() {
[&]() {
result.advancedBlendAllOperations=deserialize_uint32_t(name["members"]["advancedBlendAllOperations"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkPipelineColorBlendAdvancedStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CydkDoY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IbtUIVt=json({});
    
        if (name.pNext==NULL){
            return_IbtUIVt["null"]=true;
            return return_IbtUIVt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_xsasCLH=json({});
    return_xsasCLH=[&]() {
    json return_hetAFiN=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_xsasCLH;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_CtKmnep=json({});
    return_CtKmnep=[&]() {
    json return_RrxMcEG=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_CtKmnep;}();
result["members"]["blendOverlap"]=[&]() {
    json return_zOPXMJV=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
return result;}

    VkPipelineColorBlendAdvancedStateCreateInfoEXT deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(json name){
        auto result=VkPipelineColorBlendAdvancedStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eVfcxih;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eVfcxih=NULL;
        }
    temp_eVfcxih=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eVfcxih;}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeatures(VkPhysicalDeviceInlineUniformBlockFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hbYTGbP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nYcwUfd=json({});
    
        if (name.pNext==NULL){
            return_nYcwUfd["null"]=true;
            return return_nYcwUfd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_cXPDsFo=json({});
    return_cXPDsFo=[&]() {
    json return_IIcgVnM=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_cXPDsFo;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_KhWxgvJ=json({});
    return_KhWxgvJ=[&]() {
    json return_ivVgkMF=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_KhWxgvJ;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeatures deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(VkPhysicalDeviceInlineUniformBlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KTJUBCc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cNeAyXl=json({});
    
        if (name.pNext==NULL){
            return_cNeAyXl["null"]=true;
            return return_cNeAyXl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_dsmmZvF=json({});
    return_dsmmZvF=[&]() {
    json return_SyfaCBT=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_dsmmZvF;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_iggVQPF=json({});
    return_iggVQPF=[&]() {
    json return_MYuYbPu=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_iggVQPF;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeaturesEXT deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockProperties(VkPhysicalDeviceInlineUniformBlockProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iCLmDYc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OkfiFYm=json({});
    
        if (name.pNext==NULL){
            return_OkfiFYm["null"]=true;
            return return_OkfiFYm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_AuiWLOv=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_exEzsjF=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_mflaksI=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_ZHnsISE=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_zFxgHKP=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockProperties deserialize_VkPhysicalDeviceInlineUniformBlockProperties(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(VkPhysicalDeviceInlineUniformBlockPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ieEmlCN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vQdTEaa=json({});
    
        if (name.pNext==NULL){
            return_vQdTEaa["null"]=true;
            return return_vQdTEaa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_xGeHGSG=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_TKaiLLB=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_ExZlyLC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_VJxfDQl=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_xXvbfwl=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockPropertiesEXT deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlock(VkWriteDescriptorSetInlineUniformBlock name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mhnEFEX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WECAhhL=json({});
    
        if (name.pNext==NULL){
            return_WECAhhL["null"]=true;
            return return_WECAhhL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_ACNJOSo=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_JTbMAgX=json({});
    
        if (name.pData==NULL){
            return_JTbMAgX["null"]=true;
            return return_JTbMAgX;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlock deserialize_VkWriteDescriptorSetInlineUniformBlock(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlock();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YgHvPpW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YgHvPpW=NULL;
        }
    temp_YgHvPpW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YgHvPpW;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_HsAYVjf;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_HsAYVjf=NULL;
        }
    temp_HsAYVjf=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_HsAYVjf;}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlockEXT(VkWriteDescriptorSetInlineUniformBlockEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uxiTRsD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_obhVLVv=json({});
    
        if (name.pNext==NULL){
            return_obhVLVv["null"]=true;
            return return_obhVLVv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_YvRfOar=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_aaQDLvD=json({});
    
        if (name.pData==NULL){
            return_aaQDLvD["null"]=true;
            return return_aaQDLvD;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlockEXT deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlockEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GlxVOGI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GlxVOGI=NULL;
        }
    temp_GlxVOGI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GlxVOGI;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_ksuhMds;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_ksuhMds=NULL;
        }
    temp_ksuhMds=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_ksuhMds;}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(VkDescriptorPoolInlineUniformBlockCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UMHeEFg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EHUVOQd=json({});
    
        if (name.pNext==NULL){
            return_EHUVOQd["null"]=true;
            return return_EHUVOQd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_lajhBzO=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfo deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JHSMuJe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JHSMuJe=NULL;
        }
    temp_JHSMuJe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JHSMuJe;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(VkDescriptorPoolInlineUniformBlockCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EAXJPyL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kbEorGO=json({});
    
        if (name.pNext==NULL){
            return_kbEorGO["null"]=true;
            return return_kbEorGO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_iHPTsNF=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfoEXT deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IUtJyyr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IUtJyyr=NULL;
        }
    temp_IUtJyyr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IUtJyyr;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkPipelineCoverageModulationStateCreateInfoNV(VkPipelineCoverageModulationStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QgnTbdH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nQdOdJW=json({});
    
        if (name.pNext==NULL){
            return_nQdOdJW["null"]=true;
            return return_nQdOdJW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NcRuqWQ=json({});
    return serialize_VkPipelineCoverageModulationStateCreateFlagsNV(name.flags);}();
result["members"]["coverageModulationMode"]=[&]() {
    json return_eOvKjYZ=json({});
    return serialize_VkCoverageModulationModeNV(name.coverageModulationMode);}();
result["members"]["coverageModulationTableEnable"]=[&]() {
    json return_VvRHnDY=json({});
    return_VvRHnDY=[&]() {
    json return_TkNYRQu=json({});
    return serialize_uint32_t(name.coverageModulationTableEnable);}();return return_VvRHnDY;}();
result["members"]["coverageModulationTableCount"]=[&]() {
    json return_ZIQjzmE=json({});
    return serialize_uint32_t(name.coverageModulationTableCount);}();
result["members"]["pCoverageModulationTable"]=[&]() {
    json return_yituqPM=json({});
    
        if (name.pCoverageModulationTable==NULL){
            return_yituqPM["null"]=true;
            return return_yituqPM;
        }
        
        return_yituqPM["members"]={};
        for(int i=0; i < name.coverageModulationTableCount; i++){
            json temp;
            temp=[&]() {
    json return_bHgwFLF=json({});
    return serialize_float(name.pCoverageModulationTable[i]);}();
            return_yituqPM["members"][std::to_string(i)].push_back(temp);
        }
        return return_yituqPM;
        }();
return result;}

    VkPipelineCoverageModulationStateCreateInfoNV deserialize_VkPipelineCoverageModulationStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageModulationStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RTsOMnQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RTsOMnQ=NULL;
        }
    temp_RTsOMnQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RTsOMnQ;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageModulationMode=deserialize_VkCoverageModulationModeNV(name["members"]["coverageModulationMode"]);}();
[&]() {
[&]() {
result.coverageModulationTableEnable=deserialize_uint32_t(name["members"]["coverageModulationTableEnable"]);}();}();
[&]() {
result.coverageModulationTableCount=deserialize_uint32_t(name["members"]["coverageModulationTableCount"]);}();
[&]() {
float* temp_uENcBiQ;[&]() {

        if (name["members"]["pCoverageModulationTable"].contains("null")){
        temp_uENcBiQ=NULL;
        }
    temp_uENcBiQ=(float*)malloc(result.coverageModulationTableCount*sizeof(float));
        for (int gHxiYOm=0; gHxiYOm < result.coverageModulationTableCount; gHxiYOm++){
            [&]() {
temp_uENcBiQ[gHxiYOm]=deserialize_float(name["members"]["pCoverageModulationTable"]["members"][gHxiYOm]);}();;
        }
        }();result.pCoverageModulationTable=temp_uENcBiQ;}();
return result;}

    json serialize_VkImageFormatListCreateInfo(VkImageFormatListCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bIIGhjy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IbyQpet=json({});
    
        if (name.pNext==NULL){
            return_IbyQpet["null"]=true;
            return return_IbyQpet;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_JwngPRq=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_XuASLKg=json({});
    
        if (name.pViewFormats==NULL){
            return_XuASLKg["null"]=true;
            return return_XuASLKg;
        }
        
        return_XuASLKg["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_oyQMqOb=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_XuASLKg["members"][std::to_string(i)].push_back(temp);
        }
        return return_XuASLKg;
        }();
return result;}

    VkImageFormatListCreateInfo deserialize_VkImageFormatListCreateInfo(json name){
        auto result=VkImageFormatListCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vhtPxWu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vhtPxWu=NULL;
        }
    temp_vhtPxWu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vhtPxWu;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_PUaKgGG;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_PUaKgGG=NULL;
        }
    temp_PUaKgGG=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int VVhOmYu=0; VVhOmYu < result.viewFormatCount; VVhOmYu++){
            [&]() {
temp_PUaKgGG[VVhOmYu]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][VVhOmYu]);}();;
        }
        }();result.pViewFormats=temp_PUaKgGG;}();
return result;}

    json serialize_VkImageFormatListCreateInfoKHR(VkImageFormatListCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hyMdAbC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzDFQVv=json({});
    
        if (name.pNext==NULL){
            return_EzDFQVv["null"]=true;
            return return_EzDFQVv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_ZovHpGo=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_NUjxcJq=json({});
    
        if (name.pViewFormats==NULL){
            return_NUjxcJq["null"]=true;
            return return_NUjxcJq;
        }
        
        return_NUjxcJq["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_hJZdirH=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_NUjxcJq["members"][std::to_string(i)].push_back(temp);
        }
        return return_NUjxcJq;
        }();
return result;}

    VkImageFormatListCreateInfoKHR deserialize_VkImageFormatListCreateInfoKHR(json name){
        auto result=VkImageFormatListCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FHwOVmC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FHwOVmC=NULL;
        }
    temp_FHwOVmC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FHwOVmC;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_vYxqkWa;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_vYxqkWa=NULL;
        }
    temp_vYxqkWa=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int YDrERwN=0; YDrERwN < result.viewFormatCount; YDrERwN++){
            [&]() {
temp_vYxqkWa[YDrERwN]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][YDrERwN]);}();;
        }
        }();result.pViewFormats=temp_vYxqkWa;}();
return result;}

    json serialize_VkValidationCacheCreateInfoEXT(VkValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IEliFEk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HBZWXSx=json({});
    
        if (name.pNext==NULL){
            return_HBZWXSx["null"]=true;
            return return_HBZWXSx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AxGLQvN=json({});
    return serialize_VkValidationCacheCreateFlagsEXT(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_GvbMzNw=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_xBceZzz=json({});
    
        if (name.pInitialData==NULL){
            return_xBceZzz["null"]=true;
            return return_xBceZzz;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkValidationCacheCreateInfoEXT deserialize_VkValidationCacheCreateInfoEXT(json name){
        auto result=VkValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qfhDHtJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qfhDHtJ=NULL;
        }
    temp_qfhDHtJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qfhDHtJ;}();
[&]() {
result.flags=deserialize_VkValidationCacheCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_QDkgARw;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_QDkgARw=NULL;
        }
    temp_QDkgARw=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_QDkgARw;}();
return result;}

    json serialize_VkShaderModuleValidationCacheCreateInfoEXT(VkShaderModuleValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FWQuzIu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OLQyIQF=json({});
    
        if (name.pNext==NULL){
            return_OLQyIQF["null"]=true;
            return return_OLQyIQF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["validationCache"]=[&]() {
    json return_EVaCuXr=json({});
    return serialize_VkValidationCacheEXT(name.validationCache);}();
return result;}

    VkShaderModuleValidationCacheCreateInfoEXT deserialize_VkShaderModuleValidationCacheCreateInfoEXT(json name){
        auto result=VkShaderModuleValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TMXjMTV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TMXjMTV=NULL;
        }
    temp_TMXjMTV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TMXjMTV;}();
[&]() {
result.validationCache=deserialize_VkValidationCacheEXT(name["members"]["validationCache"]);}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3Properties(VkPhysicalDeviceMaintenance3Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YhBWYEK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aSzjfau=json({});
    
        if (name.pNext==NULL){
            return_aSzjfau["null"]=true;
            return return_aSzjfau;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_hUoaKjV=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_AHVbqUh=json({});
    return_AHVbqUh=[&]() {
    json return_kdZANsD=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_AHVbqUh;}();
return result;}

    VkPhysicalDeviceMaintenance3Properties deserialize_VkPhysicalDeviceMaintenance3Properties(json name){
        auto result=VkPhysicalDeviceMaintenance3Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(VkPhysicalDeviceMaintenance3PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CZSzSzx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MmFWZwj=json({});
    
        if (name.pNext==NULL){
            return_MmFWZwj["null"]=true;
            return return_MmFWZwj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_RENXyFX=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_KMzwFUX=json({});
    return_KMzwFUX=[&]() {
    json return_mOppyJR=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_KMzwFUX;}();
return result;}

    VkPhysicalDeviceMaintenance3PropertiesKHR deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance3PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Features(VkPhysicalDeviceMaintenance4Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UlScSxa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_adHkAuH=json({});
    
        if (name.pNext==NULL){
            return_adHkAuH["null"]=true;
            return return_adHkAuH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_zZqFBmM=json({});
    return_zZqFBmM=[&]() {
    json return_JtJyqdu=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_zZqFBmM;}();
return result;}

    VkPhysicalDeviceMaintenance4Features deserialize_VkPhysicalDeviceMaintenance4Features(json name){
        auto result=VkPhysicalDeviceMaintenance4Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(VkPhysicalDeviceMaintenance4FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_znLmqSD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NbkVruM=json({});
    
        if (name.pNext==NULL){
            return_NbkVruM["null"]=true;
            return return_NbkVruM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_dxijdbW=json({});
    return_dxijdbW=[&]() {
    json return_UdvgAps=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_dxijdbW;}();
return result;}

    VkPhysicalDeviceMaintenance4FeaturesKHR deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Properties(VkPhysicalDeviceMaintenance4Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MSHnEom=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qCgZqBE=json({});
    
        if (name.pNext==NULL){
            return_qCgZqBE["null"]=true;
            return return_qCgZqBE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_HkeZLyo=json({});
    return_HkeZLyo=[&]() {
    json return_KPcISDj=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_HkeZLyo;}();
return result;}

    VkPhysicalDeviceMaintenance4Properties deserialize_VkPhysicalDeviceMaintenance4Properties(json name){
        auto result=VkPhysicalDeviceMaintenance4Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(VkPhysicalDeviceMaintenance4PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UVNMBzL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WKabGrB=json({});
    
        if (name.pNext==NULL){
            return_WKabGrB["null"]=true;
            return return_WKabGrB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_zxNSpAN=json({});
    return_zxNSpAN=[&]() {
    json return_AMrsvTr=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_zxNSpAN;}();
return result;}

    VkPhysicalDeviceMaintenance4PropertiesKHR deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(VkPhysicalDeviceMaintenance5FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hfCnlgz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HRJDWOT=json({});
    
        if (name.pNext==NULL){
            return_HRJDWOT["null"]=true;
            return return_HRJDWOT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance5"]=[&]() {
    json return_yHCYOdv=json({});
    return_yHCYOdv=[&]() {
    json return_cIFtgfT=json({});
    return serialize_uint32_t(name.maintenance5);}();return return_yHCYOdv;}();
return result;}

    VkPhysicalDeviceMaintenance5FeaturesKHR deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance5=deserialize_uint32_t(name["members"]["maintenance5"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(VkPhysicalDeviceMaintenance5PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nsAqjpb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RErlvKs=json({});
    
        if (name.pNext==NULL){
            return_RErlvKs["null"]=true;
            return return_RErlvKs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]=[&]() {
    json return_DbEXrhx=json({});
    return_DbEXrhx=[&]() {
    json return_WGeRYJV=json({});
    return serialize_uint32_t(name.earlyFragmentMultisampleCoverageAfterSampleCounting);}();return return_DbEXrhx;}();
result["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]=[&]() {
    json return_vtDBNdz=json({});
    return_vtDBNdz=[&]() {
    json return_sVdRvfX=json({});
    return serialize_uint32_t(name.earlyFragmentSampleMaskTestBeforeSampleCounting);}();return return_vtDBNdz;}();
result["members"]["depthStencilSwizzleOneSupport"]=[&]() {
    json return_ccgleDM=json({});
    return_ccgleDM=[&]() {
    json return_tWnxhgT=json({});
    return serialize_uint32_t(name.depthStencilSwizzleOneSupport);}();return return_ccgleDM;}();
result["members"]["polygonModePointSize"]=[&]() {
    json return_LCavJoD=json({});
    return_LCavJoD=[&]() {
    json return_yfLCqVT=json({});
    return serialize_uint32_t(name.polygonModePointSize);}();return return_LCavJoD;}();
result["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]=[&]() {
    json return_bmVcuBd=json({});
    return_bmVcuBd=[&]() {
    json return_fVhzVnP=json({});
    return serialize_uint32_t(name.nonStrictSinglePixelWideLinesUseParallelogram);}();return return_bmVcuBd;}();
result["members"]["nonStrictWideLinesUseParallelogram"]=[&]() {
    json return_HPSEwLq=json({});
    return_HPSEwLq=[&]() {
    json return_DdscjtA=json({});
    return serialize_uint32_t(name.nonStrictWideLinesUseParallelogram);}();return return_HPSEwLq;}();
return result;}

    VkPhysicalDeviceMaintenance5PropertiesKHR deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.earlyFragmentMultisampleCoverageAfterSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]);}();}();
[&]() {
[&]() {
result.earlyFragmentSampleMaskTestBeforeSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]);}();}();
[&]() {
[&]() {
result.depthStencilSwizzleOneSupport=deserialize_uint32_t(name["members"]["depthStencilSwizzleOneSupport"]);}();}();
[&]() {
[&]() {
result.polygonModePointSize=deserialize_uint32_t(name["members"]["polygonModePointSize"]);}();}();
[&]() {
[&]() {
result.nonStrictSinglePixelWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]);}();}();
[&]() {
[&]() {
result.nonStrictWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictWideLinesUseParallelogram"]);}();}();
return result;}

    json serialize_VkRenderingAreaInfoKHR(VkRenderingAreaInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YwJZEEh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YsvZfGX=json({});
    
        if (name.pNext==NULL){
            return_YsvZfGX["null"]=true;
            return return_YsvZfGX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_IxnBOnq=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_crTgYNA=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_AEnXUjN=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_AEnXUjN["null"]=true;
            return return_AEnXUjN;
        }
        
        return_AEnXUjN["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_lzMcYtS=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_AEnXUjN["members"][std::to_string(i)].push_back(temp);
        }
        return return_AEnXUjN;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_XYHRPcG=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_NvpJran=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkRenderingAreaInfoKHR deserialize_VkRenderingAreaInfoKHR(json name){
        auto result=VkRenderingAreaInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zPVzakE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zPVzakE=NULL;
        }
    temp_zPVzakE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zPVzakE;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_nfbvJAD;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_nfbvJAD=NULL;
        }
    temp_nfbvJAD=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int zcxeofr=0; zcxeofr < result.colorAttachmentCount; zcxeofr++){
            [&]() {
temp_nfbvJAD[zcxeofr]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][zcxeofr]);}();;
        }
        }();result.pColorAttachmentFormats=temp_nfbvJAD;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutSupport(VkDescriptorSetLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qdKukmy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KIAThDX=json({});
    
        if (name.pNext==NULL){
            return_KIAThDX["null"]=true;
            return return_KIAThDX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_wsofbyr=json({});
    return_wsofbyr=[&]() {
    json return_RMsFAAF=json({});
    return serialize_uint32_t(name.supported);}();return return_wsofbyr;}();
return result;}

    VkDescriptorSetLayoutSupport deserialize_VkDescriptorSetLayoutSupport(json name){
        auto result=VkDescriptorSetLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkDescriptorSetLayoutSupportKHR(VkDescriptorSetLayoutSupportKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JNlEcgI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yTPHIhB=json({});
    
        if (name.pNext==NULL){
            return_yTPHIhB["null"]=true;
            return return_yTPHIhB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_khspbhu=json({});
    return_khspbhu=[&]() {
    json return_lpXHcIP=json({});
    return serialize_uint32_t(name.supported);}();return return_khspbhu;}();
return result;}

    VkDescriptorSetLayoutSupportKHR deserialize_VkDescriptorSetLayoutSupportKHR(json name){
        auto result=VkDescriptorSetLayoutSupportKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParametersFeatures(VkPhysicalDeviceShaderDrawParametersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sXkEmne=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vjijAFL=json({});
    
        if (name.pNext==NULL){
            return_vjijAFL["null"]=true;
            return return_vjijAFL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_CqCWybF=json({});
    return_CqCWybF=[&]() {
    json return_vsdlMNV=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_CqCWybF;}();
return result;}

    VkPhysicalDeviceShaderDrawParametersFeatures deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParametersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParameterFeatures(VkPhysicalDeviceShaderDrawParameterFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lzQlTET=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HudgdZF=json({});
    
        if (name.pNext==NULL){
            return_HudgdZF["null"]=true;
            return return_HudgdZF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_SxiSQjm=json({});
    return_SxiSQjm=[&]() {
    json return_QYSsnQo=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_SxiSQjm;}();
return result;}

    VkPhysicalDeviceShaderDrawParameterFeatures deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParameterFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8Features(VkPhysicalDeviceShaderFloat16Int8Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KUVogIN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wfAfAqZ=json({});
    
        if (name.pNext==NULL){
            return_wfAfAqZ["null"]=true;
            return return_wfAfAqZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_fzbcSyP=json({});
    return_fzbcSyP=[&]() {
    json return_lbpdBgP=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_fzbcSyP;}();
result["members"]["shaderInt8"]=[&]() {
    json return_dAnOiSi=json({});
    return_dAnOiSi=[&]() {
    json return_SwDYuUp=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_dAnOiSi;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8Features deserialize_VkPhysicalDeviceShaderFloat16Int8Features(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CKrydTL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZLCbaFO=json({});
    
        if (name.pNext==NULL){
            return_ZLCbaFO["null"]=true;
            return return_ZLCbaFO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_wnEiDjr=json({});
    return_wnEiDjr=[&]() {
    json return_LhvhxJs=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_wnEiDjr;}();
result["members"]["shaderInt8"]=[&]() {
    json return_UwQpWOI=json({});
    return_UwQpWOI=[&]() {
    json return_fzJTPoU=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_UwQpWOI;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(VkPhysicalDeviceFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BVubJzk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JToHXnK=json({});
    
        if (name.pNext==NULL){
            return_JToHXnK["null"]=true;
            return return_JToHXnK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_arTReOW=json({});
    return_arTReOW=[&]() {
    json return_zgyPOCQ=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_arTReOW;}();
result["members"]["shaderInt8"]=[&]() {
    json return_SyZrTKb=json({});
    return_SyZrTKb=[&]() {
    json return_JftypSJ=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_SyZrTKb;}();
return result;}

    VkPhysicalDeviceFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsProperties(VkPhysicalDeviceFloatControlsProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NhvBUmZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMaxDYt=json({});
    
        if (name.pNext==NULL){
            return_PMaxDYt["null"]=true;
            return return_PMaxDYt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_tWYUYdN=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_OAVUQKR=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_dzstwjO=json({});
    return_dzstwjO=[&]() {
    json return_TsRUHGi=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_dzstwjO;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_MTlswte=json({});
    return_MTlswte=[&]() {
    json return_TasJfbM=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_MTlswte;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_orWfzPu=json({});
    return_orWfzPu=[&]() {
    json return_NYOlHpy=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_orWfzPu;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_jEQLpmX=json({});
    return_jEQLpmX=[&]() {
    json return_jOOEFuu=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_jEQLpmX;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_bXyPQUm=json({});
    return_bXyPQUm=[&]() {
    json return_hggFezh=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_bXyPQUm;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_fBONnkP=json({});
    return_fBONnkP=[&]() {
    json return_YvBzkdE=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_fBONnkP;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_DhNCcAZ=json({});
    return_DhNCcAZ=[&]() {
    json return_DRYeNhg=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_DhNCcAZ;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_WQZgtWt=json({});
    return_WQZgtWt=[&]() {
    json return_kPUHgnR=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_WQZgtWt;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_NKKsDfh=json({});
    return_NKKsDfh=[&]() {
    json return_inXxQcZ=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_NKKsDfh;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_RsUMpKG=json({});
    return_RsUMpKG=[&]() {
    json return_jZBhkwZ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_RsUMpKG;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_LlJStvt=json({});
    return_LlJStvt=[&]() {
    json return_nGWHjdx=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_LlJStvt;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_ZcGYHST=json({});
    return_ZcGYHST=[&]() {
    json return_IQKBuMN=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_ZcGYHST;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_BBOQCym=json({});
    return_BBOQCym=[&]() {
    json return_GIozJzt=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_BBOQCym;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_HncFqcC=json({});
    return_HncFqcC=[&]() {
    json return_uJZQMiw=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_HncFqcC;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_eUutkqE=json({});
    return_eUutkqE=[&]() {
    json return_ICPBxcS=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_eUutkqE;}();
return result;}

    VkPhysicalDeviceFloatControlsProperties deserialize_VkPhysicalDeviceFloatControlsProperties(json name){
        auto result=VkPhysicalDeviceFloatControlsProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(VkPhysicalDeviceFloatControlsPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yAnSAuV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_riTpWhJ=json({});
    
        if (name.pNext==NULL){
            return_riTpWhJ["null"]=true;
            return return_riTpWhJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_vWdiJRs=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_JpaylgT=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_YRhhVLA=json({});
    return_YRhhVLA=[&]() {
    json return_rbepgNZ=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_YRhhVLA;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_CLneVjN=json({});
    return_CLneVjN=[&]() {
    json return_FprXoLr=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_CLneVjN;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_oIFnQiM=json({});
    return_oIFnQiM=[&]() {
    json return_EjwUYPJ=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_oIFnQiM;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_qKuGeUs=json({});
    return_qKuGeUs=[&]() {
    json return_DtQoqtt=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_qKuGeUs;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_TWcdmat=json({});
    return_TWcdmat=[&]() {
    json return_FNzqiLO=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_TWcdmat;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_hKjcWzT=json({});
    return_hKjcWzT=[&]() {
    json return_tyaEtFH=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_hKjcWzT;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_fAjGHcz=json({});
    return_fAjGHcz=[&]() {
    json return_fqLlNHR=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_fAjGHcz;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_FEmsKWb=json({});
    return_FEmsKWb=[&]() {
    json return_hGyGzpy=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_FEmsKWb;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_tWueawq=json({});
    return_tWueawq=[&]() {
    json return_IIyWneS=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_tWueawq;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_PqgamtG=json({});
    return_PqgamtG=[&]() {
    json return_mRvXnCk=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_PqgamtG;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_SXcINYR=json({});
    return_SXcINYR=[&]() {
    json return_ddvyLkF=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_SXcINYR;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_MNRMVul=json({});
    return_MNRMVul=[&]() {
    json return_cqJSijq=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_MNRMVul;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_yLaugNR=json({});
    return_yLaugNR=[&]() {
    json return_oNoeKEx=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_yLaugNR;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_kBzJaxh=json({});
    return_kBzJaxh=[&]() {
    json return_bdUcitm=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_kBzJaxh;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_blVjOLw=json({});
    return_blVjOLw=[&]() {
    json return_zALLYIb=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_blVjOLw;}();
return result;}

    VkPhysicalDeviceFloatControlsPropertiesKHR deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFloatControlsPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeatures(VkPhysicalDeviceHostQueryResetFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yEUeemX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ksgBoqQ=json({});
    
        if (name.pNext==NULL){
            return_ksgBoqQ["null"]=true;
            return return_ksgBoqQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_qiCfxFN=json({});
    return_qiCfxFN=[&]() {
    json return_RIPJvdJ=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_qiCfxFN;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeatures deserialize_VkPhysicalDeviceHostQueryResetFeatures(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(VkPhysicalDeviceHostQueryResetFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lCBVrhF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WYvwpbZ=json({});
    
        if (name.pNext==NULL){
            return_WYvwpbZ["null"]=true;
            return return_WYvwpbZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_SFExCuW=json({});
    return_SFExCuW=[&]() {
    json return_pyvXJpq=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_SFExCuW;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeaturesEXT deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkShaderResourceUsageAMD(VkShaderResourceUsageAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["numUsedVgprs"]=[&]() {
    json return_SQLuNIC=json({});
    return serialize_uint32_t(name.numUsedVgprs);}();
result["members"]["numUsedSgprs"]=[&]() {
    json return_OYTTrGJ=json({});
    return serialize_uint32_t(name.numUsedSgprs);}();
result["members"]["ldsSizePerLocalWorkGroup"]=[&]() {
    json return_cxuWWBR=json({});
    return serialize_uint32_t(name.ldsSizePerLocalWorkGroup);}();
result["members"]["ldsUsageSizeInBytes"]=[&]() {
    json return_HpPRmSy=json({});
    return serialize_size_t(name.ldsUsageSizeInBytes);}();
result["members"]["scratchMemUsageInBytes"]=[&]() {
    json return_QfjdFEE=json({});
    return serialize_size_t(name.scratchMemUsageInBytes);}();
return result;}

    VkShaderResourceUsageAMD deserialize_VkShaderResourceUsageAMD(json name){
        auto result=VkShaderResourceUsageAMD();
    
[&]() {
result.numUsedVgprs=deserialize_uint32_t(name["members"]["numUsedVgprs"]);}();
[&]() {
result.numUsedSgprs=deserialize_uint32_t(name["members"]["numUsedSgprs"]);}();
[&]() {
result.ldsSizePerLocalWorkGroup=deserialize_uint32_t(name["members"]["ldsSizePerLocalWorkGroup"]);}();
[&]() {
result.ldsUsageSizeInBytes=deserialize_size_t(name["members"]["ldsUsageSizeInBytes"]);}();
[&]() {
result.scratchMemUsageInBytes=deserialize_size_t(name["members"]["scratchMemUsageInBytes"]);}();
return result;}

    json serialize_VkShaderStatisticsInfoAMD(VkShaderStatisticsInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shaderStageMask"]=[&]() {
    json return_MoZBsXy=json({});
    return serialize_VkShaderStageFlags(name.shaderStageMask);}();
result["members"]["resourceUsage"]=[&]() {
    json return_ZGFPYVs=json({});
    return serialize_VkShaderResourceUsageAMD(name.resourceUsage);}();
result["members"]["numPhysicalVgprs"]=[&]() {
    json return_PBerkXE=json({});
    return serialize_uint32_t(name.numPhysicalVgprs);}();
result["members"]["numPhysicalSgprs"]=[&]() {
    json return_lefMttO=json({});
    return serialize_uint32_t(name.numPhysicalSgprs);}();
result["members"]["numAvailableVgprs"]=[&]() {
    json return_xrpZpgb=json({});
    return serialize_uint32_t(name.numAvailableVgprs);}();
result["members"]["numAvailableSgprs"]=[&]() {
    json return_kTpIcku=json({});
    return serialize_uint32_t(name.numAvailableSgprs);}();
result["members"]["computeWorkGroupSize"]=[&]() {
    json return_oRknhue=json({});
    
        return_oRknhue["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_KLPubGC=json({});
    return serialize_uint32_t(name.computeWorkGroupSize[i]);}();
            return_oRknhue["members"][std::to_string(i)].push_back(temp);
        }
        return return_oRknhue;
        }();
return result;}

    VkShaderStatisticsInfoAMD deserialize_VkShaderStatisticsInfoAMD(json name){
        auto result=VkShaderStatisticsInfoAMD();
    
[&]() {
result.shaderStageMask=deserialize_VkShaderStageFlags(name["members"]["shaderStageMask"]);}();
[&]() {
result.resourceUsage=deserialize_VkShaderResourceUsageAMD(name["members"]["resourceUsage"]);}();
[&]() {
result.numPhysicalVgprs=deserialize_uint32_t(name["members"]["numPhysicalVgprs"]);}();
[&]() {
result.numPhysicalSgprs=deserialize_uint32_t(name["members"]["numPhysicalSgprs"]);}();
[&]() {
result.numAvailableVgprs=deserialize_uint32_t(name["members"]["numAvailableVgprs"]);}();
[&]() {
result.numAvailableSgprs=deserialize_uint32_t(name["members"]["numAvailableSgprs"]);}();
[&]() {

        for (int QtQjqPL=0; QtQjqPL < 3; QtQjqPL++){
            [&]() {
result.computeWorkGroupSize[QtQjqPL]=deserialize_uint32_t(name["members"]["computeWorkGroupSize"]["members"][QtQjqPL]);}();;
        }
        }();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(VkDeviceQueueGlobalPriorityCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pFKYgtu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mAjkblY=json({});
    
        if (name.pNext==NULL){
            return_mAjkblY["null"]=true;
            return return_mAjkblY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_mnJaKrT=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoKHR deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mxhjfmu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mxhjfmu=NULL;
        }
    temp_mxhjfmu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mxhjfmu;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(VkDeviceQueueGlobalPriorityCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zXhyXrt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qFjbtkx=json({});
    
        if (name.pNext==NULL){
            return_qFjbtkx["null"]=true;
            return return_qFjbtkx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_CrcQfEf=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoEXT deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eFxrlKE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eFxrlKE=NULL;
        }
    temp_eFxrlKE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eFxrlKE;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TRBLZvz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tKYTwxW=json({});
    
        if (name.pNext==NULL){
            return_tKYTwxW["null"]=true;
            return return_tKYTwxW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_tzsWWZU=json({});
    return_tzsWWZU=[&]() {
    json return_IERDpCv=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_tzsWWZU;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cWSChaL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LnaDkGu=json({});
    
        if (name.pNext==NULL){
            return_LnaDkGu["null"]=true;
            return return_LnaDkGu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_wNchHWY=json({});
    return_wNchHWY=[&]() {
    json return_oKOVfVV=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_wNchHWY;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(VkQueueFamilyGlobalPriorityPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_coSNUCe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uSwyQTI=json({});
    
        if (name.pNext==NULL){
            return_uSwyQTI["null"]=true;
            return return_uSwyQTI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_keXUJUv=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_BhhtwHY=json({});
    
        return_BhhtwHY["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_YQhbdCK=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_BhhtwHY["members"][std::to_string(i)].push_back(temp);
        }
        return return_BhhtwHY;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesKHR deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int eJxcPZL=0; eJxcPZL < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; eJxcPZL++){
            [&]() {
result.priorities[eJxcPZL]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][eJxcPZL]);}();;
        }
        }();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(VkQueueFamilyGlobalPriorityPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eQSKsBC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kHqbldk=json({});
    
        if (name.pNext==NULL){
            return_kHqbldk["null"]=true;
            return return_kHqbldk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_EALccby=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_quyxbYQ=json({});
    
        return_quyxbYQ["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_KnsfRKS=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_quyxbYQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_quyxbYQ;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesEXT deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int jGpgIbc=0; jGpgIbc < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; jGpgIbc++){
            [&]() {
result.priorities[jGpgIbc]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][jGpgIbc]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsObjectNameInfoEXT(VkDebugUtilsObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VfFohun=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ikONGbM=json({});
    
        if (name.pNext==NULL){
            return_ikONGbM["null"]=true;
            return return_ikONGbM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_stWcIpR=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_Mlsfsgb=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["pObjectName"]=[&]() {
    json return_oloienC=json({});
    
        if (name.pObjectName==NULL){
            return_oloienC["null"]=true;
            return return_oloienC;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugUtilsObjectNameInfoEXT deserialize_VkDebugUtilsObjectNameInfoEXT(json name){
        auto result=VkDebugUtilsObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WiEgBCl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WiEgBCl=NULL;
        }
    temp_WiEgBCl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WiEgBCl;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
char* temp_rlncWIJ;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_rlncWIJ=NULL;
        }
    temp_rlncWIJ=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_rlncWIJ;}();
return result;}

    json serialize_VkDebugUtilsObjectTagInfoEXT(VkDebugUtilsObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EOOUcjA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KWMluPf=json({});
    
        if (name.pNext==NULL){
            return_KWMluPf["null"]=true;
            return return_KWMluPf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_TKoeStM=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_UFeGvYC=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["tagName"]=[&]() {
    json return_lFWVkZB=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_hrFBhDX=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_dRTZWqd=json({});
    
        if (name.pTag==NULL){
            return_dRTZWqd["null"]=true;
            return return_dRTZWqd;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugUtilsObjectTagInfoEXT deserialize_VkDebugUtilsObjectTagInfoEXT(json name){
        auto result=VkDebugUtilsObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KSPMoJz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KSPMoJz=NULL;
        }
    temp_KSPMoJz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KSPMoJz;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_mVgMFke;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_mVgMFke=NULL;
        }
    temp_mVgMFke=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_mVgMFke;}();
return result;}

    json serialize_VkDebugUtilsLabelEXT(VkDebugUtilsLabelEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_khLvGzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eGvMFYu=json({});
    
        if (name.pNext==NULL){
            return_eGvMFYu["null"]=true;
            return return_eGvMFYu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pLabelName"]=[&]() {
    json return_TSvtcGu=json({});
    
        if (name.pLabelName==NULL){
            return_TSvtcGu["null"]=true;
            return return_TSvtcGu;
        }
        return serialize_char_p(name.pLabelName);
}();
result["members"]["color"]=[&]() {
    json return_wYeQVVv=json({});
    
        return_wYeQVVv["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_wroQxah=json({});
    return serialize_float(name.color[i]);}();
            return_wYeQVVv["members"][std::to_string(i)].push_back(temp);
        }
        return return_wYeQVVv;
        }();
return result;}

    VkDebugUtilsLabelEXT deserialize_VkDebugUtilsLabelEXT(json name){
        auto result=VkDebugUtilsLabelEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LBrhEar;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LBrhEar=NULL;
        }
    temp_LBrhEar=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LBrhEar;}();
[&]() {
char* temp_pIOOWco;[&]() {

        if (name["members"]["pLabelName"].contains("null")){
        temp_pIOOWco=NULL;
        }
    temp_pIOOWco=deserialize_char_p(name["members"]["pLabelName"]);
}();result.pLabelName=temp_pIOOWco;}();
[&]() {

        for (int UtJluoQ=0; UtJluoQ < 4; UtJluoQ++){
            [&]() {
result.color[UtJluoQ]=deserialize_float(name["members"]["color"]["members"][UtJluoQ]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsMessengerCreateInfoEXT(VkDebugUtilsMessengerCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pbKGbsI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qpsOYCh=json({});
    
        if (name.pNext==NULL){
            return_qpsOYCh["null"]=true;
            return return_qpsOYCh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lQyFNZQ=json({});
    return serialize_VkDebugUtilsMessengerCreateFlagsEXT(name.flags);}();
result["members"]["messageSeverity"]=[&]() {
    json return_ekZMBua=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagsEXT(name.messageSeverity);}();
result["members"]["messageType"]=[&]() {
    json return_GSJDTRb=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(name.messageType);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_BEtcnLV=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugUtilsMessengerCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_xxdAaTd=json({});
    
        if (name.pUserData==NULL){
            return_xxdAaTd["null"]=true;
            return return_xxdAaTd;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugUtilsMessengerCreateFlagsEXT_id;
uintptr_t VkDebugUtilsMessageSeverityFlagsEXT_id;
uintptr_t VkDebugUtilsMessageTypeFlagsEXT_id;
uintptr_t PFN_vkDebugUtilsMessengerCallbackEXT_id;
void* pUserData;
} VkDebugUtilsMessengerCreateInfoEXT_struct;

    VkDebugUtilsMessengerCreateInfoEXT deserialize_VkDebugUtilsMessengerCreateInfoEXT(json name){
        auto result=VkDebugUtilsMessengerCreateInfoEXT();
    
auto _struct = new VkDebugUtilsMessengerCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pLbKEXC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pLbKEXC=NULL;
        }
    temp_pLbKEXC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pLbKEXC;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagsEXT(name["members"]["messageSeverity"]);}();
[&]() {
result.messageType=deserialize_VkDebugUtilsMessageTypeFlagsEXT(name["members"]["messageType"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDebugUtilsMessengerCallbackDataEXT(VkDebugUtilsMessengerCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zXNvvcL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_anIzuLF=json({});
    
        if (name.pNext==NULL){
            return_anIzuLF["null"]=true;
            return return_anIzuLF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mlOUfkC=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name.flags);}();
result["members"]["pMessageIdName"]=[&]() {
    json return_wzPTmBc=json({});
    
        if (name.pMessageIdName==NULL){
            return_wzPTmBc["null"]=true;
            return return_wzPTmBc;
        }
        return serialize_char_p(name.pMessageIdName);
}();
result["members"]["messageIdNumber"]=[&]() {
    json return_pZoUZUI=json({});
    return serialize_int32_t(name.messageIdNumber);}();
result["members"]["pMessage"]=[&]() {
    json return_CfxzvLh=json({});
    
        if (name.pMessage==NULL){
            return_CfxzvLh["null"]=true;
            return return_CfxzvLh;
        }
        return serialize_char_p(name.pMessage);
}();
result["members"]["queueLabelCount"]=[&]() {
    json return_TLutcsP=json({});
    return serialize_uint32_t(name.queueLabelCount);}();
result["members"]["pQueueLabels"]=[&]() {
    json return_iLSRfFQ=json({});
    
        if (name.pQueueLabels==NULL){
            return_iLSRfFQ["null"]=true;
            return return_iLSRfFQ;
        }
        
        return_iLSRfFQ["members"]={};
        for(int i=0; i < name.queueLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_jYMOwHy=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pQueueLabels[i]);}();
            return_iLSRfFQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_iLSRfFQ;
        }();
result["members"]["cmdBufLabelCount"]=[&]() {
    json return_CmVhAjj=json({});
    return serialize_uint32_t(name.cmdBufLabelCount);}();
result["members"]["pCmdBufLabels"]=[&]() {
    json return_AXYsJoD=json({});
    
        if (name.pCmdBufLabels==NULL){
            return_AXYsJoD["null"]=true;
            return return_AXYsJoD;
        }
        
        return_AXYsJoD["members"]={};
        for(int i=0; i < name.cmdBufLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_DmRtoAB=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pCmdBufLabels[i]);}();
            return_AXYsJoD["members"][std::to_string(i)].push_back(temp);
        }
        return return_AXYsJoD;
        }();
result["members"]["objectCount"]=[&]() {
    json return_BxJcmgu=json({});
    return serialize_uint32_t(name.objectCount);}();
result["members"]["pObjects"]=[&]() {
    json return_sdfJTmg=json({});
    
        if (name.pObjects==NULL){
            return_sdfJTmg["null"]=true;
            return return_sdfJTmg;
        }
        
        return_sdfJTmg["members"]={};
        for(int i=0; i < name.objectCount; i++){
            json temp;
            temp=[&]() {
    json return_ZmbIrhp=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(name.pObjects[i]);}();
            return_sdfJTmg["members"][std::to_string(i)].push_back(temp);
        }
        return return_sdfJTmg;
        }();
return result;}

    VkDebugUtilsMessengerCallbackDataEXT deserialize_VkDebugUtilsMessengerCallbackDataEXT(json name){
        auto result=VkDebugUtilsMessengerCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cVxMwVi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cVxMwVi=NULL;
        }
    temp_cVxMwVi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cVxMwVi;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name["members"]["flags"]);}();
[&]() {
char* temp_whxxdEM;[&]() {

        if (name["members"]["pMessageIdName"].contains("null")){
        temp_whxxdEM=NULL;
        }
    temp_whxxdEM=deserialize_char_p(name["members"]["pMessageIdName"]);
}();result.pMessageIdName=temp_whxxdEM;}();
[&]() {
result.messageIdNumber=deserialize_int32_t(name["members"]["messageIdNumber"]);}();
[&]() {
char* temp_ufRUIVP;[&]() {

        if (name["members"]["pMessage"].contains("null")){
        temp_ufRUIVP=NULL;
        }
    temp_ufRUIVP=deserialize_char_p(name["members"]["pMessage"]);
}();result.pMessage=temp_ufRUIVP;}();
[&]() {
result.queueLabelCount=deserialize_uint32_t(name["members"]["queueLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_VlKMFkq;[&]() {

        if (name["members"]["pQueueLabels"].contains("null")){
        temp_VlKMFkq=NULL;
        }
    temp_VlKMFkq=(VkDebugUtilsLabelEXT*)malloc(result.queueLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int RMPVQxA=0; RMPVQxA < result.queueLabelCount; RMPVQxA++){
            [&]() {
temp_VlKMFkq[RMPVQxA]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pQueueLabels"]["members"][RMPVQxA]);}();;
        }
        }();result.pQueueLabels=temp_VlKMFkq;}();
[&]() {
result.cmdBufLabelCount=deserialize_uint32_t(name["members"]["cmdBufLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_EfbBxsI;[&]() {

        if (name["members"]["pCmdBufLabels"].contains("null")){
        temp_EfbBxsI=NULL;
        }
    temp_EfbBxsI=(VkDebugUtilsLabelEXT*)malloc(result.cmdBufLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int iWNmFiJ=0; iWNmFiJ < result.cmdBufLabelCount; iWNmFiJ++){
            [&]() {
temp_EfbBxsI[iWNmFiJ]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pCmdBufLabels"]["members"][iWNmFiJ]);}();;
        }
        }();result.pCmdBufLabels=temp_EfbBxsI;}();
[&]() {
result.objectCount=deserialize_uint32_t(name["members"]["objectCount"]);}();
[&]() {
VkDebugUtilsObjectNameInfoEXT* temp_ausOkPM;[&]() {

        if (name["members"]["pObjects"].contains("null")){
        temp_ausOkPM=NULL;
        }
    temp_ausOkPM=(VkDebugUtilsObjectNameInfoEXT*)malloc(result.objectCount*sizeof(VkDebugUtilsObjectNameInfoEXT));
        for (int PjcjAWC=0; PjcjAWC < result.objectCount; PjcjAWC++){
            [&]() {
temp_ausOkPM[PjcjAWC]=deserialize_VkDebugUtilsObjectNameInfoEXT(name["members"]["pObjects"]["members"][PjcjAWC]);}();;
        }
        }();result.pObjects=temp_ausOkPM;}();
return result;}

    json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RTNfdEZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LERaego=json({});
    
        if (name.pNext==NULL){
            return_LERaego["null"]=true;
            return return_LERaego;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMemoryReport"]=[&]() {
    json return_fwJnRfg=json({});
    return_fwJnRfg=[&]() {
    json return_lnGewpx=json({});
    return serialize_uint32_t(name.deviceMemoryReport);}();return return_fwJnRfg;}();
return result;}

    VkPhysicalDeviceDeviceMemoryReportFeaturesEXT deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDeviceMemoryReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceMemoryReport=deserialize_uint32_t(name["members"]["deviceMemoryReport"]);}();}();
return result;}

    json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(VkDeviceDeviceMemoryReportCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vQrqzrF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eCCHOIW=json({});
    
        if (name.pNext==NULL){
            return_eCCHOIW["null"]=true;
            return return_eCCHOIW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ayiiDXS=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_CfNBZau=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDeviceMemoryReportCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_KCTSZuO=json({});
    
        if (name.pUserData==NULL){
            return_KCTSZuO["null"]=true;
            return return_KCTSZuO;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDeviceMemoryReportFlagsEXT_id;
uintptr_t PFN_vkDeviceMemoryReportCallbackEXT_id;
void* pUserData;
} VkDeviceDeviceMemoryReportCreateInfoEXT_struct;

    VkDeviceDeviceMemoryReportCreateInfoEXT deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(json name){
        auto result=VkDeviceDeviceMemoryReportCreateInfoEXT();
    
auto _struct = new VkDeviceDeviceMemoryReportCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SMorFAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SMorFAl=NULL;
        }
    temp_SMorFAl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SMorFAl;}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDeviceMemoryReportCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDeviceMemoryReportCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceMemoryReportCallbackDataEXT(VkDeviceMemoryReportCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IzdoNFT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JropKxI=json({});
    
        if (name.pNext==NULL){
            return_JropKxI["null"]=true;
            return return_JropKxI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_SkcBkVm=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["type"]=[&]() {
    json return_CEXNfNq=json({});
    return serialize_VkDeviceMemoryReportEventTypeEXT(name.type);}();
result["members"]["memoryObjectId"]=[&]() {
    json return_yHGrMYG=json({});
    return serialize_uint64_t(name.memoryObjectId);}();
result["members"]["size"]=[&]() {
    json return_siQcsRQ=json({});
    return_siQcsRQ=[&]() {
    json return_sygqazd=json({});
    return serialize_uint64_t(name.size);}();return return_siQcsRQ;}();
result["members"]["objectType"]=[&]() {
    json return_qkFYkJc=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_zeArvqF=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["heapIndex"]=[&]() {
    json return_UurfbzZ=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkDeviceMemoryReportCallbackDataEXT deserialize_VkDeviceMemoryReportCallbackDataEXT(json name){
        auto result=VkDeviceMemoryReportCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.type=deserialize_VkDeviceMemoryReportEventTypeEXT(name["members"]["type"]);}();
[&]() {
result.memoryObjectId=deserialize_uint64_t(name["members"]["memoryObjectId"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkImportMemoryHostPointerInfoEXT(VkImportMemoryHostPointerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nKIXFhR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rLfMhWG=json({});
    
        if (name.pNext==NULL){
            return_rLfMhWG["null"]=true;
            return return_rLfMhWG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_TqluOsb=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["pHostPointer"]=[&]() {
    json return_tWIkXUJ=json({});
    
        if (name.pHostPointer==NULL){
            return_tWIkXUJ["null"]=true;
            return return_tWIkXUJ;
        }
        return serialize_void_p(name.pHostPointer);
}();
return result;}

    VkImportMemoryHostPointerInfoEXT deserialize_VkImportMemoryHostPointerInfoEXT(json name){
        auto result=VkImportMemoryHostPointerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aZSGBhs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aZSGBhs=NULL;
        }
    temp_aZSGBhs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aZSGBhs;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
return result;}

    json serialize_VkMemoryHostPointerPropertiesEXT(VkMemoryHostPointerPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RMxNJYL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nUHrfaq=json({});
    
        if (name.pNext==NULL){
            return_nUHrfaq["null"]=true;
            return return_nUHrfaq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_AwtGWVg=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryHostPointerPropertiesEXT deserialize_VkMemoryHostPointerPropertiesEXT(json name){
        auto result=VkMemoryHostPointerPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkPhysicalDeviceExternalMemoryHostPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wHjRpZS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RIXNFfS=json({});
    
        if (name.pNext==NULL){
            return_RIXNFfS["null"]=true;
            return return_RIXNFfS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImportedHostPointerAlignment"]=[&]() {
    json return_QdvyhBq=json({});
    return_QdvyhBq=[&]() {
    json return_uQLLLcv=json({});
    return serialize_uint64_t(name.minImportedHostPointerAlignment);}();return return_QdvyhBq;}();
return result;}

    VkPhysicalDeviceExternalMemoryHostPropertiesEXT deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(json name){
        auto result=VkPhysicalDeviceExternalMemoryHostPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minImportedHostPointerAlignment=deserialize_uint64_t(name["members"]["minImportedHostPointerAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkPhysicalDeviceConservativeRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Trjsclg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BLtOgzx=json({});
    
        if (name.pNext==NULL){
            return_BLtOgzx["null"]=true;
            return return_BLtOgzx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveOverestimationSize"]=[&]() {
    json return_rxVvYRZ=json({});
    return serialize_float(name.primitiveOverestimationSize);}();
result["members"]["maxExtraPrimitiveOverestimationSize"]=[&]() {
    json return_zvFjbht=json({});
    return serialize_float(name.maxExtraPrimitiveOverestimationSize);}();
result["members"]["extraPrimitiveOverestimationSizeGranularity"]=[&]() {
    json return_BUsGTFD=json({});
    return serialize_float(name.extraPrimitiveOverestimationSizeGranularity);}();
result["members"]["primitiveUnderestimation"]=[&]() {
    json return_VrnuYYd=json({});
    return_VrnuYYd=[&]() {
    json return_OBgapKh=json({});
    return serialize_uint32_t(name.primitiveUnderestimation);}();return return_VrnuYYd;}();
result["members"]["conservativePointAndLineRasterization"]=[&]() {
    json return_oPrdMuG=json({});
    return_oPrdMuG=[&]() {
    json return_AqHIQyO=json({});
    return serialize_uint32_t(name.conservativePointAndLineRasterization);}();return return_oPrdMuG;}();
result["members"]["degenerateTrianglesRasterized"]=[&]() {
    json return_jYGkQjP=json({});
    return_jYGkQjP=[&]() {
    json return_sMdAoYU=json({});
    return serialize_uint32_t(name.degenerateTrianglesRasterized);}();return return_jYGkQjP;}();
result["members"]["degenerateLinesRasterized"]=[&]() {
    json return_ylLTfDx=json({});
    return_ylLTfDx=[&]() {
    json return_ZpVUraB=json({});
    return serialize_uint32_t(name.degenerateLinesRasterized);}();return return_ylLTfDx;}();
result["members"]["fullyCoveredFragmentShaderInputVariable"]=[&]() {
    json return_zruAbCm=json({});
    return_zruAbCm=[&]() {
    json return_CKndddZ=json({});
    return serialize_uint32_t(name.fullyCoveredFragmentShaderInputVariable);}();return return_zruAbCm;}();
result["members"]["conservativeRasterizationPostDepthCoverage"]=[&]() {
    json return_SVcAMgw=json({});
    return_SVcAMgw=[&]() {
    json return_kQCOqPe=json({});
    return serialize_uint32_t(name.conservativeRasterizationPostDepthCoverage);}();return return_SVcAMgw;}();
return result;}

    VkPhysicalDeviceConservativeRasterizationPropertiesEXT deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.primitiveOverestimationSize=deserialize_float(name["members"]["primitiveOverestimationSize"]);}();
[&]() {
result.maxExtraPrimitiveOverestimationSize=deserialize_float(name["members"]["maxExtraPrimitiveOverestimationSize"]);}();
[&]() {
result.extraPrimitiveOverestimationSizeGranularity=deserialize_float(name["members"]["extraPrimitiveOverestimationSizeGranularity"]);}();
[&]() {
[&]() {
result.primitiveUnderestimation=deserialize_uint32_t(name["members"]["primitiveUnderestimation"]);}();}();
[&]() {
[&]() {
result.conservativePointAndLineRasterization=deserialize_uint32_t(name["members"]["conservativePointAndLineRasterization"]);}();}();
[&]() {
[&]() {
result.degenerateTrianglesRasterized=deserialize_uint32_t(name["members"]["degenerateTrianglesRasterized"]);}();}();
[&]() {
[&]() {
result.degenerateLinesRasterized=deserialize_uint32_t(name["members"]["degenerateLinesRasterized"]);}();}();
[&]() {
[&]() {
result.fullyCoveredFragmentShaderInputVariable=deserialize_uint32_t(name["members"]["fullyCoveredFragmentShaderInputVariable"]);}();}();
[&]() {
[&]() {
result.conservativeRasterizationPostDepthCoverage=deserialize_uint32_t(name["members"]["conservativeRasterizationPostDepthCoverage"]);}();}();
return result;}

    json serialize_VkCalibratedTimestampInfoEXT(VkCalibratedTimestampInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ArEdekL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XipQzny=json({});
    
        if (name.pNext==NULL){
            return_XipQzny["null"]=true;
            return return_XipQzny;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timeDomain"]=[&]() {
    json return_qBBfMbA=json({});
    return serialize_VkTimeDomainEXT(name.timeDomain);}();
return result;}

    VkCalibratedTimestampInfoEXT deserialize_VkCalibratedTimestampInfoEXT(json name){
        auto result=VkCalibratedTimestampInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WpiHkLD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WpiHkLD=NULL;
        }
    temp_WpiHkLD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WpiHkLD;}();
[&]() {
result.timeDomain=deserialize_VkTimeDomainEXT(name["members"]["timeDomain"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesAMD(VkPhysicalDeviceShaderCorePropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ndzthVu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HUJUKQN=json({});
    
        if (name.pNext==NULL){
            return_HUJUKQN["null"]=true;
            return return_HUJUKQN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEngineCount"]=[&]() {
    json return_bjLBlUZ=json({});
    return serialize_uint32_t(name.shaderEngineCount);}();
result["members"]["shaderArraysPerEngineCount"]=[&]() {
    json return_frXOqfT=json({});
    return serialize_uint32_t(name.shaderArraysPerEngineCount);}();
result["members"]["computeUnitsPerShaderArray"]=[&]() {
    json return_VaGUeLQ=json({});
    return serialize_uint32_t(name.computeUnitsPerShaderArray);}();
result["members"]["simdPerComputeUnit"]=[&]() {
    json return_MSURzrG=json({});
    return serialize_uint32_t(name.simdPerComputeUnit);}();
result["members"]["wavefrontsPerSimd"]=[&]() {
    json return_fvosxbp=json({});
    return serialize_uint32_t(name.wavefrontsPerSimd);}();
result["members"]["wavefrontSize"]=[&]() {
    json return_muPskQx=json({});
    return serialize_uint32_t(name.wavefrontSize);}();
result["members"]["sgprsPerSimd"]=[&]() {
    json return_doqQUnO=json({});
    return serialize_uint32_t(name.sgprsPerSimd);}();
result["members"]["minSgprAllocation"]=[&]() {
    json return_PxahTXW=json({});
    return serialize_uint32_t(name.minSgprAllocation);}();
result["members"]["maxSgprAllocation"]=[&]() {
    json return_FLvGIqo=json({});
    return serialize_uint32_t(name.maxSgprAllocation);}();
result["members"]["sgprAllocationGranularity"]=[&]() {
    json return_DsgKCAL=json({});
    return serialize_uint32_t(name.sgprAllocationGranularity);}();
result["members"]["vgprsPerSimd"]=[&]() {
    json return_xARnixL=json({});
    return serialize_uint32_t(name.vgprsPerSimd);}();
result["members"]["minVgprAllocation"]=[&]() {
    json return_FpQUtGR=json({});
    return serialize_uint32_t(name.minVgprAllocation);}();
result["members"]["maxVgprAllocation"]=[&]() {
    json return_KhBLFdP=json({});
    return serialize_uint32_t(name.maxVgprAllocation);}();
result["members"]["vgprAllocationGranularity"]=[&]() {
    json return_sEwEtAm=json({});
    return serialize_uint32_t(name.vgprAllocationGranularity);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesAMD deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderEngineCount=deserialize_uint32_t(name["members"]["shaderEngineCount"]);}();
[&]() {
result.shaderArraysPerEngineCount=deserialize_uint32_t(name["members"]["shaderArraysPerEngineCount"]);}();
[&]() {
result.computeUnitsPerShaderArray=deserialize_uint32_t(name["members"]["computeUnitsPerShaderArray"]);}();
[&]() {
result.simdPerComputeUnit=deserialize_uint32_t(name["members"]["simdPerComputeUnit"]);}();
[&]() {
result.wavefrontsPerSimd=deserialize_uint32_t(name["members"]["wavefrontsPerSimd"]);}();
[&]() {
result.wavefrontSize=deserialize_uint32_t(name["members"]["wavefrontSize"]);}();
[&]() {
result.sgprsPerSimd=deserialize_uint32_t(name["members"]["sgprsPerSimd"]);}();
[&]() {
result.minSgprAllocation=deserialize_uint32_t(name["members"]["minSgprAllocation"]);}();
[&]() {
result.maxSgprAllocation=deserialize_uint32_t(name["members"]["maxSgprAllocation"]);}();
[&]() {
result.sgprAllocationGranularity=deserialize_uint32_t(name["members"]["sgprAllocationGranularity"]);}();
[&]() {
result.vgprsPerSimd=deserialize_uint32_t(name["members"]["vgprsPerSimd"]);}();
[&]() {
result.minVgprAllocation=deserialize_uint32_t(name["members"]["minVgprAllocation"]);}();
[&]() {
result.maxVgprAllocation=deserialize_uint32_t(name["members"]["maxVgprAllocation"]);}();
[&]() {
result.vgprAllocationGranularity=deserialize_uint32_t(name["members"]["vgprAllocationGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreProperties2AMD(VkPhysicalDeviceShaderCoreProperties2AMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qXnAdZZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fDSKGkc=json({});
    
        if (name.pNext==NULL){
            return_fDSKGkc["null"]=true;
            return return_fDSKGkc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreFeatures"]=[&]() {
    json return_Rnqoxtc=json({});
    return serialize_VkShaderCorePropertiesFlagsAMD(name.shaderCoreFeatures);}();
result["members"]["activeComputeUnitCount"]=[&]() {
    json return_nCPfcct=json({});
    return serialize_uint32_t(name.activeComputeUnitCount);}();
return result;}

    VkPhysicalDeviceShaderCoreProperties2AMD deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(json name){
        auto result=VkPhysicalDeviceShaderCoreProperties2AMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreFeatures=deserialize_VkShaderCorePropertiesFlagsAMD(name["members"]["shaderCoreFeatures"]);}();
[&]() {
result.activeComputeUnitCount=deserialize_uint32_t(name["members"]["activeComputeUnitCount"]);}();
return result;}

    json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(VkPipelineRasterizationConservativeStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZGoVUmO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qPjIZuD=json({});
    
        if (name.pNext==NULL){
            return_qPjIZuD["null"]=true;
            return return_qPjIZuD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YLIShfx=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name.flags);}();
result["members"]["conservativeRasterizationMode"]=[&]() {
    json return_nmJBPtz=json({});
    return serialize_VkConservativeRasterizationModeEXT(name.conservativeRasterizationMode);}();
result["members"]["extraPrimitiveOverestimationSize"]=[&]() {
    json return_YUUTaSx=json({});
    return serialize_float(name.extraPrimitiveOverestimationSize);}();
return result;}

    VkPipelineRasterizationConservativeStateCreateInfoEXT deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationConservativeStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UAjHjDX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UAjHjDX=NULL;
        }
    temp_UAjHjDX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UAjHjDX;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.conservativeRasterizationMode=deserialize_VkConservativeRasterizationModeEXT(name["members"]["conservativeRasterizationMode"]);}();
[&]() {
result.extraPrimitiveOverestimationSize=deserialize_float(name["members"]["extraPrimitiveOverestimationSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeatures(VkPhysicalDeviceDescriptorIndexingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AMtljgr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KvsdZbw=json({});
    
        if (name.pNext==NULL){
            return_KvsdZbw["null"]=true;
            return return_KvsdZbw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_xUUdXdC=json({});
    return_xUUdXdC=[&]() {
    json return_dwnIUrg=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_xUUdXdC;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_WhiahTh=json({});
    return_WhiahTh=[&]() {
    json return_siXqyzM=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_WhiahTh;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_JULilhq=json({});
    return_JULilhq=[&]() {
    json return_tPlNisF=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_JULilhq;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_JzipDUp=json({});
    return_JzipDUp=[&]() {
    json return_DsUmSsJ=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_JzipDUp;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_YmotLUq=json({});
    return_YmotLUq=[&]() {
    json return_uFMNMkr=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_YmotLUq;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_eFhdqSD=json({});
    return_eFhdqSD=[&]() {
    json return_eOazXCY=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_eFhdqSD;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_PTJDDbv=json({});
    return_PTJDDbv=[&]() {
    json return_FPygZjQ=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_PTJDDbv;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_ubmflzy=json({});
    return_ubmflzy=[&]() {
    json return_JrdSqlF=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_ubmflzy;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_gJRnQKW=json({});
    return_gJRnQKW=[&]() {
    json return_yUkPFix=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_gJRnQKW;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_GCaRzRo=json({});
    return_GCaRzRo=[&]() {
    json return_wXawMhv=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_GCaRzRo;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_FqdbsAR=json({});
    return_FqdbsAR=[&]() {
    json return_oFOLpri=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_FqdbsAR;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_BXUwNtd=json({});
    return_BXUwNtd=[&]() {
    json return_HJUjXvL=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_BXUwNtd;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_hcaRVSE=json({});
    return_hcaRVSE=[&]() {
    json return_PtVpDgC=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_hcaRVSE;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_mmrNgJZ=json({});
    return_mmrNgJZ=[&]() {
    json return_HPDHHjh=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_mmrNgJZ;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_nRVuqtz=json({});
    return_nRVuqtz=[&]() {
    json return_JByYKkZ=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_nRVuqtz;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_ALDCsjU=json({});
    return_ALDCsjU=[&]() {
    json return_kWBNrxt=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_ALDCsjU;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_shqzGtN=json({});
    return_shqzGtN=[&]() {
    json return_wSCbPje=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_shqzGtN;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_jYHYWDu=json({});
    return_jYHYWDu=[&]() {
    json return_FGKmUUs=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_jYHYWDu;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_MRLVoxo=json({});
    return_MRLVoxo=[&]() {
    json return_bxdVaiI=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_MRLVoxo;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_fAEHpqm=json({});
    return_fAEHpqm=[&]() {
    json return_lgRyCpN=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_fAEHpqm;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeatures deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(VkPhysicalDeviceDescriptorIndexingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UEZPoKg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pajxygt=json({});
    
        if (name.pNext==NULL){
            return_pajxygt["null"]=true;
            return return_pajxygt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_eCCuhmu=json({});
    return_eCCuhmu=[&]() {
    json return_qEXQxFE=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_eCCuhmu;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_bemvdAN=json({});
    return_bemvdAN=[&]() {
    json return_aLkCSTQ=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_bemvdAN;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_bilPDQo=json({});
    return_bilPDQo=[&]() {
    json return_tddSFth=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_bilPDQo;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_qKoAsxS=json({});
    return_qKoAsxS=[&]() {
    json return_suOoTvv=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_qKoAsxS;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_Fmiuwxp=json({});
    return_Fmiuwxp=[&]() {
    json return_kJaCZGh=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_Fmiuwxp;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_utQKTzO=json({});
    return_utQKTzO=[&]() {
    json return_mjKgTUr=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_utQKTzO;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_aDgentj=json({});
    return_aDgentj=[&]() {
    json return_FOCyFAN=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_aDgentj;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_kBnsiXt=json({});
    return_kBnsiXt=[&]() {
    json return_nmxGRYM=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_kBnsiXt;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_tlfexJs=json({});
    return_tlfexJs=[&]() {
    json return_QKzinUn=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_tlfexJs;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_FPqWEyP=json({});
    return_FPqWEyP=[&]() {
    json return_vynilGC=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_FPqWEyP;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_Vclytnf=json({});
    return_Vclytnf=[&]() {
    json return_MIyvhZU=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_Vclytnf;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_kjRpWkv=json({});
    return_kjRpWkv=[&]() {
    json return_JDDunxm=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_kjRpWkv;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_sPZhYHK=json({});
    return_sPZhYHK=[&]() {
    json return_tPswMTX=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_sPZhYHK;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_oFnBcRU=json({});
    return_oFnBcRU=[&]() {
    json return_TIkYkxg=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_oFnBcRU;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_RszLWZb=json({});
    return_RszLWZb=[&]() {
    json return_nlRoxHT=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_RszLWZb;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_VMColGW=json({});
    return_VMColGW=[&]() {
    json return_ztNTcOO=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_VMColGW;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_DddxeQP=json({});
    return_DddxeQP=[&]() {
    json return_EFyoqSN=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_DddxeQP;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_fLKvvLN=json({});
    return_fLKvvLN=[&]() {
    json return_hWSGlwG=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_fLKvvLN;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_xQTKlSV=json({});
    return_xQTKlSV=[&]() {
    json return_zfeILoy=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_xQTKlSV;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_areAzdP=json({});
    return_areAzdP=[&]() {
    json return_EAaMbca=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_areAzdP;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeaturesEXT deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingProperties(VkPhysicalDeviceDescriptorIndexingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oPpuNnp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OjFgWKa=json({});
    
        if (name.pNext==NULL){
            return_OjFgWKa["null"]=true;
            return return_OjFgWKa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_WYjWNvu=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_AbRtOKM=json({});
    return_AbRtOKM=[&]() {
    json return_JUODDJD=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_AbRtOKM;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_hDRHVCA=json({});
    return_hDRHVCA=[&]() {
    json return_fUQkYea=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_hDRHVCA;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_xagdVUh=json({});
    return_xagdVUh=[&]() {
    json return_ieCxJtr=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_xagdVUh;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_PBXfhop=json({});
    return_PBXfhop=[&]() {
    json return_PwTkQzN=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_PBXfhop;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_MVwhyaX=json({});
    return_MVwhyaX=[&]() {
    json return_xIjInoY=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_MVwhyaX;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_SMHrkCq=json({});
    return_SMHrkCq=[&]() {
    json return_FVBBLWr=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_SMHrkCq;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_XDugtAK=json({});
    return_XDugtAK=[&]() {
    json return_aEYeXWZ=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_XDugtAK;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_mBtlFPx=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_jGiQQgj=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_OsHmNGM=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_CQWjBAN=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_UcAyFQz=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_fZPNUfJ=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_ehVJILK=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_xoVHEoM=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_oxlhOpd=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_GWEWJKf=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_YWkijYx=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_ZByxuqi=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_EeDcwNS=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_OJQtvrc=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_JZpiCLu=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingProperties deserialize_VkPhysicalDeviceDescriptorIndexingProperties(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(VkPhysicalDeviceDescriptorIndexingPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VdFjfWF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RMIQboW=json({});
    
        if (name.pNext==NULL){
            return_RMIQboW["null"]=true;
            return return_RMIQboW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_vgfnvLh=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_QRgxEpV=json({});
    return_QRgxEpV=[&]() {
    json return_ZpRtWSM=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_QRgxEpV;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_SGTGWKn=json({});
    return_SGTGWKn=[&]() {
    json return_OOoeZPn=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_SGTGWKn;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_uZLYhZK=json({});
    return_uZLYhZK=[&]() {
    json return_LnqlekM=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_uZLYhZK;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_CncUvYE=json({});
    return_CncUvYE=[&]() {
    json return_ZVTIwIB=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_CncUvYE;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_mJDkbHY=json({});
    return_mJDkbHY=[&]() {
    json return_dGkAkmo=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_mJDkbHY;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_AwhiPON=json({});
    return_AwhiPON=[&]() {
    json return_fxkkTYc=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_AwhiPON;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_CnjDUIk=json({});
    return_CnjDUIk=[&]() {
    json return_lkeQwXq=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_CnjDUIk;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_mcbmZTq=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_VhbLoPw=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_VlCbVzM=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_fRgMqTB=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_robsqjO=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_FBmcKfy=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_xOiNpJi=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_HcRCGKN=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_EaMWNMT=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_KIBXaql=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_ZpmMhSV=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_mulJeSW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_fqNECzl=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_DlZFEpl=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_kpHDDch=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingPropertiesEXT deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(VkDescriptorSetLayoutBindingFlagsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pMbMabw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PkiWaov=json({});
    
        if (name.pNext==NULL){
            return_PkiWaov["null"]=true;
            return return_PkiWaov;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_dhYWneG=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_XiGbNtE=json({});
    
        if (name.pBindingFlags==NULL){
            return_XiGbNtE["null"]=true;
            return return_XiGbNtE;
        }
        
        return_XiGbNtE["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_pnbvrFm=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_XiGbNtE["members"][std::to_string(i)].push_back(temp);
        }
        return return_XiGbNtE;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfo deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TIVcWKq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TIVcWKq=NULL;
        }
    temp_TIVcWKq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TIVcWKq;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_BkzuTuq;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_BkzuTuq=NULL;
        }
    temp_BkzuTuq=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int VsemjGO=0; VsemjGO < result.bindingCount; VsemjGO++){
            [&]() {
temp_BkzuTuq[VsemjGO]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][VsemjGO]);}();;
        }
        }();result.pBindingFlags=temp_BkzuTuq;}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nIALViV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YJmmJep=json({});
    
        if (name.pNext==NULL){
            return_YJmmJep["null"]=true;
            return return_YJmmJep;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_INOgAtr=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_YtoIqjn=json({});
    
        if (name.pBindingFlags==NULL){
            return_YtoIqjn["null"]=true;
            return return_YtoIqjn;
        }
        
        return_YtoIqjn["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_MQXrefs=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_YtoIqjn["members"][std::to_string(i)].push_back(temp);
        }
        return return_YtoIqjn;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfoEXT deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FuWPanX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FuWPanX=NULL;
        }
    temp_FuWPanX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FuWPanX;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_DibxhMO;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_DibxhMO=NULL;
        }
    temp_DibxhMO=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int amLWHTU=0; amLWHTU < result.bindingCount; amLWHTU++){
            [&]() {
temp_DibxhMO[amLWHTU]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][amLWHTU]);}();;
        }
        }();result.pBindingFlags=temp_DibxhMO;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(VkDescriptorSetVariableDescriptorCountAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zdLwSbQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ycEGqqF=json({});
    
        if (name.pNext==NULL){
            return_ycEGqqF["null"]=true;
            return return_ycEGqqF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_XNoLFce=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_TlZKiQe=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_TlZKiQe["null"]=true;
            return return_TlZKiQe;
        }
        
        return_TlZKiQe["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_kqwWLAr=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_TlZKiQe["members"][std::to_string(i)].push_back(temp);
        }
        return return_TlZKiQe;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfo deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xQxeGoC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xQxeGoC=NULL;
        }
    temp_xQxeGoC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xQxeGoC;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_nMTOHKe;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_nMTOHKe=NULL;
        }
    temp_nMTOHKe=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int jgzpNsW=0; jgzpNsW < result.descriptorSetCount; jgzpNsW++){
            [&]() {
temp_nMTOHKe[jgzpNsW]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][jgzpNsW]);}();;
        }
        }();result.pDescriptorCounts=temp_nMTOHKe;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GEizjFQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oHftcAO=json({});
    
        if (name.pNext==NULL){
            return_oHftcAO["null"]=true;
            return return_oHftcAO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_FDojIwl=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_acxwDSH=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_acxwDSH["null"]=true;
            return return_acxwDSH;
        }
        
        return_acxwDSH["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_QGWnFwl=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_acxwDSH["members"][std::to_string(i)].push_back(temp);
        }
        return return_acxwDSH;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfoEXT deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mINeGZt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mINeGZt=NULL;
        }
    temp_mINeGZt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mINeGZt;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_PCJszQI;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_PCJszQI=NULL;
        }
    temp_PCJszQI=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int OCSsmPx=0; OCSsmPx < result.descriptorSetCount; OCSsmPx++){
            [&]() {
temp_PCJszQI[OCSsmPx]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][OCSsmPx]);}();;
        }
        }();result.pDescriptorCounts=temp_PCJszQI;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(VkDescriptorSetVariableDescriptorCountLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_guXOdNJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lNzVoNL=json({});
    
        if (name.pNext==NULL){
            return_lNzVoNL["null"]=true;
            return return_lNzVoNL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_mtrEtdo=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupport deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GxnwfHj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mWhcczL=json({});
    
        if (name.pNext==NULL){
            return_mWhcczL["null"]=true;
            return return_mWhcczL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_hcjEEoz=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupportEXT deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupportEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkAttachmentDescription2(VkAttachmentDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DwGXang=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AsvMsxt=json({});
    
        if (name.pNext==NULL){
            return_AsvMsxt["null"]=true;
            return return_AsvMsxt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GcSGVfn=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_ZUAsnKJ=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_qkOGGgB=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_DlZceme=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_ZzrgLvB=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_tlLvboK=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_fUVcPhs=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_SUNFaRc=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_wsHWyzi=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2 deserialize_VkAttachmentDescription2(json name){
        auto result=VkAttachmentDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZPHnQZV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZPHnQZV=NULL;
        }
    temp_ZPHnQZV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZPHnQZV;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescription2KHR(VkAttachmentDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JacPOMk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WzqxgCJ=json({});
    
        if (name.pNext==NULL){
            return_WzqxgCJ["null"]=true;
            return return_WzqxgCJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MzPZKJl=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_rMoPMgH=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_EBKrWri=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_LFfvjKy=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_YlNekgo=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_focMqwd=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_hEDpdOo=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_PuyWZik=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_VpbMDeC=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2KHR deserialize_VkAttachmentDescription2KHR(json name){
        auto result=VkAttachmentDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fIZjvDV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fIZjvDV=NULL;
        }
    temp_fIZjvDV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fIZjvDV;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference2(VkAttachmentReference2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DwuoQKw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gGYcVUu=json({});
    
        if (name.pNext==NULL){
            return_gGYcVUu["null"]=true;
            return return_gGYcVUu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_nkETJyt=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_doQMJKm=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_GwPNOET=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2 deserialize_VkAttachmentReference2(json name){
        auto result=VkAttachmentReference2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GcTkSvY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GcTkSvY=NULL;
        }
    temp_GcTkSvY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GcTkSvY;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkAttachmentReference2KHR(VkAttachmentReference2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QSjfuvy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YwUcaGC=json({});
    
        if (name.pNext==NULL){
            return_YwUcaGC["null"]=true;
            return return_YwUcaGC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_MeYmkGp=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_VHRBRQH=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_zIjoWyz=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2KHR deserialize_VkAttachmentReference2KHR(json name){
        auto result=VkAttachmentReference2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_inOCyeL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_inOCyeL=NULL;
        }
    temp_inOCyeL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_inOCyeL;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkSubpassDescription2(VkSubpassDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hMxizJX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bWXBeWW=json({});
    
        if (name.pNext==NULL){
            return_bWXBeWW["null"]=true;
            return return_bWXBeWW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cHlSfOB=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_lxhMSFb=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_zEJhBxg=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_DgrFHPm=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_KMOuOcS=json({});
    
        if (name.pInputAttachments==NULL){
            return_KMOuOcS["null"]=true;
            return return_KMOuOcS;
        }
        
        return_KMOuOcS["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_gMwBWXN=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_KMOuOcS["members"][std::to_string(i)].push_back(temp);
        }
        return return_KMOuOcS;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_ajwQyGk=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_bHotfxg=json({});
    
        if (name.pColorAttachments==NULL){
            return_bHotfxg["null"]=true;
            return return_bHotfxg;
        }
        
        return_bHotfxg["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_uOOQYdC=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_bHotfxg["members"][std::to_string(i)].push_back(temp);
        }
        return return_bHotfxg;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_MtbQtUc=json({});
    
        if (name.pResolveAttachments==NULL){
            return_MtbQtUc["null"]=true;
            return return_MtbQtUc;
        }
        
        return_MtbQtUc["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_LgMzbkf=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_MtbQtUc["members"][std::to_string(i)].push_back(temp);
        }
        return return_MtbQtUc;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_XaFgENj=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_XaFgENj["null"]=true;
            return return_XaFgENj;
        }
        return_XaFgENj=[&]() {
    json return_ilrthdT=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_XaFgENj;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_VSjNDMX=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_imSoVEv=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_imSoVEv["null"]=true;
            return return_imSoVEv;
        }
        
        return_imSoVEv["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_HEFnnfK=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_imSoVEv["members"][std::to_string(i)].push_back(temp);
        }
        return return_imSoVEv;
        }();
return result;}

    VkSubpassDescription2 deserialize_VkSubpassDescription2(json name){
        auto result=VkSubpassDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sahbmKS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sahbmKS=NULL;
        }
    temp_sahbmKS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sahbmKS;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_fEmgAxX;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_fEmgAxX=NULL;
        }
    temp_fEmgAxX=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int gJyMrnU=0; gJyMrnU < result.inputAttachmentCount; gJyMrnU++){
            [&]() {
temp_fEmgAxX[gJyMrnU]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][gJyMrnU]);}();;
        }
        }();result.pInputAttachments=temp_fEmgAxX;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_girOOoV;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_girOOoV=NULL;
        }
    temp_girOOoV=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int PBWhvhu=0; PBWhvhu < result.colorAttachmentCount; PBWhvhu++){
            [&]() {
temp_girOOoV[PBWhvhu]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][PBWhvhu]);}();;
        }
        }();result.pColorAttachments=temp_girOOoV;}();
[&]() {
VkAttachmentReference2* temp_aPHwLpf;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_aPHwLpf=NULL;
        }
    temp_aPHwLpf=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int WaZrasL=0; WaZrasL < result.colorAttachmentCount; WaZrasL++){
            [&]() {
temp_aPHwLpf[WaZrasL]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][WaZrasL]);}();;
        }
        }();result.pResolveAttachments=temp_aPHwLpf;}();
[&]() {
VkAttachmentReference2* temp_PPgRqjv;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_PPgRqjv=NULL;
        }
    [&]() {
*(temp_PPgRqjv)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_PPgRqjv;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_DSXZfKc;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_DSXZfKc=NULL;
        }
    temp_DSXZfKc=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int RKCkrRz=0; RKCkrRz < result.preserveAttachmentCount; RKCkrRz++){
            [&]() {
temp_DSXZfKc[RKCkrRz]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][RKCkrRz]);}();;
        }
        }();result.pPreserveAttachments=temp_DSXZfKc;}();
return result;}

    json serialize_VkSubpassDescription2KHR(VkSubpassDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZCXPoad=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VXhQFmB=json({});
    
        if (name.pNext==NULL){
            return_VXhQFmB["null"]=true;
            return return_VXhQFmB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UiYHZpn=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_ILNkNqa=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_aierNJw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_izChZJM=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_eXqldRn=json({});
    
        if (name.pInputAttachments==NULL){
            return_eXqldRn["null"]=true;
            return return_eXqldRn;
        }
        
        return_eXqldRn["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_OZyCqDQ=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_eXqldRn["members"][std::to_string(i)].push_back(temp);
        }
        return return_eXqldRn;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_myFnivC=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_TVbgHsK=json({});
    
        if (name.pColorAttachments==NULL){
            return_TVbgHsK["null"]=true;
            return return_TVbgHsK;
        }
        
        return_TVbgHsK["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ouhMtrC=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_TVbgHsK["members"][std::to_string(i)].push_back(temp);
        }
        return return_TVbgHsK;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_KpWrdrj=json({});
    
        if (name.pResolveAttachments==NULL){
            return_KpWrdrj["null"]=true;
            return return_KpWrdrj;
        }
        
        return_KpWrdrj["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_zeFPQwU=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_KpWrdrj["members"][std::to_string(i)].push_back(temp);
        }
        return return_KpWrdrj;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_unzBMeR=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_unzBMeR["null"]=true;
            return return_unzBMeR;
        }
        return_unzBMeR=[&]() {
    json return_cyqHPCy=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_unzBMeR;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_eeXmJNI=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_zXSCtoZ=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_zXSCtoZ["null"]=true;
            return return_zXSCtoZ;
        }
        
        return_zXSCtoZ["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_txvRgjX=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_zXSCtoZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_zXSCtoZ;
        }();
return result;}

    VkSubpassDescription2KHR deserialize_VkSubpassDescription2KHR(json name){
        auto result=VkSubpassDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AnokVMd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AnokVMd=NULL;
        }
    temp_AnokVMd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AnokVMd;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_KDepeNz;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_KDepeNz=NULL;
        }
    temp_KDepeNz=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int zewICmU=0; zewICmU < result.inputAttachmentCount; zewICmU++){
            [&]() {
temp_KDepeNz[zewICmU]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][zewICmU]);}();;
        }
        }();result.pInputAttachments=temp_KDepeNz;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_AkEGUXS;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_AkEGUXS=NULL;
        }
    temp_AkEGUXS=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int DbVcLfl=0; DbVcLfl < result.colorAttachmentCount; DbVcLfl++){
            [&]() {
temp_AkEGUXS[DbVcLfl]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][DbVcLfl]);}();;
        }
        }();result.pColorAttachments=temp_AkEGUXS;}();
[&]() {
VkAttachmentReference2* temp_sgsXlgB;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_sgsXlgB=NULL;
        }
    temp_sgsXlgB=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int vWWAZcr=0; vWWAZcr < result.colorAttachmentCount; vWWAZcr++){
            [&]() {
temp_sgsXlgB[vWWAZcr]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][vWWAZcr]);}();;
        }
        }();result.pResolveAttachments=temp_sgsXlgB;}();
[&]() {
VkAttachmentReference2* temp_MksAQbp;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_MksAQbp=NULL;
        }
    [&]() {
*(temp_MksAQbp)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_MksAQbp;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_zfEdMoN;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_zfEdMoN=NULL;
        }
    temp_zfEdMoN=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int EBZAqfX=0; EBZAqfX < result.preserveAttachmentCount; EBZAqfX++){
            [&]() {
temp_zfEdMoN[EBZAqfX]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][EBZAqfX]);}();;
        }
        }();result.pPreserveAttachments=temp_zfEdMoN;}();
return result;}

    json serialize_VkSubpassDependency2(VkSubpassDependency2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jrLOOiB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zMrVAff=json({});
    
        if (name.pNext==NULL){
            return_zMrVAff["null"]=true;
            return return_zMrVAff;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_ACIqEMv=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_rniJOnP=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_ndQOyeo=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_ykymYSV=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_SZGTrey=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_KrqVTxt=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_VEeZDBH=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_oMeuxGb=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2 deserialize_VkSubpassDependency2(json name){
        auto result=VkSubpassDependency2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HkbqPGQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HkbqPGQ=NULL;
        }
    temp_HkbqPGQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HkbqPGQ;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkSubpassDependency2KHR(VkSubpassDependency2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gsgNpcF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FKaOiEE=json({});
    
        if (name.pNext==NULL){
            return_FKaOiEE["null"]=true;
            return return_FKaOiEE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_pltfUOu=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_FFFwkOd=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_oAlylLD=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_DYarlmB=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_VzrEVky=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_JYlCXDs=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_BxwgQnZ=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_GmPMDuh=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2KHR deserialize_VkSubpassDependency2KHR(json name){
        auto result=VkSubpassDependency2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yFIDSrq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yFIDSrq=NULL;
        }
    temp_yFIDSrq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yFIDSrq;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo2(VkRenderPassCreateInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iEoilvC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xjGPpze=json({});
    
        if (name.pNext==NULL){
            return_xjGPpze["null"]=true;
            return return_xjGPpze;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WtpZawC=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_rcWIHfo=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_IZsvJuV=json({});
    
        if (name.pAttachments==NULL){
            return_IZsvJuV["null"]=true;
            return return_IZsvJuV;
        }
        
        return_IZsvJuV["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ffVHUCV=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_IZsvJuV["members"][std::to_string(i)].push_back(temp);
        }
        return return_IZsvJuV;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_LRhBWEE=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_qXNBMQj=json({});
    
        if (name.pSubpasses==NULL){
            return_qXNBMQj["null"]=true;
            return return_qXNBMQj;
        }
        
        return_qXNBMQj["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_HWtSoAa=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_qXNBMQj["members"][std::to_string(i)].push_back(temp);
        }
        return return_qXNBMQj;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_KcJFejr=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_VLQmLtd=json({});
    
        if (name.pDependencies==NULL){
            return_VLQmLtd["null"]=true;
            return return_VLQmLtd;
        }
        
        return_VLQmLtd["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_ToZTjbT=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_VLQmLtd["members"][std::to_string(i)].push_back(temp);
        }
        return return_VLQmLtd;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_iXdyarl=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_JGTDxke=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_JGTDxke["null"]=true;
            return return_JGTDxke;
        }
        
        return_JGTDxke["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_MJOnNrk=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_JGTDxke["members"][std::to_string(i)].push_back(temp);
        }
        return return_JGTDxke;
        }();
return result;}

    VkRenderPassCreateInfo2 deserialize_VkRenderPassCreateInfo2(json name){
        auto result=VkRenderPassCreateInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jNruNBi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jNruNBi=NULL;
        }
    temp_jNruNBi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jNruNBi;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_WHNNWNQ;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_WHNNWNQ=NULL;
        }
    temp_WHNNWNQ=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int eYgdKvZ=0; eYgdKvZ < result.attachmentCount; eYgdKvZ++){
            [&]() {
temp_WHNNWNQ[eYgdKvZ]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][eYgdKvZ]);}();;
        }
        }();result.pAttachments=temp_WHNNWNQ;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_fYpOveD;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_fYpOveD=NULL;
        }
    temp_fYpOveD=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int FEThGXn=0; FEThGXn < result.subpassCount; FEThGXn++){
            [&]() {
temp_fYpOveD[FEThGXn]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][FEThGXn]);}();;
        }
        }();result.pSubpasses=temp_fYpOveD;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_DvTLGaC;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_DvTLGaC=NULL;
        }
    temp_DvTLGaC=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int qrXhvuV=0; qrXhvuV < result.dependencyCount; qrXhvuV++){
            [&]() {
temp_DvTLGaC[qrXhvuV]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][qrXhvuV]);}();;
        }
        }();result.pDependencies=temp_DvTLGaC;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_htDjzKy;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_htDjzKy=NULL;
        }
    temp_htDjzKy=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int tmChJKf=0; tmChJKf < result.correlatedViewMaskCount; tmChJKf++){
            [&]() {
temp_htDjzKy[tmChJKf]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][tmChJKf]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_htDjzKy;}();
return result;}

    json serialize_VkRenderPassCreateInfo2KHR(VkRenderPassCreateInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_peNgGIo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yQyIURZ=json({});
    
        if (name.pNext==NULL){
            return_yQyIURZ["null"]=true;
            return return_yQyIURZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BiTPEgR=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_fmCxEUy=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_RzhdcBO=json({});
    
        if (name.pAttachments==NULL){
            return_RzhdcBO["null"]=true;
            return return_RzhdcBO;
        }
        
        return_RzhdcBO["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_GRNHVhj=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_RzhdcBO["members"][std::to_string(i)].push_back(temp);
        }
        return return_RzhdcBO;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_Hgdfzgm=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_BakMBRB=json({});
    
        if (name.pSubpasses==NULL){
            return_BakMBRB["null"]=true;
            return return_BakMBRB;
        }
        
        return_BakMBRB["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_nIHQopR=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_BakMBRB["members"][std::to_string(i)].push_back(temp);
        }
        return return_BakMBRB;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_ByvrhfQ=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_XKvRQJS=json({});
    
        if (name.pDependencies==NULL){
            return_XKvRQJS["null"]=true;
            return return_XKvRQJS;
        }
        
        return_XKvRQJS["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_lnKDeBo=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_XKvRQJS["members"][std::to_string(i)].push_back(temp);
        }
        return return_XKvRQJS;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_ZjJHWEM=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_vzQYexh=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_vzQYexh["null"]=true;
            return return_vzQYexh;
        }
        
        return_vzQYexh["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_gCBGDYl=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_vzQYexh["members"][std::to_string(i)].push_back(temp);
        }
        return return_vzQYexh;
        }();
return result;}

    VkRenderPassCreateInfo2KHR deserialize_VkRenderPassCreateInfo2KHR(json name){
        auto result=VkRenderPassCreateInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SkCqaPC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SkCqaPC=NULL;
        }
    temp_SkCqaPC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SkCqaPC;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_ceewHoR;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_ceewHoR=NULL;
        }
    temp_ceewHoR=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int YpRPthA=0; YpRPthA < result.attachmentCount; YpRPthA++){
            [&]() {
temp_ceewHoR[YpRPthA]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][YpRPthA]);}();;
        }
        }();result.pAttachments=temp_ceewHoR;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_IBcoBnG;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_IBcoBnG=NULL;
        }
    temp_IBcoBnG=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int sbHsXER=0; sbHsXER < result.subpassCount; sbHsXER++){
            [&]() {
temp_IBcoBnG[sbHsXER]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][sbHsXER]);}();;
        }
        }();result.pSubpasses=temp_IBcoBnG;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_SZlqtsu;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_SZlqtsu=NULL;
        }
    temp_SZlqtsu=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int JCZoLwS=0; JCZoLwS < result.dependencyCount; JCZoLwS++){
            [&]() {
temp_SZlqtsu[JCZoLwS]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][JCZoLwS]);}();;
        }
        }();result.pDependencies=temp_SZlqtsu;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_vbhgKxB;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_vbhgKxB=NULL;
        }
    temp_vbhgKxB=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int RxfBMRJ=0; RxfBMRJ < result.correlatedViewMaskCount; RxfBMRJ++){
            [&]() {
temp_vbhgKxB[RxfBMRJ]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][RxfBMRJ]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_vbhgKxB;}();
return result;}

    json serialize_VkSubpassBeginInfo(VkSubpassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cjbyJnD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MpTCKeR=json({});
    
        if (name.pNext==NULL){
            return_MpTCKeR["null"]=true;
            return return_MpTCKeR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_sxVwQVd=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfo deserialize_VkSubpassBeginInfo(json name){
        auto result=VkSubpassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NICYwxH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NICYwxH=NULL;
        }
    temp_NICYwxH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NICYwxH;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassBeginInfoKHR(VkSubpassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_muyuOeu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KkxoEbP=json({});
    
        if (name.pNext==NULL){
            return_KkxoEbP["null"]=true;
            return return_KkxoEbP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_ZhYStuN=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfoKHR deserialize_VkSubpassBeginInfoKHR(json name){
        auto result=VkSubpassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DukcCeO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DukcCeO=NULL;
        }
    temp_DukcCeO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DukcCeO;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassEndInfo(VkSubpassEndInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AIVotWT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mWByYvl=json({});
    
        if (name.pNext==NULL){
            return_mWByYvl["null"]=true;
            return return_mWByYvl;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfo deserialize_VkSubpassEndInfo(json name){
        auto result=VkSubpassEndInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SwClFrn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SwClFrn=NULL;
        }
    temp_SwClFrn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SwClFrn;}();
return result;}

    json serialize_VkSubpassEndInfoKHR(VkSubpassEndInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mbUhLjR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LsbvJJK=json({});
    
        if (name.pNext==NULL){
            return_LsbvJJK["null"]=true;
            return return_LsbvJJK;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfoKHR deserialize_VkSubpassEndInfoKHR(json name){
        auto result=VkSubpassEndInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aDXOLCH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aDXOLCH=NULL;
        }
    temp_aDXOLCH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aDXOLCH;}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(VkPhysicalDeviceTimelineSemaphoreFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NrDFFjz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Cbyorui=json({});
    
        if (name.pNext==NULL){
            return_Cbyorui["null"]=true;
            return return_Cbyorui;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_fcAppHl=json({});
    return_fcAppHl=[&]() {
    json return_ZvybAOr=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_fcAppHl;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeatures deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_glOrUPZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fbzvJWV=json({});
    
        if (name.pNext==NULL){
            return_fbzvJWV["null"]=true;
            return return_fbzvJWV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_SAdgHIP=json({});
    return_SAdgHIP=[&]() {
    json return_qTZNqWC=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_SAdgHIP;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeaturesKHR deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreProperties(VkPhysicalDeviceTimelineSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HZHIpFq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jHGDTtJ=json({});
    
        if (name.pNext==NULL){
            return_jHGDTtJ["null"]=true;
            return return_jHGDTtJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_ndTjiXw=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreProperties deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(VkPhysicalDeviceTimelineSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rgtrXlm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XiAYudj=json({});
    
        if (name.pNext==NULL){
            return_XiAYudj["null"]=true;
            return return_XiAYudj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_YgqZpjK=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphorePropertiesKHR deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfo(VkSemaphoreTypeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WpoUqNh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ksVEQhs=json({});
    
        if (name.pNext==NULL){
            return_ksVEQhs["null"]=true;
            return return_ksVEQhs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_mneMcfH=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_FEnxrVm=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfo deserialize_VkSemaphoreTypeCreateInfo(json name){
        auto result=VkSemaphoreTypeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jBqDUwC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jBqDUwC=NULL;
        }
    temp_jBqDUwC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jBqDUwC;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfoKHR(VkSemaphoreTypeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ANHETGw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AGsjKql=json({});
    
        if (name.pNext==NULL){
            return_AGsjKql["null"]=true;
            return return_AGsjKql;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_SdleVYX=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_AlwcEVi=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfoKHR deserialize_VkSemaphoreTypeCreateInfoKHR(json name){
        auto result=VkSemaphoreTypeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vAjnrEg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vAjnrEg=NULL;
        }
    temp_vAjnrEg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vAjnrEg;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfo(VkTimelineSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LxnTLuP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HhvBPtU=json({});
    
        if (name.pNext==NULL){
            return_HhvBPtU["null"]=true;
            return return_HhvBPtU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_sbBqtvF=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_yCuULJz=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_yCuULJz["null"]=true;
            return return_yCuULJz;
        }
        
        return_yCuULJz["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_TYCbrto=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_yCuULJz["members"][std::to_string(i)].push_back(temp);
        }
        return return_yCuULJz;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_CPKzcAI=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_DqtNrbh=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_DqtNrbh["null"]=true;
            return return_DqtNrbh;
        }
        
        return_DqtNrbh["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_OBXVCKv=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_DqtNrbh["members"][std::to_string(i)].push_back(temp);
        }
        return return_DqtNrbh;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfo deserialize_VkTimelineSemaphoreSubmitInfo(json name){
        auto result=VkTimelineSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IYeJzAY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IYeJzAY=NULL;
        }
    temp_IYeJzAY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IYeJzAY;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_hViovog;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_hViovog=NULL;
        }
    temp_hViovog=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int sGIMTRm=0; sGIMTRm < result.waitSemaphoreValueCount; sGIMTRm++){
            [&]() {
temp_hViovog[sGIMTRm]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][sGIMTRm]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_hViovog;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_rsbiwic;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_rsbiwic=NULL;
        }
    temp_rsbiwic=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int RJhnGVC=0; RJhnGVC < result.signalSemaphoreValueCount; RJhnGVC++){
            [&]() {
temp_rsbiwic[RJhnGVC]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][RJhnGVC]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_rsbiwic;}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfoKHR(VkTimelineSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gWxzNpW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSraSJA=json({});
    
        if (name.pNext==NULL){
            return_qSraSJA["null"]=true;
            return return_qSraSJA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_MQlrmVl=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_uzVOmxE=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_uzVOmxE["null"]=true;
            return return_uzVOmxE;
        }
        
        return_uzVOmxE["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_WpivRyA=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_uzVOmxE["members"][std::to_string(i)].push_back(temp);
        }
        return return_uzVOmxE;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_pyJxUii=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_wTWlrsK=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_wTWlrsK["null"]=true;
            return return_wTWlrsK;
        }
        
        return_wTWlrsK["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_FtgyEIY=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_wTWlrsK["members"][std::to_string(i)].push_back(temp);
        }
        return return_wTWlrsK;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfoKHR deserialize_VkTimelineSemaphoreSubmitInfoKHR(json name){
        auto result=VkTimelineSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CUdhlba;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CUdhlba=NULL;
        }
    temp_CUdhlba=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CUdhlba;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_feHPRGf;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_feHPRGf=NULL;
        }
    temp_feHPRGf=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int ZsKawYS=0; ZsKawYS < result.waitSemaphoreValueCount; ZsKawYS++){
            [&]() {
temp_feHPRGf[ZsKawYS]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][ZsKawYS]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_feHPRGf;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_GaRKFBa;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_GaRKFBa=NULL;
        }
    temp_GaRKFBa=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int jdoIdhe=0; jdoIdhe < result.signalSemaphoreValueCount; jdoIdhe++){
            [&]() {
temp_GaRKFBa[jdoIdhe]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][jdoIdhe]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_GaRKFBa;}();
return result;}

    json serialize_VkSemaphoreWaitInfo(VkSemaphoreWaitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BwJwaZy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_enSubuQ=json({});
    
        if (name.pNext==NULL){
            return_enSubuQ["null"]=true;
            return return_enSubuQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ptUlXbM=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_dNgSaBV=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_wtBOypA=json({});
    
        if (name.pSemaphores==NULL){
            return_wtBOypA["null"]=true;
            return return_wtBOypA;
        }
        
        return_wtBOypA["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_tYVjbCb=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_wtBOypA["members"][std::to_string(i)].push_back(temp);
        }
        return return_wtBOypA;
        }();
result["members"]["pValues"]=[&]() {
    json return_KtkPEsF=json({});
    
        if (name.pValues==NULL){
            return_KtkPEsF["null"]=true;
            return return_KtkPEsF;
        }
        
        return_KtkPEsF["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_NFCoPiv=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_KtkPEsF["members"][std::to_string(i)].push_back(temp);
        }
        return return_KtkPEsF;
        }();
return result;}

    VkSemaphoreWaitInfo deserialize_VkSemaphoreWaitInfo(json name){
        auto result=VkSemaphoreWaitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pKcZbAv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pKcZbAv=NULL;
        }
    temp_pKcZbAv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pKcZbAv;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_IhnFNlO;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_IhnFNlO=NULL;
        }
    temp_IhnFNlO=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int avBOkTV=0; avBOkTV < result.semaphoreCount; avBOkTV++){
            [&]() {
temp_IhnFNlO[avBOkTV]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][avBOkTV]);}();;
        }
        }();result.pSemaphores=temp_IhnFNlO;}();
[&]() {
uint64_t* temp_utFqmjf;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_utFqmjf=NULL;
        }
    temp_utFqmjf=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int tRbNpvf=0; tRbNpvf < result.semaphoreCount; tRbNpvf++){
            [&]() {
temp_utFqmjf[tRbNpvf]=deserialize_uint64_t(name["members"]["pValues"]["members"][tRbNpvf]);}();;
        }
        }();result.pValues=temp_utFqmjf;}();
return result;}

    json serialize_VkSemaphoreWaitInfoKHR(VkSemaphoreWaitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dFdqZey=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MLwvrkN=json({});
    
        if (name.pNext==NULL){
            return_MLwvrkN["null"]=true;
            return return_MLwvrkN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nmryzwu=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_gtwYsfP=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_XxMvMzV=json({});
    
        if (name.pSemaphores==NULL){
            return_XxMvMzV["null"]=true;
            return return_XxMvMzV;
        }
        
        return_XxMvMzV["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_cEnNcml=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_XxMvMzV["members"][std::to_string(i)].push_back(temp);
        }
        return return_XxMvMzV;
        }();
result["members"]["pValues"]=[&]() {
    json return_JkPCdca=json({});
    
        if (name.pValues==NULL){
            return_JkPCdca["null"]=true;
            return return_JkPCdca;
        }
        
        return_JkPCdca["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_qkdhZZX=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_JkPCdca["members"][std::to_string(i)].push_back(temp);
        }
        return return_JkPCdca;
        }();
return result;}

    VkSemaphoreWaitInfoKHR deserialize_VkSemaphoreWaitInfoKHR(json name){
        auto result=VkSemaphoreWaitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mnPUtHo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mnPUtHo=NULL;
        }
    temp_mnPUtHo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mnPUtHo;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_cHdKKmM;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_cHdKKmM=NULL;
        }
    temp_cHdKKmM=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int GkGJtUp=0; GkGJtUp < result.semaphoreCount; GkGJtUp++){
            [&]() {
temp_cHdKKmM[GkGJtUp]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][GkGJtUp]);}();;
        }
        }();result.pSemaphores=temp_cHdKKmM;}();
[&]() {
uint64_t* temp_wOIJbhS;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_wOIJbhS=NULL;
        }
    temp_wOIJbhS=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int dBzAezG=0; dBzAezG < result.semaphoreCount; dBzAezG++){
            [&]() {
temp_wOIJbhS[dBzAezG]=deserialize_uint64_t(name["members"]["pValues"]["members"][dBzAezG]);}();;
        }
        }();result.pValues=temp_wOIJbhS;}();
return result;}

    json serialize_VkSemaphoreSignalInfo(VkSemaphoreSignalInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rZWINaA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xQRfEfL=json({});
    
        if (name.pNext==NULL){
            return_xQRfEfL["null"]=true;
            return return_xQRfEfL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_tXqMdZe=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_ckVAbVW=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfo deserialize_VkSemaphoreSignalInfo(json name){
        auto result=VkSemaphoreSignalInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KzeSzLg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KzeSzLg=NULL;
        }
    temp_KzeSzLg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KzeSzLg;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkSemaphoreSignalInfoKHR(VkSemaphoreSignalInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lZhrAUP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hXTTedJ=json({});
    
        if (name.pNext==NULL){
            return_hXTTedJ["null"]=true;
            return return_hXTTedJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_GaqUlnG=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_BbOBuip=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfoKHR deserialize_VkSemaphoreSignalInfoKHR(json name){
        auto result=VkSemaphoreSignalInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_peWaNGk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_peWaNGk=NULL;
        }
    temp_peWaNGk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_peWaNGk;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkVertexInputBindingDivisorDescriptionEXT(VkVertexInputBindingDivisorDescriptionEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_FFgRCLu=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["divisor"]=[&]() {
    json return_RnWNcDo=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDivisorDescriptionEXT deserialize_VkVertexInputBindingDivisorDescriptionEXT(json name){
        auto result=VkVertexInputBindingDivisorDescriptionEXT();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(VkPipelineVertexInputDivisorStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EEwrLxc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xsklxUK=json({});
    
        if (name.pNext==NULL){
            return_xsklxUK["null"]=true;
            return return_xsklxUK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexBindingDivisorCount"]=[&]() {
    json return_ybekEiF=json({});
    return serialize_uint32_t(name.vertexBindingDivisorCount);}();
result["members"]["pVertexBindingDivisors"]=[&]() {
    json return_zrlpCaR=json({});
    
        if (name.pVertexBindingDivisors==NULL){
            return_zrlpCaR["null"]=true;
            return return_zrlpCaR;
        }
        
        return_zrlpCaR["members"]={};
        for(int i=0; i < name.vertexBindingDivisorCount; i++){
            json temp;
            temp=[&]() {
    json return_MZohPNO=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(name.pVertexBindingDivisors[i]);}();
            return_zrlpCaR["members"][std::to_string(i)].push_back(temp);
        }
        return return_zrlpCaR;
        }();
return result;}

    VkPipelineVertexInputDivisorStateCreateInfoEXT deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(json name){
        auto result=VkPipelineVertexInputDivisorStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uoKigyO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uoKigyO=NULL;
        }
    temp_uoKigyO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uoKigyO;}();
[&]() {
result.vertexBindingDivisorCount=deserialize_uint32_t(name["members"]["vertexBindingDivisorCount"]);}();
[&]() {
VkVertexInputBindingDivisorDescriptionEXT* temp_qrNTcfP;[&]() {

        if (name["members"]["pVertexBindingDivisors"].contains("null")){
        temp_qrNTcfP=NULL;
        }
    temp_qrNTcfP=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(result.vertexBindingDivisorCount*sizeof(VkVertexInputBindingDivisorDescriptionEXT));
        for (int cfArbhp=0; cfArbhp < result.vertexBindingDivisorCount; cfArbhp++){
            [&]() {
temp_qrNTcfP[cfArbhp]=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name["members"]["pVertexBindingDivisors"]["members"][cfArbhp]);}();;
        }
        }();result.pVertexBindingDivisors=temp_qrNTcfP;}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JEKndGq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZEwWuhY=json({});
    
        if (name.pNext==NULL){
            return_ZEwWuhY["null"]=true;
            return return_ZEwWuhY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVertexAttribDivisor"]=[&]() {
    json return_AZcsbxg=json({});
    return serialize_uint32_t(name.maxVertexAttribDivisor);}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVertexAttribDivisor=deserialize_uint32_t(name["members"]["maxVertexAttribDivisor"]);}();
return result;}

    json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(VkPhysicalDevicePCIBusInfoPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uwIDHvN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kkSvDUf=json({});
    
        if (name.pNext==NULL){
            return_kkSvDUf["null"]=true;
            return return_kkSvDUf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pciDomain"]=[&]() {
    json return_BiIyzal=json({});
    return serialize_uint32_t(name.pciDomain);}();
result["members"]["pciBus"]=[&]() {
    json return_KZBdaif=json({});
    return serialize_uint32_t(name.pciBus);}();
result["members"]["pciDevice"]=[&]() {
    json return_Zftztvu=json({});
    return serialize_uint32_t(name.pciDevice);}();
result["members"]["pciFunction"]=[&]() {
    json return_cPUMqdD=json({});
    return serialize_uint32_t(name.pciFunction);}();
return result;}

    VkPhysicalDevicePCIBusInfoPropertiesEXT deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(json name){
        auto result=VkPhysicalDevicePCIBusInfoPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pciDomain=deserialize_uint32_t(name["members"]["pciDomain"]);}();
[&]() {
result.pciBus=deserialize_uint32_t(name["members"]["pciBus"]);}();
[&]() {
result.pciDevice=deserialize_uint32_t(name["members"]["pciDevice"]);}();
[&]() {
result.pciFunction=deserialize_uint32_t(name["members"]["pciFunction"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkCommandBufferInheritanceConditionalRenderingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DvHAseN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_McCGXNm=json({});
    
        if (name.pNext==NULL){
            return_McCGXNm["null"]=true;
            return return_McCGXNm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRenderingEnable"]=[&]() {
    json return_JeiZnIN=json({});
    return_JeiZnIN=[&]() {
    json return_jrsEqJs=json({});
    return serialize_uint32_t(name.conditionalRenderingEnable);}();return return_JeiZnIN;}();
return result;}

    VkCommandBufferInheritanceConditionalRenderingInfoEXT deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(json name){
        auto result=VkCommandBufferInheritanceConditionalRenderingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XKyEfZi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XKyEfZi=NULL;
        }
    temp_XKyEfZi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XKyEfZi;}();
[&]() {
[&]() {
result.conditionalRenderingEnable=deserialize_uint32_t(name["members"]["conditionalRenderingEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeatures(VkPhysicalDevice8BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iHLzaDN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cmRcjFW=json({});
    
        if (name.pNext==NULL){
            return_cmRcjFW["null"]=true;
            return return_cmRcjFW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_nVsEKjx=json({});
    return_nVsEKjx=[&]() {
    json return_WWlGsht=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_nVsEKjx;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_EQeGRuc=json({});
    return_EQeGRuc=[&]() {
    json return_vJuPsTv=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_EQeGRuc;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_iWtScfL=json({});
    return_iWtScfL=[&]() {
    json return_pBACKAA=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_iWtScfL;}();
return result;}

    VkPhysicalDevice8BitStorageFeatures deserialize_VkPhysicalDevice8BitStorageFeatures(json name){
        auto result=VkPhysicalDevice8BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeaturesKHR(VkPhysicalDevice8BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AjNuXeF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pxhjjwf=json({});
    
        if (name.pNext==NULL){
            return_pxhjjwf["null"]=true;
            return return_pxhjjwf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_fUyJxWu=json({});
    return_fUyJxWu=[&]() {
    json return_YxPfokn=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_fUyJxWu;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_ysEYgqL=json({});
    return_ysEYgqL=[&]() {
    json return_cMYdLTk=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_ysEYgqL;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_ihhJLcf=json({});
    return_ihhJLcf=[&]() {
    json return_ZSDEHFk=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_ihhJLcf;}();
return result;}

    VkPhysicalDevice8BitStorageFeaturesKHR deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice8BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkPhysicalDeviceConditionalRenderingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KnCFgTv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tYzwGrL=json({});
    
        if (name.pNext==NULL){
            return_tYzwGrL["null"]=true;
            return return_tYzwGrL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRendering"]=[&]() {
    json return_shKRPSJ=json({});
    return_shKRPSJ=[&]() {
    json return_lTsaxaV=json({});
    return serialize_uint32_t(name.conditionalRendering);}();return return_shKRPSJ;}();
result["members"]["inheritedConditionalRendering"]=[&]() {
    json return_PSMUiLc=json({});
    return_PSMUiLc=[&]() {
    json return_ufNHgGr=json({});
    return serialize_uint32_t(name.inheritedConditionalRendering);}();return return_PSMUiLc;}();
return result;}

    VkPhysicalDeviceConditionalRenderingFeaturesEXT deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceConditionalRenderingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.conditionalRendering=deserialize_uint32_t(name["members"]["conditionalRendering"]);}();}();
[&]() {
[&]() {
result.inheritedConditionalRendering=deserialize_uint32_t(name["members"]["inheritedConditionalRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(VkPhysicalDeviceVulkanMemoryModelFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AlQOerU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RFuACcd=json({});
    
        if (name.pNext==NULL){
            return_RFuACcd["null"]=true;
            return return_RFuACcd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_WTeQwdO=json({});
    return_WTeQwdO=[&]() {
    json return_MxAxBKL=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_WTeQwdO;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_qpcroxL=json({});
    return_qpcroxL=[&]() {
    json return_qlODHWN=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_qpcroxL;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_lNWmYyV=json({});
    return_lNWmYyV=[&]() {
    json return_iFsALxl=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_lNWmYyV;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeatures deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dWvkvZk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ubqzuVc=json({});
    
        if (name.pNext==NULL){
            return_ubqzuVc["null"]=true;
            return return_ubqzuVc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_yUufMeW=json({});
    return_yUufMeW=[&]() {
    json return_OcvuIGv=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_yUufMeW;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_BNrkrvn=json({});
    return_BNrkrvn=[&]() {
    json return_vwSlylH=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_BNrkrvn;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_NLoaMmp=json({});
    return_NLoaMmp=[&]() {
    json return_NiXrYuk=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_NLoaMmp;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeaturesKHR deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64Features(VkPhysicalDeviceShaderAtomicInt64Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RVkbLEo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iLoeYdt=json({});
    
        if (name.pNext==NULL){
            return_iLoeYdt["null"]=true;
            return return_iLoeYdt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_TDDvdcg=json({});
    return_TDDvdcg=[&]() {
    json return_TivIxyB=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_TDDvdcg;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_YfudQjm=json({});
    return_YfudQjm=[&]() {
    json return_zOrMnFL=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_YfudQjm;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64Features deserialize_VkPhysicalDeviceShaderAtomicInt64Features(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ptyMyiO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CmDrGbX=json({});
    
        if (name.pNext==NULL){
            return_CmDrGbX["null"]=true;
            return return_CmDrGbX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_WUMBnuS=json({});
    return_WUMBnuS=[&]() {
    json return_yzJLoSH=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_WUMBnuS;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_rVWHZKf=json({});
    return_rVWHZKf=[&]() {
    json return_kZuANXc=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_rVWHZKf;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64FeaturesKHR deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KYrmVpH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GKqSgRD=json({});
    
        if (name.pNext==NULL){
            return_GKqSgRD["null"]=true;
            return return_GKqSgRD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat32Atomics"]=[&]() {
    json return_Pmwbdqs=json({});
    return_Pmwbdqs=[&]() {
    json return_rsnpRwJ=json({});
    return serialize_uint32_t(name.shaderBufferFloat32Atomics);}();return return_Pmwbdqs;}();
result["members"]["shaderBufferFloat32AtomicAdd"]=[&]() {
    json return_MEVJsPc=json({});
    return_MEVJsPc=[&]() {
    json return_ndQPcuC=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicAdd);}();return return_MEVJsPc;}();
result["members"]["shaderBufferFloat64Atomics"]=[&]() {
    json return_qVJUobI=json({});
    return_qVJUobI=[&]() {
    json return_SIUCMzj=json({});
    return serialize_uint32_t(name.shaderBufferFloat64Atomics);}();return return_qVJUobI;}();
result["members"]["shaderBufferFloat64AtomicAdd"]=[&]() {
    json return_foXYnHT=json({});
    return_foXYnHT=[&]() {
    json return_aHVtQQk=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicAdd);}();return return_foXYnHT;}();
result["members"]["shaderSharedFloat32Atomics"]=[&]() {
    json return_hySkGPs=json({});
    return_hySkGPs=[&]() {
    json return_fWZKySh=json({});
    return serialize_uint32_t(name.shaderSharedFloat32Atomics);}();return return_hySkGPs;}();
result["members"]["shaderSharedFloat32AtomicAdd"]=[&]() {
    json return_Jwggnzp=json({});
    return_Jwggnzp=[&]() {
    json return_qhNDWdc=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicAdd);}();return return_Jwggnzp;}();
result["members"]["shaderSharedFloat64Atomics"]=[&]() {
    json return_lEmfAVi=json({});
    return_lEmfAVi=[&]() {
    json return_JJgnngR=json({});
    return serialize_uint32_t(name.shaderSharedFloat64Atomics);}();return return_lEmfAVi;}();
result["members"]["shaderSharedFloat64AtomicAdd"]=[&]() {
    json return_bcsLhcg=json({});
    return_bcsLhcg=[&]() {
    json return_fTmwDaJ=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicAdd);}();return return_bcsLhcg;}();
result["members"]["shaderImageFloat32Atomics"]=[&]() {
    json return_PiVMKED=json({});
    return_PiVMKED=[&]() {
    json return_wuhwlDe=json({});
    return serialize_uint32_t(name.shaderImageFloat32Atomics);}();return return_PiVMKED;}();
result["members"]["shaderImageFloat32AtomicAdd"]=[&]() {
    json return_CmLZGDH=json({});
    return_CmLZGDH=[&]() {
    json return_mcSMSDx=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicAdd);}();return return_CmLZGDH;}();
result["members"]["sparseImageFloat32Atomics"]=[&]() {
    json return_YcHddAl=json({});
    return_YcHddAl=[&]() {
    json return_PKvzWMd=json({});
    return serialize_uint32_t(name.sparseImageFloat32Atomics);}();return return_YcHddAl;}();
result["members"]["sparseImageFloat32AtomicAdd"]=[&]() {
    json return_uxJZqMu=json({});
    return_uxJZqMu=[&]() {
    json return_ttXsdlB=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicAdd);}();return return_uxJZqMu;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloatFeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloatFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat32Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32Atomics=deserialize_uint32_t(name["members"]["shaderImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32Atomics=deserialize_uint32_t(name["members"]["sparseImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicAdd"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_knfnCIu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gjWpbRf=json({});
    
        if (name.pNext==NULL){
            return_gjWpbRf["null"]=true;
            return return_gjWpbRf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat16Atomics"]=[&]() {
    json return_xLshRUK=json({});
    return_xLshRUK=[&]() {
    json return_fkQUmbN=json({});
    return serialize_uint32_t(name.shaderBufferFloat16Atomics);}();return return_xLshRUK;}();
result["members"]["shaderBufferFloat16AtomicAdd"]=[&]() {
    json return_AsfMcVt=json({});
    return_AsfMcVt=[&]() {
    json return_DEJaMLf=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicAdd);}();return return_AsfMcVt;}();
result["members"]["shaderBufferFloat16AtomicMinMax"]=[&]() {
    json return_sKzrntm=json({});
    return_sKzrntm=[&]() {
    json return_mhCRIZR=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicMinMax);}();return return_sKzrntm;}();
result["members"]["shaderBufferFloat32AtomicMinMax"]=[&]() {
    json return_UhruVvq=json({});
    return_UhruVvq=[&]() {
    json return_bWEhYLS=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicMinMax);}();return return_UhruVvq;}();
result["members"]["shaderBufferFloat64AtomicMinMax"]=[&]() {
    json return_DfFVsnK=json({});
    return_DfFVsnK=[&]() {
    json return_jIBbaqo=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicMinMax);}();return return_DfFVsnK;}();
result["members"]["shaderSharedFloat16Atomics"]=[&]() {
    json return_RTrWcID=json({});
    return_RTrWcID=[&]() {
    json return_hfcPpSZ=json({});
    return serialize_uint32_t(name.shaderSharedFloat16Atomics);}();return return_RTrWcID;}();
result["members"]["shaderSharedFloat16AtomicAdd"]=[&]() {
    json return_CtRFhuJ=json({});
    return_CtRFhuJ=[&]() {
    json return_HUDHkuK=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicAdd);}();return return_CtRFhuJ;}();
result["members"]["shaderSharedFloat16AtomicMinMax"]=[&]() {
    json return_UZAaMMk=json({});
    return_UZAaMMk=[&]() {
    json return_jbAXWCf=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicMinMax);}();return return_UZAaMMk;}();
result["members"]["shaderSharedFloat32AtomicMinMax"]=[&]() {
    json return_piRYFfO=json({});
    return_piRYFfO=[&]() {
    json return_HosAQSU=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicMinMax);}();return return_piRYFfO;}();
result["members"]["shaderSharedFloat64AtomicMinMax"]=[&]() {
    json return_prbwGPB=json({});
    return_prbwGPB=[&]() {
    json return_NdwhDKh=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicMinMax);}();return return_prbwGPB;}();
result["members"]["shaderImageFloat32AtomicMinMax"]=[&]() {
    json return_dczGuGv=json({});
    return_dczGuGv=[&]() {
    json return_NMEmcpG=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicMinMax);}();return return_dczGuGv;}();
result["members"]["sparseImageFloat32AtomicMinMax"]=[&]() {
    json return_kWhakxa=json({});
    return_kWhakxa=[&]() {
    json return_zbJkFUi=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicMinMax);}();return return_kWhakxa;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat16Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicMinMax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fbEAIPf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wiGyGPQ=json({});
    
        if (name.pNext==NULL){
            return_wiGyGPQ["null"]=true;
            return return_wiGyGPQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexAttributeInstanceRateDivisor"]=[&]() {
    json return_UUWsZBy=json({});
    return_UUWsZBy=[&]() {
    json return_WdPRgfU=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateDivisor);}();return return_UUWsZBy;}();
result["members"]["vertexAttributeInstanceRateZeroDivisor"]=[&]() {
    json return_yiscylB=json({});
    return_yiscylB=[&]() {
    json return_WojDmom=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateZeroDivisor);}();return return_yiscylB;}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateDivisor"]);}();}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateZeroDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateZeroDivisor"]);}();}();
return result;}

    json serialize_VkQueueFamilyCheckpointPropertiesNV(VkQueueFamilyCheckpointPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ATOCISS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_frWzhbA=json({});
    
        if (name.pNext==NULL){
            return_frWzhbA["null"]=true;
            return return_frWzhbA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_cvUYWSX=json({});
    return serialize_VkPipelineStageFlags(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointPropertiesNV deserialize_VkQueueFamilyCheckpointPropertiesNV(json name){
        auto result=VkQueueFamilyCheckpointPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointDataNV(VkCheckpointDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gtFNEze=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bfmqFGk=json({});
    
        if (name.pNext==NULL){
            return_bfmqFGk["null"]=true;
            return return_bfmqFGk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_XhuSsFA=json({});
    return serialize_VkPipelineStageFlagBits(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_zXsiqRP=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_zXsiqRP["null"]=true;
            return return_zXsiqRP;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointDataNV deserialize_VkCheckpointDataNV(json name){
        auto result=VkCheckpointDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlagBits(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolveProperties(VkPhysicalDeviceDepthStencilResolveProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WBLlbsA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YJYJBxr=json({});
    
        if (name.pNext==NULL){
            return_YJYJBxr["null"]=true;
            return return_YJYJBxr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_kLxWcWM=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_ONgIMVN=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_XfrgWCY=json({});
    return_XfrgWCY=[&]() {
    json return_NuPjrGB=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_XfrgWCY;}();
result["members"]["independentResolve"]=[&]() {
    json return_ArGYrpk=json({});
    return_ArGYrpk=[&]() {
    json return_KQWGDEW=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_ArGYrpk;}();
return result;}

    VkPhysicalDeviceDepthStencilResolveProperties deserialize_VkPhysicalDeviceDepthStencilResolveProperties(json name){
        auto result=VkPhysicalDeviceDepthStencilResolveProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(VkPhysicalDeviceDepthStencilResolvePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YmZDDEV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qZFhDvw=json({});
    
        if (name.pNext==NULL){
            return_qZFhDvw["null"]=true;
            return return_qZFhDvw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_YnSPHdJ=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_ntYuEKF=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_EOCgzgy=json({});
    return_EOCgzgy=[&]() {
    json return_nlnceYw=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_EOCgzgy;}();
result["members"]["independentResolve"]=[&]() {
    json return_EhIbCOY=json({});
    return_EhIbCOY=[&]() {
    json return_IKnLfIC=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_EhIbCOY;}();
return result;}

    VkPhysicalDeviceDepthStencilResolvePropertiesKHR deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(json name){
        auto result=VkPhysicalDeviceDepthStencilResolvePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolve(VkSubpassDescriptionDepthStencilResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vMRqbWS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ByhmBFd=json({});
    
        if (name.pNext==NULL){
            return_ByhmBFd["null"]=true;
            return return_ByhmBFd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_kMqJnsu=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_jxDcZto=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_ZnOvFPq=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_ZnOvFPq["null"]=true;
            return return_ZnOvFPq;
        }
        return_ZnOvFPq=[&]() {
    json return_JqRcMha=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_ZnOvFPq;}();
return result;}

    VkSubpassDescriptionDepthStencilResolve deserialize_VkSubpassDescriptionDepthStencilResolve(json name){
        auto result=VkSubpassDescriptionDepthStencilResolve();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uEjtTUs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uEjtTUs=NULL;
        }
    temp_uEjtTUs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uEjtTUs;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_AFJtfRa;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_AFJtfRa=NULL;
        }
    [&]() {
*(temp_AFJtfRa)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_AFJtfRa;}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolveKHR(VkSubpassDescriptionDepthStencilResolveKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qlMNGsm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yRuYHZQ=json({});
    
        if (name.pNext==NULL){
            return_yRuYHZQ["null"]=true;
            return return_yRuYHZQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_WDcdMoM=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_OulHSsc=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_DANLBzA=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_DANLBzA["null"]=true;
            return return_DANLBzA;
        }
        return_DANLBzA=[&]() {
    json return_MlBaMkc=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_DANLBzA;}();
return result;}

    VkSubpassDescriptionDepthStencilResolveKHR deserialize_VkSubpassDescriptionDepthStencilResolveKHR(json name){
        auto result=VkSubpassDescriptionDepthStencilResolveKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eCSTEmf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eCSTEmf=NULL;
        }
    temp_eCSTEmf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eCSTEmf;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_RRTryZc;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_RRTryZc=NULL;
        }
    [&]() {
*(temp_RRTryZc)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_RRTryZc;}();
return result;}

    json serialize_VkImageViewASTCDecodeModeEXT(VkImageViewASTCDecodeModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GGIrMpZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EafJTRa=json({});
    
        if (name.pNext==NULL){
            return_EafJTRa["null"]=true;
            return return_EafJTRa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeMode"]=[&]() {
    json return_HafdWMp=json({});
    return serialize_VkFormat(name.decodeMode);}();
return result;}

    VkImageViewASTCDecodeModeEXT deserialize_VkImageViewASTCDecodeModeEXT(json name){
        auto result=VkImageViewASTCDecodeModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_avVCApb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_avVCApb=NULL;
        }
    temp_avVCApb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_avVCApb;}();
[&]() {
result.decodeMode=deserialize_VkFormat(name["members"]["decodeMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(VkPhysicalDeviceASTCDecodeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_plyuxjm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gwaKHAn=json({});
    
        if (name.pNext==NULL){
            return_gwaKHAn["null"]=true;
            return return_gwaKHAn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeModeSharedExponent"]=[&]() {
    json return_GTjUowy=json({});
    return_GTjUowy=[&]() {
    json return_lKIMDbA=json({});
    return serialize_uint32_t(name.decodeModeSharedExponent);}();return return_GTjUowy;}();
return result;}

    VkPhysicalDeviceASTCDecodeFeaturesEXT deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceASTCDecodeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.decodeModeSharedExponent=deserialize_uint32_t(name["members"]["decodeModeSharedExponent"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkPhysicalDeviceTransformFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jLoOeMt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bYfPiEy=json({});
    
        if (name.pNext==NULL){
            return_bYfPiEy["null"]=true;
            return return_bYfPiEy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transformFeedback"]=[&]() {
    json return_OXrSMzk=json({});
    return_OXrSMzk=[&]() {
    json return_dfyhwYS=json({});
    return serialize_uint32_t(name.transformFeedback);}();return return_OXrSMzk;}();
result["members"]["geometryStreams"]=[&]() {
    json return_YsFOMdo=json({});
    return_YsFOMdo=[&]() {
    json return_RMmrEmN=json({});
    return serialize_uint32_t(name.geometryStreams);}();return return_YsFOMdo;}();
return result;}

    VkPhysicalDeviceTransformFeedbackFeaturesEXT deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.transformFeedback=deserialize_uint32_t(name["members"]["transformFeedback"]);}();}();
[&]() {
[&]() {
result.geometryStreams=deserialize_uint32_t(name["members"]["geometryStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkPhysicalDeviceTransformFeedbackPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CsAHYhA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hdQQcBY=json({});
    
        if (name.pNext==NULL){
            return_hdQQcBY["null"]=true;
            return return_hdQQcBY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTransformFeedbackStreams"]=[&]() {
    json return_QMIpstq=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreams);}();
result["members"]["maxTransformFeedbackBuffers"]=[&]() {
    json return_WLdPDoc=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBuffers);}();
result["members"]["maxTransformFeedbackBufferSize"]=[&]() {
    json return_mCSXLwn=json({});
    return_mCSXLwn=[&]() {
    json return_aWVFCFH=json({});
    return serialize_uint64_t(name.maxTransformFeedbackBufferSize);}();return return_mCSXLwn;}();
result["members"]["maxTransformFeedbackStreamDataSize"]=[&]() {
    json return_zxoeOdP=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreamDataSize);}();
result["members"]["maxTransformFeedbackBufferDataSize"]=[&]() {
    json return_jUYGMxV=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataSize);}();
result["members"]["maxTransformFeedbackBufferDataStride"]=[&]() {
    json return_lDUCtvd=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataStride);}();
result["members"]["transformFeedbackQueries"]=[&]() {
    json return_PyoqUhl=json({});
    return_PyoqUhl=[&]() {
    json return_uNRDFqq=json({});
    return serialize_uint32_t(name.transformFeedbackQueries);}();return return_PyoqUhl;}();
result["members"]["transformFeedbackStreamsLinesTriangles"]=[&]() {
    json return_mvYnAZs=json({});
    return_mvYnAZs=[&]() {
    json return_ItHWObS=json({});
    return serialize_uint32_t(name.transformFeedbackStreamsLinesTriangles);}();return return_mvYnAZs;}();
result["members"]["transformFeedbackRasterizationStreamSelect"]=[&]() {
    json return_FsFHSuk=json({});
    return_FsFHSuk=[&]() {
    json return_FLnyrhL=json({});
    return serialize_uint32_t(name.transformFeedbackRasterizationStreamSelect);}();return return_FsFHSuk;}();
result["members"]["transformFeedbackDraw"]=[&]() {
    json return_GgMCnwj=json({});
    return_GgMCnwj=[&]() {
    json return_aYFmFFC=json({});
    return serialize_uint32_t(name.transformFeedbackDraw);}();return return_GgMCnwj;}();
return result;}

    VkPhysicalDeviceTransformFeedbackPropertiesEXT deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTransformFeedbackStreams=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreams"]);}();
[&]() {
result.maxTransformFeedbackBuffers=deserialize_uint32_t(name["members"]["maxTransformFeedbackBuffers"]);}();
[&]() {
[&]() {
result.maxTransformFeedbackBufferSize=deserialize_uint64_t(name["members"]["maxTransformFeedbackBufferSize"]);}();}();
[&]() {
result.maxTransformFeedbackStreamDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreamDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataStride=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataStride"]);}();
[&]() {
[&]() {
result.transformFeedbackQueries=deserialize_uint32_t(name["members"]["transformFeedbackQueries"]);}();}();
[&]() {
[&]() {
result.transformFeedbackStreamsLinesTriangles=deserialize_uint32_t(name["members"]["transformFeedbackStreamsLinesTriangles"]);}();}();
[&]() {
[&]() {
result.transformFeedbackRasterizationStreamSelect=deserialize_uint32_t(name["members"]["transformFeedbackRasterizationStreamSelect"]);}();}();
[&]() {
[&]() {
result.transformFeedbackDraw=deserialize_uint32_t(name["members"]["transformFeedbackDraw"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(VkPipelineRasterizationStateStreamCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PpRjoqE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NSOUSNR=json({});
    
        if (name.pNext==NULL){
            return_NSOUSNR["null"]=true;
            return return_NSOUSNR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hWBpMqI=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name.flags);}();
result["members"]["rasterizationStream"]=[&]() {
    json return_GElIwGg=json({});
    return serialize_uint32_t(name.rasterizationStream);}();
return result;}

    VkPipelineRasterizationStateStreamCreateInfoEXT deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationStateStreamCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_blVkJoP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_blVkJoP=NULL;
        }
    temp_blVkJoP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_blVkJoP;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.rasterizationStream=deserialize_uint32_t(name["members"]["rasterizationStream"]);}();
return result;}

    json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tHFPSyP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vWwpTmn=json({});
    
        if (name.pNext==NULL){
            return_vWwpTmn["null"]=true;
            return return_vWwpTmn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTest"]=[&]() {
    json return_SgzRgbj=json({});
    return_SgzRgbj=[&]() {
    json return_NJJaxDr=json({});
    return serialize_uint32_t(name.representativeFragmentTest);}();return return_SgzRgbj;}();
return result;}

    VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(json name){
        auto result=VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.representativeFragmentTest=deserialize_uint32_t(name["members"]["representativeFragmentTest"]);}();}();
return result;}

    json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkPipelineRepresentativeFragmentTestStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgfxLjc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WQdrggF=json({});
    
        if (name.pNext==NULL){
            return_WQdrggF["null"]=true;
            return return_WQdrggF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTestEnable"]=[&]() {
    json return_qwcJlJA=json({});
    return_qwcJlJA=[&]() {
    json return_ySenXwv=json({});
    return serialize_uint32_t(name.representativeFragmentTestEnable);}();return return_qwcJlJA;}();
return result;}

    VkPipelineRepresentativeFragmentTestStateCreateInfoNV deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(json name){
        auto result=VkPipelineRepresentativeFragmentTestStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UspZGqI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UspZGqI=NULL;
        }
    temp_UspZGqI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UspZGqI;}();
[&]() {
[&]() {
result.representativeFragmentTestEnable=deserialize_uint32_t(name["members"]["representativeFragmentTestEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(VkPhysicalDeviceExclusiveScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OKmYdah=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MBUBYUI=json({});
    
        if (name.pNext==NULL){
            return_MBUBYUI["null"]=true;
            return return_MBUBYUI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissor"]=[&]() {
    json return_QxyQFAO=json({});
    return_QxyQFAO=[&]() {
    json return_QTuEYdH=json({});
    return serialize_uint32_t(name.exclusiveScissor);}();return return_QxyQFAO;}();
return result;}

    VkPhysicalDeviceExclusiveScissorFeaturesNV deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceExclusiveScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.exclusiveScissor=deserialize_uint32_t(name["members"]["exclusiveScissor"]);}();}();
return result;}

    json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkPipelineViewportExclusiveScissorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MTczqco=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kkfitWq=json({});
    
        if (name.pNext==NULL){
            return_kkfitWq["null"]=true;
            return return_kkfitWq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissorCount"]=[&]() {
    json return_VkotsRk=json({});
    return serialize_uint32_t(name.exclusiveScissorCount);}();
result["members"]["pExclusiveScissors"]=[&]() {
    json return_FdbaCDK=json({});
    
        if (name.pExclusiveScissors==NULL){
            return_FdbaCDK["null"]=true;
            return return_FdbaCDK;
        }
        
        return_FdbaCDK["members"]={};
        for(int i=0; i < name.exclusiveScissorCount; i++){
            json temp;
            temp=[&]() {
    json return_HCtRIek=json({});
    return serialize_VkRect2D(name.pExclusiveScissors[i]);}();
            return_FdbaCDK["members"][std::to_string(i)].push_back(temp);
        }
        return return_FdbaCDK;
        }();
return result;}

    VkPipelineViewportExclusiveScissorStateCreateInfoNV deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(json name){
        auto result=VkPipelineViewportExclusiveScissorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mRjnmEo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mRjnmEo=NULL;
        }
    temp_mRjnmEo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mRjnmEo;}();
[&]() {
result.exclusiveScissorCount=deserialize_uint32_t(name["members"]["exclusiveScissorCount"]);}();
[&]() {
VkRect2D* temp_SpRifXL;[&]() {

        if (name["members"]["pExclusiveScissors"].contains("null")){
        temp_SpRifXL=NULL;
        }
    temp_SpRifXL=(VkRect2D*)malloc(result.exclusiveScissorCount*sizeof(VkRect2D));
        for (int EMrePVB=0; EMrePVB < result.exclusiveScissorCount; EMrePVB++){
            [&]() {
temp_SpRifXL[EMrePVB]=deserialize_VkRect2D(name["members"]["pExclusiveScissors"]["members"][EMrePVB]);}();;
        }
        }();result.pExclusiveScissors=temp_SpRifXL;}();
return result;}

    json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(VkPhysicalDeviceCornerSampledImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bwDnfel=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RjUeqXm=json({});
    
        if (name.pNext==NULL){
            return_RjUeqXm["null"]=true;
            return return_RjUeqXm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cornerSampledImage"]=[&]() {
    json return_TJXaSVO=json({});
    return_TJXaSVO=[&]() {
    json return_pTdZQBM=json({});
    return serialize_uint32_t(name.cornerSampledImage);}();return return_TJXaSVO;}();
return result;}

    VkPhysicalDeviceCornerSampledImageFeaturesNV deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceCornerSampledImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cornerSampledImage=deserialize_uint32_t(name["members"]["cornerSampledImage"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MLJIYEk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_orVCIIb=json({});
    
        if (name.pNext==NULL){
            return_orVCIIb["null"]=true;
            return return_orVCIIb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["computeDerivativeGroupQuads"]=[&]() {
    json return_XeJjMAL=json({});
    return_XeJjMAL=[&]() {
    json return_eVeYcdR=json({});
    return serialize_uint32_t(name.computeDerivativeGroupQuads);}();return return_XeJjMAL;}();
result["members"]["computeDerivativeGroupLinear"]=[&]() {
    json return_jOvVwGX=json({});
    return_jOvVwGX=[&]() {
    json return_yIgYVrD=json({});
    return serialize_uint32_t(name.computeDerivativeGroupLinear);}();return return_jOvVwGX;}();
return result;}

    VkPhysicalDeviceComputeShaderDerivativesFeaturesNV deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(json name){
        auto result=VkPhysicalDeviceComputeShaderDerivativesFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.computeDerivativeGroupQuads=deserialize_uint32_t(name["members"]["computeDerivativeGroupQuads"]);}();}();
[&]() {
[&]() {
result.computeDerivativeGroupLinear=deserialize_uint32_t(name["members"]["computeDerivativeGroupLinear"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkPhysicalDeviceShaderImageFootprintFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ucQWjIX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrjJMcL=json({});
    
        if (name.pNext==NULL){
            return_VrjJMcL["null"]=true;
            return return_VrjJMcL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFootprint"]=[&]() {
    json return_xXhnzeT=json({});
    return_xXhnzeT=[&]() {
    json return_hybQFVa=json({});
    return serialize_uint32_t(name.imageFootprint);}();return return_xXhnzeT;}();
return result;}

    VkPhysicalDeviceShaderImageFootprintFeaturesNV deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderImageFootprintFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageFootprint=deserialize_uint32_t(name["members"]["imageFootprint"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iwVsCWH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zcMBGWT=json({});
    
        if (name.pNext==NULL){
            return_zcMBGWT["null"]=true;
            return return_zcMBGWT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocationImageAliasing"]=[&]() {
    json return_runApAC=json({});
    return_runApAC=[&]() {
    json return_XeWFgLw=json({});
    return serialize_uint32_t(name.dedicatedAllocationImageAliasing);}();return return_runApAC;}();
return result;}

    VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(json name){
        auto result=VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dedicatedAllocationImageAliasing=deserialize_uint32_t(name["members"]["dedicatedAllocationImageAliasing"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vKPXiFy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eRXGzkD=json({});
    
        if (name.pNext==NULL){
            return_eRXGzkD["null"]=true;
            return return_eRXGzkD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indirectCopy"]=[&]() {
    json return_tUqPpMh=json({});
    return_tUqPpMh=[&]() {
    json return_xUYAMoX=json({});
    return serialize_uint32_t(name.indirectCopy);}();return return_tUqPpMh;}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectFeaturesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indirectCopy=deserialize_uint32_t(name["members"]["indirectCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tbLjhbe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lDiDwie=json({});
    
        if (name.pNext==NULL){
            return_lDiDwie["null"]=true;
            return return_lDiDwie;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedQueues"]=[&]() {
    json return_IksweFL=json({});
    return serialize_VkQueueFlags(name.supportedQueues);}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectPropertiesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedQueues=deserialize_VkQueueFlags(name["members"]["supportedQueues"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(VkPhysicalDeviceMemoryDecompressionFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_syyxFfx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ezReMUC=json({});
    
        if (name.pNext==NULL){
            return_ezReMUC["null"]=true;
            return return_ezReMUC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryDecompression"]=[&]() {
    json return_hCICfnA=json({});
    return_hCICfnA=[&]() {
    json return_cThzELg=json({});
    return serialize_uint32_t(name.memoryDecompression);}();return return_hCICfnA;}();
return result;}

    VkPhysicalDeviceMemoryDecompressionFeaturesNV deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryDecompression=deserialize_uint32_t(name["members"]["memoryDecompression"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(VkPhysicalDeviceMemoryDecompressionPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YVKWfxt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PgMBioO=json({});
    
        if (name.pNext==NULL){
            return_PgMBioO["null"]=true;
            return return_PgMBioO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decompressionMethods"]=[&]() {
    json return_ARCVGkJ=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethods);}();
result["members"]["maxDecompressionIndirectCount"]=[&]() {
    json return_rffyvvL=json({});
    return serialize_uint64_t(name.maxDecompressionIndirectCount);}();
return result;}

    VkPhysicalDeviceMemoryDecompressionPropertiesNV deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.decompressionMethods=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethods"]);}();
[&]() {
result.maxDecompressionIndirectCount=deserialize_uint64_t(name["members"]["maxDecompressionIndirectCount"]);}();
return result;}

    json serialize_VkShadingRatePaletteNV(VkShadingRatePaletteNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRatePaletteEntryCount"]=[&]() {
    json return_KxMqvoX=json({});
    return serialize_uint32_t(name.shadingRatePaletteEntryCount);}();
result["members"]["pShadingRatePaletteEntries"]=[&]() {
    json return_ZzZIGCu=json({});
    
        if (name.pShadingRatePaletteEntries==NULL){
            return_ZzZIGCu["null"]=true;
            return return_ZzZIGCu;
        }
        
        return_ZzZIGCu["members"]={};
        for(int i=0; i < name.shadingRatePaletteEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_ALYxTjv=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.pShadingRatePaletteEntries[i]);}();
            return_ZzZIGCu["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZzZIGCu;
        }();
return result;}

    VkShadingRatePaletteNV deserialize_VkShadingRatePaletteNV(json name){
        auto result=VkShadingRatePaletteNV();
    
[&]() {
result.shadingRatePaletteEntryCount=deserialize_uint32_t(name["members"]["shadingRatePaletteEntryCount"]);}();
[&]() {
VkShadingRatePaletteEntryNV* temp_UqEAoiS;[&]() {

        if (name["members"]["pShadingRatePaletteEntries"].contains("null")){
        temp_UqEAoiS=NULL;
        }
    temp_UqEAoiS=(VkShadingRatePaletteEntryNV*)malloc(result.shadingRatePaletteEntryCount*sizeof(VkShadingRatePaletteEntryNV));
        for (int wmfuXit=0; wmfuXit < result.shadingRatePaletteEntryCount; wmfuXit++){
            [&]() {
temp_UqEAoiS[wmfuXit]=deserialize_VkShadingRatePaletteEntryNV(name["members"]["pShadingRatePaletteEntries"]["members"][wmfuXit]);}();;
        }
        }();result.pShadingRatePaletteEntries=temp_UqEAoiS;}();
return result;}

    json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(VkPipelineViewportShadingRateImageStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GpyPXxu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OKtglYI=json({});
    
        if (name.pNext==NULL){
            return_OKtglYI["null"]=true;
            return return_OKtglYI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImageEnable"]=[&]() {
    json return_zRhOBRL=json({});
    return_zRhOBRL=[&]() {
    json return_pEwPJPd=json({});
    return serialize_uint32_t(name.shadingRateImageEnable);}();return return_zRhOBRL;}();
result["members"]["viewportCount"]=[&]() {
    json return_NlYvxqW=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pShadingRatePalettes"]=[&]() {
    json return_lwjDvRh=json({});
    
        if (name.pShadingRatePalettes==NULL){
            return_lwjDvRh["null"]=true;
            return return_lwjDvRh;
        }
        
        return_lwjDvRh["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_ciOayPb=json({});
    return serialize_VkShadingRatePaletteNV(name.pShadingRatePalettes[i]);}();
            return_lwjDvRh["members"][std::to_string(i)].push_back(temp);
        }
        return return_lwjDvRh;
        }();
return result;}

    VkPipelineViewportShadingRateImageStateCreateInfoNV deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(json name){
        auto result=VkPipelineViewportShadingRateImageStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UKNknCq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UKNknCq=NULL;
        }
    temp_UKNknCq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UKNknCq;}();
[&]() {
[&]() {
result.shadingRateImageEnable=deserialize_uint32_t(name["members"]["shadingRateImageEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkShadingRatePaletteNV* temp_SBJeUOE;[&]() {

        if (name["members"]["pShadingRatePalettes"].contains("null")){
        temp_SBJeUOE=NULL;
        }
    temp_SBJeUOE=(VkShadingRatePaletteNV*)malloc(result.viewportCount*sizeof(VkShadingRatePaletteNV));
        for (int NePxVYM=0; NePxVYM < result.viewportCount; NePxVYM++){
            [&]() {
temp_SBJeUOE[NePxVYM]=deserialize_VkShadingRatePaletteNV(name["members"]["pShadingRatePalettes"]["members"][NePxVYM]);}();;
        }
        }();result.pShadingRatePalettes=temp_SBJeUOE;}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(VkPhysicalDeviceShadingRateImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QSgPOix=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EVKaKki=json({});
    
        if (name.pNext==NULL){
            return_EVKaKki["null"]=true;
            return return_EVKaKki;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImage"]=[&]() {
    json return_Fpflncg=json({});
    return_Fpflncg=[&]() {
    json return_MVwBbnP=json({});
    return serialize_uint32_t(name.shadingRateImage);}();return return_Fpflncg;}();
result["members"]["shadingRateCoarseSampleOrder"]=[&]() {
    json return_IICTVYa=json({});
    return_IICTVYa=[&]() {
    json return_BgpfMXd=json({});
    return serialize_uint32_t(name.shadingRateCoarseSampleOrder);}();return return_IICTVYa;}();
return result;}

    VkPhysicalDeviceShadingRateImageFeaturesNV deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shadingRateImage=deserialize_uint32_t(name["members"]["shadingRateImage"]);}();}();
[&]() {
[&]() {
result.shadingRateCoarseSampleOrder=deserialize_uint32_t(name["members"]["shadingRateCoarseSampleOrder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(VkPhysicalDeviceShadingRateImagePropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NmPEkPW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DsnUYpK=json({});
    
        if (name.pNext==NULL){
            return_DsnUYpK["null"]=true;
            return return_DsnUYpK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateTexelSize"]=[&]() {
    json return_nBLgzhg=json({});
    return serialize_VkExtent2D(name.shadingRateTexelSize);}();
result["members"]["shadingRatePaletteSize"]=[&]() {
    json return_lUmrhFt=json({});
    return serialize_uint32_t(name.shadingRatePaletteSize);}();
result["members"]["shadingRateMaxCoarseSamples"]=[&]() {
    json return_hBwwDld=json({});
    return serialize_uint32_t(name.shadingRateMaxCoarseSamples);}();
return result;}

    VkPhysicalDeviceShadingRateImagePropertiesNV deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImagePropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shadingRateTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateTexelSize"]);}();
[&]() {
result.shadingRatePaletteSize=deserialize_uint32_t(name["members"]["shadingRatePaletteSize"]);}();
[&]() {
result.shadingRateMaxCoarseSamples=deserialize_uint32_t(name["members"]["shadingRateMaxCoarseSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xLCqWxB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MKfJsrp=json({});
    
        if (name.pNext==NULL){
            return_MKfJsrp["null"]=true;
            return return_MKfJsrp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["invocationMask"]=[&]() {
    json return_vSyZWbt=json({});
    return_vSyZWbt=[&]() {
    json return_lQrASRS=json({});
    return serialize_uint32_t(name.invocationMask);}();return return_vSyZWbt;}();
return result;}

    VkPhysicalDeviceInvocationMaskFeaturesHUAWEI deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceInvocationMaskFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.invocationMask=deserialize_uint32_t(name["members"]["invocationMask"]);}();}();
return result;}

    json serialize_VkCoarseSampleLocationNV(VkCoarseSampleLocationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pixelX"]=[&]() {
    json return_DVIOsSW=json({});
    return serialize_uint32_t(name.pixelX);}();
result["members"]["pixelY"]=[&]() {
    json return_IFGPkXN=json({});
    return serialize_uint32_t(name.pixelY);}();
result["members"]["sample"]=[&]() {
    json return_yRMQYOa=json({});
    return serialize_uint32_t(name.sample);}();
return result;}

    VkCoarseSampleLocationNV deserialize_VkCoarseSampleLocationNV(json name){
        auto result=VkCoarseSampleLocationNV();
    
[&]() {
result.pixelX=deserialize_uint32_t(name["members"]["pixelX"]);}();
[&]() {
result.pixelY=deserialize_uint32_t(name["members"]["pixelY"]);}();
[&]() {
result.sample=deserialize_uint32_t(name["members"]["sample"]);}();
return result;}

    json serialize_VkCoarseSampleOrderCustomNV(VkCoarseSampleOrderCustomNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRate"]=[&]() {
    json return_pKKqqJK=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.shadingRate);}();
result["members"]["sampleCount"]=[&]() {
    json return_WAfJaNR=json({});
    return serialize_uint32_t(name.sampleCount);}();
result["members"]["sampleLocationCount"]=[&]() {
    json return_jVkCTLH=json({});
    return serialize_uint32_t(name.sampleLocationCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_RHHMQdn=json({});
    
        if (name.pSampleLocations==NULL){
            return_RHHMQdn["null"]=true;
            return return_RHHMQdn;
        }
        
        return_RHHMQdn["members"]={};
        for(int i=0; i < name.sampleLocationCount; i++){
            json temp;
            temp=[&]() {
    json return_FOPbCsb=json({});
    return serialize_VkCoarseSampleLocationNV(name.pSampleLocations[i]);}();
            return_RHHMQdn["members"][std::to_string(i)].push_back(temp);
        }
        return return_RHHMQdn;
        }();
return result;}

    VkCoarseSampleOrderCustomNV deserialize_VkCoarseSampleOrderCustomNV(json name){
        auto result=VkCoarseSampleOrderCustomNV();
    
[&]() {
result.shadingRate=deserialize_VkShadingRatePaletteEntryNV(name["members"]["shadingRate"]);}();
[&]() {
result.sampleCount=deserialize_uint32_t(name["members"]["sampleCount"]);}();
[&]() {
result.sampleLocationCount=deserialize_uint32_t(name["members"]["sampleLocationCount"]);}();
[&]() {
VkCoarseSampleLocationNV* temp_SCdiGKC;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_SCdiGKC=NULL;
        }
    temp_SCdiGKC=(VkCoarseSampleLocationNV*)malloc(result.sampleLocationCount*sizeof(VkCoarseSampleLocationNV));
        for (int SDDirKQ=0; SDDirKQ < result.sampleLocationCount; SDDirKQ++){
            [&]() {
temp_SCdiGKC[SDDirKQ]=deserialize_VkCoarseSampleLocationNV(name["members"]["pSampleLocations"]["members"][SDDirKQ]);}();;
        }
        }();result.pSampleLocations=temp_SCdiGKC;}();
return result;}

    json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MBdgTRJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mQqtPOy=json({});
    
        if (name.pNext==NULL){
            return_mQqtPOy["null"]=true;
            return return_mQqtPOy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleOrderType"]=[&]() {
    json return_LRgygph=json({});
    return serialize_VkCoarseSampleOrderTypeNV(name.sampleOrderType);}();
result["members"]["customSampleOrderCount"]=[&]() {
    json return_ttnMuix=json({});
    return serialize_uint32_t(name.customSampleOrderCount);}();
result["members"]["pCustomSampleOrders"]=[&]() {
    json return_gWGAFEE=json({});
    
        if (name.pCustomSampleOrders==NULL){
            return_gWGAFEE["null"]=true;
            return return_gWGAFEE;
        }
        
        return_gWGAFEE["members"]={};
        for(int i=0; i < name.customSampleOrderCount; i++){
            json temp;
            temp=[&]() {
    json return_GfhTEFG=json({});
    return serialize_VkCoarseSampleOrderCustomNV(name.pCustomSampleOrders[i]);}();
            return_gWGAFEE["members"][std::to_string(i)].push_back(temp);
        }
        return return_gWGAFEE;
        }();
return result;}

    VkPipelineViewportCoarseSampleOrderStateCreateInfoNV deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(json name){
        auto result=VkPipelineViewportCoarseSampleOrderStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_viSxYWT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_viSxYWT=NULL;
        }
    temp_viSxYWT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_viSxYWT;}();
[&]() {
result.sampleOrderType=deserialize_VkCoarseSampleOrderTypeNV(name["members"]["sampleOrderType"]);}();
[&]() {
result.customSampleOrderCount=deserialize_uint32_t(name["members"]["customSampleOrderCount"]);}();
[&]() {
VkCoarseSampleOrderCustomNV* temp_PUgLqzb;[&]() {

        if (name["members"]["pCustomSampleOrders"].contains("null")){
        temp_PUgLqzb=NULL;
        }
    temp_PUgLqzb=(VkCoarseSampleOrderCustomNV*)malloc(result.customSampleOrderCount*sizeof(VkCoarseSampleOrderCustomNV));
        for (int QfrUtSs=0; QfrUtSs < result.customSampleOrderCount; QfrUtSs++){
            [&]() {
temp_PUgLqzb[QfrUtSs]=deserialize_VkCoarseSampleOrderCustomNV(name["members"]["pCustomSampleOrders"]["members"][QfrUtSs]);}();;
        }
        }();result.pCustomSampleOrders=temp_PUgLqzb;}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesNV(VkPhysicalDeviceMeshShaderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lVBCBlF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QKgFrBd=json({});
    
        if (name.pNext==NULL){
            return_QKgFrBd["null"]=true;
            return return_QKgFrBd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_xNUyXPk=json({});
    return_xNUyXPk=[&]() {
    json return_eDFZHNs=json({});
    return serialize_uint32_t(name.taskShader);}();return return_xNUyXPk;}();
result["members"]["meshShader"]=[&]() {
    json return_dBcoBRi=json({});
    return_dBcoBRi=[&]() {
    json return_vsocpPV=json({});
    return serialize_uint32_t(name.meshShader);}();return return_dBcoBRi;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesNV deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesNV(VkPhysicalDeviceMeshShaderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HXdSaFq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eGgTqqE=json({});
    
        if (name.pNext==NULL){
            return_eGgTqqE["null"]=true;
            return return_eGgTqqE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDrawMeshTasksCount"]=[&]() {
    json return_DGzHjUP=json({});
    return serialize_uint32_t(name.maxDrawMeshTasksCount);}();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_GuqzdGq=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_LxXQGQz=json({});
    
        return_LxXQGQz["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_NAafDbS=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_LxXQGQz["members"][std::to_string(i)].push_back(temp);
        }
        return return_LxXQGQz;
        }();
result["members"]["maxTaskTotalMemorySize"]=[&]() {
    json return_GrinOKw=json({});
    return serialize_uint32_t(name.maxTaskTotalMemorySize);}();
result["members"]["maxTaskOutputCount"]=[&]() {
    json return_NJgSXNB=json({});
    return serialize_uint32_t(name.maxTaskOutputCount);}();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_TVxhkou=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_NjtybRM=json({});
    
        return_NjtybRM["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_OpBCjwe=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_NjtybRM["members"][std::to_string(i)].push_back(temp);
        }
        return return_NjtybRM;
        }();
result["members"]["maxMeshTotalMemorySize"]=[&]() {
    json return_JcIDFcP=json({});
    return serialize_uint32_t(name.maxMeshTotalMemorySize);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_eHYujtp=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_zxOmLCY=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_FAJIMJU=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_DpIevrX=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_EZOidEt=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesNV deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDrawMeshTasksCount=deserialize_uint32_t(name["members"]["maxDrawMeshTasksCount"]);}();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int jmDGETm=0; jmDGETm < 3; jmDGETm++){
            [&]() {
result.maxTaskWorkGroupSize[jmDGETm]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][jmDGETm]);}();;
        }
        }();
[&]() {
result.maxTaskTotalMemorySize=deserialize_uint32_t(name["members"]["maxTaskTotalMemorySize"]);}();
[&]() {
result.maxTaskOutputCount=deserialize_uint32_t(name["members"]["maxTaskOutputCount"]);}();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int uUeXjRb=0; uUeXjRb < 3; uUeXjRb++){
            [&]() {
result.maxMeshWorkGroupSize[uUeXjRb]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][uUeXjRb]);}();;
        }
        }();
[&]() {
result.maxMeshTotalMemorySize=deserialize_uint32_t(name["members"]["maxMeshTotalMemorySize"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandNV(VkDrawMeshTasksIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["taskCount"]=[&]() {
    json return_kwSJRJs=json({});
    return serialize_uint32_t(name.taskCount);}();
result["members"]["firstTask"]=[&]() {
    json return_UrCUXOV=json({});
    return serialize_uint32_t(name.firstTask);}();
return result;}

    VkDrawMeshTasksIndirectCommandNV deserialize_VkDrawMeshTasksIndirectCommandNV(json name){
        auto result=VkDrawMeshTasksIndirectCommandNV();
    
[&]() {
result.taskCount=deserialize_uint32_t(name["members"]["taskCount"]);}();
[&]() {
result.firstTask=deserialize_uint32_t(name["members"]["firstTask"]);}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(VkPhysicalDeviceMeshShaderFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cxksTCv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lGSJSYr=json({});
    
        if (name.pNext==NULL){
            return_lGSJSYr["null"]=true;
            return return_lGSJSYr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_jBLNORh=json({});
    return_jBLNORh=[&]() {
    json return_kLcnZhu=json({});
    return serialize_uint32_t(name.taskShader);}();return return_jBLNORh;}();
result["members"]["meshShader"]=[&]() {
    json return_RJJlANg=json({});
    return_RJJlANg=[&]() {
    json return_Zaucihr=json({});
    return serialize_uint32_t(name.meshShader);}();return return_RJJlANg;}();
result["members"]["multiviewMeshShader"]=[&]() {
    json return_hXgUUlF=json({});
    return_hXgUUlF=[&]() {
    json return_EuzbXbu=json({});
    return serialize_uint32_t(name.multiviewMeshShader);}();return return_hXgUUlF;}();
result["members"]["primitiveFragmentShadingRateMeshShader"]=[&]() {
    json return_YfOGdiH=json({});
    return_YfOGdiH=[&]() {
    json return_zHJCPmK=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateMeshShader);}();return return_YfOGdiH;}();
result["members"]["meshShaderQueries"]=[&]() {
    json return_Mzilkxy=json({});
    return_Mzilkxy=[&]() {
    json return_seNrdMW=json({});
    return serialize_uint32_t(name.meshShaderQueries);}();return return_Mzilkxy;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesEXT deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
[&]() {
[&]() {
result.multiviewMeshShader=deserialize_uint32_t(name["members"]["multiviewMeshShader"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateMeshShader=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateMeshShader"]);}();}();
[&]() {
[&]() {
result.meshShaderQueries=deserialize_uint32_t(name["members"]["meshShaderQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(VkPhysicalDeviceMeshShaderPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pyabNaE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dUkhESc=json({});
    
        if (name.pNext==NULL){
            return_dUkhESc["null"]=true;
            return return_dUkhESc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTaskWorkGroupTotalCount"]=[&]() {
    json return_VeysUte=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupTotalCount);}();
result["members"]["maxTaskWorkGroupCount"]=[&]() {
    json return_PrmHyMe=json({});
    
        return_PrmHyMe["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_dJyirrE=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupCount[i]);}();
            return_PrmHyMe["members"][std::to_string(i)].push_back(temp);
        }
        return return_PrmHyMe;
        }();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_lFIjuoH=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_OzdNPya=json({});
    
        return_OzdNPya["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_RdCtMAr=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_OzdNPya["members"][std::to_string(i)].push_back(temp);
        }
        return return_OzdNPya;
        }();
result["members"]["maxTaskPayloadSize"]=[&]() {
    json return_MbGOXAJ=json({});
    return serialize_uint32_t(name.maxTaskPayloadSize);}();
result["members"]["maxTaskSharedMemorySize"]=[&]() {
    json return_yPoJcNI=json({});
    return serialize_uint32_t(name.maxTaskSharedMemorySize);}();
result["members"]["maxTaskPayloadAndSharedMemorySize"]=[&]() {
    json return_UDcrMcp=json({});
    return serialize_uint32_t(name.maxTaskPayloadAndSharedMemorySize);}();
result["members"]["maxMeshWorkGroupTotalCount"]=[&]() {
    json return_bIkukBz=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupTotalCount);}();
result["members"]["maxMeshWorkGroupCount"]=[&]() {
    json return_zlJRSjI=json({});
    
        return_zlJRSjI["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_wPXevlN=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupCount[i]);}();
            return_zlJRSjI["members"][std::to_string(i)].push_back(temp);
        }
        return return_zlJRSjI;
        }();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_MlYYUzL=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_TnXisuR=json({});
    
        return_TnXisuR["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_YFVYHNd=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_TnXisuR["members"][std::to_string(i)].push_back(temp);
        }
        return return_TnXisuR;
        }();
result["members"]["maxMeshSharedMemorySize"]=[&]() {
    json return_RGnfFvt=json({});
    return serialize_uint32_t(name.maxMeshSharedMemorySize);}();
result["members"]["maxMeshPayloadAndSharedMemorySize"]=[&]() {
    json return_sMfLVWM=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndSharedMemorySize);}();
result["members"]["maxMeshOutputMemorySize"]=[&]() {
    json return_BAKCwAV=json({});
    return serialize_uint32_t(name.maxMeshOutputMemorySize);}();
result["members"]["maxMeshPayloadAndOutputMemorySize"]=[&]() {
    json return_zSIlrDD=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndOutputMemorySize);}();
result["members"]["maxMeshOutputComponents"]=[&]() {
    json return_KkcEiNz=json({});
    return serialize_uint32_t(name.maxMeshOutputComponents);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_UUXWocr=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_BVeYkHH=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshOutputLayers"]=[&]() {
    json return_wPDBsjz=json({});
    return serialize_uint32_t(name.maxMeshOutputLayers);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_KTZtUEc=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_WTTXfQZ=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_MumZWgp=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
result["members"]["maxPreferredTaskWorkGroupInvocations"]=[&]() {
    json return_edIYWcB=json({});
    return serialize_uint32_t(name.maxPreferredTaskWorkGroupInvocations);}();
result["members"]["maxPreferredMeshWorkGroupInvocations"]=[&]() {
    json return_soPhyqv=json({});
    return serialize_uint32_t(name.maxPreferredMeshWorkGroupInvocations);}();
result["members"]["prefersLocalInvocationVertexOutput"]=[&]() {
    json return_GpivfrR=json({});
    return_GpivfrR=[&]() {
    json return_jOoQCDN=json({});
    return serialize_uint32_t(name.prefersLocalInvocationVertexOutput);}();return return_GpivfrR;}();
result["members"]["prefersLocalInvocationPrimitiveOutput"]=[&]() {
    json return_qIhTYlr=json({});
    return_qIhTYlr=[&]() {
    json return_iYSuowW=json({});
    return serialize_uint32_t(name.prefersLocalInvocationPrimitiveOutput);}();return return_qIhTYlr;}();
result["members"]["prefersCompactVertexOutput"]=[&]() {
    json return_FOHTQXH=json({});
    return_FOHTQXH=[&]() {
    json return_DyOOjcd=json({});
    return serialize_uint32_t(name.prefersCompactVertexOutput);}();return return_FOHTQXH;}();
result["members"]["prefersCompactPrimitiveOutput"]=[&]() {
    json return_KcSJzmf=json({});
    return_KcSJzmf=[&]() {
    json return_QNXlPjD=json({});
    return serialize_uint32_t(name.prefersCompactPrimitiveOutput);}();return return_KcSJzmf;}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesEXT deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTaskWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxTaskWorkGroupTotalCount"]);}();
[&]() {

        for (int hfaHWwR=0; hfaHWwR < 3; hfaHWwR++){
            [&]() {
result.maxTaskWorkGroupCount[hfaHWwR]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupCount"]["members"][hfaHWwR]);}();;
        }
        }();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int KYFnruD=0; KYFnruD < 3; KYFnruD++){
            [&]() {
result.maxTaskWorkGroupSize[KYFnruD]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][KYFnruD]);}();;
        }
        }();
[&]() {
result.maxTaskPayloadSize=deserialize_uint32_t(name["members"]["maxTaskPayloadSize"]);}();
[&]() {
result.maxTaskSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskSharedMemorySize"]);}();
[&]() {
result.maxTaskPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxMeshWorkGroupTotalCount"]);}();
[&]() {

        for (int HuJkEaZ=0; HuJkEaZ < 3; HuJkEaZ++){
            [&]() {
result.maxMeshWorkGroupCount[HuJkEaZ]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupCount"]["members"][HuJkEaZ]);}();;
        }
        }();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int ihOCqur=0; ihOCqur < 3; ihOCqur++){
            [&]() {
result.maxMeshWorkGroupSize[ihOCqur]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][ihOCqur]);}();;
        }
        }();
[&]() {
result.maxMeshSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshSharedMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshOutputMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndOutputMemorySize"]);}();
[&]() {
result.maxMeshOutputComponents=deserialize_uint32_t(name["members"]["maxMeshOutputComponents"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshOutputLayers=deserialize_uint32_t(name["members"]["maxMeshOutputLayers"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
[&]() {
result.maxPreferredTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredTaskWorkGroupInvocations"]);}();
[&]() {
result.maxPreferredMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredMeshWorkGroupInvocations"]);}();
[&]() {
[&]() {
result.prefersLocalInvocationVertexOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersLocalInvocationPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationPrimitiveOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactVertexOutput=deserialize_uint32_t(name["members"]["prefersCompactVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersCompactPrimitiveOutput"]);}();}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandEXT(VkDrawMeshTasksIndirectCommandEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupCountX"]=[&]() {
    json return_RJklPod=json({});
    return serialize_uint32_t(name.groupCountX);}();
result["members"]["groupCountY"]=[&]() {
    json return_JQVPWMj=json({});
    return serialize_uint32_t(name.groupCountY);}();
result["members"]["groupCountZ"]=[&]() {
    json return_fkJlQEZ=json({});
    return serialize_uint32_t(name.groupCountZ);}();
return result;}

    VkDrawMeshTasksIndirectCommandEXT deserialize_VkDrawMeshTasksIndirectCommandEXT(json name){
        auto result=VkDrawMeshTasksIndirectCommandEXT();
    
[&]() {
result.groupCountX=deserialize_uint32_t(name["members"]["groupCountX"]);}();
[&]() {
result.groupCountY=deserialize_uint32_t(name["members"]["groupCountY"]);}();
[&]() {
result.groupCountZ=deserialize_uint32_t(name["members"]["groupCountZ"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoNV(VkRayTracingShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sJCsiGJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EBOxcQz=json({});
    
        if (name.pNext==NULL){
            return_EBOxcQz["null"]=true;
            return return_EBOxcQz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_jRVceLK=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_vxqovtI=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_GuTuMiz=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_fYzbKzR=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_arcKmxU=json({});
    return serialize_uint32_t(name.intersectionShader);}();
return result;}

    VkRayTracingShaderGroupCreateInfoNV deserialize_VkRayTracingShaderGroupCreateInfoNV(json name){
        auto result=VkRayTracingShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fxsDVkF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fxsDVkF=NULL;
        }
    temp_fxsDVkF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fxsDVkF;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoKHR(VkRayTracingShaderGroupCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AzRJtff=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DUncchn=json({});
    
        if (name.pNext==NULL){
            return_DUncchn["null"]=true;
            return return_DUncchn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_exKzroX=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_jUZhIwq=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_LZBoTgK=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_llrooNU=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_VySzDde=json({});
    return serialize_uint32_t(name.intersectionShader);}();
result["members"]["pShaderGroupCaptureReplayHandle"]=[&]() {
    json return_cjnBPkR=json({});
    
        if (name.pShaderGroupCaptureReplayHandle==NULL){
            return_cjnBPkR["null"]=true;
            return return_cjnBPkR;
        }
        return serialize_void_p(name.pShaderGroupCaptureReplayHandle);
}();
return result;}

    VkRayTracingShaderGroupCreateInfoKHR deserialize_VkRayTracingShaderGroupCreateInfoKHR(json name){
        auto result=VkRayTracingShaderGroupCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SmsMSEt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SmsMSEt=NULL;
        }
    temp_SmsMSEt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SmsMSEt;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
[&]() {
void* temp_OJSobzi;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_OJSobzi=NULL;
        }
    temp_OJSobzi=deserialize_void_p(name["members"]["pShaderGroupCaptureReplayHandle"]);
}();result.pShaderGroupCaptureReplayHandle=temp_OJSobzi;}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoNV(VkRayTracingPipelineCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YUFrZlz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RcGpMAd=json({});
    
        if (name.pNext==NULL){
            return_RcGpMAd["null"]=true;
            return return_RcGpMAd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UKSLXrs=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_YgRuZwZ=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_KNuNCTU=json({});
    
        if (name.pStages==NULL){
            return_KNuNCTU["null"]=true;
            return return_KNuNCTU;
        }
        
        return_KNuNCTU["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_yObEDGy=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_KNuNCTU["members"][std::to_string(i)].push_back(temp);
        }
        return return_KNuNCTU;
        }();
result["members"]["groupCount"]=[&]() {
    json return_AKFVsEx=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_XkfcDkw=json({});
    
        if (name.pGroups==NULL){
            return_XkfcDkw["null"]=true;
            return return_XkfcDkw;
        }
        
        return_XkfcDkw["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_WMNMfTU=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_XkfcDkw["members"][std::to_string(i)].push_back(temp);
        }
        return return_XkfcDkw;
        }();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_WsahBLH=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["layout"]=[&]() {
    json return_xaYcUHW=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_zuWSKxy=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_WKlyZma=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoNV deserialize_VkRayTracingPipelineCreateInfoNV(json name){
        auto result=VkRayTracingPipelineCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_etRKTSH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_etRKTSH=NULL;
        }
    temp_etRKTSH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_etRKTSH;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_PNUzIew;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_PNUzIew=NULL;
        }
    temp_PNUzIew=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int rgsyQND=0; rgsyQND < result.stageCount; rgsyQND++){
            [&]() {
temp_PNUzIew[rgsyQND]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][rgsyQND]);}();;
        }
        }();result.pStages=temp_PNUzIew;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoNV* temp_mfzPkrv;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_mfzPkrv=NULL;
        }
    temp_mfzPkrv=(VkRayTracingShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoNV));
        for (int QWVJpcO=0; QWVJpcO < result.groupCount; QWVJpcO++){
            [&]() {
temp_mfzPkrv[QWVJpcO]=deserialize_VkRayTracingShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][QWVJpcO]);}();;
        }
        }();result.pGroups=temp_mfzPkrv;}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoKHR(VkRayTracingPipelineCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tLDxWDK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LFAFGfg=json({});
    
        if (name.pNext==NULL){
            return_LFAFGfg["null"]=true;
            return return_LFAFGfg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_efdXwTK=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_nLDdEby=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_kUdaLge=json({});
    
        if (name.pStages==NULL){
            return_kUdaLge["null"]=true;
            return return_kUdaLge;
        }
        
        return_kUdaLge["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_wwvNVPI=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_kUdaLge["members"][std::to_string(i)].push_back(temp);
        }
        return return_kUdaLge;
        }();
result["members"]["groupCount"]=[&]() {
    json return_bdKFBNA=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_TpYvYzF=json({});
    
        if (name.pGroups==NULL){
            return_TpYvYzF["null"]=true;
            return return_TpYvYzF;
        }
        
        return_TpYvYzF["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_IIMhDmk=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(name.pGroups[i]);}();
            return_TpYvYzF["members"][std::to_string(i)].push_back(temp);
        }
        return return_TpYvYzF;
        }();
result["members"]["maxPipelineRayRecursionDepth"]=[&]() {
    json return_sREIrgi=json({});
    return serialize_uint32_t(name.maxPipelineRayRecursionDepth);}();
result["members"]["pLibraryInfo"]=[&]() {
    json return_meqecav=json({});
    
        if (name.pLibraryInfo==NULL){
            return_meqecav["null"]=true;
            return return_meqecav;
        }
        return_meqecav=[&]() {
    json return_QoWHLaK=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*name.pLibraryInfo);}();
return return_meqecav;}();
result["members"]["pLibraryInterface"]=[&]() {
    json return_rnIbXej=json({});
    
        if (name.pLibraryInterface==NULL){
            return_rnIbXej["null"]=true;
            return return_rnIbXej;
        }
        return_rnIbXej=[&]() {
    json return_ciYYoNz=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*name.pLibraryInterface);}();
return return_rnIbXej;}();
result["members"]["pDynamicState"]=[&]() {
    json return_ERizYUO=json({});
    
        if (name.pDynamicState==NULL){
            return_ERizYUO["null"]=true;
            return return_ERizYUO;
        }
        return_ERizYUO=[&]() {
    json return_dNJLZkw=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_ERizYUO;}();
result["members"]["layout"]=[&]() {
    json return_FwOvTEF=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_LxOxazZ=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_DIDEsZx=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoKHR deserialize_VkRayTracingPipelineCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xNotVhf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xNotVhf=NULL;
        }
    temp_xNotVhf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xNotVhf;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_BIKJKpu;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_BIKJKpu=NULL;
        }
    temp_BIKJKpu=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int vmEtNRC=0; vmEtNRC < result.stageCount; vmEtNRC++){
            [&]() {
temp_BIKJKpu[vmEtNRC]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][vmEtNRC]);}();;
        }
        }();result.pStages=temp_BIKJKpu;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoKHR* temp_PfpTitW;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_PfpTitW=NULL;
        }
    temp_PfpTitW=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoKHR));
        for (int yFxKSSI=0; yFxKSSI < result.groupCount; yFxKSSI++){
            [&]() {
temp_PfpTitW[yFxKSSI]=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name["members"]["pGroups"]["members"][yFxKSSI]);}();;
        }
        }();result.pGroups=temp_PfpTitW;}();
[&]() {
result.maxPipelineRayRecursionDepth=deserialize_uint32_t(name["members"]["maxPipelineRayRecursionDepth"]);}();
[&]() {
VkPipelineLibraryCreateInfoKHR* temp_ryJCkci;[&]() {

        if (name["members"]["pLibraryInfo"].contains("null")){
        temp_ryJCkci=NULL;
        }
    [&]() {
*(temp_ryJCkci)=deserialize_VkPipelineLibraryCreateInfoKHR(name["members"]["pLibraryInfo"]);}();
}();result.pLibraryInfo=temp_ryJCkci;}();
[&]() {
VkRayTracingPipelineInterfaceCreateInfoKHR* temp_OaScsrq;[&]() {

        if (name["members"]["pLibraryInterface"].contains("null")){
        temp_OaScsrq=NULL;
        }
    [&]() {
*(temp_OaScsrq)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name["members"]["pLibraryInterface"]);}();
}();result.pLibraryInterface=temp_OaScsrq;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_hLJlKoY;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_hLJlKoY=NULL;
        }
    [&]() {
*(temp_hLJlKoY)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_hLJlKoY;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkGeometryTrianglesNV(VkGeometryTrianglesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IlEcnol=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DHgmWRU=json({});
    
        if (name.pNext==NULL){
            return_DHgmWRU["null"]=true;
            return return_DHgmWRU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_pFUPKEi=json({});
    return serialize_VkBuffer(name.vertexData);}();
result["members"]["vertexOffset"]=[&]() {
    json return_eNTIFwe=json({});
    return_eNTIFwe=[&]() {
    json return_hkwtoOz=json({});
    return serialize_uint64_t(name.vertexOffset);}();return return_eNTIFwe;}();
result["members"]["vertexCount"]=[&]() {
    json return_BZLxhrR=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["vertexStride"]=[&]() {
    json return_FFwlzxy=json({});
    return_FFwlzxy=[&]() {
    json return_pMLBIKO=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_FFwlzxy;}();
result["members"]["vertexFormat"]=[&]() {
    json return_JrXRuyW=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["indexData"]=[&]() {
    json return_zklUQDq=json({});
    return serialize_VkBuffer(name.indexData);}();
result["members"]["indexOffset"]=[&]() {
    json return_vTlUEyt=json({});
    return_vTlUEyt=[&]() {
    json return_AvVPhUW=json({});
    return serialize_uint64_t(name.indexOffset);}();return return_vTlUEyt;}();
result["members"]["indexCount"]=[&]() {
    json return_AdPADmP=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["indexType"]=[&]() {
    json return_GEgaUKl=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["transformData"]=[&]() {
    json return_oglsMHe=json({});
    return serialize_VkBuffer(name.transformData);}();
result["members"]["transformOffset"]=[&]() {
    json return_UnagfMM=json({});
    return_UnagfMM=[&]() {
    json return_tmjbJWf=json({});
    return serialize_uint64_t(name.transformOffset);}();return return_UnagfMM;}();
return result;}

    VkGeometryTrianglesNV deserialize_VkGeometryTrianglesNV(json name){
        auto result=VkGeometryTrianglesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QsjlZLT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QsjlZLT=NULL;
        }
    temp_QsjlZLT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QsjlZLT;}();
[&]() {
result.vertexData=deserialize_VkBuffer(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexOffset=deserialize_uint64_t(name["members"]["vertexOffset"]);}();}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.indexData=deserialize_VkBuffer(name["members"]["indexData"]);}();
[&]() {
[&]() {
result.indexOffset=deserialize_uint64_t(name["members"]["indexOffset"]);}();}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.transformData=deserialize_VkBuffer(name["members"]["transformData"]);}();
[&]() {
[&]() {
result.transformOffset=deserialize_uint64_t(name["members"]["transformOffset"]);}();}();
return result;}

    json serialize_VkGeometryAABBNV(VkGeometryAABBNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MrVztKK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IjsjsHV=json({});
    
        if (name.pNext==NULL){
            return_IjsjsHV["null"]=true;
            return return_IjsjsHV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aabbData"]=[&]() {
    json return_qvkcXfL=json({});
    return serialize_VkBuffer(name.aabbData);}();
result["members"]["numAABBs"]=[&]() {
    json return_rflDwlh=json({});
    return serialize_uint32_t(name.numAABBs);}();
result["members"]["stride"]=[&]() {
    json return_eTSRmJs=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["offset"]=[&]() {
    json return_kCReGym=json({});
    return_kCReGym=[&]() {
    json return_IcVwyKb=json({});
    return serialize_uint64_t(name.offset);}();return return_kCReGym;}();
return result;}

    VkGeometryAABBNV deserialize_VkGeometryAABBNV(json name){
        auto result=VkGeometryAABBNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qSUvrMz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qSUvrMz=NULL;
        }
    temp_qSUvrMz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qSUvrMz;}();
[&]() {
result.aabbData=deserialize_VkBuffer(name["members"]["aabbData"]);}();
[&]() {
result.numAABBs=deserialize_uint32_t(name["members"]["numAABBs"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkGeometryDataNV(VkGeometryDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_ySnsTKu=json({});
    return serialize_VkGeometryTrianglesNV(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_YVmiWyd=json({});
    return serialize_VkGeometryAABBNV(name.aabbs);}();
return result;}

    VkGeometryDataNV deserialize_VkGeometryDataNV(json name){
        auto result=VkGeometryDataNV();
    
[&]() {
result.triangles=deserialize_VkGeometryTrianglesNV(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkGeometryAABBNV(name["members"]["aabbs"]);}();
return result;}

    json serialize_VkGeometryNV(VkGeometryNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vUCCebk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RYhPaMp=json({});
    
        if (name.pNext==NULL){
            return_RYhPaMp["null"]=true;
            return return_RYhPaMp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_VTQliMU=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_tbVnfvo=json({});
    return serialize_VkGeometryDataNV(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_MhcAbMQ=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkGeometryNV deserialize_VkGeometryNV(json name){
        auto result=VkGeometryNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BBiMSzJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BBiMSzJ=NULL;
        }
    temp_BBiMSzJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BBiMSzJ;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkGeometryDataNV(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureInfoNV(VkAccelerationStructureInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DzLlvxX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vjElWkZ=json({});
    
        if (name.pNext==NULL){
            return_vjElWkZ["null"]=true;
            return return_vjElWkZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_HIcCPUj=json({});
    return serialize_VkAccelerationStructureTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_UBtdtfT=json({});
    return serialize_VkBuildAccelerationStructureFlagsNV(name.flags);}();
result["members"]["instanceCount"]=[&]() {
    json return_xamGcef=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["geometryCount"]=[&]() {
    json return_tseQMea=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_deKyHjd=json({});
    
        if (name.pGeometries==NULL){
            return_deKyHjd["null"]=true;
            return return_deKyHjd;
        }
        
        return_deKyHjd["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_oimPchD=json({});
    return serialize_VkGeometryNV(name.pGeometries[i]);}();
            return_deKyHjd["members"][std::to_string(i)].push_back(temp);
        }
        return return_deKyHjd;
        }();
return result;}

    VkAccelerationStructureInfoNV deserialize_VkAccelerationStructureInfoNV(json name){
        auto result=VkAccelerationStructureInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZnUMGDC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZnUMGDC=NULL;
        }
    temp_ZnUMGDC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZnUMGDC;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsNV(name["members"]["flags"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkGeometryNV* temp_MnziIzM;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_MnziIzM=NULL;
        }
    temp_MnziIzM=(VkGeometryNV*)malloc(result.geometryCount*sizeof(VkGeometryNV));
        for (int IuaBbkb=0; IuaBbkb < result.geometryCount; IuaBbkb++){
            [&]() {
temp_MnziIzM[IuaBbkb]=deserialize_VkGeometryNV(name["members"]["pGeometries"]["members"][IuaBbkb]);}();;
        }
        }();result.pGeometries=temp_MnziIzM;}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoNV(VkAccelerationStructureCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qXprqtk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_whhhQSS=json({});
    
        if (name.pNext==NULL){
            return_whhhQSS["null"]=true;
            return return_whhhQSS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compactedSize"]=[&]() {
    json return_IpSYJGK=json({});
    return_IpSYJGK=[&]() {
    json return_NeFHzlw=json({});
    return serialize_uint64_t(name.compactedSize);}();return return_IpSYJGK;}();
result["members"]["info"]=[&]() {
    json return_SbFkAOf=json({});
    return serialize_VkAccelerationStructureInfoNV(name.info);}();
return result;}

    VkAccelerationStructureCreateInfoNV deserialize_VkAccelerationStructureCreateInfoNV(json name){
        auto result=VkAccelerationStructureCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JuLArBB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JuLArBB=NULL;
        }
    temp_JuLArBB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JuLArBB;}();
[&]() {
[&]() {
result.compactedSize=deserialize_uint64_t(name["members"]["compactedSize"]);}();}();
[&]() {
result.info=deserialize_VkAccelerationStructureInfoNV(name["members"]["info"]);}();
return result;}

    json serialize_VkBindAccelerationStructureMemoryInfoNV(VkBindAccelerationStructureMemoryInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qDSHtGY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DmrvNhQ=json({});
    
        if (name.pNext==NULL){
            return_DmrvNhQ["null"]=true;
            return return_DmrvNhQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_ftWmjiW=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
result["members"]["memory"]=[&]() {
    json return_sbCfmHO=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xMXVega=json({});
    return_xMXVega=[&]() {
    json return_CFhWiKi=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xMXVega;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_oLczkvu=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_PFDpRHc=json({});
    
        if (name.pDeviceIndices==NULL){
            return_PFDpRHc["null"]=true;
            return return_PFDpRHc;
        }
        
        return_PFDpRHc["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_bZCKmWV=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_PFDpRHc["members"][std::to_string(i)].push_back(temp);
        }
        return return_PFDpRHc;
        }();
return result;}

    VkBindAccelerationStructureMemoryInfoNV deserialize_VkBindAccelerationStructureMemoryInfoNV(json name){
        auto result=VkBindAccelerationStructureMemoryInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gIGPjNv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gIGPjNv=NULL;
        }
    temp_gIGPjNv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gIGPjNv;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_YFkViBP;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_YFkViBP=NULL;
        }
    temp_YFkViBP=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int WHEcnxk=0; WHEcnxk < result.deviceIndexCount; WHEcnxk++){
            [&]() {
temp_YFkViBP[WHEcnxk]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][WHEcnxk]);}();;
        }
        }();result.pDeviceIndices=temp_YFkViBP;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureKHR(VkWriteDescriptorSetAccelerationStructureKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QKsrHBS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bFODdvv=json({});
    
        if (name.pNext==NULL){
            return_bFODdvv["null"]=true;
            return return_bFODdvv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_OqezHKd=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_hVvLwBX=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_hVvLwBX["null"]=true;
            return return_hVvLwBX;
        }
        
        return_hVvLwBX["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_luIalyj=json({});
    return serialize_VkAccelerationStructureKHR(name.pAccelerationStructures[i]);}();
            return_hVvLwBX["members"][std::to_string(i)].push_back(temp);
        }
        return return_hVvLwBX;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureKHR deserialize_VkWriteDescriptorSetAccelerationStructureKHR(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZXVMTbc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZXVMTbc=NULL;
        }
    temp_ZXVMTbc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZXVMTbc;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureKHR* temp_rsmbkhS;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_rsmbkhS=NULL;
        }
    temp_rsmbkhS=(VkAccelerationStructureKHR*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureKHR));
        for (int nFmKKnb=0; nFmKKnb < result.accelerationStructureCount; nFmKKnb++){
            [&]() {
temp_rsmbkhS[nFmKKnb]=deserialize_VkAccelerationStructureKHR(name["members"]["pAccelerationStructures"]["members"][nFmKKnb]);}();;
        }
        }();result.pAccelerationStructures=temp_rsmbkhS;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureNV(VkWriteDescriptorSetAccelerationStructureNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hGvGDLD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vuLBxpM=json({});
    
        if (name.pNext==NULL){
            return_vuLBxpM["null"]=true;
            return return_vuLBxpM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_YiWtzpG=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_ihhGGVb=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_ihhGGVb["null"]=true;
            return return_ihhGGVb;
        }
        
        return_ihhGGVb["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_ewIppAG=json({});
    return serialize_VkAccelerationStructureNV(name.pAccelerationStructures[i]);}();
            return_ihhGGVb["members"][std::to_string(i)].push_back(temp);
        }
        return return_ihhGGVb;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureNV deserialize_VkWriteDescriptorSetAccelerationStructureNV(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cgjllHc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cgjllHc=NULL;
        }
    temp_cgjllHc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cgjllHc;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureNV* temp_XTvVGDL;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_XTvVGDL=NULL;
        }
    temp_XTvVGDL=(VkAccelerationStructureNV*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureNV));
        for (int CCrMKad=0; CCrMKad < result.accelerationStructureCount; CCrMKad++){
            [&]() {
temp_XTvVGDL[CCrMKad]=deserialize_VkAccelerationStructureNV(name["members"]["pAccelerationStructures"]["members"][CCrMKad]);}();;
        }
        }();result.pAccelerationStructures=temp_XTvVGDL;}();
return result;}

    json serialize_VkAccelerationStructureMemoryRequirementsInfoNV(VkAccelerationStructureMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dQqBVxg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WOZsSVY=json({});
    
        if (name.pNext==NULL){
            return_WOZsSVY["null"]=true;
            return return_WOZsSVY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_XuzoxZS=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsTypeNV(name.type);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_sdaVbqV=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureMemoryRequirementsInfoNV deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(json name){
        auto result=VkAccelerationStructureMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eXqyqHk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eXqyqHk=NULL;
        }
    temp_eXqyqHk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eXqyqHk;}();
[&]() {
result.type=deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(name["members"]["type"]);}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkPhysicalDeviceAccelerationStructureFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HDruRTi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IyxiTim=json({});
    
        if (name.pNext==NULL){
            return_IyxiTim["null"]=true;
            return return_IyxiTim;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_qfrfaum=json({});
    return_qfrfaum=[&]() {
    json return_jATXvYf=json({});
    return serialize_uint32_t(name.accelerationStructure);}();return return_qfrfaum;}();
result["members"]["accelerationStructureCaptureReplay"]=[&]() {
    json return_MlemglO=json({});
    return_MlemglO=[&]() {
    json return_nSlpIAo=json({});
    return serialize_uint32_t(name.accelerationStructureCaptureReplay);}();return return_MlemglO;}();
result["members"]["accelerationStructureIndirectBuild"]=[&]() {
    json return_italSmb=json({});
    return_italSmb=[&]() {
    json return_LnLWEVK=json({});
    return serialize_uint32_t(name.accelerationStructureIndirectBuild);}();return return_italSmb;}();
result["members"]["accelerationStructureHostCommands"]=[&]() {
    json return_XDmfLtF=json({});
    return_XDmfLtF=[&]() {
    json return_XIfOYtK=json({});
    return serialize_uint32_t(name.accelerationStructureHostCommands);}();return return_XDmfLtF;}();
result["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]=[&]() {
    json return_ZTKgRwz=json({});
    return_ZTKgRwz=[&]() {
    json return_iEuDgIP=json({});
    return serialize_uint32_t(name.descriptorBindingAccelerationStructureUpdateAfterBind);}();return return_ZTKgRwz;}();
return result;}

    VkPhysicalDeviceAccelerationStructureFeaturesKHR deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructureFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint32_t(name["members"]["accelerationStructure"]);}();}();
[&]() {
[&]() {
result.accelerationStructureCaptureReplay=deserialize_uint32_t(name["members"]["accelerationStructureCaptureReplay"]);}();}();
[&]() {
[&]() {
result.accelerationStructureIndirectBuild=deserialize_uint32_t(name["members"]["accelerationStructureIndirectBuild"]);}();}();
[&]() {
[&]() {
result.accelerationStructureHostCommands=deserialize_uint32_t(name["members"]["accelerationStructureHostCommands"]);}();}();
[&]() {
[&]() {
result.descriptorBindingAccelerationStructureUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkPhysicalDeviceRayTracingPipelineFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FcUeBTF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ggDvGkr=json({});
    
        if (name.pNext==NULL){
            return_ggDvGkr["null"]=true;
            return return_ggDvGkr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPipeline"]=[&]() {
    json return_rbgmmZt=json({});
    return_rbgmmZt=[&]() {
    json return_bnemccI=json({});
    return serialize_uint32_t(name.rayTracingPipeline);}();return return_rbgmmZt;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]=[&]() {
    json return_INQTHgO=json({});
    return_INQTHgO=[&]() {
    json return_dUSqGqZ=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplay);}();return return_INQTHgO;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]=[&]() {
    json return_mvBPhBj=json({});
    return_mvBPhBj=[&]() {
    json return_XNtnNCg=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplayMixed);}();return return_mvBPhBj;}();
result["members"]["rayTracingPipelineTraceRaysIndirect"]=[&]() {
    json return_hLrSWIe=json({});
    return_hLrSWIe=[&]() {
    json return_lMWJHms=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect);}();return return_hLrSWIe;}();
result["members"]["rayTraversalPrimitiveCulling"]=[&]() {
    json return_EfZQGGr=json({});
    return_EfZQGGr=[&]() {
    json return_UjBqpHL=json({});
    return serialize_uint32_t(name.rayTraversalPrimitiveCulling);}();return return_EfZQGGr;}();
return result;}

    VkPhysicalDeviceRayTracingPipelineFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelineFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPipeline=deserialize_uint32_t(name["members"]["rayTracingPipeline"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplay=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplayMixed=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect"]);}();}();
[&]() {
[&]() {
result.rayTraversalPrimitiveCulling=deserialize_uint32_t(name["members"]["rayTraversalPrimitiveCulling"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayQueryFeaturesKHR(VkPhysicalDeviceRayQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BOKsuMO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZvPRbZb=json({});
    
        if (name.pNext==NULL){
            return_ZvPRbZb["null"]=true;
            return return_ZvPRbZb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayQuery"]=[&]() {
    json return_gbdwZIy=json({});
    return_gbdwZIy=[&]() {
    json return_aRonBGt=json({});
    return serialize_uint32_t(name.rayQuery);}();return return_gbdwZIy;}();
return result;}

    VkPhysicalDeviceRayQueryFeaturesKHR deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayQuery=deserialize_uint32_t(name["members"]["rayQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkPhysicalDeviceAccelerationStructurePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OCBCyHQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vYYexbo=json({});
    
        if (name.pNext==NULL){
            return_vYYexbo["null"]=true;
            return return_vYYexbo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_NKVSYzq=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_uDfWNOH=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxPrimitiveCount"]=[&]() {
    json return_KkujdDX=json({});
    return serialize_uint64_t(name.maxPrimitiveCount);}();
result["members"]["maxPerStageDescriptorAccelerationStructures"]=[&]() {
    json return_JYohAvN=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorAccelerationStructures);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_jbagOIx=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindAccelerationStructures);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_GWOrHXN=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
result["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_fPgCUdG=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindAccelerationStructures);}();
result["members"]["minAccelerationStructureScratchOffsetAlignment"]=[&]() {
    json return_hMXksqp=json({});
    return serialize_uint32_t(name.minAccelerationStructureScratchOffsetAlignment);}();
return result;}

    VkPhysicalDeviceAccelerationStructurePropertiesKHR deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructurePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxPrimitiveCount=deserialize_uint64_t(name["members"]["maxPrimitiveCount"]);}();
[&]() {
result.maxPerStageDescriptorAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorAccelerationStructures"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.minAccelerationStructureScratchOffsetAlignment=deserialize_uint32_t(name["members"]["minAccelerationStructureScratchOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkPhysicalDeviceRayTracingPipelinePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YddYnhz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wdAaIXR=json({});
    
        if (name.pNext==NULL){
            return_wdAaIXR["null"]=true;
            return return_wdAaIXR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_YKrGuiA=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRayRecursionDepth"]=[&]() {
    json return_kbNNnGe=json({});
    return serialize_uint32_t(name.maxRayRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_dwlYnEs=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_mJeglrh=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["shaderGroupHandleCaptureReplaySize"]=[&]() {
    json return_AgGqfVy=json({});
    return serialize_uint32_t(name.shaderGroupHandleCaptureReplaySize);}();
result["members"]["maxRayDispatchInvocationCount"]=[&]() {
    json return_muHNmcC=json({});
    return serialize_uint32_t(name.maxRayDispatchInvocationCount);}();
result["members"]["shaderGroupHandleAlignment"]=[&]() {
    json return_fGPhsFw=json({});
    return serialize_uint32_t(name.shaderGroupHandleAlignment);}();
result["members"]["maxRayHitAttributeSize"]=[&]() {
    json return_hBOFOTG=json({});
    return serialize_uint32_t(name.maxRayHitAttributeSize);}();
return result;}

    VkPhysicalDeviceRayTracingPipelinePropertiesKHR deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelinePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRayRecursionDepth=deserialize_uint32_t(name["members"]["maxRayRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.shaderGroupHandleCaptureReplaySize=deserialize_uint32_t(name["members"]["shaderGroupHandleCaptureReplaySize"]);}();
[&]() {
result.maxRayDispatchInvocationCount=deserialize_uint32_t(name["members"]["maxRayDispatchInvocationCount"]);}();
[&]() {
result.shaderGroupHandleAlignment=deserialize_uint32_t(name["members"]["shaderGroupHandleAlignment"]);}();
[&]() {
result.maxRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPropertiesNV(VkPhysicalDeviceRayTracingPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pvhdqlO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zzGpmJX=json({});
    
        if (name.pNext==NULL){
            return_zzGpmJX["null"]=true;
            return return_zzGpmJX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_veCevwW=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_ueexrPE=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_YxqVFpJ=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_zzPpLDA=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_yspdGee=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_HVcHZLV=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxTriangleCount"]=[&]() {
    json return_NWgTzgG=json({});
    return serialize_uint64_t(name.maxTriangleCount);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_tDJYMCp=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
return result;}

    VkPhysicalDeviceRayTracingPropertiesNV deserialize_VkPhysicalDeviceRayTracingPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxTriangleCount=deserialize_uint64_t(name["members"]["maxTriangleCount"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
return result;}

    json serialize_VkStridedDeviceAddressRegionKHR(VkStridedDeviceAddressRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_gFykkPu=json({});
    return_gFykkPu=[&]() {
    json return_VvGmxSg=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_gFykkPu;}();
result["members"]["stride"]=[&]() {
    json return_cxUHKYA=json({});
    return_cxUHKYA=[&]() {
    json return_FzuoLJT=json({});
    return serialize_uint64_t(name.stride);}();return return_cxUHKYA;}();
result["members"]["size"]=[&]() {
    json return_DMyydpz=json({});
    return_DMyydpz=[&]() {
    json return_yfGqqlT=json({});
    return serialize_uint64_t(name.size);}();return return_DMyydpz;}();
return result;}

    VkStridedDeviceAddressRegionKHR deserialize_VkStridedDeviceAddressRegionKHR(json name){
        auto result=VkStridedDeviceAddressRegionKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkTraceRaysIndirectCommandKHR(VkTraceRaysIndirectCommandKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_UUUOxpU=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_CaXcXKX=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_jpuJrHn=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommandKHR deserialize_VkTraceRaysIndirectCommandKHR(json name){
        auto result=VkTraceRaysIndirectCommandKHR();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkTraceRaysIndirectCommand2KHR(VkTraceRaysIndirectCommand2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["raygenShaderRecordAddress"]=[&]() {
    json return_fOHMYmv=json({});
    return_fOHMYmv=[&]() {
    json return_xVuMdaB=json({});
    return serialize_uint64_t(name.raygenShaderRecordAddress);}();return return_fOHMYmv;}();
result["members"]["raygenShaderRecordSize"]=[&]() {
    json return_dFYSbZn=json({});
    return_dFYSbZn=[&]() {
    json return_CiLiqKP=json({});
    return serialize_uint64_t(name.raygenShaderRecordSize);}();return return_dFYSbZn;}();
result["members"]["missShaderBindingTableAddress"]=[&]() {
    json return_MJpZNUF=json({});
    return_MJpZNUF=[&]() {
    json return_gSAIJDI=json({});
    return serialize_uint64_t(name.missShaderBindingTableAddress);}();return return_MJpZNUF;}();
result["members"]["missShaderBindingTableSize"]=[&]() {
    json return_gOHwYDA=json({});
    return_gOHwYDA=[&]() {
    json return_LlMsMwr=json({});
    return serialize_uint64_t(name.missShaderBindingTableSize);}();return return_gOHwYDA;}();
result["members"]["missShaderBindingTableStride"]=[&]() {
    json return_mxaGcYj=json({});
    return_mxaGcYj=[&]() {
    json return_iqkhonq=json({});
    return serialize_uint64_t(name.missShaderBindingTableStride);}();return return_mxaGcYj;}();
result["members"]["hitShaderBindingTableAddress"]=[&]() {
    json return_QZoPgcr=json({});
    return_QZoPgcr=[&]() {
    json return_fRosOZA=json({});
    return serialize_uint64_t(name.hitShaderBindingTableAddress);}();return return_QZoPgcr;}();
result["members"]["hitShaderBindingTableSize"]=[&]() {
    json return_UDjrSZS=json({});
    return_UDjrSZS=[&]() {
    json return_bzXrXoz=json({});
    return serialize_uint64_t(name.hitShaderBindingTableSize);}();return return_UDjrSZS;}();
result["members"]["hitShaderBindingTableStride"]=[&]() {
    json return_NnzyVbo=json({});
    return_NnzyVbo=[&]() {
    json return_rfCRAVc=json({});
    return serialize_uint64_t(name.hitShaderBindingTableStride);}();return return_NnzyVbo;}();
result["members"]["callableShaderBindingTableAddress"]=[&]() {
    json return_kdIAjpO=json({});
    return_kdIAjpO=[&]() {
    json return_xnzbDVn=json({});
    return serialize_uint64_t(name.callableShaderBindingTableAddress);}();return return_kdIAjpO;}();
result["members"]["callableShaderBindingTableSize"]=[&]() {
    json return_jBMqVqg=json({});
    return_jBMqVqg=[&]() {
    json return_IDwIfkG=json({});
    return serialize_uint64_t(name.callableShaderBindingTableSize);}();return return_jBMqVqg;}();
result["members"]["callableShaderBindingTableStride"]=[&]() {
    json return_xGKKCtn=json({});
    return_xGKKCtn=[&]() {
    json return_aVfhKNt=json({});
    return serialize_uint64_t(name.callableShaderBindingTableStride);}();return return_xGKKCtn;}();
result["members"]["width"]=[&]() {
    json return_WshMakX=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_uQsGQul=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_YGVVkTM=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommand2KHR deserialize_VkTraceRaysIndirectCommand2KHR(json name){
        auto result=VkTraceRaysIndirectCommand2KHR();
    
[&]() {
[&]() {
result.raygenShaderRecordAddress=deserialize_uint64_t(name["members"]["raygenShaderRecordAddress"]);}();}();
[&]() {
[&]() {
result.raygenShaderRecordSize=deserialize_uint64_t(name["members"]["raygenShaderRecordSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableAddress=deserialize_uint64_t(name["members"]["missShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableSize=deserialize_uint64_t(name["members"]["missShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableStride=deserialize_uint64_t(name["members"]["missShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableAddress=deserialize_uint64_t(name["members"]["hitShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableSize=deserialize_uint64_t(name["members"]["hitShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableStride=deserialize_uint64_t(name["members"]["hitShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableAddress=deserialize_uint64_t(name["members"]["callableShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableSize=deserialize_uint64_t(name["members"]["callableShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableStride=deserialize_uint64_t(name["members"]["callableShaderBindingTableStride"]);}();}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vtsGZMC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QyMAqnf=json({});
    
        if (name.pNext==NULL){
            return_QyMAqnf["null"]=true;
            return return_QyMAqnf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMaintenance1"]=[&]() {
    json return_TsMHdQB=json({});
    return_TsMHdQB=[&]() {
    json return_zJuMAuo=json({});
    return serialize_uint32_t(name.rayTracingMaintenance1);}();return return_TsMHdQB;}();
result["members"]["rayTracingPipelineTraceRaysIndirect2"]=[&]() {
    json return_HFbxkqC=json({});
    return_HFbxkqC=[&]() {
    json return_oRqCMsQ=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect2);}();return return_HFbxkqC;}();
return result;}

    VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMaintenance1=deserialize_uint32_t(name["members"]["rayTracingMaintenance1"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect2=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect2"]);}();}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesListEXT(VkDrmFormatModifierPropertiesListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zNhEyjz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gdRLGoC=json({});
    
        if (name.pNext==NULL){
            return_gdRLGoC["null"]=true;
            return return_gdRLGoC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_uTxVCrb=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_uYDOYdM=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_uYDOYdM["null"]=true;
            return return_uYDOYdM;
        }
        
        return_uYDOYdM["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_KGiqXBn=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(name.pDrmFormatModifierProperties[i]);}();
            return_uYDOYdM["members"][std::to_string(i)].push_back(temp);
        }
        return return_uYDOYdM;
        }();
return result;}

    VkDrmFormatModifierPropertiesListEXT deserialize_VkDrmFormatModifierPropertiesListEXT(json name){
        auto result=VkDrmFormatModifierPropertiesListEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierPropertiesEXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierPropertiesEXT));
        for (int orvxmpb=0; orvxmpb < result.drmFormatModifierCount; orvxmpb++){
            [&]() {
result.pDrmFormatModifierProperties[orvxmpb]=deserialize_VkDrmFormatModifierPropertiesEXT(name["members"]["pDrmFormatModifierProperties"]["members"][orvxmpb]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierPropertiesEXT(VkDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_qNfExZK=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_oEuXuOi=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_GmvXVDS=json({});
    return serialize_VkFormatFeatureFlags(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierPropertiesEXT deserialize_VkDrmFormatModifierPropertiesEXT(json name){
        auto result=VkDrmFormatModifierPropertiesEXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkPhysicalDeviceImageDrmFormatModifierInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OKYcVuP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZcXtekg=json({});
    
        if (name.pNext==NULL){
            return_ZcXtekg["null"]=true;
            return return_ZcXtekg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_VGivdOP=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["sharingMode"]=[&]() {
    json return_btGvLHT=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_cXMEZIE=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_xLMraZa=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_xLMraZa["null"]=true;
            return return_xLMraZa;
        }
        
        return_xLMraZa["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_mczOYFj=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_xLMraZa["members"][std::to_string(i)].push_back(temp);
        }
        return return_xLMraZa;
        }();
return result;}

    VkPhysicalDeviceImageDrmFormatModifierInfoEXT deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(json name){
        auto result=VkPhysicalDeviceImageDrmFormatModifierInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_betufyT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_betufyT=NULL;
        }
    temp_betufyT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_betufyT;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_gcomMYt;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_gcomMYt=NULL;
        }
    temp_gcomMYt=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int iGCYBXm=0; iGCYBXm < result.queueFamilyIndexCount; iGCYBXm++){
            [&]() {
temp_gcomMYt[iGCYBXm]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][iGCYBXm]);}();;
        }
        }();result.pQueueFamilyIndices=temp_gcomMYt;}();
return result;}

    json serialize_VkImageDrmFormatModifierListCreateInfoEXT(VkImageDrmFormatModifierListCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pDSdgnL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eppgiEf=json({});
    
        if (name.pNext==NULL){
            return_eppgiEf["null"]=true;
            return return_eppgiEf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_LXauZby=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifiers"]=[&]() {
    json return_vgPdEBx=json({});
    
        if (name.pDrmFormatModifiers==NULL){
            return_vgPdEBx["null"]=true;
            return return_vgPdEBx;
        }
        
        return_vgPdEBx["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_daBSCAD=json({});
    return serialize_uint64_t(name.pDrmFormatModifiers[i]);}();
            return_vgPdEBx["members"][std::to_string(i)].push_back(temp);
        }
        return return_vgPdEBx;
        }();
return result;}

    VkImageDrmFormatModifierListCreateInfoEXT deserialize_VkImageDrmFormatModifierListCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierListCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OvyyfSX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OvyyfSX=NULL;
        }
    temp_OvyyfSX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OvyyfSX;}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {
uint64_t* temp_TyXFokW;[&]() {

        if (name["members"]["pDrmFormatModifiers"].contains("null")){
        temp_TyXFokW=NULL;
        }
    temp_TyXFokW=(uint64_t*)malloc(result.drmFormatModifierCount*sizeof(uint64_t));
        for (int JehqKoQ=0; JehqKoQ < result.drmFormatModifierCount; JehqKoQ++){
            [&]() {
temp_TyXFokW[JehqKoQ]=deserialize_uint64_t(name["members"]["pDrmFormatModifiers"]["members"][JehqKoQ]);}();;
        }
        }();result.pDrmFormatModifiers=temp_TyXFokW;}();
return result;}

    json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(VkImageDrmFormatModifierExplicitCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_toslHUf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pSWvyHS=json({});
    
        if (name.pNext==NULL){
            return_pSWvyHS["null"]=true;
            return return_pSWvyHS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_dxLOgBR=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_XpLaWRd=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["pPlaneLayouts"]=[&]() {
    json return_EJSyFda=json({});
    
        if (name.pPlaneLayouts==NULL){
            return_EJSyFda["null"]=true;
            return return_EJSyFda;
        }
        
        return_EJSyFda["members"]={};
        for(int i=0; i < name.drmFormatModifierPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_jEGcZZC=json({});
    return serialize_VkSubresourceLayout(name.pPlaneLayouts[i]);}();
            return_EJSyFda["members"][std::to_string(i)].push_back(temp);
        }
        return return_EJSyFda;
        }();
return result;}

    VkImageDrmFormatModifierExplicitCreateInfoEXT deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierExplicitCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bOroQTU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bOroQTU=NULL;
        }
    temp_bOroQTU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bOroQTU;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
VkSubresourceLayout* temp_OeXKCeC;[&]() {

        if (name["members"]["pPlaneLayouts"].contains("null")){
        temp_OeXKCeC=NULL;
        }
    temp_OeXKCeC=(VkSubresourceLayout*)malloc(result.drmFormatModifierPlaneCount*sizeof(VkSubresourceLayout));
        for (int hfrwbkB=0; hfrwbkB < result.drmFormatModifierPlaneCount; hfrwbkB++){
            [&]() {
temp_OeXKCeC[hfrwbkB]=deserialize_VkSubresourceLayout(name["members"]["pPlaneLayouts"]["members"][hfrwbkB]);}();;
        }
        }();result.pPlaneLayouts=temp_OeXKCeC;}();
return result;}

    json serialize_VkImageDrmFormatModifierPropertiesEXT(VkImageDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dIxhbBD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nhkQQZq=json({});
    
        if (name.pNext==NULL){
            return_nhkQQZq["null"]=true;
            return return_nhkQQZq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_MhFXdBP=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
return result;}

    VkImageDrmFormatModifierPropertiesEXT deserialize_VkImageDrmFormatModifierPropertiesEXT(json name){
        auto result=VkImageDrmFormatModifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfo(VkImageStencilUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ergsTjq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_duQDOeu=json({});
    
        if (name.pNext==NULL){
            return_duQDOeu["null"]=true;
            return return_duQDOeu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_dqvfnKf=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfo deserialize_VkImageStencilUsageCreateInfo(json name){
        auto result=VkImageStencilUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mgWKOrt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mgWKOrt=NULL;
        }
    temp_mgWKOrt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mgWKOrt;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfoEXT(VkImageStencilUsageCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hgJXxnJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_auADTkH=json({});
    
        if (name.pNext==NULL){
            return_auADTkH["null"]=true;
            return return_auADTkH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_oWLyMbm=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfoEXT deserialize_VkImageStencilUsageCreateInfoEXT(json name){
        auto result=VkImageStencilUsageCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EWJypQu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EWJypQu=NULL;
        }
    temp_EWJypQu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EWJypQu;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkDeviceMemoryOverallocationCreateInfoAMD(VkDeviceMemoryOverallocationCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_twZPSRK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dWxgcUN=json({});
    
        if (name.pNext==NULL){
            return_dWxgcUN["null"]=true;
            return return_dWxgcUN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["overallocationBehavior"]=[&]() {
    json return_YttsxMX=json({});
    return serialize_VkMemoryOverallocationBehaviorAMD(name.overallocationBehavior);}();
return result;}

    VkDeviceMemoryOverallocationCreateInfoAMD deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(json name){
        auto result=VkDeviceMemoryOverallocationCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ltpKWCH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ltpKWCH=NULL;
        }
    temp_ltpKWCH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ltpKWCH;}();
[&]() {
result.overallocationBehavior=deserialize_VkMemoryOverallocationBehaviorAMD(name["members"]["overallocationBehavior"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkPhysicalDeviceFragmentDensityMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kLigXqM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SVLnJBL=json({});
    
        if (name.pNext==NULL){
            return_SVLnJBL["null"]=true;
            return return_SVLnJBL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMap"]=[&]() {
    json return_CGdsmCN=json({});
    return_CGdsmCN=[&]() {
    json return_UYJAMoR=json({});
    return serialize_uint32_t(name.fragmentDensityMap);}();return return_CGdsmCN;}();
result["members"]["fragmentDensityMapDynamic"]=[&]() {
    json return_YEYdusX=json({});
    return_YEYdusX=[&]() {
    json return_GvuyMid=json({});
    return serialize_uint32_t(name.fragmentDensityMapDynamic);}();return return_YEYdusX;}();
result["members"]["fragmentDensityMapNonSubsampledImages"]=[&]() {
    json return_JmFjkcZ=json({});
    return_JmFjkcZ=[&]() {
    json return_YNKzrPd=json({});
    return serialize_uint32_t(name.fragmentDensityMapNonSubsampledImages);}();return return_JmFjkcZ;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapFeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMap=deserialize_uint32_t(name["members"]["fragmentDensityMap"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapDynamic=deserialize_uint32_t(name["members"]["fragmentDensityMapDynamic"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapNonSubsampledImages=deserialize_uint32_t(name["members"]["fragmentDensityMapNonSubsampledImages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZnLFjdC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nUABNxI=json({});
    
        if (name.pNext==NULL){
            return_nUABNxI["null"]=true;
            return return_nUABNxI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapDeferred"]=[&]() {
    json return_dKZmxtx=json({});
    return_dKZmxtx=[&]() {
    json return_TzABpMu=json({});
    return serialize_uint32_t(name.fragmentDensityMapDeferred);}();return return_dKZmxtx;}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2FeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapDeferred=deserialize_uint32_t(name["members"]["fragmentDensityMapDeferred"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BvgmWiK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DOdngKt=json({});
    
        if (name.pNext==NULL){
            return_DOdngKt["null"]=true;
            return return_DOdngKt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapOffset"]=[&]() {
    json return_CSLoyST=json({});
    return_CSLoyST=[&]() {
    json return_xKOJztB=json({});
    return serialize_uint32_t(name.fragmentDensityMapOffset);}();return return_CSLoyST;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapOffset=deserialize_uint32_t(name["members"]["fragmentDensityMapOffset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkPhysicalDeviceFragmentDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oPebDpy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QYyxpKo=json({});
    
        if (name.pNext==NULL){
            return_QYyxpKo["null"]=true;
            return return_QYyxpKo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentDensityTexelSize"]=[&]() {
    json return_RaFayEh=json({});
    return serialize_VkExtent2D(name.minFragmentDensityTexelSize);}();
result["members"]["maxFragmentDensityTexelSize"]=[&]() {
    json return_uQJYvhK=json({});
    return serialize_VkExtent2D(name.maxFragmentDensityTexelSize);}();
result["members"]["fragmentDensityInvocations"]=[&]() {
    json return_lTifoPV=json({});
    return_lTifoPV=[&]() {
    json return_ltlPirn=json({});
    return serialize_uint32_t(name.fragmentDensityInvocations);}();return return_lTifoPV;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapPropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentDensityTexelSize"]);}();
[&]() {
result.maxFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentDensityTexelSize"]);}();
[&]() {
[&]() {
result.fragmentDensityInvocations=deserialize_uint32_t(name["members"]["fragmentDensityInvocations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JiGoidD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HjvyyJm=json({});
    
        if (name.pNext==NULL){
            return_HjvyyJm["null"]=true;
            return return_HjvyyJm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subsampledLoads"]=[&]() {
    json return_CLUBEuS=json({});
    return_CLUBEuS=[&]() {
    json return_jTSLsOC=json({});
    return serialize_uint32_t(name.subsampledLoads);}();return return_CLUBEuS;}();
result["members"]["subsampledCoarseReconstructionEarlyAccess"]=[&]() {
    json return_pzhaNJg=json({});
    return_pzhaNJg=[&]() {
    json return_yieKGRk=json({});
    return serialize_uint32_t(name.subsampledCoarseReconstructionEarlyAccess);}();return return_pzhaNJg;}();
result["members"]["maxSubsampledArrayLayers"]=[&]() {
    json return_mvBhbMi=json({});
    return serialize_uint32_t(name.maxSubsampledArrayLayers);}();
result["members"]["maxDescriptorSetSubsampledSamplers"]=[&]() {
    json return_dLlpEio=json({});
    return serialize_uint32_t(name.maxDescriptorSetSubsampledSamplers);}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2PropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subsampledLoads=deserialize_uint32_t(name["members"]["subsampledLoads"]);}();}();
[&]() {
[&]() {
result.subsampledCoarseReconstructionEarlyAccess=deserialize_uint32_t(name["members"]["subsampledCoarseReconstructionEarlyAccess"]);}();}();
[&]() {
result.maxSubsampledArrayLayers=deserialize_uint32_t(name["members"]["maxSubsampledArrayLayers"]);}();
[&]() {
result.maxDescriptorSetSubsampledSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSubsampledSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MVspyLj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UGktmrR=json({});
    
        if (name.pNext==NULL){
            return_UGktmrR["null"]=true;
            return return_UGktmrR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetGranularity"]=[&]() {
    json return_DchRWjB=json({});
    return serialize_VkExtent2D(name.fragmentDensityOffsetGranularity);}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.fragmentDensityOffsetGranularity=deserialize_VkExtent2D(name["members"]["fragmentDensityOffsetGranularity"]);}();
return result;}

    json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(VkRenderPassFragmentDensityMapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rRxJoNP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EMZEgoM=json({});
    
        if (name.pNext==NULL){
            return_EMZEgoM["null"]=true;
            return return_EMZEgoM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapAttachment"]=[&]() {
    json return_FvuMeBS=json({});
    return serialize_VkAttachmentReference(name.fragmentDensityMapAttachment);}();
return result;}

    VkRenderPassFragmentDensityMapCreateInfoEXT deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(json name){
        auto result=VkRenderPassFragmentDensityMapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_diFOSej;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_diFOSej=NULL;
        }
    temp_diFOSej=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_diFOSej;}();
[&]() {
result.fragmentDensityMapAttachment=deserialize_VkAttachmentReference(name["members"]["fragmentDensityMapAttachment"]);}();
return result;}

    json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(VkSubpassFragmentDensityMapOffsetEndInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gyfuyHM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hOugLdd=json({});
    
        if (name.pNext==NULL){
            return_hOugLdd["null"]=true;
            return return_hOugLdd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetCount"]=[&]() {
    json return_imdkEPA=json({});
    return serialize_uint32_t(name.fragmentDensityOffsetCount);}();
result["members"]["pFragmentDensityOffsets"]=[&]() {
    json return_yCHTYpc=json({});
    
        if (name.pFragmentDensityOffsets==NULL){
            return_yCHTYpc["null"]=true;
            return return_yCHTYpc;
        }
        
        return_yCHTYpc["members"]={};
        for(int i=0; i < name.fragmentDensityOffsetCount; i++){
            json temp;
            temp=[&]() {
    json return_bMXmhdf=json({});
    return serialize_VkOffset2D(name.pFragmentDensityOffsets[i]);}();
            return_yCHTYpc["members"][std::to_string(i)].push_back(temp);
        }
        return return_yCHTYpc;
        }();
return result;}

    VkSubpassFragmentDensityMapOffsetEndInfoQCOM deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(json name){
        auto result=VkSubpassFragmentDensityMapOffsetEndInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xjKWKUS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xjKWKUS=NULL;
        }
    temp_xjKWKUS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xjKWKUS;}();
[&]() {
result.fragmentDensityOffsetCount=deserialize_uint32_t(name["members"]["fragmentDensityOffsetCount"]);}();
[&]() {
VkOffset2D* temp_vHABHvC;[&]() {

        if (name["members"]["pFragmentDensityOffsets"].contains("null")){
        temp_vHABHvC=NULL;
        }
    temp_vHABHvC=(VkOffset2D*)malloc(result.fragmentDensityOffsetCount*sizeof(VkOffset2D));
        for (int SeuwkJA=0; SeuwkJA < result.fragmentDensityOffsetCount; SeuwkJA++){
            [&]() {
temp_vHABHvC[SeuwkJA]=deserialize_VkOffset2D(name["members"]["pFragmentDensityOffsets"]["members"][SeuwkJA]);}();;
        }
        }();result.pFragmentDensityOffsets=temp_vHABHvC;}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(VkPhysicalDeviceScalarBlockLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nMaclea=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XFVLeUp=json({});
    
        if (name.pNext==NULL){
            return_XFVLeUp["null"]=true;
            return return_XFVLeUp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_TGAAxra=json({});
    return_TGAAxra=[&]() {
    json return_hDGWsVX=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_TGAAxra;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeatures deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_grfKmLt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GKthRoK=json({});
    
        if (name.pNext==NULL){
            return_GKthRoK["null"]=true;
            return return_GKthRoK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_ciAMEtS=json({});
    return_ciAMEtS=[&]() {
    json return_auXLIEy=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_ciAMEtS;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeaturesEXT deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkSurfaceProtectedCapabilitiesKHR(VkSurfaceProtectedCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HdQJqSm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUcRgte=json({});
    
        if (name.pNext==NULL){
            return_kUcRgte["null"]=true;
            return return_kUcRgte;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsProtected"]=[&]() {
    json return_bxpaNTb=json({});
    return_bxpaNTb=[&]() {
    json return_lgceYUC=json({});
    return serialize_uint32_t(name.supportsProtected);}();return return_bxpaNTb;}();
return result;}

    VkSurfaceProtectedCapabilitiesKHR deserialize_VkSurfaceProtectedCapabilitiesKHR(json name){
        auto result=VkSurfaceProtectedCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gkDFKZx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gkDFKZx=NULL;
        }
    temp_gkDFKZx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gkDFKZx;}();
[&]() {
[&]() {
result.supportsProtected=deserialize_uint32_t(name["members"]["supportsProtected"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkPhysicalDeviceUniformBufferStandardLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fprIgfK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LLncHUl=json({});
    
        if (name.pNext==NULL){
            return_LLncHUl["null"]=true;
            return return_LLncHUl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_pecwzeB=json({});
    return_pecwzeB=[&]() {
    json return_ZKVDigS=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_pecwzeB;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeatures deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sYyIuoV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YUElVUM=json({});
    
        if (name.pNext==NULL){
            return_YUElVUM["null"]=true;
            return return_YUElVUM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_cdFtRux=json({});
    return_cdFtRux=[&]() {
    json return_bNBcOOn=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_cdFtRux;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkPhysicalDeviceDepthClipEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vmtOisO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eKKRPyD=json({});
    
        if (name.pNext==NULL){
            return_eKKRPyD["null"]=true;
            return return_eKKRPyD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipEnable"]=[&]() {
    json return_nbiGWgH=json({});
    return_nbiGWgH=[&]() {
    json return_IXNZBEH=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_nbiGWgH;}();
return result;}

    VkPhysicalDeviceDepthClipEnableFeaturesEXT deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkPipelineRasterizationDepthClipStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pzNYbpC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wzIQsyj=json({});
    
        if (name.pNext==NULL){
            return_wzIQsyj["null"]=true;
            return return_wzIQsyj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_CVumzUN=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name.flags);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_lPgfdPc=json({});
    return_lPgfdPc=[&]() {
    json return_FRrnxnV=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_lPgfdPc;}();
return result;}

    VkPipelineRasterizationDepthClipStateCreateInfoEXT deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationDepthClipStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BtXndMn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BtXndMn=NULL;
        }
    temp_BtXndMn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BtXndMn;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkPhysicalDeviceMemoryBudgetPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pIwKMhu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fZhBItC=json({});
    
        if (name.pNext==NULL){
            return_fZhBItC["null"]=true;
            return return_fZhBItC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["heapBudget"]=[&]() {
    json return_tcTOxkT=json({});
    
        return_tcTOxkT["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_aLmnUlL=json({});
    return_aLmnUlL=[&]() {
    json return_MkZSWMS=json({});
    return serialize_uint64_t(name.heapBudget[i]);}();return return_aLmnUlL;}();
            return_tcTOxkT["members"][std::to_string(i)].push_back(temp);
        }
        return return_tcTOxkT;
        }();
result["members"]["heapUsage"]=[&]() {
    json return_qUJibWi=json({});
    
        return_qUJibWi["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_tfuCwak=json({});
    return_tfuCwak=[&]() {
    json return_MOTskak=json({});
    return serialize_uint64_t(name.heapUsage[i]);}();return return_tfuCwak;}();
            return_qUJibWi["members"][std::to_string(i)].push_back(temp);
        }
        return return_qUJibWi;
        }();
return result;}

    VkPhysicalDeviceMemoryBudgetPropertiesEXT deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMemoryBudgetPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int XtxoFup=0; XtxoFup < VK_MAX_MEMORY_HEAPS; XtxoFup++){
            [&]() {
[&]() {
result.heapBudget[XtxoFup]=deserialize_uint64_t(name["members"]["heapBudget"]["members"][XtxoFup]);}();}();;
        }
        }();
[&]() {

        for (int mvxHSgU=0; mvxHSgU < VK_MAX_MEMORY_HEAPS; mvxHSgU++){
            [&]() {
[&]() {
result.heapUsage[mvxHSgU]=deserialize_uint64_t(name["members"]["heapUsage"]["members"][mvxHSgU]);}();}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkPhysicalDeviceMemoryPriorityFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hBXuANU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JOJRRng=json({});
    
        if (name.pNext==NULL){
            return_JOJRRng["null"]=true;
            return return_JOJRRng;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryPriority"]=[&]() {
    json return_KiLdmkw=json({});
    return_KiLdmkw=[&]() {
    json return_FaybXVb=json({});
    return serialize_uint32_t(name.memoryPriority);}();return return_KiLdmkw;}();
return result;}

    VkPhysicalDeviceMemoryPriorityFeaturesEXT deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMemoryPriorityFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryPriority=deserialize_uint32_t(name["members"]["memoryPriority"]);}();}();
return result;}

    json serialize_VkMemoryPriorityAllocateInfoEXT(VkMemoryPriorityAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FlnxGBY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JlDEeEx=json({});
    
        if (name.pNext==NULL){
            return_JlDEeEx["null"]=true;
            return return_JlDEeEx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priority"]=[&]() {
    json return_LCgOayF=json({});
    return serialize_float(name.priority);}();
return result;}

    VkMemoryPriorityAllocateInfoEXT deserialize_VkMemoryPriorityAllocateInfoEXT(json name){
        auto result=VkMemoryPriorityAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_btAOGcJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_btAOGcJ=NULL;
        }
    temp_btAOGcJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_btAOGcJ;}();
[&]() {
result.priority=deserialize_float(name["members"]["priority"]);}();
return result;}

    json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OMijruY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pBbbAon=json({});
    
        if (name.pNext==NULL){
            return_pBbbAon["null"]=true;
            return return_pBbbAon;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pageableDeviceLocalMemory"]=[&]() {
    json return_EzNzOyl=json({});
    return_EzNzOyl=[&]() {
    json return_ZtXnasH=json({});
    return serialize_uint32_t(name.pageableDeviceLocalMemory);}();return return_EzNzOyl;}();
return result;}

    VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pageableDeviceLocalMemory=deserialize_uint32_t(name["members"]["pageableDeviceLocalMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(VkPhysicalDeviceBufferDeviceAddressFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DVROUAh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IlrmsBW=json({});
    
        if (name.pNext==NULL){
            return_IlrmsBW["null"]=true;
            return return_IlrmsBW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_RQIbFTB=json({});
    return_RQIbFTB=[&]() {
    json return_fHdDWBQ=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_RQIbFTB;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_rRXyfEK=json({});
    return_rRXyfEK=[&]() {
    json return_oXKwEEX=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_rRXyfEK;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_eIqwUwL=json({});
    return_eIqwUwL=[&]() {
    json return_dTweyCp=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_eIqwUwL;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeatures deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xMHCCzb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GLjlcyC=json({});
    
        if (name.pNext==NULL){
            return_GLjlcyC["null"]=true;
            return return_GLjlcyC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_pZUTRzK=json({});
    return_pZUTRzK=[&]() {
    json return_gFUUXlN=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_pZUTRzK;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_tAYoeEr=json({});
    return_tAYoeEr=[&]() {
    json return_IyFUFvZ=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_tAYoeEr;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_dyEuDOe=json({});
    return_dyEuDOe=[&]() {
    json return_QKHHQOm=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_dyEuDOe;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesKHR deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hRgdOMr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dNdHqlP=json({});
    
        if (name.pNext==NULL){
            return_dNdHqlP["null"]=true;
            return return_dNdHqlP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_sCWdkrh=json({});
    return_sCWdkrh=[&]() {
    json return_ReEereZ=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_sCWdkrh;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_GinxnTs=json({});
    return_GinxnTs=[&]() {
    json return_rkSfwuY=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_GinxnTs;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_HnVGTkJ=json({});
    return_HnVGTkJ=[&]() {
    json return_fibQlRI=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_HnVGTkJ;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(VkPhysicalDeviceBufferAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UmzMmla=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_axLidpN=json({});
    
        if (name.pNext==NULL){
            return_axLidpN["null"]=true;
            return return_axLidpN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_nzULMla=json({});
    return_nzULMla=[&]() {
    json return_VPOFpLU=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_nzULMla;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_ZUnFusH=json({});
    return_ZUnFusH=[&]() {
    json return_htzXFpy=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_ZUnFusH;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_HcoBlAf=json({});
    return_HcoBlAf=[&]() {
    json return_bDqYkbd=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_HcoBlAf;}();
return result;}

    VkPhysicalDeviceBufferAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkBufferDeviceAddressInfo(VkBufferDeviceAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pGXDEAk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vzjdMle=json({});
    
        if (name.pNext==NULL){
            return_vzjdMle["null"]=true;
            return return_vzjdMle;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_ZPDUkYp=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfo deserialize_VkBufferDeviceAddressInfo(json name){
        auto result=VkBufferDeviceAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gDxiyeE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gDxiyeE=NULL;
        }
    temp_gDxiyeE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gDxiyeE;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoKHR(VkBufferDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OcXNkgK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_syMGrKL=json({});
    
        if (name.pNext==NULL){
            return_syMGrKL["null"]=true;
            return return_syMGrKL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_oZunwGs=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoKHR deserialize_VkBufferDeviceAddressInfoKHR(json name){
        auto result=VkBufferDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_excULXy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_excULXy=NULL;
        }
    temp_excULXy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_excULXy;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoEXT(VkBufferDeviceAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ErLQKeZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yVQlKFg=json({});
    
        if (name.pNext==NULL){
            return_yVQlKFg["null"]=true;
            return return_yVQlKFg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_rUyZZzK=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoEXT deserialize_VkBufferDeviceAddressInfoEXT(json name){
        auto result=VkBufferDeviceAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PpFQMzs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PpFQMzs=NULL;
        }
    temp_PpFQMzs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PpFQMzs;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfo(VkBufferOpaqueCaptureAddressCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RdSDWEB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mVRAgTV=json({});
    
        if (name.pNext==NULL){
            return_mVRAgTV["null"]=true;
            return return_mVRAgTV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_VbQdAmv=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfo deserialize_VkBufferOpaqueCaptureAddressCreateInfo(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rGqBtkj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rGqBtkj=NULL;
        }
    temp_rGqBtkj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rGqBtkj;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(VkBufferOpaqueCaptureAddressCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_svxWBRo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iMaoowR=json({});
    
        if (name.pNext==NULL){
            return_iMaoowR["null"]=true;
            return return_iMaoowR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_oMohank=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfoKHR deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AWOOmNy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AWOOmNy=NULL;
        }
    temp_AWOOmNy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AWOOmNy;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferDeviceAddressCreateInfoEXT(VkBufferDeviceAddressCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hyQFzlG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WuJZYQY=json({});
    
        if (name.pNext==NULL){
            return_WuJZYQY["null"]=true;
            return return_WuJZYQY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_VwTlWYd=json({});
    return_VwTlWYd=[&]() {
    json return_KpdzoCH=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_VwTlWYd;}();
return result;}

    VkBufferDeviceAddressCreateInfoEXT deserialize_VkBufferDeviceAddressCreateInfoEXT(json name){
        auto result=VkBufferDeviceAddressCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lHuyhUR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lHuyhUR=NULL;
        }
    temp_lHuyhUR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lHuyhUR;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(VkPhysicalDeviceImageViewImageFormatInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BKBPOmF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_szYgYQi=json({});
    
        if (name.pNext==NULL){
            return_szYgYQi["null"]=true;
            return return_szYgYQi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageViewType"]=[&]() {
    json return_lAkDhaD=json({});
    return serialize_VkImageViewType(name.imageViewType);}();
return result;}

    VkPhysicalDeviceImageViewImageFormatInfoEXT deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(json name){
        auto result=VkPhysicalDeviceImageViewImageFormatInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageViewType=deserialize_VkImageViewType(name["members"]["imageViewType"]);}();
return result;}

    json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(VkFilterCubicImageViewImageFormatPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OyOuyAX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GlloYFc=json({});
    
        if (name.pNext==NULL){
            return_GlloYFc["null"]=true;
            return return_GlloYFc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCubic"]=[&]() {
    json return_dcuapZM=json({});
    return_dcuapZM=[&]() {
    json return_DXeaugs=json({});
    return serialize_uint32_t(name.filterCubic);}();return return_dcuapZM;}();
result["members"]["filterCubicMinmax"]=[&]() {
    json return_huNeCwX=json({});
    return_huNeCwX=[&]() {
    json return_FsiXKWi=json({});
    return serialize_uint32_t(name.filterCubicMinmax);}();return return_huNeCwX;}();
return result;}

    VkFilterCubicImageViewImageFormatPropertiesEXT deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(json name){
        auto result=VkFilterCubicImageViewImageFormatPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterCubic=deserialize_uint32_t(name["members"]["filterCubic"]);}();}();
[&]() {
[&]() {
result.filterCubicMinmax=deserialize_uint32_t(name["members"]["filterCubicMinmax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeatures(VkPhysicalDeviceImagelessFramebufferFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qdPGupn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HWZPTGG=json({});
    
        if (name.pNext==NULL){
            return_HWZPTGG["null"]=true;
            return return_HWZPTGG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_iiYqvyH=json({});
    return_iiYqvyH=[&]() {
    json return_nNqQDJr=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_iiYqvyH;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeatures deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(VkPhysicalDeviceImagelessFramebufferFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AWyoTax=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FYHZrrK=json({});
    
        if (name.pNext==NULL){
            return_FYHZrrK["null"]=true;
            return return_FYHZrrK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_qpAUdsF=json({});
    return_qpAUdsF=[&]() {
    json return_ccyxWRL=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_qpAUdsF;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeaturesKHR deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfo(VkFramebufferAttachmentsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mjuWsoa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Fsascut=json({});
    
        if (name.pNext==NULL){
            return_Fsascut["null"]=true;
            return return_Fsascut;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_FnAZasT=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_JhwOSEN=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_JhwOSEN["null"]=true;
            return return_JhwOSEN;
        }
        
        return_JhwOSEN["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_KRUWxFq=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_JhwOSEN["members"][std::to_string(i)].push_back(temp);
        }
        return return_JhwOSEN;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfo deserialize_VkFramebufferAttachmentsCreateInfo(json name){
        auto result=VkFramebufferAttachmentsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NqkRrYI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NqkRrYI=NULL;
        }
    temp_NqkRrYI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NqkRrYI;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_AijlNtl;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_AijlNtl=NULL;
        }
    temp_AijlNtl=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int xFJMmSr=0; xFJMmSr < result.attachmentImageInfoCount; xFJMmSr++){
            [&]() {
temp_AijlNtl[xFJMmSr]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][xFJMmSr]);}();;
        }
        }();result.pAttachmentImageInfos=temp_AijlNtl;}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfoKHR(VkFramebufferAttachmentsCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_axPNWOF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hHNhGRY=json({});
    
        if (name.pNext==NULL){
            return_hHNhGRY["null"]=true;
            return return_hHNhGRY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_tItXjuC=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_QQRntaf=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_QQRntaf["null"]=true;
            return return_QQRntaf;
        }
        
        return_QQRntaf["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_ulshMfe=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_QQRntaf["members"][std::to_string(i)].push_back(temp);
        }
        return return_QQRntaf;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfoKHR deserialize_VkFramebufferAttachmentsCreateInfoKHR(json name){
        auto result=VkFramebufferAttachmentsCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LQZRVmg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LQZRVmg=NULL;
        }
    temp_LQZRVmg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LQZRVmg;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_LPjdnoz;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_LPjdnoz=NULL;
        }
    temp_LPjdnoz=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int hwEmMov=0; hwEmMov < result.attachmentImageInfoCount; hwEmMov++){
            [&]() {
temp_LPjdnoz[hwEmMov]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][hwEmMov]);}();;
        }
        }();result.pAttachmentImageInfos=temp_LPjdnoz;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfo(VkFramebufferAttachmentImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TosFnMX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AEafnoG=json({});
    
        if (name.pNext==NULL){
            return_AEafnoG["null"]=true;
            return return_AEafnoG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BYTuaGB=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_dPCyeVq=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_DVKSWgp=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_djEODeq=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_YoheUUm=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_VCOKVAe=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_DviKeAw=json({});
    
        if (name.pViewFormats==NULL){
            return_DviKeAw["null"]=true;
            return return_DviKeAw;
        }
        
        return_DviKeAw["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_JLlXBNP=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_DviKeAw["members"][std::to_string(i)].push_back(temp);
        }
        return return_DviKeAw;
        }();
return result;}

    VkFramebufferAttachmentImageInfo deserialize_VkFramebufferAttachmentImageInfo(json name){
        auto result=VkFramebufferAttachmentImageInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KoSiENx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KoSiENx=NULL;
        }
    temp_KoSiENx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KoSiENx;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_rUIObrf;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_rUIObrf=NULL;
        }
    temp_rUIObrf=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int GzFRobK=0; GzFRobK < result.viewFormatCount; GzFRobK++){
            [&]() {
temp_rUIObrf[GzFRobK]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][GzFRobK]);}();;
        }
        }();result.pViewFormats=temp_rUIObrf;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfoKHR(VkFramebufferAttachmentImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AIfEgTu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SQYbLTf=json({});
    
        if (name.pNext==NULL){
            return_SQYbLTf["null"]=true;
            return return_SQYbLTf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_kgxOytz=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_tuJevjy=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_WRyCzSX=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_tJBexdj=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_IaJqxNS=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_TqlADts=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_qiIfpKp=json({});
    
        if (name.pViewFormats==NULL){
            return_qiIfpKp["null"]=true;
            return return_qiIfpKp;
        }
        
        return_qiIfpKp["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_CzdREjW=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_qiIfpKp["members"][std::to_string(i)].push_back(temp);
        }
        return return_qiIfpKp;
        }();
return result;}

    VkFramebufferAttachmentImageInfoKHR deserialize_VkFramebufferAttachmentImageInfoKHR(json name){
        auto result=VkFramebufferAttachmentImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WsvsFuy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WsvsFuy=NULL;
        }
    temp_WsvsFuy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WsvsFuy;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_qHMSAGo;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_qHMSAGo=NULL;
        }
    temp_qHMSAGo=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int EgISWsL=0; EgISWsL < result.viewFormatCount; EgISWsL++){
            [&]() {
temp_qHMSAGo[EgISWsL]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][EgISWsL]);}();;
        }
        }();result.pViewFormats=temp_qHMSAGo;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfo(VkRenderPassAttachmentBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zpMUWbB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DdwdYNa=json({});
    
        if (name.pNext==NULL){
            return_DdwdYNa["null"]=true;
            return return_DdwdYNa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_CpgGjAT=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_BDHnqVM=json({});
    
        if (name.pAttachments==NULL){
            return_BDHnqVM["null"]=true;
            return return_BDHnqVM;
        }
        
        return_BDHnqVM["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_KlLKdjL=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_BDHnqVM["members"][std::to_string(i)].push_back(temp);
        }
        return return_BDHnqVM;
        }();
return result;}

    VkRenderPassAttachmentBeginInfo deserialize_VkRenderPassAttachmentBeginInfo(json name){
        auto result=VkRenderPassAttachmentBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CMRsUwq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CMRsUwq=NULL;
        }
    temp_CMRsUwq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CMRsUwq;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_ElSDFKZ;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_ElSDFKZ=NULL;
        }
    temp_ElSDFKZ=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int HhKBmJf=0; HhKBmJf < result.attachmentCount; HhKBmJf++){
            [&]() {
temp_ElSDFKZ[HhKBmJf]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][HhKBmJf]);}();;
        }
        }();result.pAttachments=temp_ElSDFKZ;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfoKHR(VkRenderPassAttachmentBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JnKDGyz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FTuJJoR=json({});
    
        if (name.pNext==NULL){
            return_FTuJJoR["null"]=true;
            return return_FTuJJoR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_gEKKcFF=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_UtMUgjJ=json({});
    
        if (name.pAttachments==NULL){
            return_UtMUgjJ["null"]=true;
            return return_UtMUgjJ;
        }
        
        return_UtMUgjJ["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_JklbbRf=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_UtMUgjJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_UtMUgjJ;
        }();
return result;}

    VkRenderPassAttachmentBeginInfoKHR deserialize_VkRenderPassAttachmentBeginInfoKHR(json name){
        auto result=VkRenderPassAttachmentBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JknGQSy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JknGQSy=NULL;
        }
    temp_JknGQSy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JknGQSy;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_jeERWsX;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_jeERWsX=NULL;
        }
    temp_jeERWsX=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int PSPqFdd=0; PSPqFdd < result.attachmentCount; PSPqFdd++){
            [&]() {
temp_jeERWsX[PSPqFdd]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][PSPqFdd]);}();;
        }
        }();result.pAttachments=temp_jeERWsX;}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(VkPhysicalDeviceTextureCompressionASTCHDRFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KgfdVKs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aKItwzy=json({});
    
        if (name.pNext==NULL){
            return_aKItwzy["null"]=true;
            return return_aKItwzy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_CUWbkku=json({});
    return_CUWbkku=[&]() {
    json return_GDQDhaX=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_CUWbkku;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeatures deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kcKZGyi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tNFHnBx=json({});
    
        if (name.pNext==NULL){
            return_tNFHnBx["null"]=true;
            return return_tNFHnBx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_nXMyMTQ=json({});
    return_nXMyMTQ=[&]() {
    json return_LCREiDh=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_nXMyMTQ;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkPhysicalDeviceCooperativeMatrixFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HmcxLgr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_seHDOOQ=json({});
    
        if (name.pNext==NULL){
            return_seHDOOQ["null"]=true;
            return return_seHDOOQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_SYsLCvF=json({});
    return_SYsLCvF=[&]() {
    json return_WdcaRrO=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_SYsLCvF;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_zAjNMzj=json({});
    return_zAjNMzj=[&]() {
    json return_VKjozYC=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_zAjNMzj;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesNV deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDeviceCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RIepnkJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HwmIWMw=json({});
    
        if (name.pNext==NULL){
            return_HwmIWMw["null"]=true;
            return return_HwmIWMw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_uMIUAJe=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesNV deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesNV(VkCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VtnbBcn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_adRiBle=json({});
    
        if (name.pNext==NULL){
            return_adRiBle["null"]=true;
            return return_adRiBle;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_TxFNGhP=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_cSZUOHz=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_XVDQvoZ=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_VpwdTDN=json({});
    return serialize_VkComponentTypeNV(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_KOqnxOl=json({});
    return serialize_VkComponentTypeNV(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_CFmWYqg=json({});
    return serialize_VkComponentTypeNV(name.CType);}();
result["members"]["DType"]=[&]() {
    json return_BEyLvTG=json({});
    return serialize_VkComponentTypeNV(name.DType);}();
result["members"]["scope"]=[&]() {
    json return_wJPcWdW=json({});
    return serialize_VkScopeNV(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesNV deserialize_VkCooperativeMatrixPropertiesNV(json name){
        auto result=VkCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeNV(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeNV(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeNV(name["members"]["CType"]);}();
[&]() {
result.DType=deserialize_VkComponentTypeNV(name["members"]["DType"]);}();
[&]() {
result.scope=deserialize_VkScopeNV(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UogcDSV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tksdBGK=json({});
    
        if (name.pNext==NULL){
            return_tksdBGK["null"]=true;
            return return_tksdBGK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrImageArrays"]=[&]() {
    json return_RYjMwPP=json({});
    return_RYjMwPP=[&]() {
    json return_ypMTxtG=json({});
    return serialize_uint32_t(name.ycbcrImageArrays);}();return return_RYjMwPP;}();
return result;}

    VkPhysicalDeviceYcbcrImageArraysFeaturesEXT deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcrImageArraysFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrImageArrays=deserialize_uint32_t(name["members"]["ycbcrImageArrays"]);}();}();
return result;}

    json serialize_VkImageViewHandleInfoNVX(VkImageViewHandleInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QkXTxkH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nagFVyq=json({});
    
        if (name.pNext==NULL){
            return_nagFVyq["null"]=true;
            return return_nagFVyq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_Bnhmqbt=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["descriptorType"]=[&]() {
    json return_WJHZQlQ=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["sampler"]=[&]() {
    json return_CwlHTjd=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkImageViewHandleInfoNVX deserialize_VkImageViewHandleInfoNVX(json name){
        auto result=VkImageViewHandleInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XKOhfPC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XKOhfPC=NULL;
        }
    temp_XKOhfPC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XKOhfPC;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkImageViewAddressPropertiesNVX(VkImageViewAddressPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zOWYyPA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LVSMNEQ=json({});
    
        if (name.pNext==NULL){
            return_LVSMNEQ["null"]=true;
            return return_LVSMNEQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_WocDUWN=json({});
    return_WocDUWN=[&]() {
    json return_uNSaUJr=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_WocDUWN;}();
result["members"]["size"]=[&]() {
    json return_LNMWRyx=json({});
    return_LNMWRyx=[&]() {
    json return_JEOBdmS=json({});
    return serialize_uint64_t(name.size);}();return return_LNMWRyx;}();
return result;}

    VkImageViewAddressPropertiesNVX deserialize_VkImageViewAddressPropertiesNVX(json name){
        auto result=VkImageViewAddressPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkPipelineCreationFeedback(VkPipelineCreationFeedback name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_OfopbLp=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_SihWGaz=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedback deserialize_VkPipelineCreationFeedback(json name){
        auto result=VkPipelineCreationFeedback();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackEXT(VkPipelineCreationFeedbackEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_qixfeLJ=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_vVCcArB=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedbackEXT deserialize_VkPipelineCreationFeedbackEXT(json name){
        auto result=VkPipelineCreationFeedbackEXT();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfo(VkPipelineCreationFeedbackCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_voZGUCa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkPuAbQ=json({});
    
        if (name.pNext==NULL){
            return_QkPuAbQ["null"]=true;
            return return_QkPuAbQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_XdHpGXh=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_XdHpGXh["null"]=true;
            return return_XdHpGXh;
        }
        return_XdHpGXh=[&]() {
    json return_TaNXvCW=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_XdHpGXh;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_qxcTQCD=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_eFBTKqe=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_eFBTKqe["null"]=true;
            return return_eFBTKqe;
        }
        
        return_eFBTKqe["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_Nfncvgp=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_eFBTKqe["members"][std::to_string(i)].push_back(temp);
        }
        return return_eFBTKqe;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfo deserialize_VkPipelineCreationFeedbackCreateInfo(json name){
        auto result=VkPipelineCreationFeedbackCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YcqfyFB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YcqfyFB=NULL;
        }
    temp_YcqfyFB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YcqfyFB;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int xjGblfw=0; xjGblfw < result.pipelineStageCreationFeedbackCount; xjGblfw++){
            [&]() {
result.pPipelineStageCreationFeedbacks[xjGblfw]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][xjGblfw]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfoEXT(VkPipelineCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KQosbYQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ceiwjTF=json({});
    
        if (name.pNext==NULL){
            return_ceiwjTF["null"]=true;
            return return_ceiwjTF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_StjeQlt=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_StjeQlt["null"]=true;
            return return_StjeQlt;
        }
        return_StjeQlt=[&]() {
    json return_CAynfKl=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_StjeQlt;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_gxuaQip=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_yfEwFYY=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_yfEwFYY["null"]=true;
            return return_yfEwFYY;
        }
        
        return_yfEwFYY["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_UYoyllL=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_yfEwFYY["members"][std::to_string(i)].push_back(temp);
        }
        return return_yfEwFYY;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfoEXT deserialize_VkPipelineCreationFeedbackCreateInfoEXT(json name){
        auto result=VkPipelineCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LSaePOS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LSaePOS=NULL;
        }
    temp_LSaePOS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LSaePOS;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int QlGrGqz=0; QlGrGqz < result.pipelineStageCreationFeedbackCount; QlGrGqz++){
            [&]() {
result.pPipelineStageCreationFeedbacks[QlGrGqz]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][QlGrGqz]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePresentBarrierFeaturesNV(VkPhysicalDevicePresentBarrierFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cfWVKig=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tMdiMLS=json({});
    
        if (name.pNext==NULL){
            return_tMdiMLS["null"]=true;
            return return_tMdiMLS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrier"]=[&]() {
    json return_FUvsdwB=json({});
    return_FUvsdwB=[&]() {
    json return_MDCLzHP=json({});
    return serialize_uint32_t(name.presentBarrier);}();return return_FUvsdwB;}();
return result;}

    VkPhysicalDevicePresentBarrierFeaturesNV deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(json name){
        auto result=VkPhysicalDevicePresentBarrierFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrier=deserialize_uint32_t(name["members"]["presentBarrier"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesPresentBarrierNV(VkSurfaceCapabilitiesPresentBarrierNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ewoBMPv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PokCDZw=json({});
    
        if (name.pNext==NULL){
            return_PokCDZw["null"]=true;
            return return_PokCDZw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierSupported"]=[&]() {
    json return_HMsSiMF=json({});
    return_HMsSiMF=[&]() {
    json return_gxeQKJj=json({});
    return serialize_uint32_t(name.presentBarrierSupported);}();return return_HMsSiMF;}();
return result;}

    VkSurfaceCapabilitiesPresentBarrierNV deserialize_VkSurfaceCapabilitiesPresentBarrierNV(json name){
        auto result=VkSurfaceCapabilitiesPresentBarrierNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierSupported=deserialize_uint32_t(name["members"]["presentBarrierSupported"]);}();}();
return result;}

    json serialize_VkSwapchainPresentBarrierCreateInfoNV(VkSwapchainPresentBarrierCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MAvANcJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nCfvJOJ=json({});
    
        if (name.pNext==NULL){
            return_nCfvJOJ["null"]=true;
            return return_nCfvJOJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierEnable"]=[&]() {
    json return_kDpCzXB=json({});
    return_kDpCzXB=[&]() {
    json return_ZBMlGoP=json({});
    return serialize_uint32_t(name.presentBarrierEnable);}();return return_kDpCzXB;}();
return result;}

    VkSwapchainPresentBarrierCreateInfoNV deserialize_VkSwapchainPresentBarrierCreateInfoNV(json name){
        auto result=VkSwapchainPresentBarrierCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierEnable=deserialize_uint32_t(name["members"]["presentBarrierEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(VkPhysicalDevicePerformanceQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IeOPpUH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YQGnixr=json({});
    
        if (name.pNext==NULL){
            return_YQGnixr["null"]=true;
            return return_YQGnixr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCounterQueryPools"]=[&]() {
    json return_PTXjOKC=json({});
    return_PTXjOKC=[&]() {
    json return_EkTynpq=json({});
    return serialize_uint32_t(name.performanceCounterQueryPools);}();return return_PTXjOKC;}();
result["members"]["performanceCounterMultipleQueryPools"]=[&]() {
    json return_gRdpltt=json({});
    return_gRdpltt=[&]() {
    json return_pNwdDDB=json({});
    return serialize_uint32_t(name.performanceCounterMultipleQueryPools);}();return return_gRdpltt;}();
return result;}

    VkPhysicalDevicePerformanceQueryFeaturesKHR deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.performanceCounterQueryPools=deserialize_uint32_t(name["members"]["performanceCounterQueryPools"]);}();}();
[&]() {
[&]() {
result.performanceCounterMultipleQueryPools=deserialize_uint32_t(name["members"]["performanceCounterMultipleQueryPools"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(VkPhysicalDevicePerformanceQueryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qMdRTuL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YbUMwRs=json({});
    
        if (name.pNext==NULL){
            return_YbUMwRs["null"]=true;
            return return_YbUMwRs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allowCommandBufferQueryCopies"]=[&]() {
    json return_qaEBCWl=json({});
    return_qaEBCWl=[&]() {
    json return_gsdrbWo=json({});
    return serialize_uint32_t(name.allowCommandBufferQueryCopies);}();return return_qaEBCWl;}();
return result;}

    VkPhysicalDevicePerformanceQueryPropertiesKHR deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.allowCommandBufferQueryCopies=deserialize_uint32_t(name["members"]["allowCommandBufferQueryCopies"]);}();}();
return result;}

    json serialize_VkPerformanceCounterKHR(VkPerformanceCounterKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fnPQGDE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sIpgUXT=json({});
    
        if (name.pNext==NULL){
            return_sIpgUXT["null"]=true;
            return return_sIpgUXT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["unit"]=[&]() {
    json return_XHcrORo=json({});
    return serialize_VkPerformanceCounterUnitKHR(name.unit);}();
result["members"]["scope"]=[&]() {
    json return_gopPHHC=json({});
    return serialize_VkPerformanceCounterScopeKHR(name.scope);}();
result["members"]["storage"]=[&]() {
    json return_RIsVXbH=json({});
    return serialize_VkPerformanceCounterStorageKHR(name.storage);}();
result["members"]["uuid"]=[&]() {
    json return_bRIYCsQ=json({});
    
        return_bRIYCsQ["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lYqpxEd=json({});
    return serialize_uint8_t(name.uuid[i]);}();
            return_bRIYCsQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_bRIYCsQ;
        }();
return result;}

    VkPerformanceCounterKHR deserialize_VkPerformanceCounterKHR(json name){
        auto result=VkPerformanceCounterKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.unit=deserialize_VkPerformanceCounterUnitKHR(name["members"]["unit"]);}();
[&]() {
result.scope=deserialize_VkPerformanceCounterScopeKHR(name["members"]["scope"]);}();
[&]() {
result.storage=deserialize_VkPerformanceCounterStorageKHR(name["members"]["storage"]);}();
[&]() {

        for (int VcdJEAQ=0; VcdJEAQ < VK_UUID_SIZE; VcdJEAQ++){
            [&]() {
result.uuid[VcdJEAQ]=deserialize_uint8_t(name["members"]["uuid"]["members"][VcdJEAQ]);}();;
        }
        }();
return result;}

    json serialize_VkPerformanceCounterDescriptionKHR(VkPerformanceCounterDescriptionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XHNaURm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HsIqkHE=json({});
    
        if (name.pNext==NULL){
            return_HsIqkHE["null"]=true;
            return return_HsIqkHE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OrlsSsx=json({});
    return serialize_VkPerformanceCounterDescriptionFlagsKHR(name.flags);}();
result["members"]["name"]=[&]() {
    json return_KQBdDft=json({});
    
        return_KQBdDft["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_WshCbbB=json({});
    return serialize_char(name.name[i]);}();
            return_KQBdDft["members"][std::to_string(i)].push_back(temp);
        }
        return return_KQBdDft;
        }();
result["members"]["category"]=[&]() {
    json return_ANlIqJv=json({});
    
        return_ANlIqJv["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_KkICnNx=json({});
    return serialize_char(name.category[i]);}();
            return_ANlIqJv["members"][std::to_string(i)].push_back(temp);
        }
        return return_ANlIqJv;
        }();
result["members"]["description"]=[&]() {
    json return_wBZIrfk=json({});
    
        return_wBZIrfk["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_BIuMssF=json({});
    return serialize_char(name.description[i]);}();
            return_wBZIrfk["members"][std::to_string(i)].push_back(temp);
        }
        return return_wBZIrfk;
        }();
return result;}

    VkPerformanceCounterDescriptionKHR deserialize_VkPerformanceCounterDescriptionKHR(json name){
        auto result=VkPerformanceCounterDescriptionKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkPerformanceCounterDescriptionFlagsKHR(name["members"]["flags"]);}();
[&]() {

        for (int ISMDKTu=0; ISMDKTu < VK_MAX_DESCRIPTION_SIZE; ISMDKTu++){
            [&]() {
result.name[ISMDKTu]=deserialize_char(name["members"]["name"]["members"][ISMDKTu]);}();;
        }
        }();
[&]() {

        for (int nHhIJch=0; nHhIJch < VK_MAX_DESCRIPTION_SIZE; nHhIJch++){
            [&]() {
result.category[nHhIJch]=deserialize_char(name["members"]["category"]["members"][nHhIJch]);}();;
        }
        }();
[&]() {

        for (int TWfWcUs=0; TWfWcUs < VK_MAX_DESCRIPTION_SIZE; TWfWcUs++){
            [&]() {
result.description[TWfWcUs]=deserialize_char(name["members"]["description"]["members"][TWfWcUs]);}();;
        }
        }();
return result;}

    json serialize_VkQueryPoolPerformanceCreateInfoKHR(VkQueryPoolPerformanceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nGkEgNf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qDJSiUo=json({});
    
        if (name.pNext==NULL){
            return_qDJSiUo["null"]=true;
            return return_qDJSiUo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_soZlqgL=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["counterIndexCount"]=[&]() {
    json return_SSMGUKI=json({});
    return serialize_uint32_t(name.counterIndexCount);}();
result["members"]["pCounterIndices"]=[&]() {
    json return_oSEciaQ=json({});
    
        if (name.pCounterIndices==NULL){
            return_oSEciaQ["null"]=true;
            return return_oSEciaQ;
        }
        
        return_oSEciaQ["members"]={};
        for(int i=0; i < name.counterIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_elqwXgF=json({});
    return serialize_uint32_t(name.pCounterIndices[i]);}();
            return_oSEciaQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_oSEciaQ;
        }();
return result;}

    VkQueryPoolPerformanceCreateInfoKHR deserialize_VkQueryPoolPerformanceCreateInfoKHR(json name){
        auto result=VkQueryPoolPerformanceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IWLurOD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IWLurOD=NULL;
        }
    temp_IWLurOD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IWLurOD;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.counterIndexCount=deserialize_uint32_t(name["members"]["counterIndexCount"]);}();
[&]() {
uint32_t* temp_YUnohoN;[&]() {

        if (name["members"]["pCounterIndices"].contains("null")){
        temp_YUnohoN=NULL;
        }
    temp_YUnohoN=(uint32_t*)malloc(result.counterIndexCount*sizeof(uint32_t));
        for (int gbzsvYY=0; gbzsvYY < result.counterIndexCount; gbzsvYY++){
            [&]() {
temp_YUnohoN[gbzsvYY]=deserialize_uint32_t(name["members"]["pCounterIndices"]["members"][gbzsvYY]);}();;
        }
        }();result.pCounterIndices=temp_YUnohoN;}();
return result;}

    json serialize_VkPerformanceCounterResultKHR(VkPerformanceCounterResultKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["int32"]=[&]() {
    json return_McrSswr=json({});
    return serialize_int32_t(name.int32);}();
result["members"]["int64"]=[&]() {
    json return_LPAosfb=json({});
    return serialize_int64_t(name.int64);}();
result["members"]["uint32"]=[&]() {
    json return_iVzheAM=json({});
    return serialize_uint32_t(name.uint32);}();
result["members"]["uint64"]=[&]() {
    json return_EnaiWpy=json({});
    return serialize_uint64_t(name.uint64);}();
result["members"]["float32"]=[&]() {
    json return_iclqVow=json({});
    return serialize_float(name.float32);}();
result["members"]["float64"]=[&]() {
    json return_Zozetvj=json({});
    return serialize_double(name.float64);}();
return result;}

    VkPerformanceCounterResultKHR deserialize_VkPerformanceCounterResultKHR(json name){
        auto result=VkPerformanceCounterResultKHR();
    
[&]() {
result.int32=deserialize_int32_t(name["members"]["int32"]);}();
[&]() {
result.int64=deserialize_int64_t(name["members"]["int64"]);}();
[&]() {
result.uint32=deserialize_uint32_t(name["members"]["uint32"]);}();
[&]() {
result.uint64=deserialize_uint64_t(name["members"]["uint64"]);}();
[&]() {
result.float32=deserialize_float(name["members"]["float32"]);}();
[&]() {
result.float64=deserialize_double(name["members"]["float64"]);}();
return result;}

    json serialize_VkAcquireProfilingLockInfoKHR(VkAcquireProfilingLockInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WyziARk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vZJCqcZ=json({});
    
        if (name.pNext==NULL){
            return_vZJCqcZ["null"]=true;
            return return_vZJCqcZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_aZWjfvb=json({});
    return serialize_VkAcquireProfilingLockFlagsKHR(name.flags);}();
result["members"]["timeout"]=[&]() {
    json return_pDWWocP=json({});
    return serialize_uint64_t(name.timeout);}();
return result;}

    VkAcquireProfilingLockInfoKHR deserialize_VkAcquireProfilingLockInfoKHR(json name){
        auto result=VkAcquireProfilingLockInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FiyjzcH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FiyjzcH=NULL;
        }
    temp_FiyjzcH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FiyjzcH;}();
[&]() {
result.flags=deserialize_VkAcquireProfilingLockFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
return result;}

    json serialize_VkPerformanceQuerySubmitInfoKHR(VkPerformanceQuerySubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vfJVhVR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZaKHhhB=json({});
    
        if (name.pNext==NULL){
            return_ZaKHhhB["null"]=true;
            return return_ZaKHhhB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["counterPassIndex"]=[&]() {
    json return_TbHFpKM=json({});
    return serialize_uint32_t(name.counterPassIndex);}();
return result;}

    VkPerformanceQuerySubmitInfoKHR deserialize_VkPerformanceQuerySubmitInfoKHR(json name){
        auto result=VkPerformanceQuerySubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CEsDNNB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CEsDNNB=NULL;
        }
    temp_CEsDNNB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CEsDNNB;}();
[&]() {
result.counterPassIndex=deserialize_uint32_t(name["members"]["counterPassIndex"]);}();
return result;}

    json serialize_VkHeadlessSurfaceCreateInfoEXT(VkHeadlessSurfaceCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aLDNgZv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KbTezVQ=json({});
    
        if (name.pNext==NULL){
            return_KbTezVQ["null"]=true;
            return return_KbTezVQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qQUuuLy=json({});
    return serialize_VkHeadlessSurfaceCreateFlagsEXT(name.flags);}();
return result;}

    VkHeadlessSurfaceCreateInfoEXT deserialize_VkHeadlessSurfaceCreateInfoEXT(json name){
        auto result=VkHeadlessSurfaceCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FxgneHk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FxgneHk=NULL;
        }
    temp_FxgneHk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FxgneHk;}();
[&]() {
result.flags=deserialize_VkHeadlessSurfaceCreateFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkPhysicalDeviceCoverageReductionModeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sZZbfrm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nUbUNYB=json({});
    
        if (name.pNext==NULL){
            return_nUbUNYB["null"]=true;
            return return_nUbUNYB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_xaNSEHs=json({});
    return_xaNSEHs=[&]() {
    json return_dogmpaV=json({});
    return serialize_uint32_t(name.coverageReductionMode);}();return return_xaNSEHs;}();
return result;}

    VkPhysicalDeviceCoverageReductionModeFeaturesNV deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(json name){
        auto result=VkPhysicalDeviceCoverageReductionModeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.coverageReductionMode=deserialize_uint32_t(name["members"]["coverageReductionMode"]);}();}();
return result;}

    json serialize_VkPipelineCoverageReductionStateCreateInfoNV(VkPipelineCoverageReductionStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xJfsFdJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tmMyBqY=json({});
    
        if (name.pNext==NULL){
            return_tmMyBqY["null"]=true;
            return return_tmMyBqY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OCiEGMZ=json({});
    return serialize_VkPipelineCoverageReductionStateCreateFlagsNV(name.flags);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_SVBlPhA=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
return result;}

    VkPipelineCoverageReductionStateCreateInfoNV deserialize_VkPipelineCoverageReductionStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageReductionStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WUtEWew;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WUtEWew=NULL;
        }
    temp_WUtEWew=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WUtEWew;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
return result;}

    json serialize_VkFramebufferMixedSamplesCombinationNV(VkFramebufferMixedSamplesCombinationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oOVKEKh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aFIuJAG=json({});
    
        if (name.pNext==NULL){
            return_aFIuJAG["null"]=true;
            return return_aFIuJAG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_hYRKYkk=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_FMEIeiM=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["depthStencilSamples"]=[&]() {
    json return_XnTWufm=json({});
    return serialize_VkSampleCountFlags(name.depthStencilSamples);}();
result["members"]["colorSamples"]=[&]() {
    json return_xoSOKpu=json({});
    return serialize_VkSampleCountFlags(name.colorSamples);}();
return result;}

    VkFramebufferMixedSamplesCombinationNV deserialize_VkFramebufferMixedSamplesCombinationNV(json name){
        auto result=VkFramebufferMixedSamplesCombinationNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
result.depthStencilSamples=deserialize_VkSampleCountFlags(name["members"]["depthStencilSamples"]);}();
[&]() {
result.colorSamples=deserialize_VkSampleCountFlags(name["members"]["colorSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NvAYSDc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mspuINd=json({});
    
        if (name.pNext==NULL){
            return_mspuINd["null"]=true;
            return return_mspuINd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerFunctions2"]=[&]() {
    json return_jMSLlsy=json({});
    return_jMSLlsy=[&]() {
    json return_pCxunkg=json({});
    return serialize_uint32_t(name.shaderIntegerFunctions2);}();return return_jMSLlsy;}();
return result;}

    VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(json name){
        auto result=VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerFunctions2=deserialize_uint32_t(name["members"]["shaderIntegerFunctions2"]);}();}();
return result;}

    json serialize_VkPerformanceValueDataINTEL(VkPerformanceValueDataINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["value32"]=[&]() {
    json return_jKGQcHI=json({});
    return serialize_uint32_t(name.value32);}();
result["members"]["value64"]=[&]() {
    json return_biRZAMV=json({});
    return serialize_uint64_t(name.value64);}();
result["members"]["valueFloat"]=[&]() {
    json return_kYQaDEQ=json({});
    return serialize_float(name.valueFloat);}();
result["members"]["valueBool"]=[&]() {
    json return_lJNsJQe=json({});
    return_lJNsJQe=[&]() {
    json return_xPFBTdO=json({});
    return serialize_uint32_t(name.valueBool);}();return return_lJNsJQe;}();
result["members"]["valueString"]=[&]() {
    json return_aEvpVSC=json({});
    
        if (name.valueString==NULL){
            return_aEvpVSC["null"]=true;
            return return_aEvpVSC;
        }
        return serialize_char_p(name.valueString);
}();
return result;}

    VkPerformanceValueDataINTEL deserialize_VkPerformanceValueDataINTEL(json name){
        auto result=VkPerformanceValueDataINTEL();
    
[&]() {
result.value32=deserialize_uint32_t(name["members"]["value32"]);}();
[&]() {
result.value64=deserialize_uint64_t(name["members"]["value64"]);}();
[&]() {
result.valueFloat=deserialize_float(name["members"]["valueFloat"]);}();
[&]() {
[&]() {
result.valueBool=deserialize_uint32_t(name["members"]["valueBool"]);}();}();
[&]() {
char* temp_MtfKCRs;[&]() {

        if (name["members"]["valueString"].contains("null")){
        temp_MtfKCRs=NULL;
        }
    temp_MtfKCRs=deserialize_char_p(name["members"]["valueString"]);
}();result.valueString=temp_MtfKCRs;}();
return result;}

    json serialize_VkPerformanceValueINTEL(VkPerformanceValueINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_xZdsccj=json({});
    return serialize_VkPerformanceValueTypeINTEL(name.type);}();
result["members"]["data"]=[&]() {
    json return_qRuajEH=json({});
    return serialize_VkPerformanceValueDataINTEL(name.data);}();
return result;}

    VkPerformanceValueINTEL deserialize_VkPerformanceValueINTEL(json name){
        auto result=VkPerformanceValueINTEL();
    
[&]() {
result.type=deserialize_VkPerformanceValueTypeINTEL(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkPerformanceValueDataINTEL(name["members"]["data"]);}();
return result;}

    json serialize_VkInitializePerformanceApiInfoINTEL(VkInitializePerformanceApiInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rQsGkNp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IasAgmb=json({});
    
        if (name.pNext==NULL){
            return_IasAgmb["null"]=true;
            return return_IasAgmb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pUserData"]=[&]() {
    json return_lEOzreg=json({});
    
        if (name.pUserData==NULL){
            return_lEOzreg["null"]=true;
            return return_lEOzreg;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}

    VkInitializePerformanceApiInfoINTEL deserialize_VkInitializePerformanceApiInfoINTEL(json name){
        auto result=VkInitializePerformanceApiInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FKyXYer;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FKyXYer=NULL;
        }
    temp_FKyXYer=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FKyXYer;}();
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
return result;}

    json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(VkQueryPoolPerformanceQueryCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aXyExfO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lnHZdrJ=json({});
    
        if (name.pNext==NULL){
            return_lnHZdrJ["null"]=true;
            return return_lnHZdrJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_hcsvXRu=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolPerformanceQueryCreateInfoINTEL deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(json name){
        auto result=VkQueryPoolPerformanceQueryCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qBVJJuj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qBVJJuj=NULL;
        }
    temp_qBVJJuj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qBVJJuj;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfoINTEL(VkQueryPoolCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UlIvSrq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XlOFfxS=json({});
    
        if (name.pNext==NULL){
            return_XlOFfxS["null"]=true;
            return return_XlOFfxS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_xYNasej=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolCreateInfoINTEL deserialize_VkQueryPoolCreateInfoINTEL(json name){
        auto result=VkQueryPoolCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KvTIZHV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KvTIZHV=NULL;
        }
    temp_KvTIZHV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KvTIZHV;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkPerformanceMarkerInfoINTEL(VkPerformanceMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ofrHJxN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FWCVwnH=json({});
    
        if (name.pNext==NULL){
            return_FWCVwnH["null"]=true;
            return return_FWCVwnH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_NVKPyez=json({});
    return serialize_uint64_t(name.marker);}();
return result;}

    VkPerformanceMarkerInfoINTEL deserialize_VkPerformanceMarkerInfoINTEL(json name){
        auto result=VkPerformanceMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lIleJYW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lIleJYW=NULL;
        }
    temp_lIleJYW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lIleJYW;}();
[&]() {
result.marker=deserialize_uint64_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceStreamMarkerInfoINTEL(VkPerformanceStreamMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zkyVddR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tACrUqX=json({});
    
        if (name.pNext==NULL){
            return_tACrUqX["null"]=true;
            return return_tACrUqX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_NfLPSwJ=json({});
    return serialize_uint32_t(name.marker);}();
return result;}

    VkPerformanceStreamMarkerInfoINTEL deserialize_VkPerformanceStreamMarkerInfoINTEL(json name){
        auto result=VkPerformanceStreamMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ANeIefY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ANeIefY=NULL;
        }
    temp_ANeIefY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ANeIefY;}();
[&]() {
result.marker=deserialize_uint32_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceOverrideInfoINTEL(VkPerformanceOverrideInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Vnxoduh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_upZFvSp=json({});
    
        if (name.pNext==NULL){
            return_upZFvSp["null"]=true;
            return return_upZFvSp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_EzYkZcr=json({});
    return serialize_VkPerformanceOverrideTypeINTEL(name.type);}();
result["members"]["enable"]=[&]() {
    json return_pWDAsQt=json({});
    return_pWDAsQt=[&]() {
    json return_KeLRAyH=json({});
    return serialize_uint32_t(name.enable);}();return return_pWDAsQt;}();
result["members"]["parameter"]=[&]() {
    json return_STKaQRw=json({});
    return serialize_uint64_t(name.parameter);}();
return result;}

    VkPerformanceOverrideInfoINTEL deserialize_VkPerformanceOverrideInfoINTEL(json name){
        auto result=VkPerformanceOverrideInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XUHPjpZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XUHPjpZ=NULL;
        }
    temp_XUHPjpZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XUHPjpZ;}();
[&]() {
result.type=deserialize_VkPerformanceOverrideTypeINTEL(name["members"]["type"]);}();
[&]() {
[&]() {
result.enable=deserialize_uint32_t(name["members"]["enable"]);}();}();
[&]() {
result.parameter=deserialize_uint64_t(name["members"]["parameter"]);}();
return result;}

    json serialize_VkPerformanceConfigurationAcquireInfoINTEL(VkPerformanceConfigurationAcquireInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xZDECtZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DRdCUdj=json({});
    
        if (name.pNext==NULL){
            return_DRdCUdj["null"]=true;
            return return_DRdCUdj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_ABYKcgz=json({});
    return serialize_VkPerformanceConfigurationTypeINTEL(name.type);}();
return result;}

    VkPerformanceConfigurationAcquireInfoINTEL deserialize_VkPerformanceConfigurationAcquireInfoINTEL(json name){
        auto result=VkPerformanceConfigurationAcquireInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hlRPHHV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hlRPHHV=NULL;
        }
    temp_hlRPHHV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hlRPHHV;}();
[&]() {
result.type=deserialize_VkPerformanceConfigurationTypeINTEL(name["members"]["type"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderClockFeaturesKHR(VkPhysicalDeviceShaderClockFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MYAynFk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cbBHKdX=json({});
    
        if (name.pNext==NULL){
            return_cbBHKdX["null"]=true;
            return return_cbBHKdX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupClock"]=[&]() {
    json return_vOUrKVQ=json({});
    return_vOUrKVQ=[&]() {
    json return_LIMYazV=json({});
    return serialize_uint32_t(name.shaderSubgroupClock);}();return return_vOUrKVQ;}();
result["members"]["shaderDeviceClock"]=[&]() {
    json return_HZlnlhm=json({});
    return_HZlnlhm=[&]() {
    json return_QeQPlmf=json({});
    return serialize_uint32_t(name.shaderDeviceClock);}();return return_HZlnlhm;}();
return result;}

    VkPhysicalDeviceShaderClockFeaturesKHR deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderClockFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupClock=deserialize_uint32_t(name["members"]["shaderSubgroupClock"]);}();}();
[&]() {
[&]() {
result.shaderDeviceClock=deserialize_uint32_t(name["members"]["shaderDeviceClock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkPhysicalDeviceIndexTypeUint8FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AkGvVtb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bpOtBLj=json({});
    
        if (name.pNext==NULL){
            return_bpOtBLj["null"]=true;
            return return_bpOtBLj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexTypeUint8"]=[&]() {
    json return_CgXAXfe=json({});
    return_CgXAXfe=[&]() {
    json return_eQvrKfc=json({});
    return serialize_uint32_t(name.indexTypeUint8);}();return return_CgXAXfe;}();
return result;}

    VkPhysicalDeviceIndexTypeUint8FeaturesEXT deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(json name){
        auto result=VkPhysicalDeviceIndexTypeUint8FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indexTypeUint8=deserialize_uint32_t(name["members"]["indexTypeUint8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_daWpPEZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WKorylK=json({});
    
        if (name.pNext==NULL){
            return_WKorylK["null"]=true;
            return return_WKorylK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMCount"]=[&]() {
    json return_XSCufig=json({});
    return serialize_uint32_t(name.shaderSMCount);}();
result["members"]["shaderWarpsPerSM"]=[&]() {
    json return_FatKQID=json({});
    return serialize_uint32_t(name.shaderWarpsPerSM);}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsPropertiesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderSMCount=deserialize_uint32_t(name["members"]["shaderSMCount"]);}();
[&]() {
result.shaderWarpsPerSM=deserialize_uint32_t(name["members"]["shaderWarpsPerSM"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YFNqduh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wbOOedI=json({});
    
        if (name.pNext==NULL){
            return_wbOOedI["null"]=true;
            return return_wbOOedI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMBuiltins"]=[&]() {
    json return_SAwcHQd=json({});
    return_SAwcHQd=[&]() {
    json return_ajrwBjR=json({});
    return serialize_uint32_t(name.shaderSMBuiltins);}();return return_SAwcHQd;}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsFeaturesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSMBuiltins=deserialize_uint32_t(name["members"]["shaderSMBuiltins"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jUmZbRs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dAWyywd=json({});
    
        if (name.pNext==NULL){
            return_dAWyywd["null"]=true;
            return return_dAWyywd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderSampleInterlock"]=[&]() {
    json return_pOYSoji=json({});
    return_pOYSoji=[&]() {
    json return_rfMKQHF=json({});
    return serialize_uint32_t(name.fragmentShaderSampleInterlock);}();return return_pOYSoji;}();
result["members"]["fragmentShaderPixelInterlock"]=[&]() {
    json return_ZdwMUeQ=json({});
    return_ZdwMUeQ=[&]() {
    json return_oZpTVhg=json({});
    return serialize_uint32_t(name.fragmentShaderPixelInterlock);}();return return_ZdwMUeQ;}();
result["members"]["fragmentShaderShadingRateInterlock"]=[&]() {
    json return_FVNElke=json({});
    return_FVNElke=[&]() {
    json return_UbrwmNp=json({});
    return serialize_uint32_t(name.fragmentShaderShadingRateInterlock);}();return return_FVNElke;}();
return result;}

    VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderSampleInterlock=deserialize_uint32_t(name["members"]["fragmentShaderSampleInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderPixelInterlock=deserialize_uint32_t(name["members"]["fragmentShaderPixelInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderShadingRateInterlock=deserialize_uint32_t(name["members"]["fragmentShaderShadingRateInterlock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cwJvpzI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fzJfZDL=json({});
    
        if (name.pNext==NULL){
            return_fzJfZDL["null"]=true;
            return return_fzJfZDL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_grOjTdc=json({});
    return_grOjTdc=[&]() {
    json return_alZDKSO=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_grOjTdc;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vYBjpJz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XQUanEJ=json({});
    
        if (name.pNext==NULL){
            return_XQUanEJ["null"]=true;
            return return_XQUanEJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_XFBMSXF=json({});
    return_XFBMSXF=[&]() {
    json return_PfSqFNl=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_XFBMSXF;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayout(VkAttachmentReferenceStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BDHXKuT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SRBjeZV=json({});
    
        if (name.pNext==NULL){
            return_SRBjeZV["null"]=true;
            return return_SRBjeZV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_SleiFow=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayout deserialize_VkAttachmentReferenceStencilLayout(json name){
        auto result=VkAttachmentReferenceStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LsAgVWq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LsnLtXr=json({});
    
        if (name.pNext==NULL){
            return_LsnLtXr["null"]=true;
            return return_LsnLtXr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveTopologyListRestart"]=[&]() {
    json return_hxeCkAp=json({});
    return_hxeCkAp=[&]() {
    json return_cbSUUpA=json({});
    return serialize_uint32_t(name.primitiveTopologyListRestart);}();return return_hxeCkAp;}();
result["members"]["primitiveTopologyPatchListRestart"]=[&]() {
    json return_aDjGSLj=json({});
    return_aDjGSLj=[&]() {
    json return_dxHSHrU=json({});
    return serialize_uint32_t(name.primitiveTopologyPatchListRestart);}();return return_aDjGSLj;}();
return result;}

    VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitiveTopologyListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyListRestart"]);}();}();
[&]() {
[&]() {
result.primitiveTopologyPatchListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyPatchListRestart"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayoutKHR(VkAttachmentReferenceStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EcbXzQk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TKSyPuC=json({});
    
        if (name.pNext==NULL){
            return_TKSyPuC["null"]=true;
            return return_TKSyPuC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_nYjTeGc=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayoutKHR deserialize_VkAttachmentReferenceStencilLayoutKHR(json name){
        auto result=VkAttachmentReferenceStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayout(VkAttachmentDescriptionStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QRpJmWd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rECEJVa=json({});
    
        if (name.pNext==NULL){
            return_rECEJVa["null"]=true;
            return return_rECEJVa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_ZnPupox=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_tMCAFNl=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayout deserialize_VkAttachmentDescriptionStencilLayout(json name){
        auto result=VkAttachmentDescriptionStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayoutKHR(VkAttachmentDescriptionStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NMYKScs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LFhEXFY=json({});
    
        if (name.pNext==NULL){
            return_LFhEXFY["null"]=true;
            return return_LFhEXFY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_wfVAnYg=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_MNuKmFI=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayoutKHR deserialize_VkAttachmentDescriptionStencilLayoutKHR(json name){
        auto result=VkAttachmentDescriptionStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MZPHGkX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XeFfWuz=json({});
    
        if (name.pNext==NULL){
            return_XeFfWuz["null"]=true;
            return return_XeFfWuz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineExecutableInfo"]=[&]() {
    json return_yFhBSFN=json({});
    return_yFhBSFN=[&]() {
    json return_IbbpCiO=json({});
    return serialize_uint32_t(name.pipelineExecutableInfo);}();return return_yFhBSFN;}();
return result;}

    VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(json name){
        auto result=VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineExecutableInfo=deserialize_uint32_t(name["members"]["pipelineExecutableInfo"]);}();}();
return result;}

    json serialize_VkPipelineInfoKHR(VkPipelineInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_loapiWN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UhwFrIR=json({});
    
        if (name.pNext==NULL){
            return_UhwFrIR["null"]=true;
            return return_UhwFrIR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_gpbZiqW=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoKHR deserialize_VkPipelineInfoKHR(json name){
        auto result=VkPipelineInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iDiJNJD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iDiJNJD=NULL;
        }
    temp_iDiJNJD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iDiJNJD;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineInfoEXT(VkPipelineInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_INTJqgD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jJjOaXT=json({});
    
        if (name.pNext==NULL){
            return_jJjOaXT["null"]=true;
            return return_jJjOaXT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_CweMrLt=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoEXT deserialize_VkPipelineInfoEXT(json name){
        auto result=VkPipelineInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kiOqWzy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kiOqWzy=NULL;
        }
    temp_kiOqWzy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kiOqWzy;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineExecutablePropertiesKHR(VkPipelineExecutablePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CcSBzYJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_koNyxpf=json({});
    
        if (name.pNext==NULL){
            return_koNyxpf["null"]=true;
            return return_koNyxpf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stages"]=[&]() {
    json return_TJCeDls=json({});
    return serialize_VkShaderStageFlags(name.stages);}();
result["members"]["name"]=[&]() {
    json return_gAJWZSf=json({});
    
        return_gAJWZSf["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_yDmCZyM=json({});
    return serialize_char(name.name[i]);}();
            return_gAJWZSf["members"][std::to_string(i)].push_back(temp);
        }
        return return_gAJWZSf;
        }();
result["members"]["description"]=[&]() {
    json return_baIsdPA=json({});
    
        return_baIsdPA["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_wqhfwNC=json({});
    return serialize_char(name.description[i]);}();
            return_baIsdPA["members"][std::to_string(i)].push_back(temp);
        }
        return return_baIsdPA;
        }();
result["members"]["subgroupSize"]=[&]() {
    json return_uTXjhuq=json({});
    return serialize_uint32_t(name.subgroupSize);}();
return result;}

    VkPipelineExecutablePropertiesKHR deserialize_VkPipelineExecutablePropertiesKHR(json name){
        auto result=VkPipelineExecutablePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stages=deserialize_VkShaderStageFlags(name["members"]["stages"]);}();
[&]() {

        for (int elcYZmq=0; elcYZmq < VK_MAX_DESCRIPTION_SIZE; elcYZmq++){
            [&]() {
result.name[elcYZmq]=deserialize_char(name["members"]["name"]["members"][elcYZmq]);}();;
        }
        }();
[&]() {

        for (int HYEwcnW=0; HYEwcnW < VK_MAX_DESCRIPTION_SIZE; HYEwcnW++){
            [&]() {
result.description[HYEwcnW]=deserialize_char(name["members"]["description"]["members"][HYEwcnW]);}();;
        }
        }();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
return result;}

    json serialize_VkPipelineExecutableInfoKHR(VkPipelineExecutableInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kHPkSlP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DteVpEq=json({});
    
        if (name.pNext==NULL){
            return_DteVpEq["null"]=true;
            return return_DteVpEq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_nenkUhA=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["executableIndex"]=[&]() {
    json return_UOVVXAF=json({});
    return serialize_uint32_t(name.executableIndex);}();
return result;}

    VkPipelineExecutableInfoKHR deserialize_VkPipelineExecutableInfoKHR(json name){
        auto result=VkPipelineExecutableInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cRKIJGU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cRKIJGU=NULL;
        }
    temp_cRKIJGU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cRKIJGU;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.executableIndex=deserialize_uint32_t(name["members"]["executableIndex"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticValueKHR(VkPipelineExecutableStatisticValueKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["b32"]=[&]() {
    json return_DolMjck=json({});
    return_DolMjck=[&]() {
    json return_yunpZhf=json({});
    return serialize_uint32_t(name.b32);}();return return_DolMjck;}();
result["members"]["i64"]=[&]() {
    json return_vyPBNpg=json({});
    return serialize_int64_t(name.i64);}();
result["members"]["u64"]=[&]() {
    json return_ofnSNci=json({});
    return serialize_uint64_t(name.u64);}();
result["members"]["f64"]=[&]() {
    json return_ifuSQem=json({});
    return serialize_double(name.f64);}();
return result;}

    VkPipelineExecutableStatisticValueKHR deserialize_VkPipelineExecutableStatisticValueKHR(json name){
        auto result=VkPipelineExecutableStatisticValueKHR();
    
[&]() {
[&]() {
result.b32=deserialize_uint32_t(name["members"]["b32"]);}();}();
[&]() {
result.i64=deserialize_int64_t(name["members"]["i64"]);}();
[&]() {
result.u64=deserialize_uint64_t(name["members"]["u64"]);}();
[&]() {
result.f64=deserialize_double(name["members"]["f64"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticKHR(VkPipelineExecutableStatisticKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xEMgXNt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PFTBwBc=json({});
    
        if (name.pNext==NULL){
            return_PFTBwBc["null"]=true;
            return return_PFTBwBc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_PlIOweM=json({});
    
        return_PlIOweM["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_JrDUrxo=json({});
    return serialize_char(name.name[i]);}();
            return_PlIOweM["members"][std::to_string(i)].push_back(temp);
        }
        return return_PlIOweM;
        }();
result["members"]["description"]=[&]() {
    json return_kGPhWTU=json({});
    
        return_kGPhWTU["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_WPNJtMx=json({});
    return serialize_char(name.description[i]);}();
            return_kGPhWTU["members"][std::to_string(i)].push_back(temp);
        }
        return return_kGPhWTU;
        }();
result["members"]["format"]=[&]() {
    json return_wqNshWd=json({});
    return serialize_VkPipelineExecutableStatisticFormatKHR(name.format);}();
result["members"]["value"]=[&]() {
    json return_GAwXVwX=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(name.value);}();
return result;}

    VkPipelineExecutableStatisticKHR deserialize_VkPipelineExecutableStatisticKHR(json name){
        auto result=VkPipelineExecutableStatisticKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int wSlDJwF=0; wSlDJwF < VK_MAX_DESCRIPTION_SIZE; wSlDJwF++){
            [&]() {
result.name[wSlDJwF]=deserialize_char(name["members"]["name"]["members"][wSlDJwF]);}();;
        }
        }();
[&]() {

        for (int JUvEBUe=0; JUvEBUe < VK_MAX_DESCRIPTION_SIZE; JUvEBUe++){
            [&]() {
result.description[JUvEBUe]=deserialize_char(name["members"]["description"]["members"][JUvEBUe]);}();;
        }
        }();
[&]() {
result.format=deserialize_VkPipelineExecutableStatisticFormatKHR(name["members"]["format"]);}();
[&]() {
result.value=deserialize_VkPipelineExecutableStatisticValueKHR(name["members"]["value"]);}();
return result;}

    json serialize_VkPipelineExecutableInternalRepresentationKHR(VkPipelineExecutableInternalRepresentationKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AvrjYWI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eeOByiD=json({});
    
        if (name.pNext==NULL){
            return_eeOByiD["null"]=true;
            return return_eeOByiD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_kvbPgQN=json({});
    
        return_kvbPgQN["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_YBEnVIP=json({});
    return serialize_char(name.name[i]);}();
            return_kvbPgQN["members"][std::to_string(i)].push_back(temp);
        }
        return return_kvbPgQN;
        }();
result["members"]["description"]=[&]() {
    json return_zOlVSyP=json({});
    
        return_zOlVSyP["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_kfEoiaH=json({});
    return serialize_char(name.description[i]);}();
            return_zOlVSyP["members"][std::to_string(i)].push_back(temp);
        }
        return return_zOlVSyP;
        }();
result["members"]["isText"]=[&]() {
    json return_KYFJYqC=json({});
    return_KYFJYqC=[&]() {
    json return_gRlqjRG=json({});
    return serialize_uint32_t(name.isText);}();return return_KYFJYqC;}();
result["members"]["dataSize"]=[&]() {
    json return_gtqGMce=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_WCnlHbY=json({});
    
        if (name.pData==NULL){
            return_WCnlHbY["null"]=true;
            return return_WCnlHbY;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkPipelineExecutableInternalRepresentationKHR deserialize_VkPipelineExecutableInternalRepresentationKHR(json name){
        auto result=VkPipelineExecutableInternalRepresentationKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int KXCAWdM=0; KXCAWdM < VK_MAX_DESCRIPTION_SIZE; KXCAWdM++){
            [&]() {
result.name[KXCAWdM]=deserialize_char(name["members"]["name"]["members"][KXCAWdM]);}();;
        }
        }();
[&]() {

        for (int sLisvpG=0; sLisvpG < VK_MAX_DESCRIPTION_SIZE; sLisvpG++){
            [&]() {
result.description[sLisvpG]=deserialize_char(name["members"]["description"]["members"][sLisvpG]);}();;
        }
        }();
[&]() {
[&]() {
result.isText=deserialize_uint32_t(name["members"]["isText"]);}();}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {

        if (name["members"]["pData"].contains("null")){
        result.pData=NULL;
        }
    result.pData=deserialize_void_p(name["members"]["pData"]);
}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eCbZPyM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zMMVpRf=json({});
    
        if (name.pNext==NULL){
            return_zMMVpRf["null"]=true;
            return return_zMMVpRf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_czoHSmC=json({});
    return_czoHSmC=[&]() {
    json return_ZUgqXqI=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_czoHSmC;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QehTpEu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yhyWDMI=json({});
    
        if (name.pNext==NULL){
            return_yhyWDMI["null"]=true;
            return return_yhyWDMI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_oZUYrNs=json({});
    return_oZUYrNs=[&]() {
    json return_fVFkJGM=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_oZUYrNs;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XGeIvxD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VPtDUbG=json({});
    
        if (name.pNext==NULL){
            return_VPtDUbG["null"]=true;
            return return_VPtDUbG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["texelBufferAlignment"]=[&]() {
    json return_dxBpVmg=json({});
    return_dxBpVmg=[&]() {
    json return_AjAyIIr=json({});
    return serialize_uint32_t(name.texelBufferAlignment);}();return return_dxBpVmg;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.texelBufferAlignment=deserialize_uint32_t(name["members"]["texelBufferAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(VkPhysicalDeviceTexelBufferAlignmentProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UyjMUxs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vtBUuJY=json({});
    
        if (name.pNext==NULL){
            return_vtBUuJY["null"]=true;
            return return_vtBUuJY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_oIoxxGt=json({});
    return_oIoxxGt=[&]() {
    json return_aJpGUZU=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_oIoxxGt;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_xNoEbtO=json({});
    return_xNoEbtO=[&]() {
    json return_JRRDsLe=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_xNoEbtO;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_KZAiHNO=json({});
    return_KZAiHNO=[&]() {
    json return_fTUSXOp=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_KZAiHNO;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_cPjVXgu=json({});
    return_cPjVXgu=[&]() {
    json return_zMNjAcz=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_cPjVXgu;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentProperties deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ptWHfWc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RSTbvYJ=json({});
    
        if (name.pNext==NULL){
            return_RSTbvYJ["null"]=true;
            return return_RSTbvYJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_muDvgLD=json({});
    return_muDvgLD=[&]() {
    json return_tSgNqjt=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_muDvgLD;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_heoWoOO=json({});
    return_heoWoOO=[&]() {
    json return_ESLWqGp=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_heoWoOO;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_VWhkdmU=json({});
    return_VWhkdmU=[&]() {
    json return_svUjsCL=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_VWhkdmU;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_gyvUQbo=json({});
    return_gyvUQbo=[&]() {
    json return_JSYPwnC=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_gyvUQbo;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(VkPhysicalDeviceSubgroupSizeControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lhPoMsq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CoYCtaQ=json({});
    
        if (name.pNext==NULL){
            return_CoYCtaQ["null"]=true;
            return return_CoYCtaQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_kHLfkNo=json({});
    return_kHLfkNo=[&]() {
    json return_uoQcdoW=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_kHLfkNo;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_ukEKetY=json({});
    return_ukEKetY=[&]() {
    json return_SmCuonZ=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_ukEKetY;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeatures deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xiyLczx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HMihSPk=json({});
    
        if (name.pNext==NULL){
            return_HMihSPk["null"]=true;
            return return_HMihSPk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_bDCjeFn=json({});
    return_bDCjeFn=[&]() {
    json return_rzXxZzJ=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_bDCjeFn;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_VBHHHDY=json({});
    return_VBHHHDY=[&]() {
    json return_xZounjv=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_VBHHHDY;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeaturesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlProperties(VkPhysicalDeviceSubgroupSizeControlProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dVbNBFc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VsPOhCf=json({});
    
        if (name.pNext==NULL){
            return_VsPOhCf["null"]=true;
            return return_VsPOhCf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_kcAusoF=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_QdaNulM=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_gXVgXAU=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_qutYiZn=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlProperties deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qdUZChU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ddMTHQD=json({});
    
        if (name.pNext==NULL){
            return_ddMTHQD["null"]=true;
            return return_ddMTHQD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_lnolTcf=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_GPuYoVH=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_zrYGcop=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_qHJHCDS=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlPropertiesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qtNKQXD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZenGUkD=json({});
    
        if (name.pNext==NULL){
            return_ZenGUkD["null"]=true;
            return return_ZenGUkD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_uRDwbru=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfo deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HZQnfJh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IwAMRzh=json({});
    
        if (name.pNext==NULL){
            return_IwAMRzh["null"]=true;
            return return_IwAMRzh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_zrwkhGc=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(VkShaderRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qdMtvoP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yMYHIyE=json({});
    
        if (name.pNext==NULL){
            return_yMYHIyE["null"]=true;
            return return_yMYHIyE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_tozHcfc=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkShaderRequiredSubgroupSizeCreateInfoEXT deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkShaderRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(VkSubpassShadingPipelineCreateInfoHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XgXXtpx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xBOyiwB=json({});
    
        if (name.pNext==NULL){
            return_xBOyiwB["null"]=true;
            return return_xBOyiwB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_rUzwEob=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_mhFgVtE=json({});
    return serialize_uint32_t(name.subpass);}();
return result;}

    VkSubpassShadingPipelineCreateInfoHUAWEI deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(json name){
        auto result=VkSubpassShadingPipelineCreateInfoHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VVxTlxr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GNXAwgd=json({});
    
        if (name.pNext==NULL){
            return_GNXAwgd["null"]=true;
            return return_GNXAwgd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]=[&]() {
    json return_IwlXHmr=json({});
    return serialize_uint32_t(name.maxSubpassShadingWorkgroupSizeAspectRatio);}();
return result;}

    VkPhysicalDeviceSubpassShadingPropertiesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSubpassShadingWorkgroupSizeAspectRatio=deserialize_uint32_t(name["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]);}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CjMfsNr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LvbfsLd=json({});
    
        if (name.pNext==NULL){
            return_LvbfsLd["null"]=true;
            return return_LvbfsLd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWorkGroupCount"]=[&]() {
    json return_pcMAJDJ=json({});
    
        return_pcMAJDJ["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_EMUsWgB=json({});
    return serialize_uint32_t(name.maxWorkGroupCount[i]);}();
            return_pcMAJDJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_pcMAJDJ;
        }();
result["members"]["maxWorkGroupSize"]=[&]() {
    json return_FQjiaOt=json({});
    
        return_FQjiaOt["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_DitrEnE=json({});
    return serialize_uint32_t(name.maxWorkGroupSize[i]);}();
            return_FQjiaOt["members"][std::to_string(i)].push_back(temp);
        }
        return return_FQjiaOt;
        }();
result["members"]["maxOutputClusterCount"]=[&]() {
    json return_SgKIfae=json({});
    return serialize_uint32_t(name.maxOutputClusterCount);}();
result["members"]["indirectBufferOffsetAlignment"]=[&]() {
    json return_hPWeqnS=json({});
    return_hPWeqnS=[&]() {
    json return_UnUBVMr=json({});
    return serialize_uint64_t(name.indirectBufferOffsetAlignment);}();return return_hPWeqnS;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int oMgSklQ=0; oMgSklQ < 3; oMgSklQ++){
            [&]() {
result.maxWorkGroupCount[oMgSklQ]=deserialize_uint32_t(name["members"]["maxWorkGroupCount"]["members"][oMgSklQ]);}();;
        }
        }();
[&]() {

        for (int lermvcm=0; lermvcm < 3; lermvcm++){
            [&]() {
result.maxWorkGroupSize[lermvcm]=deserialize_uint32_t(name["members"]["maxWorkGroupSize"]["members"][lermvcm]);}();;
        }
        }();
[&]() {
result.maxOutputClusterCount=deserialize_uint32_t(name["members"]["maxOutputClusterCount"]);}();
[&]() {
[&]() {
result.indirectBufferOffsetAlignment=deserialize_uint64_t(name["members"]["indirectBufferOffsetAlignment"]);}();}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(VkMemoryOpaqueCaptureAddressAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fNxuSdK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CJnmfIn=json({});
    
        if (name.pNext==NULL){
            return_CJnmfIn["null"]=true;
            return return_CJnmfIn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_gKsjwgV=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfo deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gbZwLEZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gbZwLEZ=NULL;
        }
    temp_gbZwLEZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gbZwLEZ;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(VkMemoryOpaqueCaptureAddressAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PDKpmTu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_napqnBv=json({});
    
        if (name.pNext==NULL){
            return_napqnBv["null"]=true;
            return return_napqnBv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_KPgctnN=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfoKHR deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HStoAdA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HStoAdA=NULL;
        }
    temp_HStoAdA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HStoAdA;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(VkDeviceMemoryOpaqueCaptureAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oNSvWRo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yKzVHOv=json({});
    
        if (name.pNext==NULL){
            return_yKzVHOv["null"]=true;
            return return_yKzVHOv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_SgWwbFC=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfo deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xpFSWwH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xpFSWwH=NULL;
        }
    temp_xpFSWwH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xpFSWwH;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(VkDeviceMemoryOpaqueCaptureAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cySxHAP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VvNMyus=json({});
    
        if (name.pNext==NULL){
            return_VvNMyus["null"]=true;
            return return_VvNMyus;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_qFBGEnO=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfoKHR deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wVELfaz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wVELfaz=NULL;
        }
    temp_wVELfaz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wVELfaz;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(VkPhysicalDeviceLineRasterizationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DULkvYO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mVMujgm=json({});
    
        if (name.pNext==NULL){
            return_mVMujgm["null"]=true;
            return return_mVMujgm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rectangularLines"]=[&]() {
    json return_oApNRHx=json({});
    return_oApNRHx=[&]() {
    json return_jTxIwMn=json({});
    return serialize_uint32_t(name.rectangularLines);}();return return_oApNRHx;}();
result["members"]["bresenhamLines"]=[&]() {
    json return_bgLeFNb=json({});
    return_bgLeFNb=[&]() {
    json return_yZHXReE=json({});
    return serialize_uint32_t(name.bresenhamLines);}();return return_bgLeFNb;}();
result["members"]["smoothLines"]=[&]() {
    json return_arSjPfF=json({});
    return_arSjPfF=[&]() {
    json return_LMHpImw=json({});
    return serialize_uint32_t(name.smoothLines);}();return return_arSjPfF;}();
result["members"]["stippledRectangularLines"]=[&]() {
    json return_iAdmTXk=json({});
    return_iAdmTXk=[&]() {
    json return_hBBnhHd=json({});
    return serialize_uint32_t(name.stippledRectangularLines);}();return return_iAdmTXk;}();
result["members"]["stippledBresenhamLines"]=[&]() {
    json return_MSRtzcf=json({});
    return_MSRtzcf=[&]() {
    json return_XmqBDZt=json({});
    return serialize_uint32_t(name.stippledBresenhamLines);}();return return_MSRtzcf;}();
result["members"]["stippledSmoothLines"]=[&]() {
    json return_stvAxDz=json({});
    return_stvAxDz=[&]() {
    json return_IAqYVWZ=json({});
    return serialize_uint32_t(name.stippledSmoothLines);}();return return_stvAxDz;}();
return result;}

    VkPhysicalDeviceLineRasterizationFeaturesEXT deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rectangularLines=deserialize_uint32_t(name["members"]["rectangularLines"]);}();}();
[&]() {
[&]() {
result.bresenhamLines=deserialize_uint32_t(name["members"]["bresenhamLines"]);}();}();
[&]() {
[&]() {
result.smoothLines=deserialize_uint32_t(name["members"]["smoothLines"]);}();}();
[&]() {
[&]() {
result.stippledRectangularLines=deserialize_uint32_t(name["members"]["stippledRectangularLines"]);}();}();
[&]() {
[&]() {
result.stippledBresenhamLines=deserialize_uint32_t(name["members"]["stippledBresenhamLines"]);}();}();
[&]() {
[&]() {
result.stippledSmoothLines=deserialize_uint32_t(name["members"]["stippledSmoothLines"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(VkPhysicalDeviceLineRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mENkfAg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mXWAVKH=json({});
    
        if (name.pNext==NULL){
            return_mXWAVKH["null"]=true;
            return return_mXWAVKH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineSubPixelPrecisionBits"]=[&]() {
    json return_hBcxTcu=json({});
    return serialize_uint32_t(name.lineSubPixelPrecisionBits);}();
return result;}

    VkPhysicalDeviceLineRasterizationPropertiesEXT deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.lineSubPixelPrecisionBits=deserialize_uint32_t(name["members"]["lineSubPixelPrecisionBits"]);}();
return result;}

    json serialize_VkPipelineRasterizationLineStateCreateInfoEXT(VkPipelineRasterizationLineStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sWqMnBi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HgPuYEF=json({});
    
        if (name.pNext==NULL){
            return_HgPuYEF["null"]=true;
            return return_HgPuYEF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineRasterizationMode"]=[&]() {
    json return_WHFnfmV=json({});
    return serialize_VkLineRasterizationModeEXT(name.lineRasterizationMode);}();
result["members"]["stippledLineEnable"]=[&]() {
    json return_RUnTGvF=json({});
    return_RUnTGvF=[&]() {
    json return_EHqrXrs=json({});
    return serialize_uint32_t(name.stippledLineEnable);}();return return_RUnTGvF;}();
result["members"]["lineStippleFactor"]=[&]() {
    json return_JWsRiPC=json({});
    return serialize_uint32_t(name.lineStippleFactor);}();
result["members"]["lineStipplePattern"]=[&]() {
    json return_fntWeGw=json({});
    return serialize_uint16_t(name.lineStipplePattern);}();
return result;}

    VkPipelineRasterizationLineStateCreateInfoEXT deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationLineStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GqtPTeb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GqtPTeb=NULL;
        }
    temp_GqtPTeb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GqtPTeb;}();
[&]() {
result.lineRasterizationMode=deserialize_VkLineRasterizationModeEXT(name["members"]["lineRasterizationMode"]);}();
[&]() {
[&]() {
result.stippledLineEnable=deserialize_uint32_t(name["members"]["stippledLineEnable"]);}();}();
[&]() {
result.lineStippleFactor=deserialize_uint32_t(name["members"]["lineStippleFactor"]);}();
[&]() {
result.lineStipplePattern=deserialize_uint16_t(name["members"]["lineStipplePattern"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(VkPhysicalDevicePipelineCreationCacheControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ybTkQum=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZThNfGl=json({});
    
        if (name.pNext==NULL){
            return_ZThNfGl["null"]=true;
            return return_ZThNfGl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_LPcXkqB=json({});
    return_LPcXkqB=[&]() {
    json return_Whjorpo=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_LPcXkqB;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeatures deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HTfscCw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yyBhIkJ=json({});
    
        if (name.pNext==NULL){
            return_yyBhIkJ["null"]=true;
            return return_yyBhIkJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_MmUEofG=json({});
    return_MmUEofG=[&]() {
    json return_qVTUOkn=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_MmUEofG;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Features(VkPhysicalDeviceVulkan11Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NyLEiBq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dakuPFC=json({});
    
        if (name.pNext==NULL){
            return_dakuPFC["null"]=true;
            return return_dakuPFC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_GmiBXgX=json({});
    return_GmiBXgX=[&]() {
    json return_gHJHGqH=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_GmiBXgX;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_pDCsiKj=json({});
    return_pDCsiKj=[&]() {
    json return_OFCPMCr=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_pDCsiKj;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_NfcBlVO=json({});
    return_NfcBlVO=[&]() {
    json return_rFEeTko=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_NfcBlVO;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_UxCBoxQ=json({});
    return_UxCBoxQ=[&]() {
    json return_JYsRkpQ=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_UxCBoxQ;}();
result["members"]["multiview"]=[&]() {
    json return_tgcpyya=json({});
    return_tgcpyya=[&]() {
    json return_JlJUcZR=json({});
    return serialize_uint32_t(name.multiview);}();return return_tgcpyya;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_wsKLuYV=json({});
    return_wsKLuYV=[&]() {
    json return_aLLNCoG=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_wsKLuYV;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_Pwujrmx=json({});
    return_Pwujrmx=[&]() {
    json return_aWrzlCI=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_Pwujrmx;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_iEsBMKd=json({});
    return_iEsBMKd=[&]() {
    json return_GDhzWPF=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_iEsBMKd;}();
result["members"]["variablePointers"]=[&]() {
    json return_eqFJWin=json({});
    return_eqFJWin=[&]() {
    json return_dRvUPur=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_eqFJWin;}();
result["members"]["protectedMemory"]=[&]() {
    json return_uZrpOOa=json({});
    return_uZrpOOa=[&]() {
    json return_iClgBkP=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_uZrpOOa;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_akpmtxa=json({});
    return_akpmtxa=[&]() {
    json return_HRYJMEX=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_akpmtxa;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_ACsLxoO=json({});
    return_ACsLxoO=[&]() {
    json return_piHSAyr=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_ACsLxoO;}();
return result;}

    VkPhysicalDeviceVulkan11Features deserialize_VkPhysicalDeviceVulkan11Features(json name){
        auto result=VkPhysicalDeviceVulkan11Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Properties(VkPhysicalDeviceVulkan11Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iZOVJTQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FzamXBj=json({});
    
        if (name.pNext==NULL){
            return_FzamXBj["null"]=true;
            return return_FzamXBj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_leyIAvD=json({});
    
        return_leyIAvD["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lrAfYzk=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_leyIAvD["members"][std::to_string(i)].push_back(temp);
        }
        return return_leyIAvD;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_qPoqhXg=json({});
    
        return_qPoqhXg["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_VzuBjGS=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_qPoqhXg["members"][std::to_string(i)].push_back(temp);
        }
        return return_qPoqhXg;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_ZKmzchq=json({});
    
        return_ZKmzchq["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_uxvgVUd=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_ZKmzchq["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZKmzchq;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_AnNRMMF=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_zZHslFN=json({});
    return_zZHslFN=[&]() {
    json return_nZAUuvE=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_zZHslFN;}();
result["members"]["subgroupSize"]=[&]() {
    json return_dHDScgU=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["subgroupSupportedStages"]=[&]() {
    json return_XAIJfSZ=json({});
    return serialize_VkShaderStageFlags(name.subgroupSupportedStages);}();
result["members"]["subgroupSupportedOperations"]=[&]() {
    json return_JYKaMUx=json({});
    return serialize_VkSubgroupFeatureFlags(name.subgroupSupportedOperations);}();
result["members"]["subgroupQuadOperationsInAllStages"]=[&]() {
    json return_kkxzqOM=json({});
    return_kkxzqOM=[&]() {
    json return_gttmacW=json({});
    return serialize_uint32_t(name.subgroupQuadOperationsInAllStages);}();return return_kkxzqOM;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_phRbmVi=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_wDFoDnx=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_XFUTZAu=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_oegKIVm=json({});
    return_oegKIVm=[&]() {
    json return_YlNLErx=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_oegKIVm;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_qbyPlJo=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_sXroWNW=json({});
    return_sXroWNW=[&]() {
    json return_gQUvdIf=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_sXroWNW;}();
return result;}

    VkPhysicalDeviceVulkan11Properties deserialize_VkPhysicalDeviceVulkan11Properties(json name){
        auto result=VkPhysicalDeviceVulkan11Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int CWZXMVs=0; CWZXMVs < VK_UUID_SIZE; CWZXMVs++){
            [&]() {
result.deviceUUID[CWZXMVs]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][CWZXMVs]);}();;
        }
        }();
[&]() {

        for (int ENTmHPb=0; ENTmHPb < VK_UUID_SIZE; ENTmHPb++){
            [&]() {
result.driverUUID[ENTmHPb]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][ENTmHPb]);}();;
        }
        }();
[&]() {

        for (int OwSYOZc=0; OwSYOZc < VK_LUID_SIZE; OwSYOZc++){
            [&]() {
result.deviceLUID[OwSYOZc]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][OwSYOZc]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.subgroupSupportedStages=deserialize_VkShaderStageFlags(name["members"]["subgroupSupportedStages"]);}();
[&]() {
result.subgroupSupportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["subgroupSupportedOperations"]);}();
[&]() {
[&]() {
result.subgroupQuadOperationsInAllStages=deserialize_uint32_t(name["members"]["subgroupQuadOperationsInAllStages"]);}();}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Features(VkPhysicalDeviceVulkan12Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ajdelgx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UTGrvWV=json({});
    
        if (name.pNext==NULL){
            return_UTGrvWV["null"]=true;
            return return_UTGrvWV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerMirrorClampToEdge"]=[&]() {
    json return_mhhQuMU=json({});
    return_mhhQuMU=[&]() {
    json return_ApUzFnD=json({});
    return serialize_uint32_t(name.samplerMirrorClampToEdge);}();return return_mhhQuMU;}();
result["members"]["drawIndirectCount"]=[&]() {
    json return_MepFYru=json({});
    return_MepFYru=[&]() {
    json return_gjVfJzF=json({});
    return serialize_uint32_t(name.drawIndirectCount);}();return return_MepFYru;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_gvrxVFS=json({});
    return_gvrxVFS=[&]() {
    json return_ZNRTgbt=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_gvrxVFS;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_QDlVOYU=json({});
    return_QDlVOYU=[&]() {
    json return_wNLrKwh=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_QDlVOYU;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_ecZLKBf=json({});
    return_ecZLKBf=[&]() {
    json return_mDbfeFw=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_ecZLKBf;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_WFDbxUo=json({});
    return_WFDbxUo=[&]() {
    json return_Tkkkogb=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_WFDbxUo;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_AqFzEFK=json({});
    return_AqFzEFK=[&]() {
    json return_TSgbURt=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_AqFzEFK;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_pnjLQKO=json({});
    return_pnjLQKO=[&]() {
    json return_Nnvjxmf=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_pnjLQKO;}();
result["members"]["shaderInt8"]=[&]() {
    json return_CWsYRBx=json({});
    return_CWsYRBx=[&]() {
    json return_SdQJkVC=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_CWsYRBx;}();
result["members"]["descriptorIndexing"]=[&]() {
    json return_uiirPlD=json({});
    return_uiirPlD=[&]() {
    json return_hFSBsVI=json({});
    return serialize_uint32_t(name.descriptorIndexing);}();return return_uiirPlD;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_oUtfGID=json({});
    return_oUtfGID=[&]() {
    json return_bQgkDDw=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_oUtfGID;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_EBoOrVJ=json({});
    return_EBoOrVJ=[&]() {
    json return_hGMkvYe=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_EBoOrVJ;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_wKufmRH=json({});
    return_wKufmRH=[&]() {
    json return_geRXvdL=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_wKufmRH;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_oncjiYV=json({});
    return_oncjiYV=[&]() {
    json return_SpGcdqA=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_oncjiYV;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_GtAkwSN=json({});
    return_GtAkwSN=[&]() {
    json return_Qrsmzyd=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_GtAkwSN;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_RzEdRFX=json({});
    return_RzEdRFX=[&]() {
    json return_loOZphG=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_RzEdRFX;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_DsPHLbK=json({});
    return_DsPHLbK=[&]() {
    json return_LvnVIEt=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_DsPHLbK;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_xoMNNIz=json({});
    return_xoMNNIz=[&]() {
    json return_XiwTCuB=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_xoMNNIz;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_IxGtsHK=json({});
    return_IxGtsHK=[&]() {
    json return_aWWlQzK=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_IxGtsHK;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_TheuPuP=json({});
    return_TheuPuP=[&]() {
    json return_aatxIXv=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_TheuPuP;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_eacPYKo=json({});
    return_eacPYKo=[&]() {
    json return_eUXzJkz=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_eacPYKo;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_vAOkrBe=json({});
    return_vAOkrBe=[&]() {
    json return_DwdnRdb=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_vAOkrBe;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_pWTcTeh=json({});
    return_pWTcTeh=[&]() {
    json return_PcyctPf=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_pWTcTeh;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_UHFIfjh=json({});
    return_UHFIfjh=[&]() {
    json return_PZTEZyX=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_UHFIfjh;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_OQNNLZA=json({});
    return_OQNNLZA=[&]() {
    json return_QYRzAPo=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_OQNNLZA;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_fZplKSR=json({});
    return_fZplKSR=[&]() {
    json return_oclalyB=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_fZplKSR;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_hGxtlcr=json({});
    return_hGxtlcr=[&]() {
    json return_BcdneTP=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_hGxtlcr;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_plrKCEc=json({});
    return_plrKCEc=[&]() {
    json return_WOPGlwg=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_plrKCEc;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_FOaWPRS=json({});
    return_FOaWPRS=[&]() {
    json return_MrNtBCj=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_FOaWPRS;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_pjnoyaA=json({});
    return_pjnoyaA=[&]() {
    json return_FNjXTWT=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_pjnoyaA;}();
result["members"]["samplerFilterMinmax"]=[&]() {
    json return_tKAFxqE=json({});
    return_tKAFxqE=[&]() {
    json return_UwIOLxZ=json({});
    return serialize_uint32_t(name.samplerFilterMinmax);}();return return_tKAFxqE;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_DkNmBbE=json({});
    return_DkNmBbE=[&]() {
    json return_bWnfkFZ=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_DkNmBbE;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_sDLIaOM=json({});
    return_sDLIaOM=[&]() {
    json return_pWrRBpS=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_sDLIaOM;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_NgJsiuT=json({});
    return_NgJsiuT=[&]() {
    json return_dYCnIgf=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_NgJsiuT;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_CORYDur=json({});
    return_CORYDur=[&]() {
    json return_VoRsEjn=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_CORYDur;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_MsFXTXy=json({});
    return_MsFXTXy=[&]() {
    json return_pKwizDh=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_MsFXTXy;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_SplSfWx=json({});
    return_SplSfWx=[&]() {
    json return_eRunKGP=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_SplSfWx;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_PnGUFFu=json({});
    return_PnGUFFu=[&]() {
    json return_pnXMlhK=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_PnGUFFu;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_DnrXaHo=json({});
    return_DnrXaHo=[&]() {
    json return_aJWGLvN=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_DnrXaHo;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_xPLMRpS=json({});
    return_xPLMRpS=[&]() {
    json return_ZOuDlqB=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_xPLMRpS;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_CoRBcKf=json({});
    return_CoRBcKf=[&]() {
    json return_kKKNLiK=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_CoRBcKf;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_VvuUIhg=json({});
    return_VvuUIhg=[&]() {
    json return_djzRNpS=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_VvuUIhg;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_UNfIOpg=json({});
    return_UNfIOpg=[&]() {
    json return_CqxaTNl=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_UNfIOpg;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_QxvdMTo=json({});
    return_QxvdMTo=[&]() {
    json return_XDFYglV=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_QxvdMTo;}();
result["members"]["shaderOutputViewportIndex"]=[&]() {
    json return_lIKzvDm=json({});
    return_lIKzvDm=[&]() {
    json return_joEfZvT=json({});
    return serialize_uint32_t(name.shaderOutputViewportIndex);}();return return_lIKzvDm;}();
result["members"]["shaderOutputLayer"]=[&]() {
    json return_pmAukjB=json({});
    return_pmAukjB=[&]() {
    json return_qnQRgog=json({});
    return serialize_uint32_t(name.shaderOutputLayer);}();return return_pmAukjB;}();
result["members"]["subgroupBroadcastDynamicId"]=[&]() {
    json return_wSwPeMa=json({});
    return_wSwPeMa=[&]() {
    json return_jfkAtaE=json({});
    return serialize_uint32_t(name.subgroupBroadcastDynamicId);}();return return_wSwPeMa;}();
return result;}

    VkPhysicalDeviceVulkan12Features deserialize_VkPhysicalDeviceVulkan12Features(json name){
        auto result=VkPhysicalDeviceVulkan12Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerMirrorClampToEdge=deserialize_uint32_t(name["members"]["samplerMirrorClampToEdge"]);}();}();
[&]() {
[&]() {
result.drawIndirectCount=deserialize_uint32_t(name["members"]["drawIndirectCount"]);}();}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
[&]() {
[&]() {
result.descriptorIndexing=deserialize_uint32_t(name["members"]["descriptorIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
[&]() {
[&]() {
result.samplerFilterMinmax=deserialize_uint32_t(name["members"]["samplerFilterMinmax"]);}();}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
[&]() {
[&]() {
result.shaderOutputViewportIndex=deserialize_uint32_t(name["members"]["shaderOutputViewportIndex"]);}();}();
[&]() {
[&]() {
result.shaderOutputLayer=deserialize_uint32_t(name["members"]["shaderOutputLayer"]);}();}();
[&]() {
[&]() {
result.subgroupBroadcastDynamicId=deserialize_uint32_t(name["members"]["subgroupBroadcastDynamicId"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Properties(VkPhysicalDeviceVulkan12Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CVWFhVU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yTVBwQC=json({});
    
        if (name.pNext==NULL){
            return_yTVBwQC["null"]=true;
            return return_yTVBwQC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_dtgHiqW=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_GxhFAHD=json({});
    
        return_GxhFAHD["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_SfWtLwm=json({});
    return serialize_char(name.driverName[i]);}();
            return_GxhFAHD["members"][std::to_string(i)].push_back(temp);
        }
        return return_GxhFAHD;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_RaXPOlP=json({});
    
        return_RaXPOlP["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_NQTWIKg=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_RaXPOlP["members"][std::to_string(i)].push_back(temp);
        }
        return return_RaXPOlP;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_pAZCSRT=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_AqFVCMf=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_UGYeewd=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_PDSJqhT=json({});
    return_PDSJqhT=[&]() {
    json return_teRunsS=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_PDSJqhT;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_sxOQarb=json({});
    return_sxOQarb=[&]() {
    json return_UkJmdka=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_sxOQarb;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_CWlhBKJ=json({});
    return_CWlhBKJ=[&]() {
    json return_TxaREgo=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_CWlhBKJ;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_LydcXms=json({});
    return_LydcXms=[&]() {
    json return_PPvWFwQ=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_LydcXms;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_MEhDhtB=json({});
    return_MEhDhtB=[&]() {
    json return_GNZXCbR=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_MEhDhtB;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_VjHOWxY=json({});
    return_VjHOWxY=[&]() {
    json return_eHpqhjt=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_VjHOWxY;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_VNezDQy=json({});
    return_VNezDQy=[&]() {
    json return_ocDutKG=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_VNezDQy;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_lnMLVcN=json({});
    return_lnMLVcN=[&]() {
    json return_PXkbzfH=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_lnMLVcN;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_QOotJRh=json({});
    return_QOotJRh=[&]() {
    json return_AghGBLk=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_QOotJRh;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_IxpmzOB=json({});
    return_IxpmzOB=[&]() {
    json return_XzaatEv=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_IxpmzOB;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_rqSCUun=json({});
    return_rqSCUun=[&]() {
    json return_IVjfvBP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_rqSCUun;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_XMlGKEW=json({});
    return_XMlGKEW=[&]() {
    json return_IwCuSyP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_XMlGKEW;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_lnABMeN=json({});
    return_lnABMeN=[&]() {
    json return_YsPZkoK=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_lnABMeN;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_VBqNkON=json({});
    return_VBqNkON=[&]() {
    json return_cvrbRQP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_VBqNkON;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_DZiOirf=json({});
    return_DZiOirf=[&]() {
    json return_innIBkN=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_DZiOirf;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_uUPCFSV=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_JyimsmQ=json({});
    return_JyimsmQ=[&]() {
    json return_TKdxEdd=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_JyimsmQ;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_xYcIWGX=json({});
    return_xYcIWGX=[&]() {
    json return_PEEKLPx=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_xYcIWGX;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_WmSvdhq=json({});
    return_WmSvdhq=[&]() {
    json return_UAiDFuV=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_WmSvdhq;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_RzjknZo=json({});
    return_RzjknZo=[&]() {
    json return_tcCLWRO=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_RzjknZo;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_SIZaBRA=json({});
    return_SIZaBRA=[&]() {
    json return_hJFolBi=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_SIZaBRA;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_SfDfwSZ=json({});
    return_SfDfwSZ=[&]() {
    json return_eurusfh=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_SfDfwSZ;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_dzFkirk=json({});
    return_dzFkirk=[&]() {
    json return_ehjYoFS=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_dzFkirk;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_YXJALEL=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_aFYPDnz=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_bYelHXS=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_ZPuOVvE=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_OGKEEhM=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_WgGlngx=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_ElvoqlR=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_lZgILSP=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_UfmdAqE=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_qXGXLuO=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_CjvMvXR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_SESYhqW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_uhlgHRQ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_EwmrYXn=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_tLrwUIW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_aejthkJ=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_LPGUJeu=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_dYeSloI=json({});
    return_dYeSloI=[&]() {
    json return_SYahrpd=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_dYeSloI;}();
result["members"]["independentResolve"]=[&]() {
    json return_GqBxVKT=json({});
    return_GqBxVKT=[&]() {
    json return_HzfClat=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_GqBxVKT;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_nFjICWf=json({});
    return_nFjICWf=[&]() {
    json return_aZbGCfb=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_nFjICWf;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_xImvOQZ=json({});
    return_xImvOQZ=[&]() {
    json return_cxTJRGf=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_xImvOQZ;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_COdJret=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
result["members"]["framebufferIntegerColorSampleCounts"]=[&]() {
    json return_epwbBPJ=json({});
    return serialize_VkSampleCountFlags(name.framebufferIntegerColorSampleCounts);}();
return result;}

    VkPhysicalDeviceVulkan12Properties deserialize_VkPhysicalDeviceVulkan12Properties(json name){
        auto result=VkPhysicalDeviceVulkan12Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int JfPEXdC=0; JfPEXdC < VK_MAX_DRIVER_NAME_SIZE; JfPEXdC++){
            [&]() {
result.driverName[JfPEXdC]=deserialize_char(name["members"]["driverName"]["members"][JfPEXdC]);}();;
        }
        }();
[&]() {

        for (int ooLkFYx=0; ooLkFYx < VK_MAX_DRIVER_INFO_SIZE; ooLkFYx++){
            [&]() {
result.driverInfo[ooLkFYx]=deserialize_char(name["members"]["driverInfo"]["members"][ooLkFYx]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
[&]() {
result.framebufferIntegerColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferIntegerColorSampleCounts"]);}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Features(VkPhysicalDeviceVulkan13Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rBUoumm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DcvoHQY=json({});
    
        if (name.pNext==NULL){
            return_DcvoHQY["null"]=true;
            return return_DcvoHQY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_nvwuAsx=json({});
    return_nvwuAsx=[&]() {
    json return_dkIkKBh=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_nvwuAsx;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_ZEVmWLY=json({});
    return_ZEVmWLY=[&]() {
    json return_vpenIsj=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_ZEVmWLY;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_IfzZirE=json({});
    return_IfzZirE=[&]() {
    json return_oVovmKa=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_IfzZirE;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_AwcomUr=json({});
    return_AwcomUr=[&]() {
    json return_GkUTFuy=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_AwcomUr;}();
result["members"]["privateData"]=[&]() {
    json return_tfYRDSe=json({});
    return_tfYRDSe=[&]() {
    json return_uSPSRlq=json({});
    return serialize_uint32_t(name.privateData);}();return return_tfYRDSe;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_csWSQwE=json({});
    return_csWSQwE=[&]() {
    json return_cVVjYAe=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_csWSQwE;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_DppEbHK=json({});
    return_DppEbHK=[&]() {
    json return_gCSEuJa=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_DppEbHK;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_CHBqNmp=json({});
    return_CHBqNmp=[&]() {
    json return_tPxXqXW=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_CHBqNmp;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_PaKnlUK=json({});
    return_PaKnlUK=[&]() {
    json return_OBXbmZW=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_PaKnlUK;}();
result["members"]["synchronization2"]=[&]() {
    json return_XdJjaiq=json({});
    return_XdJjaiq=[&]() {
    json return_luLfFUP=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_XdJjaiq;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_uFlIuny=json({});
    return_uFlIuny=[&]() {
    json return_DoeTIXJ=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_uFlIuny;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_SYQdxfA=json({});
    return_SYQdxfA=[&]() {
    json return_snMYYtc=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_SYQdxfA;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_EWBwjov=json({});
    return_EWBwjov=[&]() {
    json return_sgwVqvP=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_EWBwjov;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_drWHOrl=json({});
    return_drWHOrl=[&]() {
    json return_yPcChUP=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_drWHOrl;}();
result["members"]["maintenance4"]=[&]() {
    json return_ImObfyj=json({});
    return_ImObfyj=[&]() {
    json return_sLIDhmx=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_ImObfyj;}();
return result;}

    VkPhysicalDeviceVulkan13Features deserialize_VkPhysicalDeviceVulkan13Features(json name){
        auto result=VkPhysicalDeviceVulkan13Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Properties(VkPhysicalDeviceVulkan13Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AFzYabd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sFALZwJ=json({});
    
        if (name.pNext==NULL){
            return_sFALZwJ["null"]=true;
            return return_sFALZwJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_EynIAkS=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_kpAHuJH=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_eDOLIhc=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_fbHaLKq=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_CuNdzOu=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_txHHdRr=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_mIMlgjI=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_fXrlZbk=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_kfFrHUF=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxInlineUniformTotalSize"]=[&]() {
    json return_sqCDzBa=json({});
    return serialize_uint32_t(name.maxInlineUniformTotalSize);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_zxlBGDw=json({});
    return_zxlBGDw=[&]() {
    json return_SgcVTng=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_zxlBGDw;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_VaYFYCi=json({});
    return_VaYFYCi=[&]() {
    json return_yxblIJW=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_VaYFYCi;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_ppzGulF=json({});
    return_ppzGulF=[&]() {
    json return_WAIQkCr=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_ppzGulF;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_bzBbWsp=json({});
    return_bzBbWsp=[&]() {
    json return_nLtWIiU=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_bzBbWsp;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_PmOdBVB=json({});
    return_PmOdBVB=[&]() {
    json return_mbGUvrm=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_PmOdBVB;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_aRPdElJ=json({});
    return_aRPdElJ=[&]() {
    json return_msGfPfs=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_aRPdElJ;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_GHjWdpu=json({});
    return_GHjWdpu=[&]() {
    json return_ZHGSgQw=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_GHjWdpu;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_kwVYpHk=json({});
    return_kwVYpHk=[&]() {
    json return_gRdGMdg=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_kwVYpHk;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_gtWlmUK=json({});
    return_gtWlmUK=[&]() {
    json return_dgsISBM=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_gtWlmUK;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_VesKfrF=json({});
    return_VesKfrF=[&]() {
    json return_LXfXbxF=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_VesKfrF;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_hjdGeAs=json({});
    return_hjdGeAs=[&]() {
    json return_KYJIsjN=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_hjdGeAs;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_zCSVIfc=json({});
    return_zCSVIfc=[&]() {
    json return_zbCgTEd=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_zCSVIfc;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_oUesuOB=json({});
    return_oUesuOB=[&]() {
    json return_nqmPTjd=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_oUesuOB;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_HRnfJbU=json({});
    return_HRnfJbU=[&]() {
    json return_fgsCpIL=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_HRnfJbU;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_WWRjCXy=json({});
    return_WWRjCXy=[&]() {
    json return_ZjSSXNs=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_WWRjCXy;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_PdHkvwI=json({});
    return_PdHkvwI=[&]() {
    json return_VXqxKNZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_PdHkvwI;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_SYWezSI=json({});
    return_SYWezSI=[&]() {
    json return_FsyjjUe=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_SYWezSI;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_njaElkC=json({});
    return_njaElkC=[&]() {
    json return_zXsUpxW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_njaElkC;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_dsrkpCo=json({});
    return_dsrkpCo=[&]() {
    json return_obZNGPq=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_dsrkpCo;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_sgsHjIA=json({});
    return_sgsHjIA=[&]() {
    json return_nZLNIkv=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_sgsHjIA;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_UZsqLfS=json({});
    return_UZsqLfS=[&]() {
    json return_VEqBbkZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_UZsqLfS;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_vUXEFrN=json({});
    return_vUXEFrN=[&]() {
    json return_hXJeapW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_vUXEFrN;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_SunOaKl=json({});
    return_SunOaKl=[&]() {
    json return_gJNYdhV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_SunOaKl;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_aQxLnge=json({});
    return_aQxLnge=[&]() {
    json return_bGMbjNa=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_aQxLnge;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_lAUfHyW=json({});
    return_lAUfHyW=[&]() {
    json return_RIBVpPo=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_lAUfHyW;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_vxSYyiU=json({});
    return_vxSYyiU=[&]() {
    json return_yvHogCn=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_vxSYyiU;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_jVjiYgR=json({});
    return_jVjiYgR=[&]() {
    json return_SMBmnhG=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_jVjiYgR;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_jmnjDQt=json({});
    return_jmnjDQt=[&]() {
    json return_fTFqZIL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_jmnjDQt;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_AZevIcT=json({});
    return_AZevIcT=[&]() {
    json return_uPrVKor=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_AZevIcT;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_BGseNgy=json({});
    return_BGseNgy=[&]() {
    json return_szQTbGY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_BGseNgy;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_hJCvFSR=json({});
    return_hJCvFSR=[&]() {
    json return_OtpPATy=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_hJCvFSR;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_OyiaXsg=json({});
    return_OyiaXsg=[&]() {
    json return_tSreZbp=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_OyiaXsg;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_QHvQSmG=json({});
    return_QHvQSmG=[&]() {
    json return_eQJCPQq=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_QHvQSmG;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_cdQprAN=json({});
    return_cdQprAN=[&]() {
    json return_veVcVNH=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_cdQprAN;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_kanyjon=json({});
    return_kanyjon=[&]() {
    json return_ZiPdEGD=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_kanyjon;}();
return result;}

    VkPhysicalDeviceVulkan13Properties deserialize_VkPhysicalDeviceVulkan13Properties(json name){
        auto result=VkPhysicalDeviceVulkan13Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxInlineUniformTotalSize=deserialize_uint32_t(name["members"]["maxInlineUniformTotalSize"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPipelineCompilerControlCreateInfoAMD(VkPipelineCompilerControlCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vRVJNfk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oliILSR=json({});
    
        if (name.pNext==NULL){
            return_oliILSR["null"]=true;
            return return_oliILSR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compilerControlFlags"]=[&]() {
    json return_OBbVawK=json({});
    return serialize_VkPipelineCompilerControlFlagsAMD(name.compilerControlFlags);}();
return result;}

    VkPipelineCompilerControlCreateInfoAMD deserialize_VkPipelineCompilerControlCreateInfoAMD(json name){
        auto result=VkPipelineCompilerControlCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BGenego;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BGenego=NULL;
        }
    temp_BGenego=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BGenego;}();
[&]() {
result.compilerControlFlags=deserialize_VkPipelineCompilerControlFlagsAMD(name["members"]["compilerControlFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkPhysicalDeviceCoherentMemoryFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YTmIpUK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jtuHLTP=json({});
    
        if (name.pNext==NULL){
            return_jtuHLTP["null"]=true;
            return return_jtuHLTP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceCoherentMemory"]=[&]() {
    json return_UlhmKQu=json({});
    return_UlhmKQu=[&]() {
    json return_OzlaXiG=json({});
    return serialize_uint32_t(name.deviceCoherentMemory);}();return return_UlhmKQu;}();
return result;}

    VkPhysicalDeviceCoherentMemoryFeaturesAMD deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(json name){
        auto result=VkPhysicalDeviceCoherentMemoryFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceCoherentMemory=deserialize_uint32_t(name["members"]["deviceCoherentMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceToolProperties(VkPhysicalDeviceToolProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MJXyNNP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KmhIvrv=json({});
    
        if (name.pNext==NULL){
            return_KmhIvrv["null"]=true;
            return return_KmhIvrv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_lkZDYnP=json({});
    
        return_lkZDYnP["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_tcirUQJ=json({});
    return serialize_char(name.name[i]);}();
            return_lkZDYnP["members"][std::to_string(i)].push_back(temp);
        }
        return return_lkZDYnP;
        }();
result["members"]["version"]=[&]() {
    json return_fGwsWOZ=json({});
    
        return_fGwsWOZ["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ZgZwYpr=json({});
    return serialize_char(name.version[i]);}();
            return_fGwsWOZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_fGwsWOZ;
        }();
result["members"]["purposes"]=[&]() {
    json return_ZCNePZJ=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_WJUaqSo=json({});
    
        return_WJUaqSo["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_XrUCReS=json({});
    return serialize_char(name.description[i]);}();
            return_WJUaqSo["members"][std::to_string(i)].push_back(temp);
        }
        return return_WJUaqSo;
        }();
result["members"]["layer"]=[&]() {
    json return_ueguVKX=json({});
    
        return_ueguVKX["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_xItVirf=json({});
    return serialize_char(name.layer[i]);}();
            return_ueguVKX["members"][std::to_string(i)].push_back(temp);
        }
        return return_ueguVKX;
        }();
return result;}

    VkPhysicalDeviceToolProperties deserialize_VkPhysicalDeviceToolProperties(json name){
        auto result=VkPhysicalDeviceToolProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int kALlATW=0; kALlATW < VK_MAX_EXTENSION_NAME_SIZE; kALlATW++){
            [&]() {
result.name[kALlATW]=deserialize_char(name["members"]["name"]["members"][kALlATW]);}();;
        }
        }();
[&]() {

        for (int oqQAlhw=0; oqQAlhw < VK_MAX_EXTENSION_NAME_SIZE; oqQAlhw++){
            [&]() {
result.version[oqQAlhw]=deserialize_char(name["members"]["version"]["members"][oqQAlhw]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int PjgdFPA=0; PjgdFPA < VK_MAX_DESCRIPTION_SIZE; PjgdFPA++){
            [&]() {
result.description[PjgdFPA]=deserialize_char(name["members"]["description"]["members"][PjgdFPA]);}();;
        }
        }();
[&]() {

        for (int RHePObX=0; RHePObX < VK_MAX_EXTENSION_NAME_SIZE; RHePObX++){
            [&]() {
result.layer[RHePObX]=deserialize_char(name["members"]["layer"]["members"][RHePObX]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceToolPropertiesEXT(VkPhysicalDeviceToolPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sooxkFF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AHoXUvk=json({});
    
        if (name.pNext==NULL){
            return_AHoXUvk["null"]=true;
            return return_AHoXUvk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_vsionGL=json({});
    
        return_vsionGL["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_uMffSos=json({});
    return serialize_char(name.name[i]);}();
            return_vsionGL["members"][std::to_string(i)].push_back(temp);
        }
        return return_vsionGL;
        }();
result["members"]["version"]=[&]() {
    json return_cgdLxkm=json({});
    
        return_cgdLxkm["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_Riicgay=json({});
    return serialize_char(name.version[i]);}();
            return_cgdLxkm["members"][std::to_string(i)].push_back(temp);
        }
        return return_cgdLxkm;
        }();
result["members"]["purposes"]=[&]() {
    json return_iqlmlFo=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_WgLrIky=json({});
    
        return_WgLrIky["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_oCDjjUW=json({});
    return serialize_char(name.description[i]);}();
            return_WgLrIky["members"][std::to_string(i)].push_back(temp);
        }
        return return_WgLrIky;
        }();
result["members"]["layer"]=[&]() {
    json return_uQijnIs=json({});
    
        return_uQijnIs["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_oSawgNZ=json({});
    return serialize_char(name.layer[i]);}();
            return_uQijnIs["members"][std::to_string(i)].push_back(temp);
        }
        return return_uQijnIs;
        }();
return result;}

    VkPhysicalDeviceToolPropertiesEXT deserialize_VkPhysicalDeviceToolPropertiesEXT(json name){
        auto result=VkPhysicalDeviceToolPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int puGooED=0; puGooED < VK_MAX_EXTENSION_NAME_SIZE; puGooED++){
            [&]() {
result.name[puGooED]=deserialize_char(name["members"]["name"]["members"][puGooED]);}();;
        }
        }();
[&]() {

        for (int IEIFjlz=0; IEIFjlz < VK_MAX_EXTENSION_NAME_SIZE; IEIFjlz++){
            [&]() {
result.version[IEIFjlz]=deserialize_char(name["members"]["version"]["members"][IEIFjlz]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int lXGMhUq=0; lXGMhUq < VK_MAX_DESCRIPTION_SIZE; lXGMhUq++){
            [&]() {
result.description[lXGMhUq]=deserialize_char(name["members"]["description"]["members"][lXGMhUq]);}();;
        }
        }();
[&]() {

        for (int DWDrPkj=0; DWDrPkj < VK_MAX_EXTENSION_NAME_SIZE; DWDrPkj++){
            [&]() {
result.layer[DWDrPkj]=deserialize_char(name["members"]["layer"]["members"][DWDrPkj]);}();;
        }
        }();
return result;}

    json serialize_VkSamplerCustomBorderColorCreateInfoEXT(VkSamplerCustomBorderColorCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hnOEIUw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IvGVbYW=json({});
    
        if (name.pNext==NULL){
            return_IvGVbYW["null"]=true;
            return return_IvGVbYW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColor"]=[&]() {
    json return_bGAcSmV=json({});
    return serialize_VkClearColorValue(name.customBorderColor);}();
result["members"]["format"]=[&]() {
    json return_OnyQrMQ=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkSamplerCustomBorderColorCreateInfoEXT deserialize_VkSamplerCustomBorderColorCreateInfoEXT(json name){
        auto result=VkSamplerCustomBorderColorCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dorGYBx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dorGYBx=NULL;
        }
    temp_dorGYBx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dorGYBx;}();
[&]() {
result.customBorderColor=deserialize_VkClearColorValue(name["members"]["customBorderColor"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkPhysicalDeviceCustomBorderColorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_viRgBSW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oDwKGJj=json({});
    
        if (name.pNext==NULL){
            return_oDwKGJj["null"]=true;
            return return_oDwKGJj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxCustomBorderColorSamplers"]=[&]() {
    json return_SrQdvip=json({});
    return serialize_uint32_t(name.maxCustomBorderColorSamplers);}();
return result;}

    VkPhysicalDeviceCustomBorderColorPropertiesEXT deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxCustomBorderColorSamplers=deserialize_uint32_t(name["members"]["maxCustomBorderColorSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkPhysicalDeviceCustomBorderColorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xcPNwUM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iXNvzmF=json({});
    
        if (name.pNext==NULL){
            return_iXNvzmF["null"]=true;
            return return_iXNvzmF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColors"]=[&]() {
    json return_SpgCsGy=json({});
    return_SpgCsGy=[&]() {
    json return_qYptkKC=json({});
    return serialize_uint32_t(name.customBorderColors);}();return return_SpgCsGy;}();
result["members"]["customBorderColorWithoutFormat"]=[&]() {
    json return_SKvhKzM=json({});
    return_SKvhKzM=[&]() {
    json return_qrTNISC=json({});
    return serialize_uint32_t(name.customBorderColorWithoutFormat);}();return return_SKvhKzM;}();
return result;}

    VkPhysicalDeviceCustomBorderColorFeaturesEXT deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.customBorderColors=deserialize_uint32_t(name["members"]["customBorderColors"]);}();}();
[&]() {
[&]() {
result.customBorderColorWithoutFormat=deserialize_uint32_t(name["members"]["customBorderColorWithoutFormat"]);}();}();
return result;}

    json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(VkSamplerBorderColorComponentMappingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FGhosRz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AEanlok=json({});
    
        if (name.pNext==NULL){
            return_AEanlok["null"]=true;
            return return_AEanlok;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["components"]=[&]() {
    json return_DteYzPc=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["srgb"]=[&]() {
    json return_VnwpFMm=json({});
    return_VnwpFMm=[&]() {
    json return_gBQIFjQ=json({});
    return serialize_uint32_t(name.srgb);}();return return_VnwpFMm;}();
return result;}

    VkSamplerBorderColorComponentMappingCreateInfoEXT deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(json name){
        auto result=VkSamplerBorderColorComponentMappingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jJlNGIB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jJlNGIB=NULL;
        }
    temp_jJlNGIB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jJlNGIB;}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
[&]() {
result.srgb=deserialize_uint32_t(name["members"]["srgb"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xNoOIvJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WeNmTTS=json({});
    
        if (name.pNext==NULL){
            return_WeNmTTS["null"]=true;
            return return_WeNmTTS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["borderColorSwizzle"]=[&]() {
    json return_qlKhokb=json({});
    return_qlKhokb=[&]() {
    json return_GePJPku=json({});
    return serialize_uint32_t(name.borderColorSwizzle);}();return return_qlKhokb;}();
result["members"]["borderColorSwizzleFromImage"]=[&]() {
    json return_oIuCBgt=json({});
    return_oIuCBgt=[&]() {
    json return_IfhtutP=json({});
    return serialize_uint32_t(name.borderColorSwizzleFromImage);}();return return_oIuCBgt;}();
return result;}

    VkPhysicalDeviceBorderColorSwizzleFeaturesEXT deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBorderColorSwizzleFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.borderColorSwizzle=deserialize_uint32_t(name["members"]["borderColorSwizzle"]);}();}();
[&]() {
[&]() {
result.borderColorSwizzleFromImage=deserialize_uint32_t(name["members"]["borderColorSwizzleFromImage"]);}();}();
return result;}

    json serialize_VkDeviceOrHostAddressKHR(VkDeviceOrHostAddressKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_NLkNWUe=json({});
    return_NLkNWUe=[&]() {
    json return_ilsOwbh=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_NLkNWUe;}();
result["members"]["hostAddress"]=[&]() {
    json return_gmxcmAh=json({});
    
        if (name.hostAddress==NULL){
            return_gmxcmAh["null"]=true;
            return return_gmxcmAh;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressKHR deserialize_VkDeviceOrHostAddressKHR(json name){
        auto result=VkDeviceOrHostAddressKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        result.hostAddress=NULL;
        }
    result.hostAddress=deserialize_void_p(name["members"]["hostAddress"]);
}();
return result;}

    json serialize_VkDeviceOrHostAddressConstKHR(VkDeviceOrHostAddressConstKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_seMBDgp=json({});
    return_seMBDgp=[&]() {
    json return_vxBlAtr=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_seMBDgp;}();
result["members"]["hostAddress"]=[&]() {
    json return_vKImRBi=json({});
    
        if (name.hostAddress==NULL){
            return_vKImRBi["null"]=true;
            return return_vKImRBi;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressConstKHR deserialize_VkDeviceOrHostAddressConstKHR(json name){
        auto result=VkDeviceOrHostAddressConstKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
void* temp_ZAlVGag;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_ZAlVGag=NULL;
        }
    temp_ZAlVGag=deserialize_void_p(name["members"]["hostAddress"]);
}();result.hostAddress=temp_ZAlVGag;}();
return result;}

    json serialize_VkAccelerationStructureGeometryTrianglesDataKHR(VkAccelerationStructureGeometryTrianglesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MAIocHo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PFVfeJh=json({});
    
        if (name.pNext==NULL){
            return_PFVfeJh["null"]=true;
            return return_PFVfeJh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexFormat"]=[&]() {
    json return_qjMBVUR=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["vertexData"]=[&]() {
    json return_HpZkBwE=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
result["members"]["vertexStride"]=[&]() {
    json return_swcKxOY=json({});
    return_swcKxOY=[&]() {
    json return_vFbZQRg=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_swcKxOY;}();
result["members"]["maxVertex"]=[&]() {
    json return_TNRwiue=json({});
    return serialize_uint32_t(name.maxVertex);}();
result["members"]["indexType"]=[&]() {
    json return_YUQvlRl=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexData"]=[&]() {
    json return_jZOOqwn=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexData);}();
result["members"]["transformData"]=[&]() {
    json return_hqFhgeH=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.transformData);}();
return result;}

    VkAccelerationStructureGeometryTrianglesDataKHR deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryTrianglesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JQsDsUB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JQsDsUB=NULL;
        }
    temp_JQsDsUB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JQsDsUB;}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.maxVertex=deserialize_uint32_t(name["members"]["maxVertex"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexData"]);}();
[&]() {
result.transformData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["transformData"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryAabbsDataKHR(VkAccelerationStructureGeometryAabbsDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PpzWRGq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zCvGDWS=json({});
    
        if (name.pNext==NULL){
            return_zCvGDWS["null"]=true;
            return return_zCvGDWS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["data"]=[&]() {
    json return_WgAxFrX=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["stride"]=[&]() {
    json return_hIlRhZD=json({});
    return_hIlRhZD=[&]() {
    json return_OovbBAu=json({});
    return serialize_uint64_t(name.stride);}();return return_hIlRhZD;}();
return result;}

    VkAccelerationStructureGeometryAabbsDataKHR deserialize_VkAccelerationStructureGeometryAabbsDataKHR(json name){
        auto result=VkAccelerationStructureGeometryAabbsDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MvatTpc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MvatTpc=NULL;
        }
    temp_MvatTpc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MvatTpc;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryInstancesDataKHR(VkAccelerationStructureGeometryInstancesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xsNSnCm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HNzfTvD=json({});
    
        if (name.pNext==NULL){
            return_HNzfTvD["null"]=true;
            return return_HNzfTvD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["arrayOfPointers"]=[&]() {
    json return_iYwKNDQ=json({});
    return_iYwKNDQ=[&]() {
    json return_mmtJEbl=json({});
    return serialize_uint32_t(name.arrayOfPointers);}();return return_iYwKNDQ;}();
result["members"]["data"]=[&]() {
    json return_GjmWUPs=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
return result;}

    VkAccelerationStructureGeometryInstancesDataKHR deserialize_VkAccelerationStructureGeometryInstancesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryInstancesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_evVdnOJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_evVdnOJ=NULL;
        }
    temp_evVdnOJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_evVdnOJ;}();
[&]() {
[&]() {
result.arrayOfPointers=deserialize_uint32_t(name["members"]["arrayOfPointers"]);}();}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryDataKHR(VkAccelerationStructureGeometryDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_GXnUCnP=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_bHlMcbC=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(name.aabbs);}();
result["members"]["instances"]=[&]() {
    json return_vgDPENU=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(name.instances);}();
return result;}

    VkAccelerationStructureGeometryDataKHR deserialize_VkAccelerationStructureGeometryDataKHR(json name){
        auto result=VkAccelerationStructureGeometryDataKHR();
    
[&]() {
result.triangles=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name["members"]["aabbs"]);}();
[&]() {
result.instances=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name["members"]["instances"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryKHR(VkAccelerationStructureGeometryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iXmDWxq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kEdcTZA=json({});
    
        if (name.pNext==NULL){
            return_kEdcTZA["null"]=true;
            return return_kEdcTZA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_TXRCJbw=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_VdAYEJq=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_syHyLAD=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkAccelerationStructureGeometryKHR deserialize_VkAccelerationStructureGeometryKHR(json name){
        auto result=VkAccelerationStructureGeometryKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zWcUtun;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zWcUtun=NULL;
        }
    temp_zWcUtun=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zWcUtun;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkAccelerationStructureGeometryDataKHR(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildGeometryInfoKHR(VkAccelerationStructureBuildGeometryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qBXDiIY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TLoHvuH=json({});
    
        if (name.pNext==NULL){
            return_TLoHvuH["null"]=true;
            return return_TLoHvuH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_hHfisZF=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["flags"]=[&]() {
    json return_HGfIGOQ=json({});
    return serialize_VkBuildAccelerationStructureFlagsKHR(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_jGhtwuY=json({});
    return serialize_VkBuildAccelerationStructureModeKHR(name.mode);}();
result["members"]["srcAccelerationStructure"]=[&]() {
    json return_tfgrQdr=json({});
    return serialize_VkAccelerationStructureKHR(name.srcAccelerationStructure);}();
result["members"]["dstAccelerationStructure"]=[&]() {
    json return_FJOaNhs=json({});
    return serialize_VkAccelerationStructureKHR(name.dstAccelerationStructure);}();
result["members"]["geometryCount"]=[&]() {
    json return_HhASgAj=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_sVFmjrX=json({});
    
        if (name.pGeometries==NULL){
            return_sVFmjrX["null"]=true;
            return return_sVFmjrX;
        }
        
        return_sVFmjrX["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_rDpAvfy=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.pGeometries[i]);}();
            return_sVFmjrX["members"][std::to_string(i)].push_back(temp);
        }
        return return_sVFmjrX;
        }();
result["members"]["ppGeometries"]=[&]() {
    json return_YBeGglg=json({});
    
        if (name.ppGeometries==NULL){
            return_YBeGglg["null"]=true;
            return return_YBeGglg;
        }
        
        return_YBeGglg["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_sTVmVzm=json({});
    
        if (name.ppGeometries[i]==NULL){
            return_sTVmVzm["null"]=true;
            return return_sTVmVzm;
        }
        
        return_sTVmVzm["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_EPuVsWR=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.ppGeometries[i][i]);}();
            return_sTVmVzm["members"][std::to_string(i)].push_back(temp);
        }
        return return_sTVmVzm;
        }();
            return_YBeGglg["members"][std::to_string(i)].push_back(temp);
        }
        return return_YBeGglg;
        }();
result["members"]["scratchData"]=[&]() {
    json return_XxIEdmv=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
return result;}

    VkAccelerationStructureBuildGeometryInfoKHR deserialize_VkAccelerationStructureBuildGeometryInfoKHR(json name){
        auto result=VkAccelerationStructureBuildGeometryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jGdwXos;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jGdwXos=NULL;
        }
    temp_jGdwXos=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jGdwXos;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildAccelerationStructureModeKHR(name["members"]["mode"]);}();
[&]() {
result.srcAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["srcAccelerationStructure"]);}();
[&]() {
result.dstAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["dstAccelerationStructure"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkAccelerationStructureGeometryKHR* temp_PnCPefv;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_PnCPefv=NULL;
        }
    temp_PnCPefv=(VkAccelerationStructureGeometryKHR*)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR));
        for (int lkogzMs=0; lkogzMs < result.geometryCount; lkogzMs++){
            [&]() {
temp_PnCPefv[lkogzMs]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["pGeometries"]["members"][lkogzMs]);}();;
        }
        }();result.pGeometries=temp_PnCPefv;}();
[&]() {
VkAccelerationStructureGeometryKHR** temp_spXhtjY;[&]() {

        if (name["members"]["ppGeometries"].contains("null")){
        temp_spXhtjY=NULL;
        }
    temp_spXhtjY=(VkAccelerationStructureGeometryKHR**)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR*));
        for (int eVZfwBy=0; eVZfwBy < result.geometryCount; eVZfwBy++){
            [&]() {

        if (name["members"]["ppGeometries"]["members"][eVZfwBy].contains("null")){
        temp_spXhtjY[eVZfwBy]=NULL;
        }
    temp_spXhtjY[eVZfwBy]=(VkAccelerationStructureGeometryKHR*)malloc(1*sizeof(VkAccelerationStructureGeometryKHR));
        for (int lRIZXjz=0; lRIZXjz < 1; lRIZXjz++){
            [&]() {
temp_spXhtjY[eVZfwBy][lRIZXjz]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["ppGeometries"]["members"][eVZfwBy]["members"][lRIZXjz]);}();;
        }
        }();;
        }
        }();result.ppGeometries=temp_spXhtjY;}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildRangeInfoKHR(VkAccelerationStructureBuildRangeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["primitiveCount"]=[&]() {
    json return_iYbQPhR=json({});
    return serialize_uint32_t(name.primitiveCount);}();
result["members"]["primitiveOffset"]=[&]() {
    json return_vhUEyrE=json({});
    return serialize_uint32_t(name.primitiveOffset);}();
result["members"]["firstVertex"]=[&]() {
    json return_XCefBNm=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["transformOffset"]=[&]() {
    json return_hmKlUwc=json({});
    return serialize_uint32_t(name.transformOffset);}();
return result;}

    VkAccelerationStructureBuildRangeInfoKHR deserialize_VkAccelerationStructureBuildRangeInfoKHR(json name){
        auto result=VkAccelerationStructureBuildRangeInfoKHR();
    
[&]() {
result.primitiveCount=deserialize_uint32_t(name["members"]["primitiveCount"]);}();
[&]() {
result.primitiveOffset=deserialize_uint32_t(name["members"]["primitiveOffset"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.transformOffset=deserialize_uint32_t(name["members"]["transformOffset"]);}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoKHR(VkAccelerationStructureCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pkykHyK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zABaPBO=json({});
    
        if (name.pNext==NULL){
            return_zABaPBO["null"]=true;
            return return_zABaPBO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_exModzs=json({});
    return serialize_VkAccelerationStructureCreateFlagsKHR(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_YNRBWYM=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_OSPkAzi=json({});
    return_OSPkAzi=[&]() {
    json return_EsHZdNB=json({});
    return serialize_uint64_t(name.offset);}();return return_OSPkAzi;}();
result["members"]["size"]=[&]() {
    json return_rMjcFxk=json({});
    return_rMjcFxk=[&]() {
    json return_XpwjnbH=json({});
    return serialize_uint64_t(name.size);}();return return_rMjcFxk;}();
result["members"]["type"]=[&]() {
    json return_vxZvaPs=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_QkgGTGJ=json({});
    return_QkgGTGJ=[&]() {
    json return_OgldcHQ=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_QkgGTGJ;}();
return result;}

    VkAccelerationStructureCreateInfoKHR deserialize_VkAccelerationStructureCreateInfoKHR(json name){
        auto result=VkAccelerationStructureCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RpfjLer;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RpfjLer=NULL;
        }
    temp_RpfjLer=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RpfjLer;}();
[&]() {
result.createFlags=deserialize_VkAccelerationStructureCreateFlagsKHR(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkAabbPositionsKHR(VkAabbPositionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_fmuCqmL=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_pJuYjAI=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_MMvoKGT=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_GVmfQjx=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_vDvOVCy=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_frkzjpj=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsKHR deserialize_VkAabbPositionsKHR(json name){
        auto result=VkAabbPositionsKHR();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkAabbPositionsNV(VkAabbPositionsNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_kPjgClD=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_DTLgCOF=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_ivNUQer=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_nvEpNgH=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_YhFSiwh=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_iVWCJZo=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsNV deserialize_VkAabbPositionsNV(json name){
        auto result=VkAabbPositionsNV();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkTransformMatrixKHR(VkTransformMatrixKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_EYNhwIU=json({});
    
        return_EYNhwIU["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_SUWWoEs=json({});
    
        return_SUWWoEs["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_htmkBtt=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_SUWWoEs["members"][std::to_string(i)].push_back(temp);
        }
        return return_SUWWoEs;
        }();
            return_EYNhwIU["members"][std::to_string(i)].push_back(temp);
        }
        return return_EYNhwIU;
        }();
return result;}

    VkTransformMatrixKHR deserialize_VkTransformMatrixKHR(json name){
        auto result=VkTransformMatrixKHR();
    
[&]() {

        for (int UweNOuA=0; UweNOuA < 3; UweNOuA++){
            [&]() {

        for (int qQMKzcH=0; qQMKzcH < 4; qQMKzcH++){
            [&]() {
result.matrix[UweNOuA][qQMKzcH]=deserialize_float(name["members"]["matrix"]["members"][UweNOuA]["members"][qQMKzcH]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkTransformMatrixNV(VkTransformMatrixNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_mnngiRC=json({});
    
        return_mnngiRC["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_QaasCky=json({});
    
        return_QaasCky["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_GsijbyP=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_QaasCky["members"][std::to_string(i)].push_back(temp);
        }
        return return_QaasCky;
        }();
            return_mnngiRC["members"][std::to_string(i)].push_back(temp);
        }
        return return_mnngiRC;
        }();
return result;}

    VkTransformMatrixNV deserialize_VkTransformMatrixNV(json name){
        auto result=VkTransformMatrixNV();
    
[&]() {

        for (int XQkSMCW=0; XQkSMCW < 3; XQkSMCW++){
            [&]() {

        for (int tpkeGBs=0; tpkeGBs < 4; tpkeGBs++){
            [&]() {
result.matrix[XQkSMCW][tpkeGBs]=deserialize_float(name["members"]["matrix"]["members"][XQkSMCW]["members"][tpkeGBs]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureInstanceKHR(VkAccelerationStructureInstanceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_wqGKkWn=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_kTCJfko=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_qjYxtxK=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_KlyuNBR=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_NEXQsmx=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_uMKVxYO=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceKHR deserialize_VkAccelerationStructureInstanceKHR(json name){
        auto result=VkAccelerationStructureInstanceKHR();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureInstanceNV(VkAccelerationStructureInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_ifuaICV=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_sTgtgXa=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_hJaYPZg=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_JGUuHbt=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_ImanTEA=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_Epdapuu=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceNV deserialize_VkAccelerationStructureInstanceNV(json name){
        auto result=VkAccelerationStructureInstanceNV();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureDeviceAddressInfoKHR(VkAccelerationStructureDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YzZYbsI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YhxmVJc=json({});
    
        if (name.pNext==NULL){
            return_YhxmVJc["null"]=true;
            return return_YhxmVJc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_vJCFSgT=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureDeviceAddressInfoKHR deserialize_VkAccelerationStructureDeviceAddressInfoKHR(json name){
        auto result=VkAccelerationStructureDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UeOJtPw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UeOJtPw=NULL;
        }
    temp_UeOJtPw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UeOJtPw;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkAccelerationStructureVersionInfoKHR(VkAccelerationStructureVersionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZgGGOLc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WAJXcQT=json({});
    
        if (name.pNext==NULL){
            return_WAJXcQT["null"]=true;
            return return_WAJXcQT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_QUPtbRt=json({});
    
        if (name.pVersionData==NULL){
            return_QUPtbRt["null"]=true;
            return return_QUPtbRt;
        }
        
        return_QUPtbRt["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_jBydDuj=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_QUPtbRt["members"][std::to_string(i)].push_back(temp);
        }
        return return_QUPtbRt;
        }();
return result;}

    VkAccelerationStructureVersionInfoKHR deserialize_VkAccelerationStructureVersionInfoKHR(json name){
        auto result=VkAccelerationStructureVersionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DvRupfQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DvRupfQ=NULL;
        }
    temp_DvRupfQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DvRupfQ;}();
[&]() {
uint8_t* temp_mMTdklN;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_mMTdklN=NULL;
        }
    temp_mMTdklN=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int HjhuACN=0; HjhuACN < 2*VK_UUID_SIZE; HjhuACN++){
            [&]() {
temp_mMTdklN[HjhuACN]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][HjhuACN]);}();;
        }
        }();result.pVersionData=temp_mMTdklN;}();
return result;}

    json serialize_VkCopyAccelerationStructureInfoKHR(VkCopyAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kOtxYNj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aEjbybw=json({});
    
        if (name.pNext==NULL){
            return_aEjbybw["null"]=true;
            return return_aEjbybw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_vzLhWmE=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_mfVeLbX=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_zWwMJvh=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureInfoKHR deserialize_VkCopyAccelerationStructureInfoKHR(json name){
        auto result=VkCopyAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AwftngD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AwftngD=NULL;
        }
    temp_AwftngD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AwftngD;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyAccelerationStructureToMemoryInfoKHR(VkCopyAccelerationStructureToMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mlRxXCG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_snNuPJP=json({});
    
        if (name.pNext==NULL){
            return_snNuPJP["null"]=true;
            return return_snNuPJP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_RYSBsfv=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_MjMBXAH=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_KyRRmFZ=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureToMemoryInfoKHR deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(json name){
        auto result=VkCopyAccelerationStructureToMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YeXCjUj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YeXCjUj=NULL;
        }
    temp_YeXCjUj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YeXCjUj;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToAccelerationStructureInfoKHR(VkCopyMemoryToAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zAUOdrV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cdXWXwX=json({});
    
        if (name.pNext==NULL){
            return_cdXWXwX["null"]=true;
            return return_cdXWXwX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_pWmbWci=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_RHGSMKx=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_luVZCIn=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyMemoryToAccelerationStructureInfoKHR deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(json name){
        auto result=VkCopyMemoryToAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EbIABkS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EbIABkS=NULL;
        }
    temp_EbIABkS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EbIABkS;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(VkRayTracingPipelineInterfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HqxNyyE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kSWcvnw=json({});
    
        if (name.pNext==NULL){
            return_kSWcvnw["null"]=true;
            return return_kSWcvnw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPipelineRayPayloadSize"]=[&]() {
    json return_FnAFgGS=json({});
    return serialize_uint32_t(name.maxPipelineRayPayloadSize);}();
result["members"]["maxPipelineRayHitAttributeSize"]=[&]() {
    json return_gMjtmhf=json({});
    return serialize_uint32_t(name.maxPipelineRayHitAttributeSize);}();
return result;}

    VkRayTracingPipelineInterfaceCreateInfoKHR deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineInterfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wNMAQaw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wNMAQaw=NULL;
        }
    temp_wNMAQaw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wNMAQaw;}();
[&]() {
result.maxPipelineRayPayloadSize=deserialize_uint32_t(name["members"]["maxPipelineRayPayloadSize"]);}();
[&]() {
result.maxPipelineRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxPipelineRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPipelineLibraryCreateInfoKHR(VkPipelineLibraryCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BEmzsYl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vjwQrtr=json({});
    
        if (name.pNext==NULL){
            return_vjwQrtr["null"]=true;
            return return_vjwQrtr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["libraryCount"]=[&]() {
    json return_vtpSbfd=json({});
    return serialize_uint32_t(name.libraryCount);}();
result["members"]["pLibraries"]=[&]() {
    json return_JcKJtfZ=json({});
    
        if (name.pLibraries==NULL){
            return_JcKJtfZ["null"]=true;
            return return_JcKJtfZ;
        }
        
        return_JcKJtfZ["members"]={};
        for(int i=0; i < name.libraryCount; i++){
            json temp;
            temp=[&]() {
    json return_cdMDKbw=json({});
    return serialize_VkPipeline(name.pLibraries[i]);}();
            return_JcKJtfZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_JcKJtfZ;
        }();
return result;}

    VkPipelineLibraryCreateInfoKHR deserialize_VkPipelineLibraryCreateInfoKHR(json name){
        auto result=VkPipelineLibraryCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vlqKkDp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vlqKkDp=NULL;
        }
    temp_vlqKkDp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vlqKkDp;}();
[&]() {
result.libraryCount=deserialize_uint32_t(name["members"]["libraryCount"]);}();
[&]() {
VkPipeline* temp_qbGrWSq;[&]() {

        if (name["members"]["pLibraries"].contains("null")){
        temp_qbGrWSq=NULL;
        }
    temp_qbGrWSq=(VkPipeline*)malloc(result.libraryCount*sizeof(VkPipeline));
        for (int QEbFShr=0; QEbFShr < result.libraryCount; QEbFShr++){
            [&]() {
temp_qbGrWSq[QEbFShr]=deserialize_VkPipeline(name["members"]["pLibraries"]["members"][QEbFShr]);}();;
        }
        }();result.pLibraries=temp_qbGrWSq;}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yoYzVLo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_faWRbfg=json({});
    
        if (name.pNext==NULL){
            return_faWRbfg["null"]=true;
            return return_faWRbfg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState"]=[&]() {
    json return_NSUWULr=json({});
    return_NSUWULr=[&]() {
    json return_ukeHjfY=json({});
    return serialize_uint32_t(name.extendedDynamicState);}();return return_NSUWULr;}();
return result;}

    VkPhysicalDeviceExtendedDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState=deserialize_uint32_t(name["members"]["extendedDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DevlMDe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sqZskmP=json({});
    
        if (name.pNext==NULL){
            return_sqZskmP["null"]=true;
            return return_sqZskmP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState2"]=[&]() {
    json return_WUSMfxr=json({});
    return_WUSMfxr=[&]() {
    json return_uRGwuyy=json({});
    return serialize_uint32_t(name.extendedDynamicState2);}();return return_WUSMfxr;}();
result["members"]["extendedDynamicState2LogicOp"]=[&]() {
    json return_UTNaAZb=json({});
    return_UTNaAZb=[&]() {
    json return_wFmsSnV=json({});
    return serialize_uint32_t(name.extendedDynamicState2LogicOp);}();return return_UTNaAZb;}();
result["members"]["extendedDynamicState2PatchControlPoints"]=[&]() {
    json return_vjmUwUj=json({});
    return_vjmUwUj=[&]() {
    json return_xPAcGWO=json({});
    return serialize_uint32_t(name.extendedDynamicState2PatchControlPoints);}();return return_vjmUwUj;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState2FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState2=deserialize_uint32_t(name["members"]["extendedDynamicState2"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2LogicOp=deserialize_uint32_t(name["members"]["extendedDynamicState2LogicOp"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2PatchControlPoints=deserialize_uint32_t(name["members"]["extendedDynamicState2PatchControlPoints"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GxJOzrx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uoSgsjE=json({});
    
        if (name.pNext==NULL){
            return_uoSgsjE["null"]=true;
            return return_uoSgsjE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState3TessellationDomainOrigin"]=[&]() {
    json return_kklqyPl=json({});
    return_kklqyPl=[&]() {
    json return_DMvjDQV=json({});
    return serialize_uint32_t(name.extendedDynamicState3TessellationDomainOrigin);}();return return_kklqyPl;}();
result["members"]["extendedDynamicState3DepthClampEnable"]=[&]() {
    json return_tLVeZmb=json({});
    return_tLVeZmb=[&]() {
    json return_bTNZqEz=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClampEnable);}();return return_tLVeZmb;}();
result["members"]["extendedDynamicState3PolygonMode"]=[&]() {
    json return_EwqjQjo=json({});
    return_EwqjQjo=[&]() {
    json return_mzsxSET=json({});
    return serialize_uint32_t(name.extendedDynamicState3PolygonMode);}();return return_EwqjQjo;}();
result["members"]["extendedDynamicState3RasterizationSamples"]=[&]() {
    json return_lOxvEud=json({});
    return_lOxvEud=[&]() {
    json return_IbJEkyu=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationSamples);}();return return_lOxvEud;}();
result["members"]["extendedDynamicState3SampleMask"]=[&]() {
    json return_YmOOEOD=json({});
    return_YmOOEOD=[&]() {
    json return_PivfRHC=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleMask);}();return return_YmOOEOD;}();
result["members"]["extendedDynamicState3AlphaToCoverageEnable"]=[&]() {
    json return_Kmqaybp=json({});
    return_Kmqaybp=[&]() {
    json return_YalVUkY=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToCoverageEnable);}();return return_Kmqaybp;}();
result["members"]["extendedDynamicState3AlphaToOneEnable"]=[&]() {
    json return_xGENlMt=json({});
    return_xGENlMt=[&]() {
    json return_KQPSaxn=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToOneEnable);}();return return_xGENlMt;}();
result["members"]["extendedDynamicState3LogicOpEnable"]=[&]() {
    json return_IIiTUDc=json({});
    return_IIiTUDc=[&]() {
    json return_LJlOrtf=json({});
    return serialize_uint32_t(name.extendedDynamicState3LogicOpEnable);}();return return_IIiTUDc;}();
result["members"]["extendedDynamicState3ColorBlendEnable"]=[&]() {
    json return_nFjhSQU=json({});
    return_nFjhSQU=[&]() {
    json return_PAZsWMq=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEnable);}();return return_nFjhSQU;}();
result["members"]["extendedDynamicState3ColorBlendEquation"]=[&]() {
    json return_CfLdQXR=json({});
    return_CfLdQXR=[&]() {
    json return_LPhLxut=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEquation);}();return return_CfLdQXR;}();
result["members"]["extendedDynamicState3ColorWriteMask"]=[&]() {
    json return_AcpNxew=json({});
    return_AcpNxew=[&]() {
    json return_ZzEGPXD=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorWriteMask);}();return return_AcpNxew;}();
result["members"]["extendedDynamicState3RasterizationStream"]=[&]() {
    json return_oLoylRp=json({});
    return_oLoylRp=[&]() {
    json return_vAcWTHe=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationStream);}();return return_oLoylRp;}();
result["members"]["extendedDynamicState3ConservativeRasterizationMode"]=[&]() {
    json return_MjDnAyO=json({});
    return_MjDnAyO=[&]() {
    json return_fvEVyoF=json({});
    return serialize_uint32_t(name.extendedDynamicState3ConservativeRasterizationMode);}();return return_MjDnAyO;}();
result["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]=[&]() {
    json return_bqQvHnx=json({});
    return_bqQvHnx=[&]() {
    json return_mZDdpJp=json({});
    return serialize_uint32_t(name.extendedDynamicState3ExtraPrimitiveOverestimationSize);}();return return_bqQvHnx;}();
result["members"]["extendedDynamicState3DepthClipEnable"]=[&]() {
    json return_nvoyjhF=json({});
    return_nvoyjhF=[&]() {
    json return_uppCSaV=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipEnable);}();return return_nvoyjhF;}();
result["members"]["extendedDynamicState3SampleLocationsEnable"]=[&]() {
    json return_TzmyqKw=json({});
    return_TzmyqKw=[&]() {
    json return_iRmJcks=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleLocationsEnable);}();return return_TzmyqKw;}();
result["members"]["extendedDynamicState3ColorBlendAdvanced"]=[&]() {
    json return_DAVIKjM=json({});
    return_DAVIKjM=[&]() {
    json return_jPTCXsN=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendAdvanced);}();return return_DAVIKjM;}();
result["members"]["extendedDynamicState3ProvokingVertexMode"]=[&]() {
    json return_BBqhJAr=json({});
    return_BBqhJAr=[&]() {
    json return_pfNwMHl=json({});
    return serialize_uint32_t(name.extendedDynamicState3ProvokingVertexMode);}();return return_BBqhJAr;}();
result["members"]["extendedDynamicState3LineRasterizationMode"]=[&]() {
    json return_xUQwygX=json({});
    return_xUQwygX=[&]() {
    json return_voGMZFE=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineRasterizationMode);}();return return_xUQwygX;}();
result["members"]["extendedDynamicState3LineStippleEnable"]=[&]() {
    json return_kKUxton=json({});
    return_kKUxton=[&]() {
    json return_FbXKcYF=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineStippleEnable);}();return return_kKUxton;}();
result["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]=[&]() {
    json return_AaONwdM=json({});
    return_AaONwdM=[&]() {
    json return_CIAoksC=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipNegativeOneToOne);}();return return_AaONwdM;}();
result["members"]["extendedDynamicState3ViewportWScalingEnable"]=[&]() {
    json return_NVgQZVM=json({});
    return_NVgQZVM=[&]() {
    json return_MAtzwAr=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportWScalingEnable);}();return return_NVgQZVM;}();
result["members"]["extendedDynamicState3ViewportSwizzle"]=[&]() {
    json return_KHQgSGe=json({});
    return_KHQgSGe=[&]() {
    json return_YZxZmwI=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportSwizzle);}();return return_KHQgSGe;}();
result["members"]["extendedDynamicState3CoverageToColorEnable"]=[&]() {
    json return_afGqqdK=json({});
    return_afGqqdK=[&]() {
    json return_FPIfEzN=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorEnable);}();return return_afGqqdK;}();
result["members"]["extendedDynamicState3CoverageToColorLocation"]=[&]() {
    json return_KnNSnqO=json({});
    return_KnNSnqO=[&]() {
    json return_RhECqLR=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorLocation);}();return return_KnNSnqO;}();
result["members"]["extendedDynamicState3CoverageModulationMode"]=[&]() {
    json return_WtyuOUz=json({});
    return_WtyuOUz=[&]() {
    json return_AUqQTcT=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationMode);}();return return_WtyuOUz;}();
result["members"]["extendedDynamicState3CoverageModulationTableEnable"]=[&]() {
    json return_QRhzoHR=json({});
    return_QRhzoHR=[&]() {
    json return_tAAtERN=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTableEnable);}();return return_QRhzoHR;}();
result["members"]["extendedDynamicState3CoverageModulationTable"]=[&]() {
    json return_nzuNNbD=json({});
    return_nzuNNbD=[&]() {
    json return_SipTUKq=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTable);}();return return_nzuNNbD;}();
result["members"]["extendedDynamicState3CoverageReductionMode"]=[&]() {
    json return_URxTvrz=json({});
    return_URxTvrz=[&]() {
    json return_vEKcfri=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageReductionMode);}();return return_URxTvrz;}();
result["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]=[&]() {
    json return_SscIqky=json({});
    return_SscIqky=[&]() {
    json return_PUSFoSr=json({});
    return serialize_uint32_t(name.extendedDynamicState3RepresentativeFragmentTestEnable);}();return return_SscIqky;}();
result["members"]["extendedDynamicState3ShadingRateImageEnable"]=[&]() {
    json return_iECfTaf=json({});
    return_iECfTaf=[&]() {
    json return_TaNXjWx=json({});
    return serialize_uint32_t(name.extendedDynamicState3ShadingRateImageEnable);}();return return_iECfTaf;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState3TessellationDomainOrigin=deserialize_uint32_t(name["members"]["extendedDynamicState3TessellationDomainOrigin"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClampEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClampEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3PolygonMode=deserialize_uint32_t(name["members"]["extendedDynamicState3PolygonMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationSamples=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationSamples"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleMask=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToCoverageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToOneEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToOneEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LogicOpEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LogicOpEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEquation=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEquation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorWriteMask=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorWriteMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationStream=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationStream"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ConservativeRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ConservativeRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ExtraPrimitiveOverestimationSize=deserialize_uint32_t(name["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleLocationsEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleLocationsEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendAdvanced=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendAdvanced"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ProvokingVertexMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ProvokingVertexMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3LineRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineStippleEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LineStippleEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipNegativeOneToOne=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportWScalingEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportWScalingEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportSwizzle=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportSwizzle"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorLocation=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorLocation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTableEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTableEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageReductionMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageReductionMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RepresentativeFragmentTestEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ShadingRateImageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ShadingRateImageEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OrqaPVr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RHnVhUc=json({});
    
        if (name.pNext==NULL){
            return_RHnVhUc["null"]=true;
            return return_RHnVhUc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicPrimitiveTopologyUnrestricted"]=[&]() {
    json return_pbQKNHU=json({});
    return_pbQKNHU=[&]() {
    json return_bJewjMI=json({});
    return serialize_uint32_t(name.dynamicPrimitiveTopologyUnrestricted);}();return return_pbQKNHU;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3PropertiesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicPrimitiveTopologyUnrestricted=deserialize_uint32_t(name["members"]["dynamicPrimitiveTopologyUnrestricted"]);}();}();
return result;}

    json serialize_VkColorBlendEquationEXT(VkColorBlendEquationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_fQUKUJt=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_FomjMEk=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_gORnaZv=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_CSoonXM=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_izwjziU=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_mvBZyuG=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
return result;}

    VkColorBlendEquationEXT deserialize_VkColorBlendEquationEXT(json name){
        auto result=VkColorBlendEquationEXT();
    
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
return result;}

    json serialize_VkColorBlendAdvancedEXT(VkColorBlendAdvancedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["advancedBlendOp"]=[&]() {
    json return_fOhMabA=json({});
    return serialize_VkBlendOp(name.advancedBlendOp);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_jvzNewS=json({});
    return_jvzNewS=[&]() {
    json return_nCrrjjP=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_jvzNewS;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_orJnrXE=json({});
    return_orJnrXE=[&]() {
    json return_mItPMuy=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_orJnrXE;}();
result["members"]["blendOverlap"]=[&]() {
    json return_tVYxihd=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
result["members"]["clampResults"]=[&]() {
    json return_YiwyKLd=json({});
    return_YiwyKLd=[&]() {
    json return_LZzZVUi=json({});
    return serialize_uint32_t(name.clampResults);}();return return_YiwyKLd;}();
return result;}

    VkColorBlendAdvancedEXT deserialize_VkColorBlendAdvancedEXT(json name){
        auto result=VkColorBlendAdvancedEXT();
    
[&]() {
result.advancedBlendOp=deserialize_VkBlendOp(name["members"]["advancedBlendOp"]);}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
[&]() {
[&]() {
result.clampResults=deserialize_uint32_t(name["members"]["clampResults"]);}();}();
return result;}

    json serialize_VkRenderPassTransformBeginInfoQCOM(VkRenderPassTransformBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pVgYamh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_layyjIk=json({});
    
        if (name.pNext==NULL){
            return_layyjIk["null"]=true;
            return return_layyjIk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_jYVmJyG=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkRenderPassTransformBeginInfoQCOM deserialize_VkRenderPassTransformBeginInfoQCOM(json name){
        auto result=VkRenderPassTransformBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCopyCommandTransformInfoQCOM(VkCopyCommandTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KqrqtcS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rFrftHd=json({});
    
        if (name.pNext==NULL){
            return_rFrftHd["null"]=true;
            return return_rFrftHd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_HlkqgbD=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkCopyCommandTransformInfoQCOM deserialize_VkCopyCommandTransformInfoQCOM(json name){
        auto result=VkCopyCommandTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EEMgRWB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EEMgRWB=NULL;
        }
    temp_EEMgRWB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EEMgRWB;}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkCommandBufferInheritanceRenderPassTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tQcKduC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vixebuT=json({});
    
        if (name.pNext==NULL){
            return_vixebuT["null"]=true;
            return return_vixebuT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_KNfgSAd=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["renderArea"]=[&]() {
    json return_OQcTQwb=json({});
    return serialize_VkRect2D(name.renderArea);}();
return result;}

    VkCommandBufferInheritanceRenderPassTransformInfoQCOM deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(json name){
        auto result=VkCommandBufferInheritanceRenderPassTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
return result;}

    json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkPhysicalDeviceDiagnosticsConfigFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WhLMcne=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EbJIdeA=json({});
    
        if (name.pNext==NULL){
            return_EbJIdeA["null"]=true;
            return return_EbJIdeA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["diagnosticsConfig"]=[&]() {
    json return_TQPPIdZ=json({});
    return_TQPPIdZ=[&]() {
    json return_kpqHZOd=json({});
    return serialize_uint32_t(name.diagnosticsConfig);}();return return_TQPPIdZ;}();
return result;}

    VkPhysicalDeviceDiagnosticsConfigFeaturesNV deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(json name){
        auto result=VkPhysicalDeviceDiagnosticsConfigFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.diagnosticsConfig=deserialize_uint32_t(name["members"]["diagnosticsConfig"]);}();}();
return result;}

    json serialize_VkDeviceDiagnosticsConfigCreateInfoNV(VkDeviceDiagnosticsConfigCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LUNobTg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bDmHdhv=json({});
    
        if (name.pNext==NULL){
            return_bDmHdhv["null"]=true;
            return return_bDmHdhv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XpBbreT=json({});
    return serialize_VkDeviceDiagnosticsConfigFlagsNV(name.flags);}();
return result;}

    VkDeviceDiagnosticsConfigCreateInfoNV deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(json name){
        auto result=VkDeviceDiagnosticsConfigCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gwjqsSk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gwjqsSk=NULL;
        }
    temp_gwjqsSk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gwjqsSk;}();
[&]() {
result.flags=deserialize_VkDeviceDiagnosticsConfigFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bpykeqB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FGmwlul=json({});
    
        if (name.pNext==NULL){
            return_FGmwlul["null"]=true;
            return return_FGmwlul;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_GpBRZUT=json({});
    return_GpBRZUT=[&]() {
    json return_IlpyPiB=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_GpBRZUT;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KPgFBTc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Makdoli=json({});
    
        if (name.pNext==NULL){
            return_Makdoli["null"]=true;
            return return_Makdoli;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_PWcbXwa=json({});
    return_PWcbXwa=[&]() {
    json return_ZjyXEti=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_PWcbXwa;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bbhuEQF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_droCTyz=json({});
    
        if (name.pNext==NULL){
            return_droCTyz["null"]=true;
            return return_droCTyz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupUniformControlFlow"]=[&]() {
    json return_iXrzmNN=json({});
    return_iXrzmNN=[&]() {
    json return_klGKDXJ=json({});
    return serialize_uint32_t(name.shaderSubgroupUniformControlFlow);}();return return_iXrzmNN;}();
return result;}

    VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupUniformControlFlow=deserialize_uint32_t(name["members"]["shaderSubgroupUniformControlFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2FeaturesEXT(VkPhysicalDeviceRobustness2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jXomFpr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YiemNRL=json({});
    
        if (name.pNext==NULL){
            return_YiemNRL["null"]=true;
            return return_YiemNRL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustBufferAccess2"]=[&]() {
    json return_doDFXuV=json({});
    return_doDFXuV=[&]() {
    json return_sgSHPGf=json({});
    return serialize_uint32_t(name.robustBufferAccess2);}();return return_doDFXuV;}();
result["members"]["robustImageAccess2"]=[&]() {
    json return_TZwnGYZ=json({});
    return_TZwnGYZ=[&]() {
    json return_QvrcHgQ=json({});
    return serialize_uint32_t(name.robustImageAccess2);}();return return_TZwnGYZ;}();
result["members"]["nullDescriptor"]=[&]() {
    json return_cfeqwtt=json({});
    return_cfeqwtt=[&]() {
    json return_TDMNDrc=json({});
    return serialize_uint32_t(name.nullDescriptor);}();return return_cfeqwtt;}();
return result;}

    VkPhysicalDeviceRobustness2FeaturesEXT deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustBufferAccess2=deserialize_uint32_t(name["members"]["robustBufferAccess2"]);}();}();
[&]() {
[&]() {
result.robustImageAccess2=deserialize_uint32_t(name["members"]["robustImageAccess2"]);}();}();
[&]() {
[&]() {
result.nullDescriptor=deserialize_uint32_t(name["members"]["nullDescriptor"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2PropertiesEXT(VkPhysicalDeviceRobustness2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bTrJxLW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mZVqTXg=json({});
    
        if (name.pNext==NULL){
            return_mZVqTXg["null"]=true;
            return return_mZVqTXg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustStorageBufferAccessSizeAlignment"]=[&]() {
    json return_MbtrdhK=json({});
    return_MbtrdhK=[&]() {
    json return_abyYurp=json({});
    return serialize_uint64_t(name.robustStorageBufferAccessSizeAlignment);}();return return_MbtrdhK;}();
result["members"]["robustUniformBufferAccessSizeAlignment"]=[&]() {
    json return_ppLcMnm=json({});
    return_ppLcMnm=[&]() {
    json return_hmszlGB=json({});
    return serialize_uint64_t(name.robustUniformBufferAccessSizeAlignment);}();return return_ppLcMnm;}();
return result;}

    VkPhysicalDeviceRobustness2PropertiesEXT deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustStorageBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustStorageBufferAccessSizeAlignment"]);}();}();
[&]() {
[&]() {
result.robustUniformBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustUniformBufferAccessSizeAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeatures(VkPhysicalDeviceImageRobustnessFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sheyqcy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WsjhkKG=json({});
    
        if (name.pNext==NULL){
            return_WsjhkKG["null"]=true;
            return return_WsjhkKG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_dNCJJcN=json({});
    return_dNCJJcN=[&]() {
    json return_tZuaJWr=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_dNCJJcN;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeatures deserialize_VkPhysicalDeviceImageRobustnessFeatures(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(VkPhysicalDeviceImageRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BGxzmdu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XcTvDkw=json({});
    
        if (name.pNext==NULL){
            return_XcTvDkw["null"]=true;
            return return_XcTvDkw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_ekVKjNC=json({});
    return_ekVKjNC=[&]() {
    json return_wInWtIg=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_ekVKjNC;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeaturesEXT deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SqFluZI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kwLoWPE=json({});
    
        if (name.pNext==NULL){
            return_kwLoWPE["null"]=true;
            return return_kwLoWPE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["workgroupMemoryExplicitLayout"]=[&]() {
    json return_taGtjBa=json({});
    return_taGtjBa=[&]() {
    json return_JYyYCth=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout);}();return return_taGtjBa;}();
result["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]=[&]() {
    json return_sTmEjvq=json({});
    return_sTmEjvq=[&]() {
    json return_DazvuBd=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayoutScalarBlockLayout);}();return return_sTmEjvq;}();
result["members"]["workgroupMemoryExplicitLayout8BitAccess"]=[&]() {
    json return_PphmcdV=json({});
    return_PphmcdV=[&]() {
    json return_gWWzMWM=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout8BitAccess);}();return return_PphmcdV;}();
result["members"]["workgroupMemoryExplicitLayout16BitAccess"]=[&]() {
    json return_viZXTfL=json({});
    return_viZXTfL=[&]() {
    json return_vadHPbN=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout16BitAccess);}();return return_viZXTfL;}();
return result;}

    VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayoutScalarBlockLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout8BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout8BitAccess"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout16BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout16BitAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDevice4444FormatsFeaturesEXT(VkPhysicalDevice4444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DehChjh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LoUqUay=json({});
    
        if (name.pNext==NULL){
            return_LoUqUay["null"]=true;
            return return_LoUqUay;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatA4R4G4B4"]=[&]() {
    json return_LahdoDq=json({});
    return_LahdoDq=[&]() {
    json return_duzljdF=json({});
    return serialize_uint32_t(name.formatA4R4G4B4);}();return return_LahdoDq;}();
result["members"]["formatA4B4G4R4"]=[&]() {
    json return_vJcyKOq=json({});
    return_vJcyKOq=[&]() {
    json return_aPLBQfG=json({});
    return serialize_uint32_t(name.formatA4B4G4R4);}();return return_vJcyKOq;}();
return result;}

    VkPhysicalDevice4444FormatsFeaturesEXT deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDevice4444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatA4R4G4B4=deserialize_uint32_t(name["members"]["formatA4R4G4B4"]);}();}();
[&]() {
[&]() {
result.formatA4B4G4R4=deserialize_uint32_t(name["members"]["formatA4B4G4R4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oWIKMuV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bkbCkEC=json({});
    
        if (name.pNext==NULL){
            return_bkbCkEC["null"]=true;
            return return_bkbCkEC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassShading"]=[&]() {
    json return_FLqrokG=json({});
    return_FLqrokG=[&]() {
    json return_swIRwxQ=json({});
    return serialize_uint32_t(name.subpassShading);}();return return_FLqrokG;}();
return result;}

    VkPhysicalDeviceSubpassShadingFeaturesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassShading=deserialize_uint32_t(name["members"]["subpassShading"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dZSwsui=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dwVvsUD=json({});
    
        if (name.pNext==NULL){
            return_dwVvsUD["null"]=true;
            return return_dwVvsUD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["clustercullingShader"]=[&]() {
    json return_riEZvoD=json({});
    return_riEZvoD=[&]() {
    json return_KBOaXsI=json({});
    return serialize_uint32_t(name.clustercullingShader);}();return return_riEZvoD;}();
result["members"]["multiviewClusterCullingShader"]=[&]() {
    json return_pponTyE=json({});
    return_pponTyE=[&]() {
    json return_wPrSctW=json({});
    return serialize_uint32_t(name.multiviewClusterCullingShader);}();return return_pponTyE;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.clustercullingShader=deserialize_uint32_t(name["members"]["clustercullingShader"]);}();}();
[&]() {
[&]() {
result.multiviewClusterCullingShader=deserialize_uint32_t(name["members"]["multiviewClusterCullingShader"]);}();}();
return result;}

    json serialize_VkBufferCopy2(VkBufferCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vNDuFxw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OEJdLjo=json({});
    
        if (name.pNext==NULL){
            return_OEJdLjo["null"]=true;
            return return_OEJdLjo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_NZVAxZp=json({});
    return_NZVAxZp=[&]() {
    json return_MzvxnoZ=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_NZVAxZp;}();
result["members"]["dstOffset"]=[&]() {
    json return_NUwEFOK=json({});
    return_NUwEFOK=[&]() {
    json return_XqLVoOL=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_NUwEFOK;}();
result["members"]["size"]=[&]() {
    json return_qFJtgKM=json({});
    return_qFJtgKM=[&]() {
    json return_wJJRQgy=json({});
    return serialize_uint64_t(name.size);}();return return_qFJtgKM;}();
return result;}

    VkBufferCopy2 deserialize_VkBufferCopy2(json name){
        auto result=VkBufferCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EyzXFIT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EyzXFIT=NULL;
        }
    temp_EyzXFIT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EyzXFIT;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferCopy2KHR(VkBufferCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rCasmZS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_omiPvME=json({});
    
        if (name.pNext==NULL){
            return_omiPvME["null"]=true;
            return return_omiPvME;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_BdNiBjE=json({});
    return_BdNiBjE=[&]() {
    json return_cUQvhAh=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_BdNiBjE;}();
result["members"]["dstOffset"]=[&]() {
    json return_EnpFOHO=json({});
    return_EnpFOHO=[&]() {
    json return_CblnoiW=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_EnpFOHO;}();
result["members"]["size"]=[&]() {
    json return_zQKHjmG=json({});
    return_zQKHjmG=[&]() {
    json return_BpAyCjU=json({});
    return serialize_uint64_t(name.size);}();return return_zQKHjmG;}();
return result;}

    VkBufferCopy2KHR deserialize_VkBufferCopy2KHR(json name){
        auto result=VkBufferCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EhXoBiP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EhXoBiP=NULL;
        }
    temp_EhXoBiP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EhXoBiP;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageCopy2(VkImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CXNuxAl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hgYpfPA=json({});
    
        if (name.pNext==NULL){
            return_hgYpfPA["null"]=true;
            return return_hgYpfPA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_vSEwWgb=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_zaZVEUP=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_CWDWXqE=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_ZLlfYky=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_LnJLPdP=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2 deserialize_VkImageCopy2(json name){
        auto result=VkImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dMDDtkK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dMDDtkK=NULL;
        }
    temp_dMDDtkK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dMDDtkK;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageCopy2KHR(VkImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UUYDGbg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_suWgjwK=json({});
    
        if (name.pNext==NULL){
            return_suWgjwK["null"]=true;
            return return_suWgjwK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_IqKIzhh=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_JmRGJwS=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_doKNxjZ=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_RzDTSnD=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_jTLsgPv=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2KHR deserialize_VkImageCopy2KHR(json name){
        auto result=VkImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sxOQOJA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sxOQOJA=NULL;
        }
    temp_sxOQOJA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sxOQOJA;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit2(VkImageBlit2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ONYDTZi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EpHTWLf=json({});
    
        if (name.pNext==NULL){
            return_EpHTWLf["null"]=true;
            return return_EpHTWLf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_DHCwWeC=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_FkcpKhv=json({});
    
        return_FkcpKhv["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_EKtOqXA=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_FkcpKhv["members"][std::to_string(i)].push_back(temp);
        }
        return return_FkcpKhv;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_QQCfHdI=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_VPHZjSV=json({});
    
        return_VPHZjSV["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_nGmWaEZ=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_VPHZjSV["members"][std::to_string(i)].push_back(temp);
        }
        return return_VPHZjSV;
        }();
return result;}

    VkImageBlit2 deserialize_VkImageBlit2(json name){
        auto result=VkImageBlit2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CRwBGAF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CRwBGAF=NULL;
        }
    temp_CRwBGAF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CRwBGAF;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int PpJkvKO=0; PpJkvKO < 2; PpJkvKO++){
            [&]() {
result.srcOffsets[PpJkvKO]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][PpJkvKO]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int txPpxWA=0; txPpxWA < 2; txPpxWA++){
            [&]() {
result.dstOffsets[txPpxWA]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][txPpxWA]);}();;
        }
        }();
return result;}

    json serialize_VkImageBlit2KHR(VkImageBlit2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MZciPdJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SCHArKt=json({});
    
        if (name.pNext==NULL){
            return_SCHArKt["null"]=true;
            return return_SCHArKt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_ztiupjb=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_WjXIGRp=json({});
    
        return_WjXIGRp["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_JMzZqyx=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_WjXIGRp["members"][std::to_string(i)].push_back(temp);
        }
        return return_WjXIGRp;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_owjzdNZ=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_HmiCxtf=json({});
    
        return_HmiCxtf["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_IVPBmfX=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_HmiCxtf["members"][std::to_string(i)].push_back(temp);
        }
        return return_HmiCxtf;
        }();
return result;}

    VkImageBlit2KHR deserialize_VkImageBlit2KHR(json name){
        auto result=VkImageBlit2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HFWzivK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HFWzivK=NULL;
        }
    temp_HFWzivK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HFWzivK;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int WOuHuex=0; WOuHuex < 2; WOuHuex++){
            [&]() {
result.srcOffsets[WOuHuex]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][WOuHuex]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int WSExgZh=0; WSExgZh < 2; WSExgZh++){
            [&]() {
result.dstOffsets[WSExgZh]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][WSExgZh]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy2(VkBufferImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rQamAfC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ecHUIzw=json({});
    
        if (name.pNext==NULL){
            return_ecHUIzw["null"]=true;
            return return_ecHUIzw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_zwThqjH=json({});
    return_zwThqjH=[&]() {
    json return_AuqfeqS=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_zwThqjH;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_gzaBAWI=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_mpdrFWE=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_vGpFnmc=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_iPyxfvg=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_BswrfWa=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2 deserialize_VkBufferImageCopy2(json name){
        auto result=VkBufferImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yEfmLnc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yEfmLnc=NULL;
        }
    temp_yEfmLnc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yEfmLnc;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkBufferImageCopy2KHR(VkBufferImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KTraPdk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WftANOC=json({});
    
        if (name.pNext==NULL){
            return_WftANOC["null"]=true;
            return return_WftANOC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_bVrDsNZ=json({});
    return_bVrDsNZ=[&]() {
    json return_fTjVJrT=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_bVrDsNZ;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_qctbBTg=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_wSCQSsZ=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_Xkmaitr=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_pRJVcMd=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_UzTDUDy=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2KHR deserialize_VkBufferImageCopy2KHR(json name){
        auto result=VkBufferImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uZCcSPW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uZCcSPW=NULL;
        }
    temp_uZCcSPW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uZCcSPW;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve2(VkImageResolve2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_whjVyBw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VXlJzzM=json({});
    
        if (name.pNext==NULL){
            return_VXlJzzM["null"]=true;
            return return_VXlJzzM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_MNAchuM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_PwQtLTd=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_sKJtkPM=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_HQNtSuz=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_yMSbVYB=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2 deserialize_VkImageResolve2(json name){
        auto result=VkImageResolve2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NLFKlQE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NLFKlQE=NULL;
        }
    temp_NLFKlQE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NLFKlQE;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageResolve2KHR(VkImageResolve2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zkZSfaC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZjRabUY=json({});
    
        if (name.pNext==NULL){
            return_ZjRabUY["null"]=true;
            return return_ZjRabUY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_zXvvyFY=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_JeOBoZI=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_bDVMAbw=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_QRnrKRk=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_oCZKuTR=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2KHR deserialize_VkImageResolve2KHR(json name){
        auto result=VkImageResolve2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rgwukUs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rgwukUs=NULL;
        }
    temp_rgwukUs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rgwukUs;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkCopyBufferInfo2(VkCopyBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xTDaKtI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yZRISyq=json({});
    
        if (name.pNext==NULL){
            return_yZRISyq["null"]=true;
            return return_yZRISyq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_ImokDjF=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_zPkGsmM=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_ObgGQPO=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_kdlyHgK=json({});
    
        if (name.pRegions==NULL){
            return_kdlyHgK["null"]=true;
            return return_kdlyHgK;
        }
        
        return_kdlyHgK["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_GgyUHNe=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_kdlyHgK["members"][std::to_string(i)].push_back(temp);
        }
        return return_kdlyHgK;
        }();
return result;}

    VkCopyBufferInfo2 deserialize_VkCopyBufferInfo2(json name){
        auto result=VkCopyBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rfYmpOA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rfYmpOA=NULL;
        }
    temp_rfYmpOA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rfYmpOA;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_eMCTypF;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_eMCTypF=NULL;
        }
    temp_eMCTypF=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int ghBLtVS=0; ghBLtVS < result.regionCount; ghBLtVS++){
            [&]() {
temp_eMCTypF[ghBLtVS]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][ghBLtVS]);}();;
        }
        }();result.pRegions=temp_eMCTypF;}();
return result;}

    json serialize_VkCopyBufferInfo2KHR(VkCopyBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SdQZyGA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OnoEVjm=json({});
    
        if (name.pNext==NULL){
            return_OnoEVjm["null"]=true;
            return return_OnoEVjm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_KBXuPRg=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_IxzHERE=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_AZEMetU=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_IQIesPi=json({});
    
        if (name.pRegions==NULL){
            return_IQIesPi["null"]=true;
            return return_IQIesPi;
        }
        
        return_IQIesPi["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_vUVVXYe=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_IQIesPi["members"][std::to_string(i)].push_back(temp);
        }
        return return_IQIesPi;
        }();
return result;}

    VkCopyBufferInfo2KHR deserialize_VkCopyBufferInfo2KHR(json name){
        auto result=VkCopyBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KyumFAb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KyumFAb=NULL;
        }
    temp_KyumFAb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KyumFAb;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_kOKDmQi;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_kOKDmQi=NULL;
        }
    temp_kOKDmQi=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int IUyUgKL=0; IUyUgKL < result.regionCount; IUyUgKL++){
            [&]() {
temp_kOKDmQi[IUyUgKL]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][IUyUgKL]);}();;
        }
        }();result.pRegions=temp_kOKDmQi;}();
return result;}

    json serialize_VkCopyImageInfo2(VkCopyImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ymCZWvl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yaurWLA=json({});
    
        if (name.pNext==NULL){
            return_yaurWLA["null"]=true;
            return return_yaurWLA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_JVCUpsc=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_wTRlVos=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_lrtXrfa=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_ZQesZzg=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_vxtSkzv=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_RsQYfHx=json({});
    
        if (name.pRegions==NULL){
            return_RsQYfHx["null"]=true;
            return return_RsQYfHx;
        }
        
        return_RsQYfHx["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_ERyMCns=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_RsQYfHx["members"][std::to_string(i)].push_back(temp);
        }
        return return_RsQYfHx;
        }();
return result;}

    VkCopyImageInfo2 deserialize_VkCopyImageInfo2(json name){
        auto result=VkCopyImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OxRWUYg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OxRWUYg=NULL;
        }
    temp_OxRWUYg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OxRWUYg;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_QYmYOHB;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_QYmYOHB=NULL;
        }
    temp_QYmYOHB=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int OSVxaDJ=0; OSVxaDJ < result.regionCount; OSVxaDJ++){
            [&]() {
temp_QYmYOHB[OSVxaDJ]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][OSVxaDJ]);}();;
        }
        }();result.pRegions=temp_QYmYOHB;}();
return result;}

    json serialize_VkCopyImageInfo2KHR(VkCopyImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pixbCos=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tHbimKH=json({});
    
        if (name.pNext==NULL){
            return_tHbimKH["null"]=true;
            return return_tHbimKH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_hWGRVnV=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_TZesWto=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_odsWGui=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_BGwtNvG=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ublhFhS=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_WzjYNrY=json({});
    
        if (name.pRegions==NULL){
            return_WzjYNrY["null"]=true;
            return return_WzjYNrY;
        }
        
        return_WzjYNrY["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_sPgRtVm=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_WzjYNrY["members"][std::to_string(i)].push_back(temp);
        }
        return return_WzjYNrY;
        }();
return result;}

    VkCopyImageInfo2KHR deserialize_VkCopyImageInfo2KHR(json name){
        auto result=VkCopyImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jyIRcBm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jyIRcBm=NULL;
        }
    temp_jyIRcBm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jyIRcBm;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_WlrwZYB;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_WlrwZYB=NULL;
        }
    temp_WlrwZYB=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int OSPfRjz=0; OSPfRjz < result.regionCount; OSPfRjz++){
            [&]() {
temp_WlrwZYB[OSPfRjz]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][OSPfRjz]);}();;
        }
        }();result.pRegions=temp_WlrwZYB;}();
return result;}

    json serialize_VkBlitImageInfo2(VkBlitImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BvoFERg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QiUjbFn=json({});
    
        if (name.pNext==NULL){
            return_QiUjbFn["null"]=true;
            return return_QiUjbFn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_naeuNTP=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_bSCoUPQ=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_gFExdFg=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_wlxKzGt=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_QYLkkOJ=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_EzKzMRa=json({});
    
        if (name.pRegions==NULL){
            return_EzKzMRa["null"]=true;
            return return_EzKzMRa;
        }
        
        return_EzKzMRa["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_tSjGUnu=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_EzKzMRa["members"][std::to_string(i)].push_back(temp);
        }
        return return_EzKzMRa;
        }();
result["members"]["filter"]=[&]() {
    json return_dQbMLIr=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2 deserialize_VkBlitImageInfo2(json name){
        auto result=VkBlitImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ljtGBcT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ljtGBcT=NULL;
        }
    temp_ljtGBcT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ljtGBcT;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_LXSRdxh;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_LXSRdxh=NULL;
        }
    temp_LXSRdxh=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int OAJMEZN=0; OAJMEZN < result.regionCount; OAJMEZN++){
            [&]() {
temp_LXSRdxh[OAJMEZN]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][OAJMEZN]);}();;
        }
        }();result.pRegions=temp_LXSRdxh;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkBlitImageInfo2KHR(VkBlitImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vieQDyU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZKaXhae=json({});
    
        if (name.pNext==NULL){
            return_ZKaXhae["null"]=true;
            return return_ZKaXhae;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_JLNkwQz=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_yNkMmQD=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_yThTTkl=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_MKqRCbR=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_LXTwNBt=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_poSvHue=json({});
    
        if (name.pRegions==NULL){
            return_poSvHue["null"]=true;
            return return_poSvHue;
        }
        
        return_poSvHue["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_OQFOfMS=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_poSvHue["members"][std::to_string(i)].push_back(temp);
        }
        return return_poSvHue;
        }();
result["members"]["filter"]=[&]() {
    json return_mxdNyMW=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2KHR deserialize_VkBlitImageInfo2KHR(json name){
        auto result=VkBlitImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gUYbFZj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gUYbFZj=NULL;
        }
    temp_gUYbFZj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gUYbFZj;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_MPxAWYn;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_MPxAWYn=NULL;
        }
    temp_MPxAWYn=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int jqzdMiU=0; jqzdMiU < result.regionCount; jqzdMiU++){
            [&]() {
temp_MPxAWYn[jqzdMiU]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][jqzdMiU]);}();;
        }
        }();result.pRegions=temp_MPxAWYn;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkCopyBufferToImageInfo2(VkCopyBufferToImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NRjEdXE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MCrdgzD=json({});
    
        if (name.pNext==NULL){
            return_MCrdgzD["null"]=true;
            return return_MCrdgzD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_fyNbYIo=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_qnTMUzR=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_PyPDSFu=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_Nticxwj=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_YKcoyMq=json({});
    
        if (name.pRegions==NULL){
            return_YKcoyMq["null"]=true;
            return return_YKcoyMq;
        }
        
        return_YKcoyMq["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_sioeASd=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_YKcoyMq["members"][std::to_string(i)].push_back(temp);
        }
        return return_YKcoyMq;
        }();
return result;}

    VkCopyBufferToImageInfo2 deserialize_VkCopyBufferToImageInfo2(json name){
        auto result=VkCopyBufferToImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rbhwawX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rbhwawX=NULL;
        }
    temp_rbhwawX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rbhwawX;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_ctLjZqT;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_ctLjZqT=NULL;
        }
    temp_ctLjZqT=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int FtGSoxK=0; FtGSoxK < result.regionCount; FtGSoxK++){
            [&]() {
temp_ctLjZqT[FtGSoxK]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][FtGSoxK]);}();;
        }
        }();result.pRegions=temp_ctLjZqT;}();
return result;}

    json serialize_VkCopyBufferToImageInfo2KHR(VkCopyBufferToImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UGxBHhA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OpYOksh=json({});
    
        if (name.pNext==NULL){
            return_OpYOksh["null"]=true;
            return return_OpYOksh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_gcYHabQ=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_mparULZ=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_PfSNZaE=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_gCQolQe=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_niVwuRB=json({});
    
        if (name.pRegions==NULL){
            return_niVwuRB["null"]=true;
            return return_niVwuRB;
        }
        
        return_niVwuRB["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_elXaLaY=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_niVwuRB["members"][std::to_string(i)].push_back(temp);
        }
        return return_niVwuRB;
        }();
return result;}

    VkCopyBufferToImageInfo2KHR deserialize_VkCopyBufferToImageInfo2KHR(json name){
        auto result=VkCopyBufferToImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eSdukTu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eSdukTu=NULL;
        }
    temp_eSdukTu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eSdukTu;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_bUtbdmj;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_bUtbdmj=NULL;
        }
    temp_bUtbdmj=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int CcXLzXR=0; CcXLzXR < result.regionCount; CcXLzXR++){
            [&]() {
temp_bUtbdmj[CcXLzXR]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][CcXLzXR]);}();;
        }
        }();result.pRegions=temp_bUtbdmj;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2(VkCopyImageToBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yZZacjD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RQbmRAV=json({});
    
        if (name.pNext==NULL){
            return_RQbmRAV["null"]=true;
            return return_RQbmRAV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_NUEpRbL=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_MtzTKmD=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_GlgSGsQ=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_sDaJcNi=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_MKKwBAb=json({});
    
        if (name.pRegions==NULL){
            return_MKKwBAb["null"]=true;
            return return_MKKwBAb;
        }
        
        return_MKKwBAb["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_zANhonJ=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_MKKwBAb["members"][std::to_string(i)].push_back(temp);
        }
        return return_MKKwBAb;
        }();
return result;}

    VkCopyImageToBufferInfo2 deserialize_VkCopyImageToBufferInfo2(json name){
        auto result=VkCopyImageToBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FcZAglf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FcZAglf=NULL;
        }
    temp_FcZAglf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FcZAglf;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_PQRKMYz;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_PQRKMYz=NULL;
        }
    temp_PQRKMYz=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int gAAGCVU=0; gAAGCVU < result.regionCount; gAAGCVU++){
            [&]() {
temp_PQRKMYz[gAAGCVU]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][gAAGCVU]);}();;
        }
        }();result.pRegions=temp_PQRKMYz;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2KHR(VkCopyImageToBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eoVsASN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xxtwJjl=json({});
    
        if (name.pNext==NULL){
            return_xxtwJjl["null"]=true;
            return return_xxtwJjl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_cFPdYZv=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_mfYIztx=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_EkQxhbA=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_bQASOnT=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_RivawXt=json({});
    
        if (name.pRegions==NULL){
            return_RivawXt["null"]=true;
            return return_RivawXt;
        }
        
        return_RivawXt["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_jAEBsOJ=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_RivawXt["members"][std::to_string(i)].push_back(temp);
        }
        return return_RivawXt;
        }();
return result;}

    VkCopyImageToBufferInfo2KHR deserialize_VkCopyImageToBufferInfo2KHR(json name){
        auto result=VkCopyImageToBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NFmdjad;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NFmdjad=NULL;
        }
    temp_NFmdjad=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NFmdjad;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_rrCjavz;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_rrCjavz=NULL;
        }
    temp_rrCjavz=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int OasoKla=0; OasoKla < result.regionCount; OasoKla++){
            [&]() {
temp_rrCjavz[OasoKla]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][OasoKla]);}();;
        }
        }();result.pRegions=temp_rrCjavz;}();
return result;}

    json serialize_VkResolveImageInfo2(VkResolveImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GzsAxvL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dGarOIS=json({});
    
        if (name.pNext==NULL){
            return_dGarOIS["null"]=true;
            return return_dGarOIS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_TeCMMIl=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_DkkUCkE=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_NNixDoh=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_lTBaYkn=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_AhPhKUX=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_RWDwFzz=json({});
    
        if (name.pRegions==NULL){
            return_RWDwFzz["null"]=true;
            return return_RWDwFzz;
        }
        
        return_RWDwFzz["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_LyqZctH=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_RWDwFzz["members"][std::to_string(i)].push_back(temp);
        }
        return return_RWDwFzz;
        }();
return result;}

    VkResolveImageInfo2 deserialize_VkResolveImageInfo2(json name){
        auto result=VkResolveImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MaRnKHx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MaRnKHx=NULL;
        }
    temp_MaRnKHx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MaRnKHx;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_SKTjPFq;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_SKTjPFq=NULL;
        }
    temp_SKTjPFq=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int BGanXaJ=0; BGanXaJ < result.regionCount; BGanXaJ++){
            [&]() {
temp_SKTjPFq[BGanXaJ]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][BGanXaJ]);}();;
        }
        }();result.pRegions=temp_SKTjPFq;}();
return result;}

    json serialize_VkResolveImageInfo2KHR(VkResolveImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_afMhHqi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SZJvipF=json({});
    
        if (name.pNext==NULL){
            return_SZJvipF["null"]=true;
            return return_SZJvipF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_fVLLWyV=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_xTqmLDo=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_RSNULxo=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_AccGAVF=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_jLgwnyK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_BiabsBr=json({});
    
        if (name.pRegions==NULL){
            return_BiabsBr["null"]=true;
            return return_BiabsBr;
        }
        
        return_BiabsBr["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_cKXuUir=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_BiabsBr["members"][std::to_string(i)].push_back(temp);
        }
        return return_BiabsBr;
        }();
return result;}

    VkResolveImageInfo2KHR deserialize_VkResolveImageInfo2KHR(json name){
        auto result=VkResolveImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hcTdkJE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hcTdkJE=NULL;
        }
    temp_hcTdkJE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hcTdkJE;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_fdVFhKm;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_fdVFhKm=NULL;
        }
    temp_fdVFhKm=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int MsjdIut=0; MsjdIut < result.regionCount; MsjdIut++){
            [&]() {
temp_fdVFhKm[MsjdIut]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][MsjdIut]);}();;
        }
        }();result.pRegions=temp_fdVFhKm;}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TnwRdwW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MnsmzKO=json({});
    
        if (name.pNext==NULL){
            return_MnsmzKO["null"]=true;
            return return_MnsmzKO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderImageInt64Atomics"]=[&]() {
    json return_hPHNWxb=json({});
    return_hPHNWxb=[&]() {
    json return_wvvAjvh=json({});
    return serialize_uint32_t(name.shaderImageInt64Atomics);}();return return_hPHNWxb;}();
result["members"]["sparseImageInt64Atomics"]=[&]() {
    json return_HpcmDem=json({});
    return_HpcmDem=[&]() {
    json return_mePXBJJ=json({});
    return serialize_uint32_t(name.sparseImageInt64Atomics);}();return return_HpcmDem;}();
return result;}

    VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderImageInt64Atomics=deserialize_uint32_t(name["members"]["shaderImageInt64Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageInt64Atomics=deserialize_uint32_t(name["members"]["sparseImageInt64Atomics"]);}();}();
return result;}

    json serialize_VkFragmentShadingRateAttachmentInfoKHR(VkFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bgVcRRI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eIPFiXd=json({});
    
        if (name.pNext==NULL){
            return_eIPFiXd["null"]=true;
            return return_eIPFiXd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pFragmentShadingRateAttachment"]=[&]() {
    json return_ZQyAvhv=json({});
    
        if (name.pFragmentShadingRateAttachment==NULL){
            return_ZQyAvhv["null"]=true;
            return return_ZQyAvhv;
        }
        return_ZQyAvhv=[&]() {
    json return_sUSFEdp=json({});
    return serialize_VkAttachmentReference2(*name.pFragmentShadingRateAttachment);}();
return return_ZQyAvhv;}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_CKZexXX=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkFragmentShadingRateAttachmentInfoKHR deserialize_VkFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IYkCgwc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IYkCgwc=NULL;
        }
    temp_IYkCgwc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IYkCgwc;}();
[&]() {
VkAttachmentReference2* temp_sTeABIs;[&]() {

        if (name["members"]["pFragmentShadingRateAttachment"].contains("null")){
        temp_sTeABIs=NULL;
        }
    [&]() {
*(temp_sTeABIs)=deserialize_VkAttachmentReference2(name["members"]["pFragmentShadingRateAttachment"]);}();
}();result.pFragmentShadingRateAttachment=temp_sTeABIs;}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(VkPipelineFragmentShadingRateStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_htYMYXA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NTddNwx=json({});
    
        if (name.pNext==NULL){
            return_NTddNwx["null"]=true;
            return return_NTddNwx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentSize"]=[&]() {
    json return_FWbUVbY=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
result["members"]["combinerOps"]=[&]() {
    json return_KZzMIPI=json({});
    
        return_KZzMIPI["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_onSYrLy=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_KZzMIPI["members"][std::to_string(i)].push_back(temp);
        }
        return return_KZzMIPI;
        }();
return result;}

    VkPipelineFragmentShadingRateStateCreateInfoKHR deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(json name){
        auto result=VkPipelineFragmentShadingRateStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_njxooCa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_njxooCa=NULL;
        }
    temp_njxooCa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_njxooCa;}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
[&]() {

        for (int XNonlkj=0; XNonlkj < 2; XNonlkj++){
            [&]() {
result.combinerOps[XNonlkj]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][XNonlkj]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(VkPhysicalDeviceFragmentShadingRateFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qjPvYJz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AdwxJlB=json({});
    
        if (name.pNext==NULL){
            return_AdwxJlB["null"]=true;
            return return_AdwxJlB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineFragmentShadingRate"]=[&]() {
    json return_jFbBJok=json({});
    return_jFbBJok=[&]() {
    json return_JtrEETB=json({});
    return serialize_uint32_t(name.pipelineFragmentShadingRate);}();return return_jFbBJok;}();
result["members"]["primitiveFragmentShadingRate"]=[&]() {
    json return_CUIJcho=json({});
    return_CUIJcho=[&]() {
    json return_YOLKbsM=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRate);}();return return_CUIJcho;}();
result["members"]["attachmentFragmentShadingRate"]=[&]() {
    json return_CTyFITs=json({});
    return_CTyFITs=[&]() {
    json return_deHJErG=json({});
    return serialize_uint32_t(name.attachmentFragmentShadingRate);}();return return_CTyFITs;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateFeaturesKHR deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineFragmentShadingRate=deserialize_uint32_t(name["members"]["pipelineFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRate=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.attachmentFragmentShadingRate=deserialize_uint32_t(name["members"]["attachmentFragmentShadingRate"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(VkPhysicalDeviceFragmentShadingRatePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uiUJgRN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UdfcqTg=json({});
    
        if (name.pNext==NULL){
            return_UdfcqTg["null"]=true;
            return return_UdfcqTg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_CqRWcxg=json({});
    return serialize_VkExtent2D(name.minFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_fITSttO=json({});
    return serialize_VkExtent2D(name.maxFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]=[&]() {
    json return_SBwvsJd=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateAttachmentTexelSizeAspectRatio);}();
result["members"]["primitiveFragmentShadingRateWithMultipleViewports"]=[&]() {
    json return_KRvzgPE=json({});
    return_KRvzgPE=[&]() {
    json return_qQOjJqQ=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateWithMultipleViewports);}();return return_KRvzgPE;}();
result["members"]["layeredShadingRateAttachments"]=[&]() {
    json return_RRACthn=json({});
    return_RRACthn=[&]() {
    json return_DtXbuqw=json({});
    return serialize_uint32_t(name.layeredShadingRateAttachments);}();return return_RRACthn;}();
result["members"]["fragmentShadingRateNonTrivialCombinerOps"]=[&]() {
    json return_wCXNuZZ=json({});
    return_wCXNuZZ=[&]() {
    json return_GLezsiv=json({});
    return serialize_uint32_t(name.fragmentShadingRateNonTrivialCombinerOps);}();return return_wCXNuZZ;}();
result["members"]["maxFragmentSize"]=[&]() {
    json return_PZGODaI=json({});
    return serialize_VkExtent2D(name.maxFragmentSize);}();
result["members"]["maxFragmentSizeAspectRatio"]=[&]() {
    json return_kkMFWcK=json({});
    return serialize_uint32_t(name.maxFragmentSizeAspectRatio);}();
result["members"]["maxFragmentShadingRateCoverageSamples"]=[&]() {
    json return_BCSmreM=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateCoverageSamples);}();
result["members"]["maxFragmentShadingRateRasterizationSamples"]=[&]() {
    json return_GdfiETs=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateRasterizationSamples);}();
result["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]=[&]() {
    json return_aDOVFte=json({});
    return_aDOVFte=[&]() {
    json return_lndeFIN=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderDepthStencilWrites);}();return return_aDOVFte;}();
result["members"]["fragmentShadingRateWithSampleMask"]=[&]() {
    json return_tKlgyXt=json({});
    return_tKlgyXt=[&]() {
    json return_xvtlkMq=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithSampleMask);}();return return_tKlgyXt;}();
result["members"]["fragmentShadingRateWithShaderSampleMask"]=[&]() {
    json return_lSIQhil=json({});
    return_lSIQhil=[&]() {
    json return_ExdQgUR=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderSampleMask);}();return return_lSIQhil;}();
result["members"]["fragmentShadingRateWithConservativeRasterization"]=[&]() {
    json return_krOVHpk=json({});
    return_krOVHpk=[&]() {
    json return_TssVXir=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithConservativeRasterization);}();return return_krOVHpk;}();
result["members"]["fragmentShadingRateWithFragmentShaderInterlock"]=[&]() {
    json return_fgJZgay=json({});
    return_fgJZgay=[&]() {
    json return_GRiJbDw=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithFragmentShaderInterlock);}();return return_fgJZgay;}();
result["members"]["fragmentShadingRateWithCustomSampleLocations"]=[&]() {
    json return_tGUsnEE=json({});
    return_tGUsnEE=[&]() {
    json return_IeUdEnt=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithCustomSampleLocations);}();return return_tGUsnEE;}();
result["members"]["fragmentShadingRateStrictMultiplyCombiner"]=[&]() {
    json return_XtPEFdT=json({});
    return_XtPEFdT=[&]() {
    json return_ZBMDLbb=json({});
    return serialize_uint32_t(name.fragmentShadingRateStrictMultiplyCombiner);}();return return_XtPEFdT;}();
return result;}

    VkPhysicalDeviceFragmentShadingRatePropertiesKHR deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRatePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]);}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateWithMultipleViewports=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateWithMultipleViewports"]);}();}();
[&]() {
[&]() {
result.layeredShadingRateAttachments=deserialize_uint32_t(name["members"]["layeredShadingRateAttachments"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateNonTrivialCombinerOps=deserialize_uint32_t(name["members"]["fragmentShadingRateNonTrivialCombinerOps"]);}();}();
[&]() {
result.maxFragmentSize=deserialize_VkExtent2D(name["members"]["maxFragmentSize"]);}();
[&]() {
result.maxFragmentSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentSizeAspectRatio"]);}();
[&]() {
result.maxFragmentShadingRateCoverageSamples=deserialize_uint32_t(name["members"]["maxFragmentShadingRateCoverageSamples"]);}();
[&]() {
result.maxFragmentShadingRateRasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateRasterizationSamples"]);}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderDepthStencilWrites=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithConservativeRasterization=deserialize_uint32_t(name["members"]["fragmentShadingRateWithConservativeRasterization"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithFragmentShaderInterlock=deserialize_uint32_t(name["members"]["fragmentShadingRateWithFragmentShaderInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithCustomSampleLocations=deserialize_uint32_t(name["members"]["fragmentShadingRateWithCustomSampleLocations"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateStrictMultiplyCombiner=deserialize_uint32_t(name["members"]["fragmentShadingRateStrictMultiplyCombiner"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateKHR(VkPhysicalDeviceFragmentShadingRateKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OLEeMkD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DWgHLRh=json({});
    
        if (name.pNext==NULL){
            return_DWgHLRh["null"]=true;
            return return_DWgHLRh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleCounts"]=[&]() {
    json return_CvFUcqW=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["fragmentSize"]=[&]() {
    json return_UXyceoj=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateKHR deserialize_VkPhysicalDeviceFragmentShadingRateKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(VkPhysicalDeviceShaderTerminateInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_geceFNq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FQmQCmU=json({});
    
        if (name.pNext==NULL){
            return_FQmQCmU["null"]=true;
            return return_FQmQCmU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_lYHbrmz=json({});
    return_lYHbrmz=[&]() {
    json return_ZZjmQQq=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_lYHbrmz;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeatures deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iLTJLXo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oePBkBt=json({});
    
        if (name.pNext==NULL){
            return_oePBkBt["null"]=true;
            return return_oePBkBt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_RHkIvrp=json({});
    return_RHkIvrp=[&]() {
    json return_LOHWhsu=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_RHkIvrp;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TdeAYml=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vhJWXfr=json({});
    
        if (name.pNext==NULL){
            return_vhJWXfr["null"]=true;
            return return_vhJWXfr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShadingRateEnums"]=[&]() {
    json return_iTPLOXP=json({});
    return_iTPLOXP=[&]() {
    json return_WgUZwcn=json({});
    return serialize_uint32_t(name.fragmentShadingRateEnums);}();return return_iTPLOXP;}();
result["members"]["supersampleFragmentShadingRates"]=[&]() {
    json return_miesfEz=json({});
    return_miesfEz=[&]() {
    json return_WDwuTRC=json({});
    return serialize_uint32_t(name.supersampleFragmentShadingRates);}();return return_miesfEz;}();
result["members"]["noInvocationFragmentShadingRates"]=[&]() {
    json return_grwkVtK=json({});
    return_grwkVtK=[&]() {
    json return_vJMeUci=json({});
    return serialize_uint32_t(name.noInvocationFragmentShadingRates);}();return return_grwkVtK;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShadingRateEnums=deserialize_uint32_t(name["members"]["fragmentShadingRateEnums"]);}();}();
[&]() {
[&]() {
result.supersampleFragmentShadingRates=deserialize_uint32_t(name["members"]["supersampleFragmentShadingRates"]);}();}();
[&]() {
[&]() {
result.noInvocationFragmentShadingRates=deserialize_uint32_t(name["members"]["noInvocationFragmentShadingRates"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QOlXkrm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oecsUZy=json({});
    
        if (name.pNext==NULL){
            return_oecsUZy["null"]=true;
            return return_oecsUZy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxFragmentShadingRateInvocationCount"]=[&]() {
    json return_uKGXnpW=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateInvocationCount);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxFragmentShadingRateInvocationCount=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateInvocationCount"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkPipelineFragmentShadingRateEnumStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RsEQSMA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QvQakrb=json({});
    
        if (name.pNext==NULL){
            return_QvQakrb["null"]=true;
            return return_QvQakrb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateType"]=[&]() {
    json return_SyqekkN=json({});
    return serialize_VkFragmentShadingRateTypeNV(name.shadingRateType);}();
result["members"]["shadingRate"]=[&]() {
    json return_FJILsxA=json({});
    return serialize_VkFragmentShadingRateNV(name.shadingRate);}();
result["members"]["combinerOps"]=[&]() {
    json return_EORAxhA=json({});
    
        return_EORAxhA["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_jmRUCah=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_EORAxhA["members"][std::to_string(i)].push_back(temp);
        }
        return return_EORAxhA;
        }();
return result;}

    VkPipelineFragmentShadingRateEnumStateCreateInfoNV deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(json name){
        auto result=VkPipelineFragmentShadingRateEnumStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_erTsKBT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_erTsKBT=NULL;
        }
    temp_erTsKBT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_erTsKBT;}();
[&]() {
result.shadingRateType=deserialize_VkFragmentShadingRateTypeNV(name["members"]["shadingRateType"]);}();
[&]() {
result.shadingRate=deserialize_VkFragmentShadingRateNV(name["members"]["shadingRate"]);}();
[&]() {

        for (int oIKYfXj=0; oIKYfXj < 2; oIKYfXj++){
            [&]() {
result.combinerOps[oIKYfXj]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][oIKYfXj]);}();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureBuildSizesInfoKHR(VkAccelerationStructureBuildSizesInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eWvtuEX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XZDYdLv=json({});
    
        if (name.pNext==NULL){
            return_XZDYdLv["null"]=true;
            return return_XZDYdLv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureSize"]=[&]() {
    json return_TIcNwSo=json({});
    return_TIcNwSo=[&]() {
    json return_mNFZrzo=json({});
    return serialize_uint64_t(name.accelerationStructureSize);}();return return_TIcNwSo;}();
result["members"]["updateScratchSize"]=[&]() {
    json return_cHKwWNm=json({});
    return_cHKwWNm=[&]() {
    json return_omjXrYn=json({});
    return serialize_uint64_t(name.updateScratchSize);}();return return_cHKwWNm;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_czbUnTD=json({});
    return_czbUnTD=[&]() {
    json return_JbdKIjn=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_czbUnTD;}();
return result;}

    VkAccelerationStructureBuildSizesInfoKHR deserialize_VkAccelerationStructureBuildSizesInfoKHR(json name){
        auto result=VkAccelerationStructureBuildSizesInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ddudCqh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ddudCqh=NULL;
        }
    temp_ddudCqh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ddudCqh;}();
[&]() {
[&]() {
result.accelerationStructureSize=deserialize_uint64_t(name["members"]["accelerationStructureSize"]);}();}();
[&]() {
[&]() {
result.updateScratchSize=deserialize_uint64_t(name["members"]["updateScratchSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qtHkURr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BVLlwFM=json({});
    
        if (name.pNext==NULL){
            return_BVLlwFM["null"]=true;
            return return_BVLlwFM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image2DViewOf3D"]=[&]() {
    json return_MRzkVZQ=json({});
    return_MRzkVZQ=[&]() {
    json return_eybfcTy=json({});
    return serialize_uint32_t(name.image2DViewOf3D);}();return return_MRzkVZQ;}();
result["members"]["sampler2DViewOf3D"]=[&]() {
    json return_KTlWRNZ=json({});
    return_KTlWRNZ=[&]() {
    json return_cfvctwB=json({});
    return serialize_uint32_t(name.sampler2DViewOf3D);}();return return_KTlWRNZ;}();
return result;}

    VkPhysicalDeviceImage2DViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImage2DViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.image2DViewOf3D=deserialize_uint32_t(name["members"]["image2DViewOf3D"]);}();}();
[&]() {
[&]() {
result.sampler2DViewOf3D=deserialize_uint32_t(name["members"]["sampler2DViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bdrLkcU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oLeObyw=json({});
    
        if (name.pNext==NULL){
            return_oLeObyw["null"]=true;
            return return_oLeObyw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSlicedViewOf3D"]=[&]() {
    json return_SKlBDsy=json({});
    return_SKlBDsy=[&]() {
    json return_YmSZfzy=json({});
    return serialize_uint32_t(name.imageSlicedViewOf3D);}();return return_SKlBDsy;}();
return result;}

    VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageSlicedViewOf3D=deserialize_uint32_t(name["members"]["imageSlicedViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_umrtqVL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ivXfxrV=json({});
    
        if (name.pNext==NULL){
            return_ivXfxrV["null"]=true;
            return return_ivXfxrV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopDynamicState"]=[&]() {
    json return_gqrRALz=json({});
    return_gqrRALz=[&]() {
    json return_mPRUWjz=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopDynamicState);}();return return_gqrRALz;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopDynamicState=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sJhNwfV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UJHsupX=json({});
    
        if (name.pNext==NULL){
            return_UJHsupX["null"]=true;
            return return_UJHsupX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_FWtooom=json({});
    return_FWtooom=[&]() {
    json return_buspHSS=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_FWtooom;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eCEWEpS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bfJeSmU=json({});
    
        if (name.pNext==NULL){
            return_bfJeSmU["null"]=true;
            return return_bfJeSmU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_PfmcuEz=json({});
    return_PfmcuEz=[&]() {
    json return_IPOhmof=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_PfmcuEz;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkMutableDescriptorTypeListEXT(VkMutableDescriptorTypeListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_nFINYkQ=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_VKzyyFd=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_VKzyyFd["null"]=true;
            return return_VKzyyFd;
        }
        
        return_VKzyyFd["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_QsIeXnM=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_VKzyyFd["members"][std::to_string(i)].push_back(temp);
        }
        return return_VKzyyFd;
        }();
return result;}

    VkMutableDescriptorTypeListEXT deserialize_VkMutableDescriptorTypeListEXT(json name){
        auto result=VkMutableDescriptorTypeListEXT();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_uuCEtmL;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_uuCEtmL=NULL;
        }
    temp_uuCEtmL=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int aRWCJAC=0; aRWCJAC < result.descriptorTypeCount; aRWCJAC++){
            [&]() {
temp_uuCEtmL[aRWCJAC]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][aRWCJAC]);}();;
        }
        }();result.pDescriptorTypes=temp_uuCEtmL;}();
return result;}

    json serialize_VkMutableDescriptorTypeListVALVE(VkMutableDescriptorTypeListVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_QTmVNiZ=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_ljgCDSE=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_ljgCDSE["null"]=true;
            return return_ljgCDSE;
        }
        
        return_ljgCDSE["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_qBdyPtu=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_ljgCDSE["members"][std::to_string(i)].push_back(temp);
        }
        return return_ljgCDSE;
        }();
return result;}

    VkMutableDescriptorTypeListVALVE deserialize_VkMutableDescriptorTypeListVALVE(json name){
        auto result=VkMutableDescriptorTypeListVALVE();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_mbpFsIr;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_mbpFsIr=NULL;
        }
    temp_mbpFsIr=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int eKmeviw=0; eKmeviw < result.descriptorTypeCount; eKmeviw++){
            [&]() {
temp_mbpFsIr[eKmeviw]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][eKmeviw]);}();;
        }
        }();result.pDescriptorTypes=temp_mbpFsIr;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoEXT(VkMutableDescriptorTypeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pglECwI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xulIBKY=json({});
    
        if (name.pNext==NULL){
            return_xulIBKY["null"]=true;
            return return_xulIBKY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_dTkXxXU=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_XFntMlF=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_XFntMlF["null"]=true;
            return return_XFntMlF;
        }
        
        return_XFntMlF["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_zpImjNv=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_XFntMlF["members"][std::to_string(i)].push_back(temp);
        }
        return return_XFntMlF;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoEXT deserialize_VkMutableDescriptorTypeCreateInfoEXT(json name){
        auto result=VkMutableDescriptorTypeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eZLwFnj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eZLwFnj=NULL;
        }
    temp_eZLwFnj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eZLwFnj;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_xEzZGzE;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_xEzZGzE=NULL;
        }
    temp_xEzZGzE=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int gmZWTeB=0; gmZWTeB < result.mutableDescriptorTypeListCount; gmZWTeB++){
            [&]() {
temp_xEzZGzE[gmZWTeB]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][gmZWTeB]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_xEzZGzE;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoVALVE(VkMutableDescriptorTypeCreateInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nYoVghK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mdVronv=json({});
    
        if (name.pNext==NULL){
            return_mdVronv["null"]=true;
            return return_mdVronv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_fGbUBdA=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_cvFwhmG=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_cvFwhmG["null"]=true;
            return return_cvFwhmG;
        }
        
        return_cvFwhmG["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_VuxlRYE=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_cvFwhmG["members"][std::to_string(i)].push_back(temp);
        }
        return return_cvFwhmG;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoVALVE deserialize_VkMutableDescriptorTypeCreateInfoVALVE(json name){
        auto result=VkMutableDescriptorTypeCreateInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qlBnwIt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qlBnwIt=NULL;
        }
    temp_qlBnwIt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qlBnwIt;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_RSmsInz;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_RSmsInz=NULL;
        }
    temp_RSmsInz=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int zRxtuav=0; zRxtuav < result.mutableDescriptorTypeListCount; zRxtuav++){
            [&]() {
temp_RSmsInz[zRxtuav]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][zRxtuav]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_RSmsInz;}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(VkPhysicalDeviceDepthClipControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZFnKXan=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mlcpAvW=json({});
    
        if (name.pNext==NULL){
            return_mlcpAvW["null"]=true;
            return return_mlcpAvW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipControl"]=[&]() {
    json return_pwMJOnd=json({});
    return_pwMJOnd=[&]() {
    json return_lvpURsi=json({});
    return serialize_uint32_t(name.depthClipControl);}();return return_pwMJOnd;}();
return result;}

    VkPhysicalDeviceDepthClipControlFeaturesEXT deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipControl=deserialize_uint32_t(name["members"]["depthClipControl"]);}();}();
return result;}

    json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(VkPipelineViewportDepthClipControlCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LnOwvxN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iBDFCWX=json({});
    
        if (name.pNext==NULL){
            return_iBDFCWX["null"]=true;
            return return_iBDFCWX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["negativeOneToOne"]=[&]() {
    json return_WJejtcI=json({});
    return_WJejtcI=[&]() {
    json return_HxPKQOg=json({});
    return serialize_uint32_t(name.negativeOneToOne);}();return return_WJejtcI;}();
return result;}

    VkPipelineViewportDepthClipControlCreateInfoEXT deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(json name){
        auto result=VkPipelineViewportDepthClipControlCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EZYzonF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EZYzonF=NULL;
        }
    temp_EZYzonF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EZYzonF;}();
[&]() {
[&]() {
result.negativeOneToOne=deserialize_uint32_t(name["members"]["negativeOneToOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PKUFckc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YIcqMVX=json({});
    
        if (name.pNext==NULL){
            return_YIcqMVX["null"]=true;
            return return_YIcqMVX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexInputDynamicState"]=[&]() {
    json return_qrDNZYX=json({});
    return_qrDNZYX=[&]() {
    json return_vZDWrOT=json({});
    return serialize_uint32_t(name.vertexInputDynamicState);}();return return_qrDNZYX;}();
return result;}

    VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexInputDynamicState=deserialize_uint32_t(name["members"]["vertexInputDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Sfzemuy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XytNCXz=json({});
    
        if (name.pNext==NULL){
            return_XytNCXz["null"]=true;
            return return_XytNCXz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryRDMA"]=[&]() {
    json return_KMlghUA=json({});
    return_KMlghUA=[&]() {
    json return_JIFiiqR=json({});
    return serialize_uint32_t(name.externalMemoryRDMA);}();return return_KMlghUA;}();
return result;}

    VkPhysicalDeviceExternalMemoryRDMAFeaturesNV deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(json name){
        auto result=VkPhysicalDeviceExternalMemoryRDMAFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.externalMemoryRDMA=deserialize_uint32_t(name["members"]["externalMemoryRDMA"]);}();}();
return result;}

    json serialize_VkVertexInputBindingDescription2EXT(VkVertexInputBindingDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sduTSux=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wsnCqTK=json({});
    
        if (name.pNext==NULL){
            return_wsnCqTK["null"]=true;
            return return_wsnCqTK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["binding"]=[&]() {
    json return_oHvnrvo=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_clcAhIK=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_ViBvpjb=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
result["members"]["divisor"]=[&]() {
    json return_xpCnfPU=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDescription2EXT deserialize_VkVertexInputBindingDescription2EXT(json name){
        auto result=VkVertexInputBindingDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription2EXT(VkVertexInputAttributeDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_avgHiVu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EePhQQx=json({});
    
        if (name.pNext==NULL){
            return_EePhQQx["null"]=true;
            return return_EePhQQx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["location"]=[&]() {
    json return_tCdKDEk=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_bHVggen=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_bQiJzvK=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_fSNQwNf=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription2EXT deserialize_VkVertexInputAttributeDescription2EXT(json name){
        auto result=VkVertexInputAttributeDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(VkPhysicalDeviceColorWriteEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zKbaOrm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gHHSPUO=json({});
    
        if (name.pNext==NULL){
            return_gHHSPUO["null"]=true;
            return return_gHHSPUO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorWriteEnable"]=[&]() {
    json return_fTuLqAN=json({});
    return_fTuLqAN=[&]() {
    json return_wYTkrpS=json({});
    return serialize_uint32_t(name.colorWriteEnable);}();return return_fTuLqAN;}();
return result;}

    VkPhysicalDeviceColorWriteEnableFeaturesEXT deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceColorWriteEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.colorWriteEnable=deserialize_uint32_t(name["members"]["colorWriteEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorWriteCreateInfoEXT(VkPipelineColorWriteCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CpAeyqf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JdrzYCf=json({});
    
        if (name.pNext==NULL){
            return_JdrzYCf["null"]=true;
            return return_JdrzYCf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_UfBIxKZ=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pColorWriteEnables"]=[&]() {
    json return_aXUTnMh=json({});
    
        if (name.pColorWriteEnables==NULL){
            return_aXUTnMh["null"]=true;
            return return_aXUTnMh;
        }
        
        return_aXUTnMh["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_uwhhHQc=json({});
    return_uwhhHQc=[&]() {
    json return_CirkGHD=json({});
    return serialize_uint32_t(name.pColorWriteEnables[i]);}();return return_uwhhHQc;}();
            return_aXUTnMh["members"][std::to_string(i)].push_back(temp);
        }
        return return_aXUTnMh;
        }();
return result;}

    VkPipelineColorWriteCreateInfoEXT deserialize_VkPipelineColorWriteCreateInfoEXT(json name){
        auto result=VkPipelineColorWriteCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vGKWJOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vGKWJOg=NULL;
        }
    temp_vGKWJOg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vGKWJOg;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkBool32* temp_cbBMPcy;[&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_cbBMPcy=NULL;
        }
    temp_cbBMPcy=(VkBool32*)malloc(result.attachmentCount*sizeof(VkBool32));
        for (int xtVEmyP=0; xtVEmyP < result.attachmentCount; xtVEmyP++){
            [&]() {
[&]() {
temp_cbBMPcy[xtVEmyP]=deserialize_uint32_t(name["members"]["pColorWriteEnables"]["members"][xtVEmyP]);}();}();;
        }
        }();result.pColorWriteEnables=temp_cbBMPcy;}();
return result;}

    json serialize_VkMemoryBarrier2(VkMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mdGuvJu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uRVOzCv=json({});
    
        if (name.pNext==NULL){
            return_uRVOzCv["null"]=true;
            return return_uRVOzCv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_njhLWvB=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_RDbfclj=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_rEQlAUQ=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_XjgCRRK=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2 deserialize_VkMemoryBarrier2(json name){
        auto result=VkMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KpFwPjh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KpFwPjh=NULL;
        }
    temp_KpFwPjh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KpFwPjh;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkMemoryBarrier2KHR(VkMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iXeicyw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wGqKIkp=json({});
    
        if (name.pNext==NULL){
            return_wGqKIkp["null"]=true;
            return return_wGqKIkp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_JzqPpxE=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_lDiMMFc=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_BcRRMpE=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_OFnrXGd=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2KHR deserialize_VkMemoryBarrier2KHR(json name){
        auto result=VkMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DuaJAEb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DuaJAEb=NULL;
        }
    temp_DuaJAEb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DuaJAEb;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2(VkImageMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hpENOEv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bpVUsJv=json({});
    
        if (name.pNext==NULL){
            return_bpVUsJv["null"]=true;
            return return_bpVUsJv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_EGkSAgc=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_NbRKFWD=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_gnGNDBD=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_NpiGRxO=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_hXZVRDi=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_reOzfcc=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_ZrKxZjm=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_sbykwbv=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_aPvlDXn=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_BQjGwTX=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2 deserialize_VkImageMemoryBarrier2(json name){
        auto result=VkImageMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dsHBkLG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dsHBkLG=NULL;
        }
    temp_dsHBkLG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dsHBkLG;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2KHR(VkImageMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KymiBTb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_McdVyXj=json({});
    
        if (name.pNext==NULL){
            return_McdVyXj["null"]=true;
            return return_McdVyXj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_ZdotSPy=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_mISPpDE=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_YSNAWAH=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_sEdRTVy=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_SHOpHur=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_lvokdlo=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_rHKWgWJ=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_yPbFhVx=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_HHkTxVO=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_FxvLqHO=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2KHR deserialize_VkImageMemoryBarrier2KHR(json name){
        auto result=VkImageMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ukQfGgU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ukQfGgU=NULL;
        }
    temp_ukQfGgU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ukQfGgU;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier2(VkBufferMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GgprQQO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_egygdPI=json({});
    
        if (name.pNext==NULL){
            return_egygdPI["null"]=true;
            return return_egygdPI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_zUrDwLt=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_tQQvuuf=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_IpmENyo=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_mrEHBOv=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_PrDnFvC=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_NbbaJDW=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_nxbDZlm=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_TpykMmK=json({});
    return_TpykMmK=[&]() {
    json return_wyBdQrM=json({});
    return serialize_uint64_t(name.offset);}();return return_TpykMmK;}();
result["members"]["size"]=[&]() {
    json return_tdRfwCI=json({});
    return_tdRfwCI=[&]() {
    json return_hglgHQD=json({});
    return serialize_uint64_t(name.size);}();return return_tdRfwCI;}();
return result;}

    VkBufferMemoryBarrier2 deserialize_VkBufferMemoryBarrier2(json name){
        auto result=VkBufferMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QooyebC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QooyebC=NULL;
        }
    temp_QooyebC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QooyebC;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferMemoryBarrier2KHR(VkBufferMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BvQjLNh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kVJjpAT=json({});
    
        if (name.pNext==NULL){
            return_kVJjpAT["null"]=true;
            return return_kVJjpAT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_VAZzzRI=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_xUbGcqM=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_zKcQuTU=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_IOHUlRj=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_GWpanor=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_WwmDkwj=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_ONHshng=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_XmmpTFf=json({});
    return_XmmpTFf=[&]() {
    json return_FYRPtor=json({});
    return serialize_uint64_t(name.offset);}();return return_XmmpTFf;}();
result["members"]["size"]=[&]() {
    json return_mKXhhVU=json({});
    return_mKXhhVU=[&]() {
    json return_ytVYcXR=json({});
    return serialize_uint64_t(name.size);}();return return_mKXhhVU;}();
return result;}

    VkBufferMemoryBarrier2KHR deserialize_VkBufferMemoryBarrier2KHR(json name){
        auto result=VkBufferMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_crymXdz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_crymXdz=NULL;
        }
    temp_crymXdz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_crymXdz;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkDependencyInfo(VkDependencyInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IGhlhyM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gjzqBDJ=json({});
    
        if (name.pNext==NULL){
            return_gjzqBDJ["null"]=true;
            return return_gjzqBDJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_hPwQWBa=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_JrWRdvy=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_bmrubWP=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_bmrubWP["null"]=true;
            return return_bmrubWP;
        }
        
        return_bmrubWP["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_CIGXaxq=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_bmrubWP["members"][std::to_string(i)].push_back(temp);
        }
        return return_bmrubWP;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_mvGDYtp=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_fabxGTU=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_fabxGTU["null"]=true;
            return return_fabxGTU;
        }
        
        return_fabxGTU["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_KClesvt=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_fabxGTU["members"][std::to_string(i)].push_back(temp);
        }
        return return_fabxGTU;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_xCQkNJF=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_lCXCMNE=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_lCXCMNE["null"]=true;
            return return_lCXCMNE;
        }
        
        return_lCXCMNE["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_NRAyrZx=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_lCXCMNE["members"][std::to_string(i)].push_back(temp);
        }
        return return_lCXCMNE;
        }();
return result;}

    VkDependencyInfo deserialize_VkDependencyInfo(json name){
        auto result=VkDependencyInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FAbXxwu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FAbXxwu=NULL;
        }
    temp_FAbXxwu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FAbXxwu;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_udpQeaK;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_udpQeaK=NULL;
        }
    temp_udpQeaK=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int ZrCZAZf=0; ZrCZAZf < result.memoryBarrierCount; ZrCZAZf++){
            [&]() {
temp_udpQeaK[ZrCZAZf]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][ZrCZAZf]);}();;
        }
        }();result.pMemoryBarriers=temp_udpQeaK;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_cnCssQm;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_cnCssQm=NULL;
        }
    temp_cnCssQm=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int lcGriXi=0; lcGriXi < result.bufferMemoryBarrierCount; lcGriXi++){
            [&]() {
temp_cnCssQm[lcGriXi]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][lcGriXi]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_cnCssQm;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_cCnfrFE;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_cCnfrFE=NULL;
        }
    temp_cCnfrFE=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int XsgMiAw=0; XsgMiAw < result.imageMemoryBarrierCount; XsgMiAw++){
            [&]() {
temp_cCnfrFE[XsgMiAw]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][XsgMiAw]);}();;
        }
        }();result.pImageMemoryBarriers=temp_cCnfrFE;}();
return result;}

    json serialize_VkDependencyInfoKHR(VkDependencyInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gmJBZGT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UywhRkv=json({});
    
        if (name.pNext==NULL){
            return_UywhRkv["null"]=true;
            return return_UywhRkv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_ZKhjsBB=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_HQYRhaG=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_QJRSVBk=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_QJRSVBk["null"]=true;
            return return_QJRSVBk;
        }
        
        return_QJRSVBk["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_BHOmvDg=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_QJRSVBk["members"][std::to_string(i)].push_back(temp);
        }
        return return_QJRSVBk;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_ZnsDUnS=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_GvNFgDR=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_GvNFgDR["null"]=true;
            return return_GvNFgDR;
        }
        
        return_GvNFgDR["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_QaGgazh=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_GvNFgDR["members"][std::to_string(i)].push_back(temp);
        }
        return return_GvNFgDR;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_xhgmvqq=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_WIBCtlR=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_WIBCtlR["null"]=true;
            return return_WIBCtlR;
        }
        
        return_WIBCtlR["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_OwAVILH=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_WIBCtlR["members"][std::to_string(i)].push_back(temp);
        }
        return return_WIBCtlR;
        }();
return result;}

    VkDependencyInfoKHR deserialize_VkDependencyInfoKHR(json name){
        auto result=VkDependencyInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPgXrPy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPgXrPy=NULL;
        }
    temp_HPgXrPy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HPgXrPy;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_ESmaSqp;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_ESmaSqp=NULL;
        }
    temp_ESmaSqp=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int QRSVpLF=0; QRSVpLF < result.memoryBarrierCount; QRSVpLF++){
            [&]() {
temp_ESmaSqp[QRSVpLF]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][QRSVpLF]);}();;
        }
        }();result.pMemoryBarriers=temp_ESmaSqp;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_AIPNIQj;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_AIPNIQj=NULL;
        }
    temp_AIPNIQj=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int hYGSoPW=0; hYGSoPW < result.bufferMemoryBarrierCount; hYGSoPW++){
            [&]() {
temp_AIPNIQj[hYGSoPW]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][hYGSoPW]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_AIPNIQj;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_codmugK;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_codmugK=NULL;
        }
    temp_codmugK=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int AnDZvfj=0; AnDZvfj < result.imageMemoryBarrierCount; AnDZvfj++){
            [&]() {
temp_codmugK[AnDZvfj]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][AnDZvfj]);}();;
        }
        }();result.pImageMemoryBarriers=temp_codmugK;}();
return result;}

    json serialize_VkSemaphoreSubmitInfo(VkSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LySNGPr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aTplfmd=json({});
    
        if (name.pNext==NULL){
            return_aTplfmd["null"]=true;
            return return_aTplfmd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_PVCABWo=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_FcNLQEa=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_CjzqpVl=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_OWodkUy=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfo deserialize_VkSemaphoreSubmitInfo(json name){
        auto result=VkSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FowMaPk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FowMaPk=NULL;
        }
    temp_FowMaPk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FowMaPk;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkSemaphoreSubmitInfoKHR(VkSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MTHMVQS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JBUHwbr=json({});
    
        if (name.pNext==NULL){
            return_JBUHwbr["null"]=true;
            return return_JBUHwbr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_mRkmKpV=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_RUycSwU=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_nucuXVz=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_NuInCVh=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfoKHR deserialize_VkSemaphoreSubmitInfoKHR(json name){
        auto result=VkSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zUNwhDi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zUNwhDi=NULL;
        }
    temp_zUNwhDi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zUNwhDi;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfo(VkCommandBufferSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rFHtyLA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpFPZIY=json({});
    
        if (name.pNext==NULL){
            return_vpFPZIY["null"]=true;
            return return_vpFPZIY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_wdhzzrE=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_WmUjYdG=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfo deserialize_VkCommandBufferSubmitInfo(json name){
        auto result=VkCommandBufferSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cGXCDxw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cGXCDxw=NULL;
        }
    temp_cGXCDxw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cGXCDxw;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfoKHR(VkCommandBufferSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WdSrXUS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VRMWxEV=json({});
    
        if (name.pNext==NULL){
            return_VRMWxEV["null"]=true;
            return return_VRMWxEV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_yxgDSKF=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_fMSIxec=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfoKHR deserialize_VkCommandBufferSubmitInfoKHR(json name){
        auto result=VkCommandBufferSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lHZktwZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lHZktwZ=NULL;
        }
    temp_lHZktwZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lHZktwZ;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkSubmitInfo2(VkSubmitInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mjMmswF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FtfJjab=json({});
    
        if (name.pNext==NULL){
            return_FtfJjab["null"]=true;
            return return_FtfJjab;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AYGAHAR=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_eIIGGOk=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_fhKFeQA=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_fhKFeQA["null"]=true;
            return return_fhKFeQA;
        }
        
        return_fhKFeQA["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_iTngUwY=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_fhKFeQA["members"][std::to_string(i)].push_back(temp);
        }
        return return_fhKFeQA;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_bQYlgOM=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_ENcNgjf=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_ENcNgjf["null"]=true;
            return return_ENcNgjf;
        }
        
        return_ENcNgjf["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_cGdDqfG=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_ENcNgjf["members"][std::to_string(i)].push_back(temp);
        }
        return return_ENcNgjf;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_xCnguoJ=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_klNEBGR=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_klNEBGR["null"]=true;
            return return_klNEBGR;
        }
        
        return_klNEBGR["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_geVBMlm=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_klNEBGR["members"][std::to_string(i)].push_back(temp);
        }
        return return_klNEBGR;
        }();
return result;}

    VkSubmitInfo2 deserialize_VkSubmitInfo2(json name){
        auto result=VkSubmitInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UXThMSP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UXThMSP=NULL;
        }
    temp_UXThMSP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UXThMSP;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_AeHgxZd;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_AeHgxZd=NULL;
        }
    temp_AeHgxZd=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int qDLlyVk=0; qDLlyVk < result.waitSemaphoreInfoCount; qDLlyVk++){
            [&]() {
temp_AeHgxZd[qDLlyVk]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][qDLlyVk]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_AeHgxZd;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_jDInyNw;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_jDInyNw=NULL;
        }
    temp_jDInyNw=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int jJfvDGW=0; jJfvDGW < result.commandBufferInfoCount; jJfvDGW++){
            [&]() {
temp_jDInyNw[jJfvDGW]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][jJfvDGW]);}();;
        }
        }();result.pCommandBufferInfos=temp_jDInyNw;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_YolPXwC;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_YolPXwC=NULL;
        }
    temp_YolPXwC=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int xNjQPQR=0; xNjQPQR < result.signalSemaphoreInfoCount; xNjQPQR++){
            [&]() {
temp_YolPXwC[xNjQPQR]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][xNjQPQR]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_YolPXwC;}();
return result;}

    json serialize_VkSubmitInfo2KHR(VkSubmitInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xKhwVua=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OJbvzKL=json({});
    
        if (name.pNext==NULL){
            return_OJbvzKL["null"]=true;
            return return_OJbvzKL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dNXRBlH=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_QfTkhGA=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_StgTwIr=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_StgTwIr["null"]=true;
            return return_StgTwIr;
        }
        
        return_StgTwIr["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_FSjKFVI=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_StgTwIr["members"][std::to_string(i)].push_back(temp);
        }
        return return_StgTwIr;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_fEKqqzg=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_rFVNeiw=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_rFVNeiw["null"]=true;
            return return_rFVNeiw;
        }
        
        return_rFVNeiw["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_dXrhZgy=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_rFVNeiw["members"][std::to_string(i)].push_back(temp);
        }
        return return_rFVNeiw;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_OtVzjuP=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_vtdBMSI=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_vtdBMSI["null"]=true;
            return return_vtdBMSI;
        }
        
        return_vtdBMSI["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_uckIqDT=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_vtdBMSI["members"][std::to_string(i)].push_back(temp);
        }
        return return_vtdBMSI;
        }();
return result;}

    VkSubmitInfo2KHR deserialize_VkSubmitInfo2KHR(json name){
        auto result=VkSubmitInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZXIpeWv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZXIpeWv=NULL;
        }
    temp_ZXIpeWv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZXIpeWv;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_FqHSWgu;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_FqHSWgu=NULL;
        }
    temp_FqHSWgu=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int zbYjrWU=0; zbYjrWU < result.waitSemaphoreInfoCount; zbYjrWU++){
            [&]() {
temp_FqHSWgu[zbYjrWU]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][zbYjrWU]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_FqHSWgu;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_YLgNWjs;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_YLgNWjs=NULL;
        }
    temp_YLgNWjs=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int HEtMlok=0; HEtMlok < result.commandBufferInfoCount; HEtMlok++){
            [&]() {
temp_YLgNWjs[HEtMlok]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][HEtMlok]);}();;
        }
        }();result.pCommandBufferInfos=temp_YLgNWjs;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_kvMvycX;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_kvMvycX=NULL;
        }
    temp_kvMvycX=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int FCzKxna=0; FCzKxna < result.signalSemaphoreInfoCount; FCzKxna++){
            [&]() {
temp_kvMvycX[FCzKxna]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][FCzKxna]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_kvMvycX;}();
return result;}

    json serialize_VkQueueFamilyCheckpointProperties2NV(VkQueueFamilyCheckpointProperties2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_weuUmDd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TvmgnOf=json({});
    
        if (name.pNext==NULL){
            return_TvmgnOf["null"]=true;
            return return_TvmgnOf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_JmrKfOn=json({});
    return serialize_VkPipelineStageFlags2(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointProperties2NV deserialize_VkQueueFamilyCheckpointProperties2NV(json name){
        auto result=VkQueueFamilyCheckpointProperties2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags2(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointData2NV(VkCheckpointData2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Kybvcnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wUpedFq=json({});
    
        if (name.pNext==NULL){
            return_wUpedFq["null"]=true;
            return return_wUpedFq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_sZGulkA=json({});
    return serialize_VkPipelineStageFlags2(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_YpezEKA=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_YpezEKA["null"]=true;
            return return_YpezEKA;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointData2NV deserialize_VkCheckpointData2NV(json name){
        auto result=VkCheckpointData2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlags2(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2Features(VkPhysicalDeviceSynchronization2Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dmCrocR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JKZEBQR=json({});
    
        if (name.pNext==NULL){
            return_JKZEBQR["null"]=true;
            return return_JKZEBQR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_reNHiih=json({});
    return_reNHiih=[&]() {
    json return_cjOyfft=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_reNHiih;}();
return result;}

    VkPhysicalDeviceSynchronization2Features deserialize_VkPhysicalDeviceSynchronization2Features(json name){
        auto result=VkPhysicalDeviceSynchronization2Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(VkPhysicalDeviceSynchronization2FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_REtzTWF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hhceIaX=json({});
    
        if (name.pNext==NULL){
            return_hhceIaX["null"]=true;
            return return_hhceIaX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_xJNclJu=json({});
    return_xJNclJu=[&]() {
    json return_lbJWWPC=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_xJNclJu;}();
return result;}

    VkPhysicalDeviceSynchronization2FeaturesKHR deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(json name){
        auto result=VkPhysicalDeviceSynchronization2FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(VkPhysicalDeviceHostImageCopyFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eGkYOuY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kqABWxx=json({});
    
        if (name.pNext==NULL){
            return_kqABWxx["null"]=true;
            return return_kqABWxx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostImageCopy"]=[&]() {
    json return_UVGyzWP=json({});
    return_UVGyzWP=[&]() {
    json return_rsDPbhZ=json({});
    return serialize_uint32_t(name.hostImageCopy);}();return return_UVGyzWP;}();
return result;}

    VkPhysicalDeviceHostImageCopyFeaturesEXT deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostImageCopy=deserialize_uint32_t(name["members"]["hostImageCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(VkPhysicalDeviceHostImageCopyPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aOgZqLH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NlaFQqM=json({});
    
        if (name.pNext==NULL){
            return_NlaFQqM["null"]=true;
            return return_NlaFQqM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["copySrcLayoutCount"]=[&]() {
    json return_qUrpAkp=json({});
    return serialize_uint32_t(name.copySrcLayoutCount);}();
result["members"]["pCopySrcLayouts"]=[&]() {
    json return_HkthlSI=json({});
    
        if (name.pCopySrcLayouts==NULL){
            return_HkthlSI["null"]=true;
            return return_HkthlSI;
        }
        
        return_HkthlSI["members"]={};
        for(int i=0; i < name.copySrcLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_IfLQUFI=json({});
    return serialize_VkImageLayout(name.pCopySrcLayouts[i]);}();
            return_HkthlSI["members"][std::to_string(i)].push_back(temp);
        }
        return return_HkthlSI;
        }();
result["members"]["copyDstLayoutCount"]=[&]() {
    json return_kOzOGHs=json({});
    return serialize_uint32_t(name.copyDstLayoutCount);}();
result["members"]["pCopyDstLayouts"]=[&]() {
    json return_eqWlWjJ=json({});
    
        if (name.pCopyDstLayouts==NULL){
            return_eqWlWjJ["null"]=true;
            return return_eqWlWjJ;
        }
        
        return_eqWlWjJ["members"]={};
        for(int i=0; i < name.copyDstLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_axkRQld=json({});
    return serialize_VkImageLayout(name.pCopyDstLayouts[i]);}();
            return_eqWlWjJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_eqWlWjJ;
        }();
result["members"]["optimalTilingLayoutUUID"]=[&]() {
    json return_HBxFiZl=json({});
    
        return_HBxFiZl["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_VzXrPrz=json({});
    return serialize_uint8_t(name.optimalTilingLayoutUUID[i]);}();
            return_HBxFiZl["members"][std::to_string(i)].push_back(temp);
        }
        return return_HBxFiZl;
        }();
result["members"]["identicalMemoryTypeRequirements"]=[&]() {
    json return_LQNWdAF=json({});
    return_LQNWdAF=[&]() {
    json return_jBTasJy=json({});
    return serialize_uint32_t(name.identicalMemoryTypeRequirements);}();return return_LQNWdAF;}();
return result;}

    VkPhysicalDeviceHostImageCopyPropertiesEXT deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.copySrcLayoutCount=deserialize_uint32_t(name["members"]["copySrcLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopySrcLayouts"].contains("null")){
        result.pCopySrcLayouts=NULL;
        }
    result.pCopySrcLayouts=(VkImageLayout*)malloc(result.copySrcLayoutCount*sizeof(VkImageLayout));
        for (int QWCRzbN=0; QWCRzbN < result.copySrcLayoutCount; QWCRzbN++){
            [&]() {
result.pCopySrcLayouts[QWCRzbN]=deserialize_VkImageLayout(name["members"]["pCopySrcLayouts"]["members"][QWCRzbN]);}();;
        }
        }();
[&]() {
result.copyDstLayoutCount=deserialize_uint32_t(name["members"]["copyDstLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopyDstLayouts"].contains("null")){
        result.pCopyDstLayouts=NULL;
        }
    result.pCopyDstLayouts=(VkImageLayout*)malloc(result.copyDstLayoutCount*sizeof(VkImageLayout));
        for (int iLrVrig=0; iLrVrig < result.copyDstLayoutCount; iLrVrig++){
            [&]() {
result.pCopyDstLayouts[iLrVrig]=deserialize_VkImageLayout(name["members"]["pCopyDstLayouts"]["members"][iLrVrig]);}();;
        }
        }();
[&]() {

        for (int TokjImd=0; TokjImd < VK_UUID_SIZE; TokjImd++){
            [&]() {
result.optimalTilingLayoutUUID[TokjImd]=deserialize_uint8_t(name["members"]["optimalTilingLayoutUUID"]["members"][TokjImd]);}();;
        }
        }();
[&]() {
[&]() {
result.identicalMemoryTypeRequirements=deserialize_uint32_t(name["members"]["identicalMemoryTypeRequirements"]);}();}();
return result;}

    json serialize_VkMemoryToImageCopyEXT(VkMemoryToImageCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LjVoyhz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AtmCBuX=json({});
    
        if (name.pNext==NULL){
            return_AtmCBuX["null"]=true;
            return return_AtmCBuX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_CHXlRjD=json({});
    
        if (name.pHostPointer==NULL){
            return_CHXlRjD["null"]=true;
            return return_CHXlRjD;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_ItzqEqW=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_pkiTSEq=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_STYXrRe=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_RUfHHzw=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_bFJYFBD=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkMemoryToImageCopyEXT deserialize_VkMemoryToImageCopyEXT(json name){
        auto result=VkMemoryToImageCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Ecrpkfm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Ecrpkfm=NULL;
        }
    temp_Ecrpkfm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Ecrpkfm;}();
[&]() {
void* temp_UqGAVCo;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_UqGAVCo=NULL;
        }
    temp_UqGAVCo=deserialize_void_p(name["members"]["pHostPointer"]);
}();result.pHostPointer=temp_UqGAVCo;}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageToMemoryCopyEXT(VkImageToMemoryCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BbJSbmL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DqlVsss=json({});
    
        if (name.pNext==NULL){
            return_DqlVsss["null"]=true;
            return return_DqlVsss;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_XGpFopP=json({});
    
        if (name.pHostPointer==NULL){
            return_XGpFopP["null"]=true;
            return return_XGpFopP;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_xfpRPyE=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_pCPYqhr=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_xyvqgGi=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_oFckpaz=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_kdXWXCP=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkImageToMemoryCopyEXT deserialize_VkImageToMemoryCopyEXT(json name){
        auto result=VkImageToMemoryCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qmDaVRe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qmDaVRe=NULL;
        }
    temp_qmDaVRe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qmDaVRe;}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryToImageInfoEXT(VkCopyMemoryToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XCVNeMu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uDsfVtv=json({});
    
        if (name.pNext==NULL){
            return_uDsfVtv["null"]=true;
            return return_uDsfVtv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_QPWicWO=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["dstImage"]=[&]() {
    json return_uXamwvT=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_wwFfnxY=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_VKtfQvM=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_OPJcReK=json({});
    
        if (name.pRegions==NULL){
            return_OPJcReK["null"]=true;
            return return_OPJcReK;
        }
        
        return_OPJcReK["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_kChWecC=json({});
    return serialize_VkMemoryToImageCopyEXT(name.pRegions[i]);}();
            return_OPJcReK["members"][std::to_string(i)].push_back(temp);
        }
        return return_OPJcReK;
        }();
return result;}

    VkCopyMemoryToImageInfoEXT deserialize_VkCopyMemoryToImageInfoEXT(json name){
        auto result=VkCopyMemoryToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NrrWQJj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NrrWQJj=NULL;
        }
    temp_NrrWQJj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NrrWQJj;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkMemoryToImageCopyEXT* temp_FNHclNp;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_FNHclNp=NULL;
        }
    temp_FNHclNp=(VkMemoryToImageCopyEXT*)malloc(result.regionCount*sizeof(VkMemoryToImageCopyEXT));
        for (int drwzClm=0; drwzClm < result.regionCount; drwzClm++){
            [&]() {
temp_FNHclNp[drwzClm]=deserialize_VkMemoryToImageCopyEXT(name["members"]["pRegions"]["members"][drwzClm]);}();;
        }
        }();result.pRegions=temp_FNHclNp;}();
return result;}

    json serialize_VkCopyImageToMemoryInfoEXT(VkCopyImageToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_THUwuGA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YwTfyZz=json({});
    
        if (name.pNext==NULL){
            return_YwTfyZz["null"]=true;
            return return_YwTfyZz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_aWudadi=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_IEjGoiP=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_vmCwQaC=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_MKpaJnO=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_vKqlCBI=json({});
    
        if (name.pRegions==NULL){
            return_vKqlCBI["null"]=true;
            return return_vKqlCBI;
        }
        
        return_vKqlCBI["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_uCgIILB=json({});
    return serialize_VkImageToMemoryCopyEXT(name.pRegions[i]);}();
            return_vKqlCBI["members"][std::to_string(i)].push_back(temp);
        }
        return return_vKqlCBI;
        }();
return result;}

    VkCopyImageToMemoryInfoEXT deserialize_VkCopyImageToMemoryInfoEXT(json name){
        auto result=VkCopyImageToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iFjpSKn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iFjpSKn=NULL;
        }
    temp_iFjpSKn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iFjpSKn;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageToMemoryCopyEXT* temp_pQPPDmv;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_pQPPDmv=NULL;
        }
    temp_pQPPDmv=(VkImageToMemoryCopyEXT*)malloc(result.regionCount*sizeof(VkImageToMemoryCopyEXT));
        for (int kcHARwz=0; kcHARwz < result.regionCount; kcHARwz++){
            [&]() {
temp_pQPPDmv[kcHARwz]=deserialize_VkImageToMemoryCopyEXT(name["members"]["pRegions"]["members"][kcHARwz]);}();;
        }
        }();result.pRegions=temp_pQPPDmv;}();
return result;}

    json serialize_VkCopyImageToImageInfoEXT(VkCopyImageToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BcCiyOC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TrxswNV=json({});
    
        if (name.pNext==NULL){
            return_TrxswNV["null"]=true;
            return return_TrxswNV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XpWLCzP=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_TjIlbGk=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_DaMakHs=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_CangGNV=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_rkgKYmQ=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_wbavNYA=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_xpMNbPh=json({});
    
        if (name.pRegions==NULL){
            return_xpMNbPh["null"]=true;
            return return_xpMNbPh;
        }
        
        return_xpMNbPh["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_MiYAdnX=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_xpMNbPh["members"][std::to_string(i)].push_back(temp);
        }
        return return_xpMNbPh;
        }();
return result;}

    VkCopyImageToImageInfoEXT deserialize_VkCopyImageToImageInfoEXT(json name){
        auto result=VkCopyImageToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QFgFmJc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QFgFmJc=NULL;
        }
    temp_QFgFmJc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QFgFmJc;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_UaptMyG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_UaptMyG=NULL;
        }
    temp_UaptMyG=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int hvWsACn=0; hvWsACn < result.regionCount; hvWsACn++){
            [&]() {
temp_UaptMyG[hvWsACn]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][hvWsACn]);}();;
        }
        }();result.pRegions=temp_UaptMyG;}();
return result;}

    json serialize_VkHostImageLayoutTransitionInfoEXT(VkHostImageLayoutTransitionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TLNtElx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hsttLgN=json({});
    
        if (name.pNext==NULL){
            return_hsttLgN["null"]=true;
            return return_hsttLgN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_pQdyTED=json({});
    return serialize_VkImage(name.image);}();
result["members"]["oldLayout"]=[&]() {
    json return_hFkpfQO=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_NnRZrkT=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["subresourceRange"]=[&]() {
    json return_IltDgvH=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkHostImageLayoutTransitionInfoEXT deserialize_VkHostImageLayoutTransitionInfoEXT(json name){
        auto result=VkHostImageLayoutTransitionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aKAqEEK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aKAqEEK=NULL;
        }
    temp_aKAqEEK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aKAqEEK;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkSubresourceHostMemcpySizeEXT(VkSubresourceHostMemcpySizeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JLMeylV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UYlUawW=json({});
    
        if (name.pNext==NULL){
            return_UYlUawW["null"]=true;
            return return_UYlUawW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["size"]=[&]() {
    json return_ltqazGr=json({});
    return_ltqazGr=[&]() {
    json return_JnUedHG=json({});
    return serialize_uint64_t(name.size);}();return return_ltqazGr;}();
return result;}

    VkSubresourceHostMemcpySizeEXT deserialize_VkSubresourceHostMemcpySizeEXT(json name){
        auto result=VkSubresourceHostMemcpySizeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkHostImageCopyDevicePerformanceQueryEXT(VkHostImageCopyDevicePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bpSTGLK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UmNflmt=json({});
    
        if (name.pNext==NULL){
            return_UmNflmt["null"]=true;
            return return_UmNflmt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimalDeviceAccess"]=[&]() {
    json return_KyHwiUV=json({});
    return_KyHwiUV=[&]() {
    json return_WhfFieq=json({});
    return serialize_uint32_t(name.optimalDeviceAccess);}();return return_KyHwiUV;}();
result["members"]["identicalMemoryLayout"]=[&]() {
    json return_rpdIZHj=json({});
    return_rpdIZHj=[&]() {
    json return_rOVwHaP=json({});
    return serialize_uint32_t(name.identicalMemoryLayout);}();return return_rpdIZHj;}();
return result;}

    VkHostImageCopyDevicePerformanceQueryEXT deserialize_VkHostImageCopyDevicePerformanceQueryEXT(json name){
        auto result=VkHostImageCopyDevicePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimalDeviceAccess=deserialize_uint32_t(name["members"]["optimalDeviceAccess"]);}();}();
[&]() {
[&]() {
result.identicalMemoryLayout=deserialize_uint32_t(name["members"]["identicalMemoryLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gcOBWpC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jiTydSM=json({});
    
        if (name.pNext==NULL){
            return_jiTydSM["null"]=true;
            return return_jiTydSM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitivesGeneratedQuery"]=[&]() {
    json return_oVTpjjv=json({});
    return_oVTpjjv=[&]() {
    json return_cikXLug=json({});
    return serialize_uint32_t(name.primitivesGeneratedQuery);}();return return_oVTpjjv;}();
result["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]=[&]() {
    json return_PgqUYgJ=json({});
    return_PgqUYgJ=[&]() {
    json return_HcGkYiI=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithRasterizerDiscard);}();return return_PgqUYgJ;}();
result["members"]["primitivesGeneratedQueryWithNonZeroStreams"]=[&]() {
    json return_TwuNHtf=json({});
    return_TwuNHtf=[&]() {
    json return_mYixoND=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithNonZeroStreams);}();return return_TwuNHtf;}();
return result;}

    VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitivesGeneratedQuery=deserialize_uint32_t(name["members"]["primitivesGeneratedQuery"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithRasterizerDiscard=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithNonZeroStreams=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithNonZeroStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(VkPhysicalDeviceLegacyDitheringFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IxZqjyp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Appxumy=json({});
    
        if (name.pNext==NULL){
            return_Appxumy["null"]=true;
            return return_Appxumy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["legacyDithering"]=[&]() {
    json return_JSKZIyz=json({});
    return_JSKZIyz=[&]() {
    json return_uHQZAbH=json({});
    return serialize_uint32_t(name.legacyDithering);}();return return_JSKZIyz;}();
return result;}

    VkPhysicalDeviceLegacyDitheringFeaturesEXT deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLegacyDitheringFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.legacyDithering=deserialize_uint32_t(name["members"]["legacyDithering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lJxPcZT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WgNXAcv=json({});
    
        if (name.pNext==NULL){
            return_WgNXAcv["null"]=true;
            return return_WgNXAcv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampled"]=[&]() {
    json return_iqeSIny=json({});
    return_iqeSIny=[&]() {
    json return_DbxoHPU=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampled);}();return return_iqeSIny;}();
return result;}

    VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampled=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampled"]);}();}();
return result;}

    json serialize_VkSubpassResolvePerformanceQueryEXT(VkSubpassResolvePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hwFNkom=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IBOwMZn=json({});
    
        if (name.pNext==NULL){
            return_IBOwMZn["null"]=true;
            return return_IBOwMZn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimal"]=[&]() {
    json return_FiekHkS=json({});
    return_FiekHkS=[&]() {
    json return_TNLQwBL=json({});
    return serialize_uint32_t(name.optimal);}();return return_FiekHkS;}();
return result;}

    VkSubpassResolvePerformanceQueryEXT deserialize_VkSubpassResolvePerformanceQueryEXT(json name){
        auto result=VkSubpassResolvePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimal=deserialize_uint32_t(name["members"]["optimal"]);}();}();
return result;}

    json serialize_VkMultisampledRenderToSingleSampledInfoEXT(VkMultisampledRenderToSingleSampledInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CEvkLus=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MrGRMmq=json({});
    
        if (name.pNext==NULL){
            return_MrGRMmq["null"]=true;
            return return_MrGRMmq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampledEnable"]=[&]() {
    json return_EHVJMcb=json({});
    return_EHVJMcb=[&]() {
    json return_kWISbze=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampledEnable);}();return return_EHVJMcb;}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_ryCKURf=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkMultisampledRenderToSingleSampledInfoEXT deserialize_VkMultisampledRenderToSingleSampledInfoEXT(json name){
        auto result=VkMultisampledRenderToSingleSampledInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KqNLdZi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KqNLdZi=NULL;
        }
    temp_KqNLdZi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KqNLdZi;}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampledEnable=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampledEnable"]);}();}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MSiQHPj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BRgCRLa=json({});
    
        if (name.pNext==NULL){
            return_BRgCRLa["null"]=true;
            return return_BRgCRLa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineProtectedAccess"]=[&]() {
    json return_AuXgmyc=json({});
    return_AuXgmyc=[&]() {
    json return_MDwsSlW=json({});
    return serialize_uint32_t(name.pipelineProtectedAccess);}();return return_AuXgmyc;}();
return result;}

    VkPhysicalDevicePipelineProtectedAccessFeaturesEXT deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineProtectedAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineProtectedAccess=deserialize_uint32_t(name["members"]["pipelineProtectedAccess"]);}();}();
return result;}

    json serialize_VkQueueFamilyVideoPropertiesKHR(VkQueueFamilyVideoPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bdCKWkO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vPQSrrc=json({});
    
        if (name.pNext==NULL){
            return_vPQSrrc["null"]=true;
            return return_vPQSrrc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperations"]=[&]() {
    json return_xbZTAWI=json({});
    return serialize_VkVideoCodecOperationFlagsKHR(name.videoCodecOperations);}();
return result;}

    VkQueueFamilyVideoPropertiesKHR deserialize_VkQueueFamilyVideoPropertiesKHR(json name){
        auto result=VkQueueFamilyVideoPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.videoCodecOperations=deserialize_VkVideoCodecOperationFlagsKHR(name["members"]["videoCodecOperations"]);}();
return result;}

    json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(VkQueueFamilyQueryResultStatusPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZKmKDnk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WCIOndT=json({});
    
        if (name.pNext==NULL){
            return_WCIOndT["null"]=true;
            return return_WCIOndT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queryResultStatusSupport"]=[&]() {
    json return_jaddffd=json({});
    return_jaddffd=[&]() {
    json return_MOSaNOI=json({});
    return serialize_uint32_t(name.queryResultStatusSupport);}();return return_jaddffd;}();
return result;}

    VkQueueFamilyQueryResultStatusPropertiesKHR deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(json name){
        auto result=VkQueueFamilyQueryResultStatusPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.queryResultStatusSupport=deserialize_uint32_t(name["members"]["queryResultStatusSupport"]);}();}();
return result;}

    json serialize_VkVideoProfileListInfoKHR(VkVideoProfileListInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jRqwamU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CcgIHTq=json({});
    
        if (name.pNext==NULL){
            return_CcgIHTq["null"]=true;
            return return_CcgIHTq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["profileCount"]=[&]() {
    json return_nODbgBj=json({});
    return serialize_uint32_t(name.profileCount);}();
result["members"]["pProfiles"]=[&]() {
    json return_bRCsrJq=json({});
    
        if (name.pProfiles==NULL){
            return_bRCsrJq["null"]=true;
            return return_bRCsrJq;
        }
        
        return_bRCsrJq["members"]={};
        for(int i=0; i < name.profileCount; i++){
            json temp;
            temp=[&]() {
    json return_XnfPTfp=json({});
    return serialize_VkVideoProfileInfoKHR(name.pProfiles[i]);}();
            return_bRCsrJq["members"][std::to_string(i)].push_back(temp);
        }
        return return_bRCsrJq;
        }();
return result;}

    VkVideoProfileListInfoKHR deserialize_VkVideoProfileListInfoKHR(json name){
        auto result=VkVideoProfileListInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LednQZg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LednQZg=NULL;
        }
    temp_LednQZg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LednQZg;}();
[&]() {
result.profileCount=deserialize_uint32_t(name["members"]["profileCount"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_fRLoRRm;[&]() {

        if (name["members"]["pProfiles"].contains("null")){
        temp_fRLoRRm=NULL;
        }
    temp_fRLoRRm=(VkVideoProfileInfoKHR*)malloc(result.profileCount*sizeof(VkVideoProfileInfoKHR));
        for (int eMnsnRd=0; eMnsnRd < result.profileCount; eMnsnRd++){
            [&]() {
temp_fRLoRRm[eMnsnRd]=deserialize_VkVideoProfileInfoKHR(name["members"]["pProfiles"]["members"][eMnsnRd]);}();;
        }
        }();result.pProfiles=temp_fRLoRRm;}();
return result;}

    json serialize_VkPhysicalDeviceVideoFormatInfoKHR(VkPhysicalDeviceVideoFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zfkNuLw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PEnSKEY=json({});
    
        if (name.pNext==NULL){
            return_PEnSKEY["null"]=true;
            return return_PEnSKEY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageUsage"]=[&]() {
    json return_WLqAxSL=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
return result;}

    VkPhysicalDeviceVideoFormatInfoKHR deserialize_VkPhysicalDeviceVideoFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceVideoFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EDFGRtn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EDFGRtn=NULL;
        }
    temp_EDFGRtn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EDFGRtn;}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
return result;}

    json serialize_VkVideoFormatPropertiesKHR(VkVideoFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kxeLBPS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYRXZOJ=json({});
    
        if (name.pNext==NULL){
            return_jYRXZOJ["null"]=true;
            return return_jYRXZOJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_CZQkNQc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["componentMapping"]=[&]() {
    json return_cHRKeFs=json({});
    return serialize_VkComponentMapping(name.componentMapping);}();
result["members"]["imageCreateFlags"]=[&]() {
    json return_hLtilKv=json({});
    return serialize_VkImageCreateFlags(name.imageCreateFlags);}();
result["members"]["imageType"]=[&]() {
    json return_gtdHWjY=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["imageTiling"]=[&]() {
    json return_CKYXrrJ=json({});
    return serialize_VkImageTiling(name.imageTiling);}();
result["members"]["imageUsageFlags"]=[&]() {
    json return_dDunWDA=json({});
    return serialize_VkImageUsageFlags(name.imageUsageFlags);}();
return result;}

    VkVideoFormatPropertiesKHR deserialize_VkVideoFormatPropertiesKHR(json name){
        auto result=VkVideoFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.componentMapping=deserialize_VkComponentMapping(name["members"]["componentMapping"]);}();
[&]() {
result.imageCreateFlags=deserialize_VkImageCreateFlags(name["members"]["imageCreateFlags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.imageTiling=deserialize_VkImageTiling(name["members"]["imageTiling"]);}();
[&]() {
result.imageUsageFlags=deserialize_VkImageUsageFlags(name["members"]["imageUsageFlags"]);}();
return result;}

    json serialize_VkVideoProfileInfoKHR(VkVideoProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BcnIQzB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HNHqxxv=json({});
    
        if (name.pNext==NULL){
            return_HNHqxxv["null"]=true;
            return return_HNHqxxv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperation"]=[&]() {
    json return_zxmbYxL=json({});
    return serialize_VkVideoCodecOperationFlagBitsKHR(name.videoCodecOperation);}();
result["members"]["chromaSubsampling"]=[&]() {
    json return_gexZxRG=json({});
    return serialize_VkVideoChromaSubsamplingFlagsKHR(name.chromaSubsampling);}();
result["members"]["lumaBitDepth"]=[&]() {
    json return_xpcyTty=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.lumaBitDepth);}();
result["members"]["chromaBitDepth"]=[&]() {
    json return_FRHKWMI=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.chromaBitDepth);}();
return result;}

    VkVideoProfileInfoKHR deserialize_VkVideoProfileInfoKHR(json name){
        auto result=VkVideoProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PwtzUUg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PwtzUUg=NULL;
        }
    temp_PwtzUUg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PwtzUUg;}();
[&]() {
result.videoCodecOperation=deserialize_VkVideoCodecOperationFlagBitsKHR(name["members"]["videoCodecOperation"]);}();
[&]() {
result.chromaSubsampling=deserialize_VkVideoChromaSubsamplingFlagsKHR(name["members"]["chromaSubsampling"]);}();
[&]() {
result.lumaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["lumaBitDepth"]);}();
[&]() {
result.chromaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["chromaBitDepth"]);}();
return result;}

    json serialize_VkVideoCapabilitiesKHR(VkVideoCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fuMnrlg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CgxOgks=json({});
    
        if (name.pNext==NULL){
            return_CgxOgks["null"]=true;
            return return_CgxOgks;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xvAFRQR=json({});
    return serialize_VkVideoCapabilityFlagsKHR(name.flags);}();
result["members"]["minBitstreamBufferOffsetAlignment"]=[&]() {
    json return_SGxcwqu=json({});
    return_SGxcwqu=[&]() {
    json return_JomClNc=json({});
    return serialize_uint64_t(name.minBitstreamBufferOffsetAlignment);}();return return_SGxcwqu;}();
result["members"]["minBitstreamBufferSizeAlignment"]=[&]() {
    json return_tOyTFVj=json({});
    return_tOyTFVj=[&]() {
    json return_LQCthuy=json({});
    return serialize_uint64_t(name.minBitstreamBufferSizeAlignment);}();return return_tOyTFVj;}();
result["members"]["pictureAccessGranularity"]=[&]() {
    json return_lXTGzOK=json({});
    return serialize_VkExtent2D(name.pictureAccessGranularity);}();
result["members"]["minCodedExtent"]=[&]() {
    json return_scEoJuT=json({});
    return serialize_VkExtent2D(name.minCodedExtent);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_MHVLuwK=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_OgEFWkl=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_RyNZFts=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["stdHeaderVersion"]=[&]() {
    json return_ItqvDhY=json({});
    return serialize_VkExtensionProperties(name.stdHeaderVersion);}();
return result;}

    VkVideoCapabilitiesKHR deserialize_VkVideoCapabilitiesKHR(json name){
        auto result=VkVideoCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoCapabilityFlagsKHR(name["members"]["flags"]);}();
[&]() {
[&]() {
result.minBitstreamBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minBitstreamBufferSizeAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferSizeAlignment"]);}();}();
[&]() {
result.pictureAccessGranularity=deserialize_VkExtent2D(name["members"]["pictureAccessGranularity"]);}();
[&]() {
result.minCodedExtent=deserialize_VkExtent2D(name["members"]["minCodedExtent"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
result.stdHeaderVersion=deserialize_VkExtensionProperties(name["members"]["stdHeaderVersion"]);}();
return result;}

    json serialize_VkVideoSessionMemoryRequirementsKHR(VkVideoSessionMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CcnJFYn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_paAhkUj=json({});
    
        if (name.pNext==NULL){
            return_paAhkUj["null"]=true;
            return return_paAhkUj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_eHaWLht=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_BmdUQfz=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkVideoSessionMemoryRequirementsKHR deserialize_VkVideoSessionMemoryRequirementsKHR(json name){
        auto result=VkVideoSessionMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkBindVideoSessionMemoryInfoKHR(VkBindVideoSessionMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kBtdpUx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ARjfcjk=json({});
    
        if (name.pNext==NULL){
            return_ARjfcjk["null"]=true;
            return return_ARjfcjk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_nzxkkcd=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memory"]=[&]() {
    json return_vGbTcHY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_WeQUAXO=json({});
    return_WeQUAXO=[&]() {
    json return_FhDlopT=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_WeQUAXO;}();
result["members"]["memorySize"]=[&]() {
    json return_AZfHJgz=json({});
    return_AZfHJgz=[&]() {
    json return_WOyhyHd=json({});
    return serialize_uint64_t(name.memorySize);}();return return_AZfHJgz;}();
return result;}

    VkBindVideoSessionMemoryInfoKHR deserialize_VkBindVideoSessionMemoryInfoKHR(json name){
        auto result=VkBindVideoSessionMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nERlyGq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nERlyGq=NULL;
        }
    temp_nERlyGq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nERlyGq;}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
[&]() {
result.memorySize=deserialize_uint64_t(name["members"]["memorySize"]);}();}();
return result;}

    json serialize_VkVideoPictureResourceInfoKHR(VkVideoPictureResourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fhCnIea=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SQflnnW=json({});
    
        if (name.pNext==NULL){
            return_SQflnnW["null"]=true;
            return return_SQflnnW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["codedOffset"]=[&]() {
    json return_fgUrHRg=json({});
    return serialize_VkOffset2D(name.codedOffset);}();
result["members"]["codedExtent"]=[&]() {
    json return_LnjNxeM=json({});
    return serialize_VkExtent2D(name.codedExtent);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_XSndNZS=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["imageViewBinding"]=[&]() {
    json return_bbbUrnB=json({});
    return serialize_VkImageView(name.imageViewBinding);}();
return result;}

    VkVideoPictureResourceInfoKHR deserialize_VkVideoPictureResourceInfoKHR(json name){
        auto result=VkVideoPictureResourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UrQRFBw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UrQRFBw=NULL;
        }
    temp_UrQRFBw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UrQRFBw;}();
[&]() {
result.codedOffset=deserialize_VkOffset2D(name["members"]["codedOffset"]);}();
[&]() {
result.codedExtent=deserialize_VkExtent2D(name["members"]["codedExtent"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.imageViewBinding=deserialize_VkImageView(name["members"]["imageViewBinding"]);}();
return result;}

    json serialize_VkVideoReferenceSlotInfoKHR(VkVideoReferenceSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DWcBcoW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_reMpXmz=json({});
    
        if (name.pNext==NULL){
            return_reMpXmz["null"]=true;
            return return_reMpXmz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["slotIndex"]=[&]() {
    json return_CXQtgLW=json({});
    return serialize_int32_t(name.slotIndex);}();
result["members"]["pPictureResource"]=[&]() {
    json return_gYguyBY=json({});
    
        if (name.pPictureResource==NULL){
            return_gYguyBY["null"]=true;
            return return_gYguyBY;
        }
        return_gYguyBY=[&]() {
    json return_THkFUCS=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*name.pPictureResource);}();
return return_gYguyBY;}();
return result;}

    VkVideoReferenceSlotInfoKHR deserialize_VkVideoReferenceSlotInfoKHR(json name){
        auto result=VkVideoReferenceSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZcXGrQg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZcXGrQg=NULL;
        }
    temp_ZcXGrQg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZcXGrQg;}();
[&]() {
result.slotIndex=deserialize_int32_t(name["members"]["slotIndex"]);}();
[&]() {
VkVideoPictureResourceInfoKHR* temp_JHoxAFY;[&]() {

        if (name["members"]["pPictureResource"].contains("null")){
        temp_JHoxAFY=NULL;
        }
    [&]() {
*(temp_JHoxAFY)=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["pPictureResource"]);}();
}();result.pPictureResource=temp_JHoxAFY;}();
return result;}

    json serialize_VkVideoDecodeCapabilitiesKHR(VkVideoDecodeCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ybIqpfb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SdNvLeU=json({});
    
        if (name.pNext==NULL){
            return_SdNvLeU["null"]=true;
            return return_SdNvLeU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_CEFqleb=json({});
    return serialize_VkVideoDecodeCapabilityFlagsKHR(name.flags);}();
return result;}

    VkVideoDecodeCapabilitiesKHR deserialize_VkVideoDecodeCapabilitiesKHR(json name){
        auto result=VkVideoDecodeCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoDecodeCapabilityFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoDecodeUsageInfoKHR(VkVideoDecodeUsageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fGCRkOE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tJkPegm=json({});
    
        if (name.pNext==NULL){
            return_tJkPegm["null"]=true;
            return return_tJkPegm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoUsageHints"]=[&]() {
    json return_mIIIfca=json({});
    return serialize_VkVideoDecodeUsageFlagsKHR(name.videoUsageHints);}();
return result;}

    VkVideoDecodeUsageInfoKHR deserialize_VkVideoDecodeUsageInfoKHR(json name){
        auto result=VkVideoDecodeUsageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nIsprLN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nIsprLN=NULL;
        }
    temp_nIsprLN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nIsprLN;}();
[&]() {
result.videoUsageHints=deserialize_VkVideoDecodeUsageFlagsKHR(name["members"]["videoUsageHints"]);}();
return result;}

    json serialize_VkVideoDecodeInfoKHR(VkVideoDecodeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AHieSpk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SSeQwQK=json({});
    
        if (name.pNext==NULL){
            return_SSeQwQK["null"]=true;
            return return_SSeQwQK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lASRtVP=json({});
    return serialize_VkVideoDecodeFlagsKHR(name.flags);}();
result["members"]["srcBuffer"]=[&]() {
    json return_EDHxfXt=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["srcBufferOffset"]=[&]() {
    json return_ocFQoWO=json({});
    return_ocFQoWO=[&]() {
    json return_VxqfWcQ=json({});
    return serialize_uint64_t(name.srcBufferOffset);}();return return_ocFQoWO;}();
result["members"]["srcBufferRange"]=[&]() {
    json return_EZBEcHn=json({});
    return_EZBEcHn=[&]() {
    json return_vbQtfdr=json({});
    return serialize_uint64_t(name.srcBufferRange);}();return return_EZBEcHn;}();
result["members"]["dstPictureResource"]=[&]() {
    json return_WwSqmGQ=json({});
    return serialize_VkVideoPictureResourceInfoKHR(name.dstPictureResource);}();
result["members"]["pSetupReferenceSlot"]=[&]() {
    json return_jxnlztW=json({});
    
        if (name.pSetupReferenceSlot==NULL){
            return_jxnlztW["null"]=true;
            return return_jxnlztW;
        }
        return_jxnlztW=[&]() {
    json return_hdYYDkr=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*name.pSetupReferenceSlot);}();
return return_jxnlztW;}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_sjImDGD=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_wzGeJOT=json({});
    
        if (name.pReferenceSlots==NULL){
            return_wzGeJOT["null"]=true;
            return return_wzGeJOT;
        }
        
        return_wzGeJOT["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_oOpupqR=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_wzGeJOT["members"][std::to_string(i)].push_back(temp);
        }
        return return_wzGeJOT;
        }();
return result;}

    VkVideoDecodeInfoKHR deserialize_VkVideoDecodeInfoKHR(json name){
        auto result=VkVideoDecodeInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sdCVnxL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sdCVnxL=NULL;
        }
    temp_sdCVnxL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sdCVnxL;}();
[&]() {
result.flags=deserialize_VkVideoDecodeFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
[&]() {
result.srcBufferOffset=deserialize_uint64_t(name["members"]["srcBufferOffset"]);}();}();
[&]() {
[&]() {
result.srcBufferRange=deserialize_uint64_t(name["members"]["srcBufferRange"]);}();}();
[&]() {
result.dstPictureResource=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["dstPictureResource"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_qTPSumR;[&]() {

        if (name["members"]["pSetupReferenceSlot"].contains("null")){
        temp_qTPSumR=NULL;
        }
    [&]() {
*(temp_qTPSumR)=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pSetupReferenceSlot"]);}();
}();result.pSetupReferenceSlot=temp_qTPSumR;}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_mDBdWHr;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_mDBdWHr=NULL;
        }
    temp_mDBdWHr=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int zmNiqgx=0; zmNiqgx < result.referenceSlotCount; zmNiqgx++){
            [&]() {
temp_mDBdWHr[zmNiqgx]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][zmNiqgx]);}();;
        }
        }();result.pReferenceSlots=temp_mDBdWHr;}();
return result;}

    json serialize_VkVideoDecodeH264ProfileInfoKHR(VkVideoDecodeH264ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BWPdUhU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OECmpxi=json({});
    
        if (name.pNext==NULL){
            return_OECmpxi["null"]=true;
            return return_OECmpxi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_tJLrPfn=json({});
    return serialize_StdVideoH264ProfileIdc(name.stdProfileIdc);
}();
result["members"]["pictureLayout"]=[&]() {
    json return_tIXuoiB=json({});
    return serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name.pictureLayout);}();
return result;}

    VkVideoDecodeH264ProfileInfoKHR deserialize_VkVideoDecodeH264ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH264ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qAkavdA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qAkavdA=NULL;
        }
    temp_qAkavdA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qAkavdA;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH264ProfileIdc(name["members"]["stdProfileIdc"]);
}();
[&]() {
result.pictureLayout=deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name["members"]["pictureLayout"]);}();
return result;}

    json serialize_VkVideoDecodeH264CapabilitiesKHR(VkVideoDecodeH264CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uqQrbUl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VGDaOcv=json({});
    
        if (name.pNext==NULL){
            return_VGDaOcv["null"]=true;
            return return_VGDaOcv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_GotdTxt=json({});
    return serialize_StdVideoH264LevelIdc(name.maxLevelIdc);
}();
result["members"]["fieldOffsetGranularity"]=[&]() {
    json return_SyGXbas=json({});
    return serialize_VkOffset2D(name.fieldOffsetGranularity);}();
return result;}

    VkVideoDecodeH264CapabilitiesKHR deserialize_VkVideoDecodeH264CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH264CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH264LevelIdc(name["members"]["maxLevelIdc"]);
}();
[&]() {
result.fieldOffsetGranularity=deserialize_VkOffset2D(name["members"]["fieldOffsetGranularity"]);}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(VkVideoDecodeH264SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jwAJXAm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DEmjVKh=json({});
    
        if (name.pNext==NULL){
            return_DEmjVKh["null"]=true;
            return return_DEmjVKh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_nYZJpuZ=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_CDpoOMN=json({});
    
        if (name.pStdSPSs==NULL){
            return_CDpoOMN["null"]=true;
            return return_CDpoOMN;
        }
        return serialize_StdVideoH264SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_HomGBQJ=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_EJFMBeo=json({});
    
        if (name.pStdPPSs==NULL){
            return_EJFMBeo["null"]=true;
            return return_EJFMBeo;
        }
        return serialize_StdVideoH264PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH264SessionParametersAddInfoKHR deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cCLyJJm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cCLyJJm=NULL;
        }
    temp_cCLyJJm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cCLyJJm;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH264SequenceParameterSet* temp_iTefOjH;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_iTefOjH=NULL;
        }
    temp_iTefOjH=deserialize_StdVideoH264SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_iTefOjH;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH264PictureParameterSet* temp_ydoasbM;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_ydoasbM=NULL;
        }
    temp_ydoasbM=deserialize_StdVideoH264PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_ydoasbM;}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(VkVideoDecodeH264SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iutSoBE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PjOJAgK=json({});
    
        if (name.pNext==NULL){
            return_PjOJAgK["null"]=true;
            return return_PjOJAgK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_xpKcOzK=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_retUJZO=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_HfQQhGw=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_HfQQhGw["null"]=true;
            return return_HfQQhGw;
        }
        return_HfQQhGw=[&]() {
    json return_DNhMWsY=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_HfQQhGw;}();
return result;}

    VkVideoDecodeH264SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KDIMDMa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KDIMDMa=NULL;
        }
    temp_KDIMDMa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KDIMDMa;}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH264SessionParametersAddInfoKHR* temp_aQEklIU;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_aQEklIU=NULL;
        }
    [&]() {
*(temp_aQEklIU)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_aQEklIU;}();
return result;}

    json serialize_VkVideoDecodeH264PictureInfoKHR(VkVideoDecodeH264PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NNNbOOc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kHnYjIb=json({});
    
        if (name.pNext==NULL){
            return_kHnYjIb["null"]=true;
            return return_kHnYjIb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_yoZirOS=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_yoZirOS["null"]=true;
            return return_yoZirOS;
        }
        return serialize_StdVideoDecodeH264PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceCount"]=[&]() {
    json return_aVFxUkU=json({});
    return serialize_uint32_t(name.sliceCount);}();
result["members"]["pSliceOffsets"]=[&]() {
    json return_rmJkniE=json({});
    
        if (name.pSliceOffsets==NULL){
            return_rmJkniE["null"]=true;
            return return_rmJkniE;
        }
        
        return_rmJkniE["members"]={};
        for(int i=0; i < name.sliceCount; i++){
            json temp;
            temp=[&]() {
    json return_UZEPrBe=json({});
    return serialize_uint32_t(name.pSliceOffsets[i]);}();
            return_rmJkniE["members"][std::to_string(i)].push_back(temp);
        }
        return return_rmJkniE;
        }();
return result;}

    VkVideoDecodeH264PictureInfoKHR deserialize_VkVideoDecodeH264PictureInfoKHR(json name){
        auto result=VkVideoDecodeH264PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jOfJWjm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jOfJWjm=NULL;
        }
    temp_jOfJWjm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jOfJWjm;}();
[&]() {
StdVideoDecodeH264PictureInfo* temp_kgfONGF;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_kgfONGF=NULL;
        }
    temp_kgfONGF=deserialize_StdVideoDecodeH264PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_kgfONGF;}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
[&]() {
uint32_t* temp_xrdKUjq;[&]() {

        if (name["members"]["pSliceOffsets"].contains("null")){
        temp_xrdKUjq=NULL;
        }
    temp_xrdKUjq=(uint32_t*)malloc(result.sliceCount*sizeof(uint32_t));
        for (int dpIstRw=0; dpIstRw < result.sliceCount; dpIstRw++){
            [&]() {
temp_xrdKUjq[dpIstRw]=deserialize_uint32_t(name["members"]["pSliceOffsets"]["members"][dpIstRw]);}();;
        }
        }();result.pSliceOffsets=temp_xrdKUjq;}();
return result;}

    json serialize_VkVideoDecodeH264DpbSlotInfoKHR(VkVideoDecodeH264DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qIVnYRX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pjmUlKu=json({});
    
        if (name.pNext==NULL){
            return_pjmUlKu["null"]=true;
            return return_pjmUlKu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_vqjyXTA=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_vqjyXTA["null"]=true;
            return return_vqjyXTA;
        }
        return serialize_StdVideoDecodeH264ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH264DpbSlotInfoKHR deserialize_VkVideoDecodeH264DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH264DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vHhnXCS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vHhnXCS=NULL;
        }
    temp_vHhnXCS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vHhnXCS;}();
[&]() {
StdVideoDecodeH264ReferenceInfo* temp_RFXvOqh;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_RFXvOqh=NULL;
        }
    temp_RFXvOqh=deserialize_StdVideoDecodeH264ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_RFXvOqh;}();
return result;}

    json serialize_VkVideoDecodeH265ProfileInfoKHR(VkVideoDecodeH265ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LxqbYee=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bRfSwmS=json({});
    
        if (name.pNext==NULL){
            return_bRfSwmS["null"]=true;
            return return_bRfSwmS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_KqhyfBf=json({});
    return serialize_StdVideoH265ProfileIdc(name.stdProfileIdc);
}();
return result;}

    VkVideoDecodeH265ProfileInfoKHR deserialize_VkVideoDecodeH265ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH265ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wNaczrs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wNaczrs=NULL;
        }
    temp_wNaczrs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wNaczrs;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH265ProfileIdc(name["members"]["stdProfileIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265CapabilitiesKHR(VkVideoDecodeH265CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MUxVRwj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zrgqSSI=json({});
    
        if (name.pNext==NULL){
            return_zrgqSSI["null"]=true;
            return return_zrgqSSI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_QAGKnlU=json({});
    return serialize_StdVideoH265LevelIdc(name.maxLevelIdc);
}();
return result;}

    VkVideoDecodeH265CapabilitiesKHR deserialize_VkVideoDecodeH265CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH265CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH265LevelIdc(name["members"]["maxLevelIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(VkVideoDecodeH265SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kZkshoe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hSuNJEc=json({});
    
        if (name.pNext==NULL){
            return_hSuNJEc["null"]=true;
            return return_hSuNJEc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdVPSCount"]=[&]() {
    json return_xmdUsvC=json({});
    return serialize_uint32_t(name.stdVPSCount);}();
result["members"]["pStdVPSs"]=[&]() {
    json return_ZXQLNzZ=json({});
    
        if (name.pStdVPSs==NULL){
            return_ZXQLNzZ["null"]=true;
            return return_ZXQLNzZ;
        }
        return serialize_StdVideoH265VideoParameterSet_p(name.pStdVPSs);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_vdKStql=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_EgrxwdX=json({});
    
        if (name.pStdSPSs==NULL){
            return_EgrxwdX["null"]=true;
            return return_EgrxwdX;
        }
        return serialize_StdVideoH265SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_QqWtreu=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_VrokKsI=json({});
    
        if (name.pStdPPSs==NULL){
            return_VrokKsI["null"]=true;
            return return_VrokKsI;
        }
        return serialize_StdVideoH265PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH265SessionParametersAddInfoKHR deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kdMpZTs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kdMpZTs=NULL;
        }
    temp_kdMpZTs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kdMpZTs;}();
[&]() {
result.stdVPSCount=deserialize_uint32_t(name["members"]["stdVPSCount"]);}();
[&]() {
StdVideoH265VideoParameterSet* temp_YirWDYP;[&]() {

        if (name["members"]["pStdVPSs"].contains("null")){
        temp_YirWDYP=NULL;
        }
    temp_YirWDYP=deserialize_StdVideoH265VideoParameterSet_p(name["members"]["pStdVPSs"]);
}();result.pStdVPSs=temp_YirWDYP;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH265SequenceParameterSet* temp_qunjDnh;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_qunjDnh=NULL;
        }
    temp_qunjDnh=deserialize_StdVideoH265SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_qunjDnh;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH265PictureParameterSet* temp_QAXicmD;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_QAXicmD=NULL;
        }
    temp_QAXicmD=deserialize_StdVideoH265PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_QAXicmD;}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(VkVideoDecodeH265SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zkZLGMb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MMdUXgn=json({});
    
        if (name.pNext==NULL){
            return_MMdUXgn["null"]=true;
            return return_MMdUXgn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdVPSCount"]=[&]() {
    json return_hNlhnYq=json({});
    return serialize_uint32_t(name.maxStdVPSCount);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_tkCFHLH=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_cqMgvTY=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_QUZQDDf=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_QUZQDDf["null"]=true;
            return return_QUZQDDf;
        }
        return_QUZQDDf=[&]() {
    json return_fjvggfX=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_QUZQDDf;}();
return result;}

    VkVideoDecodeH265SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZreEjOH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZreEjOH=NULL;
        }
    temp_ZreEjOH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZreEjOH;}();
[&]() {
result.maxStdVPSCount=deserialize_uint32_t(name["members"]["maxStdVPSCount"]);}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH265SessionParametersAddInfoKHR* temp_tQTgwaM;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_tQTgwaM=NULL;
        }
    [&]() {
*(temp_tQTgwaM)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_tQTgwaM;}();
return result;}

    json serialize_VkVideoDecodeH265PictureInfoKHR(VkVideoDecodeH265PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pzqAhLu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_euAUlLR=json({});
    
        if (name.pNext==NULL){
            return_euAUlLR["null"]=true;
            return return_euAUlLR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_IjCUJBm=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_IjCUJBm["null"]=true;
            return return_IjCUJBm;
        }
        return serialize_StdVideoDecodeH265PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceSegmentCount"]=[&]() {
    json return_SZuohRl=json({});
    return serialize_uint32_t(name.sliceSegmentCount);}();
result["members"]["pSliceSegmentOffsets"]=[&]() {
    json return_GoCUfmw=json({});
    
        if (name.pSliceSegmentOffsets==NULL){
            return_GoCUfmw["null"]=true;
            return return_GoCUfmw;
        }
        
        return_GoCUfmw["members"]={};
        for(int i=0; i < name.sliceSegmentCount; i++){
            json temp;
            temp=[&]() {
    json return_VBZLTKi=json({});
    return serialize_uint32_t(name.pSliceSegmentOffsets[i]);}();
            return_GoCUfmw["members"][std::to_string(i)].push_back(temp);
        }
        return return_GoCUfmw;
        }();
return result;}

    VkVideoDecodeH265PictureInfoKHR deserialize_VkVideoDecodeH265PictureInfoKHR(json name){
        auto result=VkVideoDecodeH265PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tABDxkb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tABDxkb=NULL;
        }
    temp_tABDxkb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tABDxkb;}();
[&]() {
StdVideoDecodeH265PictureInfo* temp_qvilQab;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_qvilQab=NULL;
        }
    temp_qvilQab=deserialize_StdVideoDecodeH265PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_qvilQab;}();
[&]() {
result.sliceSegmentCount=deserialize_uint32_t(name["members"]["sliceSegmentCount"]);}();
[&]() {
uint32_t* temp_bjpbYNO;[&]() {

        if (name["members"]["pSliceSegmentOffsets"].contains("null")){
        temp_bjpbYNO=NULL;
        }
    temp_bjpbYNO=(uint32_t*)malloc(result.sliceSegmentCount*sizeof(uint32_t));
        for (int dXuTfDO=0; dXuTfDO < result.sliceSegmentCount; dXuTfDO++){
            [&]() {
temp_bjpbYNO[dXuTfDO]=deserialize_uint32_t(name["members"]["pSliceSegmentOffsets"]["members"][dXuTfDO]);}();;
        }
        }();result.pSliceSegmentOffsets=temp_bjpbYNO;}();
return result;}

    json serialize_VkVideoDecodeH265DpbSlotInfoKHR(VkVideoDecodeH265DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WOCYuNC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_emJVLXa=json({});
    
        if (name.pNext==NULL){
            return_emJVLXa["null"]=true;
            return return_emJVLXa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_JPSSagq=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_JPSSagq["null"]=true;
            return return_JPSSagq;
        }
        return serialize_StdVideoDecodeH265ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH265DpbSlotInfoKHR deserialize_VkVideoDecodeH265DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH265DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lmczXqv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lmczXqv=NULL;
        }
    temp_lmczXqv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lmczXqv;}();
[&]() {
StdVideoDecodeH265ReferenceInfo* temp_SQMsNHJ;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_SQMsNHJ=NULL;
        }
    temp_SQMsNHJ=deserialize_StdVideoDecodeH265ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_SQMsNHJ;}();
return result;}

    json serialize_VkVideoSessionCreateInfoKHR(VkVideoSessionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VMdklFB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpVHRTL=json({});
    
        if (name.pNext==NULL){
            return_vpVHRTL["null"]=true;
            return return_vpVHRTL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_MqZzwcc=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["flags"]=[&]() {
    json return_DOMRxwY=json({});
    return serialize_VkVideoSessionCreateFlagsKHR(name.flags);}();
result["members"]["pVideoProfile"]=[&]() {
    json return_hvRYoeW=json({});
    
        if (name.pVideoProfile==NULL){
            return_hvRYoeW["null"]=true;
            return return_hvRYoeW;
        }
        return_hvRYoeW=[&]() {
    json return_SNwmXEP=json({});
    return serialize_VkVideoProfileInfoKHR(*name.pVideoProfile);}();
return return_hvRYoeW;}();
result["members"]["pictureFormat"]=[&]() {
    json return_bviIBeC=json({});
    return serialize_VkFormat(name.pictureFormat);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_RVrJMti=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["referencePictureFormat"]=[&]() {
    json return_rNmUKZe=json({});
    return serialize_VkFormat(name.referencePictureFormat);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_SXLqTLr=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_fVczOuT=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["pStdHeaderVersion"]=[&]() {
    json return_dKaOGpo=json({});
    
        if (name.pStdHeaderVersion==NULL){
            return_dKaOGpo["null"]=true;
            return return_dKaOGpo;
        }
        return_dKaOGpo=[&]() {
    json return_wruhVFW=json({});
    return serialize_VkExtensionProperties(*name.pStdHeaderVersion);}();
return return_dKaOGpo;}();
return result;}

    VkVideoSessionCreateInfoKHR deserialize_VkVideoSessionCreateInfoKHR(json name){
        auto result=VkVideoSessionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HUOmLSn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HUOmLSn=NULL;
        }
    temp_HUOmLSn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HUOmLSn;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.flags=deserialize_VkVideoSessionCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_IGVWzWy;[&]() {

        if (name["members"]["pVideoProfile"].contains("null")){
        temp_IGVWzWy=NULL;
        }
    [&]() {
*(temp_IGVWzWy)=deserialize_VkVideoProfileInfoKHR(name["members"]["pVideoProfile"]);}();
}();result.pVideoProfile=temp_IGVWzWy;}();
[&]() {
result.pictureFormat=deserialize_VkFormat(name["members"]["pictureFormat"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.referencePictureFormat=deserialize_VkFormat(name["members"]["referencePictureFormat"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
VkExtensionProperties* temp_wLYMnht;[&]() {

        if (name["members"]["pStdHeaderVersion"].contains("null")){
        temp_wLYMnht=NULL;
        }
    [&]() {
*(temp_wLYMnht)=deserialize_VkExtensionProperties(name["members"]["pStdHeaderVersion"]);}();
}();result.pStdHeaderVersion=temp_wLYMnht;}();
return result;}

    json serialize_VkVideoSessionParametersCreateInfoKHR(VkVideoSessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BlwNStI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pLocqkq=json({});
    
        if (name.pNext==NULL){
            return_pLocqkq["null"]=true;
            return return_pLocqkq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WVDWptO=json({});
    return serialize_VkVideoSessionParametersCreateFlagsKHR(name.flags);}();
result["members"]["videoSessionParametersTemplate"]=[&]() {
    json return_PWRyfmh=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParametersTemplate);}();
result["members"]["videoSession"]=[&]() {
    json return_iWgoihH=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
return result;}

    VkVideoSessionParametersCreateInfoKHR deserialize_VkVideoSessionParametersCreateInfoKHR(json name){
        auto result=VkVideoSessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kxtzjfV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kxtzjfV=NULL;
        }
    temp_kxtzjfV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kxtzjfV;}();
[&]() {
result.flags=deserialize_VkVideoSessionParametersCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSessionParametersTemplate=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParametersTemplate"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
return result;}

    json serialize_VkVideoSessionParametersUpdateInfoKHR(VkVideoSessionParametersUpdateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_muHGraZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OEGsbtc=json({});
    
        if (name.pNext==NULL){
            return_OEGsbtc["null"]=true;
            return return_OEGsbtc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["updateSequenceCount"]=[&]() {
    json return_YFfxQbv=json({});
    return serialize_uint32_t(name.updateSequenceCount);}();
return result;}

    VkVideoSessionParametersUpdateInfoKHR deserialize_VkVideoSessionParametersUpdateInfoKHR(json name){
        auto result=VkVideoSessionParametersUpdateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PHxdoxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PHxdoxi=NULL;
        }
    temp_PHxdoxi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PHxdoxi;}();
[&]() {
result.updateSequenceCount=deserialize_uint32_t(name["members"]["updateSequenceCount"]);}();
return result;}

    json serialize_VkVideoBeginCodingInfoKHR(VkVideoBeginCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_isoiVDO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YliizyX=json({});
    
        if (name.pNext==NULL){
            return_YliizyX["null"]=true;
            return return_YliizyX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dXaPeFd=json({});
    return serialize_VkVideoBeginCodingFlagsKHR(name.flags);}();
result["members"]["videoSession"]=[&]() {
    json return_AnxzAiI=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
result["members"]["videoSessionParameters"]=[&]() {
    json return_cLtryBp=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParameters);}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_UpLjlHV=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_GVfwGsF=json({});
    
        if (name.pReferenceSlots==NULL){
            return_GVfwGsF["null"]=true;
            return return_GVfwGsF;
        }
        
        return_GVfwGsF["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_lQXBzpP=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_GVfwGsF["members"][std::to_string(i)].push_back(temp);
        }
        return return_GVfwGsF;
        }();
return result;}

    VkVideoBeginCodingInfoKHR deserialize_VkVideoBeginCodingInfoKHR(json name){
        auto result=VkVideoBeginCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MSpAPDC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MSpAPDC=NULL;
        }
    temp_MSpAPDC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MSpAPDC;}();
[&]() {
result.flags=deserialize_VkVideoBeginCodingFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
[&]() {
result.videoSessionParameters=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParameters"]);}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_cTAEMkJ;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_cTAEMkJ=NULL;
        }
    temp_cTAEMkJ=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int EVTqTwm=0; EVTqTwm < result.referenceSlotCount; EVTqTwm++){
            [&]() {
temp_cTAEMkJ[EVTqTwm]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][EVTqTwm]);}();;
        }
        }();result.pReferenceSlots=temp_cTAEMkJ;}();
return result;}

    json serialize_VkVideoEndCodingInfoKHR(VkVideoEndCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OljbzPl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ywCJzop=json({});
    
        if (name.pNext==NULL){
            return_ywCJzop["null"]=true;
            return return_ywCJzop;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_pENvhhz=json({});
    return serialize_VkVideoEndCodingFlagsKHR(name.flags);}();
return result;}

    VkVideoEndCodingInfoKHR deserialize_VkVideoEndCodingInfoKHR(json name){
        auto result=VkVideoEndCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xhqSpdz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xhqSpdz=NULL;
        }
    temp_xhqSpdz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xhqSpdz;}();
[&]() {
result.flags=deserialize_VkVideoEndCodingFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoCodingControlInfoKHR(VkVideoCodingControlInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RBmlzid=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UvPMdsS=json({});
    
        if (name.pNext==NULL){
            return_UvPMdsS["null"]=true;
            return return_UvPMdsS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qaXOEQr=json({});
    return serialize_VkVideoCodingControlFlagsKHR(name.flags);}();
return result;}

    VkVideoCodingControlInfoKHR deserialize_VkVideoCodingControlInfoKHR(json name){
        auto result=VkVideoCodingControlInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bcDpymt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bcDpymt=NULL;
        }
    temp_bcDpymt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bcDpymt;}();
[&]() {
result.flags=deserialize_VkVideoCodingControlFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkPhysicalDeviceInheritedViewportScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dyVEWag=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nhxBkyh=json({});
    
        if (name.pNext==NULL){
            return_nhxBkyh["null"]=true;
            return return_nhxBkyh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inheritedViewportScissor2D"]=[&]() {
    json return_yyhMCmX=json({});
    return_yyhMCmX=[&]() {
    json return_cadeBIf=json({});
    return serialize_uint32_t(name.inheritedViewportScissor2D);}();return return_yyhMCmX;}();
return result;}

    VkPhysicalDeviceInheritedViewportScissorFeaturesNV deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceInheritedViewportScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inheritedViewportScissor2D=deserialize_uint32_t(name["members"]["inheritedViewportScissor2D"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceViewportScissorInfoNV(VkCommandBufferInheritanceViewportScissorInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xHcXQye=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CjsYVvw=json({});
    
        if (name.pNext==NULL){
            return_CjsYVvw["null"]=true;
            return return_CjsYVvw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportScissor2D"]=[&]() {
    json return_adyEKrB=json({});
    return_adyEKrB=[&]() {
    json return_wTymSco=json({});
    return serialize_uint32_t(name.viewportScissor2D);}();return return_adyEKrB;}();
result["members"]["viewportDepthCount"]=[&]() {
    json return_eOLEswd=json({});
    return serialize_uint32_t(name.viewportDepthCount);}();
result["members"]["pViewportDepths"]=[&]() {
    json return_jHYoAwt=json({});
    
        if (name.pViewportDepths==NULL){
            return_jHYoAwt["null"]=true;
            return return_jHYoAwt;
        }
        return_jHYoAwt=[&]() {
    json return_PLZiCtE=json({});
    return serialize_VkViewport(*name.pViewportDepths);}();
return return_jHYoAwt;}();
return result;}

    VkCommandBufferInheritanceViewportScissorInfoNV deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(json name){
        auto result=VkCommandBufferInheritanceViewportScissorInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LQhWnPX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LQhWnPX=NULL;
        }
    temp_LQhWnPX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LQhWnPX;}();
[&]() {
[&]() {
result.viewportScissor2D=deserialize_uint32_t(name["members"]["viewportScissor2D"]);}();}();
[&]() {
result.viewportDepthCount=deserialize_uint32_t(name["members"]["viewportDepthCount"]);}();
[&]() {
VkViewport* temp_KeQXAJS;[&]() {

        if (name["members"]["pViewportDepths"].contains("null")){
        temp_KeQXAJS=NULL;
        }
    [&]() {
*(temp_KeQXAJS)=deserialize_VkViewport(name["members"]["pViewportDepths"]);}();
}();result.pViewportDepths=temp_KeQXAJS;}();
return result;}

    json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MryGdjG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fVMVjGN=json({});
    
        if (name.pNext==NULL){
            return_fVMVjGN["null"]=true;
            return return_fVMVjGN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcr2plane444Formats"]=[&]() {
    json return_lNWovJe=json({});
    return_lNWovJe=[&]() {
    json return_MAaxzPf=json({});
    return serialize_uint32_t(name.ycbcr2plane444Formats);}();return return_lNWovJe;}();
return result;}

    VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcr2plane444Formats=deserialize_uint32_t(name["members"]["ycbcr2plane444Formats"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(VkPhysicalDeviceProvokingVertexFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_THkmlSs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mzpSpXK=json({});
    
        if (name.pNext==NULL){
            return_mzpSpXK["null"]=true;
            return return_mzpSpXK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexLast"]=[&]() {
    json return_RPNWbBl=json({});
    return_RPNWbBl=[&]() {
    json return_QzzyNda=json({});
    return serialize_uint32_t(name.provokingVertexLast);}();return return_RPNWbBl;}();
result["members"]["transformFeedbackPreservesProvokingVertex"]=[&]() {
    json return_TfAQVyH=json({});
    return_TfAQVyH=[&]() {
    json return_WphNUqW=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesProvokingVertex);}();return return_TfAQVyH;}();
return result;}

    VkPhysicalDeviceProvokingVertexFeaturesEXT deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexLast=deserialize_uint32_t(name["members"]["provokingVertexLast"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(VkPhysicalDeviceProvokingVertexPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WLQSAzn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QAWfZMR=json({});
    
        if (name.pNext==NULL){
            return_QAWfZMR["null"]=true;
            return return_QAWfZMR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexModePerPipeline"]=[&]() {
    json return_NAiHeSU=json({});
    return_NAiHeSU=[&]() {
    json return_yFFkvsu=json({});
    return serialize_uint32_t(name.provokingVertexModePerPipeline);}();return return_NAiHeSU;}();
result["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]=[&]() {
    json return_dUkYenO=json({});
    return_dUkYenO=[&]() {
    json return_esAfZRT=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesTriangleFanProvokingVertex);}();return return_dUkYenO;}();
return result;}

    VkPhysicalDeviceProvokingVertexPropertiesEXT deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexModePerPipeline=deserialize_uint32_t(name["members"]["provokingVertexModePerPipeline"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesTriangleFanProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WZHFNlf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zYlfOch=json({});
    
        if (name.pNext==NULL){
            return_zYlfOch["null"]=true;
            return return_zYlfOch;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexMode"]=[&]() {
    json return_nrOYuZw=json({});
    return serialize_VkProvokingVertexModeEXT(name.provokingVertexMode);}();
return result;}

    VkPipelineRasterizationProvokingVertexStateCreateInfoEXT deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationProvokingVertexStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eYdgKlr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eYdgKlr=NULL;
        }
    temp_eYdgKlr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eYdgKlr;}();
[&]() {
result.provokingVertexMode=deserialize_VkProvokingVertexModeEXT(name["members"]["provokingVertexMode"]);}();
return result;}

    json serialize_VkCuModuleCreateInfoNVX(VkCuModuleCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WTSOivY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sbUWPdo=json({});
    
        if (name.pNext==NULL){
            return_sbUWPdo["null"]=true;
            return return_sbUWPdo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_lfxYUrf=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_jEbWNTJ=json({});
    
        if (name.pData==NULL){
            return_jEbWNTJ["null"]=true;
            return return_jEbWNTJ;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkCuModuleCreateInfoNVX deserialize_VkCuModuleCreateInfoNVX(json name){
        auto result=VkCuModuleCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OhEIafZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OhEIafZ=NULL;
        }
    temp_OhEIafZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OhEIafZ;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_gDZwSaA;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_gDZwSaA=NULL;
        }
    temp_gDZwSaA=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_gDZwSaA;}();
return result;}

    json serialize_VkCuFunctionCreateInfoNVX(VkCuFunctionCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CkmTVjf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CaVOKWl=json({});
    
        if (name.pNext==NULL){
            return_CaVOKWl["null"]=true;
            return return_CaVOKWl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["module"]=[&]() {
    json return_wNSNPPT=json({});
    return serialize_VkCuModuleNVX(name.module);}();
result["members"]["pName"]=[&]() {
    json return_jHRcMKQ=json({});
    
        if (name.pName==NULL){
            return_jHRcMKQ["null"]=true;
            return return_jHRcMKQ;
        }
        return serialize_char_p(name.pName);
}();
return result;}

    VkCuFunctionCreateInfoNVX deserialize_VkCuFunctionCreateInfoNVX(json name){
        auto result=VkCuFunctionCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pdKseGa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pdKseGa=NULL;
        }
    temp_pdKseGa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pdKseGa;}();
[&]() {
result.module=deserialize_VkCuModuleNVX(name["members"]["module"]);}();
[&]() {
char* temp_CJDoiTi;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_CJDoiTi=NULL;
        }
    temp_CJDoiTi=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_CJDoiTi;}();
return result;}

    json serialize_VkCuLaunchInfoNVX(VkCuLaunchInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gPPkIVO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GqmTflF=json({});
    
        if (name.pNext==NULL){
            return_GqmTflF["null"]=true;
            return return_GqmTflF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["function"]=[&]() {
    json return_BJiIuGa=json({});
    return serialize_VkCuFunctionNVX(name.function);}();
result["members"]["gridDimX"]=[&]() {
    json return_NFilAlv=json({});
    return serialize_uint32_t(name.gridDimX);}();
result["members"]["gridDimY"]=[&]() {
    json return_QzTmIaK=json({});
    return serialize_uint32_t(name.gridDimY);}();
result["members"]["gridDimZ"]=[&]() {
    json return_sEXKcwk=json({});
    return serialize_uint32_t(name.gridDimZ);}();
result["members"]["blockDimX"]=[&]() {
    json return_QMEUjzy=json({});
    return serialize_uint32_t(name.blockDimX);}();
result["members"]["blockDimY"]=[&]() {
    json return_XRJcrPb=json({});
    return serialize_uint32_t(name.blockDimY);}();
result["members"]["blockDimZ"]=[&]() {
    json return_LOnFIfi=json({});
    return serialize_uint32_t(name.blockDimZ);}();
result["members"]["sharedMemBytes"]=[&]() {
    json return_FxtlFbA=json({});
    return serialize_uint32_t(name.sharedMemBytes);}();
result["members"]["paramCount"]=[&]() {
    json return_FKPFnXz=json({});
    return serialize_size_t(name.paramCount);}();
result["members"]["pParams"]=[&]() {
    json return_IeOELKV=json({});
    
        if (name.pParams==NULL){
            return_IeOELKV["null"]=true;
            return return_IeOELKV;
        }
        
        return_IeOELKV["members"]={};
        for(int i=0; i < name.paramCount; i++){
            json temp;
            temp=[&]() {
    json return_KFrHZOl=json({});
    
        if (name.pParams[i]==NULL){
            return_KFrHZOl["null"]=true;
            return return_KFrHZOl;
        }
        return serialize_void_p(name.pParams[i]);
}();
            return_IeOELKV["members"][std::to_string(i)].push_back(temp);
        }
        return return_IeOELKV;
        }();
result["members"]["extraCount"]=[&]() {
    json return_ywkczmW=json({});
    return serialize_size_t(name.extraCount);}();
result["members"]["pExtras"]=[&]() {
    json return_MJwARyI=json({});
    
        if (name.pExtras==NULL){
            return_MJwARyI["null"]=true;
            return return_MJwARyI;
        }
        
        return_MJwARyI["members"]={};
        for(int i=0; i < name.extraCount; i++){
            json temp;
            temp=[&]() {
    json return_laaYQyG=json({});
    
        if (name.pExtras[i]==NULL){
            return_laaYQyG["null"]=true;
            return return_laaYQyG;
        }
        return serialize_void_p(name.pExtras[i]);
}();
            return_MJwARyI["members"][std::to_string(i)].push_back(temp);
        }
        return return_MJwARyI;
        }();
return result;}

    VkCuLaunchInfoNVX deserialize_VkCuLaunchInfoNVX(json name){
        auto result=VkCuLaunchInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BWDdufT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BWDdufT=NULL;
        }
    temp_BWDdufT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BWDdufT;}();
[&]() {
result.function=deserialize_VkCuFunctionNVX(name["members"]["function"]);}();
[&]() {
result.gridDimX=deserialize_uint32_t(name["members"]["gridDimX"]);}();
[&]() {
result.gridDimY=deserialize_uint32_t(name["members"]["gridDimY"]);}();
[&]() {
result.gridDimZ=deserialize_uint32_t(name["members"]["gridDimZ"]);}();
[&]() {
result.blockDimX=deserialize_uint32_t(name["members"]["blockDimX"]);}();
[&]() {
result.blockDimY=deserialize_uint32_t(name["members"]["blockDimY"]);}();
[&]() {
result.blockDimZ=deserialize_uint32_t(name["members"]["blockDimZ"]);}();
[&]() {
result.sharedMemBytes=deserialize_uint32_t(name["members"]["sharedMemBytes"]);}();
[&]() {
result.paramCount=deserialize_size_t(name["members"]["paramCount"]);}();
[&]() {
void** temp_ryPWmcd;[&]() {

        if (name["members"]["pParams"].contains("null")){
        temp_ryPWmcd=NULL;
        }
    temp_ryPWmcd=(void**)malloc(result.paramCount*sizeof(void*));
        for (int UhoLVxH=0; UhoLVxH < result.paramCount; UhoLVxH++){
            [&]() {

        if (name["members"]["pParams"]["members"][UhoLVxH].contains("null")){
        temp_ryPWmcd[UhoLVxH]=NULL;
        }
    temp_ryPWmcd[UhoLVxH]=deserialize_void_p(name["members"]["pParams"]["members"][UhoLVxH]);
}();;
        }
        }();result.pParams=temp_ryPWmcd;}();
[&]() {
result.extraCount=deserialize_size_t(name["members"]["extraCount"]);}();
[&]() {
void** temp_NuwQUTd;[&]() {

        if (name["members"]["pExtras"].contains("null")){
        temp_NuwQUTd=NULL;
        }
    temp_NuwQUTd=(void**)malloc(result.extraCount*sizeof(void*));
        for (int VgwyEeT=0; VgwyEeT < result.extraCount; VgwyEeT++){
            [&]() {

        if (name["members"]["pExtras"]["members"][VgwyEeT].contains("null")){
        temp_NuwQUTd[VgwyEeT]=NULL;
        }
    temp_NuwQUTd[VgwyEeT]=deserialize_void_p(name["members"]["pExtras"]["members"][VgwyEeT]);
}();;
        }
        }();result.pExtras=temp_NuwQUTd;}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkPhysicalDeviceDescriptorBufferFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xacApbf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jjlplsf=json({});
    
        if (name.pNext==NULL){
            return_jjlplsf["null"]=true;
            return return_jjlplsf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorBuffer"]=[&]() {
    json return_tqOjAoE=json({});
    return_tqOjAoE=[&]() {
    json return_KMdntBd=json({});
    return serialize_uint32_t(name.descriptorBuffer);}();return return_tqOjAoE;}();
result["members"]["descriptorBufferCaptureReplay"]=[&]() {
    json return_roxfSyl=json({});
    return_roxfSyl=[&]() {
    json return_iGTiUrJ=json({});
    return serialize_uint32_t(name.descriptorBufferCaptureReplay);}();return return_roxfSyl;}();
result["members"]["descriptorBufferImageLayoutIgnored"]=[&]() {
    json return_nJGhHIC=json({});
    return_nJGhHIC=[&]() {
    json return_pLGksKV=json({});
    return serialize_uint32_t(name.descriptorBufferImageLayoutIgnored);}();return return_nJGhHIC;}();
result["members"]["descriptorBufferPushDescriptors"]=[&]() {
    json return_UKZILBg=json({});
    return_UKZILBg=[&]() {
    json return_BgnCjqJ=json({});
    return serialize_uint32_t(name.descriptorBufferPushDescriptors);}();return return_UKZILBg;}();
return result;}

    VkPhysicalDeviceDescriptorBufferFeaturesEXT deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorBuffer=deserialize_uint32_t(name["members"]["descriptorBuffer"]);}();}();
[&]() {
[&]() {
result.descriptorBufferCaptureReplay=deserialize_uint32_t(name["members"]["descriptorBufferCaptureReplay"]);}();}();
[&]() {
[&]() {
result.descriptorBufferImageLayoutIgnored=deserialize_uint32_t(name["members"]["descriptorBufferImageLayoutIgnored"]);}();}();
[&]() {
[&]() {
result.descriptorBufferPushDescriptors=deserialize_uint32_t(name["members"]["descriptorBufferPushDescriptors"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkPhysicalDeviceDescriptorBufferPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_exHfDgh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MEXVsow=json({});
    
        if (name.pNext==NULL){
            return_MEXVsow["null"]=true;
            return return_MEXVsow;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorSingleArray"]=[&]() {
    json return_xuDDXmt=json({});
    return_xuDDXmt=[&]() {
    json return_cyBiFYP=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorSingleArray);}();return return_xuDDXmt;}();
result["members"]["bufferlessPushDescriptors"]=[&]() {
    json return_BiFJWzI=json({});
    return_BiFJWzI=[&]() {
    json return_XDSNklu=json({});
    return serialize_uint32_t(name.bufferlessPushDescriptors);}();return return_BiFJWzI;}();
result["members"]["allowSamplerImageViewPostSubmitCreation"]=[&]() {
    json return_ODHkSfX=json({});
    return_ODHkSfX=[&]() {
    json return_GgGNBUK=json({});
    return serialize_uint32_t(name.allowSamplerImageViewPostSubmitCreation);}();return return_ODHkSfX;}();
result["members"]["descriptorBufferOffsetAlignment"]=[&]() {
    json return_YCQKZNC=json({});
    return_YCQKZNC=[&]() {
    json return_RrhuMqP=json({});
    return serialize_uint64_t(name.descriptorBufferOffsetAlignment);}();return return_YCQKZNC;}();
result["members"]["maxDescriptorBufferBindings"]=[&]() {
    json return_uLBxCEc=json({});
    return serialize_uint32_t(name.maxDescriptorBufferBindings);}();
result["members"]["maxResourceDescriptorBufferBindings"]=[&]() {
    json return_rmfSjIU=json({});
    return serialize_uint32_t(name.maxResourceDescriptorBufferBindings);}();
result["members"]["maxSamplerDescriptorBufferBindings"]=[&]() {
    json return_RtvtOIE=json({});
    return serialize_uint32_t(name.maxSamplerDescriptorBufferBindings);}();
result["members"]["maxEmbeddedImmutableSamplerBindings"]=[&]() {
    json return_WPrPrYy=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplerBindings);}();
result["members"]["maxEmbeddedImmutableSamplers"]=[&]() {
    json return_CngOHMM=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplers);}();
result["members"]["bufferCaptureReplayDescriptorDataSize"]=[&]() {
    json return_gYnSAkQ=json({});
    return serialize_size_t(name.bufferCaptureReplayDescriptorDataSize);}();
result["members"]["imageCaptureReplayDescriptorDataSize"]=[&]() {
    json return_UdMWJXU=json({});
    return serialize_size_t(name.imageCaptureReplayDescriptorDataSize);}();
result["members"]["imageViewCaptureReplayDescriptorDataSize"]=[&]() {
    json return_CXGlwFM=json({});
    return serialize_size_t(name.imageViewCaptureReplayDescriptorDataSize);}();
result["members"]["samplerCaptureReplayDescriptorDataSize"]=[&]() {
    json return_uDvEaGb=json({});
    return serialize_size_t(name.samplerCaptureReplayDescriptorDataSize);}();
result["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]=[&]() {
    json return_NLOMeBS=json({});
    return serialize_size_t(name.accelerationStructureCaptureReplayDescriptorDataSize);}();
result["members"]["samplerDescriptorSize"]=[&]() {
    json return_aWMnXPy=json({});
    return serialize_size_t(name.samplerDescriptorSize);}();
result["members"]["combinedImageSamplerDescriptorSize"]=[&]() {
    json return_FFLXxBm=json({});
    return serialize_size_t(name.combinedImageSamplerDescriptorSize);}();
result["members"]["sampledImageDescriptorSize"]=[&]() {
    json return_FkXOFZc=json({});
    return serialize_size_t(name.sampledImageDescriptorSize);}();
result["members"]["storageImageDescriptorSize"]=[&]() {
    json return_QZwXOJn=json({});
    return serialize_size_t(name.storageImageDescriptorSize);}();
result["members"]["uniformTexelBufferDescriptorSize"]=[&]() {
    json return_TWFQjZP=json({});
    return serialize_size_t(name.uniformTexelBufferDescriptorSize);}();
result["members"]["robustUniformTexelBufferDescriptorSize"]=[&]() {
    json return_NAzzIxZ=json({});
    return serialize_size_t(name.robustUniformTexelBufferDescriptorSize);}();
result["members"]["storageTexelBufferDescriptorSize"]=[&]() {
    json return_avNOMPm=json({});
    return serialize_size_t(name.storageTexelBufferDescriptorSize);}();
result["members"]["robustStorageTexelBufferDescriptorSize"]=[&]() {
    json return_iGAicUM=json({});
    return serialize_size_t(name.robustStorageTexelBufferDescriptorSize);}();
result["members"]["uniformBufferDescriptorSize"]=[&]() {
    json return_SjvCuYU=json({});
    return serialize_size_t(name.uniformBufferDescriptorSize);}();
result["members"]["robustUniformBufferDescriptorSize"]=[&]() {
    json return_uWSqdjO=json({});
    return serialize_size_t(name.robustUniformBufferDescriptorSize);}();
result["members"]["storageBufferDescriptorSize"]=[&]() {
    json return_XlSdZJI=json({});
    return serialize_size_t(name.storageBufferDescriptorSize);}();
result["members"]["robustStorageBufferDescriptorSize"]=[&]() {
    json return_dkPxxcK=json({});
    return serialize_size_t(name.robustStorageBufferDescriptorSize);}();
result["members"]["inputAttachmentDescriptorSize"]=[&]() {
    json return_gyTsgkM=json({});
    return serialize_size_t(name.inputAttachmentDescriptorSize);}();
result["members"]["accelerationStructureDescriptorSize"]=[&]() {
    json return_CIyYXIw=json({});
    return serialize_size_t(name.accelerationStructureDescriptorSize);}();
result["members"]["maxSamplerDescriptorBufferRange"]=[&]() {
    json return_xAYdzDq=json({});
    return_xAYdzDq=[&]() {
    json return_LtdNvuo=json({});
    return serialize_uint64_t(name.maxSamplerDescriptorBufferRange);}();return return_xAYdzDq;}();
result["members"]["maxResourceDescriptorBufferRange"]=[&]() {
    json return_FtBpMRM=json({});
    return_FtBpMRM=[&]() {
    json return_OjPFscr=json({});
    return serialize_uint64_t(name.maxResourceDescriptorBufferRange);}();return return_FtBpMRM;}();
result["members"]["samplerDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_LfoxZRT=json({});
    return_LfoxZRT=[&]() {
    json return_EPGVaIO=json({});
    return serialize_uint64_t(name.samplerDescriptorBufferAddressSpaceSize);}();return return_LfoxZRT;}();
result["members"]["resourceDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_SbGyEcM=json({});
    return_SbGyEcM=[&]() {
    json return_hCWIyeY=json({});
    return serialize_uint64_t(name.resourceDescriptorBufferAddressSpaceSize);}();return return_SbGyEcM;}();
result["members"]["descriptorBufferAddressSpaceSize"]=[&]() {
    json return_zOxtDRF=json({});
    return_zOxtDRF=[&]() {
    json return_XYABtlD=json({});
    return serialize_uint64_t(name.descriptorBufferAddressSpaceSize);}();return return_zOxtDRF;}();
return result;}

    VkPhysicalDeviceDescriptorBufferPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.combinedImageSamplerDescriptorSingleArray=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorSingleArray"]);}();}();
[&]() {
[&]() {
result.bufferlessPushDescriptors=deserialize_uint32_t(name["members"]["bufferlessPushDescriptors"]);}();}();
[&]() {
[&]() {
result.allowSamplerImageViewPostSubmitCreation=deserialize_uint32_t(name["members"]["allowSamplerImageViewPostSubmitCreation"]);}();}();
[&]() {
[&]() {
result.descriptorBufferOffsetAlignment=deserialize_uint64_t(name["members"]["descriptorBufferOffsetAlignment"]);}();}();
[&]() {
result.maxDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxDescriptorBufferBindings"]);}();
[&]() {
result.maxResourceDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxResourceDescriptorBufferBindings"]);}();
[&]() {
result.maxSamplerDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxSamplerDescriptorBufferBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplerBindings=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplerBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplers=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplers"]);}();
[&]() {
result.bufferCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["bufferCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageViewCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageViewCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["samplerCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.accelerationStructureCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerDescriptorSize=deserialize_size_t(name["members"]["samplerDescriptorSize"]);}();
[&]() {
result.combinedImageSamplerDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDescriptorSize"]);}();
[&]() {
result.sampledImageDescriptorSize=deserialize_size_t(name["members"]["sampledImageDescriptorSize"]);}();
[&]() {
result.storageImageDescriptorSize=deserialize_size_t(name["members"]["storageImageDescriptorSize"]);}();
[&]() {
result.uniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["uniformTexelBufferDescriptorSize"]);}();
[&]() {
result.robustUniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformTexelBufferDescriptorSize"]);}();
[&]() {
result.storageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["storageTexelBufferDescriptorSize"]);}();
[&]() {
result.robustStorageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageTexelBufferDescriptorSize"]);}();
[&]() {
result.uniformBufferDescriptorSize=deserialize_size_t(name["members"]["uniformBufferDescriptorSize"]);}();
[&]() {
result.robustUniformBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformBufferDescriptorSize"]);}();
[&]() {
result.storageBufferDescriptorSize=deserialize_size_t(name["members"]["storageBufferDescriptorSize"]);}();
[&]() {
result.robustStorageBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageBufferDescriptorSize"]);}();
[&]() {
result.inputAttachmentDescriptorSize=deserialize_size_t(name["members"]["inputAttachmentDescriptorSize"]);}();
[&]() {
result.accelerationStructureDescriptorSize=deserialize_size_t(name["members"]["accelerationStructureDescriptorSize"]);}();
[&]() {
[&]() {
result.maxSamplerDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxSamplerDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.maxResourceDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxResourceDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.samplerDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["samplerDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.resourceDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["resourceDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.descriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["descriptorBufferAddressSpaceSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QTjUaLm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jFXAFil=json({});
    
        if (name.pNext==NULL){
            return_jFXAFil["null"]=true;
            return return_jFXAFil;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDensityMapDescriptorSize"]=[&]() {
    json return_waiLOBd=json({});
    return serialize_size_t(name.combinedImageSamplerDensityMapDescriptorSize);}();
return result;}

    VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDensityMapDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDensityMapDescriptorSize"]);}();
return result;}

    json serialize_VkDescriptorAddressInfoEXT(VkDescriptorAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YtGaoZy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NyMmwsA=json({});
    
        if (name.pNext==NULL){
            return_NyMmwsA["null"]=true;
            return return_NyMmwsA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_VtbOIgR=json({});
    return_VtbOIgR=[&]() {
    json return_jVKwjlu=json({});
    return serialize_uint64_t(name.address);}();return return_VtbOIgR;}();
result["members"]["range"]=[&]() {
    json return_xZjNzKj=json({});
    return_xZjNzKj=[&]() {
    json return_sPdLWPx=json({});
    return serialize_uint64_t(name.range);}();return return_xZjNzKj;}();
result["members"]["format"]=[&]() {
    json return_xqCwwaC=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkDescriptorAddressInfoEXT deserialize_VkDescriptorAddressInfoEXT(json name){
        auto result=VkDescriptorAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingInfoEXT(VkDescriptorBufferBindingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ttIdWZQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZZVNLYm=json({});
    
        if (name.pNext==NULL){
            return_ZZVNLYm["null"]=true;
            return return_ZZVNLYm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_cpUWnnA=json({});
    return_cpUWnnA=[&]() {
    json return_jZBRUoh=json({});
    return serialize_uint64_t(name.address);}();return return_cpUWnnA;}();
result["members"]["usage"]=[&]() {
    json return_vxGcgTu=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
return result;}

    VkDescriptorBufferBindingInfoEXT deserialize_VkDescriptorBufferBindingInfoEXT(json name){
        auto result=VkDescriptorBufferBindingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vNdcmcd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mplFzPb=json({});
    
        if (name.pNext==NULL){
            return_mplFzPb["null"]=true;
            return return_mplFzPb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_AGjCjFY=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDescriptorBufferBindingPushDescriptorBufferHandleEXT deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(json name){
        auto result=VkDescriptorBufferBindingPushDescriptorBufferHandleEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDescriptorDataEXT(VkDescriptorDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pSampler"]=[&]() {
    json return_KMGWkNj=json({});
    
        if (name.pSampler==NULL){
            return_KMGWkNj["null"]=true;
            return return_KMGWkNj;
        }
        return_KMGWkNj=[&]() {
    json return_KYKXGDJ=json({});
    return serialize_VkSampler(*name.pSampler);}();
return return_KMGWkNj;}();
result["members"]["pCombinedImageSampler"]=[&]() {
    json return_IBCMJKt=json({});
    
        if (name.pCombinedImageSampler==NULL){
            return_IBCMJKt["null"]=true;
            return return_IBCMJKt;
        }
        return_IBCMJKt=[&]() {
    json return_jZtOWqa=json({});
    return serialize_VkDescriptorImageInfo(*name.pCombinedImageSampler);}();
return return_IBCMJKt;}();
result["members"]["pInputAttachmentImage"]=[&]() {
    json return_jynuKMc=json({});
    
        if (name.pInputAttachmentImage==NULL){
            return_jynuKMc["null"]=true;
            return return_jynuKMc;
        }
        return_jynuKMc=[&]() {
    json return_ErCjIgM=json({});
    return serialize_VkDescriptorImageInfo(*name.pInputAttachmentImage);}();
return return_jynuKMc;}();
result["members"]["pSampledImage"]=[&]() {
    json return_mSzEsHx=json({});
    
        if (name.pSampledImage==NULL){
            return_mSzEsHx["null"]=true;
            return return_mSzEsHx;
        }
        return_mSzEsHx=[&]() {
    json return_VdLZRUy=json({});
    return serialize_VkDescriptorImageInfo(*name.pSampledImage);}();
return return_mSzEsHx;}();
result["members"]["pStorageImage"]=[&]() {
    json return_UDNSAsI=json({});
    
        if (name.pStorageImage==NULL){
            return_UDNSAsI["null"]=true;
            return return_UDNSAsI;
        }
        return_UDNSAsI=[&]() {
    json return_KeSYFfw=json({});
    return serialize_VkDescriptorImageInfo(*name.pStorageImage);}();
return return_UDNSAsI;}();
result["members"]["pUniformTexelBuffer"]=[&]() {
    json return_zZVEKNF=json({});
    
        if (name.pUniformTexelBuffer==NULL){
            return_zZVEKNF["null"]=true;
            return return_zZVEKNF;
        }
        return_zZVEKNF=[&]() {
    json return_oKnreUB=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformTexelBuffer);}();
return return_zZVEKNF;}();
result["members"]["pStorageTexelBuffer"]=[&]() {
    json return_HtFlXAo=json({});
    
        if (name.pStorageTexelBuffer==NULL){
            return_HtFlXAo["null"]=true;
            return return_HtFlXAo;
        }
        return_HtFlXAo=[&]() {
    json return_TVpzQLt=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageTexelBuffer);}();
return return_HtFlXAo;}();
result["members"]["pUniformBuffer"]=[&]() {
    json return_JImJDyo=json({});
    
        if (name.pUniformBuffer==NULL){
            return_JImJDyo["null"]=true;
            return return_JImJDyo;
        }
        return_JImJDyo=[&]() {
    json return_WQBiFRl=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformBuffer);}();
return return_JImJDyo;}();
result["members"]["pStorageBuffer"]=[&]() {
    json return_XTpiSkn=json({});
    
        if (name.pStorageBuffer==NULL){
            return_XTpiSkn["null"]=true;
            return return_XTpiSkn;
        }
        return_XTpiSkn=[&]() {
    json return_MCqfKSx=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageBuffer);}();
return return_XTpiSkn;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_sHoKlKE=json({});
    return_sHoKlKE=[&]() {
    json return_mtGtqNB=json({});
    return serialize_uint64_t(name.accelerationStructure);}();return return_sHoKlKE;}();
return result;}

    VkDescriptorDataEXT deserialize_VkDescriptorDataEXT(json name){
        auto result=VkDescriptorDataEXT();
    
[&]() {
VkSampler* temp_UpitYRU;[&]() {

        if (name["members"]["pSampler"].contains("null")){
        temp_UpitYRU=NULL;
        }
    [&]() {
*(temp_UpitYRU)=deserialize_VkSampler(name["members"]["pSampler"]);}();
}();result.pSampler=temp_UpitYRU;}();
[&]() {
VkDescriptorImageInfo* temp_JJgSxlf;[&]() {

        if (name["members"]["pCombinedImageSampler"].contains("null")){
        temp_JJgSxlf=NULL;
        }
    [&]() {
*(temp_JJgSxlf)=deserialize_VkDescriptorImageInfo(name["members"]["pCombinedImageSampler"]);}();
}();result.pCombinedImageSampler=temp_JJgSxlf;}();
[&]() {
VkDescriptorImageInfo* temp_nSNjfjC;[&]() {

        if (name["members"]["pInputAttachmentImage"].contains("null")){
        temp_nSNjfjC=NULL;
        }
    [&]() {
*(temp_nSNjfjC)=deserialize_VkDescriptorImageInfo(name["members"]["pInputAttachmentImage"]);}();
}();result.pInputAttachmentImage=temp_nSNjfjC;}();
[&]() {
VkDescriptorImageInfo* temp_IrbLuBW;[&]() {

        if (name["members"]["pSampledImage"].contains("null")){
        temp_IrbLuBW=NULL;
        }
    [&]() {
*(temp_IrbLuBW)=deserialize_VkDescriptorImageInfo(name["members"]["pSampledImage"]);}();
}();result.pSampledImage=temp_IrbLuBW;}();
[&]() {
VkDescriptorImageInfo* temp_eUpFzKi;[&]() {

        if (name["members"]["pStorageImage"].contains("null")){
        temp_eUpFzKi=NULL;
        }
    [&]() {
*(temp_eUpFzKi)=deserialize_VkDescriptorImageInfo(name["members"]["pStorageImage"]);}();
}();result.pStorageImage=temp_eUpFzKi;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_SvQxPcJ;[&]() {

        if (name["members"]["pUniformTexelBuffer"].contains("null")){
        temp_SvQxPcJ=NULL;
        }
    [&]() {
*(temp_SvQxPcJ)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformTexelBuffer"]);}();
}();result.pUniformTexelBuffer=temp_SvQxPcJ;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_nUWQYRT;[&]() {

        if (name["members"]["pStorageTexelBuffer"].contains("null")){
        temp_nUWQYRT=NULL;
        }
    [&]() {
*(temp_nUWQYRT)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageTexelBuffer"]);}();
}();result.pStorageTexelBuffer=temp_nUWQYRT;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_BOEAvFd;[&]() {

        if (name["members"]["pUniformBuffer"].contains("null")){
        temp_BOEAvFd=NULL;
        }
    [&]() {
*(temp_BOEAvFd)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformBuffer"]);}();
}();result.pUniformBuffer=temp_BOEAvFd;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_XTggNOv;[&]() {

        if (name["members"]["pStorageBuffer"].contains("null")){
        temp_XTggNOv=NULL;
        }
    [&]() {
*(temp_XTggNOv)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageBuffer"]);}();
}();result.pStorageBuffer=temp_XTggNOv;}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint64_t(name["members"]["accelerationStructure"]);}();}();
return result;}

    json serialize_VkDescriptorGetInfoEXT(VkDescriptorGetInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jryyCOa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nGgNvMN=json({});
    
        if (name.pNext==NULL){
            return_nGgNvMN["null"]=true;
            return return_nGgNvMN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_VtuGyNm=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["data"]=[&]() {
    json return_qaQZdCi=json({});
    return serialize_VkDescriptorDataEXT(name.data);}();
return result;}

    VkDescriptorGetInfoEXT deserialize_VkDescriptorGetInfoEXT(json name){
        auto result=VkDescriptorGetInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kZSkyjz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kZSkyjz=NULL;
        }
    temp_kZSkyjz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kZSkyjz;}();
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkDescriptorDataEXT(name["members"]["data"]);}();
return result;}

    json serialize_VkBufferCaptureDescriptorDataInfoEXT(VkBufferCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fIBwzJi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VHHqify=json({});
    
        if (name.pNext==NULL){
            return_VHHqify["null"]=true;
            return return_VHHqify;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_yGwOZif=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferCaptureDescriptorDataInfoEXT deserialize_VkBufferCaptureDescriptorDataInfoEXT(json name){
        auto result=VkBufferCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QxEmiRK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QxEmiRK=NULL;
        }
    temp_QxEmiRK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QxEmiRK;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageCaptureDescriptorDataInfoEXT(VkImageCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fcTipey=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SuBcTms=json({});
    
        if (name.pNext==NULL){
            return_SuBcTms["null"]=true;
            return return_SuBcTms;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_cukZfJL=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageCaptureDescriptorDataInfoEXT deserialize_VkImageCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MZRUCyj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MZRUCyj=NULL;
        }
    temp_MZRUCyj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MZRUCyj;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageViewCaptureDescriptorDataInfoEXT(VkImageViewCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VCzIOcR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rpgTAzf=json({});
    
        if (name.pNext==NULL){
            return_rpgTAzf["null"]=true;
            return return_rpgTAzf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_GehjeQd=json({});
    return serialize_VkImageView(name.imageView);}();
return result;}

    VkImageViewCaptureDescriptorDataInfoEXT deserialize_VkImageViewCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageViewCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xgJUYZh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xgJUYZh=NULL;
        }
    temp_xgJUYZh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xgJUYZh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
return result;}

    json serialize_VkSamplerCaptureDescriptorDataInfoEXT(VkSamplerCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yZWxujP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PFKGQJh=json({});
    
        if (name.pNext==NULL){
            return_PFKGQJh["null"]=true;
            return return_PFKGQJh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampler"]=[&]() {
    json return_hoQsMtp=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkSamplerCaptureDescriptorDataInfoEXT deserialize_VkSamplerCaptureDescriptorDataInfoEXT(json name){
        auto result=VkSamplerCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HFTqcYx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HFTqcYx=NULL;
        }
    temp_HFTqcYx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HFTqcYx;}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkAccelerationStructureCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wZBzyzy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oVxIdCg=json({});
    
        if (name.pNext==NULL){
            return_oVxIdCg["null"]=true;
            return return_oVxIdCg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_TAmtBeU=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
result["members"]["accelerationStructureNV"]=[&]() {
    json return_vntgLZC=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructureNV);}();
return result;}

    VkAccelerationStructureCaptureDescriptorDataInfoEXT deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(json name){
        auto result=VkAccelerationStructureCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dylxqjr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dylxqjr=NULL;
        }
    temp_dylxqjr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dylxqjr;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
[&]() {
result.accelerationStructureNV=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructureNV"]);}();
return result;}

    json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkOpaqueCaptureDescriptorDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yZYQKLI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzQRCco=json({});
    
        if (name.pNext==NULL){
            return_EzQRCco["null"]=true;
            return return_EzQRCco;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureDescriptorData"]=[&]() {
    json return_AuHUJZN=json({});
    
        if (name.opaqueCaptureDescriptorData==NULL){
            return_AuHUJZN["null"]=true;
            return return_AuHUJZN;
        }
        return serialize_void_p(name.opaqueCaptureDescriptorData);
}();
return result;}

    VkOpaqueCaptureDescriptorDataCreateInfoEXT deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(json name){
        auto result=VkOpaqueCaptureDescriptorDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TxrHzIx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TxrHzIx=NULL;
        }
    temp_TxrHzIx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TxrHzIx;}();
[&]() {
void* temp_fQPYwcy;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_fQPYwcy=NULL;
        }
    temp_fQPYwcy=deserialize_void_p(name["members"]["opaqueCaptureDescriptorData"]);
}();result.opaqueCaptureDescriptorData=temp_fQPYwcy;}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(VkPhysicalDeviceShaderIntegerDotProductFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dzZSnIo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hdanOLD=json({});
    
        if (name.pNext==NULL){
            return_hdanOLD["null"]=true;
            return return_hdanOLD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_CqpKXXE=json({});
    return_CqpKXXE=[&]() {
    json return_lcKcRYI=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_CqpKXXE;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeatures deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eUnvsCQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jwmoUQf=json({});
    
        if (name.pNext==NULL){
            return_jwmoUQf["null"]=true;
            return return_jwmoUQf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_YvDkBcM=json({});
    return_YvDkBcM=[&]() {
    json return_ktvfcJc=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_YvDkBcM;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(VkPhysicalDeviceShaderIntegerDotProductProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PBZqbvI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QmNSyhH=json({});
    
        if (name.pNext==NULL){
            return_QmNSyhH["null"]=true;
            return return_QmNSyhH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_riwmnlT=json({});
    return_riwmnlT=[&]() {
    json return_XIAdqhl=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_riwmnlT;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_djmWCJf=json({});
    return_djmWCJf=[&]() {
    json return_ReDfNLq=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_djmWCJf;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_EcaJHBx=json({});
    return_EcaJHBx=[&]() {
    json return_NDrbeqr=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_EcaJHBx;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_QfJQplu=json({});
    return_QfJQplu=[&]() {
    json return_WrkQadB=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_QfJQplu;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_spGbgUE=json({});
    return_spGbgUE=[&]() {
    json return_pjLESbw=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_spGbgUE;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_DayckPh=json({});
    return_DayckPh=[&]() {
    json return_kmkbcPc=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_DayckPh;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_GcvubRs=json({});
    return_GcvubRs=[&]() {
    json return_SADUlIu=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_GcvubRs;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_rUaCQhx=json({});
    return_rUaCQhx=[&]() {
    json return_IDnPzsd=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_rUaCQhx;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_ACMbDgO=json({});
    return_ACMbDgO=[&]() {
    json return_ldqwBTM=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_ACMbDgO;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_kzwnmuS=json({});
    return_kzwnmuS=[&]() {
    json return_IrItiYa=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_kzwnmuS;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_mePwDZc=json({});
    return_mePwDZc=[&]() {
    json return_MUFkGgV=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_mePwDZc;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_bUwMaBO=json({});
    return_bUwMaBO=[&]() {
    json return_jkDyUFn=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_bUwMaBO;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_cRIqwAL=json({});
    return_cRIqwAL=[&]() {
    json return_tHOATSY=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_cRIqwAL;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_auIsHqZ=json({});
    return_auIsHqZ=[&]() {
    json return_gMftkiX=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_auIsHqZ;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_erjuwme=json({});
    return_erjuwme=[&]() {
    json return_vXgwpnl=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_erjuwme;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_aYRCTZg=json({});
    return_aYRCTZg=[&]() {
    json return_pdnLoJj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_aYRCTZg;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_UktATrQ=json({});
    return_UktATrQ=[&]() {
    json return_oUUawhf=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_UktATrQ;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_VPAUtzn=json({});
    return_VPAUtzn=[&]() {
    json return_ErEKKge=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_VPAUtzn;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_UozaUje=json({});
    return_UozaUje=[&]() {
    json return_MMFyrHI=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_UozaUje;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_nDedsTZ=json({});
    return_nDedsTZ=[&]() {
    json return_GMVDmpM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_nDedsTZ;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_kTIMFsR=json({});
    return_kTIMFsR=[&]() {
    json return_ZcgSZJv=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_kTIMFsR;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_QHHomfn=json({});
    return_QHHomfn=[&]() {
    json return_WSlbIHt=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_QHHomfn;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_OniGusz=json({});
    return_OniGusz=[&]() {
    json return_dHsKhjK=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_OniGusz;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_WZoHhcf=json({});
    return_WZoHhcf=[&]() {
    json return_uOOpuBi=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_WZoHhcf;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_VIzgWMM=json({});
    return_VIzgWMM=[&]() {
    json return_IMSgZQS=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_VIzgWMM;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_QtDOast=json({});
    return_QtDOast=[&]() {
    json return_WhlwEWw=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_QtDOast;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_aZKmMES=json({});
    return_aZKmMES=[&]() {
    json return_amSGFFw=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_aZKmMES;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_VvXDRCx=json({});
    return_VvXDRCx=[&]() {
    json return_odMWDhR=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_VvXDRCx;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_uhFzOwU=json({});
    return_uhFzOwU=[&]() {
    json return_AAsozAF=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_uhFzOwU;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_dosXjpY=json({});
    return_dosXjpY=[&]() {
    json return_oGKGtYK=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_dosXjpY;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductProperties deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sFPLHVi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVYroBz=json({});
    
        if (name.pNext==NULL){
            return_gVYroBz["null"]=true;
            return return_gVYroBz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_odfznzY=json({});
    return_odfznzY=[&]() {
    json return_IYABeON=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_odfznzY;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_iIPbXTP=json({});
    return_iIPbXTP=[&]() {
    json return_ROAAFNa=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_iIPbXTP;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_FfkqyVl=json({});
    return_FfkqyVl=[&]() {
    json return_OzcOUxs=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_FfkqyVl;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_FRjNrVo=json({});
    return_FRjNrVo=[&]() {
    json return_teHxWxu=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_FRjNrVo;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_xZaKulR=json({});
    return_xZaKulR=[&]() {
    json return_WeWopGi=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_xZaKulR;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_jNJVKzM=json({});
    return_jNJVKzM=[&]() {
    json return_NVrSNXe=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_jNJVKzM;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_EKXeifg=json({});
    return_EKXeifg=[&]() {
    json return_BLAXHze=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_EKXeifg;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_pdjYRoc=json({});
    return_pdjYRoc=[&]() {
    json return_BJTaqLh=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_pdjYRoc;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_RVvSRXS=json({});
    return_RVvSRXS=[&]() {
    json return_AnBsfaJ=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_RVvSRXS;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_GZFdHPY=json({});
    return_GZFdHPY=[&]() {
    json return_AJxUzev=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_GZFdHPY;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_pqjAOaf=json({});
    return_pqjAOaf=[&]() {
    json return_TtIoUFC=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_pqjAOaf;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_jEDKogb=json({});
    return_jEDKogb=[&]() {
    json return_GsZWeep=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_jEDKogb;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_KfDfAWx=json({});
    return_KfDfAWx=[&]() {
    json return_xYNjkjO=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_KfDfAWx;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_waxmLKo=json({});
    return_waxmLKo=[&]() {
    json return_foCakhx=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_waxmLKo;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_QtGaxsC=json({});
    return_QtGaxsC=[&]() {
    json return_ZpedxTl=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_QtGaxsC;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_BhNsRXv=json({});
    return_BhNsRXv=[&]() {
    json return_bTcTqkK=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_BhNsRXv;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_NOozlXT=json({});
    return_NOozlXT=[&]() {
    json return_zppICZl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_NOozlXT;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_LMqeFRq=json({});
    return_LMqeFRq=[&]() {
    json return_SgnDWem=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_LMqeFRq;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_MwrLxxc=json({});
    return_MwrLxxc=[&]() {
    json return_dhWQlXl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_MwrLxxc;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_IvxulfM=json({});
    return_IvxulfM=[&]() {
    json return_xYYpLwb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_IvxulfM;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_iuFjVaI=json({});
    return_iuFjVaI=[&]() {
    json return_oZhdHkJ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_iuFjVaI;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_eUzsvXZ=json({});
    return_eUzsvXZ=[&]() {
    json return_TtbDzUh=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_eUzsvXZ;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_qleTxQX=json({});
    return_qleTxQX=[&]() {
    json return_dKpRDFP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_qleTxQX;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_xkmUvvE=json({});
    return_xkmUvvE=[&]() {
    json return_AYlpNZg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_xkmUvvE;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_jsSMuLj=json({});
    return_jsSMuLj=[&]() {
    json return_qtXpUcm=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_jsSMuLj;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_hDhkOEj=json({});
    return_hDhkOEj=[&]() {
    json return_iZSRQGC=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_hDhkOEj;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_VjRbItV=json({});
    return_VjRbItV=[&]() {
    json return_jrwJMHW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_VjRbItV;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_coVyUyc=json({});
    return_coVyUyc=[&]() {
    json return_IbrCqJd=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_coVyUyc;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_YDyhcMr=json({});
    return_YDyhcMr=[&]() {
    json return_WLzLolM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_YDyhcMr;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_odnHvVV=json({});
    return_odnHvVV=[&]() {
    json return_aLVjtXm=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_odnHvVV;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDrmPropertiesEXT(VkPhysicalDeviceDrmPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UNPPoua=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XzxKaOh=json({});
    
        if (name.pNext==NULL){
            return_XzxKaOh["null"]=true;
            return return_XzxKaOh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hasPrimary"]=[&]() {
    json return_aiMTybI=json({});
    return_aiMTybI=[&]() {
    json return_AYLgTMC=json({});
    return serialize_uint32_t(name.hasPrimary);}();return return_aiMTybI;}();
result["members"]["hasRender"]=[&]() {
    json return_oEyuJRx=json({});
    return_oEyuJRx=[&]() {
    json return_zAlZOZv=json({});
    return serialize_uint32_t(name.hasRender);}();return return_oEyuJRx;}();
result["members"]["primaryMajor"]=[&]() {
    json return_gTPjueJ=json({});
    return serialize_int64_t(name.primaryMajor);}();
result["members"]["primaryMinor"]=[&]() {
    json return_jkmTmJt=json({});
    return serialize_int64_t(name.primaryMinor);}();
result["members"]["renderMajor"]=[&]() {
    json return_NhVDnhl=json({});
    return serialize_int64_t(name.renderMajor);}();
result["members"]["renderMinor"]=[&]() {
    json return_hwpRaHa=json({});
    return serialize_int64_t(name.renderMinor);}();
return result;}

    VkPhysicalDeviceDrmPropertiesEXT deserialize_VkPhysicalDeviceDrmPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDrmPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hasPrimary=deserialize_uint32_t(name["members"]["hasPrimary"]);}();}();
[&]() {
[&]() {
result.hasRender=deserialize_uint32_t(name["members"]["hasRender"]);}();}();
[&]() {
result.primaryMajor=deserialize_int64_t(name["members"]["primaryMajor"]);}();
[&]() {
result.primaryMinor=deserialize_int64_t(name["members"]["primaryMinor"]);}();
[&]() {
result.renderMajor=deserialize_int64_t(name["members"]["renderMajor"]);}();
[&]() {
result.renderMinor=deserialize_int64_t(name["members"]["renderMinor"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QdLZrVA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ejDEIDo=json({});
    
        if (name.pNext==NULL){
            return_ejDEIDo["null"]=true;
            return return_ejDEIDo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_cQCZodR=json({});
    return_cQCZodR=[&]() {
    json return_HSDMxKc=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_cQCZodR;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OFRJqmJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ikLTYby=json({});
    
        if (name.pNext==NULL){
            return_ikLTYby["null"]=true;
            return return_ikLTYby;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_eJxesIy=json({});
    return_eJxesIy=[&]() {
    json return_XntvGzf=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_eJxesIy;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vwpwfxT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bPNjJjI=json({});
    
        if (name.pNext==NULL){
            return_bPNjJjI["null"]=true;
            return return_bPNjJjI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["triStripVertexOrderIndependentOfProvokingVertex"]=[&]() {
    json return_IVPojVF=json({});
    return_IVPojVF=[&]() {
    json return_mojIWWV=json({});
    return serialize_uint32_t(name.triStripVertexOrderIndependentOfProvokingVertex);}();return return_IVPojVF;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.triStripVertexOrderIndependentOfProvokingVertex=deserialize_uint32_t(name["members"]["triStripVertexOrderIndependentOfProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EIYopFG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xIznuUm=json({});
    
        if (name.pNext==NULL){
            return_xIznuUm["null"]=true;
            return return_xIznuUm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMotionBlur"]=[&]() {
    json return_kepghNa=json({});
    return_kepghNa=[&]() {
    json return_YwIVEzU=json({});
    return serialize_uint32_t(name.rayTracingMotionBlur);}();return return_kepghNa;}();
result["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]=[&]() {
    json return_QpnxoFa=json({});
    return_QpnxoFa=[&]() {
    json return_LAslzVS=json({});
    return serialize_uint32_t(name.rayTracingMotionBlurPipelineTraceRaysIndirect);}();return return_QpnxoFa;}();
return result;}

    VkPhysicalDeviceRayTracingMotionBlurFeaturesNV deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingMotionBlurFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMotionBlur=deserialize_uint32_t(name["members"]["rayTracingMotionBlur"]);}();}();
[&]() {
[&]() {
result.rayTracingMotionBlurPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(VkAccelerationStructureGeometryMotionTrianglesDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zFLjQro=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ptuKppA=json({});
    
        if (name.pNext==NULL){
            return_ptuKppA["null"]=true;
            return return_ptuKppA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_AZVAYKi=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
return result;}

    VkAccelerationStructureGeometryMotionTrianglesDataNV deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(json name){
        auto result=VkAccelerationStructureGeometryMotionTrianglesDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zQucMDB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zQucMDB=NULL;
        }
    temp_zQucMDB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zQucMDB;}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInfoNV(VkAccelerationStructureMotionInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MmNMpGu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zVMNaUt=json({});
    
        if (name.pNext==NULL){
            return_zVMNaUt["null"]=true;
            return return_zVMNaUt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInstances"]=[&]() {
    json return_EhgMEui=json({});
    return serialize_uint32_t(name.maxInstances);}();
result["members"]["flags"]=[&]() {
    json return_rQEUzcv=json({});
    return serialize_VkAccelerationStructureMotionInfoFlagsNV(name.flags);}();
return result;}

    VkAccelerationStructureMotionInfoNV deserialize_VkAccelerationStructureMotionInfoNV(json name){
        auto result=VkAccelerationStructureMotionInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EISYnhU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EISYnhU=NULL;
        }
    temp_EISYnhU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EISYnhU;}();
[&]() {
result.maxInstances=deserialize_uint32_t(name["members"]["maxInstances"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInfoFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkSRTDataNV(VkSRTDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sx"]=[&]() {
    json return_tGgnbBl=json({});
    return serialize_float(name.sx);}();
result["members"]["a"]=[&]() {
    json return_EPKSHKI=json({});
    return serialize_float(name.a);}();
result["members"]["b"]=[&]() {
    json return_BdzsiEe=json({});
    return serialize_float(name.b);}();
result["members"]["pvx"]=[&]() {
    json return_tlZfcBm=json({});
    return serialize_float(name.pvx);}();
result["members"]["sy"]=[&]() {
    json return_lGkyhIH=json({});
    return serialize_float(name.sy);}();
result["members"]["c"]=[&]() {
    json return_QwLlCeW=json({});
    return serialize_float(name.c);}();
result["members"]["pvy"]=[&]() {
    json return_YDZYTOW=json({});
    return serialize_float(name.pvy);}();
result["members"]["sz"]=[&]() {
    json return_LPByiFZ=json({});
    return serialize_float(name.sz);}();
result["members"]["pvz"]=[&]() {
    json return_qEQAoIt=json({});
    return serialize_float(name.pvz);}();
result["members"]["qx"]=[&]() {
    json return_cWVvmOK=json({});
    return serialize_float(name.qx);}();
result["members"]["qy"]=[&]() {
    json return_SoCcTyK=json({});
    return serialize_float(name.qy);}();
result["members"]["qz"]=[&]() {
    json return_HFRhSwq=json({});
    return serialize_float(name.qz);}();
result["members"]["qw"]=[&]() {
    json return_JtZxRhE=json({});
    return serialize_float(name.qw);}();
result["members"]["tx"]=[&]() {
    json return_pWzjqeP=json({});
    return serialize_float(name.tx);}();
result["members"]["ty"]=[&]() {
    json return_hLdXaXQ=json({});
    return serialize_float(name.ty);}();
result["members"]["tz"]=[&]() {
    json return_JnADATG=json({});
    return serialize_float(name.tz);}();
return result;}

    VkSRTDataNV deserialize_VkSRTDataNV(json name){
        auto result=VkSRTDataNV();
    
[&]() {
result.sx=deserialize_float(name["members"]["sx"]);}();
[&]() {
result.a=deserialize_float(name["members"]["a"]);}();
[&]() {
result.b=deserialize_float(name["members"]["b"]);}();
[&]() {
result.pvx=deserialize_float(name["members"]["pvx"]);}();
[&]() {
result.sy=deserialize_float(name["members"]["sy"]);}();
[&]() {
result.c=deserialize_float(name["members"]["c"]);}();
[&]() {
result.pvy=deserialize_float(name["members"]["pvy"]);}();
[&]() {
result.sz=deserialize_float(name["members"]["sz"]);}();
[&]() {
result.pvz=deserialize_float(name["members"]["pvz"]);}();
[&]() {
result.qx=deserialize_float(name["members"]["qx"]);}();
[&]() {
result.qy=deserialize_float(name["members"]["qy"]);}();
[&]() {
result.qz=deserialize_float(name["members"]["qz"]);}();
[&]() {
result.qw=deserialize_float(name["members"]["qw"]);}();
[&]() {
result.tx=deserialize_float(name["members"]["tx"]);}();
[&]() {
result.ty=deserialize_float(name["members"]["ty"]);}();
[&]() {
result.tz=deserialize_float(name["members"]["tz"]);}();
return result;}

    json serialize_VkAccelerationStructureSRTMotionInstanceNV(VkAccelerationStructureSRTMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_iXcYaqa=json({});
    return serialize_VkSRTDataNV(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_IrmwZqu=json({});
    return serialize_VkSRTDataNV(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_fqZpTIn=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_PHnFFih=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_ZvKRloJ=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_LTiNSKx=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_UgNOlZT=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureSRTMotionInstanceNV deserialize_VkAccelerationStructureSRTMotionInstanceNV(json name){
        auto result=VkAccelerationStructureSRTMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkSRTDataNV(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkSRTDataNV(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMatrixMotionInstanceNV(VkAccelerationStructureMatrixMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_JzYughS=json({});
    return serialize_VkTransformMatrixKHR(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_vaBqdtS=json({});
    return serialize_VkTransformMatrixKHR(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_WmjieBq=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_VWgLjXC=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_UgncTBn=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_lMMSFTw=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_HbgHkXD=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureMatrixMotionInstanceNV deserialize_VkAccelerationStructureMatrixMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMatrixMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkTransformMatrixKHR(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkTransformMatrixKHR(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureMotionInstanceDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["staticInstance"]=[&]() {
    json return_XcGjSlr=json({});
    return serialize_VkAccelerationStructureInstanceKHR(name.staticInstance);}();
result["members"]["matrixMotionInstance"]=[&]() {
    json return_yELwwzj=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(name.matrixMotionInstance);}();
result["members"]["srtMotionInstance"]=[&]() {
    json return_lfWmwWR=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(name.srtMotionInstance);}();
return result;}

    VkAccelerationStructureMotionInstanceDataNV deserialize_VkAccelerationStructureMotionInstanceDataNV(json name){
        auto result=VkAccelerationStructureMotionInstanceDataNV();
    
[&]() {
result.staticInstance=deserialize_VkAccelerationStructureInstanceKHR(name["members"]["staticInstance"]);}();
[&]() {
result.matrixMotionInstance=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name["members"]["matrixMotionInstance"]);}();
[&]() {
result.srtMotionInstance=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name["members"]["srtMotionInstance"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_YzlagSL=json({});
    return serialize_VkAccelerationStructureMotionInstanceTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_WzHySHe=json({});
    return serialize_VkAccelerationStructureMotionInstanceFlagsNV(name.flags);}();
result["members"]["data"]=[&]() {
    json return_tnOdRfM=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(name.data);}();
return result;}

    VkAccelerationStructureMotionInstanceNV deserialize_VkAccelerationStructureMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMotionInstanceNV();
    
[&]() {
result.type=deserialize_VkAccelerationStructureMotionInstanceTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInstanceFlagsNV(name["members"]["flags"]);}();
[&]() {
result.data=deserialize_VkAccelerationStructureMotionInstanceDataNV(name["members"]["data"]);}();
return result;}

    json serialize_VkMemoryGetRemoteAddressInfoNV(VkMemoryGetRemoteAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sdoLGGW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nGZANCL=json({});
    
        if (name.pNext==NULL){
            return_nGZANCL["null"]=true;
            return return_nGZANCL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_nwZzRXC=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_KGiIljA=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetRemoteAddressInfoNV deserialize_VkMemoryGetRemoteAddressInfoNV(json name){
        auto result=VkMemoryGetRemoteAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZDIWTyi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZDIWTyi=NULL;
        }
    temp_ZDIWTyi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZDIWTyi;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YASmtxz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zZYQssg=json({});
    
        if (name.pNext==NULL){
            return_zZYQssg["null"]=true;
            return return_zZYQssg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatRgba10x6WithoutYCbCrSampler"]=[&]() {
    json return_cONSbFe=json({});
    return_cONSbFe=[&]() {
    json return_ELpRRwv=json({});
    return serialize_uint32_t(name.formatRgba10x6WithoutYCbCrSampler);}();return return_cONSbFe;}();
return result;}

    VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatRgba10x6WithoutYCbCrSampler=deserialize_uint32_t(name["members"]["formatRgba10x6WithoutYCbCrSampler"]);}();}();
return result;}

    json serialize_VkFormatProperties3(VkFormatProperties3 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xzHwvkV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sOZXEbD=json({});
    
        if (name.pNext==NULL){
            return_sOZXEbD["null"]=true;
            return return_sOZXEbD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_bpTLGEV=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_mxTXdiX=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_fpdursh=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3 deserialize_VkFormatProperties3(json name){
        auto result=VkFormatProperties3();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkFormatProperties3KHR(VkFormatProperties3KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lpNpUXN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tlERooH=json({});
    
        if (name.pNext==NULL){
            return_tlERooH["null"]=true;
            return return_tlERooH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_LlzOqts=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_biTnBYH=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_YjCeHBe=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3KHR deserialize_VkFormatProperties3KHR(json name){
        auto result=VkFormatProperties3KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesList2EXT(VkDrmFormatModifierPropertiesList2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pOdYEBP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EKMeKjD=json({});
    
        if (name.pNext==NULL){
            return_EKMeKjD["null"]=true;
            return return_EKMeKjD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_iISKBlq=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_kepTLvO=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_kepTLvO["null"]=true;
            return return_kepTLvO;
        }
        
        return_kepTLvO["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_vOXmNPv=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(name.pDrmFormatModifierProperties[i]);}();
            return_kepTLvO["members"][std::to_string(i)].push_back(temp);
        }
        return return_kepTLvO;
        }();
return result;}

    VkDrmFormatModifierPropertiesList2EXT deserialize_VkDrmFormatModifierPropertiesList2EXT(json name){
        auto result=VkDrmFormatModifierPropertiesList2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierProperties2EXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierProperties2EXT));
        for (int lgIsMyW=0; lgIsMyW < result.drmFormatModifierCount; lgIsMyW++){
            [&]() {
result.pDrmFormatModifierProperties[lgIsMyW]=deserialize_VkDrmFormatModifierProperties2EXT(name["members"]["pDrmFormatModifierProperties"]["members"][lgIsMyW]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierProperties2EXT(VkDrmFormatModifierProperties2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_fpqYeGd=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_TpinWvc=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_BpQeRhk=json({});
    return serialize_VkFormatFeatureFlags2(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierProperties2EXT deserialize_VkDrmFormatModifierProperties2EXT(json name){
        auto result=VkDrmFormatModifierProperties2EXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfo(VkPipelineRenderingCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BQOohCE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zrNuVCe=json({});
    
        if (name.pNext==NULL){
            return_zrNuVCe["null"]=true;
            return return_zrNuVCe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_baRhhal=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_IankyTf=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_QVmMyTG=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_QVmMyTG["null"]=true;
            return return_QVmMyTG;
        }
        
        return_QVmMyTG["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_TqBgiOY=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_QVmMyTG["members"][std::to_string(i)].push_back(temp);
        }
        return return_QVmMyTG;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_wrynYUx=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_slzkWMo=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfo deserialize_VkPipelineRenderingCreateInfo(json name){
        auto result=VkPipelineRenderingCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iPmjiJT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iPmjiJT=NULL;
        }
    temp_iPmjiJT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iPmjiJT;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_exEjNhy;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_exEjNhy=NULL;
        }
    temp_exEjNhy=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int GVGlkrK=0; GVGlkrK < result.colorAttachmentCount; GVGlkrK++){
            [&]() {
temp_exEjNhy[GVGlkrK]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][GVGlkrK]);}();;
        }
        }();result.pColorAttachmentFormats=temp_exEjNhy;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfoKHR(VkPipelineRenderingCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JeeAOEz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UoIVLXW=json({});
    
        if (name.pNext==NULL){
            return_UoIVLXW["null"]=true;
            return return_UoIVLXW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_CYOUXAS=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_iRKIChH=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_GeNboxp=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_GeNboxp["null"]=true;
            return return_GeNboxp;
        }
        
        return_GeNboxp["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_MUUHJBS=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_GeNboxp["members"][std::to_string(i)].push_back(temp);
        }
        return return_GeNboxp;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_TQOWjbQ=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_AFQQnyq=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfoKHR deserialize_VkPipelineRenderingCreateInfoKHR(json name){
        auto result=VkPipelineRenderingCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QpnWdEo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QpnWdEo=NULL;
        }
    temp_QpnWdEo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QpnWdEo;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_hPmQIEn;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_hPmQIEn=NULL;
        }
    temp_hPmQIEn=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int uIoyvZB=0; uIoyvZB < result.colorAttachmentCount; uIoyvZB++){
            [&]() {
temp_hPmQIEn[uIoyvZB]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][uIoyvZB]);}();;
        }
        }();result.pColorAttachmentFormats=temp_hPmQIEn;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkRenderingInfo(VkRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_owtBCdD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XVvsGAH=json({});
    
        if (name.pNext==NULL){
            return_XVvsGAH["null"]=true;
            return return_XVvsGAH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wrxsnvY=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_clwLLDB=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_LHlNlNy=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_DRwdPlQ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_VtEtLMi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_MsZLyjd=json({});
    
        if (name.pColorAttachments==NULL){
            return_MsZLyjd["null"]=true;
            return return_MsZLyjd;
        }
        
        return_MsZLyjd["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_YtVLUte=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_MsZLyjd["members"][std::to_string(i)].push_back(temp);
        }
        return return_MsZLyjd;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_zKmjuJy=json({});
    
        if (name.pDepthAttachment==NULL){
            return_zKmjuJy["null"]=true;
            return return_zKmjuJy;
        }
        return_zKmjuJy=[&]() {
    json return_FAZDgwB=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_zKmjuJy;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_kQBEgMY=json({});
    
        if (name.pStencilAttachment==NULL){
            return_kQBEgMY["null"]=true;
            return return_kQBEgMY;
        }
        return_kQBEgMY=[&]() {
    json return_GUWolEu=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_kQBEgMY;}();
return result;}

    VkRenderingInfo deserialize_VkRenderingInfo(json name){
        auto result=VkRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NKcVbRF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NKcVbRF=NULL;
        }
    temp_NKcVbRF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NKcVbRF;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_pCxSfBl;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_pCxSfBl=NULL;
        }
    temp_pCxSfBl=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int KTgsqiw=0; KTgsqiw < result.colorAttachmentCount; KTgsqiw++){
            [&]() {
temp_pCxSfBl[KTgsqiw]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][KTgsqiw]);}();;
        }
        }();result.pColorAttachments=temp_pCxSfBl;}();
[&]() {
VkRenderingAttachmentInfo* temp_tseXCtQ;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_tseXCtQ=NULL;
        }
    [&]() {
*(temp_tseXCtQ)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_tseXCtQ;}();
[&]() {
VkRenderingAttachmentInfo* temp_xNFnMdd;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_xNFnMdd=NULL;
        }
    [&]() {
*(temp_xNFnMdd)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_xNFnMdd;}();
return result;}

    json serialize_VkRenderingInfoKHR(VkRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PQWtApG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xhTbulq=json({});
    
        if (name.pNext==NULL){
            return_xhTbulq["null"]=true;
            return return_xhTbulq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lCIbStT=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_CNAEhuZ=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_GjMtQZY=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_IpkVZtl=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_LGAJFwK=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_tWtSpam=json({});
    
        if (name.pColorAttachments==NULL){
            return_tWtSpam["null"]=true;
            return return_tWtSpam;
        }
        
        return_tWtSpam["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_pGsaDxy=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_tWtSpam["members"][std::to_string(i)].push_back(temp);
        }
        return return_tWtSpam;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_CdeiJfl=json({});
    
        if (name.pDepthAttachment==NULL){
            return_CdeiJfl["null"]=true;
            return return_CdeiJfl;
        }
        return_CdeiJfl=[&]() {
    json return_tyjYVLT=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_CdeiJfl;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_sfBBYzV=json({});
    
        if (name.pStencilAttachment==NULL){
            return_sfBBYzV["null"]=true;
            return return_sfBBYzV;
        }
        return_sfBBYzV=[&]() {
    json return_PkJLHFe=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_sfBBYzV;}();
return result;}

    VkRenderingInfoKHR deserialize_VkRenderingInfoKHR(json name){
        auto result=VkRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XXZjgSv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XXZjgSv=NULL;
        }
    temp_XXZjgSv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XXZjgSv;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_jdbHwjs;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_jdbHwjs=NULL;
        }
    temp_jdbHwjs=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int cueUvgB=0; cueUvgB < result.colorAttachmentCount; cueUvgB++){
            [&]() {
temp_jdbHwjs[cueUvgB]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][cueUvgB]);}();;
        }
        }();result.pColorAttachments=temp_jdbHwjs;}();
[&]() {
VkRenderingAttachmentInfo* temp_ttaQNZA;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_ttaQNZA=NULL;
        }
    [&]() {
*(temp_ttaQNZA)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_ttaQNZA;}();
[&]() {
VkRenderingAttachmentInfo* temp_rvfQOss;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_rvfQOss=NULL;
        }
    [&]() {
*(temp_rvfQOss)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_rvfQOss;}();
return result;}

    json serialize_VkRenderingAttachmentInfo(VkRenderingAttachmentInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nYTIxjy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sPcnRUn=json({});
    
        if (name.pNext==NULL){
            return_sPcnRUn["null"]=true;
            return return_sPcnRUn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_WaTcscH=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_IXDthML=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_WzqmOCz=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_WDrxkeX=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_oyWiaUS=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_ULgZvDt=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_aoLCUQJ=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_EhSSKRk=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfo deserialize_VkRenderingAttachmentInfo(json name){
        auto result=VkRenderingAttachmentInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LcBrDQF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LcBrDQF=NULL;
        }
    temp_LcBrDQF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LcBrDQF;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingAttachmentInfoKHR(VkRenderingAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nyVsVYn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AGboksE=json({});
    
        if (name.pNext==NULL){
            return_AGboksE["null"]=true;
            return return_AGboksE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_TjHYjvo=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_nKhcypr=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_QhgOgFb=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_vrjGzVp=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_GXjYWsJ=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_oiCkvbY=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_VCDZRRa=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_RnptaWb=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfoKHR deserialize_VkRenderingAttachmentInfoKHR(json name){
        auto result=VkRenderingAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QbsjJvg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QbsjJvg=NULL;
        }
    temp_QbsjJvg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QbsjJvg;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(VkRenderingFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rsOhinA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EsCXQff=json({});
    
        if (name.pNext==NULL){
            return_EsCXQff["null"]=true;
            return return_EsCXQff;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_UKgLajm=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_NBdphfm=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_DNopMsY=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkRenderingFragmentShadingRateAttachmentInfoKHR deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkRenderingFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yzRBohv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yzRBohv=NULL;
        }
    temp_yzRBohv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yzRBohv;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(VkRenderingFragmentDensityMapAttachmentInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HxAPGEA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QycTFCX=json({});
    
        if (name.pNext==NULL){
            return_QycTFCX["null"]=true;
            return return_QycTFCX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_KaguCZq=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_EAWaeNm=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkRenderingFragmentDensityMapAttachmentInfoEXT deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(json name){
        auto result=VkRenderingFragmentDensityMapAttachmentInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zwTXkIU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zwTXkIU=NULL;
        }
    temp_zwTXkIU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zwTXkIU;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeatures(VkPhysicalDeviceDynamicRenderingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KaXvbrf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DONaqbP=json({});
    
        if (name.pNext==NULL){
            return_DONaqbP["null"]=true;
            return return_DONaqbP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_jbSwMoi=json({});
    return_jbSwMoi=[&]() {
    json return_OROfUvr=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_jbSwMoi;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeatures deserialize_VkPhysicalDeviceDynamicRenderingFeatures(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(VkPhysicalDeviceDynamicRenderingFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tjijqPR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pJtUAaR=json({});
    
        if (name.pNext==NULL){
            return_pJtUAaR["null"]=true;
            return return_pJtUAaR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_nbxjdCT=json({});
    return_nbxjdCT=[&]() {
    json return_OStsepd=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_nbxjdCT;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeaturesKHR deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfo(VkCommandBufferInheritanceRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_halsCfy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qppGvtq=json({});
    
        if (name.pNext==NULL){
            return_qppGvtq["null"]=true;
            return return_qppGvtq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hOKEfur=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_breTiZP=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_fAYweNG=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_vCgsehO=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_WtkveXQ=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_WtkveXQ["null"]=true;
            return return_WtkveXQ;
        }
        
        return_WtkveXQ["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_fIUMbaB=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_WtkveXQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_WtkveXQ;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_OJBSTeg=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_sXpiNDd=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_ktzKaob=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfo deserialize_VkCommandBufferInheritanceRenderingInfo(json name){
        auto result=VkCommandBufferInheritanceRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TcAwPQY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TcAwPQY=NULL;
        }
    temp_TcAwPQY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TcAwPQY;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_VDybLoX;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_VDybLoX=NULL;
        }
    temp_VDybLoX=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int kThfsOS=0; kThfsOS < result.colorAttachmentCount; kThfsOS++){
            [&]() {
temp_VDybLoX[kThfsOS]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][kThfsOS]);}();;
        }
        }();result.pColorAttachmentFormats=temp_VDybLoX;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfoKHR(VkCommandBufferInheritanceRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AgqgpJt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AWVPgGk=json({});
    
        if (name.pNext==NULL){
            return_AWVPgGk["null"]=true;
            return return_AWVPgGk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YHsWvRm=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_vvdggDS=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_dShuVUk=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_vaVGKjY=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_DuWmwte=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_DuWmwte["null"]=true;
            return return_DuWmwte;
        }
        
        return_DuWmwte["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_GgwtvXJ=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_DuWmwte["members"][std::to_string(i)].push_back(temp);
        }
        return return_DuWmwte;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_GtqIjzV=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_rgWgeRh=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_lLFIOaY=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfoKHR deserialize_VkCommandBufferInheritanceRenderingInfoKHR(json name){
        auto result=VkCommandBufferInheritanceRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XisNlCS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XisNlCS=NULL;
        }
    temp_XisNlCS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XisNlCS;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_UGggbjo;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_UGggbjo=NULL;
        }
    temp_UGggbjo=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int IchUhka=0; IchUhka < result.colorAttachmentCount; IchUhka++){
            [&]() {
temp_UGggbjo[IchUhka]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][IchUhka]);}();;
        }
        }();result.pColorAttachmentFormats=temp_UGggbjo;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoAMD(VkAttachmentSampleCountInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EeePaDG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VfcdZPV=json({});
    
        if (name.pNext==NULL){
            return_VfcdZPV["null"]=true;
            return return_VfcdZPV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_AVafDut=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_YnCmRsq=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_YnCmRsq["null"]=true;
            return return_YnCmRsq;
        }
        
        return_YnCmRsq["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_FjpueFk=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_YnCmRsq["members"][std::to_string(i)].push_back(temp);
        }
        return return_YnCmRsq;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_DRXHfow=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoAMD deserialize_VkAttachmentSampleCountInfoAMD(json name){
        auto result=VkAttachmentSampleCountInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QDWZZJz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QDWZZJz=NULL;
        }
    temp_QDWZZJz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QDWZZJz;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_NmlMUNx;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_NmlMUNx=NULL;
        }
    temp_NmlMUNx=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int IehZLeW=0; IehZLeW < result.colorAttachmentCount; IehZLeW++){
            [&]() {
temp_NmlMUNx[IehZLeW]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][IehZLeW]);}();;
        }
        }();result.pColorAttachmentSamples=temp_NmlMUNx;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoNV(VkAttachmentSampleCountInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pojcPGS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZuPMJhj=json({});
    
        if (name.pNext==NULL){
            return_ZuPMJhj["null"]=true;
            return return_ZuPMJhj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_BqbSkuc=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_OjHHdXA=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_OjHHdXA["null"]=true;
            return return_OjHHdXA;
        }
        
        return_OjHHdXA["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_yepJQPD=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_OjHHdXA["members"][std::to_string(i)].push_back(temp);
        }
        return return_OjHHdXA;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_UzXmQKu=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoNV deserialize_VkAttachmentSampleCountInfoNV(json name){
        auto result=VkAttachmentSampleCountInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lbTUpsI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lbTUpsI=NULL;
        }
    temp_lbTUpsI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lbTUpsI;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_OilrDJn;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_OilrDJn=NULL;
        }
    temp_OilrDJn=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int aiZChMC=0; aiZChMC < result.colorAttachmentCount; aiZChMC++){
            [&]() {
temp_OilrDJn[aiZChMC]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][aiZChMC]);}();;
        }
        }();result.pColorAttachmentSamples=temp_OilrDJn;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkMultiviewPerViewAttributesInfoNVX(VkMultiviewPerViewAttributesInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IdiqKRK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eelAPKe=json({});
    
        if (name.pNext==NULL){
            return_eelAPKe["null"]=true;
            return return_eelAPKe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewAttributes"]=[&]() {
    json return_lBUmNOF=json({});
    return_lBUmNOF=[&]() {
    json return_RgjeyJH=json({});
    return serialize_uint32_t(name.perViewAttributes);}();return return_lBUmNOF;}();
result["members"]["perViewAttributesPositionXOnly"]=[&]() {
    json return_qSQZiOp=json({});
    return_qSQZiOp=[&]() {
    json return_lnvCsEc=json({});
    return serialize_uint32_t(name.perViewAttributesPositionXOnly);}();return return_qSQZiOp;}();
return result;}

    VkMultiviewPerViewAttributesInfoNVX deserialize_VkMultiviewPerViewAttributesInfoNVX(json name){
        auto result=VkMultiviewPerViewAttributesInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VUjBRYs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VUjBRYs=NULL;
        }
    temp_VUjBRYs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VUjBRYs;}();
[&]() {
[&]() {
result.perViewAttributes=deserialize_uint32_t(name["members"]["perViewAttributes"]);}();}();
[&]() {
[&]() {
result.perViewAttributesPositionXOnly=deserialize_uint32_t(name["members"]["perViewAttributesPositionXOnly"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(VkPhysicalDeviceImageViewMinLodFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FzqFOmC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eqrbCqz=json({});
    
        if (name.pNext==NULL){
            return_eqrbCqz["null"]=true;
            return return_eqrbCqz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_LJOMWYU=json({});
    return_LJOMWYU=[&]() {
    json return_sVghDhQ=json({});
    return serialize_uint32_t(name.minLod);}();return return_LJOMWYU;}();
return result;}

    VkPhysicalDeviceImageViewMinLodFeaturesEXT deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageViewMinLodFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minLod=deserialize_uint32_t(name["members"]["minLod"]);}();}();
return result;}

    json serialize_VkImageViewMinLodCreateInfoEXT(VkImageViewMinLodCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KdrrLhy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QcqLpkt=json({});
    
        if (name.pNext==NULL){
            return_QcqLpkt["null"]=true;
            return return_QcqLpkt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_umyBAcV=json({});
    return serialize_float(name.minLod);}();
return result;}

    VkImageViewMinLodCreateInfoEXT deserialize_VkImageViewMinLodCreateInfoEXT(json name){
        auto result=VkImageViewMinLodCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AfLFjtb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AfLFjtb=NULL;
        }
    temp_AfLFjtb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AfLFjtb;}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NsoJiSA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RsZuITZ=json({});
    
        if (name.pNext==NULL){
            return_RsZuITZ["null"]=true;
            return return_RsZuITZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_SUsnHYV=json({});
    return_SUsnHYV=[&]() {
    json return_yKrEfGM=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_SUsnHYV;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_moRgmbk=json({});
    return_moRgmbk=[&]() {
    json return_NmKNDTs=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_moRgmbk;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_zaioSWs=json({});
    return_zaioSWs=[&]() {
    json return_GjHZTnl=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_zaioSWs;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ERBFpra=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zWwPWbb=json({});
    
        if (name.pNext==NULL){
            return_zWwPWbb["null"]=true;
            return return_zWwPWbb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_HvyDqqv=json({});
    return_HvyDqqv=[&]() {
    json return_JZcyKIP=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_HvyDqqv;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_IKzMPzS=json({});
    return_IKzMPzS=[&]() {
    json return_oWjPHRN=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_IKzMPzS;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_HUQRNWN=json({});
    return_HUQRNWN=[&]() {
    json return_hUZhemz=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_HUQRNWN;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(VkPhysicalDeviceLinearColorAttachmentFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RWloeMw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JcGhjoI=json({});
    
        if (name.pNext==NULL){
            return_JcGhjoI["null"]=true;
            return return_JcGhjoI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearColorAttachment"]=[&]() {
    json return_cJdSkin=json({});
    return_cJdSkin=[&]() {
    json return_OlaArdn=json({});
    return serialize_uint32_t(name.linearColorAttachment);}();return return_cJdSkin;}();
return result;}

    VkPhysicalDeviceLinearColorAttachmentFeaturesNV deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(json name){
        auto result=VkPhysicalDeviceLinearColorAttachmentFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.linearColorAttachment=deserialize_uint32_t(name["members"]["linearColorAttachment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SUhrIJB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NUtojVJ=json({});
    
        if (name.pNext==NULL){
            return_NUtojVJ["null"]=true;
            return return_NUtojVJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibrary"]=[&]() {
    json return_PfsuONA=json({});
    return_PfsuONA=[&]() {
    json return_rFMNOfZ=json({});
    return serialize_uint32_t(name.graphicsPipelineLibrary);}();return return_PfsuONA;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibrary=deserialize_uint32_t(name["members"]["graphicsPipelineLibrary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fWwEghW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DQYTiFQ=json({});
    
        if (name.pNext==NULL){
            return_DQYTiFQ["null"]=true;
            return return_DQYTiFQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibraryFastLinking"]=[&]() {
    json return_vIdChfd=json({});
    return_vIdChfd=[&]() {
    json return_FSWNaoL=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryFastLinking);}();return return_vIdChfd;}();
result["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]=[&]() {
    json return_Xtolzov=json({});
    return_Xtolzov=[&]() {
    json return_WYNaeKp=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryIndependentInterpolationDecoration);}();return return_Xtolzov;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibraryFastLinking=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryFastLinking"]);}();}();
[&]() {
[&]() {
result.graphicsPipelineLibraryIndependentInterpolationDecoration=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]);}();}();
return result;}

    json serialize_VkGraphicsPipelineLibraryCreateInfoEXT(VkGraphicsPipelineLibraryCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fBopyEG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TaBhGve=json({});
    
        if (name.pNext==NULL){
            return_TaBhGve["null"]=true;
            return return_TaBhGve;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_eiftlaH=json({});
    return serialize_VkGraphicsPipelineLibraryFlagsEXT(name.flags);}();
return result;}

    VkGraphicsPipelineLibraryCreateInfoEXT deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(json name){
        auto result=VkGraphicsPipelineLibraryCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kkDdDyA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kkDdDyA=NULL;
        }
    temp_kkDdDyA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kkDdDyA;}();
[&]() {
result.flags=deserialize_VkGraphicsPipelineLibraryFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GLIjUwy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vGiXNal=json({});
    
        if (name.pNext==NULL){
            return_vGiXNal["null"]=true;
            return return_vGiXNal;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetHostMapping"]=[&]() {
    json return_ZzfbXvm=json({});
    return_ZzfbXvm=[&]() {
    json return_ExmFycL=json({});
    return serialize_uint32_t(name.descriptorSetHostMapping);}();return return_ZzfbXvm;}();
return result;}

    VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorSetHostMapping=deserialize_uint32_t(name["members"]["descriptorSetHostMapping"]);}();}();
return result;}

    json serialize_VkDescriptorSetBindingReferenceVALVE(VkDescriptorSetBindingReferenceVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UYQScJC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RCgZuiu=json({});
    
        if (name.pNext==NULL){
            return_RCgZuiu["null"]=true;
            return return_RCgZuiu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_gkWziqN=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["binding"]=[&]() {
    json return_hIZSDpL=json({});
    return serialize_uint32_t(name.binding);}();
return result;}

    VkDescriptorSetBindingReferenceVALVE deserialize_VkDescriptorSetBindingReferenceVALVE(json name){
        auto result=VkDescriptorSetBindingReferenceVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BuSDShL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BuSDShL=NULL;
        }
    temp_BuSDShL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BuSDShL;}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(VkDescriptorSetLayoutHostMappingInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DaJqPRX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AujEDor=json({});
    
        if (name.pNext==NULL){
            return_AujEDor["null"]=true;
            return return_AujEDor;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorOffset"]=[&]() {
    json return_mQFBOXB=json({});
    return serialize_size_t(name.descriptorOffset);}();
result["members"]["descriptorSize"]=[&]() {
    json return_RWFhvKn=json({});
    return serialize_uint32_t(name.descriptorSize);}();
return result;}

    VkDescriptorSetLayoutHostMappingInfoVALVE deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(json name){
        auto result=VkDescriptorSetLayoutHostMappingInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.descriptorOffset=deserialize_size_t(name["members"]["descriptorOffset"]);}();
[&]() {
result.descriptorSize=deserialize_uint32_t(name["members"]["descriptorSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wahzgfe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cUtJAcM=json({});
    
        if (name.pNext==NULL){
            return_cUtJAcM["null"]=true;
            return return_cUtJAcM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifier"]=[&]() {
    json return_UdTbWAJ=json({});
    return_UdTbWAJ=[&]() {
    json return_AlHkiDa=json({});
    return serialize_uint32_t(name.shaderModuleIdentifier);}();return return_UdTbWAJ;}();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderModuleIdentifier=deserialize_uint32_t(name["members"]["shaderModuleIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bZjoIch=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HjzMKSn=json({});
    
        if (name.pNext==NULL){
            return_HjzMKSn["null"]=true;
            return return_HjzMKSn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifierAlgorithmUUID"]=[&]() {
    json return_qIsRYbr=json({});
    
        return_qIsRYbr["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lMoACUV=json({});
    return serialize_uint8_t(name.shaderModuleIdentifierAlgorithmUUID[i]);}();
            return_qIsRYbr["members"][std::to_string(i)].push_back(temp);
        }
        return return_qIsRYbr;
        }();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int CCZRvtg=0; CCZRvtg < VK_UUID_SIZE; CCZRvtg++){
            [&]() {
result.shaderModuleIdentifierAlgorithmUUID[CCZRvtg]=deserialize_uint8_t(name["members"]["shaderModuleIdentifierAlgorithmUUID"]["members"][CCZRvtg]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(VkPipelineShaderStageModuleIdentifierCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qaEICKL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lNFKziC=json({});
    
        if (name.pNext==NULL){
            return_lNFKziC["null"]=true;
            return return_lNFKziC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_oYAJHIb=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["pIdentifier"]=[&]() {
    json return_esVMlPZ=json({});
    
        if (name.pIdentifier==NULL){
            return_esVMlPZ["null"]=true;
            return return_esVMlPZ;
        }
        
        return_esVMlPZ["members"]={};
        for(int i=0; i < name.identifierSize; i++){
            json temp;
            temp=[&]() {
    json return_VXdunpr=json({});
    return serialize_uint8_t(name.pIdentifier[i]);}();
            return_esVMlPZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_esVMlPZ;
        }();
return result;}

    VkPipelineShaderStageModuleIdentifierCreateInfoEXT deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageModuleIdentifierCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eosZHZd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eosZHZd=NULL;
        }
    temp_eosZHZd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eosZHZd;}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {
uint8_t* temp_lYEjdsU;[&]() {

        if (name["members"]["pIdentifier"].contains("null")){
        temp_lYEjdsU=NULL;
        }
    temp_lYEjdsU=(uint8_t*)malloc(result.identifierSize*sizeof(uint8_t));
        for (int PxWkRtk=0; PxWkRtk < result.identifierSize; PxWkRtk++){
            [&]() {
temp_lYEjdsU[PxWkRtk]=deserialize_uint8_t(name["members"]["pIdentifier"]["members"][PxWkRtk]);}();;
        }
        }();result.pIdentifier=temp_lYEjdsU;}();
return result;}

    json serialize_VkShaderModuleIdentifierEXT(VkShaderModuleIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ULcwycv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uocxGiu=json({});
    
        if (name.pNext==NULL){
            return_uocxGiu["null"]=true;
            return return_uocxGiu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_PIdesOM=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["identifier"]=[&]() {
    json return_luSXEYP=json({});
    
        return_luSXEYP["members"]={};
        for(int i=0; i < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; i++){
            json temp;
            temp=[&]() {
    json return_qnEOSrW=json({});
    return serialize_uint8_t(name.identifier[i]);}();
            return_luSXEYP["members"][std::to_string(i)].push_back(temp);
        }
        return return_luSXEYP;
        }();
return result;}

    VkShaderModuleIdentifierEXT deserialize_VkShaderModuleIdentifierEXT(json name){
        auto result=VkShaderModuleIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {

        for (int yXocPPd=0; yXocPPd < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; yXocPPd++){
            [&]() {
result.identifier[yXocPPd]=deserialize_uint8_t(name["members"]["identifier"]["members"][yXocPPd]);}();;
        }
        }();
return result;}

    json serialize_VkImageCompressionControlEXT(VkImageCompressionControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jYXQanF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pwmkUsM=json({});
    
        if (name.pNext==NULL){
            return_pwmkUsM["null"]=true;
            return return_pwmkUsM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_rAmkVEf=json({});
    return serialize_VkImageCompressionFlagsEXT(name.flags);}();
result["members"]["compressionControlPlaneCount"]=[&]() {
    json return_XQbkvBS=json({});
    return serialize_uint32_t(name.compressionControlPlaneCount);}();
result["members"]["pFixedRateFlags"]=[&]() {
    json return_whgoNpg=json({});
    
        if (name.pFixedRateFlags==NULL){
            return_whgoNpg["null"]=true;
            return return_whgoNpg;
        }
        
        return_whgoNpg["members"]={};
        for(int i=0; i < name.compressionControlPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_pyPfhpd=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.pFixedRateFlags[i]);}();
            return_whgoNpg["members"][std::to_string(i)].push_back(temp);
        }
        return return_whgoNpg;
        }();
return result;}

    VkImageCompressionControlEXT deserialize_VkImageCompressionControlEXT(json name){
        auto result=VkImageCompressionControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FRkQlCZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FRkQlCZ=NULL;
        }
    temp_FRkQlCZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FRkQlCZ;}();
[&]() {
result.flags=deserialize_VkImageCompressionFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.compressionControlPlaneCount=deserialize_uint32_t(name["members"]["compressionControlPlaneCount"]);}();
[&]() {

        if (name["members"]["pFixedRateFlags"].contains("null")){
        result.pFixedRateFlags=NULL;
        }
    result.pFixedRateFlags=(VkImageCompressionFixedRateFlagsEXT*)malloc(result.compressionControlPlaneCount*sizeof(VkImageCompressionFixedRateFlagsEXT));
        for (int oOTDBZe=0; oOTDBZe < result.compressionControlPlaneCount; oOTDBZe++){
            [&]() {
result.pFixedRateFlags[oOTDBZe]=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["pFixedRateFlags"]["members"][oOTDBZe]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkPhysicalDeviceImageCompressionControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_svfuhFJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SgAxHxx=json({});
    
        if (name.pNext==NULL){
            return_SgAxHxx["null"]=true;
            return return_SgAxHxx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControl"]=[&]() {
    json return_okABzmj=json({});
    return_okABzmj=[&]() {
    json return_chZVxke=json({});
    return serialize_uint32_t(name.imageCompressionControl);}();return return_okABzmj;}();
return result;}

    VkPhysicalDeviceImageCompressionControlFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControl=deserialize_uint32_t(name["members"]["imageCompressionControl"]);}();}();
return result;}

    json serialize_VkImageCompressionPropertiesEXT(VkImageCompressionPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DjmoxKQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UvGzjaq=json({});
    
        if (name.pNext==NULL){
            return_UvGzjaq["null"]=true;
            return return_UvGzjaq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionFlags"]=[&]() {
    json return_geUFvru=json({});
    return serialize_VkImageCompressionFlagsEXT(name.imageCompressionFlags);}();
result["members"]["imageCompressionFixedRateFlags"]=[&]() {
    json return_pxCMdTB=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.imageCompressionFixedRateFlags);}();
return result;}

    VkImageCompressionPropertiesEXT deserialize_VkImageCompressionPropertiesEXT(json name){
        auto result=VkImageCompressionPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageCompressionFlags=deserialize_VkImageCompressionFlagsEXT(name["members"]["imageCompressionFlags"]);}();
[&]() {
result.imageCompressionFixedRateFlags=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["imageCompressionFixedRateFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JwHhqkv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hFsIQoV=json({});
    
        if (name.pNext==NULL){
            return_hFsIQoV["null"]=true;
            return return_hFsIQoV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControlSwapchain"]=[&]() {
    json return_SDCdIKD=json({});
    return_SDCdIKD=[&]() {
    json return_zxtyCYd=json({});
    return serialize_uint32_t(name.imageCompressionControlSwapchain);}();return return_SDCdIKD;}();
return result;}

    VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControlSwapchain=deserialize_uint32_t(name["members"]["imageCompressionControlSwapchain"]);}();}();
return result;}

    json serialize_VkImageSubresource2KHR(VkImageSubresource2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tDfZbjo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qwztRts=json({});
    
        if (name.pNext==NULL){
            return_qwztRts["null"]=true;
            return return_qwztRts;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_vwpWgjM=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2KHR deserialize_VkImageSubresource2KHR(json name){
        auto result=VkImageSubresource2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkImageSubresource2EXT(VkImageSubresource2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KoSjPmz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IPEAraB=json({});
    
        if (name.pNext==NULL){
            return_IPEAraB["null"]=true;
            return return_IPEAraB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_ubYRKVg=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2EXT deserialize_VkImageSubresource2EXT(json name){
        auto result=VkImageSubresource2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkSubresourceLayout2KHR(VkSubresourceLayout2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uGcTCzZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GcMjuWl=json({});
    
        if (name.pNext==NULL){
            return_GcMjuWl["null"]=true;
            return return_GcMjuWl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_JleHZHs=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2KHR deserialize_VkSubresourceLayout2KHR(json name){
        auto result=VkSubresourceLayout2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout2EXT(VkSubresourceLayout2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QvqWlQH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tBWryzp=json({});
    
        if (name.pNext==NULL){
            return_tBWryzp["null"]=true;
            return return_tBWryzp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_dFbkxuL=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2EXT deserialize_VkSubresourceLayout2EXT(json name){
        auto result=VkSubresourceLayout2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkRenderPassCreationControlEXT(VkRenderPassCreationControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rIDlFpz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TqhUSfw=json({});
    
        if (name.pNext==NULL){
            return_TqhUSfw["null"]=true;
            return return_TqhUSfw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disallowMerging"]=[&]() {
    json return_WRxIKZj=json({});
    return_WRxIKZj=[&]() {
    json return_WwCbPvp=json({});
    return serialize_uint32_t(name.disallowMerging);}();return return_WRxIKZj;}();
return result;}

    VkRenderPassCreationControlEXT deserialize_VkRenderPassCreationControlEXT(json name){
        auto result=VkRenderPassCreationControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZKcSDQe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZKcSDQe=NULL;
        }
    temp_ZKcSDQe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZKcSDQe;}();
[&]() {
[&]() {
result.disallowMerging=deserialize_uint32_t(name["members"]["disallowMerging"]);}();}();
return result;}

    json serialize_VkRenderPassCreationFeedbackInfoEXT(VkRenderPassCreationFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["postMergeSubpassCount"]=[&]() {
    json return_OFcqDcp=json({});
    return serialize_uint32_t(name.postMergeSubpassCount);}();
return result;}

    VkRenderPassCreationFeedbackInfoEXT deserialize_VkRenderPassCreationFeedbackInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackInfoEXT();
    
[&]() {
result.postMergeSubpassCount=deserialize_uint32_t(name["members"]["postMergeSubpassCount"]);}();
return result;}

    json serialize_VkRenderPassCreationFeedbackCreateInfoEXT(VkRenderPassCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PwTGqqy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JXwylXO=json({});
    
        if (name.pNext==NULL){
            return_JXwylXO["null"]=true;
            return return_JXwylXO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pRenderPassFeedback"]=[&]() {
    json return_KYPnhLl=json({});
    
        if (name.pRenderPassFeedback==NULL){
            return_KYPnhLl["null"]=true;
            return return_KYPnhLl;
        }
        return_KYPnhLl=[&]() {
    json return_ABfEDZz=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*name.pRenderPassFeedback);}();
return return_KYPnhLl;}();
return result;}

    VkRenderPassCreationFeedbackCreateInfoEXT deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gDasmiX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gDasmiX=NULL;
        }
    temp_gDasmiX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gDasmiX;}();
[&]() {

        if (name["members"]["pRenderPassFeedback"].contains("null")){
        result.pRenderPassFeedback=NULL;
        }
    [&]() {
*(result.pRenderPassFeedback)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name["members"]["pRenderPassFeedback"]);}();
}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackInfoEXT(VkRenderPassSubpassFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassMergeStatus"]=[&]() {
    json return_rgHzhOa=json({});
    return serialize_VkSubpassMergeStatusEXT(name.subpassMergeStatus);}();
result["members"]["description"]=[&]() {
    json return_NKVuLQt=json({});
    
        return_NKVuLQt["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_khvpVpj=json({});
    return serialize_char(name.description[i]);}();
            return_NKVuLQt["members"][std::to_string(i)].push_back(temp);
        }
        return return_NKVuLQt;
        }();
result["members"]["postMergeIndex"]=[&]() {
    json return_CccEvOO=json({});
    return serialize_uint32_t(name.postMergeIndex);}();
return result;}

    VkRenderPassSubpassFeedbackInfoEXT deserialize_VkRenderPassSubpassFeedbackInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackInfoEXT();
    
[&]() {
result.subpassMergeStatus=deserialize_VkSubpassMergeStatusEXT(name["members"]["subpassMergeStatus"]);}();
[&]() {

        for (int GJBItzB=0; GJBItzB < VK_MAX_DESCRIPTION_SIZE; GJBItzB++){
            [&]() {
result.description[GJBItzB]=deserialize_char(name["members"]["description"]["members"][GJBItzB]);}();;
        }
        }();
[&]() {
result.postMergeIndex=deserialize_uint32_t(name["members"]["postMergeIndex"]);}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(VkRenderPassSubpassFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JYCGaEM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NpyPPFT=json({});
    
        if (name.pNext==NULL){
            return_NpyPPFT["null"]=true;
            return return_NpyPPFT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pSubpassFeedback"]=[&]() {
    json return_RzDmqeQ=json({});
    
        if (name.pSubpassFeedback==NULL){
            return_RzDmqeQ["null"]=true;
            return return_RzDmqeQ;
        }
        return_RzDmqeQ=[&]() {
    json return_EERnWsL=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*name.pSubpassFeedback);}();
return return_RzDmqeQ;}();
return result;}

    VkRenderPassSubpassFeedbackCreateInfoEXT deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jBFHtWu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jBFHtWu=NULL;
        }
    temp_jBFHtWu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jBFHtWu;}();
[&]() {

        if (name["members"]["pSubpassFeedback"].contains("null")){
        result.pSubpassFeedback=NULL;
        }
    [&]() {
*(result.pSubpassFeedback)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name["members"]["pSubpassFeedback"]);}();
}();
return result;}

    json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YkvvWjh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jsHFZjG=json({});
    
        if (name.pNext==NULL){
            return_jsHFZjG["null"]=true;
            return return_jsHFZjG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassMergeFeedback"]=[&]() {
    json return_iWgbdMZ=json({});
    return_iWgbdMZ=[&]() {
    json return_WYrDzIE=json({});
    return serialize_uint32_t(name.subpassMergeFeedback);}();return return_iWgbdMZ;}();
return result;}

    VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassMergeFeedback=deserialize_uint32_t(name["members"]["subpassMergeFeedback"]);}();}();
return result;}

    json serialize_VkMicromapBuildInfoEXT(VkMicromapBuildInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DGWpKip=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zRdDIyp=json({});
    
        if (name.pNext==NULL){
            return_zRdDIyp["null"]=true;
            return return_zRdDIyp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_rdBScuh=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["flags"]=[&]() {
    json return_xRxOvmD=json({});
    return serialize_VkBuildMicromapFlagsEXT(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_HFnXFlv=json({});
    return serialize_VkBuildMicromapModeEXT(name.mode);}();
result["members"]["dstMicromap"]=[&]() {
    json return_eSQHTZt=json({});
    return serialize_VkMicromapEXT(name.dstMicromap);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_yhrKBdG=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_oMtUyfg=json({});
    
        if (name.pUsageCounts==NULL){
            return_oMtUyfg["null"]=true;
            return return_oMtUyfg;
        }
        
        return_oMtUyfg["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_zoYxphv=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_oMtUyfg["members"][std::to_string(i)].push_back(temp);
        }
        return return_oMtUyfg;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_qDNmpkv=json({});
    
        if (name.ppUsageCounts==NULL){
            return_qDNmpkv["null"]=true;
            return return_qDNmpkv;
        }
        
        return_qDNmpkv["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_TReuPnE=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_TReuPnE["null"]=true;
            return return_TReuPnE;
        }
        
        return_TReuPnE["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_yfvXTfu=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_TReuPnE["members"][std::to_string(i)].push_back(temp);
        }
        return return_TReuPnE;
        }();
            return_qDNmpkv["members"][std::to_string(i)].push_back(temp);
        }
        return return_qDNmpkv;
        }();
result["members"]["data"]=[&]() {
    json return_BPrLwyC=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["scratchData"]=[&]() {
    json return_AMusXnr=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
result["members"]["triangleArray"]=[&]() {
    json return_MGMoNBd=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.triangleArray);}();
result["members"]["triangleArrayStride"]=[&]() {
    json return_WwBHMdk=json({});
    return_WwBHMdk=[&]() {
    json return_GdPhdFL=json({});
    return serialize_uint64_t(name.triangleArrayStride);}();return return_WwBHMdk;}();
return result;}

    VkMicromapBuildInfoEXT deserialize_VkMicromapBuildInfoEXT(json name){
        auto result=VkMicromapBuildInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zwZQLrF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zwZQLrF=NULL;
        }
    temp_zwZQLrF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zwZQLrF;}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildMicromapFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildMicromapModeEXT(name["members"]["mode"]);}();
[&]() {
result.dstMicromap=deserialize_VkMicromapEXT(name["members"]["dstMicromap"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_dEZguuB;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_dEZguuB=NULL;
        }
    temp_dEZguuB=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int fUciDzp=0; fUciDzp < result.usageCountsCount; fUciDzp++){
            [&]() {
temp_dEZguuB[fUciDzp]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][fUciDzp]);}();;
        }
        }();result.pUsageCounts=temp_dEZguuB;}();
[&]() {
VkMicromapUsageEXT** temp_EUBiXyJ;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_EUBiXyJ=NULL;
        }
    temp_EUBiXyJ=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int AOTNYDR=0; AOTNYDR < result.usageCountsCount; AOTNYDR++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][AOTNYDR].contains("null")){
        temp_EUBiXyJ[AOTNYDR]=NULL;
        }
    temp_EUBiXyJ[AOTNYDR]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int ChVLrem=0; ChVLrem < 1; ChVLrem++){
            [&]() {
temp_EUBiXyJ[AOTNYDR][ChVLrem]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][AOTNYDR]["members"][ChVLrem]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_EUBiXyJ;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
[&]() {
result.triangleArray=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["triangleArray"]);}();
[&]() {
[&]() {
result.triangleArrayStride=deserialize_uint64_t(name["members"]["triangleArrayStride"]);}();}();
return result;}

    json serialize_VkMicromapCreateInfoEXT(VkMicromapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lXjguDx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uLNaLnZ=json({});
    
        if (name.pNext==NULL){
            return_uLNaLnZ["null"]=true;
            return return_uLNaLnZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_HXyUrLk=json({});
    return serialize_VkMicromapCreateFlagsEXT(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_SxkzbTM=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_SgWeWbr=json({});
    return_SgWeWbr=[&]() {
    json return_nSmhwPB=json({});
    return serialize_uint64_t(name.offset);}();return return_SgWeWbr;}();
result["members"]["size"]=[&]() {
    json return_uBDHzRA=json({});
    return_uBDHzRA=[&]() {
    json return_LaRkALd=json({});
    return serialize_uint64_t(name.size);}();return return_uBDHzRA;}();
result["members"]["type"]=[&]() {
    json return_QevWnuW=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_JrDsgaf=json({});
    return_JrDsgaf=[&]() {
    json return_XHCeTYU=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_JrDsgaf;}();
return result;}

    VkMicromapCreateInfoEXT deserialize_VkMicromapCreateInfoEXT(json name){
        auto result=VkMicromapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UdMRfdZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UdMRfdZ=NULL;
        }
    temp_UdMRfdZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UdMRfdZ;}();
[&]() {
result.createFlags=deserialize_VkMicromapCreateFlagsEXT(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkMicromapVersionInfoEXT(VkMicromapVersionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cdBlkqR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nNviPXd=json({});
    
        if (name.pNext==NULL){
            return_nNviPXd["null"]=true;
            return return_nNviPXd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_eYnsrPS=json({});
    
        if (name.pVersionData==NULL){
            return_eYnsrPS["null"]=true;
            return return_eYnsrPS;
        }
        
        return_eYnsrPS["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_wBENKNr=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_eYnsrPS["members"][std::to_string(i)].push_back(temp);
        }
        return return_eYnsrPS;
        }();
return result;}

    VkMicromapVersionInfoEXT deserialize_VkMicromapVersionInfoEXT(json name){
        auto result=VkMicromapVersionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gMUZPrB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gMUZPrB=NULL;
        }
    temp_gMUZPrB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gMUZPrB;}();
[&]() {
uint8_t* temp_vhUXFFJ;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_vhUXFFJ=NULL;
        }
    temp_vhUXFFJ=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int ySOzdvy=0; ySOzdvy < 2*VK_UUID_SIZE; ySOzdvy++){
            [&]() {
temp_vhUXFFJ[ySOzdvy]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][ySOzdvy]);}();;
        }
        }();result.pVersionData=temp_vhUXFFJ;}();
return result;}

    json serialize_VkCopyMicromapInfoEXT(VkCopyMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZXNNvCH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZYNEjiW=json({});
    
        if (name.pNext==NULL){
            return_ZYNEjiW["null"]=true;
            return return_ZYNEjiW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_PzLRvxo=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_tqbBAHF=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_UBdNZva=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapInfoEXT deserialize_VkCopyMicromapInfoEXT(json name){
        auto result=VkCopyMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DIdjBhQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DIdjBhQ=NULL;
        }
    temp_DIdjBhQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DIdjBhQ;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMicromapToMemoryInfoEXT(VkCopyMicromapToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dzqfCLZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VIoQljL=json({});
    
        if (name.pNext==NULL){
            return_VIoQljL["null"]=true;
            return return_VIoQljL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_tfRAjjb=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_oDZSqlk=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_sniyTqv=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapToMemoryInfoEXT deserialize_VkCopyMicromapToMemoryInfoEXT(json name){
        auto result=VkCopyMicromapToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rGfbCaL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rGfbCaL=NULL;
        }
    temp_rGfbCaL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rGfbCaL;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToMicromapInfoEXT(VkCopyMemoryToMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oghWsjY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mLQTgDd=json({});
    
        if (name.pNext==NULL){
            return_mLQTgDd["null"]=true;
            return return_mLQTgDd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_JkqVInP=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_bpiPsqW=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_madXMfl=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMemoryToMicromapInfoEXT deserialize_VkCopyMemoryToMicromapInfoEXT(json name){
        auto result=VkCopyMemoryToMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xkJHGOW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xkJHGOW=NULL;
        }
    temp_xkJHGOW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xkJHGOW;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkMicromapBuildSizesInfoEXT(VkMicromapBuildSizesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_otjqefb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nqTZwor=json({});
    
        if (name.pNext==NULL){
            return_nqTZwor["null"]=true;
            return return_nqTZwor;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromapSize"]=[&]() {
    json return_CCsTWKx=json({});
    return_CCsTWKx=[&]() {
    json return_OWhuIjk=json({});
    return serialize_uint64_t(name.micromapSize);}();return return_CCsTWKx;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_wqhbfzX=json({});
    return_wqhbfzX=[&]() {
    json return_TsBOcMI=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_wqhbfzX;}();
result["members"]["discardable"]=[&]() {
    json return_AJIQlDG=json({});
    return_AJIQlDG=[&]() {
    json return_hcRInOE=json({});
    return serialize_uint32_t(name.discardable);}();return return_AJIQlDG;}();
return result;}

    VkMicromapBuildSizesInfoEXT deserialize_VkMicromapBuildSizesInfoEXT(json name){
        auto result=VkMicromapBuildSizesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fPxkyNw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fPxkyNw=NULL;
        }
    temp_fPxkyNw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fPxkyNw;}();
[&]() {
[&]() {
result.micromapSize=deserialize_uint64_t(name["members"]["micromapSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
[&]() {
[&]() {
result.discardable=deserialize_uint32_t(name["members"]["discardable"]);}();}();
return result;}

    json serialize_VkMicromapUsageEXT(VkMicromapUsageEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["count"]=[&]() {
    json return_mgYPYPH=json({});
    return serialize_uint32_t(name.count);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_vGMteWS=json({});
    return serialize_uint32_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_ygxvppq=json({});
    return serialize_uint32_t(name.format);}();
return result;}

    VkMicromapUsageEXT deserialize_VkMicromapUsageEXT(json name){
        auto result=VkMicromapUsageEXT();
    
[&]() {
result.count=deserialize_uint32_t(name["members"]["count"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint32_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint32_t(name["members"]["format"]);}();
return result;}

    json serialize_VkMicromapTriangleEXT(VkMicromapTriangleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dataOffset"]=[&]() {
    json return_lScCPKv=json({});
    return serialize_uint32_t(name.dataOffset);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_AiIcQrW=json({});
    return serialize_uint16_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_MyWvdKT=json({});
    return serialize_uint16_t(name.format);}();
return result;}

    VkMicromapTriangleEXT deserialize_VkMicromapTriangleEXT(json name){
        auto result=VkMicromapTriangleEXT();
    
[&]() {
result.dataOffset=deserialize_uint32_t(name["members"]["dataOffset"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint16_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint16_t(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(VkPhysicalDeviceOpacityMicromapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JNyJbuq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ahsooha=json({});
    
        if (name.pNext==NULL){
            return_ahsooha["null"]=true;
            return return_ahsooha;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromap"]=[&]() {
    json return_hgAebam=json({});
    return_hgAebam=[&]() {
    json return_qijkChd=json({});
    return serialize_uint32_t(name.micromap);}();return return_hgAebam;}();
result["members"]["micromapCaptureReplay"]=[&]() {
    json return_sJgJkKp=json({});
    return_sJgJkKp=[&]() {
    json return_MMPXYSV=json({});
    return serialize_uint32_t(name.micromapCaptureReplay);}();return return_sJgJkKp;}();
result["members"]["micromapHostCommands"]=[&]() {
    json return_nsejebl=json({});
    return_nsejebl=[&]() {
    json return_BiKxIDV=json({});
    return serialize_uint32_t(name.micromapHostCommands);}();return return_nsejebl;}();
return result;}

    VkPhysicalDeviceOpacityMicromapFeaturesEXT deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.micromap=deserialize_uint32_t(name["members"]["micromap"]);}();}();
[&]() {
[&]() {
result.micromapCaptureReplay=deserialize_uint32_t(name["members"]["micromapCaptureReplay"]);}();}();
[&]() {
[&]() {
result.micromapHostCommands=deserialize_uint32_t(name["members"]["micromapHostCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(VkPhysicalDeviceOpacityMicromapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DskUEFE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tYrazNn=json({});
    
        if (name.pNext==NULL){
            return_tYrazNn["null"]=true;
            return return_tYrazNn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxOpacity2StateSubdivisionLevel"]=[&]() {
    json return_TOJHwJe=json({});
    return serialize_uint32_t(name.maxOpacity2StateSubdivisionLevel);}();
result["members"]["maxOpacity4StateSubdivisionLevel"]=[&]() {
    json return_XrTyNwx=json({});
    return serialize_uint32_t(name.maxOpacity4StateSubdivisionLevel);}();
return result;}

    VkPhysicalDeviceOpacityMicromapPropertiesEXT deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxOpacity2StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity2StateSubdivisionLevel"]);}();
[&]() {
result.maxOpacity4StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity4StateSubdivisionLevel"]);}();
return result;}

    json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(VkAccelerationStructureTrianglesOpacityMicromapEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OFssjKm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lDRsjkO=json({});
    
        if (name.pNext==NULL){
            return_lDRsjkO["null"]=true;
            return return_lDRsjkO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexType"]=[&]() {
    json return_EdEcBnd=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexBuffer"]=[&]() {
    json return_tktxQre=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexBuffer);}();
result["members"]["indexStride"]=[&]() {
    json return_SIUaVvB=json({});
    return_SIUaVvB=[&]() {
    json return_yiRWfti=json({});
    return serialize_uint64_t(name.indexStride);}();return return_SIUaVvB;}();
result["members"]["baseTriangle"]=[&]() {
    json return_zdqfphW=json({});
    return serialize_uint32_t(name.baseTriangle);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_AVyLgdy=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_aBobSwc=json({});
    
        if (name.pUsageCounts==NULL){
            return_aBobSwc["null"]=true;
            return return_aBobSwc;
        }
        
        return_aBobSwc["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_UtcPssv=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_aBobSwc["members"][std::to_string(i)].push_back(temp);
        }
        return return_aBobSwc;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_GMfmwum=json({});
    
        if (name.ppUsageCounts==NULL){
            return_GMfmwum["null"]=true;
            return return_GMfmwum;
        }
        
        return_GMfmwum["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_rsFfMuH=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_rsFfMuH["null"]=true;
            return return_rsFfMuH;
        }
        
        return_rsFfMuH["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_bVtJAoj=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_rsFfMuH["members"][std::to_string(i)].push_back(temp);
        }
        return return_rsFfMuH;
        }();
            return_GMfmwum["members"][std::to_string(i)].push_back(temp);
        }
        return return_GMfmwum;
        }();
result["members"]["micromap"]=[&]() {
    json return_kfPMbQz=json({});
    return serialize_VkMicromapEXT(name.micromap);}();
return result;}

    VkAccelerationStructureTrianglesOpacityMicromapEXT deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(json name){
        auto result=VkAccelerationStructureTrianglesOpacityMicromapEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexBuffer=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexBuffer"]);}();
[&]() {
[&]() {
result.indexStride=deserialize_uint64_t(name["members"]["indexStride"]);}();}();
[&]() {
result.baseTriangle=deserialize_uint32_t(name["members"]["baseTriangle"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_LGnIoLC;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_LGnIoLC=NULL;
        }
    temp_LGnIoLC=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int sgkFmyk=0; sgkFmyk < result.usageCountsCount; sgkFmyk++){
            [&]() {
temp_LGnIoLC[sgkFmyk]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][sgkFmyk]);}();;
        }
        }();result.pUsageCounts=temp_LGnIoLC;}();
[&]() {
VkMicromapUsageEXT** temp_QFYutWk;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_QFYutWk=NULL;
        }
    temp_QFYutWk=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int FegLkgw=0; FegLkgw < result.usageCountsCount; FegLkgw++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][FegLkgw].contains("null")){
        temp_QFYutWk[FegLkgw]=NULL;
        }
    temp_QFYutWk[FegLkgw]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int lkXwLHC=0; lkXwLHC < 1; lkXwLHC++){
            [&]() {
temp_QFYutWk[FegLkgw][lkXwLHC]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][FegLkgw]["members"][lkXwLHC]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_QFYutWk;}();
[&]() {
result.micromap=deserialize_VkMicromapEXT(name["members"]["micromap"]);}();
return result;}

    json serialize_VkPipelinePropertiesIdentifierEXT(VkPipelinePropertiesIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XdoWZmf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OElxJOi=json({});
    
        if (name.pNext==NULL){
            return_OElxJOi["null"]=true;
            return return_OElxJOi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineIdentifier"]=[&]() {
    json return_LkGfzCK=json({});
    
        return_LkGfzCK["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_WNzlreP=json({});
    return serialize_uint8_t(name.pipelineIdentifier[i]);}();
            return_LkGfzCK["members"][std::to_string(i)].push_back(temp);
        }
        return return_LkGfzCK;
        }();
return result;}

    VkPipelinePropertiesIdentifierEXT deserialize_VkPipelinePropertiesIdentifierEXT(json name){
        auto result=VkPipelinePropertiesIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int IaWRclU=0; IaWRclU < VK_UUID_SIZE; IaWRclU++){
            [&]() {
result.pipelineIdentifier[IaWRclU]=deserialize_uint8_t(name["members"]["pipelineIdentifier"]["members"][IaWRclU]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(VkPhysicalDevicePipelinePropertiesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NqsouLN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DaVRtzw=json({});
    
        if (name.pNext==NULL){
            return_DaVRtzw["null"]=true;
            return return_DaVRtzw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelinePropertiesIdentifier"]=[&]() {
    json return_SvuyzBc=json({});
    return_SvuyzBc=[&]() {
    json return_frGYEkw=json({});
    return serialize_uint32_t(name.pipelinePropertiesIdentifier);}();return return_SvuyzBc;}();
return result;}

    VkPhysicalDevicePipelinePropertiesFeaturesEXT deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelinePropertiesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelinePropertiesIdentifier=deserialize_uint32_t(name["members"]["pipelinePropertiesIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kVVSobG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WWZyrZJ=json({});
    
        if (name.pNext==NULL){
            return_WWZyrZJ["null"]=true;
            return return_WWZyrZJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEarlyAndLateFragmentTests"]=[&]() {
    json return_LTKzEwA=json({});
    return_LTKzEwA=[&]() {
    json return_yATbJlO=json({});
    return serialize_uint32_t(name.shaderEarlyAndLateFragmentTests);}();return return_LTKzEwA;}();
return result;}

    VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(json name){
        auto result=VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderEarlyAndLateFragmentTests=deserialize_uint32_t(name["members"]["shaderEarlyAndLateFragmentTests"]);}();}();
return result;}

    json serialize_VkExternalMemoryAcquireUnmodifiedEXT(VkExternalMemoryAcquireUnmodifiedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VrDoJTa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XcVfgXm=json({});
    
        if (name.pNext==NULL){
            return_XcVfgXm["null"]=true;
            return return_XcVfgXm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["acquireUnmodifiedMemory"]=[&]() {
    json return_HFrCUMD=json({});
    return_HFrCUMD=[&]() {
    json return_ppvGtyF=json({});
    return serialize_uint32_t(name.acquireUnmodifiedMemory);}();return return_HFrCUMD;}();
return result;}

    VkExternalMemoryAcquireUnmodifiedEXT deserialize_VkExternalMemoryAcquireUnmodifiedEXT(json name){
        auto result=VkExternalMemoryAcquireUnmodifiedEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aUtWigN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aUtWigN=NULL;
        }
    temp_aUtWigN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aUtWigN;}();
[&]() {
[&]() {
result.acquireUnmodifiedMemory=deserialize_uint32_t(name["members"]["acquireUnmodifiedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HsbCooS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wUTRHwe=json({});
    
        if (name.pNext==NULL){
            return_wUTRHwe["null"]=true;
            return return_wUTRHwe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["nonSeamlessCubeMap"]=[&]() {
    json return_JXQnYeH=json({});
    return_JXQnYeH=[&]() {
    json return_vLiWpYt=json({});
    return serialize_uint32_t(name.nonSeamlessCubeMap);}();return return_JXQnYeH;}();
return result;}

    VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.nonSeamlessCubeMap=deserialize_uint32_t(name["members"]["nonSeamlessCubeMap"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkPhysicalDevicePipelineRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jIzIKUm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zxEDpuh=json({});
    
        if (name.pNext==NULL){
            return_zxEDpuh["null"]=true;
            return return_zxEDpuh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineRobustness"]=[&]() {
    json return_XkKGcFv=json({});
    return_XkKGcFv=[&]() {
    json return_uRpaKZa=json({});
    return serialize_uint32_t(name.pipelineRobustness);}();return return_XkKGcFv;}();
return result;}

    VkPhysicalDevicePipelineRobustnessFeaturesEXT deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineRobustness=deserialize_uint32_t(name["members"]["pipelineRobustness"]);}();}();
return result;}

    json serialize_VkPipelineRobustnessCreateInfoEXT(VkPipelineRobustnessCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XuYWdTD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uxCbGFz=json({});
    
        if (name.pNext==NULL){
            return_uxCbGFz["null"]=true;
            return return_uxCbGFz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffers"]=[&]() {
    json return_mULMNat=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.storageBuffers);}();
result["members"]["uniformBuffers"]=[&]() {
    json return_DukEdRj=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.uniformBuffers);}();
result["members"]["vertexInputs"]=[&]() {
    json return_BcistQd=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.vertexInputs);}();
result["members"]["images"]=[&]() {
    json return_mVQeJUH=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.images);}();
return result;}

    VkPipelineRobustnessCreateInfoEXT deserialize_VkPipelineRobustnessCreateInfoEXT(json name){
        auto result=VkPipelineRobustnessCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wVCRkwa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wVCRkwa=NULL;
        }
    temp_wVCRkwa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wVCRkwa;}();
[&]() {
result.storageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["storageBuffers"]);}();
[&]() {
result.uniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["uniformBuffers"]);}();
[&]() {
result.vertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["vertexInputs"]);}();
[&]() {
result.images=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["images"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkPhysicalDevicePipelineRobustnessPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_amddtLV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FISyNMb=json({});
    
        if (name.pNext==NULL){
            return_FISyNMb["null"]=true;
            return return_FISyNMb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["defaultRobustnessStorageBuffers"]=[&]() {
    json return_sOTLTNZ=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessStorageBuffers);}();
result["members"]["defaultRobustnessUniformBuffers"]=[&]() {
    json return_aDwFCfo=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessUniformBuffers);}();
result["members"]["defaultRobustnessVertexInputs"]=[&]() {
    json return_twMjIjH=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessVertexInputs);}();
result["members"]["defaultRobustnessImages"]=[&]() {
    json return_ZVlcIHR=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.defaultRobustnessImages);}();
return result;}

    VkPhysicalDevicePipelineRobustnessPropertiesEXT deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.defaultRobustnessStorageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessStorageBuffers"]);}();
[&]() {
result.defaultRobustnessUniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessUniformBuffers"]);}();
[&]() {
result.defaultRobustnessVertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessVertexInputs"]);}();
[&]() {
result.defaultRobustnessImages=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["defaultRobustnessImages"]);}();
return result;}

    json serialize_VkImageViewSampleWeightCreateInfoQCOM(VkImageViewSampleWeightCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UyJVzkh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RNPAvWE=json({});
    
        if (name.pNext==NULL){
            return_RNPAvWE["null"]=true;
            return return_RNPAvWE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCenter"]=[&]() {
    json return_EAYqlTQ=json({});
    return serialize_VkOffset2D(name.filterCenter);}();
result["members"]["filterSize"]=[&]() {
    json return_PIUvrgW=json({});
    return serialize_VkExtent2D(name.filterSize);}();
result["members"]["numPhases"]=[&]() {
    json return_CIjdWyu=json({});
    return serialize_uint32_t(name.numPhases);}();
return result;}

    VkImageViewSampleWeightCreateInfoQCOM deserialize_VkImageViewSampleWeightCreateInfoQCOM(json name){
        auto result=VkImageViewSampleWeightCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UIjpdbL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UIjpdbL=NULL;
        }
    temp_UIjpdbL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UIjpdbL;}();
[&]() {
result.filterCenter=deserialize_VkOffset2D(name["members"]["filterCenter"]);}();
[&]() {
result.filterSize=deserialize_VkExtent2D(name["members"]["filterSize"]);}();
[&]() {
result.numPhases=deserialize_uint32_t(name["members"]["numPhases"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(VkPhysicalDeviceImageProcessingFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BhpoXfR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SFYitaT=json({});
    
        if (name.pNext==NULL){
            return_SFYitaT["null"]=true;
            return return_SFYitaT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureSampleWeighted"]=[&]() {
    json return_yCpcqmM=json({});
    return_yCpcqmM=[&]() {
    json return_PBeBbKm=json({});
    return serialize_uint32_t(name.textureSampleWeighted);}();return return_yCpcqmM;}();
result["members"]["textureBoxFilter"]=[&]() {
    json return_ZCWumzC=json({});
    return_ZCWumzC=[&]() {
    json return_LPcPNky=json({});
    return serialize_uint32_t(name.textureBoxFilter);}();return return_ZCWumzC;}();
result["members"]["textureBlockMatch"]=[&]() {
    json return_XmYqDct=json({});
    return_XmYqDct=[&]() {
    json return_gAaRjJD=json({});
    return serialize_uint32_t(name.textureBlockMatch);}();return return_XmYqDct;}();
return result;}

    VkPhysicalDeviceImageProcessingFeaturesQCOM deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureSampleWeighted=deserialize_uint32_t(name["members"]["textureSampleWeighted"]);}();}();
[&]() {
[&]() {
result.textureBoxFilter=deserialize_uint32_t(name["members"]["textureBoxFilter"]);}();}();
[&]() {
[&]() {
result.textureBlockMatch=deserialize_uint32_t(name["members"]["textureBlockMatch"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(VkPhysicalDeviceImageProcessingPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sskkuQJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cFAmWyh=json({});
    
        if (name.pNext==NULL){
            return_cFAmWyh["null"]=true;
            return return_cFAmWyh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWeightFilterPhases"]=[&]() {
    json return_ytAgbkV=json({});
    return serialize_uint32_t(name.maxWeightFilterPhases);}();
result["members"]["maxWeightFilterDimension"]=[&]() {
    json return_cIERRpG=json({});
    return serialize_VkExtent2D(name.maxWeightFilterDimension);}();
result["members"]["maxBlockMatchRegion"]=[&]() {
    json return_BwXYTle=json({});
    return serialize_VkExtent2D(name.maxBlockMatchRegion);}();
result["members"]["maxBoxFilterBlockSize"]=[&]() {
    json return_AHeSZgu=json({});
    return serialize_VkExtent2D(name.maxBoxFilterBlockSize);}();
return result;}

    VkPhysicalDeviceImageProcessingPropertiesQCOM deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxWeightFilterPhases=deserialize_uint32_t(name["members"]["maxWeightFilterPhases"]);}();
[&]() {
result.maxWeightFilterDimension=deserialize_VkExtent2D(name["members"]["maxWeightFilterDimension"]);}();
[&]() {
result.maxBlockMatchRegion=deserialize_VkExtent2D(name["members"]["maxBlockMatchRegion"]);}();
[&]() {
result.maxBoxFilterBlockSize=deserialize_VkExtent2D(name["members"]["maxBoxFilterBlockSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(VkPhysicalDeviceTilePropertiesFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BUtDRvR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YJSZSQJ=json({});
    
        if (name.pNext==NULL){
            return_YJSZSQJ["null"]=true;
            return return_YJSZSQJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileProperties"]=[&]() {
    json return_ydEdEXV=json({});
    return_ydEdEXV=[&]() {
    json return_mMFIWda=json({});
    return serialize_uint32_t(name.tileProperties);}();return return_ydEdEXV;}();
return result;}

    VkPhysicalDeviceTilePropertiesFeaturesQCOM deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceTilePropertiesFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.tileProperties=deserialize_uint32_t(name["members"]["tileProperties"]);}();}();
return result;}

    json serialize_VkTilePropertiesQCOM(VkTilePropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ArsVcgB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mrZQTYa=json({});
    
        if (name.pNext==NULL){
            return_mrZQTYa["null"]=true;
            return return_mrZQTYa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileSize"]=[&]() {
    json return_rhosHBA=json({});
    return serialize_VkExtent3D(name.tileSize);}();
result["members"]["apronSize"]=[&]() {
    json return_gTbOjff=json({});
    return serialize_VkExtent2D(name.apronSize);}();
result["members"]["origin"]=[&]() {
    json return_xDPfHUL=json({});
    return serialize_VkOffset2D(name.origin);}();
return result;}

    VkTilePropertiesQCOM deserialize_VkTilePropertiesQCOM(json name){
        auto result=VkTilePropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.tileSize=deserialize_VkExtent3D(name["members"]["tileSize"]);}();
[&]() {
result.apronSize=deserialize_VkExtent2D(name["members"]["apronSize"]);}();
[&]() {
result.origin=deserialize_VkOffset2D(name["members"]["origin"]);}();
return result;}

    json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(VkPhysicalDeviceAmigoProfilingFeaturesSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cLsEGfA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KZzjrza=json({});
    
        if (name.pNext==NULL){
            return_KZzjrza["null"]=true;
            return return_KZzjrza;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["amigoProfiling"]=[&]() {
    json return_NVjSiap=json({});
    return_NVjSiap=[&]() {
    json return_MRnZJRq=json({});
    return serialize_uint32_t(name.amigoProfiling);}();return return_NVjSiap;}();
return result;}

    VkPhysicalDeviceAmigoProfilingFeaturesSEC deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(json name){
        auto result=VkPhysicalDeviceAmigoProfilingFeaturesSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.amigoProfiling=deserialize_uint32_t(name["members"]["amigoProfiling"]);}();}();
return result;}

    json serialize_VkAmigoProfilingSubmitInfoSEC(VkAmigoProfilingSubmitInfoSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VWZIuVU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AsMyDOb=json({});
    
        if (name.pNext==NULL){
            return_AsMyDOb["null"]=true;
            return return_AsMyDOb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["firstDrawTimestamp"]=[&]() {
    json return_WoBuahL=json({});
    return serialize_uint64_t(name.firstDrawTimestamp);}();
result["members"]["swapBufferTimestamp"]=[&]() {
    json return_BUySgtR=json({});
    return serialize_uint64_t(name.swapBufferTimestamp);}();
return result;}

    VkAmigoProfilingSubmitInfoSEC deserialize_VkAmigoProfilingSubmitInfoSEC(json name){
        auto result=VkAmigoProfilingSubmitInfoSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sfUkmbQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sfUkmbQ=NULL;
        }
    temp_sfUkmbQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sfUkmbQ;}();
[&]() {
result.firstDrawTimestamp=deserialize_uint64_t(name["members"]["firstDrawTimestamp"]);}();
[&]() {
result.swapBufferTimestamp=deserialize_uint64_t(name["members"]["swapBufferTimestamp"]);}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gyhblah=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ngXarAg=json({});
    
        if (name.pNext==NULL){
            return_ngXarAg["null"]=true;
            return return_ngXarAg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopLayout"]=[&]() {
    json return_gKUQMoU=json({});
    return_gKUQMoU=[&]() {
    json return_WxmsNOD=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopLayout);}();return return_gKUQMoU;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopLayout=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dWuahlW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kLBlNnR=json({});
    
        if (name.pNext==NULL){
            return_kLBlNnR["null"]=true;
            return return_kLBlNnR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClampZeroOne"]=[&]() {
    json return_dRkokfU=json({});
    return_dRkokfU=[&]() {
    json return_TBGCcly=json({});
    return serialize_uint32_t(name.depthClampZeroOne);}();return return_dRkokfU;}();
return result;}

    VkPhysicalDeviceDepthClampZeroOneFeaturesEXT deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClampZeroOneFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClampZeroOne=deserialize_uint32_t(name["members"]["depthClampZeroOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(VkPhysicalDeviceAddressBindingReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nBrEYVt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GGbjnnq=json({});
    
        if (name.pNext==NULL){
            return_GGbjnnq["null"]=true;
            return return_GGbjnnq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reportAddressBinding"]=[&]() {
    json return_qtQCUbi=json({});
    return_qtQCUbi=[&]() {
    json return_WHsyuwQ=json({});
    return serialize_uint32_t(name.reportAddressBinding);}();return return_qtQCUbi;}();
return result;}

    VkPhysicalDeviceAddressBindingReportFeaturesEXT deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAddressBindingReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.reportAddressBinding=deserialize_uint32_t(name["members"]["reportAddressBinding"]);}();}();
return result;}

    json serialize_VkDeviceAddressBindingCallbackDataEXT(VkDeviceAddressBindingCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SiiOwGV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dLCsvMS=json({});
    
        if (name.pNext==NULL){
            return_dLCsvMS["null"]=true;
            return return_dLCsvMS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zQBRIKG=json({});
    return serialize_VkDeviceAddressBindingFlagsEXT(name.flags);}();
result["members"]["baseAddress"]=[&]() {
    json return_lwozYxA=json({});
    return_lwozYxA=[&]() {
    json return_daHYsXu=json({});
    return serialize_uint64_t(name.baseAddress);}();return return_lwozYxA;}();
result["members"]["size"]=[&]() {
    json return_VnfLmsN=json({});
    return_VnfLmsN=[&]() {
    json return_sRDvokP=json({});
    return serialize_uint64_t(name.size);}();return return_VnfLmsN;}();
result["members"]["bindingType"]=[&]() {
    json return_UenMion=json({});
    return serialize_VkDeviceAddressBindingTypeEXT(name.bindingType);}();
return result;}

    VkDeviceAddressBindingCallbackDataEXT deserialize_VkDeviceAddressBindingCallbackDataEXT(json name){
        auto result=VkDeviceAddressBindingCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceAddressBindingFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.baseAddress=deserialize_uint64_t(name["members"]["baseAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.bindingType=deserialize_VkDeviceAddressBindingTypeEXT(name["members"]["bindingType"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(VkPhysicalDeviceOpticalFlowFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FRfyvKP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vzaLnxh=json({});
    
        if (name.pNext==NULL){
            return_vzaLnxh["null"]=true;
            return return_vzaLnxh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opticalFlow"]=[&]() {
    json return_mIvhiHU=json({});
    return_mIvhiHU=[&]() {
    json return_JYFciDJ=json({});
    return serialize_uint32_t(name.opticalFlow);}();return return_mIvhiHU;}();
return result;}

    VkPhysicalDeviceOpticalFlowFeaturesNV deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.opticalFlow=deserialize_uint32_t(name["members"]["opticalFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(VkPhysicalDeviceOpticalFlowPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WGiWMrs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZBvIqms=json({});
    
        if (name.pNext==NULL){
            return_ZBvIqms["null"]=true;
            return return_ZBvIqms;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedOutputGridSizes"]=[&]() {
    json return_CfKtEYJ=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedOutputGridSizes);}();
result["members"]["supportedHintGridSizes"]=[&]() {
    json return_YpGpSmV=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedHintGridSizes);}();
result["members"]["hintSupported"]=[&]() {
    json return_JmBJFzL=json({});
    return_JmBJFzL=[&]() {
    json return_HSJXFgE=json({});
    return serialize_uint32_t(name.hintSupported);}();return return_JmBJFzL;}();
result["members"]["costSupported"]=[&]() {
    json return_GLOPUEb=json({});
    return_GLOPUEb=[&]() {
    json return_knpZSZO=json({});
    return serialize_uint32_t(name.costSupported);}();return return_GLOPUEb;}();
result["members"]["bidirectionalFlowSupported"]=[&]() {
    json return_GdPurBJ=json({});
    return_GdPurBJ=[&]() {
    json return_hRhBBCT=json({});
    return serialize_uint32_t(name.bidirectionalFlowSupported);}();return return_GdPurBJ;}();
result["members"]["globalFlowSupported"]=[&]() {
    json return_BYDamVH=json({});
    return_BYDamVH=[&]() {
    json return_ljQMekR=json({});
    return serialize_uint32_t(name.globalFlowSupported);}();return return_BYDamVH;}();
result["members"]["minWidth"]=[&]() {
    json return_moEynCE=json({});
    return serialize_uint32_t(name.minWidth);}();
result["members"]["minHeight"]=[&]() {
    json return_fipmTYF=json({});
    return serialize_uint32_t(name.minHeight);}();
result["members"]["maxWidth"]=[&]() {
    json return_QuOcsIR=json({});
    return serialize_uint32_t(name.maxWidth);}();
result["members"]["maxHeight"]=[&]() {
    json return_pfBNMCN=json({});
    return serialize_uint32_t(name.maxHeight);}();
result["members"]["maxNumRegionsOfInterest"]=[&]() {
    json return_SFymWSL=json({});
    return serialize_uint32_t(name.maxNumRegionsOfInterest);}();
return result;}

    VkPhysicalDeviceOpticalFlowPropertiesNV deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedOutputGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedOutputGridSizes"]);}();
[&]() {
result.supportedHintGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedHintGridSizes"]);}();
[&]() {
[&]() {
result.hintSupported=deserialize_uint32_t(name["members"]["hintSupported"]);}();}();
[&]() {
[&]() {
result.costSupported=deserialize_uint32_t(name["members"]["costSupported"]);}();}();
[&]() {
[&]() {
result.bidirectionalFlowSupported=deserialize_uint32_t(name["members"]["bidirectionalFlowSupported"]);}();}();
[&]() {
[&]() {
result.globalFlowSupported=deserialize_uint32_t(name["members"]["globalFlowSupported"]);}();}();
[&]() {
result.minWidth=deserialize_uint32_t(name["members"]["minWidth"]);}();
[&]() {
result.minHeight=deserialize_uint32_t(name["members"]["minHeight"]);}();
[&]() {
result.maxWidth=deserialize_uint32_t(name["members"]["maxWidth"]);}();
[&]() {
result.maxHeight=deserialize_uint32_t(name["members"]["maxHeight"]);}();
[&]() {
result.maxNumRegionsOfInterest=deserialize_uint32_t(name["members"]["maxNumRegionsOfInterest"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatInfoNV(VkOpticalFlowImageFormatInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SqDcKOO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BObtZhF=json({});
    
        if (name.pNext==NULL){
            return_BObtZhF["null"]=true;
            return return_BObtZhF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_unZortZ=json({});
    return serialize_VkOpticalFlowUsageFlagsNV(name.usage);}();
return result;}

    VkOpticalFlowImageFormatInfoNV deserialize_VkOpticalFlowImageFormatInfoNV(json name){
        auto result=VkOpticalFlowImageFormatInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YkzPbFo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YkzPbFo=NULL;
        }
    temp_YkzPbFo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YkzPbFo;}();
[&]() {
result.usage=deserialize_VkOpticalFlowUsageFlagsNV(name["members"]["usage"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatPropertiesNV(VkOpticalFlowImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wlukWqo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SiRjhmT=json({});
    
        if (name.pNext==NULL){
            return_SiRjhmT["null"]=true;
            return return_SiRjhmT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_ekjWAnR=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkOpticalFlowImageFormatPropertiesNV deserialize_VkOpticalFlowImageFormatPropertiesNV(json name){
        auto result=VkOpticalFlowImageFormatPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zRsgcJS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zRsgcJS=NULL;
        }
    temp_zRsgcJS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zRsgcJS;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreateInfoNV(VkOpticalFlowSessionCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WvTdEyp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JkgPNET=json({});
    
        if (name.pNext==NULL){
            return_JkgPNET["null"]=true;
            return return_JkgPNET;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["width"]=[&]() {
    json return_voWaEDx=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_dXrWnJK=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["imageFormat"]=[&]() {
    json return_wiXaKYM=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["flowVectorFormat"]=[&]() {
    json return_lQEjlHU=json({});
    return serialize_VkFormat(name.flowVectorFormat);}();
result["members"]["costFormat"]=[&]() {
    json return_OewwxuG=json({});
    return serialize_VkFormat(name.costFormat);}();
result["members"]["outputGridSize"]=[&]() {
    json return_gnahvTh=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.outputGridSize);}();
result["members"]["hintGridSize"]=[&]() {
    json return_TsjjvVu=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.hintGridSize);}();
result["members"]["performanceLevel"]=[&]() {
    json return_hndctYX=json({});
    return serialize_VkOpticalFlowPerformanceLevelNV(name.performanceLevel);}();
result["members"]["flags"]=[&]() {
    json return_fxdcfFi=json({});
    return serialize_VkOpticalFlowSessionCreateFlagsNV(name.flags);}();
return result;}

    VkOpticalFlowSessionCreateInfoNV deserialize_VkOpticalFlowSessionCreateInfoNV(json name){
        auto result=VkOpticalFlowSessionCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.flowVectorFormat=deserialize_VkFormat(name["members"]["flowVectorFormat"]);}();
[&]() {
result.costFormat=deserialize_VkFormat(name["members"]["costFormat"]);}();
[&]() {
result.outputGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["outputGridSize"]);}();
[&]() {
result.hintGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["hintGridSize"]);}();
[&]() {
result.performanceLevel=deserialize_VkOpticalFlowPerformanceLevelNV(name["members"]["performanceLevel"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowSessionCreateFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(VkOpticalFlowSessionCreatePrivateDataInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZFUZKnI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xzgkfGD=json({});
    
        if (name.pNext==NULL){
            return_xzgkfGD["null"]=true;
            return return_xzgkfGD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["id"]=[&]() {
    json return_RJbdjQU=json({});
    return serialize_uint32_t(name.id);}();
result["members"]["size"]=[&]() {
    json return_eOPoKyV=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["pPrivateData"]=[&]() {
    json return_quxhCSQ=json({});
    
        if (name.pPrivateData==NULL){
            return_quxhCSQ["null"]=true;
            return return_quxhCSQ;
        }
        return serialize_void_p(name.pPrivateData);
}();
return result;}

    VkOpticalFlowSessionCreatePrivateDataInfoNV deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(json name){
        auto result=VkOpticalFlowSessionCreatePrivateDataInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.id=deserialize_uint32_t(name["members"]["id"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
void* temp_cUFABnm;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_cUFABnm=NULL;
        }
    temp_cUFABnm=deserialize_void_p(name["members"]["pPrivateData"]);
}();result.pPrivateData=temp_cUFABnm;}();
return result;}

    json serialize_VkOpticalFlowExecuteInfoNV(VkOpticalFlowExecuteInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_faoxOvk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IKxJVkt=json({});
    
        if (name.pNext==NULL){
            return_IKxJVkt["null"]=true;
            return return_IKxJVkt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yChqeBz=json({});
    return serialize_VkOpticalFlowExecuteFlagsNV(name.flags);}();
result["members"]["regionCount"]=[&]() {
    json return_mZIErUW=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_DoJPwBK=json({});
    
        if (name.pRegions==NULL){
            return_DoJPwBK["null"]=true;
            return return_DoJPwBK;
        }
        
        return_DoJPwBK["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_MTdIgFn=json({});
    return serialize_VkRect2D(name.pRegions[i]);}();
            return_DoJPwBK["members"][std::to_string(i)].push_back(temp);
        }
        return return_DoJPwBK;
        }();
return result;}

    VkOpticalFlowExecuteInfoNV deserialize_VkOpticalFlowExecuteInfoNV(json name){
        auto result=VkOpticalFlowExecuteInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkOpticalFlowExecuteFlagsNV(name["members"]["flags"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkRect2D* temp_UTNRjAq;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_UTNRjAq=NULL;
        }
    temp_UTNRjAq=(VkRect2D*)malloc(result.regionCount*sizeof(VkRect2D));
        for (int SokePcC=0; SokePcC < result.regionCount; SokePcC++){
            [&]() {
temp_UTNRjAq[SokePcC]=deserialize_VkRect2D(name["members"]["pRegions"]["members"][SokePcC]);}();;
        }
        }();result.pRegions=temp_UTNRjAq;}();
return result;}

    json serialize_VkPhysicalDeviceFaultFeaturesEXT(VkPhysicalDeviceFaultFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YcjCgTA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dSfvtbI=json({});
    
        if (name.pNext==NULL){
            return_dSfvtbI["null"]=true;
            return return_dSfvtbI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceFault"]=[&]() {
    json return_ljxmAWZ=json({});
    return_ljxmAWZ=[&]() {
    json return_mDNOjel=json({});
    return serialize_uint32_t(name.deviceFault);}();return return_ljxmAWZ;}();
result["members"]["deviceFaultVendorBinary"]=[&]() {
    json return_FXlJJMH=json({});
    return_FXlJJMH=[&]() {
    json return_EYstxGy=json({});
    return serialize_uint32_t(name.deviceFaultVendorBinary);}();return return_FXlJJMH;}();
return result;}

    VkPhysicalDeviceFaultFeaturesEXT deserialize_VkPhysicalDeviceFaultFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFaultFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceFault=deserialize_uint32_t(name["members"]["deviceFault"]);}();}();
[&]() {
[&]() {
result.deviceFaultVendorBinary=deserialize_uint32_t(name["members"]["deviceFaultVendorBinary"]);}();}();
return result;}

    json serialize_VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["addressType"]=[&]() {
    json return_yPxCUXr=json({});
    return serialize_VkDeviceFaultAddressTypeEXT(name.addressType);}();
result["members"]["reportedAddress"]=[&]() {
    json return_XQJjFmt=json({});
    return_XQJjFmt=[&]() {
    json return_WyRnWob=json({});
    return serialize_uint64_t(name.reportedAddress);}();return return_XQJjFmt;}();
result["members"]["addressPrecision"]=[&]() {
    json return_dtZMifo=json({});
    return_dtZMifo=[&]() {
    json return_ukGszWn=json({});
    return serialize_uint64_t(name.addressPrecision);}();return return_dtZMifo;}();
return result;}

    VkDeviceFaultAddressInfoEXT deserialize_VkDeviceFaultAddressInfoEXT(json name){
        auto result=VkDeviceFaultAddressInfoEXT();
    
[&]() {
result.addressType=deserialize_VkDeviceFaultAddressTypeEXT(name["members"]["addressType"]);}();
[&]() {
[&]() {
result.reportedAddress=deserialize_uint64_t(name["members"]["reportedAddress"]);}();}();
[&]() {
[&]() {
result.addressPrecision=deserialize_uint64_t(name["members"]["addressPrecision"]);}();}();
return result;}

    json serialize_VkDeviceFaultVendorInfoEXT(VkDeviceFaultVendorInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["description"]=[&]() {
    json return_hxUpbkO=json({});
    
        return_hxUpbkO["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ejadMAb=json({});
    return serialize_char(name.description[i]);}();
            return_hxUpbkO["members"][std::to_string(i)].push_back(temp);
        }
        return return_hxUpbkO;
        }();
result["members"]["vendorFaultCode"]=[&]() {
    json return_npoOvPc=json({});
    return serialize_uint64_t(name.vendorFaultCode);}();
result["members"]["vendorFaultData"]=[&]() {
    json return_kKXcMYE=json({});
    return serialize_uint64_t(name.vendorFaultData);}();
return result;}

    VkDeviceFaultVendorInfoEXT deserialize_VkDeviceFaultVendorInfoEXT(json name){
        auto result=VkDeviceFaultVendorInfoEXT();
    
[&]() {

        for (int MJiLTjx=0; MJiLTjx < VK_MAX_DESCRIPTION_SIZE; MJiLTjx++){
            [&]() {
result.description[MJiLTjx]=deserialize_char(name["members"]["description"]["members"][MJiLTjx]);}();;
        }
        }();
[&]() {
result.vendorFaultCode=deserialize_uint64_t(name["members"]["vendorFaultCode"]);}();
[&]() {
result.vendorFaultData=deserialize_uint64_t(name["members"]["vendorFaultData"]);}();
return result;}

    json serialize_VkDeviceFaultCountsEXT(VkDeviceFaultCountsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ljGGgaK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hZVEUma=json({});
    
        if (name.pNext==NULL){
            return_hZVEUma["null"]=true;
            return return_hZVEUma;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["addressInfoCount"]=[&]() {
    json return_sgddOSP=json({});
    return serialize_uint32_t(name.addressInfoCount);}();
result["members"]["vendorInfoCount"]=[&]() {
    json return_LfGaDmk=json({});
    return serialize_uint32_t(name.vendorInfoCount);}();
result["members"]["vendorBinarySize"]=[&]() {
    json return_wSIocjO=json({});
    return_wSIocjO=[&]() {
    json return_gdJloYf=json({});
    return serialize_uint64_t(name.vendorBinarySize);}();return return_wSIocjO;}();
return result;}

    VkDeviceFaultCountsEXT deserialize_VkDeviceFaultCountsEXT(json name){
        auto result=VkDeviceFaultCountsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.addressInfoCount=deserialize_uint32_t(name["members"]["addressInfoCount"]);}();
[&]() {
result.vendorInfoCount=deserialize_uint32_t(name["members"]["vendorInfoCount"]);}();
[&]() {
[&]() {
result.vendorBinarySize=deserialize_uint64_t(name["members"]["vendorBinarySize"]);}();}();
return result;}

    json serialize_VkDeviceFaultInfoEXT(VkDeviceFaultInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VWZCHAw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BgJhEyR=json({});
    
        if (name.pNext==NULL){
            return_BgJhEyR["null"]=true;
            return return_BgJhEyR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["description"]=[&]() {
    json return_RWjqhdu=json({});
    
        return_RWjqhdu["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_RXTAFKO=json({});
    return serialize_char(name.description[i]);}();
            return_RWjqhdu["members"][std::to_string(i)].push_back(temp);
        }
        return return_RWjqhdu;
        }();
result["members"]["pAddressInfos"]=[&]() {
    json return_SizGDsQ=json({});
    
        if (name.pAddressInfos==NULL){
            return_SizGDsQ["null"]=true;
            return return_SizGDsQ;
        }
        return_SizGDsQ=[&]() {
    json return_nsPEkJc=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*name.pAddressInfos);}();
return return_SizGDsQ;}();
result["members"]["pVendorInfos"]=[&]() {
    json return_OMbVcUQ=json({});
    
        if (name.pVendorInfos==NULL){
            return_OMbVcUQ["null"]=true;
            return return_OMbVcUQ;
        }
        return_OMbVcUQ=[&]() {
    json return_BBNTsyT=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*name.pVendorInfos);}();
return return_OMbVcUQ;}();
result["members"]["pVendorBinaryData"]=[&]() {
    json return_JhkXfsh=json({});
    
        if (name.pVendorBinaryData==NULL){
            return_JhkXfsh["null"]=true;
            return return_JhkXfsh;
        }
        return serialize_void_p(name.pVendorBinaryData);
}();
return result;}

    VkDeviceFaultInfoEXT deserialize_VkDeviceFaultInfoEXT(json name){
        auto result=VkDeviceFaultInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int VvtJKGd=0; VvtJKGd < VK_MAX_DESCRIPTION_SIZE; VvtJKGd++){
            [&]() {
result.description[VvtJKGd]=deserialize_char(name["members"]["description"]["members"][VvtJKGd]);}();;
        }
        }();
[&]() {

        if (name["members"]["pAddressInfos"].contains("null")){
        result.pAddressInfos=NULL;
        }
    [&]() {
*(result.pAddressInfos)=deserialize_VkDeviceFaultAddressInfoEXT(name["members"]["pAddressInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorInfos"].contains("null")){
        result.pVendorInfos=NULL;
        }
    [&]() {
*(result.pVendorInfos)=deserialize_VkDeviceFaultVendorInfoEXT(name["members"]["pVendorInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        result.pVendorBinaryData=NULL;
        }
    result.pVendorBinaryData=deserialize_void_p(name["members"]["pVendorBinaryData"]);
}();
return result;}

    json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(VkDeviceFaultVendorBinaryHeaderVersionOneEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_IsVfujf=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_OXOicLv=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_BlqwMWy=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_rPmAUPH=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["driverVersion"]=[&]() {
    json return_wYpvaKz=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_jbkUjnh=json({});
    
        return_jbkUjnh["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_aXZJyxs=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_jbkUjnh["members"][std::to_string(i)].push_back(temp);
        }
        return return_jbkUjnh;
        }();
result["members"]["applicationNameOffset"]=[&]() {
    json return_DfvkcxF=json({});
    return serialize_uint32_t(name.applicationNameOffset);}();
result["members"]["applicationVersion"]=[&]() {
    json return_qtFFzSH=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["engineNameOffset"]=[&]() {
    json return_xDAKEvq=json({});
    return serialize_uint32_t(name.engineNameOffset);}();
result["members"]["engineVersion"]=[&]() {
    json return_cTvdmGt=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_QWpbXFV=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkDeviceFaultVendorBinaryHeaderVersionOneEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(json name){
        auto result=VkDeviceFaultVendorBinaryHeaderVersionOneEXT();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {

        for (int QWEQPUw=0; QWEQPUw < VK_UUID_SIZE; QWEQPUw++){
            [&]() {
result.pipelineCacheUUID[QWEQPUw]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][QWEQPUw]);}();;
        }
        }();
[&]() {
result.applicationNameOffset=deserialize_uint32_t(name["members"]["applicationNameOffset"]);}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
result.engineNameOffset=deserialize_uint32_t(name["members"]["engineNameOffset"]);}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nDfWrso=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RsdeAYH=json({});
    
        if (name.pNext==NULL){
            return_RsdeAYH["null"]=true;
            return return_RsdeAYH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineLibraryGroupHandles"]=[&]() {
    json return_jPKkLwa=json({});
    return_jPKkLwa=[&]() {
    json return_joVUAkH=json({});
    return serialize_uint32_t(name.pipelineLibraryGroupHandles);}();return return_jPKkLwa;}();
return result;}

    VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineLibraryGroupHandles=deserialize_uint32_t(name["members"]["pipelineLibraryGroupHandles"]);}();}();
return result;}

    json serialize_VkDepthBiasInfoEXT(VkDepthBiasInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wUDYBRr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lEEJBjx=json({});
    
        if (name.pNext==NULL){
            return_lEEJBjx["null"]=true;
            return return_lEEJBjx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_SjHUrbY=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_TUPYdgg=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_tDscnaS=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
return result;}

    VkDepthBiasInfoEXT deserialize_VkDepthBiasInfoEXT(json name){
        auto result=VkDepthBiasInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_InJotof;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_InJotof=NULL;
        }
    temp_InJotof=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_InJotof;}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
return result;}

    json serialize_VkDepthBiasRepresentationInfoEXT(VkDepthBiasRepresentationInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YiUcAzI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bLdnbFV=json({});
    
        if (name.pNext==NULL){
            return_bLdnbFV["null"]=true;
            return return_bLdnbFV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasRepresentation"]=[&]() {
    json return_kQRgvAc=json({});
    return serialize_VkDepthBiasRepresentationEXT(name.depthBiasRepresentation);}();
result["members"]["depthBiasExact"]=[&]() {
    json return_Nzfwayu=json({});
    return_Nzfwayu=[&]() {
    json return_UzJttRx=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_Nzfwayu;}();
return result;}

    VkDepthBiasRepresentationInfoEXT deserialize_VkDepthBiasRepresentationInfoEXT(json name){
        auto result=VkDepthBiasRepresentationInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vvRKUxW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vvRKUxW=NULL;
        }
    temp_vvRKUxW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vvRKUxW;}();
[&]() {
result.depthBiasRepresentation=deserialize_VkDepthBiasRepresentationEXT(name["members"]["depthBiasRepresentation"]);}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkDecompressMemoryRegionNV(VkDecompressMemoryRegionNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_ANyAmgd=json({});
    return_ANyAmgd=[&]() {
    json return_bpVSmwC=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_ANyAmgd;}();
result["members"]["dstAddress"]=[&]() {
    json return_LsDrvTv=json({});
    return_LsDrvTv=[&]() {
    json return_DevIycs=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_LsDrvTv;}();
result["members"]["compressedSize"]=[&]() {
    json return_msgfBlU=json({});
    return_msgfBlU=[&]() {
    json return_YaUwpGC=json({});
    return serialize_uint64_t(name.compressedSize);}();return return_msgfBlU;}();
result["members"]["decompressedSize"]=[&]() {
    json return_GhLeFGo=json({});
    return_GhLeFGo=[&]() {
    json return_AVrjmkY=json({});
    return serialize_uint64_t(name.decompressedSize);}();return return_GhLeFGo;}();
result["members"]["decompressionMethod"]=[&]() {
    json return_yQWvxYq=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethod);}();
return result;}

    VkDecompressMemoryRegionNV deserialize_VkDecompressMemoryRegionNV(json name){
        auto result=VkDecompressMemoryRegionNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.compressedSize=deserialize_uint64_t(name["members"]["compressedSize"]);}();}();
[&]() {
[&]() {
result.decompressedSize=deserialize_uint64_t(name["members"]["decompressedSize"]);}();}();
[&]() {
result.decompressionMethod=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethod"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EwaJOpq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rXavuGh=json({});
    
        if (name.pNext==NULL){
            return_rXavuGh["null"]=true;
            return return_rXavuGh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreMask"]=[&]() {
    json return_psIrBEz=json({});
    return serialize_uint64_t(name.shaderCoreMask);}();
result["members"]["shaderCoreCount"]=[&]() {
    json return_nmlNcIT=json({});
    return serialize_uint32_t(name.shaderCoreCount);}();
result["members"]["shaderWarpsPerCore"]=[&]() {
    json return_MMYHHup=json({});
    return serialize_uint32_t(name.shaderWarpsPerCore);}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreMask=deserialize_uint64_t(name["members"]["shaderCoreMask"]);}();
[&]() {
result.shaderCoreCount=deserialize_uint32_t(name["members"]["shaderCoreCount"]);}();
[&]() {
result.shaderWarpsPerCore=deserialize_uint32_t(name["members"]["shaderWarpsPerCore"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vDEdtIp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YAvzGzm=json({});
    
        if (name.pNext==NULL){
            return_YAvzGzm["null"]=true;
            return return_YAvzGzm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreBuiltins"]=[&]() {
    json return_aMhiXgD=json({});
    return_aMhiXgD=[&]() {
    json return_ooodYqZ=json({});
    return serialize_uint32_t(name.shaderCoreBuiltins);}();return return_aMhiXgD;}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderCoreBuiltins=deserialize_uint32_t(name["members"]["shaderCoreBuiltins"]);}();}();
return result;}

    json serialize_VkFrameBoundaryEXT(VkFrameBoundaryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TaWNZMx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tivoHPk=json({});
    
        if (name.pNext==NULL){
            return_tivoHPk["null"]=true;
            return return_tivoHPk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RuxgcQR=json({});
    return serialize_VkFrameBoundaryFlagsEXT(name.flags);}();
result["members"]["frameID"]=[&]() {
    json return_gugIxdu=json({});
    return serialize_uint64_t(name.frameID);}();
result["members"]["imageCount"]=[&]() {
    json return_rrUFLhe=json({});
    return serialize_uint32_t(name.imageCount);}();
result["members"]["pImages"]=[&]() {
    json return_tyFwGnr=json({});
    
        if (name.pImages==NULL){
            return_tyFwGnr["null"]=true;
            return return_tyFwGnr;
        }
        
        return_tyFwGnr["members"]={};
        for(int i=0; i < name.imageCount; i++){
            json temp;
            temp=[&]() {
    json return_lxCMeaH=json({});
    return serialize_VkImage(name.pImages[i]);}();
            return_tyFwGnr["members"][std::to_string(i)].push_back(temp);
        }
        return return_tyFwGnr;
        }();
result["members"]["bufferCount"]=[&]() {
    json return_bKwBtWF=json({});
    return serialize_uint32_t(name.bufferCount);}();
result["members"]["pBuffers"]=[&]() {
    json return_yQOtxpy=json({});
    
        if (name.pBuffers==NULL){
            return_yQOtxpy["null"]=true;
            return return_yQOtxpy;
        }
        
        return_yQOtxpy["members"]={};
        for(int i=0; i < name.bufferCount; i++){
            json temp;
            temp=[&]() {
    json return_YcUNqPv=json({});
    return serialize_VkBuffer(name.pBuffers[i]);}();
            return_yQOtxpy["members"][std::to_string(i)].push_back(temp);
        }
        return return_yQOtxpy;
        }();
result["members"]["tagName"]=[&]() {
    json return_IvrHDVe=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_jVTFsDu=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_mAKdXig=json({});
    
        if (name.pTag==NULL){
            return_mAKdXig["null"]=true;
            return return_mAKdXig;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkFrameBoundaryEXT deserialize_VkFrameBoundaryEXT(json name){
        auto result=VkFrameBoundaryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WwlfLsF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WwlfLsF=NULL;
        }
    temp_WwlfLsF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WwlfLsF;}();
[&]() {
result.flags=deserialize_VkFrameBoundaryFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.frameID=deserialize_uint64_t(name["members"]["frameID"]);}();
[&]() {
result.imageCount=deserialize_uint32_t(name["members"]["imageCount"]);}();
[&]() {
VkImage* temp_uKseGDP;[&]() {

        if (name["members"]["pImages"].contains("null")){
        temp_uKseGDP=NULL;
        }
    temp_uKseGDP=(VkImage*)malloc(result.imageCount*sizeof(VkImage));
        for (int uSLMVCS=0; uSLMVCS < result.imageCount; uSLMVCS++){
            [&]() {
temp_uKseGDP[uSLMVCS]=deserialize_VkImage(name["members"]["pImages"]["members"][uSLMVCS]);}();;
        }
        }();result.pImages=temp_uKseGDP;}();
[&]() {
result.bufferCount=deserialize_uint32_t(name["members"]["bufferCount"]);}();
[&]() {
VkBuffer* temp_fagKLQB;[&]() {

        if (name["members"]["pBuffers"].contains("null")){
        temp_fagKLQB=NULL;
        }
    temp_fagKLQB=(VkBuffer*)malloc(result.bufferCount*sizeof(VkBuffer));
        for (int rlitAWh=0; rlitAWh < result.bufferCount; rlitAWh++){
            [&]() {
temp_fagKLQB[rlitAWh]=deserialize_VkBuffer(name["members"]["pBuffers"]["members"][rlitAWh]);}();;
        }
        }();result.pBuffers=temp_fagKLQB;}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_cKtaUXg;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_cKtaUXg=NULL;
        }
    temp_cKtaUXg=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_cKtaUXg;}();
return result;}

    json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(VkPhysicalDeviceFrameBoundaryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tLtgFVN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qsznzMq=json({});
    
        if (name.pNext==NULL){
            return_qsznzMq["null"]=true;
            return return_qsznzMq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["frameBoundary"]=[&]() {
    json return_KJYimoO=json({});
    return_KJYimoO=[&]() {
    json return_QRkkKxx=json({});
    return serialize_uint32_t(name.frameBoundary);}();return return_KJYimoO;}();
return result;}

    VkPhysicalDeviceFrameBoundaryFeaturesEXT deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFrameBoundaryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.frameBoundary=deserialize_uint32_t(name["members"]["frameBoundary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XchunFR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MrcyAvS=json({});
    
        if (name.pNext==NULL){
            return_MrcyAvS["null"]=true;
            return return_MrcyAvS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRenderingUnusedAttachments"]=[&]() {
    json return_UzlBkAG=json({});
    return_UzlBkAG=[&]() {
    json return_iOEGIlK=json({});
    return serialize_uint32_t(name.dynamicRenderingUnusedAttachments);}();return return_UzlBkAG;}();
return result;}

    VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRenderingUnusedAttachments=deserialize_uint32_t(name["members"]["dynamicRenderingUnusedAttachments"]);}();}();
return result;}

    json serialize_VkSurfacePresentModeEXT(VkSurfacePresentModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OBNPrpC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_argTbAs=json({});
    
        if (name.pNext==NULL){
            return_argTbAs["null"]=true;
            return return_argTbAs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMode"]=[&]() {
    json return_bVJNHgH=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
return result;}

    VkSurfacePresentModeEXT deserialize_VkSurfacePresentModeEXT(json name){
        auto result=VkSurfacePresentModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
return result;}

    json serialize_VkSurfacePresentScalingCapabilitiesEXT(VkSurfacePresentScalingCapabilitiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oWQROzI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_liUnter=json({});
    
        if (name.pNext==NULL){
            return_liUnter["null"]=true;
            return return_liUnter;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedPresentScaling"]=[&]() {
    json return_dhVydHD=json({});
    return serialize_VkPresentScalingFlagsEXT(name.supportedPresentScaling);}();
result["members"]["supportedPresentGravityX"]=[&]() {
    json return_OhDwNcL=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityX);}();
result["members"]["supportedPresentGravityY"]=[&]() {
    json return_dSXXsLN=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityY);}();
result["members"]["minScaledImageExtent"]=[&]() {
    json return_fDbRvvV=json({});
    return serialize_VkExtent2D(name.minScaledImageExtent);}();
result["members"]["maxScaledImageExtent"]=[&]() {
    json return_IfneMht=json({});
    return serialize_VkExtent2D(name.maxScaledImageExtent);}();
return result;}

    VkSurfacePresentScalingCapabilitiesEXT deserialize_VkSurfacePresentScalingCapabilitiesEXT(json name){
        auto result=VkSurfacePresentScalingCapabilitiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedPresentScaling=deserialize_VkPresentScalingFlagsEXT(name["members"]["supportedPresentScaling"]);}();
[&]() {
result.supportedPresentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityX"]);}();
[&]() {
result.supportedPresentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityY"]);}();
[&]() {
result.minScaledImageExtent=deserialize_VkExtent2D(name["members"]["minScaledImageExtent"]);}();
[&]() {
result.maxScaledImageExtent=deserialize_VkExtent2D(name["members"]["maxScaledImageExtent"]);}();
return result;}

    json serialize_VkSurfacePresentModeCompatibilityEXT(VkSurfacePresentModeCompatibilityEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oMaJcDC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_obUduSu=json({});
    
        if (name.pNext==NULL){
            return_obUduSu["null"]=true;
            return return_obUduSu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_tVcmJBL=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_iuobwyQ=json({});
    
        if (name.pPresentModes==NULL){
            return_iuobwyQ["null"]=true;
            return return_iuobwyQ;
        }
        
        return_iuobwyQ["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_tYveDll=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_iuobwyQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_iuobwyQ;
        }();
return result;}

    VkSurfacePresentModeCompatibilityEXT deserialize_VkSurfacePresentModeCompatibilityEXT(json name){
        auto result=VkSurfacePresentModeCompatibilityEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        result.pPresentModes=NULL;
        }
    result.pPresentModes=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int kifDXKU=0; kifDXKU < result.presentModeCount; kifDXKU++){
            [&]() {
result.pPresentModes[kifDXKU]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][kifDXKU]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Fzlkerd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NjydZgn=json({});
    
        if (name.pNext==NULL){
            return_NjydZgn["null"]=true;
            return return_NjydZgn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainMaintenance1"]=[&]() {
    json return_CmMhNpb=json({});
    return_CmMhNpb=[&]() {
    json return_oSvnAJx=json({});
    return serialize_uint32_t(name.swapchainMaintenance1);}();return return_CmMhNpb;}();
return result;}

    VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(json name){
        auto result=VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.swapchainMaintenance1=deserialize_uint32_t(name["members"]["swapchainMaintenance1"]);}();}();
return result;}

    json serialize_VkSwapchainPresentFenceInfoEXT(VkSwapchainPresentFenceInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lDODjhi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uvYvFaR=json({});
    
        if (name.pNext==NULL){
            return_uvYvFaR["null"]=true;
            return return_uvYvFaR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_rTVvjgS=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pFences"]=[&]() {
    json return_NVGvNUk=json({});
    
        if (name.pFences==NULL){
            return_NVGvNUk["null"]=true;
            return return_NVGvNUk;
        }
        
        return_NVGvNUk["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_bNNeaRJ=json({});
    return serialize_VkFence(name.pFences[i]);}();
            return_NVGvNUk["members"][std::to_string(i)].push_back(temp);
        }
        return return_NVGvNUk;
        }();
return result;}

    VkSwapchainPresentFenceInfoEXT deserialize_VkSwapchainPresentFenceInfoEXT(json name){
        auto result=VkSwapchainPresentFenceInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_socUBeI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_socUBeI=NULL;
        }
    temp_socUBeI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_socUBeI;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkFence* temp_yuqNGNJ;[&]() {

        if (name["members"]["pFences"].contains("null")){
        temp_yuqNGNJ=NULL;
        }
    temp_yuqNGNJ=(VkFence*)malloc(result.swapchainCount*sizeof(VkFence));
        for (int SuZkcdS=0; SuZkcdS < result.swapchainCount; SuZkcdS++){
            [&]() {
temp_yuqNGNJ[SuZkcdS]=deserialize_VkFence(name["members"]["pFences"]["members"][SuZkcdS]);}();;
        }
        }();result.pFences=temp_yuqNGNJ;}();
return result;}

    json serialize_VkSwapchainPresentModesCreateInfoEXT(VkSwapchainPresentModesCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iNaBXrN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SdMzMPy=json({});
    
        if (name.pNext==NULL){
            return_SdMzMPy["null"]=true;
            return return_SdMzMPy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_falxvWu=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_zbmmNIE=json({});
    
        if (name.pPresentModes==NULL){
            return_zbmmNIE["null"]=true;
            return return_zbmmNIE;
        }
        
        return_zbmmNIE["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_lhroLOk=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_zbmmNIE["members"][std::to_string(i)].push_back(temp);
        }
        return return_zbmmNIE;
        }();
return result;}

    VkSwapchainPresentModesCreateInfoEXT deserialize_VkSwapchainPresentModesCreateInfoEXT(json name){
        auto result=VkSwapchainPresentModesCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AHwulLj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AHwulLj=NULL;
        }
    temp_AHwulLj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AHwulLj;}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {
VkPresentModeKHR* temp_TMVFZqK;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_TMVFZqK=NULL;
        }
    temp_TMVFZqK=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int tFTmDQg=0; tFTmDQg < result.presentModeCount; tFTmDQg++){
            [&]() {
temp_TMVFZqK[tFTmDQg]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][tFTmDQg]);}();;
        }
        }();result.pPresentModes=temp_TMVFZqK;}();
return result;}

    json serialize_VkSwapchainPresentModeInfoEXT(VkSwapchainPresentModeInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DyWNZpi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FAeFJut=json({});
    
        if (name.pNext==NULL){
            return_FAeFJut["null"]=true;
            return return_FAeFJut;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_MtnmunL=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_VKnaAgq=json({});
    
        if (name.pPresentModes==NULL){
            return_VKnaAgq["null"]=true;
            return return_VKnaAgq;
        }
        
        return_VKnaAgq["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_jyNZloe=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_VKnaAgq["members"][std::to_string(i)].push_back(temp);
        }
        return return_VKnaAgq;
        }();
return result;}

    VkSwapchainPresentModeInfoEXT deserialize_VkSwapchainPresentModeInfoEXT(json name){
        auto result=VkSwapchainPresentModeInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SKQMZZp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SKQMZZp=NULL;
        }
    temp_SKQMZZp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SKQMZZp;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentModeKHR* temp_fJdBRSs;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_fJdBRSs=NULL;
        }
    temp_fJdBRSs=(VkPresentModeKHR*)malloc(result.swapchainCount*sizeof(VkPresentModeKHR));
        for (int jDrwXYN=0; jDrwXYN < result.swapchainCount; jDrwXYN++){
            [&]() {
temp_fJdBRSs[jDrwXYN]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][jDrwXYN]);}();;
        }
        }();result.pPresentModes=temp_fJdBRSs;}();
return result;}

    json serialize_VkSwapchainPresentScalingCreateInfoEXT(VkSwapchainPresentScalingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KSvTAlK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MmlTUpD=json({});
    
        if (name.pNext==NULL){
            return_MmlTUpD["null"]=true;
            return return_MmlTUpD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalingBehavior"]=[&]() {
    json return_tosbUTs=json({});
    return serialize_VkPresentScalingFlagsEXT(name.scalingBehavior);}();
result["members"]["presentGravityX"]=[&]() {
    json return_LgXPtJt=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityX);}();
result["members"]["presentGravityY"]=[&]() {
    json return_XpVsYJz=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityY);}();
return result;}

    VkSwapchainPresentScalingCreateInfoEXT deserialize_VkSwapchainPresentScalingCreateInfoEXT(json name){
        auto result=VkSwapchainPresentScalingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rGYRrEP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rGYRrEP=NULL;
        }
    temp_rGYRrEP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rGYRrEP;}();
[&]() {
result.scalingBehavior=deserialize_VkPresentScalingFlagsEXT(name["members"]["scalingBehavior"]);}();
[&]() {
result.presentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityX"]);}();
[&]() {
result.presentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityY"]);}();
return result;}

    json serialize_VkReleaseSwapchainImagesInfoEXT(VkReleaseSwapchainImagesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fRciZHy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nLpuCdF=json({});
    
        if (name.pNext==NULL){
            return_nLpuCdF["null"]=true;
            return return_nLpuCdF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_suFXdJM=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndexCount"]=[&]() {
    json return_kWFgQgV=json({});
    return serialize_uint32_t(name.imageIndexCount);}();
result["members"]["pImageIndices"]=[&]() {
    json return_jFMYTof=json({});
    
        if (name.pImageIndices==NULL){
            return_jFMYTof["null"]=true;
            return return_jFMYTof;
        }
        
        return_jFMYTof["members"]={};
        for(int i=0; i < name.imageIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_veQIjly=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_jFMYTof["members"][std::to_string(i)].push_back(temp);
        }
        return return_jFMYTof;
        }();
return result;}

    VkReleaseSwapchainImagesInfoEXT deserialize_VkReleaseSwapchainImagesInfoEXT(json name){
        auto result=VkReleaseSwapchainImagesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yBuvpov;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yBuvpov=NULL;
        }
    temp_yBuvpov=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yBuvpov;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndexCount=deserialize_uint32_t(name["members"]["imageIndexCount"]);}();
[&]() {
uint32_t* temp_SYXrMRi;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_SYXrMRi=NULL;
        }
    temp_SYXrMRi=(uint32_t*)malloc(result.imageIndexCount*sizeof(uint32_t));
        for (int kttLJXR=0; kttLJXR < result.imageIndexCount; kttLJXR++){
            [&]() {
temp_SYXrMRi[kttLJXR]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][kttLJXR]);}();;
        }
        }();result.pImageIndices=temp_SYXrMRi;}();
return result;}

    json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(VkPhysicalDeviceDepthBiasControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LxYMulX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qzsqarU=json({});
    
        if (name.pNext==NULL){
            return_qzsqarU["null"]=true;
            return return_qzsqarU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasControl"]=[&]() {
    json return_zrXZotr=json({});
    return_zrXZotr=[&]() {
    json return_KKdJybb=json({});
    return serialize_uint32_t(name.depthBiasControl);}();return return_zrXZotr;}();
result["members"]["leastRepresentableValueForceUnormRepresentation"]=[&]() {
    json return_pvfUeFZ=json({});
    return_pvfUeFZ=[&]() {
    json return_gfiFRlW=json({});
    return serialize_uint32_t(name.leastRepresentableValueForceUnormRepresentation);}();return return_pvfUeFZ;}();
result["members"]["floatRepresentation"]=[&]() {
    json return_XUXYmqo=json({});
    return_XUXYmqo=[&]() {
    json return_HTnFomN=json({});
    return serialize_uint32_t(name.floatRepresentation);}();return return_XUXYmqo;}();
result["members"]["depthBiasExact"]=[&]() {
    json return_yidjndZ=json({});
    return_yidjndZ=[&]() {
    json return_MygNynB=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_yidjndZ;}();
return result;}

    VkPhysicalDeviceDepthBiasControlFeaturesEXT deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthBiasControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthBiasControl=deserialize_uint32_t(name["members"]["depthBiasControl"]);}();}();
[&]() {
[&]() {
result.leastRepresentableValueForceUnormRepresentation=deserialize_uint32_t(name["members"]["leastRepresentableValueForceUnormRepresentation"]);}();}();
[&]() {
[&]() {
result.floatRepresentation=deserialize_uint32_t(name["members"]["floatRepresentation"]);}();}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WEHzMpb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xjLkUoE=json({});
    
        if (name.pNext==NULL){
            return_xjLkUoE["null"]=true;
            return return_xjLkUoE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorder"]=[&]() {
    json return_wHXdCrE=json({});
    return_wHXdCrE=[&]() {
    json return_ZxiAISP=json({});
    return serialize_uint32_t(name.rayTracingInvocationReorder);}();return return_wHXdCrE;}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingInvocationReorder=deserialize_uint32_t(name["members"]["rayTracingInvocationReorder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qDqbacx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QLnjErz=json({});
    
        if (name.pNext==NULL){
            return_QLnjErz["null"]=true;
            return return_QLnjErz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorderReorderingHint"]=[&]() {
    json return_fOFEtUY=json({});
    return serialize_VkRayTracingInvocationReorderModeNV(name.rayTracingInvocationReorderReorderingHint);}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.rayTracingInvocationReorderReorderingHint=deserialize_VkRayTracingInvocationReorderModeNV(name["members"]["rayTracingInvocationReorderReorderingHint"]);}();
return result;}

    json serialize_VkDirectDriverLoadingInfoLUNARG(VkDirectDriverLoadingInfoLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NfKfcNL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GYEIuWX=json({});
    
        if (name.pNext==NULL){
            return_GYEIuWX["null"]=true;
            return return_GYEIuWX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ePuCeKx=json({});
    return serialize_VkDirectDriverLoadingFlagsLUNARG(name.flags);}();
result["members"]["pfnGetInstanceProcAddr"]=[&]() {
    json return_YlMokqU=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkGetInstanceProcAddrLUNARG(name.pfnGetInstanceProcAddr);
        #endif
        }();
return result;}

    VkDirectDriverLoadingInfoLUNARG deserialize_VkDirectDriverLoadingInfoLUNARG(json name){
        auto result=VkDirectDriverLoadingInfoLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDirectDriverLoadingFlagsLUNARG(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnGetInstanceProcAddr=deserialize_PFN_vkGetInstanceProcAddrLUNARG(name["members"]["pfnGetInstanceProcAddr"]);
        #endif
        }();
return result;}

    json serialize_VkDirectDriverLoadingListLUNARG(VkDirectDriverLoadingListLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BzGXmPP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_llgTMNU=json({});
    
        if (name.pNext==NULL){
            return_llgTMNU["null"]=true;
            return return_llgTMNU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_zBNbcZx=json({});
    return serialize_VkDirectDriverLoadingModeLUNARG(name.mode);}();
result["members"]["driverCount"]=[&]() {
    json return_CDrVhIc=json({});
    return serialize_uint32_t(name.driverCount);}();
result["members"]["pDrivers"]=[&]() {
    json return_OGmCWmo=json({});
    
        if (name.pDrivers==NULL){
            return_OGmCWmo["null"]=true;
            return return_OGmCWmo;
        }
        
        return_OGmCWmo["members"]={};
        for(int i=0; i < name.driverCount; i++){
            json temp;
            temp=[&]() {
    json return_EWAzHLP=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(name.pDrivers[i]);}();
            return_OGmCWmo["members"][std::to_string(i)].push_back(temp);
        }
        return return_OGmCWmo;
        }();
return result;}

    VkDirectDriverLoadingListLUNARG deserialize_VkDirectDriverLoadingListLUNARG(json name){
        auto result=VkDirectDriverLoadingListLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.mode=deserialize_VkDirectDriverLoadingModeLUNARG(name["members"]["mode"]);}();
[&]() {
result.driverCount=deserialize_uint32_t(name["members"]["driverCount"]);}();
[&]() {
VkDirectDriverLoadingInfoLUNARG* temp_yBoOpNm;[&]() {

        if (name["members"]["pDrivers"].contains("null")){
        temp_yBoOpNm=NULL;
        }
    temp_yBoOpNm=(VkDirectDriverLoadingInfoLUNARG*)malloc(result.driverCount*sizeof(VkDirectDriverLoadingInfoLUNARG));
        for (int OUsdviL=0; OUsdviL < result.driverCount; OUsdviL++){
            [&]() {
temp_yBoOpNm[OUsdviL]=deserialize_VkDirectDriverLoadingInfoLUNARG(name["members"]["pDrivers"]["members"][OUsdviL]);}();;
        }
        }();result.pDrivers=temp_yBoOpNm;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gxKDIoK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cZBeQLg=json({});
    
        if (name.pNext==NULL){
            return_cZBeQLg["null"]=true;
            return return_cZBeQLg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewViewports"]=[&]() {
    json return_KnlrwNF=json({});
    return_KnlrwNF=[&]() {
    json return_fNfVJCB=json({});
    return serialize_uint32_t(name.multiviewPerViewViewports);}();return return_KnlrwNF;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewViewports=deserialize_uint32_t(name["members"]["multiviewPerViewViewports"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gLCRfLI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KxcDqND=json({});
    
        if (name.pNext==NULL){
            return_KxcDqND["null"]=true;
            return return_KxcDqND;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPositionFetch"]=[&]() {
    json return_fOKTJHB=json({});
    return_fOKTJHB=[&]() {
    json return_EKLAZry=json({});
    return serialize_uint32_t(name.rayTracingPositionFetch);}();return return_fOKTJHB;}();
return result;}

    VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPositionFetch=deserialize_uint32_t(name["members"]["rayTracingPositionFetch"]);}();}();
return result;}

    json serialize_VkDeviceImageSubresourceInfoKHR(VkDeviceImageSubresourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RRTyxtB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MFXVKQw=json({});
    
        if (name.pNext==NULL){
            return_MFXVKQw["null"]=true;
            return return_MFXVKQw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_UAiZWoE=json({});
    
        if (name.pCreateInfo==NULL){
            return_UAiZWoE["null"]=true;
            return return_UAiZWoE;
        }
        return_UAiZWoE=[&]() {
    json return_xylvmld=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_UAiZWoE;}();
result["members"]["pSubresource"]=[&]() {
    json return_jyYqJdl=json({});
    
        if (name.pSubresource==NULL){
            return_jyYqJdl["null"]=true;
            return return_jyYqJdl;
        }
        return_jyYqJdl=[&]() {
    json return_XYMJVNO=json({});
    return serialize_VkImageSubresource2KHR(*name.pSubresource);}();
return return_jyYqJdl;}();
return result;}

    VkDeviceImageSubresourceInfoKHR deserialize_VkDeviceImageSubresourceInfoKHR(json name){
        auto result=VkDeviceImageSubresourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LoVFyea;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LoVFyea=NULL;
        }
    temp_LoVFyea=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LoVFyea;}();
[&]() {
VkImageCreateInfo* temp_DXlOjTC;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_DXlOjTC=NULL;
        }
    [&]() {
*(temp_DXlOjTC)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_DXlOjTC;}();
[&]() {
VkImageSubresource2KHR* temp_TTxZVjh;[&]() {

        if (name["members"]["pSubresource"].contains("null")){
        temp_TTxZVjh=NULL;
        }
    [&]() {
*(temp_TTxZVjh)=deserialize_VkImageSubresource2KHR(name["members"]["pSubresource"]);}();
}();result.pSubresource=temp_TTxZVjh;}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesARM(VkPhysicalDeviceShaderCorePropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dWlJhrJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_saNYhko=json({});
    
        if (name.pNext==NULL){
            return_saNYhko["null"]=true;
            return return_saNYhko;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pixelRate"]=[&]() {
    json return_rNtWIjG=json({});
    return serialize_uint32_t(name.pixelRate);}();
result["members"]["texelRate"]=[&]() {
    json return_vYvnvEq=json({});
    return serialize_uint32_t(name.texelRate);}();
result["members"]["fmaRate"]=[&]() {
    json return_cVVMxKn=json({});
    return serialize_uint32_t(name.fmaRate);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesARM deserialize_VkPhysicalDeviceShaderCorePropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pixelRate=deserialize_uint32_t(name["members"]["pixelRate"]);}();
[&]() {
result.texelRate=deserialize_uint32_t(name["members"]["texelRate"]);}();
[&]() {
result.fmaRate=deserialize_uint32_t(name["members"]["fmaRate"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aTLZPAU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RDBRSMK=json({});
    
        if (name.pNext==NULL){
            return_RDBRSMK["null"]=true;
            return return_RDBRSMK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewRenderAreas"]=[&]() {
    json return_FfRzvng=json({});
    return_FfRzvng=[&]() {
    json return_jrSZLca=json({});
    return serialize_uint32_t(name.multiviewPerViewRenderAreas);}();return return_FfRzvng;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewRenderAreas=deserialize_uint32_t(name["members"]["multiviewPerViewRenderAreas"]);}();}();
return result;}

    json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dAuOqVK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jhjMtaZ=json({});
    
        if (name.pNext==NULL){
            return_jhjMtaZ["null"]=true;
            return return_jhjMtaZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewRenderAreaCount"]=[&]() {
    json return_VHlxOaf=json({});
    return serialize_uint32_t(name.perViewRenderAreaCount);}();
result["members"]["pPerViewRenderAreas"]=[&]() {
    json return_enTEJCi=json({});
    
        if (name.pPerViewRenderAreas==NULL){
            return_enTEJCi["null"]=true;
            return return_enTEJCi;
        }
        
        return_enTEJCi["members"]={};
        for(int i=0; i < name.perViewRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_FmMrAPZ=json({});
    return serialize_VkRect2D(name.pPerViewRenderAreas[i]);}();
            return_enTEJCi["members"][std::to_string(i)].push_back(temp);
        }
        return return_enTEJCi;
        }();
return result;}

    VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(json name){
        auto result=VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JmQRGXQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JmQRGXQ=NULL;
        }
    temp_JmQRGXQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JmQRGXQ;}();
[&]() {
result.perViewRenderAreaCount=deserialize_uint32_t(name["members"]["perViewRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_MNZodVO;[&]() {

        if (name["members"]["pPerViewRenderAreas"].contains("null")){
        temp_MNZodVO=NULL;
        }
    temp_MNZodVO=(VkRect2D*)malloc(result.perViewRenderAreaCount*sizeof(VkRect2D));
        for (int CLOzlSn=0; CLOzlSn < result.perViewRenderAreaCount; CLOzlSn++){
            [&]() {
temp_MNZodVO[CLOzlSn]=deserialize_VkRect2D(name["members"]["pPerViewRenderAreas"]["members"][CLOzlSn]);}();;
        }
        }();result.pPerViewRenderAreas=temp_MNZodVO;}();
return result;}

    json serialize_VkQueryLowLatencySupportNV(VkQueryLowLatencySupportNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kYVGaty=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wnLGXwR=json({});
    
        if (name.pNext==NULL){
            return_wnLGXwR["null"]=true;
            return return_wnLGXwR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pQueriedLowLatencyData"]=[&]() {
    json return_CRWIEUl=json({});
    
        if (name.pQueriedLowLatencyData==NULL){
            return_CRWIEUl["null"]=true;
            return return_CRWIEUl;
        }
        return serialize_void_p(name.pQueriedLowLatencyData);
}();
return result;}

    VkQueryLowLatencySupportNV deserialize_VkQueryLowLatencySupportNV(json name){
        auto result=VkQueryLowLatencySupportNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pQPeNgU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pQPeNgU=NULL;
        }
    temp_pQPeNgU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pQPeNgU;}();
[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        result.pQueriedLowLatencyData=NULL;
        }
    result.pQueriedLowLatencyData=deserialize_void_p(name["members"]["pQueriedLowLatencyData"]);
}();
return result;}

    json serialize_VkMemoryMapInfoKHR(VkMemoryMapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gQzmPdD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lCGFQhe=json({});
    
        if (name.pNext==NULL){
            return_lCGFQhe["null"]=true;
            return return_lCGFQhe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EzsWWVh=json({});
    return serialize_VkMemoryMapFlags(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_tfVQOtM=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_YStbkdP=json({});
    return_YStbkdP=[&]() {
    json return_IsPsVwC=json({});
    return serialize_uint64_t(name.offset);}();return return_YStbkdP;}();
result["members"]["size"]=[&]() {
    json return_xfprrTW=json({});
    return_xfprrTW=[&]() {
    json return_tPiVlnW=json({});
    return serialize_uint64_t(name.size);}();return return_xfprrTW;}();
return result;}

    VkMemoryMapInfoKHR deserialize_VkMemoryMapInfoKHR(json name){
        auto result=VkMemoryMapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcNBJUP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcNBJUP=NULL;
        }
    temp_AcNBJUP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AcNBJUP;}();
[&]() {
result.flags=deserialize_VkMemoryMapFlags(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkMemoryUnmapInfoKHR(VkMemoryUnmapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_piupjwB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tIbywwr=json({});
    
        if (name.pNext==NULL){
            return_tIbywwr["null"]=true;
            return return_tIbywwr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RqEvgif=json({});
    return serialize_VkMemoryUnmapFlagsKHR(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_BVDWDja=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkMemoryUnmapInfoKHR deserialize_VkMemoryUnmapInfoKHR(json name){
        auto result=VkMemoryUnmapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VsrdUsW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VsrdUsW=NULL;
        }
    temp_VsrdUsW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VsrdUsW;}();
[&]() {
result.flags=deserialize_VkMemoryUnmapFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(VkPhysicalDeviceShaderObjectFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eopAbyV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nzfEQgJ=json({});
    
        if (name.pNext==NULL){
            return_nzfEQgJ["null"]=true;
            return return_nzfEQgJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderObject"]=[&]() {
    json return_WnmhrLy=json({});
    return_WnmhrLy=[&]() {
    json return_pyItThx=json({});
    return serialize_uint32_t(name.shaderObject);}();return return_WnmhrLy;}();
return result;}

    VkPhysicalDeviceShaderObjectFeaturesEXT deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderObject=deserialize_uint32_t(name["members"]["shaderObject"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(VkPhysicalDeviceShaderObjectPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oRMFBwX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vSzKDmi=json({});
    
        if (name.pNext==NULL){
            return_vSzKDmi["null"]=true;
            return return_vSzKDmi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBinaryUUID"]=[&]() {
    json return_mmWPYcF=json({});
    
        return_mmWPYcF["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_opJNakK=json({});
    return serialize_uint8_t(name.shaderBinaryUUID[i]);}();
            return_mmWPYcF["members"][std::to_string(i)].push_back(temp);
        }
        return return_mmWPYcF;
        }();
result["members"]["shaderBinaryVersion"]=[&]() {
    json return_saIJpOA=json({});
    return serialize_uint32_t(name.shaderBinaryVersion);}();
return result;}

    VkPhysicalDeviceShaderObjectPropertiesEXT deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int SEMgzLV=0; SEMgzLV < VK_UUID_SIZE; SEMgzLV++){
            [&]() {
result.shaderBinaryUUID[SEMgzLV]=deserialize_uint8_t(name["members"]["shaderBinaryUUID"]["members"][SEMgzLV]);}();;
        }
        }();
[&]() {
result.shaderBinaryVersion=deserialize_uint32_t(name["members"]["shaderBinaryVersion"]);}();
return result;}

    json serialize_VkShaderCreateInfoEXT(VkShaderCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mxDCTYq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVocGTd=json({});
    
        if (name.pNext==NULL){
            return_gVocGTd["null"]=true;
            return return_gVocGTd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LDdQIXu=json({});
    return serialize_VkShaderCreateFlagsEXT(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_sKzqDZK=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["nextStage"]=[&]() {
    json return_eSLnUpH=json({});
    return serialize_VkShaderStageFlags(name.nextStage);}();
result["members"]["codeType"]=[&]() {
    json return_RxHBIKq=json({});
    return serialize_VkShaderCodeTypeEXT(name.codeType);}();
result["members"]["codeSize"]=[&]() {
    json return_RoqOMAa=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_VQiQKzZ=json({});
    
        if (name.pCode==NULL){
            return_VQiQKzZ["null"]=true;
            return return_VQiQKzZ;
        }
        return serialize_void_p(name.pCode);
}();
result["members"]["pName"]=[&]() {
    json return_GiJTiQB=json({});
    
        if (name.pName==NULL){
            return_GiJTiQB["null"]=true;
            return return_GiJTiQB;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["setLayoutCount"]=[&]() {
    json return_yZFGeDe=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_HTJQkze=json({});
    
        if (name.pSetLayouts==NULL){
            return_HTJQkze["null"]=true;
            return return_HTJQkze;
        }
        
        return_HTJQkze["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_xNnvbIU=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_HTJQkze["members"][std::to_string(i)].push_back(temp);
        }
        return return_HTJQkze;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_QxyEiqW=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_EjcrKXP=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_EjcrKXP["null"]=true;
            return return_EjcrKXP;
        }
        
        return_EjcrKXP["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_HURoXAx=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_EjcrKXP["members"][std::to_string(i)].push_back(temp);
        }
        return return_EjcrKXP;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_ohcdyWs=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_ohcdyWs["null"]=true;
            return return_ohcdyWs;
        }
        return_ohcdyWs=[&]() {
    json return_bcUCVvs=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_ohcdyWs;}();
return result;}

    VkShaderCreateInfoEXT deserialize_VkShaderCreateInfoEXT(json name){
        auto result=VkShaderCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OHlDJSP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OHlDJSP=NULL;
        }
    temp_OHlDJSP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OHlDJSP;}();
[&]() {
result.flags=deserialize_VkShaderCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.nextStage=deserialize_VkShaderStageFlags(name["members"]["nextStage"]);}();
[&]() {
result.codeType=deserialize_VkShaderCodeTypeEXT(name["members"]["codeType"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
void* temp_zHrntSn;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_zHrntSn=NULL;
        }
    temp_zHrntSn=deserialize_void_p(name["members"]["pCode"]);
}();result.pCode=temp_zHrntSn;}();
[&]() {
char* temp_GSnGRhl;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_GSnGRhl=NULL;
        }
    temp_GSnGRhl=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_GSnGRhl;}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_fVczdJs;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_fVczdJs=NULL;
        }
    temp_fVczdJs=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int ZfHxVwR=0; ZfHxVwR < result.setLayoutCount; ZfHxVwR++){
            [&]() {
temp_fVczdJs[ZfHxVwR]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][ZfHxVwR]);}();;
        }
        }();result.pSetLayouts=temp_fVczdJs;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_NvgGHrS;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_NvgGHrS=NULL;
        }
    temp_NvgGHrS=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int tZevtNh=0; tZevtNh < result.pushConstantRangeCount; tZevtNh++){
            [&]() {
temp_NvgGHrS[tZevtNh]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][tZevtNh]);}();;
        }
        }();result.pPushConstantRanges=temp_NvgGHrS;}();
[&]() {
VkSpecializationInfo* temp_qPdNAwE;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_qPdNAwE=NULL;
        }
    [&]() {
*(temp_qPdNAwE)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_qPdNAwE;}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(VkPhysicalDeviceShaderTileImageFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nkOaJBK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AwcHbgh=json({});
    
        if (name.pNext==NULL){
            return_AwcHbgh["null"]=true;
            return return_AwcHbgh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageColorReadAccess"]=[&]() {
    json return_LgZOgUh=json({});
    return_LgZOgUh=[&]() {
    json return_uppGVuS=json({});
    return serialize_uint32_t(name.shaderTileImageColorReadAccess);}();return return_LgZOgUh;}();
result["members"]["shaderTileImageDepthReadAccess"]=[&]() {
    json return_FmaPzUt=json({});
    return_FmaPzUt=[&]() {
    json return_UrOrtYQ=json({});
    return serialize_uint32_t(name.shaderTileImageDepthReadAccess);}();return return_FmaPzUt;}();
result["members"]["shaderTileImageStencilReadAccess"]=[&]() {
    json return_QUjGkXD=json({});
    return_QUjGkXD=[&]() {
    json return_PzVgGGT=json({});
    return serialize_uint32_t(name.shaderTileImageStencilReadAccess);}();return return_QUjGkXD;}();
return result;}

    VkPhysicalDeviceShaderTileImageFeaturesEXT deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImageFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageColorReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageColorReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageDepthReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageDepthReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageStencilReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageStencilReadAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(VkPhysicalDeviceShaderTileImagePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IOiyjtA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TLkFbNb=json({});
    
        if (name.pNext==NULL){
            return_TLkFbNb["null"]=true;
            return return_TLkFbNb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageCoherentReadAccelerated"]=[&]() {
    json return_SADyZxc=json({});
    return_SADyZxc=[&]() {
    json return_hcskXFy=json({});
    return serialize_uint32_t(name.shaderTileImageCoherentReadAccelerated);}();return return_SADyZxc;}();
result["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]=[&]() {
    json return_YFZPAGn=json({});
    return_YFZPAGn=[&]() {
    json return_ubrtvDr=json({});
    return serialize_uint32_t(name.shaderTileImageReadSampleFromPixelRateInvocation);}();return return_YFZPAGn;}();
result["members"]["shaderTileImageReadFromHelperInvocation"]=[&]() {
    json return_kutMZFJ=json({});
    return_kutMZFJ=[&]() {
    json return_SwKdkzr=json({});
    return serialize_uint32_t(name.shaderTileImageReadFromHelperInvocation);}();return return_kutMZFJ;}();
return result;}

    VkPhysicalDeviceShaderTileImagePropertiesEXT deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImagePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageCoherentReadAccelerated=deserialize_uint32_t(name["members"]["shaderTileImageCoherentReadAccelerated"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadSampleFromPixelRateInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadFromHelperInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadFromHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(VkPhysicalDeviceCooperativeMatrixFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gfyveWm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dAbPAwc=json({});
    
        if (name.pNext==NULL){
            return_dAbPAwc["null"]=true;
            return return_dAbPAwc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_QMcjRrE=json({});
    return_QMcjRrE=[&]() {
    json return_SwwBUfL=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_QMcjRrE;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_aaDwXQO=json({});
    return_aaDwXQO=[&]() {
    json return_lftyEhg=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_aaDwXQO;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesKHR deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesKHR(VkCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OPPWeTT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zPdCrXa=json({});
    
        if (name.pNext==NULL){
            return_zPdCrXa["null"]=true;
            return return_zPdCrXa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_guaGgTp=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_HenYfjv=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_WlLOrrT=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_rOSCXxt=json({});
    return serialize_VkComponentTypeKHR(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_ArpOpAY=json({});
    return serialize_VkComponentTypeKHR(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_RQwxEHp=json({});
    return serialize_VkComponentTypeKHR(name.CType);}();
result["members"]["ResultType"]=[&]() {
    json return_IbPFFQw=json({});
    return serialize_VkComponentTypeKHR(name.ResultType);}();
result["members"]["saturatingAccumulation"]=[&]() {
    json return_BrvkUfM=json({});
    return_BrvkUfM=[&]() {
    json return_PjmXzBj=json({});
    return serialize_uint32_t(name.saturatingAccumulation);}();return return_BrvkUfM;}();
result["members"]["scope"]=[&]() {
    json return_oHEagTn=json({});
    return serialize_VkScopeKHR(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesKHR deserialize_VkCooperativeMatrixPropertiesKHR(json name){
        auto result=VkCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeKHR(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeKHR(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeKHR(name["members"]["CType"]);}();
[&]() {
result.ResultType=deserialize_VkComponentTypeKHR(name["members"]["ResultType"]);}();
[&]() {
[&]() {
result.saturatingAccumulation=deserialize_uint32_t(name["members"]["saturatingAccumulation"]);}();}();
[&]() {
result.scope=deserialize_VkScopeKHR(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDeviceCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pwvxXgP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gTIDsPi=json({});
    
        if (name.pNext==NULL){
            return_gTIDsPi["null"]=true;
            return return_gTIDsPi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_qMdRefl=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesKHR deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(VkPhysicalDeviceCubicClampFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dyLTNUu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KjMmKot=json({});
    
        if (name.pNext==NULL){
            return_KjMmKot["null"]=true;
            return return_KjMmKot;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicRangeClamp"]=[&]() {
    json return_ypUUZdo=json({});
    return_ypUUZdo=[&]() {
    json return_FLGAWjY=json({});
    return serialize_uint32_t(name.cubicRangeClamp);}();return return_ypUUZdo;}();
return result;}

    VkPhysicalDeviceCubicClampFeaturesQCOM deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicClampFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cubicRangeClamp=deserialize_uint32_t(name["members"]["cubicRangeClamp"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PwAtQSp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_krnrlmJ=json({});
    
        if (name.pNext==NULL){
            return_krnrlmJ["null"]=true;
            return return_krnrlmJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrDegamma"]=[&]() {
    json return_jrKGPHE=json({});
    return_jrKGPHE=[&]() {
    json return_jJfNSuz=json({});
    return serialize_uint32_t(name.ycbcrDegamma);}();return return_jrKGPHE;}();
return result;}

    VkPhysicalDeviceYcbcrDegammaFeaturesQCOM deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceYcbcrDegammaFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrDegamma=deserialize_uint32_t(name["members"]["ycbcrDegamma"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dMhgJwL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wodnKgL=json({});
    
        if (name.pNext==NULL){
            return_wodnKgL["null"]=true;
            return return_wodnKgL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enableYDegamma"]=[&]() {
    json return_DDJkZjX=json({});
    return_DDJkZjX=[&]() {
    json return_imXHxjx=json({});
    return serialize_uint32_t(name.enableYDegamma);}();return return_DDJkZjX;}();
result["members"]["enableCbCrDegamma"]=[&]() {
    json return_gsrcwDR=json({});
    return_gsrcwDR=[&]() {
    json return_OPtYHpt=json({});
    return serialize_uint32_t(name.enableCbCrDegamma);}();return return_gsrcwDR;}();
return result;}

    VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(json name){
        auto result=VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.enableYDegamma=deserialize_uint32_t(name["members"]["enableYDegamma"]);}();}();
[&]() {
[&]() {
result.enableCbCrDegamma=deserialize_uint32_t(name["members"]["enableCbCrDegamma"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(VkPhysicalDeviceCubicWeightsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ikRdZfK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lULXEuc=json({});
    
        if (name.pNext==NULL){
            return_lULXEuc["null"]=true;
            return return_lULXEuc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["selectableCubicWeights"]=[&]() {
    json return_YDflJAS=json({});
    return_YDflJAS=[&]() {
    json return_RzKxYHV=json({});
    return serialize_uint32_t(name.selectableCubicWeights);}();return return_YDflJAS;}();
return result;}

    VkPhysicalDeviceCubicWeightsFeaturesQCOM deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicWeightsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.selectableCubicWeights=deserialize_uint32_t(name["members"]["selectableCubicWeights"]);}();}();
return result;}

    json serialize_VkSamplerCubicWeightsCreateInfoQCOM(VkSamplerCubicWeightsCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ALyXaPM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RwJButw=json({});
    
        if (name.pNext==NULL){
            return_RwJButw["null"]=true;
            return return_RwJButw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_SEPgPWP=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkSamplerCubicWeightsCreateInfoQCOM deserialize_VkSamplerCubicWeightsCreateInfoQCOM(json name){
        auto result=VkSamplerCubicWeightsCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BSSQjFo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BSSQjFo=NULL;
        }
    temp_BSSQjFo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BSSQjFo;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkBlitImageCubicWeightsInfoQCOM(VkBlitImageCubicWeightsInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uJrFZJG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YoQIDRh=json({});
    
        if (name.pNext==NULL){
            return_YoQIDRh["null"]=true;
            return return_YoQIDRh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_uyilhPu=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkBlitImageCubicWeightsInfoQCOM deserialize_VkBlitImageCubicWeightsInfoQCOM(json name){
        auto result=VkBlitImageCubicWeightsInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xpEQpKS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xpEQpKS=NULL;
        }
    temp_xpEQpKS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xpEQpKS;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(VkPhysicalDeviceImageProcessing2FeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ikGmTDv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uWlKLSp=json({});
    
        if (name.pNext==NULL){
            return_uWlKLSp["null"]=true;
            return return_uWlKLSp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureBlockMatch2"]=[&]() {
    json return_rRWjmFz=json({});
    return_rRWjmFz=[&]() {
    json return_heJTvOs=json({});
    return serialize_uint32_t(name.textureBlockMatch2);}();return return_rRWjmFz;}();
return result;}

    VkPhysicalDeviceImageProcessing2FeaturesQCOM deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2FeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureBlockMatch2=deserialize_uint32_t(name["members"]["textureBlockMatch2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(VkPhysicalDeviceImageProcessing2PropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jmDSEIF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JcDvRth=json({});
    
        if (name.pNext==NULL){
            return_JcDvRth["null"]=true;
            return return_JcDvRth;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBlockMatchWindow"]=[&]() {
    json return_EKScSgd=json({});
    return serialize_VkExtent2D(name.maxBlockMatchWindow);}();
return result;}

    VkPhysicalDeviceImageProcessing2PropertiesQCOM deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2PropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxBlockMatchWindow=deserialize_VkExtent2D(name["members"]["maxBlockMatchWindow"]);}();
return result;}

    json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(VkSamplerBlockMatchWindowCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VVmyVFP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_udvonMq=json({});
    
        if (name.pNext==NULL){
            return_udvonMq["null"]=true;
            return return_udvonMq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["windowExtent"]=[&]() {
    json return_gLYTrHk=json({});
    return serialize_VkExtent2D(name.windowExtent);}();
result["members"]["windowCompareMode"]=[&]() {
    json return_KAtVjFI=json({});
    return serialize_VkBlockMatchWindowCompareModeQCOM(name.windowCompareMode);}();
return result;}

    VkSamplerBlockMatchWindowCreateInfoQCOM deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(json name){
        auto result=VkSamplerBlockMatchWindowCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mjjcttB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mjjcttB=NULL;
        }
    temp_mjjcttB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mjjcttB;}();
[&]() {
result.windowExtent=deserialize_VkExtent2D(name["members"]["windowExtent"]);}();
[&]() {
result.windowCompareMode=deserialize_VkBlockMatchWindowCompareModeQCOM(name["members"]["windowCompareMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TtLiJpo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rVgWfaR=json({});
    
        if (name.pNext==NULL){
            return_rVgWfaR["null"]=true;
            return return_rVgWfaR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPoolOverallocation"]=[&]() {
    json return_rIVvvci=json({});
    return_rIVvvci=[&]() {
    json return_LLwlZaV=json({});
    return serialize_uint32_t(name.descriptorPoolOverallocation);}();return return_rIVvvci;}();
return result;}

    VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(json name){
        auto result=VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorPoolOverallocation=deserialize_uint32_t(name["members"]["descriptorPoolOverallocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(VkPhysicalDeviceLayeredDriverPropertiesMSFT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VnPXtgc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BjkWnIG=json({});
    
        if (name.pNext==NULL){
            return_BjkWnIG["null"]=true;
            return return_BjkWnIG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["underlyingAPI"]=[&]() {
    json return_zLGWElU=json({});
    return serialize_VkLayeredDriverUnderlyingApiMSFT(name.underlyingAPI);}();
return result;}

    VkPhysicalDeviceLayeredDriverPropertiesMSFT deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(json name){
        auto result=VkPhysicalDeviceLayeredDriverPropertiesMSFT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.underlyingAPI=deserialize_VkLayeredDriverUnderlyingApiMSFT(name["members"]["underlyingAPI"]);}();
return result;}

            json serialize_int(int name){
                return json::object({{"value",name}});
            };
        

            int deserialize_int(json name){
                return name["value"].get<int>();
            };
        

            json serialize_void_p(const void* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            void* deserialize_void_p(json name){
                return (void*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char_p(const char* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            char* deserialize_char_p(json name){
                return (char*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char(char name){
                return json::object({{"value",name}});
            };
        

            char deserialize_char(json name){
                return name["value"].get<char>();
            };
        

            json serialize_float(float name){
                return json::object({{"value",name}});
            };
        

            float deserialize_float(json name){
                return name["value"].get<float>();
            };
        

            json serialize_double(double name){
                return json::object({{"value",name}});
            };
        

            double deserialize_double(json name){
                return name["value"].get<double>();
            };
        

            json serialize_int8_t(int8_t name){
                return json::object({{"value",name}});
            };
        

            int8_t deserialize_int8_t(json name){
                return name["value"].get<int8_t>();
            };
        

            json serialize_uint8_t(uint8_t name){
                return json::object({{"value",name}});
            };
        

            uint8_t deserialize_uint8_t(json name){
                return name["value"].get<uint8_t>();
            };
        

            json serialize_int16_t(int16_t name){
                return json::object({{"value",name}});
            };
        

            int16_t deserialize_int16_t(json name){
                return name["value"].get<int16_t>();
            };
        

            json serialize_uint16_t(uint16_t name){
                return json::object({{"value",name}});
            };
        

            uint16_t deserialize_uint16_t(json name){
                return name["value"].get<uint16_t>();
            };
        

            json serialize_uint32_t(uint32_t name){
                return json::object({{"value",name}});
            };
        

            uint32_t deserialize_uint32_t(json name){
                return name["value"].get<uint32_t>();
            };
        

            json serialize_uint64_t(uint64_t name){
                return json::object({{"value",name}});
            };
        

            uint64_t deserialize_uint64_t(json name){
                return name["value"].get<uint64_t>();
            };
        

            json serialize_int32_t(int32_t name){
                return json::object({{"value",name}});
            };
        

            int32_t deserialize_int32_t(json name){
                return name["value"].get<int32_t>();
            };
        

            json serialize_int64_t(int64_t name){
                return json::object({{"value",name}});
            };
        

            int64_t deserialize_int64_t(json name){
                return name["value"].get<int64_t>();
            };
        

            json serialize_size_t(size_t name){
                return json::object({{"value",name}});
            };
        

            size_t deserialize_size_t(json name){
                return name["value"].get<size_t>();
            };
        

            json serialize_VkFramebufferCreateFlags(VkFramebufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlags deserialize_VkFramebufferCreateFlags(json name){
                return name["value"].get<VkFramebufferCreateFlags>();
            };
        

            json serialize_VkQueryPoolCreateFlags(VkQueryPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolCreateFlags deserialize_VkQueryPoolCreateFlags(json name){
                return name["value"].get<VkQueryPoolCreateFlags>();
            };
        

            json serialize_VkRenderPassCreateFlags(VkRenderPassCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlags deserialize_VkRenderPassCreateFlags(json name){
                return name["value"].get<VkRenderPassCreateFlags>();
            };
        

            json serialize_VkSamplerCreateFlags(VkSamplerCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlags deserialize_VkSamplerCreateFlags(json name){
                return name["value"].get<VkSamplerCreateFlags>();
            };
        

            json serialize_VkPipelineLayoutCreateFlags(VkPipelineLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlags deserialize_VkPipelineLayoutCreateFlags(json name){
                return name["value"].get<VkPipelineLayoutCreateFlags>();
            };
        

            json serialize_VkPipelineCacheCreateFlags(VkPipelineCacheCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlags deserialize_VkPipelineCacheCreateFlags(json name){
                return name["value"].get<VkPipelineCacheCreateFlags>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlags(VkPipelineDepthStencilStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlags deserialize_VkPipelineDepthStencilStateCreateFlags(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlags>();
            };
        

            json serialize_VkPipelineDynamicStateCreateFlags(VkPipelineDynamicStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDynamicStateCreateFlags deserialize_VkPipelineDynamicStateCreateFlags(json name){
                return name["value"].get<VkPipelineDynamicStateCreateFlags>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlags(VkPipelineColorBlendStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlags deserialize_VkPipelineColorBlendStateCreateFlags(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlags>();
            };
        

            json serialize_VkPipelineMultisampleStateCreateFlags(VkPipelineMultisampleStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineMultisampleStateCreateFlags deserialize_VkPipelineMultisampleStateCreateFlags(json name){
                return name["value"].get<VkPipelineMultisampleStateCreateFlags>();
            };
        

            json serialize_VkPipelineRasterizationStateCreateFlags(VkPipelineRasterizationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateCreateFlags deserialize_VkPipelineRasterizationStateCreateFlags(json name){
                return name["value"].get<VkPipelineRasterizationStateCreateFlags>();
            };
        

            json serialize_VkPipelineViewportStateCreateFlags(VkPipelineViewportStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportStateCreateFlags deserialize_VkPipelineViewportStateCreateFlags(json name){
                return name["value"].get<VkPipelineViewportStateCreateFlags>();
            };
        

            json serialize_VkPipelineTessellationStateCreateFlags(VkPipelineTessellationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineTessellationStateCreateFlags deserialize_VkPipelineTessellationStateCreateFlags(json name){
                return name["value"].get<VkPipelineTessellationStateCreateFlags>();
            };
        

            json serialize_VkPipelineInputAssemblyStateCreateFlags(VkPipelineInputAssemblyStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineInputAssemblyStateCreateFlags deserialize_VkPipelineInputAssemblyStateCreateFlags(json name){
                return name["value"].get<VkPipelineInputAssemblyStateCreateFlags>();
            };
        

            json serialize_VkPipelineVertexInputStateCreateFlags(VkPipelineVertexInputStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineVertexInputStateCreateFlags deserialize_VkPipelineVertexInputStateCreateFlags(json name){
                return name["value"].get<VkPipelineVertexInputStateCreateFlags>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlags(VkPipelineShaderStageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlags deserialize_VkPipelineShaderStageCreateFlags(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlags>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlags(VkDescriptorSetLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlags deserialize_VkDescriptorSetLayoutCreateFlags(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlags>();
            };
        

            json serialize_VkBufferViewCreateFlags(VkBufferViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferViewCreateFlags deserialize_VkBufferViewCreateFlags(json name){
                return name["value"].get<VkBufferViewCreateFlags>();
            };
        

            json serialize_VkInstanceCreateFlags(VkInstanceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlags deserialize_VkInstanceCreateFlags(json name){
                return name["value"].get<VkInstanceCreateFlags>();
            };
        

            json serialize_VkDeviceCreateFlags(VkDeviceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceCreateFlags deserialize_VkDeviceCreateFlags(json name){
                return name["value"].get<VkDeviceCreateFlags>();
            };
        

            json serialize_VkDeviceQueueCreateFlags(VkDeviceQueueCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlags deserialize_VkDeviceQueueCreateFlags(json name){
                return name["value"].get<VkDeviceQueueCreateFlags>();
            };
        

            json serialize_VkQueueFlags(VkQueueFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlags deserialize_VkQueueFlags(json name){
                return name["value"].get<VkQueueFlags>();
            };
        

            json serialize_VkMemoryPropertyFlags(VkMemoryPropertyFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlags deserialize_VkMemoryPropertyFlags(json name){
                return name["value"].get<VkMemoryPropertyFlags>();
            };
        

            json serialize_VkMemoryHeapFlags(VkMemoryHeapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlags deserialize_VkMemoryHeapFlags(json name){
                return name["value"].get<VkMemoryHeapFlags>();
            };
        

            json serialize_VkAccessFlags(VkAccessFlags name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags deserialize_VkAccessFlags(json name){
                return name["value"].get<VkAccessFlags>();
            };
        

            json serialize_VkBufferUsageFlags(VkBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags deserialize_VkBufferUsageFlags(json name){
                return name["value"].get<VkBufferUsageFlags>();
            };
        

            json serialize_VkBufferCreateFlags(VkBufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlags deserialize_VkBufferCreateFlags(json name){
                return name["value"].get<VkBufferCreateFlags>();
            };
        

            json serialize_VkShaderStageFlags(VkShaderStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlags deserialize_VkShaderStageFlags(json name){
                return name["value"].get<VkShaderStageFlags>();
            };
        

            json serialize_VkImageUsageFlags(VkImageUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlags deserialize_VkImageUsageFlags(json name){
                return name["value"].get<VkImageUsageFlags>();
            };
        

            json serialize_VkImageCreateFlags(VkImageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlags deserialize_VkImageCreateFlags(json name){
                return name["value"].get<VkImageCreateFlags>();
            };
        

            json serialize_VkImageViewCreateFlags(VkImageViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlags deserialize_VkImageViewCreateFlags(json name){
                return name["value"].get<VkImageViewCreateFlags>();
            };
        

            json serialize_VkPipelineCreateFlags(VkPipelineCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags deserialize_VkPipelineCreateFlags(json name){
                return name["value"].get<VkPipelineCreateFlags>();
            };
        

            json serialize_VkColorComponentFlags(VkColorComponentFlags name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlags deserialize_VkColorComponentFlags(json name){
                return name["value"].get<VkColorComponentFlags>();
            };
        

            json serialize_VkFenceCreateFlags(VkFenceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlags deserialize_VkFenceCreateFlags(json name){
                return name["value"].get<VkFenceCreateFlags>();
            };
        

            json serialize_VkSemaphoreCreateFlags(VkSemaphoreCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreCreateFlags deserialize_VkSemaphoreCreateFlags(json name){
                return name["value"].get<VkSemaphoreCreateFlags>();
            };
        

            json serialize_VkFormatFeatureFlags(VkFormatFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags deserialize_VkFormatFeatureFlags(json name){
                return name["value"].get<VkFormatFeatureFlags>();
            };
        

            json serialize_VkQueryControlFlags(VkQueryControlFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlags deserialize_VkQueryControlFlags(json name){
                return name["value"].get<VkQueryControlFlags>();
            };
        

            json serialize_VkQueryResultFlags(VkQueryResultFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlags deserialize_VkQueryResultFlags(json name){
                return name["value"].get<VkQueryResultFlags>();
            };
        

            json serialize_VkShaderModuleCreateFlags(VkShaderModuleCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderModuleCreateFlags deserialize_VkShaderModuleCreateFlags(json name){
                return name["value"].get<VkShaderModuleCreateFlags>();
            };
        

            json serialize_VkEventCreateFlags(VkEventCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlags deserialize_VkEventCreateFlags(json name){
                return name["value"].get<VkEventCreateFlags>();
            };
        

            json serialize_VkCommandPoolCreateFlags(VkCommandPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlags deserialize_VkCommandPoolCreateFlags(json name){
                return name["value"].get<VkCommandPoolCreateFlags>();
            };
        

            json serialize_VkCommandPoolResetFlags(VkCommandPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlags deserialize_VkCommandPoolResetFlags(json name){
                return name["value"].get<VkCommandPoolResetFlags>();
            };
        

            json serialize_VkCommandBufferResetFlags(VkCommandBufferResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlags deserialize_VkCommandBufferResetFlags(json name){
                return name["value"].get<VkCommandBufferResetFlags>();
            };
        

            json serialize_VkCommandBufferUsageFlags(VkCommandBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlags deserialize_VkCommandBufferUsageFlags(json name){
                return name["value"].get<VkCommandBufferUsageFlags>();
            };
        

            json serialize_VkQueryPipelineStatisticFlags(VkQueryPipelineStatisticFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlags deserialize_VkQueryPipelineStatisticFlags(json name){
                return name["value"].get<VkQueryPipelineStatisticFlags>();
            };
        

            json serialize_VkMemoryMapFlags(VkMemoryMapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryMapFlags deserialize_VkMemoryMapFlags(json name){
                return name["value"].get<VkMemoryMapFlags>();
            };
        

            json serialize_VkMemoryUnmapFlagsKHR(VkMemoryUnmapFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryUnmapFlagsKHR deserialize_VkMemoryUnmapFlagsKHR(json name){
                return name["value"].get<VkMemoryUnmapFlagsKHR>();
            };
        

            json serialize_VkImageAspectFlags(VkImageAspectFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlags deserialize_VkImageAspectFlags(json name){
                return name["value"].get<VkImageAspectFlags>();
            };
        

            json serialize_VkSparseMemoryBindFlags(VkSparseMemoryBindFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlags deserialize_VkSparseMemoryBindFlags(json name){
                return name["value"].get<VkSparseMemoryBindFlags>();
            };
        

            json serialize_VkSparseImageFormatFlags(VkSparseImageFormatFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlags deserialize_VkSparseImageFormatFlags(json name){
                return name["value"].get<VkSparseImageFormatFlags>();
            };
        

            json serialize_VkSubpassDescriptionFlags(VkSubpassDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlags deserialize_VkSubpassDescriptionFlags(json name){
                return name["value"].get<VkSubpassDescriptionFlags>();
            };
        

            json serialize_VkPipelineStageFlags(VkPipelineStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags deserialize_VkPipelineStageFlags(json name){
                return name["value"].get<VkPipelineStageFlags>();
            };
        

            json serialize_VkSampleCountFlags(VkSampleCountFlags name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlags deserialize_VkSampleCountFlags(json name){
                return name["value"].get<VkSampleCountFlags>();
            };
        

            json serialize_VkAttachmentDescriptionFlags(VkAttachmentDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlags deserialize_VkAttachmentDescriptionFlags(json name){
                return name["value"].get<VkAttachmentDescriptionFlags>();
            };
        

            json serialize_VkStencilFaceFlags(VkStencilFaceFlags name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlags deserialize_VkStencilFaceFlags(json name){
                return name["value"].get<VkStencilFaceFlags>();
            };
        

            json serialize_VkCullModeFlags(VkCullModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlags deserialize_VkCullModeFlags(json name){
                return name["value"].get<VkCullModeFlags>();
            };
        

            json serialize_VkDescriptorPoolCreateFlags(VkDescriptorPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlags deserialize_VkDescriptorPoolCreateFlags(json name){
                return name["value"].get<VkDescriptorPoolCreateFlags>();
            };
        

            json serialize_VkDescriptorPoolResetFlags(VkDescriptorPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolResetFlags deserialize_VkDescriptorPoolResetFlags(json name){
                return name["value"].get<VkDescriptorPoolResetFlags>();
            };
        

            json serialize_VkDependencyFlags(VkDependencyFlags name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlags deserialize_VkDependencyFlags(json name){
                return name["value"].get<VkDependencyFlags>();
            };
        

            json serialize_VkSubgroupFeatureFlags(VkSubgroupFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlags deserialize_VkSubgroupFeatureFlags(json name){
                return name["value"].get<VkSubgroupFeatureFlags>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagsNV(VkIndirectCommandsLayoutUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagsNV deserialize_VkIndirectCommandsLayoutUsageFlagsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagsNV>();
            };
        

            json serialize_VkIndirectStateFlagsNV(VkIndirectStateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagsNV deserialize_VkIndirectStateFlagsNV(json name){
                return name["value"].get<VkIndirectStateFlagsNV>();
            };
        

            json serialize_VkGeometryFlagsKHR(VkGeometryFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsKHR deserialize_VkGeometryFlagsKHR(json name){
                return name["value"].get<VkGeometryFlagsKHR>();
            };
        

            json serialize_VkGeometryFlagsNV(VkGeometryFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsNV deserialize_VkGeometryFlagsNV(json name){
                return name["value"].get<VkGeometryFlagsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagsKHR(VkGeometryInstanceFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsKHR deserialize_VkGeometryInstanceFlagsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagsNV(VkGeometryInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsNV deserialize_VkGeometryInstanceFlagsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsKHR(VkBuildAccelerationStructureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsKHR deserialize_VkBuildAccelerationStructureFlagsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsNV(VkBuildAccelerationStructureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsNV deserialize_VkBuildAccelerationStructureFlagsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsNV>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlags(VkPrivateDataSlotCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlags deserialize_VkPrivateDataSlotCreateFlags(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlags>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlagsEXT(VkPrivateDataSlotCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlagsEXT deserialize_VkPrivateDataSlotCreateFlagsEXT(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlagsEXT>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagsKHR(VkAccelerationStructureCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagsKHR deserialize_VkAccelerationStructureCreateFlagsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagsKHR>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlags(VkDescriptorUpdateTemplateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlags deserialize_VkDescriptorUpdateTemplateCreateFlags(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlags>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlagsKHR(VkDescriptorUpdateTemplateCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlagsKHR deserialize_VkDescriptorUpdateTemplateCreateFlagsKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlagsKHR>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlags(VkPipelineCreationFeedbackFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlags deserialize_VkPipelineCreationFeedbackFlags(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlags>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagsEXT(VkPipelineCreationFeedbackFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagsEXT deserialize_VkPipelineCreationFeedbackFlagsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagsEXT>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagsKHR(VkPerformanceCounterDescriptionFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagsKHR deserialize_VkPerformanceCounterDescriptionFlagsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagsKHR(VkAcquireProfilingLockFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagsKHR deserialize_VkAcquireProfilingLockFlagsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlags(VkSemaphoreWaitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlags deserialize_VkSemaphoreWaitFlags(json name){
                return name["value"].get<VkSemaphoreWaitFlags>();
            };
        

            json serialize_VkSemaphoreWaitFlagsKHR(VkSemaphoreWaitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagsKHR deserialize_VkSemaphoreWaitFlagsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagsKHR>();
            };
        

            json serialize_VkPipelineCompilerControlFlagsAMD(VkPipelineCompilerControlFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagsAMD deserialize_VkPipelineCompilerControlFlagsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagsAMD(VkShaderCorePropertiesFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagsAMD deserialize_VkShaderCorePropertiesFlagsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagsAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagsNV(VkDeviceDiagnosticsConfigFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagsNV deserialize_VkDeviceDiagnosticsConfigFlagsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagsNV>();
            };
        

            json serialize_VkAccessFlags2(VkAccessFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2 deserialize_VkAccessFlags2(json name){
                return name["value"].get<VkAccessFlags2>();
            };
        

            json serialize_VkAccessFlags2KHR(VkAccessFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2KHR deserialize_VkAccessFlags2KHR(json name){
                return name["value"].get<VkAccessFlags2KHR>();
            };
        

            json serialize_VkPipelineStageFlags2(VkPipelineStageFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2 deserialize_VkPipelineStageFlags2(json name){
                return name["value"].get<VkPipelineStageFlags2>();
            };
        

            json serialize_VkPipelineStageFlags2KHR(VkPipelineStageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2KHR deserialize_VkPipelineStageFlags2KHR(json name){
                return name["value"].get<VkPipelineStageFlags2KHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInfoFlagsNV(VkAccelerationStructureMotionInfoFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInfoFlagsNV deserialize_VkAccelerationStructureMotionInfoFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInfoFlagsNV>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceFlagsNV(VkAccelerationStructureMotionInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceFlagsNV deserialize_VkAccelerationStructureMotionInstanceFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceFlagsNV>();
            };
        

            json serialize_VkFormatFeatureFlags2(VkFormatFeatureFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2 deserialize_VkFormatFeatureFlags2(json name){
                return name["value"].get<VkFormatFeatureFlags2>();
            };
        

            json serialize_VkFormatFeatureFlags2KHR(VkFormatFeatureFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2KHR deserialize_VkFormatFeatureFlags2KHR(json name){
                return name["value"].get<VkFormatFeatureFlags2KHR>();
            };
        

            json serialize_VkRenderingFlags(VkRenderingFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlags deserialize_VkRenderingFlags(json name){
                return name["value"].get<VkRenderingFlags>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagsNV(VkMemoryDecompressionMethodFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagsNV deserialize_VkMemoryDecompressionMethodFlagsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagsNV>();
            };
        

            json serialize_VkRenderingFlagsKHR(VkRenderingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagsKHR deserialize_VkRenderingFlagsKHR(json name){
                return name["value"].get<VkRenderingFlagsKHR>();
            };
        

            json serialize_VkBuildMicromapFlagsEXT(VkBuildMicromapFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagsEXT deserialize_VkBuildMicromapFlagsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagsEXT(VkMicromapCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagsEXT deserialize_VkMicromapCreateFlagsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagsEXT>();
            };
        

            json serialize_VkDirectDriverLoadingFlagsLUNARG(VkDirectDriverLoadingFlagsLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingFlagsLUNARG deserialize_VkDirectDriverLoadingFlagsLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingFlagsLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlags2KHR(VkPipelineCreateFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags2KHR deserialize_VkPipelineCreateFlags2KHR(json name){
                return name["value"].get<VkPipelineCreateFlags2KHR>();
            };
        

            json serialize_VkBufferUsageFlags2KHR(VkBufferUsageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags2KHR deserialize_VkBufferUsageFlags2KHR(json name){
                return name["value"].get<VkBufferUsageFlags2KHR>();
            };
        

            json serialize_VkCompositeAlphaFlagsKHR(VkCompositeAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagsKHR deserialize_VkCompositeAlphaFlagsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagsKHR(VkDisplayPlaneAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagsKHR deserialize_VkDisplayPlaneAlphaFlagsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagsKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagsKHR(VkSurfaceTransformFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagsKHR deserialize_VkSurfaceTransformFlagsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagsKHR(VkSwapchainCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagsKHR deserialize_VkSwapchainCreateFlagsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagsKHR>();
            };
        

            json serialize_VkDisplayModeCreateFlagsKHR(VkDisplayModeCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayModeCreateFlagsKHR deserialize_VkDisplayModeCreateFlagsKHR(json name){
                return name["value"].get<VkDisplayModeCreateFlagsKHR>();
            };
        

            json serialize_VkDisplaySurfaceCreateFlagsKHR(VkDisplaySurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplaySurfaceCreateFlagsKHR deserialize_VkDisplaySurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkDisplaySurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXlibSurfaceCreateFlagsKHR(VkXlibSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXlibSurfaceCreateFlagsKHR deserialize_VkXlibSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXlibSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXcbSurfaceCreateFlagsKHR(VkXcbSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXcbSurfaceCreateFlagsKHR deserialize_VkXcbSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXcbSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkHeadlessSurfaceCreateFlagsEXT(VkHeadlessSurfaceCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHeadlessSurfaceCreateFlagsEXT deserialize_VkHeadlessSurfaceCreateFlagsEXT(json name){
                return name["value"].get<VkHeadlessSurfaceCreateFlagsEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlags(VkPeerMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlags deserialize_VkPeerMemoryFeatureFlags(json name){
                return name["value"].get<VkPeerMemoryFeatureFlags>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagsKHR(VkPeerMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagsKHR deserialize_VkPeerMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlags(VkMemoryAllocateFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlags deserialize_VkMemoryAllocateFlags(json name){
                return name["value"].get<VkMemoryAllocateFlags>();
            };
        

            json serialize_VkMemoryAllocateFlagsKHR(VkMemoryAllocateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagsKHR deserialize_VkMemoryAllocateFlagsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagsKHR(VkDeviceGroupPresentModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagsKHR deserialize_VkDeviceGroupPresentModeFlagsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagsKHR>();
            };
        

            json serialize_VkDebugReportFlagsEXT(VkDebugReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagsEXT deserialize_VkDebugReportFlagsEXT(json name){
                return name["value"].get<VkDebugReportFlagsEXT>();
            };
        

            json serialize_VkCommandPoolTrimFlags(VkCommandPoolTrimFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlags deserialize_VkCommandPoolTrimFlags(json name){
                return name["value"].get<VkCommandPoolTrimFlags>();
            };
        

            json serialize_VkCommandPoolTrimFlagsKHR(VkCommandPoolTrimFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlagsKHR deserialize_VkCommandPoolTrimFlagsKHR(json name){
                return name["value"].get<VkCommandPoolTrimFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsNV(VkExternalMemoryHandleTypeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsNV deserialize_VkExternalMemoryHandleTypeFlagsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsNV(VkExternalMemoryFeatureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsNV deserialize_VkExternalMemoryFeatureFlagsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsNV>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlags(VkExternalMemoryHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlags deserialize_VkExternalMemoryHandleTypeFlags(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlags>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsKHR(VkExternalMemoryHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsKHR deserialize_VkExternalMemoryHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlags(VkExternalMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlags deserialize_VkExternalMemoryFeatureFlags(json name){
                return name["value"].get<VkExternalMemoryFeatureFlags>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsKHR(VkExternalMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsKHR deserialize_VkExternalMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlags(VkExternalSemaphoreHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlags deserialize_VkExternalSemaphoreHandleTypeFlags(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlags>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagsKHR(VkExternalSemaphoreHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagsKHR deserialize_VkExternalSemaphoreHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlags(VkExternalSemaphoreFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlags deserialize_VkExternalSemaphoreFeatureFlags(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlags>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagsKHR(VkExternalSemaphoreFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagsKHR deserialize_VkExternalSemaphoreFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlags(VkSemaphoreImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlags deserialize_VkSemaphoreImportFlags(json name){
                return name["value"].get<VkSemaphoreImportFlags>();
            };
        

            json serialize_VkSemaphoreImportFlagsKHR(VkSemaphoreImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagsKHR deserialize_VkSemaphoreImportFlagsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlags(VkExternalFenceHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlags deserialize_VkExternalFenceHandleTypeFlags(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlags>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagsKHR(VkExternalFenceHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagsKHR deserialize_VkExternalFenceHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlags(VkExternalFenceFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlags deserialize_VkExternalFenceFeatureFlags(json name){
                return name["value"].get<VkExternalFenceFeatureFlags>();
            };
        

            json serialize_VkExternalFenceFeatureFlagsKHR(VkExternalFenceFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagsKHR deserialize_VkExternalFenceFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagsKHR>();
            };
        

            json serialize_VkFenceImportFlags(VkFenceImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlags deserialize_VkFenceImportFlags(json name){
                return name["value"].get<VkFenceImportFlags>();
            };
        

            json serialize_VkFenceImportFlagsKHR(VkFenceImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagsKHR deserialize_VkFenceImportFlagsKHR(json name){
                return name["value"].get<VkFenceImportFlagsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagsEXT(VkSurfaceCounterFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagsEXT deserialize_VkSurfaceCounterFlagsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagsEXT>();
            };
        

            json serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(VkPipelineViewportSwizzleStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportSwizzleStateCreateFlagsNV deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineViewportSwizzleStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(VkPipelineDiscardRectangleStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDiscardRectangleStateCreateFlagsEXT deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineDiscardRectangleStateCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineCoverageToColorStateCreateFlagsNV(VkPipelineCoverageToColorStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageToColorStateCreateFlagsNV deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageToColorStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageModulationStateCreateFlagsNV(VkPipelineCoverageModulationStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageModulationStateCreateFlagsNV deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageModulationStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageReductionStateCreateFlagsNV(VkPipelineCoverageReductionStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageReductionStateCreateFlagsNV deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageReductionStateCreateFlagsNV>();
            };
        

            json serialize_VkValidationCacheCreateFlagsEXT(VkValidationCacheCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheCreateFlagsEXT deserialize_VkValidationCacheCreateFlagsEXT(json name){
                return name["value"].get<VkValidationCacheCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagsEXT(VkDebugUtilsMessageSeverityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagsEXT deserialize_VkDebugUtilsMessageSeverityFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagsEXT(VkDebugUtilsMessageTypeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagsEXT deserialize_VkDebugUtilsMessageTypeFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCreateFlagsEXT(VkDebugUtilsMessengerCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCreateFlagsEXT deserialize_VkDebugUtilsMessengerCreateFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(VkDebugUtilsMessengerCallbackDataFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCallbackDataFlagsEXT deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCallbackDataFlagsEXT>();
            };
        

            json serialize_VkDeviceMemoryReportFlagsEXT(VkDeviceMemoryReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportFlagsEXT deserialize_VkDeviceMemoryReportFlagsEXT(json name){
                return name["value"].get<VkDeviceMemoryReportFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(VkPipelineRasterizationConservativeStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationConservativeStateCreateFlagsEXT deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationConservativeStateCreateFlagsEXT>();
            };
        

            json serialize_VkDescriptorBindingFlags(VkDescriptorBindingFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlags deserialize_VkDescriptorBindingFlags(json name){
                return name["value"].get<VkDescriptorBindingFlags>();
            };
        

            json serialize_VkDescriptorBindingFlagsEXT(VkDescriptorBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagsEXT deserialize_VkDescriptorBindingFlagsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagsEXT(VkConditionalRenderingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagsEXT deserialize_VkConditionalRenderingFlagsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagsEXT>();
            };
        

            json serialize_VkResolveModeFlags(VkResolveModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlags deserialize_VkResolveModeFlags(json name){
                return name["value"].get<VkResolveModeFlags>();
            };
        

            json serialize_VkResolveModeFlagsKHR(VkResolveModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagsKHR deserialize_VkResolveModeFlagsKHR(json name){
                return name["value"].get<VkResolveModeFlagsKHR>();
            };
        

            json serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(VkPipelineRasterizationStateStreamCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateStreamCreateFlagsEXT deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationStateStreamCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(VkPipelineRasterizationDepthClipStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationDepthClipStateCreateFlagsEXT deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationDepthClipStateCreateFlagsEXT>();
            };
        

            json serialize_VkToolPurposeFlags(VkToolPurposeFlags name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlags deserialize_VkToolPurposeFlags(json name){
                return name["value"].get<VkToolPurposeFlags>();
            };
        

            json serialize_VkToolPurposeFlagsEXT(VkToolPurposeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagsEXT deserialize_VkToolPurposeFlagsEXT(json name){
                return name["value"].get<VkToolPurposeFlagsEXT>();
            };
        

            json serialize_VkSubmitFlags(VkSubmitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlags deserialize_VkSubmitFlags(json name){
                return name["value"].get<VkSubmitFlags>();
            };
        

            json serialize_VkSubmitFlagsKHR(VkSubmitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagsKHR deserialize_VkSubmitFlagsKHR(json name){
                return name["value"].get<VkSubmitFlagsKHR>();
            };
        

            json serialize_VkHostImageCopyFlagsEXT(VkHostImageCopyFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagsEXT deserialize_VkHostImageCopyFlagsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagsEXT>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagsEXT(VkGraphicsPipelineLibraryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagsEXT deserialize_VkGraphicsPipelineLibraryFlagsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFlagsEXT(VkImageCompressionFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagsEXT deserialize_VkImageCompressionFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagsEXT(VkImageCompressionFixedRateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagsEXT deserialize_VkImageCompressionFixedRateFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagsEXT(VkDeviceAddressBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagsEXT deserialize_VkDeviceAddressBindingFlagsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagsNV(VkOpticalFlowGridSizeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagsNV deserialize_VkOpticalFlowGridSizeFlagsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagsNV(VkOpticalFlowUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagsNV deserialize_VkOpticalFlowUsageFlagsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagsNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagsNV(VkOpticalFlowSessionCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagsNV deserialize_VkOpticalFlowSessionCreateFlagsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagsNV(VkOpticalFlowExecuteFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagsNV deserialize_VkOpticalFlowExecuteFlagsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagsNV>();
            };
        

            json serialize_VkFrameBoundaryFlagsEXT(VkFrameBoundaryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagsEXT deserialize_VkFrameBoundaryFlagsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagsEXT>();
            };
        

            json serialize_VkPresentScalingFlagsEXT(VkPresentScalingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagsEXT deserialize_VkPresentScalingFlagsEXT(json name){
                return name["value"].get<VkPresentScalingFlagsEXT>();
            };
        

            json serialize_VkPresentGravityFlagsEXT(VkPresentGravityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagsEXT deserialize_VkPresentGravityFlagsEXT(json name){
                return name["value"].get<VkPresentGravityFlagsEXT>();
            };
        

            json serialize_VkShaderCreateFlagsEXT(VkShaderCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagsEXT deserialize_VkShaderCreateFlagsEXT(json name){
                return name["value"].get<VkShaderCreateFlagsEXT>();
            };
        

            json serialize_VkVideoCodecOperationFlagsKHR(VkVideoCodecOperationFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagsKHR deserialize_VkVideoCodecOperationFlagsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagsKHR(VkVideoCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagsKHR deserialize_VkVideoCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagsKHR(VkVideoSessionCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagsKHR deserialize_VkVideoSessionCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagsKHR>();
            };
        

            json serialize_VkVideoSessionParametersCreateFlagsKHR(VkVideoSessionParametersCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionParametersCreateFlagsKHR deserialize_VkVideoSessionParametersCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionParametersCreateFlagsKHR>();
            };
        

            json serialize_VkVideoBeginCodingFlagsKHR(VkVideoBeginCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoBeginCodingFlagsKHR deserialize_VkVideoBeginCodingFlagsKHR(json name){
                return name["value"].get<VkVideoBeginCodingFlagsKHR>();
            };
        

            json serialize_VkVideoEndCodingFlagsKHR(VkVideoEndCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoEndCodingFlagsKHR deserialize_VkVideoEndCodingFlagsKHR(json name){
                return name["value"].get<VkVideoEndCodingFlagsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagsKHR(VkVideoCodingControlFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagsKHR deserialize_VkVideoCodingControlFlagsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagsKHR(VkVideoDecodeUsageFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagsKHR deserialize_VkVideoDecodeUsageFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagsKHR(VkVideoDecodeCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagsKHR deserialize_VkVideoDecodeCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeFlagsKHR(VkVideoDecodeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeFlagsKHR deserialize_VkVideoDecodeFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagsKHR(VkVideoDecodeH264PictureLayoutFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagsKHR(VkVideoChromaSubsamplingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagsKHR deserialize_VkVideoChromaSubsamplingFlagsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagsKHR(VkVideoComponentBitDepthFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagsKHR deserialize_VkVideoComponentBitDepthFlagsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagsKHR>();
            };
        

            json serialize_VkAttachmentLoadOp(VkAttachmentLoadOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentLoadOp deserialize_VkAttachmentLoadOp(json name){
                return name["value"].get<VkAttachmentLoadOp>();
            };
        

            json serialize_VkAttachmentStoreOp(VkAttachmentStoreOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentStoreOp deserialize_VkAttachmentStoreOp(json name){
                return name["value"].get<VkAttachmentStoreOp>();
            };
        

            json serialize_VkBlendFactor(VkBlendFactor name){
                return json::object({{"value",name}});
            };
        

            VkBlendFactor deserialize_VkBlendFactor(json name){
                return name["value"].get<VkBlendFactor>();
            };
        

            json serialize_VkBlendOp(VkBlendOp name){
                return json::object({{"value",name}});
            };
        

            VkBlendOp deserialize_VkBlendOp(json name){
                return name["value"].get<VkBlendOp>();
            };
        

            json serialize_VkBorderColor(VkBorderColor name){
                return json::object({{"value",name}});
            };
        

            VkBorderColor deserialize_VkBorderColor(json name){
                return name["value"].get<VkBorderColor>();
            };
        

            json serialize_VkFramebufferCreateFlagBits(VkFramebufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlagBits deserialize_VkFramebufferCreateFlagBits(json name){
                return name["value"].get<VkFramebufferCreateFlagBits>();
            };
        

            json serialize_VkRenderPassCreateFlagBits(VkRenderPassCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlagBits deserialize_VkRenderPassCreateFlagBits(json name){
                return name["value"].get<VkRenderPassCreateFlagBits>();
            };
        

            json serialize_VkSamplerCreateFlagBits(VkSamplerCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlagBits deserialize_VkSamplerCreateFlagBits(json name){
                return name["value"].get<VkSamplerCreateFlagBits>();
            };
        

            json serialize_VkPipelineCacheHeaderVersion(VkPipelineCacheHeaderVersion name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheHeaderVersion deserialize_VkPipelineCacheHeaderVersion(json name){
                return name["value"].get<VkPipelineCacheHeaderVersion>();
            };
        

            json serialize_VkPipelineCacheCreateFlagBits(VkPipelineCacheCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlagBits deserialize_VkPipelineCacheCreateFlagBits(json name){
                return name["value"].get<VkPipelineCacheCreateFlagBits>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlagBits(VkPipelineShaderStageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlagBits deserialize_VkPipelineShaderStageCreateFlagBits(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlagBits>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlagBits(VkDescriptorSetLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlagBits deserialize_VkDescriptorSetLayoutCreateFlagBits(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlagBits>();
            };
        

            json serialize_VkInstanceCreateFlagBits(VkInstanceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlagBits deserialize_VkInstanceCreateFlagBits(json name){
                return name["value"].get<VkInstanceCreateFlagBits>();
            };
        

            json serialize_VkDeviceQueueCreateFlagBits(VkDeviceQueueCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlagBits deserialize_VkDeviceQueueCreateFlagBits(json name){
                return name["value"].get<VkDeviceQueueCreateFlagBits>();
            };
        

            json serialize_VkBufferCreateFlagBits(VkBufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlagBits deserialize_VkBufferCreateFlagBits(json name){
                return name["value"].get<VkBufferCreateFlagBits>();
            };
        

            json serialize_VkBufferUsageFlagBits(VkBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits deserialize_VkBufferUsageFlagBits(json name){
                return name["value"].get<VkBufferUsageFlagBits>();
            };
        

            json serialize_VkColorComponentFlagBits(VkColorComponentFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlagBits deserialize_VkColorComponentFlagBits(json name){
                return name["value"].get<VkColorComponentFlagBits>();
            };
        

            json serialize_VkComponentSwizzle(VkComponentSwizzle name){
                return json::object({{"value",name}});
            };
        

            VkComponentSwizzle deserialize_VkComponentSwizzle(json name){
                return name["value"].get<VkComponentSwizzle>();
            };
        

            json serialize_VkCommandPoolCreateFlagBits(VkCommandPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlagBits deserialize_VkCommandPoolCreateFlagBits(json name){
                return name["value"].get<VkCommandPoolCreateFlagBits>();
            };
        

            json serialize_VkCommandPoolResetFlagBits(VkCommandPoolResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlagBits deserialize_VkCommandPoolResetFlagBits(json name){
                return name["value"].get<VkCommandPoolResetFlagBits>();
            };
        

            json serialize_VkCommandBufferResetFlagBits(VkCommandBufferResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlagBits deserialize_VkCommandBufferResetFlagBits(json name){
                return name["value"].get<VkCommandBufferResetFlagBits>();
            };
        

            json serialize_VkCommandBufferLevel(VkCommandBufferLevel name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferLevel deserialize_VkCommandBufferLevel(json name){
                return name["value"].get<VkCommandBufferLevel>();
            };
        

            json serialize_VkCommandBufferUsageFlagBits(VkCommandBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlagBits deserialize_VkCommandBufferUsageFlagBits(json name){
                return name["value"].get<VkCommandBufferUsageFlagBits>();
            };
        

            json serialize_VkCompareOp(VkCompareOp name){
                return json::object({{"value",name}});
            };
        

            VkCompareOp deserialize_VkCompareOp(json name){
                return name["value"].get<VkCompareOp>();
            };
        

            json serialize_VkCullModeFlagBits(VkCullModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlagBits deserialize_VkCullModeFlagBits(json name){
                return name["value"].get<VkCullModeFlagBits>();
            };
        

            json serialize_VkDescriptorType(VkDescriptorType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorType deserialize_VkDescriptorType(json name){
                return name["value"].get<VkDescriptorType>();
            };
        

            json serialize_VkDynamicState(VkDynamicState name){
                return json::object({{"value",name}});
            };
        

            VkDynamicState deserialize_VkDynamicState(json name){
                return name["value"].get<VkDynamicState>();
            };
        

            json serialize_VkFenceCreateFlagBits(VkFenceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlagBits deserialize_VkFenceCreateFlagBits(json name){
                return name["value"].get<VkFenceCreateFlagBits>();
            };
        

            json serialize_VkPolygonMode(VkPolygonMode name){
                return json::object({{"value",name}});
            };
        

            VkPolygonMode deserialize_VkPolygonMode(json name){
                return name["value"].get<VkPolygonMode>();
            };
        

            json serialize_VkFormat(VkFormat name){
                return json::object({{"value",name}});
            };
        

            VkFormat deserialize_VkFormat(json name){
                return name["value"].get<VkFormat>();
            };
        

            json serialize_VkFormatFeatureFlagBits(VkFormatFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits deserialize_VkFormatFeatureFlagBits(json name){
                return name["value"].get<VkFormatFeatureFlagBits>();
            };
        

            json serialize_VkFrontFace(VkFrontFace name){
                return json::object({{"value",name}});
            };
        

            VkFrontFace deserialize_VkFrontFace(json name){
                return name["value"].get<VkFrontFace>();
            };
        

            json serialize_VkImageAspectFlagBits(VkImageAspectFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlagBits deserialize_VkImageAspectFlagBits(json name){
                return name["value"].get<VkImageAspectFlagBits>();
            };
        

            json serialize_VkImageCreateFlagBits(VkImageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlagBits deserialize_VkImageCreateFlagBits(json name){
                return name["value"].get<VkImageCreateFlagBits>();
            };
        

            json serialize_VkImageLayout(VkImageLayout name){
                return json::object({{"value",name}});
            };
        

            VkImageLayout deserialize_VkImageLayout(json name){
                return name["value"].get<VkImageLayout>();
            };
        

            json serialize_VkImageTiling(VkImageTiling name){
                return json::object({{"value",name}});
            };
        

            VkImageTiling deserialize_VkImageTiling(json name){
                return name["value"].get<VkImageTiling>();
            };
        

            json serialize_VkImageType(VkImageType name){
                return json::object({{"value",name}});
            };
        

            VkImageType deserialize_VkImageType(json name){
                return name["value"].get<VkImageType>();
            };
        

            json serialize_VkImageUsageFlagBits(VkImageUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlagBits deserialize_VkImageUsageFlagBits(json name){
                return name["value"].get<VkImageUsageFlagBits>();
            };
        

            json serialize_VkImageViewCreateFlagBits(VkImageViewCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlagBits deserialize_VkImageViewCreateFlagBits(json name){
                return name["value"].get<VkImageViewCreateFlagBits>();
            };
        

            json serialize_VkImageViewType(VkImageViewType name){
                return json::object({{"value",name}});
            };
        

            VkImageViewType deserialize_VkImageViewType(json name){
                return name["value"].get<VkImageViewType>();
            };
        

            json serialize_VkSharingMode(VkSharingMode name){
                return json::object({{"value",name}});
            };
        

            VkSharingMode deserialize_VkSharingMode(json name){
                return name["value"].get<VkSharingMode>();
            };
        

            json serialize_VkIndexType(VkIndexType name){
                return json::object({{"value",name}});
            };
        

            VkIndexType deserialize_VkIndexType(json name){
                return name["value"].get<VkIndexType>();
            };
        

            json serialize_VkLogicOp(VkLogicOp name){
                return json::object({{"value",name}});
            };
        

            VkLogicOp deserialize_VkLogicOp(json name){
                return name["value"].get<VkLogicOp>();
            };
        

            json serialize_VkMemoryHeapFlagBits(VkMemoryHeapFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlagBits deserialize_VkMemoryHeapFlagBits(json name){
                return name["value"].get<VkMemoryHeapFlagBits>();
            };
        

            json serialize_VkAccessFlagBits(VkAccessFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits deserialize_VkAccessFlagBits(json name){
                return name["value"].get<VkAccessFlagBits>();
            };
        

            json serialize_VkMemoryPropertyFlagBits(VkMemoryPropertyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlagBits deserialize_VkMemoryPropertyFlagBits(json name){
                return name["value"].get<VkMemoryPropertyFlagBits>();
            };
        

            json serialize_VkPhysicalDeviceType(VkPhysicalDeviceType name){
                return json::object({{"value",name}});
            };
        

            VkPhysicalDeviceType deserialize_VkPhysicalDeviceType(json name){
                return name["value"].get<VkPhysicalDeviceType>();
            };
        

            json serialize_VkPipelineBindPoint(VkPipelineBindPoint name){
                return json::object({{"value",name}});
            };
        

            VkPipelineBindPoint deserialize_VkPipelineBindPoint(json name){
                return name["value"].get<VkPipelineBindPoint>();
            };
        

            json serialize_VkPipelineCreateFlagBits(VkPipelineCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits deserialize_VkPipelineCreateFlagBits(json name){
                return name["value"].get<VkPipelineCreateFlagBits>();
            };
        

            json serialize_VkPrimitiveTopology(VkPrimitiveTopology name){
                return json::object({{"value",name}});
            };
        

            VkPrimitiveTopology deserialize_VkPrimitiveTopology(json name){
                return name["value"].get<VkPrimitiveTopology>();
            };
        

            json serialize_VkQueryControlFlagBits(VkQueryControlFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlagBits deserialize_VkQueryControlFlagBits(json name){
                return name["value"].get<VkQueryControlFlagBits>();
            };
        

            json serialize_VkQueryPipelineStatisticFlagBits(VkQueryPipelineStatisticFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlagBits deserialize_VkQueryPipelineStatisticFlagBits(json name){
                return name["value"].get<VkQueryPipelineStatisticFlagBits>();
            };
        

            json serialize_VkQueryResultFlagBits(VkQueryResultFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlagBits deserialize_VkQueryResultFlagBits(json name){
                return name["value"].get<VkQueryResultFlagBits>();
            };
        

            json serialize_VkQueryType(VkQueryType name){
                return json::object({{"value",name}});
            };
        

            VkQueryType deserialize_VkQueryType(json name){
                return name["value"].get<VkQueryType>();
            };
        

            json serialize_VkQueueFlagBits(VkQueueFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlagBits deserialize_VkQueueFlagBits(json name){
                return name["value"].get<VkQueueFlagBits>();
            };
        

            json serialize_VkSubpassContents(VkSubpassContents name){
                return json::object({{"value",name}});
            };
        

            VkSubpassContents deserialize_VkSubpassContents(json name){
                return name["value"].get<VkSubpassContents>();
            };
        

            json serialize_VkResult(VkResult name){
                return json::object({{"value",name}});
            };
        

            VkResult deserialize_VkResult(json name){
                return name["value"].get<VkResult>();
            };
        

            json serialize_VkShaderStageFlagBits(VkShaderStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlagBits deserialize_VkShaderStageFlagBits(json name){
                return name["value"].get<VkShaderStageFlagBits>();
            };
        

            json serialize_VkSparseMemoryBindFlagBits(VkSparseMemoryBindFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlagBits deserialize_VkSparseMemoryBindFlagBits(json name){
                return name["value"].get<VkSparseMemoryBindFlagBits>();
            };
        

            json serialize_VkStencilFaceFlagBits(VkStencilFaceFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlagBits deserialize_VkStencilFaceFlagBits(json name){
                return name["value"].get<VkStencilFaceFlagBits>();
            };
        

            json serialize_VkStencilOp(VkStencilOp name){
                return json::object({{"value",name}});
            };
        

            VkStencilOp deserialize_VkStencilOp(json name){
                return name["value"].get<VkStencilOp>();
            };
        

            json serialize_VkStructureType(VkStructureType name){
                return json::object({{"value",name}});
            };
        

            VkStructureType deserialize_VkStructureType(json name){
                return name["value"].get<VkStructureType>();
            };
        

            json serialize_VkSystemAllocationScope(VkSystemAllocationScope name){
                return json::object({{"value",name}});
            };
        

            VkSystemAllocationScope deserialize_VkSystemAllocationScope(json name){
                return name["value"].get<VkSystemAllocationScope>();
            };
        

            json serialize_VkInternalAllocationType(VkInternalAllocationType name){
                return json::object({{"value",name}});
            };
        

            VkInternalAllocationType deserialize_VkInternalAllocationType(json name){
                return name["value"].get<VkInternalAllocationType>();
            };
        

            json serialize_VkSamplerAddressMode(VkSamplerAddressMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerAddressMode deserialize_VkSamplerAddressMode(json name){
                return name["value"].get<VkSamplerAddressMode>();
            };
        

            json serialize_VkFilter(VkFilter name){
                return json::object({{"value",name}});
            };
        

            VkFilter deserialize_VkFilter(json name){
                return name["value"].get<VkFilter>();
            };
        

            json serialize_VkSamplerMipmapMode(VkSamplerMipmapMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerMipmapMode deserialize_VkSamplerMipmapMode(json name){
                return name["value"].get<VkSamplerMipmapMode>();
            };
        

            json serialize_VkVertexInputRate(VkVertexInputRate name){
                return json::object({{"value",name}});
            };
        

            VkVertexInputRate deserialize_VkVertexInputRate(json name){
                return name["value"].get<VkVertexInputRate>();
            };
        

            json serialize_VkPipelineStageFlagBits(VkPipelineStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits deserialize_VkPipelineStageFlagBits(json name){
                return name["value"].get<VkPipelineStageFlagBits>();
            };
        

            json serialize_VkSparseImageFormatFlagBits(VkSparseImageFormatFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlagBits deserialize_VkSparseImageFormatFlagBits(json name){
                return name["value"].get<VkSparseImageFormatFlagBits>();
            };
        

            json serialize_VkSampleCountFlagBits(VkSampleCountFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlagBits deserialize_VkSampleCountFlagBits(json name){
                return name["value"].get<VkSampleCountFlagBits>();
            };
        

            json serialize_VkAttachmentDescriptionFlagBits(VkAttachmentDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlagBits deserialize_VkAttachmentDescriptionFlagBits(json name){
                return name["value"].get<VkAttachmentDescriptionFlagBits>();
            };
        

            json serialize_VkDescriptorPoolCreateFlagBits(VkDescriptorPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlagBits deserialize_VkDescriptorPoolCreateFlagBits(json name){
                return name["value"].get<VkDescriptorPoolCreateFlagBits>();
            };
        

            json serialize_VkDependencyFlagBits(VkDependencyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlagBits deserialize_VkDependencyFlagBits(json name){
                return name["value"].get<VkDependencyFlagBits>();
            };
        

            json serialize_VkObjectType(VkObjectType name){
                return json::object({{"value",name}});
            };
        

            VkObjectType deserialize_VkObjectType(json name){
                return name["value"].get<VkObjectType>();
            };
        

            json serialize_VkEventCreateFlagBits(VkEventCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlagBits deserialize_VkEventCreateFlagBits(json name){
                return name["value"].get<VkEventCreateFlagBits>();
            };
        

            json serialize_VkPipelineLayoutCreateFlagBits(VkPipelineLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlagBits deserialize_VkPipelineLayoutCreateFlagBits(json name){
                return name["value"].get<VkPipelineLayoutCreateFlagBits>();
            };
        

            json serialize_VkRayTracingInvocationReorderModeNV(VkRayTracingInvocationReorderModeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingInvocationReorderModeNV deserialize_VkRayTracingInvocationReorderModeNV(json name){
                return name["value"].get<VkRayTracingInvocationReorderModeNV>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagBitsNV(VkIndirectCommandsLayoutUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagBitsNV deserialize_VkIndirectCommandsLayoutUsageFlagBitsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagBitsNV>();
            };
        

            json serialize_VkIndirectCommandsTokenTypeNV(VkIndirectCommandsTokenTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsTokenTypeNV deserialize_VkIndirectCommandsTokenTypeNV(json name){
                return name["value"].get<VkIndirectCommandsTokenTypeNV>();
            };
        

            json serialize_VkIndirectStateFlagBitsNV(VkIndirectStateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagBitsNV deserialize_VkIndirectStateFlagBitsNV(json name){
                return name["value"].get<VkIndirectStateFlagBitsNV>();
            };
        

            json serialize_VkDescriptorUpdateTemplateType(VkDescriptorUpdateTemplateType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateType deserialize_VkDescriptorUpdateTemplateType(json name){
                return name["value"].get<VkDescriptorUpdateTemplateType>();
            };
        

            json serialize_VkDescriptorUpdateTemplateTypeKHR(VkDescriptorUpdateTemplateTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateTypeKHR deserialize_VkDescriptorUpdateTemplateTypeKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateTypeKHR>();
            };
        

            json serialize_VkViewportCoordinateSwizzleNV(VkViewportCoordinateSwizzleNV name){
                return json::object({{"value",name}});
            };
        

            VkViewportCoordinateSwizzleNV deserialize_VkViewportCoordinateSwizzleNV(json name){
                return name["value"].get<VkViewportCoordinateSwizzleNV>();
            };
        

            json serialize_VkDiscardRectangleModeEXT(VkDiscardRectangleModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDiscardRectangleModeEXT deserialize_VkDiscardRectangleModeEXT(json name){
                return name["value"].get<VkDiscardRectangleModeEXT>();
            };
        

            json serialize_VkSubpassDescriptionFlagBits(VkSubpassDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlagBits deserialize_VkSubpassDescriptionFlagBits(json name){
                return name["value"].get<VkSubpassDescriptionFlagBits>();
            };
        

            json serialize_VkPointClippingBehavior(VkPointClippingBehavior name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehavior deserialize_VkPointClippingBehavior(json name){
                return name["value"].get<VkPointClippingBehavior>();
            };
        

            json serialize_VkPointClippingBehaviorKHR(VkPointClippingBehaviorKHR name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehaviorKHR deserialize_VkPointClippingBehaviorKHR(json name){
                return name["value"].get<VkPointClippingBehaviorKHR>();
            };
        

            json serialize_VkCoverageModulationModeNV(VkCoverageModulationModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageModulationModeNV deserialize_VkCoverageModulationModeNV(json name){
                return name["value"].get<VkCoverageModulationModeNV>();
            };
        

            json serialize_VkCoverageReductionModeNV(VkCoverageReductionModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageReductionModeNV deserialize_VkCoverageReductionModeNV(json name){
                return name["value"].get<VkCoverageReductionModeNV>();
            };
        

            json serialize_VkValidationCacheHeaderVersionEXT(VkValidationCacheHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheHeaderVersionEXT deserialize_VkValidationCacheHeaderVersionEXT(json name){
                return name["value"].get<VkValidationCacheHeaderVersionEXT>();
            };
        

            json serialize_VkShaderInfoTypeAMD(VkShaderInfoTypeAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderInfoTypeAMD deserialize_VkShaderInfoTypeAMD(json name){
                return name["value"].get<VkShaderInfoTypeAMD>();
            };
        

            json serialize_VkQueueGlobalPriorityKHR(VkQueueGlobalPriorityKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityKHR deserialize_VkQueueGlobalPriorityKHR(json name){
                return name["value"].get<VkQueueGlobalPriorityKHR>();
            };
        

            json serialize_VkQueueGlobalPriorityEXT(VkQueueGlobalPriorityEXT name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityEXT deserialize_VkQueueGlobalPriorityEXT(json name){
                return name["value"].get<VkQueueGlobalPriorityEXT>();
            };
        

            json serialize_VkTimeDomainEXT(VkTimeDomainEXT name){
                return json::object({{"value",name}});
            };
        

            VkTimeDomainEXT deserialize_VkTimeDomainEXT(json name){
                return name["value"].get<VkTimeDomainEXT>();
            };
        

            json serialize_VkConservativeRasterizationModeEXT(VkConservativeRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkConservativeRasterizationModeEXT deserialize_VkConservativeRasterizationModeEXT(json name){
                return name["value"].get<VkConservativeRasterizationModeEXT>();
            };
        

            json serialize_VkResolveModeFlagBits(VkResolveModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBits deserialize_VkResolveModeFlagBits(json name){
                return name["value"].get<VkResolveModeFlagBits>();
            };
        

            json serialize_VkResolveModeFlagBitsKHR(VkResolveModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBitsKHR deserialize_VkResolveModeFlagBitsKHR(json name){
                return name["value"].get<VkResolveModeFlagBitsKHR>();
            };
        

            json serialize_VkDescriptorBindingFlagBits(VkDescriptorBindingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBits deserialize_VkDescriptorBindingFlagBits(json name){
                return name["value"].get<VkDescriptorBindingFlagBits>();
            };
        

            json serialize_VkDescriptorBindingFlagBitsEXT(VkDescriptorBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBitsEXT deserialize_VkDescriptorBindingFlagBitsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagBitsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagBitsEXT(VkConditionalRenderingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagBitsEXT deserialize_VkConditionalRenderingFlagBitsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagBitsEXT>();
            };
        

            json serialize_VkSemaphoreType(VkSemaphoreType name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreType deserialize_VkSemaphoreType(json name){
                return name["value"].get<VkSemaphoreType>();
            };
        

            json serialize_VkSemaphoreTypeKHR(VkSemaphoreTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreTypeKHR deserialize_VkSemaphoreTypeKHR(json name){
                return name["value"].get<VkSemaphoreTypeKHR>();
            };
        

            json serialize_VkGeometryFlagBitsKHR(VkGeometryFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsKHR deserialize_VkGeometryFlagBitsKHR(json name){
                return name["value"].get<VkGeometryFlagBitsKHR>();
            };
        

            json serialize_VkGeometryFlagBitsNV(VkGeometryFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsNV deserialize_VkGeometryFlagBitsNV(json name){
                return name["value"].get<VkGeometryFlagBitsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsKHR(VkGeometryInstanceFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsKHR deserialize_VkGeometryInstanceFlagBitsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsNV(VkGeometryInstanceFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsNV deserialize_VkGeometryInstanceFlagBitsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsKHR(VkBuildAccelerationStructureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsKHR deserialize_VkBuildAccelerationStructureFlagBitsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsNV(VkBuildAccelerationStructureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsNV deserialize_VkBuildAccelerationStructureFlagBitsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsNV>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagBitsKHR(VkAccelerationStructureCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagBitsKHR deserialize_VkAccelerationStructureCreateFlagBitsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureModeKHR(VkBuildAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureModeKHR deserialize_VkBuildAccelerationStructureModeKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeKHR(VkCopyAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeKHR deserialize_VkCopyAccelerationStructureModeKHR(json name){
                return name["value"].get<VkCopyAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeNV(VkCopyAccelerationStructureModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeNV deserialize_VkCopyAccelerationStructureModeNV(json name){
                return name["value"].get<VkCopyAccelerationStructureModeNV>();
            };
        

            json serialize_VkAccelerationStructureTypeKHR(VkAccelerationStructureTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeKHR deserialize_VkAccelerationStructureTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureTypeNV(VkAccelerationStructureTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeNV deserialize_VkAccelerationStructureTypeNV(json name){
                return name["value"].get<VkAccelerationStructureTypeNV>();
            };
        

            json serialize_VkGeometryTypeKHR(VkGeometryTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeKHR deserialize_VkGeometryTypeKHR(json name){
                return name["value"].get<VkGeometryTypeKHR>();
            };
        

            json serialize_VkGeometryTypeNV(VkGeometryTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeNV deserialize_VkGeometryTypeNV(json name){
                return name["value"].get<VkGeometryTypeNV>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeKHR(VkRayTracingShaderGroupTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeKHR deserialize_VkRayTracingShaderGroupTypeKHR(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeKHR>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeNV(VkRayTracingShaderGroupTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeNV deserialize_VkRayTracingShaderGroupTypeNV(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeNV>();
            };
        

            json serialize_VkAccelerationStructureMemoryRequirementsTypeNV(VkAccelerationStructureMemoryRequirementsTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMemoryRequirementsTypeNV deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMemoryRequirementsTypeNV>();
            };
        

            json serialize_VkAccelerationStructureBuildTypeKHR(VkAccelerationStructureBuildTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureBuildTypeKHR deserialize_VkAccelerationStructureBuildTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureBuildTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureCompatibilityKHR(VkAccelerationStructureCompatibilityKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCompatibilityKHR deserialize_VkAccelerationStructureCompatibilityKHR(json name){
                return name["value"].get<VkAccelerationStructureCompatibilityKHR>();
            };
        

            json serialize_VkShaderGroupShaderKHR(VkShaderGroupShaderKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderGroupShaderKHR deserialize_VkShaderGroupShaderKHR(json name){
                return name["value"].get<VkShaderGroupShaderKHR>();
            };
        

            json serialize_VkMemoryOverallocationBehaviorAMD(VkMemoryOverallocationBehaviorAMD name){
                return json::object({{"value",name}});
            };
        

            VkMemoryOverallocationBehaviorAMD deserialize_VkMemoryOverallocationBehaviorAMD(json name){
                return name["value"].get<VkMemoryOverallocationBehaviorAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagBitsNV(VkDeviceDiagnosticsConfigFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagBitsNV deserialize_VkDeviceDiagnosticsConfigFlagBitsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagBitsNV>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBits(VkPipelineCreationFeedbackFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBits deserialize_VkPipelineCreationFeedbackFlagBits(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBits>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBitsEXT(VkPipelineCreationFeedbackFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBitsEXT deserialize_VkPipelineCreationFeedbackFlagBitsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBitsEXT>();
            };
        

            json serialize_VkPerformanceCounterScopeKHR(VkPerformanceCounterScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterScopeKHR deserialize_VkPerformanceCounterScopeKHR(json name){
                return name["value"].get<VkPerformanceCounterScopeKHR>();
            };
        

            json serialize_VkPerformanceCounterUnitKHR(VkPerformanceCounterUnitKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterUnitKHR deserialize_VkPerformanceCounterUnitKHR(json name){
                return name["value"].get<VkPerformanceCounterUnitKHR>();
            };
        

            json serialize_VkPerformanceCounterStorageKHR(VkPerformanceCounterStorageKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterStorageKHR deserialize_VkPerformanceCounterStorageKHR(json name){
                return name["value"].get<VkPerformanceCounterStorageKHR>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagBitsKHR(VkPerformanceCounterDescriptionFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagBitsKHR deserialize_VkPerformanceCounterDescriptionFlagBitsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagBitsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagBitsKHR(VkAcquireProfilingLockFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagBitsKHR deserialize_VkAcquireProfilingLockFlagBitsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlagBits(VkSemaphoreWaitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBits deserialize_VkSemaphoreWaitFlagBits(json name){
                return name["value"].get<VkSemaphoreWaitFlagBits>();
            };
        

            json serialize_VkSemaphoreWaitFlagBitsKHR(VkSemaphoreWaitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBitsKHR deserialize_VkSemaphoreWaitFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagBitsKHR>();
            };
        

            json serialize_VkPerformanceConfigurationTypeINTEL(VkPerformanceConfigurationTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceConfigurationTypeINTEL deserialize_VkPerformanceConfigurationTypeINTEL(json name){
                return name["value"].get<VkPerformanceConfigurationTypeINTEL>();
            };
        

            json serialize_VkQueryPoolSamplingModeINTEL(VkQueryPoolSamplingModeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolSamplingModeINTEL deserialize_VkQueryPoolSamplingModeINTEL(json name){
                return name["value"].get<VkQueryPoolSamplingModeINTEL>();
            };
        

            json serialize_VkPerformanceOverrideTypeINTEL(VkPerformanceOverrideTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceOverrideTypeINTEL deserialize_VkPerformanceOverrideTypeINTEL(json name){
                return name["value"].get<VkPerformanceOverrideTypeINTEL>();
            };
        

            json serialize_VkPerformanceParameterTypeINTEL(VkPerformanceParameterTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceParameterTypeINTEL deserialize_VkPerformanceParameterTypeINTEL(json name){
                return name["value"].get<VkPerformanceParameterTypeINTEL>();
            };
        

            json serialize_VkPerformanceValueTypeINTEL(VkPerformanceValueTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceValueTypeINTEL deserialize_VkPerformanceValueTypeINTEL(json name){
                return name["value"].get<VkPerformanceValueTypeINTEL>();
            };
        

            json serialize_VkLineRasterizationModeEXT(VkLineRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkLineRasterizationModeEXT deserialize_VkLineRasterizationModeEXT(json name){
                return name["value"].get<VkLineRasterizationModeEXT>();
            };
        

            json serialize_VkPipelineCompilerControlFlagBitsAMD(VkPipelineCompilerControlFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagBitsAMD deserialize_VkPipelineCompilerControlFlagBitsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagBitsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagBitsAMD(VkShaderCorePropertiesFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagBitsAMD deserialize_VkShaderCorePropertiesFlagBitsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagBitsAMD>();
            };
        

            json serialize_VkToolPurposeFlagBits(VkToolPurposeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBits deserialize_VkToolPurposeFlagBits(json name){
                return name["value"].get<VkToolPurposeFlagBits>();
            };
        

            json serialize_VkToolPurposeFlagBitsEXT(VkToolPurposeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBitsEXT deserialize_VkToolPurposeFlagBitsEXT(json name){
                return name["value"].get<VkToolPurposeFlagBitsEXT>();
            };
        

            json serialize_VkFragmentShadingRateNV(VkFragmentShadingRateNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateNV deserialize_VkFragmentShadingRateNV(json name){
                return name["value"].get<VkFragmentShadingRateNV>();
            };
        

            json serialize_VkFragmentShadingRateTypeNV(VkFragmentShadingRateTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateTypeNV deserialize_VkFragmentShadingRateTypeNV(json name){
                return name["value"].get<VkFragmentShadingRateTypeNV>();
            };
        

            json serialize_VkSubpassMergeStatusEXT(VkSubpassMergeStatusEXT name){
                return json::object({{"value",name}});
            };
        

            VkSubpassMergeStatusEXT deserialize_VkSubpassMergeStatusEXT(json name){
                return name["value"].get<VkSubpassMergeStatusEXT>();
            };
        

            json serialize_VkAccessFlagBits2(VkAccessFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2 deserialize_VkAccessFlagBits2(json name){
                return name["value"].get<VkAccessFlagBits2>();
            };
        

            json serialize_VkAccessFlagBits2KHR(VkAccessFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2KHR deserialize_VkAccessFlagBits2KHR(json name){
                return name["value"].get<VkAccessFlagBits2KHR>();
            };
        

            json serialize_VkPipelineStageFlagBits2(VkPipelineStageFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2 deserialize_VkPipelineStageFlagBits2(json name){
                return name["value"].get<VkPipelineStageFlagBits2>();
            };
        

            json serialize_VkPipelineStageFlagBits2KHR(VkPipelineStageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2KHR deserialize_VkPipelineStageFlagBits2KHR(json name){
                return name["value"].get<VkPipelineStageFlagBits2KHR>();
            };
        

            json serialize_VkProvokingVertexModeEXT(VkProvokingVertexModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkProvokingVertexModeEXT deserialize_VkProvokingVertexModeEXT(json name){
                return name["value"].get<VkProvokingVertexModeEXT>();
            };
        

            json serialize_VkHostImageCopyFlagBitsEXT(VkHostImageCopyFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagBitsEXT deserialize_VkHostImageCopyFlagBitsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagBitsEXT>();
            };
        

            json serialize_VkFormatFeatureFlagBits2(VkFormatFeatureFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2 deserialize_VkFormatFeatureFlagBits2(json name){
                return name["value"].get<VkFormatFeatureFlagBits2>();
            };
        

            json serialize_VkFormatFeatureFlagBits2KHR(VkFormatFeatureFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2KHR deserialize_VkFormatFeatureFlagBits2KHR(json name){
                return name["value"].get<VkFormatFeatureFlagBits2KHR>();
            };
        

            json serialize_VkRenderingFlagBits(VkRenderingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBits deserialize_VkRenderingFlagBits(json name){
                return name["value"].get<VkRenderingFlagBits>();
            };
        

            json serialize_VkRenderingFlagBitsKHR(VkRenderingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBitsKHR deserialize_VkRenderingFlagBitsKHR(json name){
                return name["value"].get<VkRenderingFlagBitsKHR>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlagBits(VkPipelineDepthStencilStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlagBits deserialize_VkPipelineDepthStencilStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlagBits>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlagBits(VkPipelineColorBlendStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlagBits deserialize_VkPipelineColorBlendStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlagBits>();
            };
        

            json serialize_VkImageCompressionFlagBitsEXT(VkImageCompressionFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagBitsEXT deserialize_VkImageCompressionFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFlagBitsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagBitsEXT(VkImageCompressionFixedRateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagBitsEXT deserialize_VkImageCompressionFixedRateFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagBitsEXT>();
            };
        

            json serialize_VkPipelineRobustnessBufferBehaviorEXT(VkPipelineRobustnessBufferBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessBufferBehaviorEXT deserialize_VkPipelineRobustnessBufferBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessBufferBehaviorEXT>();
            };
        

            json serialize_VkPipelineRobustnessImageBehaviorEXT(VkPipelineRobustnessImageBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessImageBehaviorEXT deserialize_VkPipelineRobustnessImageBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessImageBehaviorEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagBitsEXT(VkDeviceAddressBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagBitsEXT deserialize_VkDeviceAddressBindingFlagBitsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagBitsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingTypeEXT(VkDeviceAddressBindingTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingTypeEXT deserialize_VkDeviceAddressBindingTypeEXT(json name){
                return name["value"].get<VkDeviceAddressBindingTypeEXT>();
            };
        

            json serialize_VkMicromapTypeEXT(VkMicromapTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapTypeEXT deserialize_VkMicromapTypeEXT(json name){
                return name["value"].get<VkMicromapTypeEXT>();
            };
        

            json serialize_VkBuildMicromapModeEXT(VkBuildMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapModeEXT deserialize_VkBuildMicromapModeEXT(json name){
                return name["value"].get<VkBuildMicromapModeEXT>();
            };
        

            json serialize_VkCopyMicromapModeEXT(VkCopyMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkCopyMicromapModeEXT deserialize_VkCopyMicromapModeEXT(json name){
                return name["value"].get<VkCopyMicromapModeEXT>();
            };
        

            json serialize_VkBuildMicromapFlagBitsEXT(VkBuildMicromapFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagBitsEXT deserialize_VkBuildMicromapFlagBitsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagBitsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagBitsEXT(VkMicromapCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagBitsEXT deserialize_VkMicromapCreateFlagBitsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagBitsEXT>();
            };
        

            json serialize_VkOpacityMicromapFormatEXT(VkOpacityMicromapFormatEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapFormatEXT deserialize_VkOpacityMicromapFormatEXT(json name){
                return name["value"].get<VkOpacityMicromapFormatEXT>();
            };
        

            json serialize_VkOpacityMicromapSpecialIndexEXT(VkOpacityMicromapSpecialIndexEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapSpecialIndexEXT deserialize_VkOpacityMicromapSpecialIndexEXT(json name){
                return name["value"].get<VkOpacityMicromapSpecialIndexEXT>();
            };
        

            json serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(VkDeviceFaultVendorBinaryHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultVendorBinaryHeaderVersionEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(json name){
                return name["value"].get<VkDeviceFaultVendorBinaryHeaderVersionEXT>();
            };
        

            json serialize_VkFrameBoundaryFlagBitsEXT(VkFrameBoundaryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagBitsEXT deserialize_VkFrameBoundaryFlagBitsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagBitsEXT>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagBitsNV(VkMemoryDecompressionMethodFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagBitsNV deserialize_VkMemoryDecompressionMethodFlagBitsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagBitsNV>();
            };
        

            json serialize_VkDepthBiasRepresentationEXT(VkDepthBiasRepresentationEXT name){
                return json::object({{"value",name}});
            };
        

            VkDepthBiasRepresentationEXT deserialize_VkDepthBiasRepresentationEXT(json name){
                return name["value"].get<VkDepthBiasRepresentationEXT>();
            };
        

            json serialize_VkDirectDriverLoadingModeLUNARG(VkDirectDriverLoadingModeLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingModeLUNARG deserialize_VkDirectDriverLoadingModeLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingModeLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlagBits2KHR(VkPipelineCreateFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits2KHR deserialize_VkPipelineCreateFlagBits2KHR(json name){
                return name["value"].get<VkPipelineCreateFlagBits2KHR>();
            };
        

            json serialize_VkBufferUsageFlagBits2KHR(VkBufferUsageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits2KHR deserialize_VkBufferUsageFlagBits2KHR(json name){
                return name["value"].get<VkBufferUsageFlagBits2KHR>();
            };
        

            json serialize_VkShaderCreateFlagBitsEXT(VkShaderCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagBitsEXT deserialize_VkShaderCreateFlagBitsEXT(json name){
                return name["value"].get<VkShaderCreateFlagBitsEXT>();
            };
        

            json serialize_VkShaderCodeTypeEXT(VkShaderCodeTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCodeTypeEXT deserialize_VkShaderCodeTypeEXT(json name){
                return name["value"].get<VkShaderCodeTypeEXT>();
            };
        

            json serialize_VkScopeKHR(VkScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkScopeKHR deserialize_VkScopeKHR(json name){
                return name["value"].get<VkScopeKHR>();
            };
        

            json serialize_VkComponentTypeKHR(VkComponentTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeKHR deserialize_VkComponentTypeKHR(json name){
                return name["value"].get<VkComponentTypeKHR>();
            };
        

            json serialize_VkScopeNV(VkScopeNV name){
                return json::object({{"value",name}});
            };
        

            VkScopeNV deserialize_VkScopeNV(json name){
                return name["value"].get<VkScopeNV>();
            };
        

            json serialize_VkComponentTypeNV(VkComponentTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeNV deserialize_VkComponentTypeNV(json name){
                return name["value"].get<VkComponentTypeNV>();
            };
        

            json serialize_VkCubicFilterWeightsQCOM(VkCubicFilterWeightsQCOM name){
                return json::object({{"value",name}});
            };
        

            VkCubicFilterWeightsQCOM deserialize_VkCubicFilterWeightsQCOM(json name){
                return name["value"].get<VkCubicFilterWeightsQCOM>();
            };
        

            json serialize_VkBlockMatchWindowCompareModeQCOM(VkBlockMatchWindowCompareModeQCOM name){
                return json::object({{"value",name}});
            };
        

            VkBlockMatchWindowCompareModeQCOM deserialize_VkBlockMatchWindowCompareModeQCOM(json name){
                return name["value"].get<VkBlockMatchWindowCompareModeQCOM>();
            };
        

            json serialize_VkLayeredDriverUnderlyingApiMSFT(VkLayeredDriverUnderlyingApiMSFT name){
                return json::object({{"value",name}});
            };
        

            VkLayeredDriverUnderlyingApiMSFT deserialize_VkLayeredDriverUnderlyingApiMSFT(json name){
                return name["value"].get<VkLayeredDriverUnderlyingApiMSFT>();
            };
        

            json serialize_VkColorSpaceKHR(VkColorSpaceKHR name){
                return json::object({{"value",name}});
            };
        

            VkColorSpaceKHR deserialize_VkColorSpaceKHR(json name){
                return name["value"].get<VkColorSpaceKHR>();
            };
        

            json serialize_VkCompositeAlphaFlagBitsKHR(VkCompositeAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagBitsKHR deserialize_VkCompositeAlphaFlagBitsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagBitsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagBitsKHR(VkDisplayPlaneAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagBitsKHR deserialize_VkDisplayPlaneAlphaFlagBitsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagBitsKHR>();
            };
        

            json serialize_VkPresentModeKHR(VkPresentModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPresentModeKHR deserialize_VkPresentModeKHR(json name){
                return name["value"].get<VkPresentModeKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagBitsKHR(VkSurfaceTransformFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagBitsKHR deserialize_VkSurfaceTransformFlagBitsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagBitsKHR>();
            };
        

            json serialize_VkDebugReportFlagBitsEXT(VkDebugReportFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagBitsEXT deserialize_VkDebugReportFlagBitsEXT(json name){
                return name["value"].get<VkDebugReportFlagBitsEXT>();
            };
        

            json serialize_VkDebugReportObjectTypeEXT(VkDebugReportObjectTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportObjectTypeEXT deserialize_VkDebugReportObjectTypeEXT(json name){
                return name["value"].get<VkDebugReportObjectTypeEXT>();
            };
        

            json serialize_VkDeviceMemoryReportEventTypeEXT(VkDeviceMemoryReportEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportEventTypeEXT deserialize_VkDeviceMemoryReportEventTypeEXT(json name){
                return name["value"].get<VkDeviceMemoryReportEventTypeEXT>();
            };
        

            json serialize_VkRasterizationOrderAMD(VkRasterizationOrderAMD name){
                return json::object({{"value",name}});
            };
        

            VkRasterizationOrderAMD deserialize_VkRasterizationOrderAMD(json name){
                return name["value"].get<VkRasterizationOrderAMD>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsNV(VkExternalMemoryHandleTypeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsNV deserialize_VkExternalMemoryHandleTypeFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsNV(VkExternalMemoryFeatureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsNV deserialize_VkExternalMemoryFeatureFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsNV>();
            };
        

            json serialize_VkValidationCheckEXT(VkValidationCheckEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCheckEXT deserialize_VkValidationCheckEXT(json name){
                return name["value"].get<VkValidationCheckEXT>();
            };
        

            json serialize_VkValidationFeatureEnableEXT(VkValidationFeatureEnableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureEnableEXT deserialize_VkValidationFeatureEnableEXT(json name){
                return name["value"].get<VkValidationFeatureEnableEXT>();
            };
        

            json serialize_VkValidationFeatureDisableEXT(VkValidationFeatureDisableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureDisableEXT deserialize_VkValidationFeatureDisableEXT(json name){
                return name["value"].get<VkValidationFeatureDisableEXT>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBits(VkExternalMemoryHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBits deserialize_VkExternalMemoryHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsKHR(VkExternalMemoryHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsKHR deserialize_VkExternalMemoryHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBits(VkExternalMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBits deserialize_VkExternalMemoryFeatureFlagBits(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBits>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsKHR(VkExternalMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsKHR deserialize_VkExternalMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBits(VkExternalSemaphoreHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBits deserialize_VkExternalSemaphoreHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(VkExternalSemaphoreHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBitsKHR deserialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBits(VkExternalSemaphoreFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBits deserialize_VkExternalSemaphoreFeatureFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBitsKHR(VkExternalSemaphoreFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBitsKHR deserialize_VkExternalSemaphoreFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlagBits(VkSemaphoreImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBits deserialize_VkSemaphoreImportFlagBits(json name){
                return name["value"].get<VkSemaphoreImportFlagBits>();
            };
        

            json serialize_VkSemaphoreImportFlagBitsKHR(VkSemaphoreImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBitsKHR deserialize_VkSemaphoreImportFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBits(VkExternalFenceHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBits deserialize_VkExternalFenceHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBitsKHR(VkExternalFenceHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBitsKHR deserialize_VkExternalFenceHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBits(VkExternalFenceFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBits deserialize_VkExternalFenceFeatureFlagBits(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBits>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBitsKHR(VkExternalFenceFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBitsKHR deserialize_VkExternalFenceFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBitsKHR>();
            };
        

            json serialize_VkFenceImportFlagBits(VkFenceImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBits deserialize_VkFenceImportFlagBits(json name){
                return name["value"].get<VkFenceImportFlagBits>();
            };
        

            json serialize_VkFenceImportFlagBitsKHR(VkFenceImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBitsKHR deserialize_VkFenceImportFlagBitsKHR(json name){
                return name["value"].get<VkFenceImportFlagBitsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagBitsEXT(VkSurfaceCounterFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagBitsEXT deserialize_VkSurfaceCounterFlagBitsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagBitsEXT>();
            };
        

            json serialize_VkDisplayPowerStateEXT(VkDisplayPowerStateEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPowerStateEXT deserialize_VkDisplayPowerStateEXT(json name){
                return name["value"].get<VkDisplayPowerStateEXT>();
            };
        

            json serialize_VkDeviceEventTypeEXT(VkDeviceEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceEventTypeEXT deserialize_VkDeviceEventTypeEXT(json name){
                return name["value"].get<VkDeviceEventTypeEXT>();
            };
        

            json serialize_VkDisplayEventTypeEXT(VkDisplayEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayEventTypeEXT deserialize_VkDisplayEventTypeEXT(json name){
                return name["value"].get<VkDisplayEventTypeEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBits(VkPeerMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBits deserialize_VkPeerMemoryFeatureFlagBits(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBits>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBitsKHR(VkPeerMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBitsKHR deserialize_VkPeerMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlagBits(VkMemoryAllocateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBits deserialize_VkMemoryAllocateFlagBits(json name){
                return name["value"].get<VkMemoryAllocateFlagBits>();
            };
        

            json serialize_VkMemoryAllocateFlagBitsKHR(VkMemoryAllocateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBitsKHR deserialize_VkMemoryAllocateFlagBitsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagBitsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagBitsKHR(VkDeviceGroupPresentModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagBitsKHR deserialize_VkDeviceGroupPresentModeFlagBitsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagBitsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagBitsKHR(VkSwapchainCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagBitsKHR deserialize_VkSwapchainCreateFlagBitsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagBitsKHR>();
            };
        

            json serialize_VkSubgroupFeatureFlagBits(VkSubgroupFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlagBits deserialize_VkSubgroupFeatureFlagBits(json name){
                return name["value"].get<VkSubgroupFeatureFlagBits>();
            };
        

            json serialize_VkTessellationDomainOrigin(VkTessellationDomainOrigin name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOrigin deserialize_VkTessellationDomainOrigin(json name){
                return name["value"].get<VkTessellationDomainOrigin>();
            };
        

            json serialize_VkTessellationDomainOriginKHR(VkTessellationDomainOriginKHR name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOriginKHR deserialize_VkTessellationDomainOriginKHR(json name){
                return name["value"].get<VkTessellationDomainOriginKHR>();
            };
        

            json serialize_VkSamplerYcbcrModelConversion(VkSamplerYcbcrModelConversion name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversion deserialize_VkSamplerYcbcrModelConversion(json name){
                return name["value"].get<VkSamplerYcbcrModelConversion>();
            };
        

            json serialize_VkSamplerYcbcrModelConversionKHR(VkSamplerYcbcrModelConversionKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversionKHR deserialize_VkSamplerYcbcrModelConversionKHR(json name){
                return name["value"].get<VkSamplerYcbcrModelConversionKHR>();
            };
        

            json serialize_VkSamplerYcbcrRange(VkSamplerYcbcrRange name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRange deserialize_VkSamplerYcbcrRange(json name){
                return name["value"].get<VkSamplerYcbcrRange>();
            };
        

            json serialize_VkSamplerYcbcrRangeKHR(VkSamplerYcbcrRangeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRangeKHR deserialize_VkSamplerYcbcrRangeKHR(json name){
                return name["value"].get<VkSamplerYcbcrRangeKHR>();
            };
        

            json serialize_VkChromaLocation(VkChromaLocation name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocation deserialize_VkChromaLocation(json name){
                return name["value"].get<VkChromaLocation>();
            };
        

            json serialize_VkChromaLocationKHR(VkChromaLocationKHR name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocationKHR deserialize_VkChromaLocationKHR(json name){
                return name["value"].get<VkChromaLocationKHR>();
            };
        

            json serialize_VkSamplerReductionMode(VkSamplerReductionMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionMode deserialize_VkSamplerReductionMode(json name){
                return name["value"].get<VkSamplerReductionMode>();
            };
        

            json serialize_VkSamplerReductionModeEXT(VkSamplerReductionModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionModeEXT deserialize_VkSamplerReductionModeEXT(json name){
                return name["value"].get<VkSamplerReductionModeEXT>();
            };
        

            json serialize_VkBlendOverlapEXT(VkBlendOverlapEXT name){
                return json::object({{"value",name}});
            };
        

            VkBlendOverlapEXT deserialize_VkBlendOverlapEXT(json name){
                return name["value"].get<VkBlendOverlapEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(VkDebugUtilsMessageSeverityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagBitsEXT deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagBitsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagBitsEXT(VkDebugUtilsMessageTypeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagBitsEXT deserialize_VkDebugUtilsMessageTypeFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagBitsEXT>();
            };
        

            json serialize_VkShaderFloatControlsIndependence(VkShaderFloatControlsIndependence name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependence deserialize_VkShaderFloatControlsIndependence(json name){
                return name["value"].get<VkShaderFloatControlsIndependence>();
            };
        

            json serialize_VkShaderFloatControlsIndependenceKHR(VkShaderFloatControlsIndependenceKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependenceKHR deserialize_VkShaderFloatControlsIndependenceKHR(json name){
                return name["value"].get<VkShaderFloatControlsIndependenceKHR>();
            };
        

            json serialize_VkFragmentShadingRateCombinerOpKHR(VkFragmentShadingRateCombinerOpKHR name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateCombinerOpKHR deserialize_VkFragmentShadingRateCombinerOpKHR(json name){
                return name["value"].get<VkFragmentShadingRateCombinerOpKHR>();
            };
        

            json serialize_VkSubmitFlagBits(VkSubmitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBits deserialize_VkSubmitFlagBits(json name){
                return name["value"].get<VkSubmitFlagBits>();
            };
        

            json serialize_VkSubmitFlagBitsKHR(VkSubmitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBitsKHR deserialize_VkSubmitFlagBitsKHR(json name){
                return name["value"].get<VkSubmitFlagBitsKHR>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagBitsEXT(VkGraphicsPipelineLibraryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagBitsEXT deserialize_VkGraphicsPipelineLibraryFlagBitsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagBitsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagBitsNV(VkOpticalFlowGridSizeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagBitsNV deserialize_VkOpticalFlowGridSizeFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagBitsNV(VkOpticalFlowUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagBitsNV deserialize_VkOpticalFlowUsageFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowPerformanceLevelNV(VkOpticalFlowPerformanceLevelNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowPerformanceLevelNV deserialize_VkOpticalFlowPerformanceLevelNV(json name){
                return name["value"].get<VkOpticalFlowPerformanceLevelNV>();
            };
        

            json serialize_VkOpticalFlowSessionBindingPointNV(VkOpticalFlowSessionBindingPointNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionBindingPointNV deserialize_VkOpticalFlowSessionBindingPointNV(json name){
                return name["value"].get<VkOpticalFlowSessionBindingPointNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagBitsNV(VkOpticalFlowSessionCreateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagBitsNV deserialize_VkOpticalFlowSessionCreateFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagBitsNV(VkOpticalFlowExecuteFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagBitsNV deserialize_VkOpticalFlowExecuteFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagBitsNV>();
            };
        

            json serialize_VkDeviceFaultAddressTypeEXT(VkDeviceFaultAddressTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultAddressTypeEXT deserialize_VkDeviceFaultAddressTypeEXT(json name){
                return name["value"].get<VkDeviceFaultAddressTypeEXT>();
            };
        

            json serialize_VkPresentScalingFlagBitsEXT(VkPresentScalingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagBitsEXT deserialize_VkPresentScalingFlagBitsEXT(json name){
                return name["value"].get<VkPresentScalingFlagBitsEXT>();
            };
        

            json serialize_VkPresentGravityFlagBitsEXT(VkPresentGravityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagBitsEXT deserialize_VkPresentGravityFlagBitsEXT(json name){
                return name["value"].get<VkPresentGravityFlagBitsEXT>();
            };
        

            json serialize_VkVendorId(VkVendorId name){
                return json::object({{"value",name}});
            };
        

            VkVendorId deserialize_VkVendorId(json name){
                return name["value"].get<VkVendorId>();
            };
        

            json serialize_VkDriverId(VkDriverId name){
                return json::object({{"value",name}});
            };
        

            VkDriverId deserialize_VkDriverId(json name){
                return name["value"].get<VkDriverId>();
            };
        

            json serialize_VkDriverIdKHR(VkDriverIdKHR name){
                return json::object({{"value",name}});
            };
        

            VkDriverIdKHR deserialize_VkDriverIdKHR(json name){
                return name["value"].get<VkDriverIdKHR>();
            };
        

            json serialize_VkShadingRatePaletteEntryNV(VkShadingRatePaletteEntryNV name){
                return json::object({{"value",name}});
            };
        

            VkShadingRatePaletteEntryNV deserialize_VkShadingRatePaletteEntryNV(json name){
                return name["value"].get<VkShadingRatePaletteEntryNV>();
            };
        

            json serialize_VkCoarseSampleOrderTypeNV(VkCoarseSampleOrderTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoarseSampleOrderTypeNV deserialize_VkCoarseSampleOrderTypeNV(json name){
                return name["value"].get<VkCoarseSampleOrderTypeNV>();
            };
        

            json serialize_VkPipelineExecutableStatisticFormatKHR(VkPipelineExecutableStatisticFormatKHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineExecutableStatisticFormatKHR deserialize_VkPipelineExecutableStatisticFormatKHR(json name){
                return name["value"].get<VkPipelineExecutableStatisticFormatKHR>();
            };
        

            json serialize_VkVideoCodecOperationFlagBitsKHR(VkVideoCodecOperationFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagBitsKHR deserialize_VkVideoCodecOperationFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagBitsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagBitsKHR(VkVideoChromaSubsamplingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagBitsKHR deserialize_VkVideoChromaSubsamplingFlagBitsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagBitsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagBitsKHR(VkVideoComponentBitDepthFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagBitsKHR deserialize_VkVideoComponentBitDepthFlagBitsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagBitsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagBitsKHR(VkVideoCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagBitsKHR deserialize_VkVideoCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagBitsKHR(VkVideoSessionCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagBitsKHR deserialize_VkVideoSessionCreateFlagBitsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagBitsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagBitsKHR(VkVideoCodingControlFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagBitsKHR deserialize_VkVideoCodingControlFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagBitsKHR>();
            };
        

            json serialize_VkQueryResultStatusKHR(VkQueryResultStatusKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultStatusKHR deserialize_VkQueryResultStatusKHR(json name){
                return name["value"].get<VkQueryResultStatusKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagBitsKHR(VkVideoDecodeUsageFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagBitsKHR deserialize_VkVideoDecodeUsageFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagBitsKHR(VkVideoDecodeCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagBitsKHR deserialize_VkVideoDecodeCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(VkVideoDecodeH264PictureLayoutFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagBitsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagBitsKHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceTypeNV(VkAccelerationStructureMotionInstanceTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceTypeNV deserialize_VkAccelerationStructureMotionInstanceTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceTypeNV>();
            };
        

        json serialize_Display_p(const Display* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Display* deserialize_Display_p(json name){
            return (Display*) (uintptr_t)name["value"];
        };
    

        json serialize_VisualID_p(const VisualID* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        VisualID* deserialize_VisualID_p(json name){
            return (VisualID*) (uintptr_t)name["value"];
        };
    

            json serialize_VisualID(const VisualID name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            VisualID deserialize_VisualID(json name){
                return (VisualID) name["value"];
            };
        

        json serialize_Window_p(const Window* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Window* deserialize_Window_p(json name){
            return (Window*) (uintptr_t)name["value"];
        };
    

            json serialize_Window(const Window name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            Window deserialize_Window(json name){
                return (Window) name["value"];
            };
        

        json serialize_xcb_connection_t_p(const xcb_connection_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_connection_t* deserialize_xcb_connection_t_p(json name){
            return (xcb_connection_t*) (uintptr_t)name["value"];
        };
    

        json serialize_xcb_visualid_t_p(const xcb_visualid_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_visualid_t* deserialize_xcb_visualid_t_p(json name){
            return (xcb_visualid_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_visualid_t(const xcb_visualid_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_visualid_t deserialize_xcb_visualid_t(json name){
                return (xcb_visualid_t) name["value"];
            };
        

        json serialize_xcb_window_t_p(const xcb_window_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_window_t* deserialize_xcb_window_t_p(json name){
            return (xcb_window_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_window_t(const xcb_window_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_window_t deserialize_xcb_window_t(json name){
                return (xcb_window_t) name["value"];
            };
        

        json serialize_StdVideoH264ProfileIdc_p(const StdVideoH264ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ProfileIdc* deserialize_StdVideoH264ProfileIdc_p(json name){
            return (StdVideoH264ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264ProfileIdc(const StdVideoH264ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264ProfileIdc deserialize_StdVideoH264ProfileIdc(json name){
                return (StdVideoH264ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH264LevelIdc_p(const StdVideoH264LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264LevelIdc* deserialize_StdVideoH264LevelIdc_p(json name){
            return (StdVideoH264LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264LevelIdc(const StdVideoH264LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264LevelIdc deserialize_StdVideoH264LevelIdc(json name){
                return (StdVideoH264LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH264ChromaFormatIdc_p(const StdVideoH264ChromaFormatIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ChromaFormatIdc* deserialize_StdVideoH264ChromaFormatIdc_p(json name){
            return (StdVideoH264ChromaFormatIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PocType_p(const StdVideoH264PocType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PocType* deserialize_StdVideoH264PocType_p(json name){
            return (StdVideoH264PocType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsFlags_p(const StdVideoH264SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsFlags* deserialize_StdVideoH264SpsFlags_p(json name){
            return (StdVideoH264SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ScalingLists_p(const StdVideoH264ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ScalingLists* deserialize_StdVideoH264ScalingLists_p(json name){
            return (StdVideoH264ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSetVui_p(const StdVideoH264SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSetVui* deserialize_StdVideoH264SequenceParameterSetVui_p(json name){
            return (StdVideoH264SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264AspectRatioIdc_p(const StdVideoH264AspectRatioIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264AspectRatioIdc* deserialize_StdVideoH264AspectRatioIdc_p(json name){
            return (StdVideoH264AspectRatioIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264HrdParameters_p(const StdVideoH264HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264HrdParameters* deserialize_StdVideoH264HrdParameters_p(json name){
            return (StdVideoH264HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsVuiFlags_p(const StdVideoH264SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsVuiFlags* deserialize_StdVideoH264SpsVuiFlags_p(json name){
            return (StdVideoH264SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264WeightedBipredIdc_p(const StdVideoH264WeightedBipredIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264WeightedBipredIdc* deserialize_StdVideoH264WeightedBipredIdc_p(json name){
            return (StdVideoH264WeightedBipredIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PpsFlags_p(const StdVideoH264PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PpsFlags* deserialize_StdVideoH264PpsFlags_p(json name){
            return (StdVideoH264PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SliceType_p(const StdVideoH264SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SliceType* deserialize_StdVideoH264SliceType_p(json name){
            return (StdVideoH264SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264CabacInitIdc_p(const StdVideoH264CabacInitIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264CabacInitIdc* deserialize_StdVideoH264CabacInitIdc_p(json name){
            return (StdVideoH264CabacInitIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264DisableDeblockingFilterIdc_p(const StdVideoH264DisableDeblockingFilterIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264DisableDeblockingFilterIdc* deserialize_StdVideoH264DisableDeblockingFilterIdc_p(json name){
            return (StdVideoH264DisableDeblockingFilterIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureType_p(const StdVideoH264PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureType* deserialize_StdVideoH264PictureType_p(json name){
            return (StdVideoH264PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ModificationOfPicNumsIdc_p(const StdVideoH264ModificationOfPicNumsIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ModificationOfPicNumsIdc* deserialize_StdVideoH264ModificationOfPicNumsIdc_p(json name){
            return (StdVideoH264ModificationOfPicNumsIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264MemMgmtControlOp_p(const StdVideoH264MemMgmtControlOp* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264MemMgmtControlOp* deserialize_StdVideoH264MemMgmtControlOp_p(json name){
            return (StdVideoH264MemMgmtControlOp*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfo_p(const StdVideoDecodeH264PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfo* deserialize_StdVideoDecodeH264PictureInfo_p(json name){
            return (StdVideoDecodeH264PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfo_p(const StdVideoDecodeH264ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfo* deserialize_StdVideoDecodeH264ReferenceInfo_p(json name){
            return (StdVideoDecodeH264ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfoFlags_p(const StdVideoDecodeH264PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfoFlags* deserialize_StdVideoDecodeH264PictureInfoFlags_p(json name){
            return (StdVideoDecodeH264PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfoFlags_p(const StdVideoDecodeH264ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfoFlags* deserialize_StdVideoDecodeH264ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH264ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSet_p(const StdVideoH264SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSet* deserialize_StdVideoH264SequenceParameterSet_p(json name){
            return (StdVideoH264SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureParameterSet_p(const StdVideoH264PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureParameterSet* deserialize_StdVideoH264PictureParameterSet_p(json name){
            return (StdVideoH264PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ProfileIdc_p(const StdVideoH265ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ProfileIdc* deserialize_StdVideoH265ProfileIdc_p(json name){
            return (StdVideoH265ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265ProfileIdc(const StdVideoH265ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265ProfileIdc deserialize_StdVideoH265ProfileIdc(json name){
                return (StdVideoH265ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH265VideoParameterSet_p(const StdVideoH265VideoParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VideoParameterSet* deserialize_StdVideoH265VideoParameterSet_p(json name){
            return (StdVideoH265VideoParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSet_p(const StdVideoH265SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSet* deserialize_StdVideoH265SequenceParameterSet_p(json name){
            return (StdVideoH265SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureParameterSet_p(const StdVideoH265PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureParameterSet* deserialize_StdVideoH265PictureParameterSet_p(json name){
            return (StdVideoH265PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265DecPicBufMgr_p(const StdVideoH265DecPicBufMgr* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265DecPicBufMgr* deserialize_StdVideoH265DecPicBufMgr_p(json name){
            return (StdVideoH265DecPicBufMgr*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdParameters_p(const StdVideoH265HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdParameters* deserialize_StdVideoH265HrdParameters_p(json name){
            return (StdVideoH265HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265VpsFlags_p(const StdVideoH265VpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VpsFlags* deserialize_StdVideoH265VpsFlags_p(json name){
            return (StdVideoH265VpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265LevelIdc_p(const StdVideoH265LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265LevelIdc* deserialize_StdVideoH265LevelIdc_p(json name){
            return (StdVideoH265LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265LevelIdc(const StdVideoH265LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265LevelIdc deserialize_StdVideoH265LevelIdc(json name){
                return (StdVideoH265LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH265SpsFlags_p(const StdVideoH265SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsFlags* deserialize_StdVideoH265SpsFlags_p(json name){
            return (StdVideoH265SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ScalingLists_p(const StdVideoH265ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ScalingLists* deserialize_StdVideoH265ScalingLists_p(json name){
            return (StdVideoH265ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSetVui_p(const StdVideoH265SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSetVui* deserialize_StdVideoH265SequenceParameterSetVui_p(json name){
            return (StdVideoH265SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PredictorPaletteEntries_p(const StdVideoH265PredictorPaletteEntries* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PredictorPaletteEntries* deserialize_StdVideoH265PredictorPaletteEntries_p(json name){
            return (StdVideoH265PredictorPaletteEntries*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PpsFlags_p(const StdVideoH265PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PpsFlags* deserialize_StdVideoH265PpsFlags_p(json name){
            return (StdVideoH265PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SubLayerHrdParameters_p(const StdVideoH265SubLayerHrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SubLayerHrdParameters* deserialize_StdVideoH265SubLayerHrdParameters_p(json name){
            return (StdVideoH265SubLayerHrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdFlags_p(const StdVideoH265HrdFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdFlags* deserialize_StdVideoH265HrdFlags_p(json name){
            return (StdVideoH265HrdFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SpsVuiFlags_p(const StdVideoH265SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsVuiFlags* deserialize_StdVideoH265SpsVuiFlags_p(json name){
            return (StdVideoH265SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SliceType_p(const StdVideoH265SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SliceType* deserialize_StdVideoH265SliceType_p(json name){
            return (StdVideoH265SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureType_p(const StdVideoH265PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureType* deserialize_StdVideoH265PictureType_p(json name){
            return (StdVideoH265PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfo_p(const StdVideoDecodeH265PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfo* deserialize_StdVideoDecodeH265PictureInfo_p(json name){
            return (StdVideoDecodeH265PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfo_p(const StdVideoDecodeH265ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfo* deserialize_StdVideoDecodeH265ReferenceInfo_p(json name){
            return (StdVideoDecodeH265ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfoFlags_p(const StdVideoDecodeH265PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfoFlags* deserialize_StdVideoDecodeH265PictureInfoFlags_p(json name){
            return (StdVideoDecodeH265PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfoFlags_p(const StdVideoDecodeH265ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfoFlags* deserialize_StdVideoDecodeH265ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH265ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    
std::map<uintptr_t,PFN_vkInternalAllocationNotification> id_to_PFN_vkInternalAllocationNotification;

    json serialize_PFN_vkInternalAllocationNotification(PFN_vkInternalAllocationNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalAllocationNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalAllocationNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalAllocationNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalAllocationNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_blUiuNV=json({});
    
        if (_struct->pUserData==NULL){
            return_blUiuNV["null"]=true;
            return return_blUiuNV;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_bBnYeXk=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_SzpkXNC=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_hQCRkvE=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalAllocationNotification_response"){
        
handle_PFN_vkInternalAllocationNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalAllocationNotification deserialize_PFN_vkInternalAllocationNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalAllocationNotification_wrapper;
            };
        

            void handle_PFN_vkInternalAllocationNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalAllocationNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalAllocationNotification[data["id"]];
            
            result["type"]="PFN_vkInternalAllocationNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_TFtHdWq=json({});
    
        if (pUserData==NULL){
            return_TFtHdWq["null"]=true;
            return return_TFtHdWq;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_JIeXHRS=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_sozYwoU=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_piqffwr=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalAllocationNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalAllocationNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkInternalFreeNotification> id_to_PFN_vkInternalFreeNotification;

    json serialize_PFN_vkInternalFreeNotification(PFN_vkInternalFreeNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalFreeNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalFreeNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalFreeNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalFreeNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_iUxyDEs=json({});
    
        if (_struct->pUserData==NULL){
            return_iUxyDEs["null"]=true;
            return return_iUxyDEs;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_nxdZeGA=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_VqFdmPm=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_bMjUuoN=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalFreeNotification_response"){
        
handle_PFN_vkInternalFreeNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalFreeNotification deserialize_PFN_vkInternalFreeNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalFreeNotification_wrapper;
            };
        

            void handle_PFN_vkInternalFreeNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalFreeNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalFreeNotification[data["id"]];
            
            result["type"]="PFN_vkInternalFreeNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_vSZICPr=json({});
    
        if (pUserData==NULL){
            return_vSZICPr["null"]=true;
            return return_vSZICPr;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_AayhHDj=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_LVCHxJq=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_LxGqHIS=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalFreeNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalFreeNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkReallocationFunction> id_to_PFN_vkReallocationFunction;

    json serialize_PFN_vkReallocationFunction(PFN_vkReallocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkReallocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkReallocationFunction_wrapper(
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkReallocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkReallocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_CklrxOk=json({});
    
        if (_struct->pUserData==NULL){
            return_CklrxOk["null"]=true;
            return return_CklrxOk;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pOriginal"]=[&]() {
    json return_GrBpxPM=json({});
    
        if (pOriginal==NULL){
            return_GrBpxPM["null"]=true;
            return return_GrBpxPM;
        }
        return serialize_void_p(pOriginal);
}();
data["members"]["size"]=[&]() {
    json return_GoZESDy=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_rKcirXP=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_ZDpTLLE=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkReallocationFunction_response"){
        
auto result= handle_PFN_vkReallocationFunction_response(data, _struct->pUserData, pOriginal, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkReallocationFunction deserialize_PFN_vkReallocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkReallocationFunction_wrapper;
            };
        

            void handle_PFN_vkReallocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkReallocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkReallocationFunction[data["id"]];
            
            result["type"]="PFN_vkReallocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pOriginal;
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,pOriginal,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_lyUHUZP=json({});
    
        if (result_temp==NULL){
            return_lyUHUZP["null"]=true;
            return return_lyUHUZP;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_WdISiGk=json({});
    
        if (pUserData==NULL){
            return_WdISiGk["null"]=true;
            return return_WdISiGk;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pOriginal"]=[&]() {
    json return_aqbYVMb=json({});
    
        if (pOriginal==NULL){
            return_aqbYVMb["null"]=true;
            return return_aqbYVMb;
        }
        return serialize_void_p(pOriginal);
}();
result["params"]["size"]=[&]() {
    json return_TBNvmXj=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_asjkTAE=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_GeVRTje=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkReallocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkReallocationFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkReallocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkReallocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkAllocationFunction> id_to_PFN_vkAllocationFunction;

    json serialize_PFN_vkAllocationFunction(PFN_vkAllocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkAllocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkAllocationFunction_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkAllocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkAllocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_ERJgKjj=json({});
    
        if (_struct->pUserData==NULL){
            return_ERJgKjj["null"]=true;
            return return_ERJgKjj;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_ClHvrob=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_lVYhBQf=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_ZvJWsue=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkAllocationFunction_response"){
        
auto result= handle_PFN_vkAllocationFunction_response(data, _struct->pUserData, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkAllocationFunction deserialize_PFN_vkAllocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkAllocationFunction_wrapper;
            };
        

            void handle_PFN_vkAllocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkAllocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkAllocationFunction[data["id"]];
            
            result["type"]="PFN_vkAllocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_FLpvtzM=json({});
    
        if (result_temp==NULL){
            return_FLpvtzM["null"]=true;
            return return_FLpvtzM;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_vpbJIvq=json({});
    
        if (pUserData==NULL){
            return_vpbJIvq["null"]=true;
            return return_vpbJIvq;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_XMyhoiO=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_JCanbrW=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_LqxcXtt=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkAllocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkAllocationFunction_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkAllocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkAllocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkFreeFunction> id_to_PFN_vkFreeFunction;

    json serialize_PFN_vkFreeFunction(PFN_vkFreeFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkFreeFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkFreeFunction_wrapper(
    void*                                       pUserData,
    void*                                       pMemory){
            json data=json({});
            data["type"]="PFN_vkFreeFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkFreeFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_Tqnnujr=json({});
    
        if (_struct->pUserData==NULL){
            return_Tqnnujr["null"]=true;
            return return_Tqnnujr;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pMemory"]=[&]() {
    json return_eZElwzd=json({});
    
        if (pMemory==NULL){
            return_eZElwzd["null"]=true;
            return return_eZElwzd;
        }
        return serialize_void_p(pMemory);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkFreeFunction_response"){
        
handle_PFN_vkFreeFunction_response(data, _struct->pUserData, pMemory);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkFreeFunction deserialize_PFN_vkFreeFunction(json name){
            //Will only be called by the server
            
            return PFN_vkFreeFunction_wrapper;
            };
        

            void handle_PFN_vkFreeFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkFreeFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkFreeFunction[data["id"]];
            
            result["type"]="PFN_vkFreeFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pMemory;
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();
funcpointer(pUserData,pMemory);
result["params"]["pUserData"]=[&]() {
    json return_dimryBM=json({});
    
        if (pUserData==NULL){
            return_dimryBM["null"]=true;
            return return_dimryBM;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pMemory"]=[&]() {
    json return_BfShgiF=json({});
    
        if (pMemory==NULL){
            return_BfShgiF["null"]=true;
            return return_BfShgiF;
        }
        return serialize_void_p(pMemory);
}();
writeToConn(result);
};

        void handle_PFN_vkFreeFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pMemory) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkFreeFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();

}
std::map<uintptr_t,PFN_vkDebugReportCallbackEXT> id_to_PFN_vkDebugReportCallbackEXT;

    json serialize_PFN_vkDebugReportCallbackEXT(PFN_vkDebugReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugReportCallbackEXT_wrapper(
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugReportCallbackCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugReportCallbackEXT_id;
            
data["members"]["flags"]=[&]() {
    json return_yjpNMpG=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
data["members"]["objectType"]=[&]() {
    json return_OtWwjLm=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
data["members"]["object"]=[&]() {
    json return_NFtmpLi=json({});
    return serialize_uint64_t(object);}();
data["members"]["location"]=[&]() {
    json return_YMGsBiX=json({});
    return serialize_size_t(location);}();
data["members"]["messageCode"]=[&]() {
    json return_CZrVfsM=json({});
    return serialize_int32_t(messageCode);}();
data["members"]["pLayerPrefix"]=[&]() {
    json return_BymTiMJ=json({});
    
        if (pLayerPrefix==NULL){
            return_BymTiMJ["null"]=true;
            return return_BymTiMJ;
        }
        return serialize_char_p(pLayerPrefix);
}();
data["members"]["pMessage"]=[&]() {
    json return_vTRSqPz=json({});
    
        if (pMessage==NULL){
            return_vTRSqPz["null"]=true;
            return return_vTRSqPz;
        }
        return serialize_char_p(pMessage);
}();
data["members"]["pUserData"]=[&]() {
    json return_mLqJEad=json({});
    
        if (_struct->pUserData==NULL){
            return_mLqJEad["null"]=true;
            return return_mLqJEad;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugReportCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugReportCallbackEXT_response(data, flags, objectType, object, location, messageCode, pLayerPrefix, pMessage, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugReportCallbackEXT deserialize_PFN_vkDebugReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugReportCallbackEXT_response";
            
        
 VkDebugReportFlagsEXT                       flags;
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
 VkDebugReportObjectTypeEXT                  objectType;
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
 uint64_t                                    object;
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
 size_t                                      location;
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
 int32_t                                     messageCode;
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();
const char*                                 pLayerPrefix;
[&]() {
char* temp_NnDqzEC;[&]() {

        if (data["members"]["pLayerPrefix"].contains("null")){
        temp_NnDqzEC=NULL;
        }
    temp_NnDqzEC=deserialize_char_p(data["members"]["pLayerPrefix"]);
}();pLayerPrefix=temp_NnDqzEC;}();
const char*                                 pMessage;
[&]() {
char* temp_cGMIiZb;[&]() {

        if (data["members"]["pMessage"].contains("null")){
        temp_cGMIiZb=NULL;
        }
    temp_cGMIiZb=deserialize_char_p(data["members"]["pMessage"]);
}();pMessage=temp_cGMIiZb;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(flags,objectType,object,location,messageCode,pLayerPrefix,pMessage,pUserData);
result["result"]=[&]() {
    json return_KhyyZSu=json({});
    return_KhyyZSu=[&]() {
    json return_vHGuTUT=json({});
    return serialize_uint32_t(result_temp);}();return return_KhyyZSu;}();
result["params"]["flags"]=[&]() {
    json return_tRUqHwJ=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
result["params"]["objectType"]=[&]() {
    json return_WqxoKYI=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
result["params"]["object"]=[&]() {
    json return_cXOtACe=json({});
    return serialize_uint64_t(object);}();
result["params"]["location"]=[&]() {
    json return_tPujZGK=json({});
    return serialize_size_t(location);}();
result["params"]["messageCode"]=[&]() {
    json return_hfFDhBV=json({});
    return serialize_int32_t(messageCode);}();
result["params"]["pLayerPrefix"]=[&]() {
    json return_SyUOyCC=json({});
    
        if (pLayerPrefix==NULL){
            return_SyUOyCC["null"]=true;
            return return_SyUOyCC;
        }
        return serialize_char_p(pLayerPrefix);
}();
result["params"]["pMessage"]=[&]() {
    json return_WBuJBRy=json({});
    
        if (pMessage==NULL){
            return_WBuJBRy["null"]=true;
            return return_WBuJBRy;
        }
        return serialize_char_p(pMessage);
}();
result["params"]["pUserData"]=[&]() {
    json return_ifizLck=json({});
    
        if (pUserData==NULL){
            return_ifizLck["null"]=true;
            return return_ifizLck;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugReportCallbackEXT_response(json data, 
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();


[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDebugUtilsMessengerCallbackEXT> id_to_PFN_vkDebugUtilsMessengerCallbackEXT;

    json serialize_PFN_vkDebugUtilsMessengerCallbackEXT(PFN_vkDebugUtilsMessengerCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugUtilsMessengerCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugUtilsMessengerCallbackEXT_wrapper(
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugUtilsMessengerCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id;
            
data["members"]["messageSeverity"]=[&]() {
    json return_JTJZOzV=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
data["members"]["messageTypes"]=[&]() {
    json return_vsGfMvG=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
data["members"]["pCallbackData"]=[&]() {
    json return_PRwfSwn=json({});
    
        if (pCallbackData==NULL){
            return_PRwfSwn["null"]=true;
            return return_PRwfSwn;
        }
        return_PRwfSwn=[&]() {
    json return_xOebDYf=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_PRwfSwn;}();
data["members"]["pUserData"]=[&]() {
    json return_PCMumjd=json({});
    
        if (_struct->pUserData==NULL){
            return_PCMumjd["null"]=true;
            return return_PCMumjd;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugUtilsMessengerCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(data, messageSeverity, messageTypes, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugUtilsMessengerCallbackEXT deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugUtilsMessengerCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugUtilsMessengerCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugUtilsMessengerCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugUtilsMessengerCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_response";
            
        
 VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity;
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
 VkDebugUtilsMessageTypeFlagsEXT                  messageTypes;
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();
const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData;
[&]() {
VkDebugUtilsMessengerCallbackDataEXT* temp_WbYianL;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_WbYianL=NULL;
        }
    [&]() {
*(temp_WbYianL)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_WbYianL;}();
 void*                                            pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(messageSeverity,messageTypes,pCallbackData,pUserData);
result["result"]=[&]() {
    json return_xcclUYa=json({});
    return_xcclUYa=[&]() {
    json return_pWXGHQC=json({});
    return serialize_uint32_t(result_temp);}();return return_xcclUYa;}();
result["params"]["messageSeverity"]=[&]() {
    json return_JulUnFt=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
result["params"]["messageTypes"]=[&]() {
    json return_pfZACuv=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
result["params"]["pCallbackData"]=[&]() {
    json return_vUqPdqV=json({});
    
        if (pCallbackData==NULL){
            return_vUqPdqV["null"]=true;
            return return_vUqPdqV;
        }
        return_vUqPdqV=[&]() {
    json return_fGqzmhn=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_vUqPdqV;}();
result["params"]["pUserData"]=[&]() {
    json return_dFCVBur=json({});
    
        if (pUserData==NULL){
            return_dFCVBur["null"]=true;
            return return_dFCVBur;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(json data, 
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugUtilsMessengerCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDeviceMemoryReportCallbackEXT> id_to_PFN_vkDeviceMemoryReportCallbackEXT;

    json serialize_PFN_vkDeviceMemoryReportCallbackEXT(PFN_vkDeviceMemoryReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDeviceMemoryReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDeviceMemoryReportCallbackEXT_wrapper(
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDeviceMemoryReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDeviceDeviceMemoryReportCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDeviceMemoryReportCallbackEXT_id;
            
data["members"]["pCallbackData"]=[&]() {
    json return_XXXeEav=json({});
    
        if (pCallbackData==NULL){
            return_XXXeEav["null"]=true;
            return return_XXXeEav;
        }
        return_XXXeEav=[&]() {
    json return_pNVgkty=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_XXXeEav;}();
data["members"]["pUserData"]=[&]() {
    json return_OwAmymN=json({});
    
        if (_struct->pUserData==NULL){
            return_OwAmymN["null"]=true;
            return return_OwAmymN;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDeviceMemoryReportCallbackEXT_response"){
        
handle_PFN_vkDeviceMemoryReportCallbackEXT_response(data, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkDeviceMemoryReportCallbackEXT deserialize_PFN_vkDeviceMemoryReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDeviceMemoryReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDeviceMemoryReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDeviceMemoryReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDeviceMemoryReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDeviceMemoryReportCallbackEXT_response";
            
        
const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData;
[&]() {
VkDeviceMemoryReportCallbackDataEXT* temp_fhCWKws;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_fhCWKws=NULL;
        }
    [&]() {
*(temp_fhCWKws)=deserialize_VkDeviceMemoryReportCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_fhCWKws;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
funcpointer(pCallbackData,pUserData);
result["params"]["pCallbackData"]=[&]() {
    json return_iWITwCp=json({});
    
        if (pCallbackData==NULL){
            return_iWITwCp["null"]=true;
            return return_iWITwCp;
        }
        return_iWITwCp=[&]() {
    json return_wqJqbND=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_iWITwCp;}();
result["params"]["pUserData"]=[&]() {
    json return_NBSLAjt=json({});
    
        if (pUserData==NULL){
            return_NBSLAjt["null"]=true;
            return return_NBSLAjt;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        void handle_PFN_vkDeviceMemoryReportCallbackEXT_response(json data, 
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDeviceMemoryReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();

}
std::map<uintptr_t,PFN_vkGetInstanceProcAddrLUNARG> id_to_PFN_vkGetInstanceProcAddrLUNARG;

    json serialize_PFN_vkGetInstanceProcAddrLUNARG(PFN_vkGetInstanceProcAddrLUNARG name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkGetInstanceProcAddrLUNARG[(uintptr_t)name]=name;
        return result;
    }
    

        PFN_vkGetInstanceProcAddrLUNARG deserialize_PFN_vkGetInstanceProcAddrLUNARG(json name){
            //Will only be called by the server
            
            return vkGetInstanceProcAddr;
            };
        

        json serialize_VkInstance(VkInstance data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkInstance deserialize_VkInstance(json data){
               return (VkInstance)data["value"].get<uintptr_t>();
       }

        json serialize_VkPhysicalDevice(VkPhysicalDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPhysicalDevice deserialize_VkPhysicalDevice(json data){
               return (VkPhysicalDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkDevice(VkDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDevice deserialize_VkDevice(json data){
               return (VkDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueue(VkQueue data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueue deserialize_VkQueue(json data){
               return (VkQueue)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandBuffer(VkCommandBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandBuffer deserialize_VkCommandBuffer(json data){
               return (VkCommandBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeviceMemory(VkDeviceMemory data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            #ifdef CLIENT
                currStruct()->mem_to_sync->insert((uintptr_t)data);
            #endif
            

            return result;
        }
       

       VkDeviceMemory deserialize_VkDeviceMemory(json data){
               return (VkDeviceMemory)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandPool(VkCommandPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandPool deserialize_VkCommandPool(json data){
               return (VkCommandPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkBuffer(VkBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBuffer deserialize_VkBuffer(json data){
               return (VkBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkBufferView(VkBufferView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBufferView deserialize_VkBufferView(json data){
               return (VkBufferView)data["value"].get<uintptr_t>();
       }

        json serialize_VkImage(VkImage data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImage deserialize_VkImage(json data){
               return (VkImage)data["value"].get<uintptr_t>();
       }

        json serialize_VkImageView(VkImageView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImageView deserialize_VkImageView(json data){
               return (VkImageView)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderModule(VkShaderModule data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderModule deserialize_VkShaderModule(json data){
               return (VkShaderModule)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipeline(VkPipeline data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipeline deserialize_VkPipeline(json data){
               return (VkPipeline)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineLayout(VkPipelineLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineLayout deserialize_VkPipelineLayout(json data){
               return (VkPipelineLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkSampler(VkSampler data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSampler deserialize_VkSampler(json data){
               return (VkSampler)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSet(VkDescriptorSet data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSet deserialize_VkDescriptorSet(json data){
               return (VkDescriptorSet)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSetLayout(VkDescriptorSetLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSetLayout deserialize_VkDescriptorSetLayout(json data){
               return (VkDescriptorSetLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorPool(VkDescriptorPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorPool deserialize_VkDescriptorPool(json data){
               return (VkDescriptorPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFence(VkFence data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFence deserialize_VkFence(json data){
               return (VkFence)data["value"].get<uintptr_t>();
       }

        json serialize_VkSemaphore(VkSemaphore data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSemaphore deserialize_VkSemaphore(json data){
               return (VkSemaphore)data["value"].get<uintptr_t>();
       }

        json serialize_VkEvent(VkEvent data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkEvent deserialize_VkEvent(json data){
               return (VkEvent)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueryPool(VkQueryPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueryPool deserialize_VkQueryPool(json data){
               return (VkQueryPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFramebuffer(VkFramebuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFramebuffer deserialize_VkFramebuffer(json data){
               return (VkFramebuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkRenderPass(VkRenderPass data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkRenderPass deserialize_VkRenderPass(json data){
               return (VkRenderPass)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineCache(VkPipelineCache data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineCache deserialize_VkPipelineCache(json data){
               return (VkPipelineCache)data["value"].get<uintptr_t>();
       }

        json serialize_VkIndirectCommandsLayoutNV(VkIndirectCommandsLayoutNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkIndirectCommandsLayoutNV deserialize_VkIndirectCommandsLayoutNV(json data){
               return (VkIndirectCommandsLayoutNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplate(VkDescriptorUpdateTemplate data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplate deserialize_VkDescriptorUpdateTemplate(json data){
               return (VkDescriptorUpdateTemplate)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplateKHR(VkDescriptorUpdateTemplateKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplateKHR deserialize_VkDescriptorUpdateTemplateKHR(json data){
               return (VkDescriptorUpdateTemplateKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversion(VkSamplerYcbcrConversion data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversion deserialize_VkSamplerYcbcrConversion(json data){
               return (VkSamplerYcbcrConversion)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversionKHR(VkSamplerYcbcrConversionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversionKHR deserialize_VkSamplerYcbcrConversionKHR(json data){
               return (VkSamplerYcbcrConversionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkValidationCacheEXT(VkValidationCacheEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkValidationCacheEXT deserialize_VkValidationCacheEXT(json data){
               return (VkValidationCacheEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureKHR(VkAccelerationStructureKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureKHR deserialize_VkAccelerationStructureKHR(json data){
               return (VkAccelerationStructureKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureNV(VkAccelerationStructureNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureNV deserialize_VkAccelerationStructureNV(json data){
               return (VkAccelerationStructureNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkPerformanceConfigurationINTEL(VkPerformanceConfigurationINTEL data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPerformanceConfigurationINTEL deserialize_VkPerformanceConfigurationINTEL(json data){
               return (VkPerformanceConfigurationINTEL)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeferredOperationKHR(VkDeferredOperationKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDeferredOperationKHR deserialize_VkDeferredOperationKHR(json data){
               return (VkDeferredOperationKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlot(VkPrivateDataSlot data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlot deserialize_VkPrivateDataSlot(json data){
               return (VkPrivateDataSlot)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlotEXT(VkPrivateDataSlotEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlotEXT deserialize_VkPrivateDataSlotEXT(json data){
               return (VkPrivateDataSlotEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuModuleNVX(VkCuModuleNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuModuleNVX deserialize_VkCuModuleNVX(json data){
               return (VkCuModuleNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuFunctionNVX(VkCuFunctionNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuFunctionNVX deserialize_VkCuFunctionNVX(json data){
               return (VkCuFunctionNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkOpticalFlowSessionNV(VkOpticalFlowSessionNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkOpticalFlowSessionNV deserialize_VkOpticalFlowSessionNV(json data){
               return (VkOpticalFlowSessionNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkMicromapEXT(VkMicromapEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkMicromapEXT deserialize_VkMicromapEXT(json data){
               return (VkMicromapEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderEXT(VkShaderEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderEXT deserialize_VkShaderEXT(json data){
               return (VkShaderEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayKHR(VkDisplayKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayKHR deserialize_VkDisplayKHR(json data){
               return (VkDisplayKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayModeKHR(VkDisplayModeKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayModeKHR deserialize_VkDisplayModeKHR(json data){
               return (VkDisplayModeKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSurfaceKHR(VkSurfaceKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSurfaceKHR deserialize_VkSurfaceKHR(json data){
               return (VkSurfaceKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSwapchainKHR(VkSwapchainKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSwapchainKHR deserialize_VkSwapchainKHR(json data){
               return (VkSwapchainKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugReportCallbackEXT(VkDebugReportCallbackEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugReportCallbackEXT deserialize_VkDebugReportCallbackEXT(json data){
               return (VkDebugReportCallbackEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugUtilsMessengerEXT(VkDebugUtilsMessengerEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugUtilsMessengerEXT deserialize_VkDebugUtilsMessengerEXT(json data){
               return (VkDebugUtilsMessengerEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionKHR(VkVideoSessionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionKHR deserialize_VkVideoSessionKHR(json data){
               return (VkVideoSessionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionParametersKHR(VkVideoSessionParametersKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionParametersKHR deserialize_VkVideoSessionParametersKHR(json data){
               return (VkVideoSessionParametersKHR)data["value"].get<uintptr_t>();
       }
